
WallFollowing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ee  00800100  00005900  00005994  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005900  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002ff  008001ee  008001ee  00005a82  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  00005a82  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000002e0  00000000  00000000  00005ac2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f63  00000000  00000000  00005da2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002cc  00000000  00000000  00006d05  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000cae  00000000  00000000  00006fd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f0  00000000  00000000  00007c80  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000a44  00000000  00000000  00007e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ac8  00000000  00000000  000088b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 31 03 	jmp	0x662	; 0x662 <__ctors_end>
       4:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       8:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      10:	0c 94 1f 18 	jmp	0x303e	; 0x303e <__vector_4>
      14:	0c 94 48 18 	jmp	0x3090	; 0x3090 <__vector_5>
      18:	0c 94 71 18 	jmp	0x30e2	; 0x30e2 <__vector_6>
      1c:	0c 94 9a 18 	jmp	0x3134	; 0x3134 <__vector_7>
      20:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      24:	0c 94 00 17 	jmp	0x2e00	; 0x2e00 <__vector_9>
      28:	0c 94 29 17 	jmp	0x2e52	; 0x2e52 <__vector_10>
      2c:	0c 94 52 17 	jmp	0x2ea4	; 0x2ea4 <__vector_11>
      30:	0c 94 cd 17 	jmp	0x2f9a	; 0x2f9a <__vector_12>
      34:	0c 94 7b 17 	jmp	0x2ef6	; 0x2ef6 <__vector_13>
      38:	0c 94 a4 17 	jmp	0x2f48	; 0x2f48 <__vector_14>
      3c:	0c 94 f6 17 	jmp	0x2fec	; 0x2fec <__vector_15>
      40:	0c 94 85 16 	jmp	0x2d0a	; 0x2d0a <__vector_16>
      44:	0c 94 ae 16 	jmp	0x2d5c	; 0x2d5c <__vector_17>
      48:	0c 94 d7 16 	jmp	0x2dae	; 0x2dae <__vector_18>
      4c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      50:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      54:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      58:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      5c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      60:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      64:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      68:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      6c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      70:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      74:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      78:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      7c:	1b 14       	cp	r1, r11
      7e:	1e 14       	cp	r1, r14
      80:	21 14       	cp	r2, r1
      82:	24 14       	cp	r2, r4
      84:	2d 14       	cp	r2, r13
      86:	27 14       	cp	r2, r7
      88:	2a 14       	cp	r2, r10
      8a:	30 14       	cp	r3, r0
      8c:	33 14       	cp	r3, r3
      8e:	36 14       	cp	r3, r6
      90:	39 14       	cp	r3, r9
      92:	3c 14       	cp	r3, r12
      94:	3f 14       	cp	r3, r15
      96:	42 14       	cp	r4, r2
      98:	45 14       	cp	r4, r5
      9a:	48 14       	cp	r4, r8
      9c:	4b 14       	cp	r4, r11
      9e:	4e 14       	cp	r4, r14
      a0:	51 14       	cp	r5, r1
      a2:	62 14       	cp	r6, r2
      a4:	65 14       	cp	r6, r5
      a6:	68 14       	cp	r6, r8
      a8:	6b 14       	cp	r6, r11
      aa:	74 14       	cp	r7, r4
      ac:	6e 14       	cp	r6, r14
      ae:	71 14       	cp	r7, r1
      b0:	77 14       	cp	r7, r7
      b2:	7a 14       	cp	r7, r10
      b4:	7d 14       	cp	r7, r13
      b6:	80 14       	cp	r8, r0
      b8:	83 14       	cp	r8, r3
      ba:	86 14       	cp	r8, r6
      bc:	89 14       	cp	r8, r9
      be:	8c 14       	cp	r8, r12
      c0:	8f 14       	cp	r8, r15
      c2:	92 14       	cp	r9, r2
      c4:	95 14       	cp	r9, r5
      c6:	98 14       	cp	r9, r8
      c8:	07 63       	ori	r16, 0x37	; 55
      ca:	42 36       	cpi	r20, 0x62	; 98
      cc:	b7 9b       	sbis	0x16, 7	; 22
      ce:	d8 a7       	std	Y+40, r29	; 0x28
      d0:	1a 39       	cpi	r17, 0x9A	; 154
      d2:	68 56       	subi	r22, 0x68	; 104
      d4:	18 ae       	std	Y+56, r1	; 0x38
      d6:	ba ab       	std	Y+50, r27	; 0x32
      d8:	55 8c       	ldd	r5, Z+29	; 0x1d
      da:	1d 3c       	cpi	r17, 0xCD	; 205
      dc:	b7 cc       	rjmp	.-1682   	; 0xfffffa4c <__eeprom_end+0xff7efa4c>
      de:	57 63       	ori	r21, 0x37	; 55
      e0:	bd 6d       	ori	r27, 0xDD	; 221
      e2:	ed fd       	.word	0xfded	; ????
      e4:	75 3e       	cpi	r23, 0xE5	; 229
      e6:	f6 17       	cp	r31, r22
      e8:	72 31       	cpi	r23, 0x12	; 18
      ea:	bf 00       	.word	0x00bf	; ????
      ec:	00 00       	nop
      ee:	80 3f       	cpi	r24, 0xF0	; 240
      f0:	08 00       	.word	0x0008	; ????
      f2:	00 00       	nop
      f4:	be 92       	st	-X, r11
      f6:	24 49       	sbci	r18, 0x94	; 148
      f8:	12 3e       	cpi	r17, 0xE2	; 226
      fa:	ab aa       	std	Y+51, r10	; 0x33
      fc:	aa 2a       	or	r10, r26
      fe:	be cd       	rjmp	.-1156   	; 0xfffffc7c <__eeprom_end+0xff7efc7c>
     100:	cc cc       	rjmp	.-1640   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     102:	4c 3e       	cpi	r20, 0xEC	; 236
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	be ab       	std	Y+54, r27	; 0x36
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	aa 3e       	cpi	r26, 0xEA	; 234
     10e:	00 00       	nop
     110:	00 00       	nop
     112:	bf 00       	.word	0x00bf	; ????
     114:	00 00       	nop
     116:	80 3f       	cpi	r24, 0xF0	; 240
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	00 08       	sbc	r0, r0
     11e:	41 78       	andi	r20, 0x81	; 129
     120:	d3 bb       	out	0x13, r29	; 19
     122:	43 87       	std	Z+11, r20	; 0x0b
     124:	d1 13       	cpse	r29, r17
     126:	3d 19       	sub	r19, r13
     128:	0e 3c       	cpi	r16, 0xCE	; 206
     12a:	c3 bd       	out	0x23, r28	; 35
     12c:	42 82       	std	Z+2, r4	; 0x02
     12e:	ad 2b       	or	r26, r29
     130:	3e 68       	ori	r19, 0x8E	; 142
     132:	ec 82       	std	Y+4, r14	; 0x04
     134:	76 be       	out	0x36, r7	; 54
     136:	d9 8f       	std	Y+25, r29	; 0x19
     138:	e1 a9       	ldd	r30, Z+49	; 0x31
     13a:	3e 4c       	sbci	r19, 0xCE	; 206
     13c:	80 ef       	ldi	r24, 0xF0	; 240
     13e:	ff be       	out	0x3f, r15	; 63
     140:	01 c4       	rjmp	.+2050   	; 0x944 <read_pixel_1+0x44>
     142:	ff 7f       	andi	r31, 0xFF	; 255
     144:	3f 00       	.word	0x003f	; ????
     146:	00 00       	nop
	...

0000014a <char_bitmap>:
     14a:	16 05 01 00 00 00 00 00 00 00 fa 00 00 00 e0 00     ................
     15a:	e0 00 28 fe 28 fe 28 24 54 fe 54 48 c4 c8 10 26     ..(.(.($T.TH...&
     16a:	46 6c 92 aa 44 a0 00 a0 c0 00 00 00 38 44 82 00     Fl..D.......8D..
     17a:	00 82 44 38 00 28 10 7c 10 28 10 10 7c 10 10 00     ..D8.(.|.(..|...
     18a:	0a 0c 00 00 10 10 10 10 10 00 06 06 00 00 04 08     ................
     19a:	10 20 40 7c 8a 92 a2 7c 00 42 fe 02 00 42 86 8a     . @|...|.B...B..
     1aa:	92 62 84 82 a2 d2 8c 18 28 48 fe 08 e4 a2 a2 a2     .b......(H......
     1ba:	9c 3c 52 92 92 0c 80 8e 90 a0 c0 6c 92 92 92 6c     .<R........l...l
     1ca:	60 92 92 94 78 00 6c 6c 00 00 00 6a 6c 00 00 10     `...x.ll...jl...
     1da:	28 44 82 00 28 28 28 28 28 00 82 44 28 10 40 80     (D..(((((..D(.@.
     1ea:	8a 90 60 4c 92 9e 82 7c 7e 88 88 88 7e fe 92 92     ..`L...|~...~...
     1fa:	92 6c 7c 82 82 82 44 fe 82 82 44 38 fe 92 92 92     .l|...D...D8....
     20a:	82 fe 90 90 90 80 7c 82 92 92 5e fe 10 10 10 fe     ......|...^.....
     21a:	00 82 fe 82 00 04 02 82 fc 80 fe 10 28 44 82 fe     ............(D..
     22a:	02 02 02 02 fe 40 30 40 fe fe 20 10 08 fe 7c 82     .....@0@.. ...|.
     23a:	82 82 7c fe 90 90 90 60 7c 82 8a 84 7a fe 90 98     ..|....`|...z...
     24a:	94 62 62 92 92 92 8c 80 80 fe 80 80 fc 02 02 02     .bb.............
     25a:	fc f8 04 02 04 f8 fc 02 1c 02 fc c6 28 10 28 c6     ............(.(.
     26a:	e0 10 0e 10 e0 86 8a 92 a2 c2 00 fe 82 82 00 40     ...............@
     27a:	20 10 08 04 00 82 82 fe 00 20 40 80 40 20 02 02      ........ @.@ ..
     28a:	02 02 02 00 80 40 20 00 04 2a 2a 2a 1e fe 12 22     .....@ ..***..."
     29a:	22 1c 1c 22 22 22 04 1c 22 22 12 fe 1c 2a 2a 2a     ".."""..""...***
     2aa:	18 10 7e 90 80 40 30 4a 4a 4a 7c fe 10 20 20 1e     ..~..@0JJJ|..  .
     2ba:	00 22 be 02 00 04 02 22 bc 00 fe 08 14 22 00 00     ."....."....."..
     2ca:	82 fe 02 00 3e 20 18 20 1e 3e 10 20 20 1e 1c 22     ....> . .>.  .."
     2da:	22 22 1c 3e 28 28 28 10 10 28 28 18 3e 3e 10 20     "".>(((..((.>>. 
     2ea:	20 10 12 2a 2a 2a 04 20 fc 22 02 04 3c 02 02 04      ..***. ."..<...
     2fa:	3e 38 04 02 04 38 3c 02 0c 02 3c 22 14 08 14 22     >8...8<...<"..."
     30a:	30 0a 0a 0a 3c 22 26 2a 32 22 00 10 6c 82 00 00     0...<"&*2"..l...
     31a:	00 fe 00 00 00 82 6c 10 00 08 10 10 08 10 00 00     ......l.........
     32a:	00 00 00 7f 81 81 81 7f 7f 83 83 83 7f 7f 87 87     ................
     33a:	87 7f 7f 8f 8f 8f 7f 7f 9f 9f 9f 7f 7f bf bf bf     ................
     34a:	7f 7f ff ff ff 7f 20 40 ff 40 20 62 15 17 15 65     ...... @.@ b...e
     35a:	00 fb fb 00 00                                      .....

0000035f <CEENBoT_Inc_logo_bitmap>:
     35f:	00 00 00 00 00 c0 ff 03 00 e0 ff 07 00 f0 ff 0f     ................
     36f:	00 f8 ff 1f 00 78 00 1e 00 78 00 1e 00 78 00 1e     .....x...x...x..
     37f:	00 78 00 1e 00 78 00 1e 00 78 00 1e 00 78 00 1e     .x...x...x...x..
     38f:	00 78 00 1e 00 78 00 1e 00 00 00 00 00 00 00 00     .x...x..........
     39f:	00 80 ff 03 00 e0 ff 07 00 f0 ff 0f 00 f8 ff 1f     ................
     3af:	00 f8 3c 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     ..<..x<..x<..x<.
     3bf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     3cf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     3df:	00 00 00 00 00 e0 ff 03 00 f0 ff 07 00 f8 ff 0f     ................
     3ef:	00 f8 ff 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .....x<..x<..x<.
     3ff:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     40f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     41f:	00 00 00 00 00 f8 ff 03 00 f8 ff 0f 00 f8 ff 1f     ................
     42f:	00 f8 ff 1f 00 00 00 1e 00 00 00 1e 00 00 80 1f     ................
     43f:	00 00 f0 1f 00 00 ff 0f 00 e0 ff 07 00 f0 ff 00     ................
     44f:	00 f8 0f 00 00 f8 00 00 00 78 00 00 00 78 00 00     .........x...x..
     45f:	00 f8 ff 1f 00 f8 ff 1f 00 f0 ff 1f 00 e0 ff 1f     ................
	...
     477:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     487:	00 78 00 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x...x<..x<..x<.
     497:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 f8 7e 1f     .x<..x<..x<...~.
     4a7:	00 f8 ff 1f 00 f0 ff 0f 00 e0 e7 03 00 00 00 00     ................
     4b7:	00 00 00 38 00 ee ff 6c 00 2a 80 45 00 3a 00 47     ...8...l.*.E.:.G
     4c7:	fc 03 ff 6c fc 83 ff 39 00 de ff 0b 7c d0 81 0b     ...l...9....|...
     4d7:	fc d0 81 0b c0 d0 81 0b fc d0 81 0b 7c de ff 0b     ............|...
     4e7:	00 82 ff 39 70 02 ff 6c f8 3a 00 47 dc 2a 80 45     ...9p..l.:.G.*.E
     4f7:	cc ee ff 6c cc 00 00 38 00 00 00 00 0c 00 00 1e     ...l...8........
     507:	0c 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     517:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     527:	00 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     537:	00 00 00 5e 00 00 00 40 00 00 00 7c 00 00 00 40     ...^...@...|...@
     547:	00 00 00 40 00 00 00 7c 00 00 00 30 00 00 00 10     ...@...|...0....
     557:	00 00 00 30 00 00 00 7c                             ...0...|

0000055f <__c.1790>:
     55f:	6e 61 6e 00                                         nan.

00000563 <__c.1788>:
     563:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     573:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     583:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     593:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     5a3:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     5b3:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     5c3:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     5d3:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     5e3:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     5f3:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     603:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     613:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     623:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     633:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     643:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     653:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

00000662 <__ctors_end>:
     662:	11 24       	eor	r1, r1
     664:	1f be       	out	0x3f, r1	; 63
     666:	cf ef       	ldi	r28, 0xFF	; 255
     668:	d8 e0       	ldi	r29, 0x08	; 8
     66a:	de bf       	out	0x3e, r29	; 62
     66c:	cd bf       	out	0x3d, r28	; 61

0000066e <__do_copy_data>:
     66e:	11 e0       	ldi	r17, 0x01	; 1
     670:	a0 e0       	ldi	r26, 0x00	; 0
     672:	b1 e0       	ldi	r27, 0x01	; 1
     674:	e0 e0       	ldi	r30, 0x00	; 0
     676:	f9 e5       	ldi	r31, 0x59	; 89
     678:	02 c0       	rjmp	.+4      	; 0x67e <.do_copy_data_start>

0000067a <.do_copy_data_loop>:
     67a:	05 90       	lpm	r0, Z+
     67c:	0d 92       	st	X+, r0

0000067e <.do_copy_data_start>:
     67e:	ae 3e       	cpi	r26, 0xEE	; 238
     680:	b1 07       	cpc	r27, r17
     682:	d9 f7       	brne	.-10     	; 0x67a <.do_copy_data_loop>

00000684 <__do_clear_bss>:
     684:	14 e0       	ldi	r17, 0x04	; 4
     686:	ae ee       	ldi	r26, 0xEE	; 238
     688:	b1 e0       	ldi	r27, 0x01	; 1
     68a:	01 c0       	rjmp	.+2      	; 0x68e <.do_clear_bss_start>

0000068c <.do_clear_bss_loop>:
     68c:	1d 92       	st	X+, r1

0000068e <.do_clear_bss_start>:
     68e:	ad 3e       	cpi	r26, 0xED	; 237
     690:	b1 07       	cpc	r27, r17
     692:	e1 f7       	brne	.-8      	; 0x68c <.do_clear_bss_loop>
     694:	0e 94 c5 0e 	call	0x1d8a	; 0x1d8a <main>
     698:	0c 94 7e 2c 	jmp	0x58fc	; 0x58fc <_exit>

0000069c <__bad_interrupt>:
     69c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006a0 <get_ambient_temp>:
* Output Return:	I2C_STATUS
* Overview:			Reads the ambient temperature
********************************************************************/

I2C_STATUS get_ambient_temp( unsigned char *ambient_temp )
{
     6a0:	1f 93       	push	r17
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6a8:	88 e6       	ldi	r24, 0x68	; 104
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     6b0:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     6b2:	88 23       	and	r24, r24
     6b4:	a1 f4       	brne	.+40     	; 0x6de <get_ambient_temp+0x3e>
	{

		// Send the register value (being 1).  This is
		// the register that contains the ambient temperature.
		i2c_stat = I2C_MSTR_send( __TPA81_AMBIENT );
     6b6:	81 e0       	ldi	r24, 0x01	; 1
     6b8:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <I2C_MSTR_send>
     6bc:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     6be:	88 23       	and	r24, r24
     6c0:	71 f4       	brne	.+28     	; 0x6de <get_ambient_temp+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     6c2:	88 e6       	ldi	r24, 0x68	; 104
     6c4:	61 e0       	ldi	r22, 0x01	; 1
     6c6:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     6ca:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     6cc:	88 23       	and	r24, r24
     6ce:	39 f4       	brne	.+14     	; 0x6de <get_ambient_temp+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( ambient_temp, FALSE );
     6d0:	ce 01       	movw	r24, r28
     6d2:	60 e0       	ldi	r22, 0x00	; 0
     6d4:	0e 94 97 15 	call	0x2b2e	; 0x2b2e <I2C_MSTR_get>
     6d8:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     6da:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*ambient_temp = 0;
     6dc:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     6de:	0e 94 2f 16 	call	0x2c5e	; 0x2c5e <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_ambient_temp()
     6e2:	81 2f       	mov	r24, r17
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	1f 91       	pop	r17
     6ea:	08 95       	ret

000006ec <read_pixel_8>:
	return i2c_stat;
}

// get pixel eight
I2C_STATUS read_pixel_8( unsigned char *pixel_8)
{
     6ec:	1f 93       	push	r17
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6f4:	88 e6       	ldi	r24, 0x68	; 104
     6f6:	60 e0       	ldi	r22, 0x00	; 0
     6f8:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     6fc:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     6fe:	88 23       	and	r24, r24
     700:	a1 f4       	brne	.+40     	; 0x72a <read_pixel_8+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX8 );
     702:	89 e0       	ldi	r24, 0x09	; 9
     704:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <I2C_MSTR_send>
     708:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     70a:	88 23       	and	r24, r24
     70c:	71 f4       	brne	.+28     	; 0x72a <read_pixel_8+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     70e:	88 e6       	ldi	r24, 0x68	; 104
     710:	61 e0       	ldi	r22, 0x01	; 1
     712:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     716:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     718:	88 23       	and	r24, r24
     71a:	39 f4       	brne	.+14     	; 0x72a <read_pixel_8+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_8, FALSE );
     71c:	ce 01       	movw	r24, r28
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	0e 94 97 15 	call	0x2b2e	; 0x2b2e <I2C_MSTR_get>
     724:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     726:	81 11       	cpse	r24, r1
					*pixel_8 = 0;
     728:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     72a:	0e 94 2f 16 	call	0x2c5e	; 0x2c5e <I2C_MSTR_stop>
	return i2c_stat;
}
     72e:	81 2f       	mov	r24, r17
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	1f 91       	pop	r17
     736:	08 95       	ret

00000738 <read_pixel_7>:
	return i2c_stat;
}

// get pixel seven
I2C_STATUS read_pixel_7( unsigned char *pixel_7)
{
     738:	1f 93       	push	r17
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     740:	88 e6       	ldi	r24, 0x68	; 104
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     748:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     74a:	88 23       	and	r24, r24
     74c:	a1 f4       	brne	.+40     	; 0x776 <read_pixel_7+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX7 );
     74e:	88 e0       	ldi	r24, 0x08	; 8
     750:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <I2C_MSTR_send>
     754:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     756:	88 23       	and	r24, r24
     758:	71 f4       	brne	.+28     	; 0x776 <read_pixel_7+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     75a:	88 e6       	ldi	r24, 0x68	; 104
     75c:	61 e0       	ldi	r22, 0x01	; 1
     75e:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     762:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     764:	88 23       	and	r24, r24
     766:	39 f4       	brne	.+14     	; 0x776 <read_pixel_7+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_7, FALSE );
     768:	ce 01       	movw	r24, r28
     76a:	60 e0       	ldi	r22, 0x00	; 0
     76c:	0e 94 97 15 	call	0x2b2e	; 0x2b2e <I2C_MSTR_get>
     770:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     772:	81 11       	cpse	r24, r1
					*pixel_7 = 0;
     774:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     776:	0e 94 2f 16 	call	0x2c5e	; 0x2c5e <I2C_MSTR_stop>
	return i2c_stat;
}
     77a:	81 2f       	mov	r24, r17
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	1f 91       	pop	r17
     782:	08 95       	ret

00000784 <read_pixel_6>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel six
I2C_STATUS read_pixel_6( unsigned char *pixel_6)
{
     784:	1f 93       	push	r17
     786:	cf 93       	push	r28
     788:	df 93       	push	r29
     78a:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     78c:	88 e6       	ldi	r24, 0x68	; 104
     78e:	60 e0       	ldi	r22, 0x00	; 0
     790:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     794:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     796:	88 23       	and	r24, r24
     798:	a1 f4       	brne	.+40     	; 0x7c2 <read_pixel_6+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX6 );
     79a:	87 e0       	ldi	r24, 0x07	; 7
     79c:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <I2C_MSTR_send>
     7a0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7a2:	88 23       	and	r24, r24
     7a4:	71 f4       	brne	.+28     	; 0x7c2 <read_pixel_6+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7a6:	88 e6       	ldi	r24, 0x68	; 104
     7a8:	61 e0       	ldi	r22, 0x01	; 1
     7aa:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     7ae:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7b0:	88 23       	and	r24, r24
     7b2:	39 f4       	brne	.+14     	; 0x7c2 <read_pixel_6+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_6, FALSE );
     7b4:	ce 01       	movw	r24, r28
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	0e 94 97 15 	call	0x2b2e	; 0x2b2e <I2C_MSTR_get>
     7bc:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     7be:	81 11       	cpse	r24, r1
					*pixel_6 = 0;
     7c0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     7c2:	0e 94 2f 16 	call	0x2c5e	; 0x2c5e <I2C_MSTR_stop>
	return i2c_stat;
}
     7c6:	81 2f       	mov	r24, r17
     7c8:	df 91       	pop	r29
     7ca:	cf 91       	pop	r28
     7cc:	1f 91       	pop	r17
     7ce:	08 95       	ret

000007d0 <read_pixel_5>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel five
I2C_STATUS read_pixel_5( unsigned char *pixel_5)
{
     7d0:	1f 93       	push	r17
     7d2:	cf 93       	push	r28
     7d4:	df 93       	push	r29
     7d6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     7d8:	88 e6       	ldi	r24, 0x68	; 104
     7da:	60 e0       	ldi	r22, 0x00	; 0
     7dc:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     7e0:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     7e2:	88 23       	and	r24, r24
     7e4:	a1 f4       	brne	.+40     	; 0x80e <read_pixel_5+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX5 );
     7e6:	86 e0       	ldi	r24, 0x06	; 6
     7e8:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <I2C_MSTR_send>
     7ec:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7ee:	88 23       	and	r24, r24
     7f0:	71 f4       	brne	.+28     	; 0x80e <read_pixel_5+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7f2:	88 e6       	ldi	r24, 0x68	; 104
     7f4:	61 e0       	ldi	r22, 0x01	; 1
     7f6:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     7fa:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7fc:	88 23       	and	r24, r24
     7fe:	39 f4       	brne	.+14     	; 0x80e <read_pixel_5+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_5, FALSE );
     800:	ce 01       	movw	r24, r28
     802:	60 e0       	ldi	r22, 0x00	; 0
     804:	0e 94 97 15 	call	0x2b2e	; 0x2b2e <I2C_MSTR_get>
     808:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     80a:	81 11       	cpse	r24, r1
					*pixel_5 = 0;
     80c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     80e:	0e 94 2f 16 	call	0x2c5e	; 0x2c5e <I2C_MSTR_stop>
	return i2c_stat;
}
     812:	81 2f       	mov	r24, r17
     814:	df 91       	pop	r29
     816:	cf 91       	pop	r28
     818:	1f 91       	pop	r17
     81a:	08 95       	ret

0000081c <read_pixel_4>:
	return i2c_stat;
}

// get pixel four
I2C_STATUS read_pixel_4( unsigned char *pixel_4)
{
     81c:	1f 93       	push	r17
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     824:	88 e6       	ldi	r24, 0x68	; 104
     826:	60 e0       	ldi	r22, 0x00	; 0
     828:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     82c:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     82e:	88 23       	and	r24, r24
     830:	a1 f4       	brne	.+40     	; 0x85a <read_pixel_4+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX4 );
     832:	85 e0       	ldi	r24, 0x05	; 5
     834:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <I2C_MSTR_send>
     838:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     83a:	88 23       	and	r24, r24
     83c:	71 f4       	brne	.+28     	; 0x85a <read_pixel_4+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     83e:	88 e6       	ldi	r24, 0x68	; 104
     840:	61 e0       	ldi	r22, 0x01	; 1
     842:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     846:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     848:	88 23       	and	r24, r24
     84a:	39 f4       	brne	.+14     	; 0x85a <read_pixel_4+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_4, FALSE );
     84c:	ce 01       	movw	r24, r28
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	0e 94 97 15 	call	0x2b2e	; 0x2b2e <I2C_MSTR_get>
     854:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     856:	81 11       	cpse	r24, r1
					*pixel_4 = 0;
     858:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     85a:	0e 94 2f 16 	call	0x2c5e	; 0x2c5e <I2C_MSTR_stop>
	return i2c_stat;
}
     85e:	81 2f       	mov	r24, r17
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	1f 91       	pop	r17
     866:	08 95       	ret

00000868 <read_pixel_3>:
	return i2c_stat;
}

// get pixel three
I2C_STATUS read_pixel_3( unsigned char *pixel_3)
{
     868:	1f 93       	push	r17
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     870:	88 e6       	ldi	r24, 0x68	; 104
     872:	60 e0       	ldi	r22, 0x00	; 0
     874:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     878:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     87a:	88 23       	and	r24, r24
     87c:	a1 f4       	brne	.+40     	; 0x8a6 <read_pixel_3+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX3 );
     87e:	84 e0       	ldi	r24, 0x04	; 4
     880:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <I2C_MSTR_send>
     884:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     886:	88 23       	and	r24, r24
     888:	71 f4       	brne	.+28     	; 0x8a6 <read_pixel_3+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     88a:	88 e6       	ldi	r24, 0x68	; 104
     88c:	61 e0       	ldi	r22, 0x01	; 1
     88e:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     892:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     894:	88 23       	and	r24, r24
     896:	39 f4       	brne	.+14     	; 0x8a6 <read_pixel_3+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_3, FALSE );
     898:	ce 01       	movw	r24, r28
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	0e 94 97 15 	call	0x2b2e	; 0x2b2e <I2C_MSTR_get>
     8a0:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8a2:	81 11       	cpse	r24, r1
					*pixel_3 = 0;
     8a4:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     8a6:	0e 94 2f 16 	call	0x2c5e	; 0x2c5e <I2C_MSTR_stop>
	return i2c_stat;
}
     8aa:	81 2f       	mov	r24, r17
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	1f 91       	pop	r17
     8b2:	08 95       	ret

000008b4 <read_pixel_2>:
}


// get pixel two
I2C_STATUS read_pixel_2( unsigned char *pixel_2)
{
     8b4:	1f 93       	push	r17
     8b6:	cf 93       	push	r28
     8b8:	df 93       	push	r29
     8ba:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     8bc:	88 e6       	ldi	r24, 0x68	; 104
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     8c4:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     8c6:	88 23       	and	r24, r24
     8c8:	a1 f4       	brne	.+40     	; 0x8f2 <read_pixel_2+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX2 );
     8ca:	83 e0       	ldi	r24, 0x03	; 3
     8cc:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <I2C_MSTR_send>
     8d0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     8d2:	88 23       	and	r24, r24
     8d4:	71 f4       	brne	.+28     	; 0x8f2 <read_pixel_2+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     8d6:	88 e6       	ldi	r24, 0x68	; 104
     8d8:	61 e0       	ldi	r22, 0x01	; 1
     8da:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     8de:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     8e0:	88 23       	and	r24, r24
     8e2:	39 f4       	brne	.+14     	; 0x8f2 <read_pixel_2+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_2, FALSE );
     8e4:	ce 01       	movw	r24, r28
     8e6:	60 e0       	ldi	r22, 0x00	; 0
     8e8:	0e 94 97 15 	call	0x2b2e	; 0x2b2e <I2C_MSTR_get>
     8ec:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8ee:	81 11       	cpse	r24, r1
					*pixel_2 = 0;
     8f0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     8f2:	0e 94 2f 16 	call	0x2c5e	; 0x2c5e <I2C_MSTR_stop>
	return i2c_stat;
}
     8f6:	81 2f       	mov	r24, r17
     8f8:	df 91       	pop	r29
     8fa:	cf 91       	pop	r28
     8fc:	1f 91       	pop	r17
     8fe:	08 95       	ret

00000900 <read_pixel_1>:
* Output Return:	I2C_STATUS
* Overview:			These are several pixel read values for each of the pixels
********************************************************************/
// get pixel one
I2C_STATUS read_pixel_1( unsigned char *pixel_1)
{
     900:	1f 93       	push	r17
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     908:	88 e6       	ldi	r24, 0x68	; 104
     90a:	60 e0       	ldi	r22, 0x00	; 0
     90c:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     910:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     912:	88 23       	and	r24, r24
     914:	a1 f4       	brne	.+40     	; 0x93e <read_pixel_1+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX1 );
     916:	82 e0       	ldi	r24, 0x02	; 2
     918:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <I2C_MSTR_send>
     91c:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     91e:	88 23       	and	r24, r24
     920:	71 f4       	brne	.+28     	; 0x93e <read_pixel_1+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     922:	88 e6       	ldi	r24, 0x68	; 104
     924:	61 e0       	ldi	r22, 0x01	; 1
     926:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     92a:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     92c:	88 23       	and	r24, r24
     92e:	39 f4       	brne	.+14     	; 0x93e <read_pixel_1+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_1, FALSE );
     930:	ce 01       	movw	r24, r28
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	0e 94 97 15 	call	0x2b2e	; 0x2b2e <I2C_MSTR_get>
     938:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     93a:	81 11       	cpse	r24, r1
					*pixel_1 = 0;
     93c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     93e:	0e 94 2f 16 	call	0x2c5e	; 0x2c5e <I2C_MSTR_stop>
	return i2c_stat;
}
     942:	81 2f       	mov	r24, r17
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	1f 91       	pop	r17
     94a:	08 95       	ret

0000094c <get_revision>:
* Input Variables:	unsigned char revision
* Output Return:	I2C_STATUS
* Overview:			
********************************************************************/
I2C_STATUS get_revision( unsigned char *revision )
{
     94c:	1f 93       	push	r17
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
     952:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     954:	88 e6       	ldi	r24, 0x68	; 104
     956:	60 e0       	ldi	r22, 0x00	; 0
     958:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     95c:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     95e:	88 23       	and	r24, r24
     960:	a1 f4       	brne	.+40     	; 0x98a <get_revision+0x3e>
	{

		// Send the register value (being 0).  This is
		// the register that contains the software revision.
		i2c_stat = I2C_MSTR_send( __TPA81_REVISION );
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <I2C_MSTR_send>
     968:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     96a:	88 23       	and	r24, r24
     96c:	71 f4       	brne	.+28     	; 0x98a <get_revision+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     96e:	88 e6       	ldi	r24, 0x68	; 104
     970:	61 e0       	ldi	r22, 0x01	; 1
     972:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <I2C_MSTR_start>
     976:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     978:	88 23       	and	r24, r24
     97a:	39 f4       	brne	.+14     	; 0x98a <get_revision+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( revision, FALSE );
     97c:	ce 01       	movw	r24, r28
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	0e 94 97 15 	call	0x2b2e	; 0x2b2e <I2C_MSTR_get>
     984:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     986:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*revision = 0;
     988:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     98a:	0e 94 2f 16 	call	0x2c5e	; 0x2c5e <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_revision()
     98e:	81 2f       	mov	r24, r17
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	1f 91       	pop	r17
     996:	08 95       	ret

00000998 <getBackIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ADC_set_VREF>
	// Set the channel we will sample from.
	// Note: Swaped with frount IR for orientation
	ADC_set_channel(IRBACK_CHAN);
     99e:	85 e0       	ldi	r24, 0x05	; 5
     9a0:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9a4:	0e 94 66 0e 	call	0x1ccc	; 0x1ccc <ADC_sample>
     9a8:	a0 e0       	ldi	r26, 0x00	; 0
     9aa:	b0 e0       	ldi	r27, 0x00	; 0
     9ac:	bc 01       	movw	r22, r24
     9ae:	cd 01       	movw	r24, r26
     9b0:	0e 94 87 22 	call	0x450e	; 0x450e <__floatunsisf>
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	40 ea       	ldi	r20, 0xA0	; 160
     9ba:	50 e4       	ldi	r21, 0x40	; 64
     9bc:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
     9c0:	9b 01       	movw	r18, r22
     9c2:	ac 01       	movw	r20, r24
     9c4:	60 e0       	ldi	r22, 0x00	; 0
     9c6:	70 e2       	ldi	r23, 0x20	; 32
     9c8:	86 e3       	ldi	r24, 0x36	; 54
     9ca:	95 e4       	ldi	r25, 0x45	; 69
     9cc:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
     9d0:	20 e0       	ldi	r18, 0x00	; 0
     9d2:	30 e0       	ldi	r19, 0x00	; 0
     9d4:	40 e8       	ldi	r20, 0x80	; 128
     9d6:	5f e3       	ldi	r21, 0x3F	; 63
     9d8:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     9dc:	08 95       	ret

000009de <getFrontIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     9de:	81 e0       	ldi	r24, 0x01	; 1
     9e0:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ADC_set_VREF>
	// Set the channel we will sample from.
	// Note: Swaped with back IR for orientation
	ADC_set_channel(IRFRONT_CHAN);
     9e4:	87 e0       	ldi	r24, 0x07	; 7
     9e6:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9ea:	0e 94 66 0e 	call	0x1ccc	; 0x1ccc <ADC_sample>
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	bc 01       	movw	r22, r24
     9f4:	cd 01       	movw	r24, r26
     9f6:	0e 94 87 22 	call	0x450e	; 0x450e <__floatunsisf>
     9fa:	20 e0       	ldi	r18, 0x00	; 0
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	40 ea       	ldi	r20, 0xA0	; 160
     a00:	50 e4       	ldi	r21, 0x40	; 64
     a02:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
     a06:	9b 01       	movw	r18, r22
     a08:	ac 01       	movw	r20, r24
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	70 e2       	ldi	r23, 0x20	; 32
     a0e:	86 e3       	ldi	r24, 0x36	; 54
     a10:	95 e4       	ldi	r25, 0x45	; 69
     a12:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	40 e8       	ldi	r20, 0x80	; 128
     a1c:	5f e3       	ldi	r21, 0x3F	; 63
     a1e:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a22:	08 95       	ret

00000a24 <getRightIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
     a2a:	83 e0       	ldi	r24, 0x03	; 3
     a2c:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a30:	0e 94 66 0e 	call	0x1ccc	; 0x1ccc <ADC_sample>
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	bc 01       	movw	r22, r24
     a3a:	cd 01       	movw	r24, r26
     a3c:	0e 94 87 22 	call	0x450e	; 0x450e <__floatunsisf>
     a40:	20 e0       	ldi	r18, 0x00	; 0
     a42:	30 e0       	ldi	r19, 0x00	; 0
     a44:	40 ea       	ldi	r20, 0xA0	; 160
     a46:	50 e4       	ldi	r21, 0x40	; 64
     a48:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
     a4c:	9b 01       	movw	r18, r22
     a4e:	ac 01       	movw	r20, r24
     a50:	60 e0       	ldi	r22, 0x00	; 0
     a52:	70 e2       	ldi	r23, 0x20	; 32
     a54:	86 e3       	ldi	r24, 0x36	; 54
     a56:	95 e4       	ldi	r25, 0x45	; 69
     a58:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
     a5c:	20 e0       	ldi	r18, 0x00	; 0
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	40 e8       	ldi	r20, 0x80	; 128
     a62:	5f e3       	ldi	r21, 0x3F	; 63
     a64:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a68:	08 95       	ret

00000a6a <getLeftIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
 	ADC_set_VREF( ADC_VREF_AVCC );
     a6a:	81 e0       	ldi	r24, 0x01	; 1
     a6c:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
     a70:	84 e0       	ldi	r24, 0x04	; 4
     a72:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a76:	0e 94 66 0e 	call	0x1ccc	; 0x1ccc <ADC_sample>
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	b0 e0       	ldi	r27, 0x00	; 0
     a7e:	bc 01       	movw	r22, r24
     a80:	cd 01       	movw	r24, r26
     a82:	0e 94 87 22 	call	0x450e	; 0x450e <__floatunsisf>
     a86:	20 e0       	ldi	r18, 0x00	; 0
     a88:	30 e0       	ldi	r19, 0x00	; 0
     a8a:	40 ea       	ldi	r20, 0xA0	; 160
     a8c:	50 e4       	ldi	r21, 0x40	; 64
     a8e:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
     a92:	9b 01       	movw	r18, r22
     a94:	ac 01       	movw	r20, r24
     a96:	60 e0       	ldi	r22, 0x00	; 0
     a98:	70 e2       	ldi	r23, 0x20	; 32
     a9a:	86 e3       	ldi	r24, 0x36	; 54
     a9c:	95 e4       	ldi	r25, 0x45	; 69
     a9e:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	30 e0       	ldi	r19, 0x00	; 0
     aa6:	40 e8       	ldi	r20, 0x80	; 128
     aa8:	5f e3       	ldi	r21, 0x3F	; 63
     aaa:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     aae:	08 95       	ret

00000ab0 <getRightLight>:
********************************************************************/
float getRightLight( void )
{
	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ADC_set_VREF>
	ADC_set_channel( RIGHT_LIGHT_CHAN );
     ab6:	85 e0       	ldi	r24, 0x05	; 5
     ab8:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <ADC_set_channel>
	adcsample = ADC_sample();
     abc:	0e 94 66 0e 	call	0x1ccc	; 0x1ccc <ADC_sample>
     ac0:	a0 e0       	ldi	r26, 0x00	; 0
     ac2:	b0 e0       	ldi	r27, 0x00	; 0
     ac4:	bc 01       	movw	r22, r24
     ac6:	cd 01       	movw	r24, r26
     ac8:	0e 94 87 22 	call	0x450e	; 0x450e <__floatunsisf>
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	40 ea       	ldi	r20, 0xA0	; 160
     ad2:	5b e3       	ldi	r21, 0x3B	; 59
     ad4:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
	// LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * ( 5.0 / 1024 );
	// LCD_printf( "right: %f\n",voltage);
	return voltage;
}
     ad8:	08 95       	ret

00000ada <getLeftLight>:
float getLeftLight( void )
{

	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ada:	81 e0       	ldi	r24, 0x01	; 1
     adc:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ADC_set_VREF>
	ADC_set_channel( LEFT_LIGHT_CHAN );
     ae0:	86 e0       	ldi	r24, 0x06	; 6
     ae2:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <ADC_set_channel>
	adcsample = ADC_sample();
     ae6:	0e 94 66 0e 	call	0x1ccc	; 0x1ccc <ADC_sample>
     aea:	a0 e0       	ldi	r26, 0x00	; 0
     aec:	b0 e0       	ldi	r27, 0x00	; 0
     aee:	bc 01       	movw	r22, r24
     af0:	cd 01       	movw	r24, r26
     af2:	0e 94 87 22 	call	0x450e	; 0x450e <__floatunsisf>
     af6:	20 e0       	ldi	r18, 0x00	; 0
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	40 ea       	ldi	r20, 0xA0	; 160
     afc:	5b e3       	ldi	r21, 0x3B	; 59
     afe:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * (5.0/ 1024.0 );
	// LCD_printf( "voltage: %f\n",voltage);
	return voltage;
}
     b02:	08 95       	ret

00000b04 <WaitButton>:
* Input Variables:	none
* Output Return:	int
* Overview:			Use a comment block like this before functions
********************************************************************/
int WaitButton( void ) 
{
     b04:	ff 92       	push	r15
     b06:	0f 93       	push	r16
     b08:	1f 93       	push	r17
     b0a:	cf 93       	push	r28
     b0c:	df 93       	push	r29
    BOOL btnState1, btnState2, btnState3;//local variables - button states
	//int rtnValue=0;//return the button value
	int rtnValue=0;

	LCD_clear();
     b0e:	0e 94 ce 0e 	call	0x1d9c	; 0x1d9c <LCD_clear>

	if((ATopstat.state=SUBSYS_OPEN))
     b12:	81 e0       	ldi	r24, 0x01	; 1
     b14:	80 93 8a 02 	sts	0x028A, r24
	{
       		// Get switch states.
		btnState1 = ATTINY_get_SW_state( ATTINY_SW3 );
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	0e 94 9b 14 	call	0x2936	; 0x2936 <ATTINY_get_SW_state>
     b1e:	18 2f       	mov	r17, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
     b20:	81 e0       	ldi	r24, 0x01	; 1
     b22:	0e 94 9b 14 	call	0x2936	; 0x2936 <ATTINY_get_SW_state>
     b26:	08 2f       	mov	r16, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
     b28:	82 e0       	ldi	r24, 0x02	; 2
     b2a:	0e 94 9b 14 	call	0x2936	; 0x2936 <ATTINY_get_SW_state>
     b2e:	f8 2e       	mov	r15, r24
		//LCD_printf("btnStates: %d %d %d \n", btnState1, btnState2, btnState3);

		if( btnState1 == TRUE ) 
     b30:	11 30       	cpi	r17, 0x01	; 1
     b32:	19 f0       	breq	.+6      	; 0xb3a <WaitButton+0x36>
     b34:	c0 e0       	ldi	r28, 0x00	; 0
     b36:	d0 e0       	ldi	r29, 0x00	; 0
     b38:	17 c0       	rjmp	.+46     	; 0xb68 <WaitButton+0x64>
		{
			LCD_printf( "SW1: Pushed\n");
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	91 e0       	ldi	r25, 0x01	; 1
     b3e:	0e 94 d0 2b 	call	0x57a0	; 0x57a0 <puts>
			TMRSRVC_delay(1000);//wait 1 s
     b42:	88 ee       	ldi	r24, 0xE8	; 232
     b44:	93 e0       	ldi	r25, 0x03	; 3
     b46:	0e 94 38 15 	call	0x2a70	; 0x2a70 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b00100000 );//turn the red LED on
     b4a:	80 e2       	ldi	r24, 0x20	; 32
     b4c:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     b50:	80 ed       	ldi	r24, 0xD0	; 208
     b52:	97 e0       	ldi	r25, 0x07	; 7
     b54:	0e 94 38 15 	call	0x2a70	; 0x2a70 <TMRSRVC_delay>
               		LED_clr_pattern( 0b01000000 );//turn the green LED off
     b58:	80 e4       	ldi	r24, 0x40	; 64
     b5a:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b5e:	80 e2       	ldi	r24, 0x20	; 32
     b60:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <LED_clr_pattern>
     b64:	c1 e0       	ldi	r28, 0x01	; 1
     b66:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=1;
			}//end if button 1 state open

		if( btnState2 == TRUE ) 
     b68:	01 30       	cpi	r16, 0x01	; 1
     b6a:	b9 f4       	brne	.+46     	; 0xb9a <WaitButton+0x96>
		{
			LCD_printf( "SW2: Pushed\n");
     b6c:	8c e0       	ldi	r24, 0x0C	; 12
     b6e:	91 e0       	ldi	r25, 0x01	; 1
     b70:	0e 94 d0 2b 	call	0x57a0	; 0x57a0 <puts>
			TMRSRVC_delay(1000);//wait 1 s
     b74:	88 ee       	ldi	r24, 0xE8	; 232
     b76:	93 e0       	ldi	r25, 0x03	; 3
     b78:	0e 94 38 15 	call	0x2a70	; 0x2a70 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     b7c:	80 e4       	ldi	r24, 0x40	; 64
     b7e:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     b82:	80 ed       	ldi	r24, 0xD0	; 208
     b84:	97 e0       	ldi	r25, 0x07	; 7
     b86:	0e 94 38 15 	call	0x2a70	; 0x2a70 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     b8a:	80 e4       	ldi	r24, 0x40	; 64
     b8c:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b90:	80 e2       	ldi	r24, 0x20	; 32
     b92:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <LED_clr_pattern>
     b96:	c2 e0       	ldi	r28, 0x02	; 2
     b98:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=2;
		}//end if btn 2 open

		if ( btnState3 == TRUE ) 
     b9a:	81 e0       	ldi	r24, 0x01	; 1
     b9c:	f8 16       	cp	r15, r24
     b9e:	d1 f4       	brne	.+52     	; 0xbd4 <WaitButton+0xd0>
		{
			LCD_printf( "SW3: Pushed\n");
     ba0:	88 e1       	ldi	r24, 0x18	; 24
     ba2:	91 e0       	ldi	r25, 0x01	; 1
     ba4:	0e 94 d0 2b 	call	0x57a0	; 0x57a0 <puts>
			TMRSRVC_delay(1000);//wait 1 s
     ba8:	88 ee       	ldi	r24, 0xE8	; 232
     baa:	93 e0       	ldi	r25, 0x03	; 3
     bac:	0e 94 38 15 	call	0x2a70	; 0x2a70 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     bb0:	80 e4       	ldi	r24, 0x40	; 64
     bb2:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <LED_set_pattern>
                	LED_set_pattern( 0b00100000 );//turn the red LED on
     bb6:	80 e2       	ldi	r24, 0x20	; 32
     bb8:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     bbc:	80 ed       	ldi	r24, 0xD0	; 208
     bbe:	97 e0       	ldi	r25, 0x07	; 7
     bc0:	0e 94 38 15 	call	0x2a70	; 0x2a70 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     bc4:	80 e4       	ldi	r24, 0x40	; 64
     bc6:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     bca:	80 e2       	ldi	r24, 0x20	; 32
     bcc:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <LED_clr_pattern>
     bd0:	c3 e0       	ldi	r28, 0x03	; 3
     bd2:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=3;
		}//end if btn 3 open
            	LCD_clear();
     bd4:	0e 94 ce 0e 	call	0x1d9c	; 0x1d9c <LCD_clear>
		return rtnValue;
	}//end AT while

}//end the WaitButton() function
     bd8:	ce 01       	movw	r24, r28
     bda:	df 91       	pop	r29
     bdc:	cf 91       	pop	r28
     bde:	1f 91       	pop	r17
     be0:	0f 91       	pop	r16
     be2:	ff 90       	pop	r15
     be4:	08 95       	ret

00000be6 <prefilter>:
* Overview:			This appies a prefilter to the IR data by
*					storing the history of measurements within the
*					an arrayand calculating a running average
********************************************************************/
void prefilter(char reset)
{	
     be6:	2f 92       	push	r2
     be8:	3f 92       	push	r3
     bea:	4f 92       	push	r4
     bec:	5f 92       	push	r5
     bee:	6f 92       	push	r6
     bf0:	7f 92       	push	r7
     bf2:	8f 92       	push	r8
     bf4:	9f 92       	push	r9
     bf6:	af 92       	push	r10
     bf8:	bf 92       	push	r11
     bfa:	cf 92       	push	r12
     bfc:	df 92       	push	r13
     bfe:	ef 92       	push	r14
     c00:	ff 92       	push	r15
     c02:	0f 93       	push	r16
     c04:	1f 93       	push	r17
     c06:	df 93       	push	r29
     c08:	cf 93       	push	r28
     c0a:	cd b7       	in	r28, 0x3d	; 61
     c0c:	de b7       	in	r29, 0x3e	; 62
     c0e:	64 97       	sbiw	r28, 0x14	; 20
     c10:	0f b6       	in	r0, 0x3f	; 63
     c12:	f8 94       	cli
     c14:	de bf       	out	0x3e, r29	; 62
     c16:	0f be       	out	0x3f, r0	; 63
     c18:	cd bf       	out	0x3d, r28	; 61
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
     c1a:	88 23       	and	r24, r24
     c1c:	39 f5       	brne	.+78     	; 0xc6c <prefilter+0x86>
     c1e:	8b ef       	ldi	r24, 0xFB	; 251
     c20:	92 e0       	ldi	r25, 0x02	; 2
     c22:	9c 8b       	std	Y+20, r25	; 0x14
     c24:	8b 8b       	std	Y+19, r24	; 0x13
     c26:	a3 e6       	ldi	r26, 0x63	; 99
     c28:	b4 e0       	ldi	r27, 0x04	; 4
     c2a:	be 83       	std	Y+6, r27	; 0x06
     c2c:	ad 83       	std	Y+5, r26	; 0x05
     c2e:	eb ee       	ldi	r30, 0xEB	; 235
     c30:	f3 e0       	ldi	r31, 0x03	; 3
     c32:	fc 83       	std	Y+4, r31	; 0x04
     c34:	eb 83       	std	Y+3, r30	; 0x03
     c36:	83 e7       	ldi	r24, 0x73	; 115
     c38:	93 e0       	ldi	r25, 0x03	; 3
     c3a:	9a 83       	std	Y+2, r25	; 0x02
     c3c:	89 83       	std	Y+1, r24	; 0x01
     c3e:	0f 2e       	mov	r0, r31
     c40:	f0 e0       	ldi	r31, 0x00	; 0
     c42:	2f 2e       	mov	r2, r31
     c44:	f0 e0       	ldi	r31, 0x00	; 0
     c46:	3f 2e       	mov	r3, r31
     c48:	f0 e0       	ldi	r31, 0x00	; 0
     c4a:	4f 2e       	mov	r4, r31
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	5f 2e       	mov	r5, r31
     c50:	f0 2d       	mov	r31, r0
     c52:	2f 86       	std	Y+15, r2	; 0x0f
     c54:	38 8a       	std	Y+16, r3	; 0x10
     c56:	49 8a       	std	Y+17, r4	; 0x11
     c58:	5a 8a       	std	Y+18, r5	; 0x12
     c5a:	2b 86       	std	Y+11, r2	; 0x0b
     c5c:	3c 86       	std	Y+12, r3	; 0x0c
     c5e:	4d 86       	std	Y+13, r4	; 0x0d
     c60:	5e 86       	std	Y+14, r5	; 0x0e
     c62:	2f 82       	std	Y+7, r2	; 0x07
     c64:	38 86       	std	Y+8, r3	; 0x08
     c66:	49 86       	std	Y+9, r4	; 0x09
     c68:	5a 86       	std	Y+10, r5	; 0x0a
     c6a:	43 c0       	rjmp	.+134    	; 0xcf2 <prefilter+0x10c>
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     c6c:	a0 90 f6 01 	lds	r10, 0x01F6
     c70:	b0 90 f7 01 	lds	r11, 0x01F7
     c74:	c0 90 f8 01 	lds	r12, 0x01F8
     c78:	d0 90 f9 01 	lds	r13, 0x01F9
			rtIR_old[i] = rtIR;
     c7c:	e0 90 fa 01 	lds	r14, 0x01FA
     c80:	f0 90 fb 01 	lds	r15, 0x01FB
     c84:	00 91 fc 01 	lds	r16, 0x01FC
     c88:	10 91 fd 01 	lds	r17, 0x01FD
			ftIR_old[i] = ftIR;
     c8c:	20 90 fe 01 	lds	r2, 0x01FE
     c90:	30 90 ff 01 	lds	r3, 0x01FF
     c94:	40 90 00 02 	lds	r4, 0x0200
     c98:	50 90 01 02 	lds	r5, 0x0201
			bkIR_old[i] = bkIR;
     c9c:	20 91 02 02 	lds	r18, 0x0202
     ca0:	30 91 03 02 	lds	r19, 0x0203
     ca4:	40 91 04 02 	lds	r20, 0x0204
     ca8:	50 91 05 02 	lds	r21, 0x0205
     cac:	80 e0       	ldi	r24, 0x00	; 0
     cae:	90 e0       	ldi	r25, 0x00	; 0
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     cb0:	fc 01       	movw	r30, r24
     cb2:	e5 57       	subi	r30, 0x75	; 117
     cb4:	fd 4f       	sbci	r31, 0xFD	; 253
     cb6:	a0 82       	st	Z, r10
     cb8:	b1 82       	std	Z+1, r11	; 0x01
     cba:	c2 82       	std	Z+2, r12	; 0x02
     cbc:	d3 82       	std	Z+3, r13	; 0x03
			rtIR_old[i] = rtIR;
     cbe:	fc 01       	movw	r30, r24
     cc0:	ed 50       	subi	r30, 0x0D	; 13
     cc2:	fc 4f       	sbci	r31, 0xFC	; 252
     cc4:	e0 82       	st	Z, r14
     cc6:	f1 82       	std	Z+1, r15	; 0x01
     cc8:	02 83       	std	Z+2, r16	; 0x02
     cca:	13 83       	std	Z+3, r17	; 0x03
			ftIR_old[i] = ftIR;
     ccc:	fc 01       	movw	r30, r24
     cce:	e5 58       	subi	r30, 0x85	; 133
     cd0:	fc 4f       	sbci	r31, 0xFC	; 252
     cd2:	20 82       	st	Z, r2
     cd4:	31 82       	std	Z+1, r3	; 0x01
     cd6:	42 82       	std	Z+2, r4	; 0x02
     cd8:	53 82       	std	Z+3, r5	; 0x03
			bkIR_old[i] = bkIR;
     cda:	fc 01       	movw	r30, r24
     cdc:	ed 5f       	subi	r30, 0xFD	; 253
     cde:	fc 4f       	sbci	r31, 0xFC	; 252
     ce0:	20 83       	st	Z, r18
     ce2:	31 83       	std	Z+1, r19	; 0x01
     ce4:	42 83       	std	Z+2, r20	; 0x02
     ce6:	53 83       	std	Z+3, r21	; 0x03
     ce8:	04 96       	adiw	r24, 0x04	; 4
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
     cea:	88 37       	cpi	r24, 0x78	; 120
     cec:	91 05       	cpc	r25, r1
     cee:	01 f7       	brne	.-64     	; 0xcb0 <prefilter+0xca>
     cf0:	96 cf       	rjmp	.-212    	; 0xc1e <prefilter+0x38>
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
	{
		j = i - 1;
		ltIR_old[i] = ltIR_old[j];
     cf2:	ab 89       	ldd	r26, Y+19	; 0x13
     cf4:	bc 89       	ldd	r27, Y+20	; 0x14
     cf6:	2d 91       	ld	r18, X+
     cf8:	3d 91       	ld	r19, X+
     cfa:	4d 91       	ld	r20, X+
     cfc:	5c 91       	ld	r21, X
     cfe:	13 97       	sbiw	r26, 0x03	; 3
     d00:	fd 01       	movw	r30, r26
     d02:	24 83       	std	Z+4, r18	; 0x04
     d04:	35 83       	std	Z+5, r19	; 0x05
     d06:	46 83       	std	Z+6, r20	; 0x06
     d08:	57 83       	std	Z+7, r21	; 0x07
		rtIR_old[i] = rtIR_old[j];
     d0a:	ad 81       	ldd	r26, Y+5	; 0x05
     d0c:	be 81       	ldd	r27, Y+6	; 0x06
     d0e:	ed 90       	ld	r14, X+
     d10:	fd 90       	ld	r15, X+
     d12:	0d 91       	ld	r16, X+
     d14:	1c 91       	ld	r17, X
     d16:	13 97       	sbiw	r26, 0x03	; 3
     d18:	fd 01       	movw	r30, r26
     d1a:	e4 82       	std	Z+4, r14	; 0x04
     d1c:	f5 82       	std	Z+5, r15	; 0x05
     d1e:	06 83       	std	Z+6, r16	; 0x06
     d20:	17 83       	std	Z+7, r17	; 0x07
		ftIR_old[i] = ftIR_old[j];
     d22:	ab 81       	ldd	r26, Y+3	; 0x03
     d24:	bc 81       	ldd	r27, Y+4	; 0x04
     d26:	ad 90       	ld	r10, X+
     d28:	bd 90       	ld	r11, X+
     d2a:	cd 90       	ld	r12, X+
     d2c:	dc 90       	ld	r13, X
     d2e:	13 97       	sbiw	r26, 0x03	; 3
     d30:	fd 01       	movw	r30, r26
     d32:	a4 82       	std	Z+4, r10	; 0x04
     d34:	b5 82       	std	Z+5, r11	; 0x05
     d36:	c6 82       	std	Z+6, r12	; 0x06
     d38:	d7 82       	std	Z+7, r13	; 0x07
		bkIR_old[i] = bkIR_old[j];
     d3a:	a9 81       	ldd	r26, Y+1	; 0x01
     d3c:	ba 81       	ldd	r27, Y+2	; 0x02
     d3e:	6d 90       	ld	r6, X+
     d40:	7d 90       	ld	r7, X+
     d42:	8d 90       	ld	r8, X+
     d44:	9c 90       	ld	r9, X
     d46:	13 97       	sbiw	r26, 0x03	; 3
     d48:	fd 01       	movw	r30, r26
     d4a:	64 82       	std	Z+4, r6	; 0x04
     d4c:	75 82       	std	Z+5, r7	; 0x05
     d4e:	86 82       	std	Z+6, r8	; 0x06
     d50:	97 82       	std	Z+7, r9	; 0x07
		ltIR_new += ltIR_old[i];
     d52:	c2 01       	movw	r24, r4
     d54:	b1 01       	movw	r22, r2
     d56:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
     d5a:	1b 01       	movw	r2, r22
     d5c:	2c 01       	movw	r4, r24
		rtIR_new += rtIR_old[i];
     d5e:	6f 85       	ldd	r22, Y+15	; 0x0f
     d60:	78 89       	ldd	r23, Y+16	; 0x10
     d62:	89 89       	ldd	r24, Y+17	; 0x11
     d64:	9a 89       	ldd	r25, Y+18	; 0x12
     d66:	a8 01       	movw	r20, r16
     d68:	97 01       	movw	r18, r14
     d6a:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
     d6e:	6f 87       	std	Y+15, r22	; 0x0f
     d70:	78 8b       	std	Y+16, r23	; 0x10
     d72:	89 8b       	std	Y+17, r24	; 0x11
     d74:	9a 8b       	std	Y+18, r25	; 0x12
		ftIR_new += ftIR_old[i];
     d76:	6b 85       	ldd	r22, Y+11	; 0x0b
     d78:	7c 85       	ldd	r23, Y+12	; 0x0c
     d7a:	8d 85       	ldd	r24, Y+13	; 0x0d
     d7c:	9e 85       	ldd	r25, Y+14	; 0x0e
     d7e:	a6 01       	movw	r20, r12
     d80:	95 01       	movw	r18, r10
     d82:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
     d86:	6b 87       	std	Y+11, r22	; 0x0b
     d88:	7c 87       	std	Y+12, r23	; 0x0c
     d8a:	8d 87       	std	Y+13, r24	; 0x0d
     d8c:	9e 87       	std	Y+14, r25	; 0x0e
		bkIR_new += bkIR_old[i];
     d8e:	6f 81       	ldd	r22, Y+7	; 0x07
     d90:	78 85       	ldd	r23, Y+8	; 0x08
     d92:	89 85       	ldd	r24, Y+9	; 0x09
     d94:	9a 85       	ldd	r25, Y+10	; 0x0a
     d96:	a4 01       	movw	r20, r8
     d98:	93 01       	movw	r18, r6
     d9a:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
     d9e:	6f 83       	std	Y+7, r22	; 0x07
     da0:	78 87       	std	Y+8, r23	; 0x08
     da2:	89 87       	std	Y+9, r24	; 0x09
     da4:	9a 87       	std	Y+10, r25	; 0x0a
     da6:	8b 89       	ldd	r24, Y+19	; 0x13
     da8:	9c 89       	ldd	r25, Y+20	; 0x14
     daa:	04 97       	sbiw	r24, 0x04	; 4
     dac:	9c 8b       	std	Y+20, r25	; 0x14
     dae:	8b 8b       	std	Y+19, r24	; 0x13
     db0:	ad 81       	ldd	r26, Y+5	; 0x05
     db2:	be 81       	ldd	r27, Y+6	; 0x06
     db4:	14 97       	sbiw	r26, 0x04	; 4
     db6:	be 83       	std	Y+6, r27	; 0x06
     db8:	ad 83       	std	Y+5, r26	; 0x05
     dba:	eb 81       	ldd	r30, Y+3	; 0x03
     dbc:	fc 81       	ldd	r31, Y+4	; 0x04
     dbe:	34 97       	sbiw	r30, 0x04	; 4
     dc0:	fc 83       	std	Y+4, r31	; 0x04
     dc2:	eb 83       	std	Y+3, r30	; 0x03
     dc4:	89 81       	ldd	r24, Y+1	; 0x01
     dc6:	9a 81       	ldd	r25, Y+2	; 0x02
     dc8:	04 97       	sbiw	r24, 0x04	; 4
     dca:	9a 83       	std	Y+2, r25	; 0x02
     dcc:	89 83       	std	Y+1, r24	; 0x01
	float ftIR_new = 0;
	float bkIR_new = 0;
	
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
     dce:	ab 89       	ldd	r26, Y+19	; 0x13
     dd0:	bc 89       	ldd	r27, Y+20	; 0x14
     dd2:	a3 58       	subi	r26, 0x83	; 131
     dd4:	b2 40       	sbci	r27, 0x02	; 2
     dd6:	09 f0       	breq	.+2      	; 0xdda <prefilter+0x1f4>
     dd8:	8c cf       	rjmp	.-232    	; 0xcf2 <prefilter+0x10c>
		bkIR_new += bkIR_old[i];
	}
	
	// Set the current reading to the first element 
	// within the historical array
	ltIR_old[0] = ltIR;
     dda:	80 91 f6 01 	lds	r24, 0x01F6
     dde:	90 91 f7 01 	lds	r25, 0x01F7
     de2:	a0 91 f8 01 	lds	r26, 0x01F8
     de6:	b0 91 f9 01 	lds	r27, 0x01F9
     dea:	eb 89       	ldd	r30, Y+19	; 0x13
     dec:	fc 89       	ldd	r31, Y+20	; 0x14
     dee:	80 87       	std	Z+8, r24	; 0x08
     df0:	91 87       	std	Z+9, r25	; 0x09
     df2:	a2 87       	std	Z+10, r26	; 0x0a
     df4:	b3 87       	std	Z+11, r27	; 0x0b
	rtIR_old[0] = rtIR;
     df6:	80 91 fa 01 	lds	r24, 0x01FA
     dfa:	90 91 fb 01 	lds	r25, 0x01FB
     dfe:	a0 91 fc 01 	lds	r26, 0x01FC
     e02:	b0 91 fd 01 	lds	r27, 0x01FD
     e06:	80 93 f3 03 	sts	0x03F3, r24
     e0a:	90 93 f4 03 	sts	0x03F4, r25
     e0e:	a0 93 f5 03 	sts	0x03F5, r26
     e12:	b0 93 f6 03 	sts	0x03F6, r27
	ftIR_old[0] = ftIR;
     e16:	80 91 fe 01 	lds	r24, 0x01FE
     e1a:	90 91 ff 01 	lds	r25, 0x01FF
     e1e:	a0 91 00 02 	lds	r26, 0x0200
     e22:	b0 91 01 02 	lds	r27, 0x0201
     e26:	80 93 7b 03 	sts	0x037B, r24
     e2a:	90 93 7c 03 	sts	0x037C, r25
     e2e:	a0 93 7d 03 	sts	0x037D, r26
     e32:	b0 93 7e 03 	sts	0x037E, r27
	bkIR_old[0] = bkIR;
     e36:	80 91 02 02 	lds	r24, 0x0202
     e3a:	90 91 03 02 	lds	r25, 0x0203
     e3e:	a0 91 04 02 	lds	r26, 0x0204
     e42:	b0 91 05 02 	lds	r27, 0x0205
     e46:	80 93 03 03 	sts	0x0303, r24
     e4a:	90 93 04 03 	sts	0x0304, r25
     e4e:	a0 93 05 03 	sts	0x0305, r26
     e52:	b0 93 06 03 	sts	0x0306, r27
	
	// Calculate the average value within the array
	// and said that as the new current measurement
	ltIR = ltIR_new/PREFILTER_SIZE;
     e56:	c2 01       	movw	r24, r4
     e58:	b1 01       	movw	r22, r2
     e5a:	20 e0       	ldi	r18, 0x00	; 0
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	40 ef       	ldi	r20, 0xF0	; 240
     e60:	51 e4       	ldi	r21, 0x41	; 65
     e62:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
     e66:	60 93 f6 01 	sts	0x01F6, r22
     e6a:	70 93 f7 01 	sts	0x01F7, r23
     e6e:	80 93 f8 01 	sts	0x01F8, r24
     e72:	90 93 f9 01 	sts	0x01F9, r25
	rtIR = rtIR_new/PREFILTER_SIZE;
     e76:	6f 85       	ldd	r22, Y+15	; 0x0f
     e78:	78 89       	ldd	r23, Y+16	; 0x10
     e7a:	89 89       	ldd	r24, Y+17	; 0x11
     e7c:	9a 89       	ldd	r25, Y+18	; 0x12
     e7e:	20 e0       	ldi	r18, 0x00	; 0
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	40 ef       	ldi	r20, 0xF0	; 240
     e84:	51 e4       	ldi	r21, 0x41	; 65
     e86:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
     e8a:	60 93 fa 01 	sts	0x01FA, r22
     e8e:	70 93 fb 01 	sts	0x01FB, r23
     e92:	80 93 fc 01 	sts	0x01FC, r24
     e96:	90 93 fd 01 	sts	0x01FD, r25
	ftIR = ftIR_new/PREFILTER_SIZE;
     e9a:	6b 85       	ldd	r22, Y+11	; 0x0b
     e9c:	7c 85       	ldd	r23, Y+12	; 0x0c
     e9e:	8d 85       	ldd	r24, Y+13	; 0x0d
     ea0:	9e 85       	ldd	r25, Y+14	; 0x0e
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	40 ef       	ldi	r20, 0xF0	; 240
     ea8:	51 e4       	ldi	r21, 0x41	; 65
     eaa:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
     eae:	60 93 fe 01 	sts	0x01FE, r22
     eb2:	70 93 ff 01 	sts	0x01FF, r23
     eb6:	80 93 00 02 	sts	0x0200, r24
     eba:	90 93 01 02 	sts	0x0201, r25
	bkIR = bkIR_new/PREFILTER_SIZE;
     ebe:	6f 81       	ldd	r22, Y+7	; 0x07
     ec0:	78 85       	ldd	r23, Y+8	; 0x08
     ec2:	89 85       	ldd	r24, Y+9	; 0x09
     ec4:	9a 85       	ldd	r25, Y+10	; 0x0a
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	40 ef       	ldi	r20, 0xF0	; 240
     ecc:	51 e4       	ldi	r21, 0x41	; 65
     ece:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
     ed2:	60 93 02 02 	sts	0x0202, r22
     ed6:	70 93 03 02 	sts	0x0203, r23
     eda:	80 93 04 02 	sts	0x0204, r24
     ede:	90 93 05 02 	sts	0x0205, r25
}
     ee2:	64 96       	adiw	r28, 0x14	; 20
     ee4:	0f b6       	in	r0, 0x3f	; 63
     ee6:	f8 94       	cli
     ee8:	de bf       	out	0x3e, r29	; 62
     eea:	0f be       	out	0x3f, r0	; 63
     eec:	cd bf       	out	0x3d, r28	; 61
     eee:	cf 91       	pop	r28
     ef0:	df 91       	pop	r29
     ef2:	1f 91       	pop	r17
     ef4:	0f 91       	pop	r16
     ef6:	ff 90       	pop	r15
     ef8:	ef 90       	pop	r14
     efa:	df 90       	pop	r13
     efc:	cf 90       	pop	r12
     efe:	bf 90       	pop	r11
     f00:	af 90       	pop	r10
     f02:	9f 90       	pop	r9
     f04:	8f 90       	pop	r8
     f06:	7f 90       	pop	r7
     f08:	6f 90       	pop	r6
     f0a:	5f 90       	pop	r5
     f0c:	4f 90       	pop	r4
     f0e:	3f 90       	pop	r3
     f10:	2f 90       	pop	r2
     f12:	08 95       	ret

00000f14 <pidController>:
* Output Return:	float
* Overview:			This computes the control effort using a PID 
*					controller approach
********************************************************************/
float pidController(float error, char reset )
{	
     f14:	6f 92       	push	r6
     f16:	7f 92       	push	r7
     f18:	8f 92       	push	r8
     f1a:	9f 92       	push	r9
     f1c:	af 92       	push	r10
     f1e:	bf 92       	push	r11
     f20:	cf 92       	push	r12
     f22:	df 92       	push	r13
     f24:	ef 92       	push	r14
     f26:	ff 92       	push	r15
     f28:	0f 93       	push	r16
     f2a:	1f 93       	push	r17
     f2c:	3b 01       	movw	r6, r22
     f2e:	4c 01       	movw	r8, r24
	// Reset the integrator error if specified
	if(reset){
     f30:	44 23       	and	r20, r20
     f32:	61 f0       	breq	.+24     	; 0xf4c <pidController+0x38>
		Ierror = 0;
     f34:	80 e0       	ldi	r24, 0x00	; 0
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	a0 e0       	ldi	r26, 0x00	; 0
     f3a:	b0 e0       	ldi	r27, 0x00	; 0
     f3c:	80 93 ee 01 	sts	0x01EE, r24
     f40:	90 93 ef 01 	sts	0x01EF, r25
     f44:	a0 93 f0 01 	sts	0x01F0, r26
     f48:	b0 93 f1 01 	sts	0x01F1, r27
	}
	// At the current error to the running sum
	Ierror += error;
     f4c:	c4 01       	movw	r24, r8
     f4e:	b3 01       	movw	r22, r6
     f50:	20 91 ee 01 	lds	r18, 0x01EE
     f54:	30 91 ef 01 	lds	r19, 0x01EF
     f58:	40 91 f0 01 	lds	r20, 0x01F0
     f5c:	50 91 f1 01 	lds	r21, 0x01F1
     f60:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
     f64:	5b 01       	movw	r10, r22
     f66:	6c 01       	movw	r12, r24
     f68:	60 93 ee 01 	sts	0x01EE, r22
     f6c:	70 93 ef 01 	sts	0x01EF, r23
     f70:	80 93 f0 01 	sts	0x01F0, r24
     f74:	90 93 f1 01 	sts	0x01F1, r25
     f78:	c4 01       	movw	r24, r8
     f7a:	b3 01       	movw	r22, r6
     f7c:	a4 01       	movw	r20, r8
     f7e:	93 01       	movw	r18, r6
     f80:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
     f84:	7b 01       	movw	r14, r22
     f86:	8c 01       	movw	r16, r24
     f88:	c4 01       	movw	r24, r8
     f8a:	b3 01       	movw	r22, r6
     f8c:	20 91 f2 01 	lds	r18, 0x01F2
     f90:	30 91 f3 01 	lds	r19, 0x01F3
     f94:	40 91 f4 01 	lds	r20, 0x01F4
     f98:	50 91 f5 01 	lds	r21, 0x01F5
     f9c:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
     fa0:	20 e0       	ldi	r18, 0x00	; 0
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	40 ea       	ldi	r20, 0xA0	; 160
     fa6:	50 e4       	ldi	r21, 0x40	; 64
     fa8:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
     fac:	9b 01       	movw	r18, r22
     fae:	ac 01       	movw	r20, r24
     fb0:	c8 01       	movw	r24, r16
     fb2:	b7 01       	movw	r22, r14
     fb4:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
     fb8:	7b 01       	movw	r14, r22
     fba:	8c 01       	movw	r16, r24
     fbc:	c6 01       	movw	r24, r12
     fbe:	b5 01       	movw	r22, r10
     fc0:	2f e6       	ldi	r18, 0x6F	; 111
     fc2:	32 e1       	ldi	r19, 0x12	; 18
     fc4:	43 e8       	ldi	r20, 0x83	; 131
     fc6:	5a e3       	ldi	r21, 0x3A	; 58
     fc8:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
     fcc:	9b 01       	movw	r18, r22
     fce:	ac 01       	movw	r20, r24
     fd0:	c8 01       	movw	r24, r16
     fd2:	b7 01       	movw	r22, r14
     fd4:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
	
	// Use the PID controller approach to calculate the effort
	float effort = (KP*error) + (KD*(error-error_old)) + (KI*Ierror);
	
	return effort;	
}
     fd8:	1f 91       	pop	r17
     fda:	0f 91       	pop	r16
     fdc:	ff 90       	pop	r15
     fde:	ef 90       	pop	r14
     fe0:	df 90       	pop	r13
     fe2:	cf 90       	pop	r12
     fe4:	bf 90       	pop	r11
     fe6:	af 90       	pop	r10
     fe8:	9f 90       	pop	r9
     fea:	8f 90       	pop	r8
     fec:	7f 90       	pop	r7
     fee:	6f 90       	pop	r6
     ff0:	08 95       	ret

00000ff2 <check_threshhold>:
* Output Return:	char
* Overview:			This check the IR values to thresholds
********************************************************************/

char check_threshhold(float F, float B, float L, float R)
{
     ff2:	2f 92       	push	r2
     ff4:	6f 92       	push	r6
     ff6:	7f 92       	push	r7
     ff8:	8f 92       	push	r8
     ffa:	9f 92       	push	r9
     ffc:	af 92       	push	r10
     ffe:	bf 92       	push	r11
    1000:	cf 92       	push	r12
    1002:	df 92       	push	r13
    1004:	ef 92       	push	r14
    1006:	ff 92       	push	r15
    1008:	0f 93       	push	r16
    100a:	1f 93       	push	r17
    100c:	df 93       	push	r29
    100e:	cf 93       	push	r28
    1010:	00 d0       	rcall	.+0      	; 0x1012 <check_threshhold+0x20>
    1012:	00 d0       	rcall	.+0      	; 0x1014 <check_threshhold+0x22>
    1014:	cd b7       	in	r28, 0x3d	; 61
    1016:	de b7       	in	r29, 0x3e	; 62
    1018:	69 83       	std	Y+1, r22	; 0x01
    101a:	7a 83       	std	Y+2, r23	; 0x02
    101c:	8b 83       	std	Y+3, r24	; 0x03
    101e:	9c 83       	std	Y+4, r25	; 0x04
	char check = 0;
	check += 0b00000001*(ftIR < F);
    1020:	60 90 fe 01 	lds	r6, 0x01FE
    1024:	70 90 ff 01 	lds	r7, 0x01FF
    1028:	80 90 00 02 	lds	r8, 0x0200
    102c:	90 90 01 02 	lds	r9, 0x0201
	check += 0b00000010*(bkIR < B);
    1030:	60 91 02 02 	lds	r22, 0x0202
    1034:	70 91 03 02 	lds	r23, 0x0203
    1038:	80 91 04 02 	lds	r24, 0x0204
    103c:	90 91 05 02 	lds	r25, 0x0205
    1040:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    1044:	28 2e       	mov	r2, r24
    1046:	22 1c       	adc	r2, r2
    1048:	22 24       	eor	r2, r2
    104a:	22 1c       	adc	r2, r2
    104c:	22 0c       	add	r2, r2
	check += 0b00000100*(ltIR < L);
    104e:	60 91 f6 01 	lds	r22, 0x01F6
    1052:	70 91 f7 01 	lds	r23, 0x01F7
    1056:	80 91 f8 01 	lds	r24, 0x01F8
    105a:	90 91 f9 01 	lds	r25, 0x01F9
    105e:	a8 01       	movw	r20, r16
    1060:	97 01       	movw	r18, r14
    1062:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    1066:	08 2f       	mov	r16, r24
    1068:	00 1f       	adc	r16, r16
    106a:	00 27       	eor	r16, r16
    106c:	00 1f       	adc	r16, r16
    106e:	00 0f       	add	r16, r16
    1070:	00 0f       	add	r16, r16
	check += 0b00001000*(rtIR < R);
    1072:	60 91 fa 01 	lds	r22, 0x01FA
    1076:	70 91 fb 01 	lds	r23, 0x01FB
    107a:	80 91 fc 01 	lds	r24, 0x01FC
    107e:	90 91 fd 01 	lds	r25, 0x01FD
    1082:	a6 01       	movw	r20, r12
    1084:	95 01       	movw	r18, r10
    1086:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    108a:	18 2f       	mov	r17, r24
    108c:	11 1f       	adc	r17, r17
    108e:	11 27       	eor	r17, r17
    1090:	11 1f       	adc	r17, r17
    1092:	11 0f       	add	r17, r17
    1094:	11 0f       	add	r17, r17
    1096:	11 0f       	add	r17, r17

char check_threshhold(float F, float B, float L, float R)
{
	char check = 0;
	check += 0b00000001*(ftIR < F);
	check += 0b00000010*(bkIR < B);
    1098:	ff 24       	eor	r15, r15
    109a:	c4 01       	movw	r24, r8
    109c:	b3 01       	movw	r22, r6
    109e:	29 81       	ldd	r18, Y+1	; 0x01
    10a0:	3a 81       	ldd	r19, Y+2	; 0x02
    10a2:	4b 81       	ldd	r20, Y+3	; 0x03
    10a4:	5c 81       	ldd	r21, Y+4	; 0x04
    10a6:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    10aa:	88 23       	and	r24, r24
    10ac:	14 f4       	brge	.+4      	; 0x10b2 <check_threshhold+0xc0>
    10ae:	ff 24       	eor	r15, r15
    10b0:	f3 94       	inc	r15
    10b2:	2f 0c       	add	r2, r15
	check += 0b00000100*(ltIR < L);
    10b4:	20 0e       	add	r2, r16
	check += 0b00001000*(rtIR < R);
	return check;	
}
    10b6:	82 2d       	mov	r24, r2
    10b8:	81 0f       	add	r24, r17
    10ba:	0f 90       	pop	r0
    10bc:	0f 90       	pop	r0
    10be:	0f 90       	pop	r0
    10c0:	0f 90       	pop	r0
    10c2:	cf 91       	pop	r28
    10c4:	df 91       	pop	r29
    10c6:	1f 91       	pop	r17
    10c8:	0f 91       	pop	r16
    10ca:	ff 90       	pop	r15
    10cc:	ef 90       	pop	r14
    10ce:	df 90       	pop	r13
    10d0:	cf 90       	pop	r12
    10d2:	bf 90       	pop	r11
    10d4:	af 90       	pop	r10
    10d6:	9f 90       	pop	r9
    10d8:	8f 90       	pop	r8
    10da:	7f 90       	pop	r7
    10dc:	6f 90       	pop	r6
    10de:	2f 90       	pop	r2
    10e0:	08 95       	ret

000010e2 <move_arc_stwt>:
		// bool stepper_FWD = arcLength >= 0;
		// STEPPER_move_stwt( STEPPER_BOTH, 
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk, // Left
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk); // Right
	// }
}
    10e2:	08 95       	ret

000010e4 <checkLightSensor>:
*					sensors values sequentially
********************************************************************/
void checkLightSensor( void )
{
	// Update both light sensor variables
	rightLightVolt = getRightLight();
    10e4:	0e 94 58 05 	call	0xab0	; 0xab0 <getRightLight>
    10e8:	60 93 06 02 	sts	0x0206, r22
    10ec:	70 93 07 02 	sts	0x0207, r23
    10f0:	80 93 08 02 	sts	0x0208, r24
    10f4:	90 93 09 02 	sts	0x0209, r25
	leftLightVolt = getLeftLight();
    10f8:	0e 94 6d 05 	call	0xada	; 0xada <getLeftLight>
    10fc:	60 93 0a 02 	sts	0x020A, r22
    1100:	70 93 0b 02 	sts	0x020B, r23
    1104:	80 93 0c 02 	sts	0x020C, r24
    1108:	90 93 0d 02 	sts	0x020D, r25
	// LCD_printf("R Voltage: %3.2f\nL Voltage: %3.2f\n\n\n", voltageR, voltageL);
	// TMRSRVC_delay(2000);//wait 2 seconds
	// LCD_clear;
}
    110c:	08 95       	ret

0000110e <checkIR>:
*					finding sensor values sequentially
********************************************************************/
void checkIR( void )
{
	// Update all IR values
	ftIR = getFrontIR();
    110e:	0e 94 ef 04 	call	0x9de	; 0x9de <getFrontIR>
    1112:	60 93 fe 01 	sts	0x01FE, r22
    1116:	70 93 ff 01 	sts	0x01FF, r23
    111a:	80 93 00 02 	sts	0x0200, r24
    111e:	90 93 01 02 	sts	0x0201, r25
	bkIR = 50;
    1122:	80 e0       	ldi	r24, 0x00	; 0
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	a8 e4       	ldi	r26, 0x48	; 72
    1128:	b2 e4       	ldi	r27, 0x42	; 66
    112a:	80 93 02 02 	sts	0x0202, r24
    112e:	90 93 03 02 	sts	0x0203, r25
    1132:	a0 93 04 02 	sts	0x0204, r26
    1136:	b0 93 05 02 	sts	0x0205, r27
	ltIR = getLeftIR();
    113a:	0e 94 35 05 	call	0xa6a	; 0xa6a <getLeftIR>
    113e:	60 93 f6 01 	sts	0x01F6, r22
    1142:	70 93 f7 01 	sts	0x01F7, r23
    1146:	80 93 f8 01 	sts	0x01F8, r24
    114a:	90 93 f9 01 	sts	0x01F9, r25
	rtIR = getRightIR();
    114e:	0e 94 12 05 	call	0xa24	; 0xa24 <getRightIR>
    1152:	60 93 fa 01 	sts	0x01FA, r22
    1156:	70 93 fb 01 	sts	0x01FB, r23
    115a:	80 93 fc 01 	sts	0x01FC, r24
    115e:	90 93 fd 01 	sts	0x01FD, r25
}
    1162:	08 95       	ret

00001164 <moveLight>:
					 1: Light_Lover = track the light but do not collide
					 2: Light_Aggro = run towards the light and touch it
					 3: Light_Shy = run away from the light
********************************************************************/
char moveLight( int lightBehavior)
{
    1164:	3f 92       	push	r3
    1166:	4f 92       	push	r4
    1168:	5f 92       	push	r5
    116a:	6f 92       	push	r6
    116c:	7f 92       	push	r7
    116e:	8f 92       	push	r8
    1170:	9f 92       	push	r9
    1172:	af 92       	push	r10
    1174:	bf 92       	push	r11
    1176:	cf 92       	push	r12
    1178:	df 92       	push	r13
    117a:	ef 92       	push	r14
    117c:	ff 92       	push	r15
    117e:	0f 93       	push	r16
    1180:	1f 93       	push	r17
    1182:	7c 01       	movw	r14, r24
	// call the moveWall() to detect walls and return a Boolean
	
	BOOL isLight = (rightLightVolt > LIGHT_R_THRESH)||(leftLightVolt > LIGHT_L_THRESH);
    1184:	40 90 06 02 	lds	r4, 0x0206
    1188:	50 90 07 02 	lds	r5, 0x0207
    118c:	60 90 08 02 	lds	r6, 0x0208
    1190:	70 90 09 02 	lds	r7, 0x0209
    1194:	c3 01       	movw	r24, r6
    1196:	b2 01       	movw	r22, r4
    1198:	2b e7       	ldi	r18, 0x7B	; 123
    119a:	34 e1       	ldi	r19, 0x14	; 20
    119c:	46 e8       	ldi	r20, 0x86	; 134
    119e:	50 e4       	ldi	r21, 0x40	; 64
    11a0:	0e 94 39 23 	call	0x4672	; 0x4672 <__gesf2>
    11a4:	18 16       	cp	r1, r24
    11a6:	94 f0       	brlt	.+36     	; 0x11cc <moveLight+0x68>
    11a8:	00 e0       	ldi	r16, 0x00	; 0
    11aa:	10 e0       	ldi	r17, 0x00	; 0
    11ac:	60 91 0a 02 	lds	r22, 0x020A
    11b0:	70 91 0b 02 	lds	r23, 0x020B
    11b4:	80 91 0c 02 	lds	r24, 0x020C
    11b8:	90 91 0d 02 	lds	r25, 0x020D
    11bc:	2b e7       	ldi	r18, 0x7B	; 123
    11be:	34 e1       	ldi	r19, 0x14	; 20
    11c0:	46 e8       	ldi	r20, 0x86	; 134
    11c2:	50 e4       	ldi	r21, 0x40	; 64
    11c4:	0e 94 39 23 	call	0x4672	; 0x4672 <__gesf2>
    11c8:	18 16       	cp	r1, r24
    11ca:	14 f4       	brge	.+4      	; 0x11d0 <moveLight+0x6c>
    11cc:	01 e0       	ldi	r16, 0x01	; 1
    11ce:	10 e0       	ldi	r17, 0x00	; 0
    11d0:	30 2e       	mov	r3, r16
	if(!isLight){
    11d2:	00 23       	and	r16, r16
    11d4:	09 f4       	brne	.+2      	; 0x11d8 <moveLight+0x74>
    11d6:	31 c1       	rjmp	.+610    	; 0x143a <moveLight+0x2d6>
	float stepper_speed_L = 0;
	float stepper_speed_R = 0;
	BOOL direction_L = 1;
	BOOL direction_R = 1;
	
	switch(lightBehavior){
    11d8:	81 e0       	ldi	r24, 0x01	; 1
    11da:	e8 16       	cp	r14, r24
    11dc:	f1 04       	cpc	r15, r1
    11de:	f1 f0       	breq	.+60     	; 0x121c <moveLight+0xb8>
    11e0:	92 e0       	ldi	r25, 0x02	; 2
    11e2:	e9 16       	cp	r14, r25
    11e4:	f1 04       	cpc	r15, r1
    11e6:	1c f4       	brge	.+6      	; 0x11ee <moveLight+0x8a>
    11e8:	ef 28       	or	r14, r15
    11ea:	c1 f0       	breq	.+48     	; 0x121c <moveLight+0xb8>
    11ec:	0a c0       	rjmp	.+20     	; 0x1202 <moveLight+0x9e>
    11ee:	e2 e0       	ldi	r30, 0x02	; 2
    11f0:	ee 16       	cp	r14, r30
    11f2:	f1 04       	cpc	r15, r1
    11f4:	09 f4       	brne	.+2      	; 0x11f8 <moveLight+0x94>
    11f6:	4f c0       	rjmp	.+158    	; 0x1296 <moveLight+0x132>
    11f8:	f3 e0       	ldi	r31, 0x03	; 3
    11fa:	ef 16       	cp	r14, r31
    11fc:	f1 04       	cpc	r15, r1
    11fe:	09 f4       	brne	.+2      	; 0x1202 <moveLight+0x9e>
    1200:	7d c0       	rjmp	.+250    	; 0x12fc <moveLight+0x198>
    1202:	0f 2e       	mov	r0, r31
    1204:	f0 e0       	ldi	r31, 0x00	; 0
    1206:	cf 2e       	mov	r12, r31
    1208:	f0 e0       	ldi	r31, 0x00	; 0
    120a:	df 2e       	mov	r13, r31
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	ef 2e       	mov	r14, r31
    1210:	f0 e0       	ldi	r31, 0x00	; 0
    1212:	ff 2e       	mov	r15, r31
    1214:	f0 2d       	mov	r31, r0
    1216:	46 01       	movw	r8, r12
    1218:	57 01       	movw	r10, r14
    121a:	a2 c0       	rjmp	.+324    	; 0x1360 <moveLight+0x1fc>
			stepper_speed_L = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_R_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
			stepper_speed_R = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_L_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
			break;
						
		case LIGHT_LOVER:
			stepper_speed_L = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_L_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    121c:	60 91 0a 02 	lds	r22, 0x020A
    1220:	70 91 0b 02 	lds	r23, 0x020B
    1224:	80 91 0c 02 	lds	r24, 0x020C
    1228:	90 91 0d 02 	lds	r25, 0x020D
    122c:	2b e7       	ldi	r18, 0x7B	; 123
    122e:	34 e1       	ldi	r19, 0x14	; 20
    1230:	46 e8       	ldi	r20, 0x86	; 134
    1232:	50 e4       	ldi	r21, 0x40	; 64
    1234:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
    1238:	28 e5       	ldi	r18, 0x58	; 88
    123a:	3f e8       	ldi	r19, 0x8F	; 143
    123c:	42 e0       	ldi	r20, 0x02	; 2
    123e:	5f e3       	ldi	r21, 0x3F	; 63
    1240:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
    1244:	20 e0       	ldi	r18, 0x00	; 0
    1246:	30 e0       	ldi	r19, 0x00	; 0
    1248:	48 e4       	ldi	r20, 0x48	; 72
    124a:	52 ec       	ldi	r21, 0xC2	; 194
    124c:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
    1250:	20 e0       	ldi	r18, 0x00	; 0
    1252:	30 e0       	ldi	r19, 0x00	; 0
    1254:	48 e4       	ldi	r20, 0x48	; 72
    1256:	52 e4       	ldi	r21, 0x42	; 66
    1258:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
    125c:	6b 01       	movw	r12, r22
    125e:	7c 01       	movw	r14, r24
			stepper_speed_R = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_R_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    1260:	c3 01       	movw	r24, r6
    1262:	b2 01       	movw	r22, r4
    1264:	2b e7       	ldi	r18, 0x7B	; 123
    1266:	34 e1       	ldi	r19, 0x14	; 20
    1268:	46 e8       	ldi	r20, 0x86	; 134
    126a:	50 e4       	ldi	r21, 0x40	; 64
    126c:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
    1270:	28 e5       	ldi	r18, 0x58	; 88
    1272:	3f e8       	ldi	r19, 0x8F	; 143
    1274:	42 e0       	ldi	r20, 0x02	; 2
    1276:	5f e3       	ldi	r21, 0x3F	; 63
    1278:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
    127c:	20 e0       	ldi	r18, 0x00	; 0
    127e:	30 e0       	ldi	r19, 0x00	; 0
    1280:	48 e4       	ldi	r20, 0x48	; 72
    1282:	52 ec       	ldi	r21, 0xC2	; 194
    1284:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
    1288:	20 e0       	ldi	r18, 0x00	; 0
    128a:	30 e0       	ldi	r19, 0x00	; 0
    128c:	48 e4       	ldi	r20, 0x48	; 72
    128e:	52 e4       	ldi	r21, 0x42	; 66
    1290:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
    1294:	63 c0       	rjmp	.+198    	; 0x135c <moveLight+0x1f8>
			break;
			
		case LIGHT_AGGRO:	
			stepper_speed_R = MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_L_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    1296:	60 91 0a 02 	lds	r22, 0x020A
    129a:	70 91 0b 02 	lds	r23, 0x020B
    129e:	80 91 0c 02 	lds	r24, 0x020C
    12a2:	90 91 0d 02 	lds	r25, 0x020D
    12a6:	2b e7       	ldi	r18, 0x7B	; 123
    12a8:	34 e1       	ldi	r19, 0x14	; 20
    12aa:	46 e8       	ldi	r20, 0x86	; 134
    12ac:	50 e4       	ldi	r21, 0x40	; 64
    12ae:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
    12b2:	28 e5       	ldi	r18, 0x58	; 88
    12b4:	3f e8       	ldi	r19, 0x8F	; 143
    12b6:	42 e0       	ldi	r20, 0x02	; 2
    12b8:	5f e3       	ldi	r21, 0x3F	; 63
    12ba:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
    12be:	20 e0       	ldi	r18, 0x00	; 0
    12c0:	30 e0       	ldi	r19, 0x00	; 0
    12c2:	48 e4       	ldi	r20, 0x48	; 72
    12c4:	52 e4       	ldi	r21, 0x42	; 66
    12c6:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
    12ca:	4b 01       	movw	r8, r22
    12cc:	5c 01       	movw	r10, r24
			stepper_speed_L = MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_R_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    12ce:	c3 01       	movw	r24, r6
    12d0:	b2 01       	movw	r22, r4
    12d2:	2b e7       	ldi	r18, 0x7B	; 123
    12d4:	34 e1       	ldi	r19, 0x14	; 20
    12d6:	46 e8       	ldi	r20, 0x86	; 134
    12d8:	50 e4       	ldi	r21, 0x40	; 64
    12da:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
    12de:	28 e5       	ldi	r18, 0x58	; 88
    12e0:	3f e8       	ldi	r19, 0x8F	; 143
    12e2:	42 e0       	ldi	r20, 0x02	; 2
    12e4:	5f e3       	ldi	r21, 0x3F	; 63
    12e6:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
    12ea:	20 e0       	ldi	r18, 0x00	; 0
    12ec:	30 e0       	ldi	r19, 0x00	; 0
    12ee:	48 e4       	ldi	r20, 0x48	; 72
    12f0:	52 e4       	ldi	r21, 0x42	; 66
    12f2:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
    12f6:	6b 01       	movw	r12, r22
    12f8:	7c 01       	movw	r14, r24
    12fa:	32 c0       	rjmp	.+100    	; 0x1360 <moveLight+0x1fc>
			break;
			
		case LIGHT_SHY:
			stepper_speed_L = MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_L_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    12fc:	60 91 0a 02 	lds	r22, 0x020A
    1300:	70 91 0b 02 	lds	r23, 0x020B
    1304:	80 91 0c 02 	lds	r24, 0x020C
    1308:	90 91 0d 02 	lds	r25, 0x020D
    130c:	2b e7       	ldi	r18, 0x7B	; 123
    130e:	34 e1       	ldi	r19, 0x14	; 20
    1310:	46 e8       	ldi	r20, 0x86	; 134
    1312:	50 e4       	ldi	r21, 0x40	; 64
    1314:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
    1318:	28 e5       	ldi	r18, 0x58	; 88
    131a:	3f e8       	ldi	r19, 0x8F	; 143
    131c:	42 e0       	ldi	r20, 0x02	; 2
    131e:	5f e3       	ldi	r21, 0x3F	; 63
    1320:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
    1324:	20 e0       	ldi	r18, 0x00	; 0
    1326:	30 e0       	ldi	r19, 0x00	; 0
    1328:	48 e4       	ldi	r20, 0x48	; 72
    132a:	52 e4       	ldi	r21, 0x42	; 66
    132c:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
    1330:	6b 01       	movw	r12, r22
    1332:	7c 01       	movw	r14, r24
			stepper_speed_R = MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_R_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    1334:	c3 01       	movw	r24, r6
    1336:	b2 01       	movw	r22, r4
    1338:	2b e7       	ldi	r18, 0x7B	; 123
    133a:	34 e1       	ldi	r19, 0x14	; 20
    133c:	46 e8       	ldi	r20, 0x86	; 134
    133e:	50 e4       	ldi	r21, 0x40	; 64
    1340:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
    1344:	28 e5       	ldi	r18, 0x58	; 88
    1346:	3f e8       	ldi	r19, 0x8F	; 143
    1348:	42 e0       	ldi	r20, 0x02	; 2
    134a:	5f e3       	ldi	r21, 0x3F	; 63
    134c:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
    1350:	20 e0       	ldi	r18, 0x00	; 0
    1352:	30 e0       	ldi	r19, 0x00	; 0
    1354:	48 e4       	ldi	r20, 0x48	; 72
    1356:	52 e4       	ldi	r21, 0x42	; 66
    1358:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
    135c:	4b 01       	movw	r8, r22
    135e:	5c 01       	movw	r10, r24
			break;
			
		default: break;
		}
		
		if(stepper_speed_L<0){
    1360:	c7 01       	movw	r24, r14
    1362:	b6 01       	movw	r22, r12
    1364:	20 e0       	ldi	r18, 0x00	; 0
    1366:	30 e0       	ldi	r19, 0x00	; 0
    1368:	40 e0       	ldi	r20, 0x00	; 0
    136a:	50 e0       	ldi	r21, 0x00	; 0
    136c:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    1370:	88 23       	and	r24, r24
    1372:	64 f4       	brge	.+24     	; 0x138c <moveLight+0x228>
    1374:	0f 2e       	mov	r0, r31
    1376:	f0 e0       	ldi	r31, 0x00	; 0
    1378:	cf 2e       	mov	r12, r31
    137a:	f0 e0       	ldi	r31, 0x00	; 0
    137c:	df 2e       	mov	r13, r31
    137e:	f0 e0       	ldi	r31, 0x00	; 0
    1380:	ef 2e       	mov	r14, r31
    1382:	f0 e0       	ldi	r31, 0x00	; 0
    1384:	ff 2e       	mov	r15, r31
    1386:	f0 2d       	mov	r31, r0
    1388:	66 24       	eor	r6, r6
    138a:	02 c0       	rjmp	.+4      	; 0x1390 <moveLight+0x22c>
    138c:	66 24       	eor	r6, r6
    138e:	63 94       	inc	r6
			stepper_speed_L = 0;
			direction_L = 0;}
		
		if(stepper_speed_R<0){
    1390:	c5 01       	movw	r24, r10
    1392:	b4 01       	movw	r22, r8
    1394:	20 e0       	ldi	r18, 0x00	; 0
    1396:	30 e0       	ldi	r19, 0x00	; 0
    1398:	40 e0       	ldi	r20, 0x00	; 0
    139a:	50 e0       	ldi	r21, 0x00	; 0
    139c:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    13a0:	88 23       	and	r24, r24
    13a2:	64 f4       	brge	.+24     	; 0x13bc <moveLight+0x258>
    13a4:	0f 2e       	mov	r0, r31
    13a6:	f0 e0       	ldi	r31, 0x00	; 0
    13a8:	8f 2e       	mov	r8, r31
    13aa:	f0 e0       	ldi	r31, 0x00	; 0
    13ac:	9f 2e       	mov	r9, r31
    13ae:	f0 e0       	ldi	r31, 0x00	; 0
    13b0:	af 2e       	mov	r10, r31
    13b2:	f0 e0       	ldi	r31, 0x00	; 0
    13b4:	bf 2e       	mov	r11, r31
    13b6:	f0 2d       	mov	r31, r0
    13b8:	77 24       	eor	r7, r7
    13ba:	02 c0       	rjmp	.+4      	; 0x13c0 <moveLight+0x25c>
    13bc:	77 24       	eor	r7, r7
    13be:	73 94       	inc	r7
			stepper_speed_R = 0;
			direction_R = 0;}
			
		// STEPPER_REV
		STEPPER_move_stnb( STEPPER_BOTH, 
    13c0:	8d b7       	in	r24, 0x3d	; 61
    13c2:	9e b7       	in	r25, 0x3e	; 62
    13c4:	09 97       	sbiw	r24, 0x09	; 9
    13c6:	0f b6       	in	r0, 0x3f	; 63
    13c8:	f8 94       	cli
    13ca:	9e bf       	out	0x3e, r25	; 62
    13cc:	0f be       	out	0x3f, r0	; 63
    13ce:	8d bf       	out	0x3d, r24	; 61
    13d0:	0d b7       	in	r16, 0x3d	; 61
    13d2:	1e b7       	in	r17, 0x3e	; 62
    13d4:	0f 5f       	subi	r16, 0xFF	; 255
    13d6:	1f 4f       	sbci	r17, 0xFF	; 255
    13d8:	c7 01       	movw	r24, r14
    13da:	b6 01       	movw	r22, r12
    13dc:	0e 94 5b 22 	call	0x44b6	; 0x44b6 <__fixunssfsi>
    13e0:	6b 01       	movw	r12, r22
    13e2:	7c 01       	movw	r14, r24
    13e4:	82 e3       	ldi	r24, 0x32	; 50
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	f8 01       	movw	r30, r16
    13ea:	91 83       	std	Z+1, r25	; 0x01
    13ec:	80 83       	st	Z, r24
    13ee:	c5 01       	movw	r24, r10
    13f0:	b4 01       	movw	r22, r8
    13f2:	0e 94 5b 22 	call	0x44b6	; 0x44b6 <__fixunssfsi>
    13f6:	f8 01       	movw	r30, r16
    13f8:	73 83       	std	Z+3, r23	; 0x03
    13fa:	62 83       	std	Z+2, r22	; 0x02
    13fc:	82 ec       	ldi	r24, 0xC2	; 194
    13fe:	91 e0       	ldi	r25, 0x01	; 1
    1400:	95 83       	std	Z+5, r25	; 0x05
    1402:	84 83       	std	Z+4, r24	; 0x04
    1404:	16 82       	std	Z+6, r1	; 0x06
    1406:	10 86       	std	Z+8, r1	; 0x08
    1408:	17 82       	std	Z+7, r1	; 0x07
    140a:	81 e0       	ldi	r24, 0x01	; 1
    140c:	62 e0       	ldi	r22, 0x02	; 2
    140e:	46 2d       	mov	r20, r6
    1410:	22 e3       	ldi	r18, 0x32	; 50
    1412:	30 e0       	ldi	r19, 0x00	; 0
    1414:	86 01       	movw	r16, r12
    1416:	92 ec       	ldi	r25, 0xC2	; 194
    1418:	e9 2e       	mov	r14, r25
    141a:	91 e0       	ldi	r25, 0x01	; 1
    141c:	f9 2e       	mov	r15, r25
    141e:	cc 24       	eor	r12, r12
    1420:	aa 24       	eor	r10, r10
    1422:	bb 24       	eor	r11, r11
    1424:	87 2c       	mov	r8, r7
    1426:	0e 94 af 11 	call	0x235e	; 0x235e <STEPPER_move>
    142a:	8d b7       	in	r24, 0x3d	; 61
    142c:	9e b7       	in	r25, 0x3e	; 62
    142e:	09 96       	adiw	r24, 0x09	; 9
    1430:	0f b6       	in	r0, 0x3f	; 63
    1432:	f8 94       	cli
    1434:	9e bf       	out	0x3e, r25	; 62
    1436:	0f be       	out	0x3f, r0	; 63
    1438:	8d bf       	out	0x3d, r24	; 61
		direction_L, 50, stepper_speed_L, 450, STEPPER_BRK_OFF, // Left
		direction_R, 50, stepper_speed_R, 450, STEPPER_BRK_OFF ); // Right

		return isLight;
}
    143a:	83 2d       	mov	r24, r3
    143c:	1f 91       	pop	r17
    143e:	0f 91       	pop	r16
    1440:	ff 90       	pop	r15
    1442:	ef 90       	pop	r14
    1444:	df 90       	pop	r13
    1446:	cf 90       	pop	r12
    1448:	bf 90       	pop	r11
    144a:	af 90       	pop	r10
    144c:	9f 90       	pop	r9
    144e:	8f 90       	pop	r8
    1450:	7f 90       	pop	r7
    1452:	6f 90       	pop	r6
    1454:	5f 90       	pop	r5
    1456:	4f 90       	pop	r4
    1458:	3f 90       	pop	r3
    145a:	08 95       	ret

0000145c <moveAway>:
* Input Variables:	none
* Output Return:	char
* Overview:			Use a comment block like this before functions
********************************************************************/
char moveAway ( void )
{	
    145c:	2f 92       	push	r2
    145e:	3f 92       	push	r3
    1460:	4f 92       	push	r4
    1462:	5f 92       	push	r5
    1464:	6f 92       	push	r6
    1466:	7f 92       	push	r7
    1468:	8f 92       	push	r8
    146a:	9f 92       	push	r9
    146c:	af 92       	push	r10
    146e:	bf 92       	push	r11
    1470:	cf 92       	push	r12
    1472:	df 92       	push	r13
    1474:	ef 92       	push	r14
    1476:	ff 92       	push	r15
    1478:	0f 93       	push	r16
    147a:	1f 93       	push	r17
    147c:	df 93       	push	r29
    147e:	cf 93       	push	r28
    1480:	00 d0       	rcall	.+0      	; 0x1482 <moveAway+0x26>
    1482:	00 d0       	rcall	.+0      	; 0x1484 <moveAway+0x28>
    1484:	cd b7       	in	r28, 0x3d	; 61
    1486:	de b7       	in	r29, 0x3e	; 62
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
    1488:	60 90 fe 01 	lds	r6, 0x01FE
    148c:	70 90 ff 01 	lds	r7, 0x01FF
    1490:	80 90 00 02 	lds	r8, 0x0200
    1494:	90 90 01 02 	lds	r9, 0x0201
    1498:	a0 90 02 02 	lds	r10, 0x0202
    149c:	b0 90 03 02 	lds	r11, 0x0203
    14a0:	c0 90 04 02 	lds	r12, 0x0204
    14a4:	d0 90 05 02 	lds	r13, 0x0205
	float moveX = rtIR - ltIR;
    14a8:	e0 90 fa 01 	lds	r14, 0x01FA
    14ac:	f0 90 fb 01 	lds	r15, 0x01FB
    14b0:	00 91 fc 01 	lds	r16, 0x01FC
    14b4:	10 91 fd 01 	lds	r17, 0x01FD
    14b8:	80 91 f6 01 	lds	r24, 0x01F6
    14bc:	90 91 f7 01 	lds	r25, 0x01F7
    14c0:	a0 91 f8 01 	lds	r26, 0x01F8
    14c4:	b0 91 f9 01 	lds	r27, 0x01F9
    14c8:	89 83       	std	Y+1, r24	; 0x01
    14ca:	9a 83       	std	Y+2, r25	; 0x02
    14cc:	ab 83       	std	Y+3, r26	; 0x03
    14ce:	bc 83       	std	Y+4, r27	; 0x04
    14d0:	c8 01       	movw	r24, r16
    14d2:	b7 01       	movw	r22, r14
    14d4:	29 81       	ldd	r18, Y+1	; 0x01
    14d6:	3a 81       	ldd	r19, Y+2	; 0x02
    14d8:	4b 81       	ldd	r20, Y+3	; 0x03
    14da:	5c 81       	ldd	r21, Y+4	; 0x04
    14dc:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
    14e0:	1b 01       	movw	r2, r22
    14e2:	2c 01       	movw	r4, r24
	
	// if the object is in front of us are behind us
	// move appropriately in the Y direction
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
    14e4:	c4 01       	movw	r24, r8
    14e6:	b3 01       	movw	r22, r6
    14e8:	20 e0       	ldi	r18, 0x00	; 0
    14ea:	30 e0       	ldi	r19, 0x00	; 0
    14ec:	40 ee       	ldi	r20, 0xE0	; 224
    14ee:	50 e4       	ldi	r21, 0x40	; 64
    14f0:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    14f4:	87 fd       	sbrc	r24, 7
    14f6:	0b c0       	rjmp	.+22     	; 0x150e <moveAway+0xb2>
    14f8:	c6 01       	movw	r24, r12
    14fa:	b5 01       	movw	r22, r10
    14fc:	20 e0       	ldi	r18, 0x00	; 0
    14fe:	30 e0       	ldi	r19, 0x00	; 0
    1500:	40 ee       	ldi	r20, 0xE0	; 224
    1502:	50 e4       	ldi	r21, 0x40	; 64
    1504:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    1508:	88 23       	and	r24, r24
    150a:	0c f0       	brlt	.+2      	; 0x150e <moveAway+0xb2>
    150c:	76 c0       	rjmp	.+236    	; 0x15fa <moveAway+0x19e>
{	
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
    150e:	c4 01       	movw	r24, r8
    1510:	b3 01       	movw	r22, r6
    1512:	a6 01       	movw	r20, r12
    1514:	95 01       	movw	r18, r10
    1516:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
    151a:	7b 01       	movw	r14, r22
    151c:	8c 01       	movw	r16, r24
	
	// if the object is in front of us are behind us
	// move appropriately in the Y direction
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
	{
			BOOL moveForward = (moveY >= 0);
    151e:	77 24       	eor	r7, r7
    1520:	20 e0       	ldi	r18, 0x00	; 0
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	40 e0       	ldi	r20, 0x00	; 0
    1526:	50 e0       	ldi	r21, 0x00	; 0
    1528:	0e 94 39 23 	call	0x4672	; 0x4672 <__gesf2>
    152c:	88 23       	and	r24, r24
    152e:	14 f0       	brlt	.+4      	; 0x1534 <moveAway+0xd8>
    1530:	77 24       	eor	r7, r7
    1532:	73 94       	inc	r7
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    1534:	c8 01       	movw	r24, r16
    1536:	b7 01       	movw	r22, r14
    1538:	0e 94 56 22 	call	0x44ac	; 0x44ac <__fixsfsi>
    153c:	9b 01       	movw	r18, r22
    153e:	77 ff       	sbrs	r23, 7
    1540:	03 c0       	rjmp	.+6      	; 0x1548 <moveAway+0xec>
    1542:	30 95       	com	r19
    1544:	21 95       	neg	r18
    1546:	3f 4f       	sbci	r19, 0xFF	; 255
    1548:	b9 01       	movw	r22, r18
    154a:	88 27       	eor	r24, r24
    154c:	77 fd       	sbrc	r23, 7
    154e:	80 95       	com	r24
    1550:	98 2f       	mov	r25, r24
    1552:	0e 94 89 22 	call	0x4512	; 0x4512 <__floatsisf>
    1556:	6b 01       	movw	r12, r22
    1558:	7c 01       	movw	r14, r24
    155a:	ad b7       	in	r26, 0x3d	; 61
    155c:	be b7       	in	r27, 0x3e	; 62
    155e:	19 97       	sbiw	r26, 0x09	; 9
    1560:	0f b6       	in	r0, 0x3f	; 63
    1562:	f8 94       	cli
    1564:	be bf       	out	0x3e, r27	; 62
    1566:	0f be       	out	0x3f, r0	; 63
    1568:	ad bf       	out	0x3d, r26	; 61
    156a:	0d b7       	in	r16, 0x3d	; 61
    156c:	1e b7       	in	r17, 0x3e	; 62
    156e:	0f 5f       	subi	r16, 0xFF	; 255
    1570:	1f 4f       	sbci	r17, 0xFF	; 255
    1572:	a2 01       	movw	r20, r4
    1574:	91 01       	movw	r18, r2
    1576:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
    157a:	0e 94 5b 22 	call	0x44b6	; 0x44b6 <__fixunssfsi>
    157e:	4b 01       	movw	r8, r22
    1580:	5c 01       	movw	r10, r24
    1582:	82 e3       	ldi	r24, 0x32	; 50
    1584:	90 e0       	ldi	r25, 0x00	; 0
    1586:	f8 01       	movw	r30, r16
    1588:	91 83       	std	Z+1, r25	; 0x01
    158a:	80 83       	st	Z, r24
    158c:	c7 01       	movw	r24, r14
    158e:	b6 01       	movw	r22, r12
    1590:	a2 01       	movw	r20, r4
    1592:	91 01       	movw	r18, r2
    1594:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
    1598:	0e 94 5b 22 	call	0x44b6	; 0x44b6 <__fixunssfsi>
    159c:	d8 01       	movw	r26, r16
    159e:	13 96       	adiw	r26, 0x03	; 3
    15a0:	7c 93       	st	X, r23
    15a2:	6e 93       	st	-X, r22
    15a4:	12 97       	sbiw	r26, 0x02	; 2
    15a6:	82 ec       	ldi	r24, 0xC2	; 194
    15a8:	91 e0       	ldi	r25, 0x01	; 1
    15aa:	15 96       	adiw	r26, 0x05	; 5
    15ac:	9c 93       	st	X, r25
    15ae:	8e 93       	st	-X, r24
    15b0:	14 97       	sbiw	r26, 0x04	; 4
    15b2:	16 96       	adiw	r26, 0x06	; 6
    15b4:	1c 92       	st	X, r1
    15b6:	16 97       	sbiw	r26, 0x06	; 6
    15b8:	18 96       	adiw	r26, 0x08	; 8
    15ba:	1c 92       	st	X, r1
    15bc:	1e 92       	st	-X, r1
    15be:	17 97       	sbiw	r26, 0x07	; 7
    15c0:	81 e0       	ldi	r24, 0x01	; 1
    15c2:	62 e0       	ldi	r22, 0x02	; 2
    15c4:	47 2d       	mov	r20, r7
    15c6:	22 e3       	ldi	r18, 0x32	; 50
    15c8:	30 e0       	ldi	r19, 0x00	; 0
    15ca:	84 01       	movw	r16, r8
    15cc:	e2 ec       	ldi	r30, 0xC2	; 194
    15ce:	ee 2e       	mov	r14, r30
    15d0:	e1 e0       	ldi	r30, 0x01	; 1
    15d2:	fe 2e       	mov	r15, r30
    15d4:	cc 24       	eor	r12, r12
    15d6:	aa 24       	eor	r10, r10
    15d8:	bb 24       	eor	r11, r11
    15da:	87 2c       	mov	r8, r7
    15dc:	0e 94 af 11 	call	0x235e	; 0x235e <STEPPER_move>
			moveForward, 50, abs(moveY)+moveX, 450, STEPPER_BRK_OFF, // Left
			moveForward, 50, abs(moveY)-moveX, 450, STEPPER_BRK_OFF ); // Right
			
			// debug LCP print statement
			LCD_clear();
    15e0:	ed b7       	in	r30, 0x3d	; 61
    15e2:	fe b7       	in	r31, 0x3e	; 62
    15e4:	39 96       	adiw	r30, 0x09	; 9
    15e6:	0f b6       	in	r0, 0x3f	; 63
    15e8:	f8 94       	cli
    15ea:	fe bf       	out	0x3e, r31	; 62
    15ec:	0f be       	out	0x3f, r0	; 63
    15ee:	ed bf       	out	0x3d, r30	; 61
    15f0:	0e 94 ce 0e 	call	0x1d9c	; 0x1d9c <LCD_clear>
			LCD_printf("moveAwayF\n\n\n\n");
    15f4:	84 e2       	ldi	r24, 0x24	; 36
    15f6:	91 e0       	ldi	r25, 0x01	; 1
    15f8:	8e c0       	rjmp	.+284    	; 0x1716 <moveAway+0x2ba>
			shyRobot = 1;
	}
	
	// if the object is on either side of the robot
	// rotate the robot appropriately
	else if ((rtIR < IR_OBST_R_THRESH))
    15fa:	c8 01       	movw	r24, r16
    15fc:	b7 01       	movw	r22, r14
    15fe:	20 e0       	ldi	r18, 0x00	; 0
    1600:	30 e0       	ldi	r19, 0x00	; 0
    1602:	40 e2       	ldi	r20, 0x20	; 32
    1604:	51 e4       	ldi	r21, 0x41	; 65
    1606:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    160a:	88 23       	and	r24, r24
    160c:	ac f5       	brge	.+106    	; 0x1678 <moveAway+0x21c>
	{
			BOOL moveForwardR = ~(moveX <= 0);
			BOOL moveForwardL = ~(moveX > 0);
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    160e:	c2 01       	movw	r24, r4
    1610:	b1 01       	movw	r22, r2
    1612:	0e 94 56 22 	call	0x44ac	; 0x44ac <__fixsfsi>
    1616:	8b 01       	movw	r16, r22
    1618:	77 ff       	sbrs	r23, 7
    161a:	03 c0       	rjmp	.+6      	; 0x1622 <moveAway+0x1c6>
    161c:	10 95       	com	r17
    161e:	01 95       	neg	r16
    1620:	1f 4f       	sbci	r17, 0xFF	; 255
    1622:	8d b7       	in	r24, 0x3d	; 61
    1624:	9e b7       	in	r25, 0x3e	; 62
    1626:	09 97       	sbiw	r24, 0x09	; 9
    1628:	0f b6       	in	r0, 0x3f	; 63
    162a:	f8 94       	cli
    162c:	9e bf       	out	0x3e, r25	; 62
    162e:	0f be       	out	0x3f, r0	; 63
    1630:	8d bf       	out	0x3d, r24	; 61
    1632:	ed b7       	in	r30, 0x3d	; 61
    1634:	fe b7       	in	r31, 0x3e	; 62
    1636:	31 96       	adiw	r30, 0x01	; 1
    1638:	88 ec       	ldi	r24, 0xC8	; 200
    163a:	90 e0       	ldi	r25, 0x00	; 0
    163c:	ad b7       	in	r26, 0x3d	; 61
    163e:	be b7       	in	r27, 0x3e	; 62
    1640:	12 96       	adiw	r26, 0x02	; 2
    1642:	9c 93       	st	X, r25
    1644:	8e 93       	st	-X, r24
    1646:	11 97       	sbiw	r26, 0x01	; 1
    1648:	13 83       	std	Z+3, r17	; 0x03
    164a:	02 83       	std	Z+2, r16	; 0x02
    164c:	82 ec       	ldi	r24, 0xC2	; 194
    164e:	91 e0       	ldi	r25, 0x01	; 1
    1650:	95 83       	std	Z+5, r25	; 0x05
    1652:	84 83       	std	Z+4, r24	; 0x04
    1654:	16 82       	std	Z+6, r1	; 0x06
    1656:	10 86       	std	Z+8, r1	; 0x08
    1658:	17 82       	std	Z+7, r1	; 0x07
    165a:	81 e0       	ldi	r24, 0x01	; 1
    165c:	62 e0       	ldi	r22, 0x02	; 2
    165e:	40 e0       	ldi	r20, 0x00	; 0
    1660:	28 ec       	ldi	r18, 0xC8	; 200
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	72 ec       	ldi	r23, 0xC2	; 194
    1666:	e7 2e       	mov	r14, r23
    1668:	71 e0       	ldi	r23, 0x01	; 1
    166a:	f7 2e       	mov	r15, r23
    166c:	cc 24       	eor	r12, r12
    166e:	aa 24       	eor	r10, r10
    1670:	bb 24       	eor	r11, r11
    1672:	88 24       	eor	r8, r8
    1674:	83 94       	inc	r8
    1676:	41 c0       	rjmp	.+130    	; 0x16fa <moveAway+0x29e>
			
			// if the robot was shy
			// state that fact
			shyRobot = 1;
	}
	else if ((ltIR < IR_OBST_L_THRESH))
    1678:	69 81       	ldd	r22, Y+1	; 0x01
    167a:	7a 81       	ldd	r23, Y+2	; 0x02
    167c:	8b 81       	ldd	r24, Y+3	; 0x03
    167e:	9c 81       	ldd	r25, Y+4	; 0x04
    1680:	20 e0       	ldi	r18, 0x00	; 0
    1682:	30 e0       	ldi	r19, 0x00	; 0
    1684:	40 e2       	ldi	r20, 0x20	; 32
    1686:	51 e4       	ldi	r21, 0x41	; 65
    1688:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    168c:	87 fd       	sbrc	r24, 7
    168e:	02 c0       	rjmp	.+4      	; 0x1694 <moveAway+0x238>
    1690:	80 e0       	ldi	r24, 0x00	; 0
    1692:	44 c0       	rjmp	.+136    	; 0x171c <moveAway+0x2c0>
	{
			BOOL moveForwardR = ~(moveX <= 0);
			BOOL moveForwardL = ~(moveX > 0);
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    1694:	c2 01       	movw	r24, r4
    1696:	b1 01       	movw	r22, r2
    1698:	0e 94 56 22 	call	0x44ac	; 0x44ac <__fixsfsi>
    169c:	8b 01       	movw	r16, r22
    169e:	77 ff       	sbrs	r23, 7
    16a0:	03 c0       	rjmp	.+6      	; 0x16a8 <moveAway+0x24c>
    16a2:	10 95       	com	r17
    16a4:	01 95       	neg	r16
    16a6:	1f 4f       	sbci	r17, 0xFF	; 255
    16a8:	8d b7       	in	r24, 0x3d	; 61
    16aa:	9e b7       	in	r25, 0x3e	; 62
    16ac:	09 97       	sbiw	r24, 0x09	; 9
    16ae:	0f b6       	in	r0, 0x3f	; 63
    16b0:	f8 94       	cli
    16b2:	9e bf       	out	0x3e, r25	; 62
    16b4:	0f be       	out	0x3f, r0	; 63
    16b6:	8d bf       	out	0x3d, r24	; 61
    16b8:	ed b7       	in	r30, 0x3d	; 61
    16ba:	fe b7       	in	r31, 0x3e	; 62
    16bc:	31 96       	adiw	r30, 0x01	; 1
    16be:	88 ec       	ldi	r24, 0xC8	; 200
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	ad b7       	in	r26, 0x3d	; 61
    16c4:	be b7       	in	r27, 0x3e	; 62
    16c6:	12 96       	adiw	r26, 0x02	; 2
    16c8:	9c 93       	st	X, r25
    16ca:	8e 93       	st	-X, r24
    16cc:	11 97       	sbiw	r26, 0x01	; 1
    16ce:	13 83       	std	Z+3, r17	; 0x03
    16d0:	02 83       	std	Z+2, r16	; 0x02
    16d2:	82 ec       	ldi	r24, 0xC2	; 194
    16d4:	91 e0       	ldi	r25, 0x01	; 1
    16d6:	95 83       	std	Z+5, r25	; 0x05
    16d8:	84 83       	std	Z+4, r24	; 0x04
    16da:	16 82       	std	Z+6, r1	; 0x06
    16dc:	10 86       	std	Z+8, r1	; 0x08
    16de:	17 82       	std	Z+7, r1	; 0x07
    16e0:	81 e0       	ldi	r24, 0x01	; 1
    16e2:	62 e0       	ldi	r22, 0x02	; 2
    16e4:	41 e0       	ldi	r20, 0x01	; 1
    16e6:	28 ec       	ldi	r18, 0xC8	; 200
    16e8:	30 e0       	ldi	r19, 0x00	; 0
    16ea:	52 ec       	ldi	r21, 0xC2	; 194
    16ec:	e5 2e       	mov	r14, r21
    16ee:	51 e0       	ldi	r21, 0x01	; 1
    16f0:	f5 2e       	mov	r15, r21
    16f2:	cc 24       	eor	r12, r12
    16f4:	aa 24       	eor	r10, r10
    16f6:	bb 24       	eor	r11, r11
    16f8:	88 24       	eor	r8, r8
    16fa:	0e 94 af 11 	call	0x235e	; 0x235e <STEPPER_move>
			1, 200, abs(moveX), 450, STEPPER_BRK_OFF, // Left
			0, 200, abs(moveX), 450, STEPPER_BRK_OFF ); // Right
			
			// debug LCP print statement
			LCD_clear();
    16fe:	ed b7       	in	r30, 0x3d	; 61
    1700:	fe b7       	in	r31, 0x3e	; 62
    1702:	39 96       	adiw	r30, 0x09	; 9
    1704:	0f b6       	in	r0, 0x3f	; 63
    1706:	f8 94       	cli
    1708:	fe bf       	out	0x3e, r31	; 62
    170a:	0f be       	out	0x3f, r0	; 63
    170c:	ed bf       	out	0x3d, r30	; 61
    170e:	0e 94 ce 0e 	call	0x1d9c	; 0x1d9c <LCD_clear>
			LCD_printf("moveAwayS\n\n\n\n");
    1712:	81 e3       	ldi	r24, 0x31	; 49
    1714:	91 e0       	ldi	r25, 0x01	; 1
    1716:	0e 94 d0 2b 	call	0x57a0	; 0x57a0 <puts>
    171a:	81 e0       	ldi	r24, 0x01	; 1
			// state that fact
			shyRobot = 1;
	}
	
	return shyRobot;
}
    171c:	0f 90       	pop	r0
    171e:	0f 90       	pop	r0
    1720:	0f 90       	pop	r0
    1722:	0f 90       	pop	r0
    1724:	cf 91       	pop	r28
    1726:	df 91       	pop	r29
    1728:	1f 91       	pop	r17
    172a:	0f 91       	pop	r16
    172c:	ff 90       	pop	r15
    172e:	ef 90       	pop	r14
    1730:	df 90       	pop	r13
    1732:	cf 90       	pop	r12
    1734:	bf 90       	pop	r11
    1736:	af 90       	pop	r10
    1738:	9f 90       	pop	r9
    173a:	8f 90       	pop	r8
    173c:	7f 90       	pop	r7
    173e:	6f 90       	pop	r6
    1740:	5f 90       	pop	r5
    1742:	4f 90       	pop	r4
    1744:	3f 90       	pop	r3
    1746:	2f 90       	pop	r2
    1748:	08 95       	ret

0000174a <moveBehavior>:
* Input Variables:	int
* Output Return:	char
* Overview:		    This is the currrent behavior of the robot
********************************************************************/
char moveBehavior( int behavior)
{
    174a:	cf 93       	push	r28
    174c:	df 93       	push	r29
    174e:	ec 01       	movw	r28, r24
	if(moveAway()){
    1750:	0e 94 2e 0a 	call	0x145c	; 0x145c <moveAway>
    1754:	88 23       	and	r24, r24
    1756:	71 f0       	breq	.+28     	; 0x1774 <moveBehavior+0x2a>
		Ierror = 0;
    1758:	80 e0       	ldi	r24, 0x00	; 0
    175a:	90 e0       	ldi	r25, 0x00	; 0
    175c:	a0 e0       	ldi	r26, 0x00	; 0
    175e:	b0 e0       	ldi	r27, 0x00	; 0
    1760:	80 93 ee 01 	sts	0x01EE, r24
    1764:	90 93 ef 01 	sts	0x01EF, r25
    1768:	a0 93 f0 01 	sts	0x01F0, r26
    176c:	b0 93 f1 01 	sts	0x01F1, r27
    1770:	81 e0       	ldi	r24, 0x01	; 1
    1772:	12 c0       	rjmp	.+36     	; 0x1798 <moveBehavior+0x4e>
		return 1; 
	}
	if(moveLight(behavior)){
    1774:	ce 01       	movw	r24, r28
    1776:	0e 94 b2 08 	call	0x1164	; 0x1164 <moveLight>
    177a:	88 23       	and	r24, r24
    177c:	69 f0       	breq	.+26     	; 0x1798 <moveBehavior+0x4e>
		Ierror = 0;
    177e:	80 e0       	ldi	r24, 0x00	; 0
    1780:	90 e0       	ldi	r25, 0x00	; 0
    1782:	a0 e0       	ldi	r26, 0x00	; 0
    1784:	b0 e0       	ldi	r27, 0x00	; 0
    1786:	80 93 ee 01 	sts	0x01EE, r24
    178a:	90 93 ef 01 	sts	0x01EF, r25
    178e:	a0 93 f0 01 	sts	0x01F0, r26
    1792:	b0 93 f1 01 	sts	0x01F1, r27
    1796:	82 e0       	ldi	r24, 0x02	; 2
	// if(moveWander()){
		// Ierror = 0;
		// return 4;
	// }
	return 0;	
}
    1798:	df 91       	pop	r29
    179a:	cf 91       	pop	r28
    179c:	08 95       	ret

0000179e <moveWander>:
* Output Return:	none
* Overview:			This function checks for walls and moves the 
*					robot randomly if walls are not detected
********************************************************************/
char moveWander ( void )
{	
    179e:	8f 92       	push	r8
    17a0:	af 92       	push	r10
    17a2:	bf 92       	push	r11
    17a4:	cf 92       	push	r12
    17a6:	df 92       	push	r13
    17a8:	ef 92       	push	r14
    17aa:	ff 92       	push	r15
    17ac:	0f 93       	push	r16
    17ae:	1f 93       	push	r17
    17b0:	cf 93       	push	r28
    17b2:	df 93       	push	r29
	// notify that we have
	char isWander = 1;
	
	// if we are wondering
	// first check the current progress of our wondering
	STEPPER_STEPS curr_steps = STEPPER_get_nSteps();
    17b4:	0e 94 e7 10 	call	0x21ce	; 0x21ce <STEPPER_get_nSteps>
	
	
	// IF my motion is complete do another random motion
	if ((curr_steps.left == 0)&(curr_steps.right == 0))
    17b8:	67 2b       	or	r22, r23
    17ba:	09 f0       	breq	.+2      	; 0x17be <moveWander+0x20>
    17bc:	76 c0       	rjmp	.+236    	; 0x18aa <moveWander+0x10c>
    17be:	89 2b       	or	r24, r25
    17c0:	09 f0       	breq	.+2      	; 0x17c4 <moveWander+0x26>
    17c2:	73 c0       	rjmp	.+230    	; 0x18aa <moveWander+0x10c>
	{
		// create random values for wheel position and wheel speed
		int moveRand = rand()%400+400;
    17c4:	0e 94 95 2a 	call	0x552a	; 0x552a <rand>
    17c8:	8c 01       	movw	r16, r24
		float turnRandR = rand()%200+200;
    17ca:	0e 94 95 2a 	call	0x552a	; 0x552a <rand>
    17ce:	ec 01       	movw	r28, r24
		float turnRandL = rand()%200+200;
    17d0:	0e 94 95 2a 	call	0x552a	; 0x552a <rand>
    17d4:	7c 01       	movw	r14, r24
		
		// Weight the chance that we will go forward slightly more
		// so that the robot may possibly traverse farther
		BOOL direction = ~((rand()%10)>7);
    17d6:	0e 94 95 2a 	call	0x552a	; 0x552a <rand>
    17da:	20 e0       	ldi	r18, 0x00	; 0
    17dc:	6a e0       	ldi	r22, 0x0A	; 10
    17de:	70 e0       	ldi	r23, 0x00	; 0
    17e0:	0e 94 c6 28 	call	0x518c	; 0x518c <__divmodhi4>
    17e4:	08 97       	sbiw	r24, 0x08	; 8
    17e6:	0c f0       	brlt	.+2      	; 0x17ea <moveWander+0x4c>
    17e8:	21 e0       	ldi	r18, 0x01	; 1
    17ea:	82 2e       	mov	r8, r18
    17ec:	80 94       	com	r8
				
		// Move.
		STEPPER_move_stnb( STEPPER_BOTH, 
    17ee:	c8 01       	movw	r24, r16
    17f0:	60 e9       	ldi	r22, 0x90	; 144
    17f2:	71 e0       	ldi	r23, 0x01	; 1
    17f4:	0e 94 c6 28 	call	0x518c	; 0x518c <__divmodhi4>
    17f8:	a0 e9       	ldi	r26, 0x90	; 144
    17fa:	aa 2e       	mov	r10, r26
    17fc:	a1 e0       	ldi	r26, 0x01	; 1
    17fe:	ba 2e       	mov	r11, r26
    1800:	a8 0e       	add	r10, r24
    1802:	b9 1e       	adc	r11, r25
    1804:	8d b7       	in	r24, 0x3d	; 61
    1806:	9e b7       	in	r25, 0x3e	; 62
    1808:	09 97       	sbiw	r24, 0x09	; 9
    180a:	0f b6       	in	r0, 0x3f	; 63
    180c:	f8 94       	cli
    180e:	9e bf       	out	0x3e, r25	; 62
    1810:	0f be       	out	0x3f, r0	; 63
    1812:	8d bf       	out	0x3d, r24	; 61
    1814:	0d b7       	in	r16, 0x3d	; 61
    1816:	1e b7       	in	r17, 0x3e	; 62
    1818:	0f 5f       	subi	r16, 0xFF	; 255
    181a:	1f 4f       	sbci	r17, 0xFF	; 255
    181c:	c7 01       	movw	r24, r14
    181e:	68 ec       	ldi	r22, 0xC8	; 200
    1820:	70 e0       	ldi	r23, 0x00	; 0
    1822:	0e 94 c6 28 	call	0x518c	; 0x518c <__divmodhi4>
    1826:	88 53       	subi	r24, 0x38	; 56
    1828:	9f 4f       	sbci	r25, 0xFF	; 255
    182a:	aa 27       	eor	r26, r26
    182c:	97 fd       	sbrc	r25, 7
    182e:	a0 95       	com	r26
    1830:	ba 2f       	mov	r27, r26
    1832:	bc 01       	movw	r22, r24
    1834:	cd 01       	movw	r24, r26
    1836:	0e 94 89 22 	call	0x4512	; 0x4512 <__floatsisf>
    183a:	0e 94 5b 22 	call	0x44b6	; 0x44b6 <__fixunssfsi>
    183e:	6b 01       	movw	r12, r22
    1840:	7c 01       	movw	r14, r24
    1842:	f8 01       	movw	r30, r16
    1844:	b1 82       	std	Z+1, r11	; 0x01
    1846:	a0 82       	st	Z, r10
    1848:	ce 01       	movw	r24, r28
    184a:	68 ec       	ldi	r22, 0xC8	; 200
    184c:	70 e0       	ldi	r23, 0x00	; 0
    184e:	0e 94 c6 28 	call	0x518c	; 0x518c <__divmodhi4>
    1852:	88 53       	subi	r24, 0x38	; 56
    1854:	9f 4f       	sbci	r25, 0xFF	; 255
    1856:	aa 27       	eor	r26, r26
    1858:	97 fd       	sbrc	r25, 7
    185a:	a0 95       	com	r26
    185c:	ba 2f       	mov	r27, r26
    185e:	bc 01       	movw	r22, r24
    1860:	cd 01       	movw	r24, r26
    1862:	0e 94 89 22 	call	0x4512	; 0x4512 <__floatsisf>
    1866:	0e 94 5b 22 	call	0x44b6	; 0x44b6 <__fixunssfsi>
    186a:	f8 01       	movw	r30, r16
    186c:	73 83       	std	Z+3, r23	; 0x03
    186e:	62 83       	std	Z+2, r22	; 0x02
    1870:	82 ec       	ldi	r24, 0xC2	; 194
    1872:	91 e0       	ldi	r25, 0x01	; 1
    1874:	95 83       	std	Z+5, r25	; 0x05
    1876:	84 83       	std	Z+4, r24	; 0x04
    1878:	16 82       	std	Z+6, r1	; 0x06
    187a:	10 86       	std	Z+8, r1	; 0x08
    187c:	17 82       	std	Z+7, r1	; 0x07
    187e:	81 e0       	ldi	r24, 0x01	; 1
    1880:	62 e0       	ldi	r22, 0x02	; 2
    1882:	48 2d       	mov	r20, r8
    1884:	95 01       	movw	r18, r10
    1886:	86 01       	movw	r16, r12
    1888:	f2 ec       	ldi	r31, 0xC2	; 194
    188a:	ef 2e       	mov	r14, r31
    188c:	f1 e0       	ldi	r31, 0x01	; 1
    188e:	ff 2e       	mov	r15, r31
    1890:	cc 24       	eor	r12, r12
    1892:	aa 24       	eor	r10, r10
    1894:	bb 24       	eor	r11, r11
    1896:	0e 94 af 11 	call	0x235e	; 0x235e <STEPPER_move>
    189a:	8d b7       	in	r24, 0x3d	; 61
    189c:	9e b7       	in	r25, 0x3e	; 62
    189e:	09 96       	adiw	r24, 0x09	; 9
    18a0:	0f b6       	in	r0, 0x3f	; 63
    18a2:	f8 94       	cli
    18a4:	9e bf       	out	0x3e, r25	; 62
    18a6:	0f be       	out	0x3f, r0	; 63
    18a8:	8d bf       	out	0x3d, r24	; 61
		// debug LCP print statement
		// LCD_clear();
		// LCD_printf("moveWander\nmoveRand: %3d\nturnRandR: %3d\nturnRandL: %3d\n",moveRand,turnRandR,turnRandL);
		}
	return isWander;
}
    18aa:	81 e0       	ldi	r24, 0x01	; 1
    18ac:	df 91       	pop	r29
    18ae:	cf 91       	pop	r28
    18b0:	1f 91       	pop	r17
    18b2:	0f 91       	pop	r16
    18b4:	ff 90       	pop	r15
    18b6:	ef 90       	pop	r14
    18b8:	df 90       	pop	r13
    18ba:	cf 90       	pop	r12
    18bc:	bf 90       	pop	r11
    18be:	af 90       	pop	r10
    18c0:	8f 90       	pop	r8
    18c2:	08 95       	ret

000018c4 <moveWall>:
* Overview:			This function searches for walls and adjust the 
*					robots differential steering to attempts to
*					follow them
********************************************************************/
char moveWall( void )
{	
    18c4:	2f 92       	push	r2
    18c6:	3f 92       	push	r3
    18c8:	4f 92       	push	r4
    18ca:	5f 92       	push	r5
    18cc:	6f 92       	push	r6
    18ce:	7f 92       	push	r7
    18d0:	8f 92       	push	r8
    18d2:	9f 92       	push	r9
    18d4:	af 92       	push	r10
    18d6:	bf 92       	push	r11
    18d8:	cf 92       	push	r12
    18da:	df 92       	push	r13
    18dc:	ef 92       	push	r14
    18de:	ff 92       	push	r15
    18e0:	0f 93       	push	r16
    18e2:	1f 93       	push	r17
    18e4:	df 93       	push	r29
    18e6:	cf 93       	push	r28
    18e8:	00 d0       	rcall	.+0      	; 0x18ea <moveWall+0x26>
    18ea:	00 d0       	rcall	.+0      	; 0x18ec <moveWall+0x28>
    18ec:	0f 92       	push	r0
    18ee:	cd b7       	in	r28, 0x3d	; 61
    18f0:	de b7       	in	r29, 0x3e	; 62
	// Check for walls
	BOOL isWall = (ftIR < IR_WALL_F_THRESH)|(bkIR < IR_WALL_B_THRESH)|(rtIR < IR_WALL_R_THRESH)|(ltIR < IR_WALL_L_THRESH);
    18f2:	e0 90 02 02 	lds	r14, 0x0202
    18f6:	f0 90 03 02 	lds	r15, 0x0203
    18fa:	00 91 04 02 	lds	r16, 0x0204
    18fe:	10 91 05 02 	lds	r17, 0x0205
    1902:	88 24       	eor	r8, r8
    1904:	c8 01       	movw	r24, r16
    1906:	b7 01       	movw	r22, r14
    1908:	20 e0       	ldi	r18, 0x00	; 0
    190a:	30 e0       	ldi	r19, 0x00	; 0
    190c:	40 ea       	ldi	r20, 0xA0	; 160
    190e:	51 e4       	ldi	r21, 0x41	; 65
    1910:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    1914:	88 23       	and	r24, r24
    1916:	14 f4       	brge	.+4      	; 0x191c <moveWall+0x58>
    1918:	88 24       	eor	r8, r8
    191a:	83 94       	inc	r8
    191c:	a0 90 fa 01 	lds	r10, 0x01FA
    1920:	b0 90 fb 01 	lds	r11, 0x01FB
    1924:	c0 90 fc 01 	lds	r12, 0x01FC
    1928:	d0 90 fd 01 	lds	r13, 0x01FD
    192c:	40 90 f6 01 	lds	r4, 0x01F6
    1930:	50 90 f7 01 	lds	r5, 0x01F7
    1934:	60 90 f8 01 	lds	r6, 0x01F8
    1938:	70 90 f9 01 	lds	r7, 0x01F9
	if(!isWall){	
    193c:	60 91 fe 01 	lds	r22, 0x01FE
    1940:	70 91 ff 01 	lds	r23, 0x01FF
    1944:	80 91 00 02 	lds	r24, 0x0200
    1948:	90 91 01 02 	lds	r25, 0x0201
    194c:	20 e0       	ldi	r18, 0x00	; 0
    194e:	30 e0       	ldi	r19, 0x00	; 0
    1950:	40 ea       	ldi	r20, 0xA0	; 160
    1952:	51 e4       	ldi	r21, 0x41	; 65
    1954:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    1958:	87 fd       	sbrc	r24, 7
    195a:	18 c0       	rjmp	.+48     	; 0x198c <moveWall+0xc8>
    195c:	88 20       	and	r8, r8
    195e:	b1 f4       	brne	.+44     	; 0x198c <moveWall+0xc8>
    1960:	c6 01       	movw	r24, r12
    1962:	b5 01       	movw	r22, r10
    1964:	20 e0       	ldi	r18, 0x00	; 0
    1966:	30 e0       	ldi	r19, 0x00	; 0
    1968:	40 ea       	ldi	r20, 0xA0	; 160
    196a:	51 e4       	ldi	r21, 0x41	; 65
    196c:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    1970:	87 fd       	sbrc	r24, 7
    1972:	0c c0       	rjmp	.+24     	; 0x198c <moveWall+0xc8>
    1974:	c3 01       	movw	r24, r6
    1976:	b2 01       	movw	r22, r4
    1978:	20 e0       	ldi	r18, 0x00	; 0
    197a:	30 e0       	ldi	r19, 0x00	; 0
    197c:	40 ea       	ldi	r20, 0xA0	; 160
    197e:	51 e4       	ldi	r21, 0x41	; 65
    1980:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    1984:	87 fd       	sbrc	r24, 7
    1986:	02 c0       	rjmp	.+4      	; 0x198c <moveWall+0xc8>
	
	// debug LCP print statement
	LCD_clear();
	LCD_printf("bkIR: %3.2f\nmoveWall\nError: %3f\nEffort: %3f\n", bkIR, error, effort);
	
}
    1988:	80 e0       	ldi	r24, 0x00	; 0
    198a:	40 c1       	rjmp	.+640    	; 0x1c0c <moveWall+0x348>
	// A variable that contains the logic of which wall is imaginary
	BOOL isLEFT;
	
	// If there is no wall on our right side
	// place an imaginary wall just within the threshold
	if(rtIR>IR_WALL_R_THRESH){
    198c:	c6 01       	movw	r24, r12
    198e:	b5 01       	movw	r22, r10
    1990:	20 e0       	ldi	r18, 0x00	; 0
    1992:	30 e0       	ldi	r19, 0x00	; 0
    1994:	40 ea       	ldi	r20, 0xA0	; 160
    1996:	51 e4       	ldi	r21, 0x41	; 65
    1998:	0e 94 39 23 	call	0x4672	; 0x4672 <__gesf2>
    199c:	18 16       	cp	r1, r24
    199e:	64 f4       	brge	.+24     	; 0x19b8 <moveWall+0xf4>
		rtIR = IR_WALL_R_THRESH-15;
    19a0:	80 e0       	ldi	r24, 0x00	; 0
    19a2:	90 e0       	ldi	r25, 0x00	; 0
    19a4:	a0 ea       	ldi	r26, 0xA0	; 160
    19a6:	b0 e4       	ldi	r27, 0x40	; 64
    19a8:	80 93 fa 01 	sts	0x01FA, r24
    19ac:	90 93 fb 01 	sts	0x01FB, r25
    19b0:	a0 93 fc 01 	sts	0x01FC, r26
    19b4:	b0 93 fd 01 	sts	0x01FD, r27
		isLEFT = 0;
	}
	// If there is no wall on our left side
	// place an imaginary wall just within the threshold
	if(ltIR>IR_WALL_L_THRESH){
    19b8:	c3 01       	movw	r24, r6
    19ba:	b2 01       	movw	r22, r4
    19bc:	20 e0       	ldi	r18, 0x00	; 0
    19be:	30 e0       	ldi	r19, 0x00	; 0
    19c0:	40 ea       	ldi	r20, 0xA0	; 160
    19c2:	51 e4       	ldi	r21, 0x41	; 65
    19c4:	0e 94 39 23 	call	0x4672	; 0x4672 <__gesf2>
    19c8:	18 16       	cp	r1, r24
    19ca:	14 f0       	brlt	.+4      	; 0x19d0 <moveWall+0x10c>
    19cc:	80 e0       	ldi	r24, 0x00	; 0
    19ce:	0d c0       	rjmp	.+26     	; 0x19ea <moveWall+0x126>
		ltIR = IR_WALL_L_THRESH-15;
    19d0:	80 e0       	ldi	r24, 0x00	; 0
    19d2:	90 e0       	ldi	r25, 0x00	; 0
    19d4:	a0 ea       	ldi	r26, 0xA0	; 160
    19d6:	b0 e4       	ldi	r27, 0x40	; 64
    19d8:	80 93 f6 01 	sts	0x01F6, r24
    19dc:	90 93 f7 01 	sts	0x01F7, r25
    19e0:	a0 93 f8 01 	sts	0x01F8, r26
    19e4:	b0 93 f9 01 	sts	0x01F9, r27
    19e8:	81 e0       	ldi	r24, 0x01	; 1
	}
	
	float error;
	
	// Check to see if the wall exists in front of the robot
	if(bkIR < IR_WALL_B_THRESH)
    19ea:	88 20       	and	r8, r8
    19ec:	81 f1       	breq	.+96     	; 0x1a4e <moveWall+0x18a>
	{
		// if the imaginary wall was on the left side
		// then biased the error so that when the robot encounters
		// an upcoming corner, the robot will turn away from both walls
		if (isLEFT)
    19ee:	88 23       	and	r24, r24
    19f0:	89 f0       	breq	.+34     	; 0x1a14 <moveWall+0x150>
		{
			error = rtIR - (ltIR + bkIR*bkIR);
    19f2:	c8 01       	movw	r24, r16
    19f4:	b7 01       	movw	r22, r14
    19f6:	a8 01       	movw	r20, r16
    19f8:	97 01       	movw	r18, r14
    19fa:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
    19fe:	20 91 f6 01 	lds	r18, 0x01F6
    1a02:	30 91 f7 01 	lds	r19, 0x01F7
    1a06:	40 91 f8 01 	lds	r20, 0x01F8
    1a0a:	50 91 f9 01 	lds	r21, 0x01F9
    1a0e:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
    1a12:	12 c0       	rjmp	.+36     	; 0x1a38 <moveWall+0x174>
		}
		// biased the error appropriately for the inverse situation
		else 
		{
			error = rtIR - (ltIR - bkIR*bkIR);
    1a14:	c8 01       	movw	r24, r16
    1a16:	b7 01       	movw	r22, r14
    1a18:	a8 01       	movw	r20, r16
    1a1a:	97 01       	movw	r18, r14
    1a1c:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
    1a20:	9b 01       	movw	r18, r22
    1a22:	ac 01       	movw	r20, r24
    1a24:	60 91 f6 01 	lds	r22, 0x01F6
    1a28:	70 91 f7 01 	lds	r23, 0x01F7
    1a2c:	80 91 f8 01 	lds	r24, 0x01F8
    1a30:	90 91 f9 01 	lds	r25, 0x01F9
    1a34:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
    1a38:	9b 01       	movw	r18, r22
    1a3a:	ac 01       	movw	r20, r24
    1a3c:	60 91 fa 01 	lds	r22, 0x01FA
    1a40:	70 91 fb 01 	lds	r23, 0x01FB
    1a44:	80 91 fc 01 	lds	r24, 0x01FC
    1a48:	90 91 fd 01 	lds	r25, 0x01FD
    1a4c:	10 c0       	rjmp	.+32     	; 0x1a6e <moveWall+0x1aa>
	// the air is simply the right distance minus the left left distance
	// this ensures symmetry that the robot will follow in between the two walls
	// either one real and one imaginary, or both real
	else 
	{
		error = rtIR - ltIR;
    1a4e:	60 91 fa 01 	lds	r22, 0x01FA
    1a52:	70 91 fb 01 	lds	r23, 0x01FB
    1a56:	80 91 fc 01 	lds	r24, 0x01FC
    1a5a:	90 91 fd 01 	lds	r25, 0x01FD
    1a5e:	20 91 f6 01 	lds	r18, 0x01F6
    1a62:	30 91 f7 01 	lds	r19, 0x01F7
    1a66:	40 91 f8 01 	lds	r20, 0x01F8
    1a6a:	50 91 f9 01 	lds	r21, 0x01F9
    1a6e:	0e 94 85 21 	call	0x430a	; 0x430a <__subsf3>
    1a72:	6d 83       	std	Y+5, r22	; 0x05
    1a74:	97 2e       	mov	r9, r23
    1a76:	1c 01       	movw	r2, r24
	}

	// Use the PID controller function to calculate error
	float effort = pidController(error, 0);
    1a78:	2d 81       	ldd	r18, Y+5	; 0x05
    1a7a:	37 2f       	mov	r19, r23
    1a7c:	b9 01       	movw	r22, r18
    1a7e:	40 e0       	ldi	r20, 0x00	; 0
    1a80:	0e 94 8a 07 	call	0xf14	; 0xf14 <pidController>
    1a84:	2b 01       	movw	r4, r22
    1a86:	3c 01       	movw	r6, r24
	
	// Limit the control effort to the max allowable effort
	if((abs(effort) > MAX_EFFORT)&(effort!=0)){
    1a88:	0e 94 56 22 	call	0x44ac	; 0x44ac <__fixsfsi>
    1a8c:	8b 01       	movw	r16, r22
    1a8e:	77 ff       	sbrs	r23, 7
    1a90:	03 c0       	rjmp	.+6      	; 0x1a98 <moveWall+0x1d4>
    1a92:	10 95       	com	r17
    1a94:	01 95       	neg	r16
    1a96:	1f 4f       	sbci	r17, 0xFF	; 255
    1a98:	05 36       	cpi	r16, 0x65	; 101
    1a9a:	11 05       	cpc	r17, r1
    1a9c:	fc f0       	brlt	.+62     	; 0x1adc <moveWall+0x218>
    1a9e:	c3 01       	movw	r24, r6
    1aa0:	b2 01       	movw	r22, r4
    1aa2:	20 e0       	ldi	r18, 0x00	; 0
    1aa4:	30 e0       	ldi	r19, 0x00	; 0
    1aa6:	40 e0       	ldi	r20, 0x00	; 0
    1aa8:	50 e0       	ldi	r21, 0x00	; 0
    1aaa:	0e 94 ea 21 	call	0x43d4	; 0x43d4 <__cmpsf2>
    1aae:	88 23       	and	r24, r24
    1ab0:	a9 f0       	breq	.+42     	; 0x1adc <moveWall+0x218>
		effort = MAX_EFFORT*(effort/abs(effort));
    1ab2:	b8 01       	movw	r22, r16
    1ab4:	88 27       	eor	r24, r24
    1ab6:	77 fd       	sbrc	r23, 7
    1ab8:	80 95       	com	r24
    1aba:	98 2f       	mov	r25, r24
    1abc:	0e 94 89 22 	call	0x4512	; 0x4512 <__floatsisf>
    1ac0:	9b 01       	movw	r18, r22
    1ac2:	ac 01       	movw	r20, r24
    1ac4:	c3 01       	movw	r24, r6
    1ac6:	b2 01       	movw	r22, r4
    1ac8:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
    1acc:	20 e0       	ldi	r18, 0x00	; 0
    1ace:	30 e0       	ldi	r19, 0x00	; 0
    1ad0:	48 ec       	ldi	r20, 0xC8	; 200
    1ad2:	52 e4       	ldi	r21, 0x42	; 66
    1ad4:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
    1ad8:	2b 01       	movw	r4, r22
    1ada:	3c 01       	movw	r6, r24
	}
	
	// Calculate the stepper speeds for each wheel using a ratio
	float stepper_speed_L = MAX_SPEED/2 + (MAX_SPEED/2)*(effort/MAX_EFFORT);
    1adc:	c3 01       	movw	r24, r6
    1ade:	b2 01       	movw	r22, r4
    1ae0:	20 e0       	ldi	r18, 0x00	; 0
    1ae2:	30 e0       	ldi	r19, 0x00	; 0
    1ae4:	48 ec       	ldi	r20, 0xC8	; 200
    1ae6:	52 e4       	ldi	r21, 0x42	; 66
    1ae8:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
    1aec:	6b 01       	movw	r12, r22
    1aee:	7c 01       	movw	r14, r24
	float stepper_speed_R = MAX_SPEED/2 - (MAX_SPEED/2)*(effort/MAX_EFFORT);
	
	// Move with wall
	STEPPER_move_stnb( STEPPER_BOTH, 
    1af0:	8d b7       	in	r24, 0x3d	; 61
    1af2:	9e b7       	in	r25, 0x3e	; 62
    1af4:	09 97       	sbiw	r24, 0x09	; 9
    1af6:	0f b6       	in	r0, 0x3f	; 63
    1af8:	f8 94       	cli
    1afa:	9e bf       	out	0x3e, r25	; 62
    1afc:	0f be       	out	0x3f, r0	; 63
    1afe:	8d bf       	out	0x3d, r24	; 61
    1b00:	0d b7       	in	r16, 0x3d	; 61
    1b02:	1e b7       	in	r17, 0x3e	; 62
    1b04:	0f 5f       	subi	r16, 0xFF	; 255
    1b06:	1f 4f       	sbci	r17, 0xFF	; 255
    1b08:	c7 01       	movw	r24, r14
    1b0a:	b6 01       	movw	r22, r12
    1b0c:	20 e0       	ldi	r18, 0x00	; 0
    1b0e:	30 e0       	ldi	r19, 0x00	; 0
    1b10:	48 ec       	ldi	r20, 0xC8	; 200
    1b12:	51 e4       	ldi	r21, 0x41	; 65
    1b14:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
    1b18:	20 e0       	ldi	r18, 0x00	; 0
    1b1a:	30 e0       	ldi	r19, 0x00	; 0
    1b1c:	48 ec       	ldi	r20, 0xC8	; 200
    1b1e:	51 e4       	ldi	r21, 0x41	; 65
    1b20:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
    1b24:	0e 94 5b 22 	call	0x44b6	; 0x44b6 <__fixunssfsi>
    1b28:	69 83       	std	Y+1, r22	; 0x01
    1b2a:	7a 83       	std	Y+2, r23	; 0x02
    1b2c:	8b 83       	std	Y+3, r24	; 0x03
    1b2e:	9c 83       	std	Y+4, r25	; 0x04
    1b30:	82 e3       	ldi	r24, 0x32	; 50
    1b32:	90 e0       	ldi	r25, 0x00	; 0
    1b34:	d8 01       	movw	r26, r16
    1b36:	8d 93       	st	X+, r24
    1b38:	9c 93       	st	X, r25
    1b3a:	c7 01       	movw	r24, r14
    1b3c:	b6 01       	movw	r22, r12
    1b3e:	20 e0       	ldi	r18, 0x00	; 0
    1b40:	30 e0       	ldi	r19, 0x00	; 0
    1b42:	48 ec       	ldi	r20, 0xC8	; 200
    1b44:	51 ec       	ldi	r21, 0xC1	; 193
    1b46:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
    1b4a:	20 e0       	ldi	r18, 0x00	; 0
    1b4c:	30 e0       	ldi	r19, 0x00	; 0
    1b4e:	48 ec       	ldi	r20, 0xC8	; 200
    1b50:	51 e4       	ldi	r21, 0x41	; 65
    1b52:	0e 94 86 21 	call	0x430c	; 0x430c <__addsf3>
    1b56:	0e 94 5b 22 	call	0x44b6	; 0x44b6 <__fixunssfsi>
    1b5a:	f8 01       	movw	r30, r16
    1b5c:	73 83       	std	Z+3, r23	; 0x03
    1b5e:	62 83       	std	Z+2, r22	; 0x02
    1b60:	82 ec       	ldi	r24, 0xC2	; 194
    1b62:	91 e0       	ldi	r25, 0x01	; 1
    1b64:	95 83       	std	Z+5, r25	; 0x05
    1b66:	84 83       	std	Z+4, r24	; 0x04
    1b68:	16 82       	std	Z+6, r1	; 0x06
    1b6a:	10 86       	std	Z+8, r1	; 0x08
    1b6c:	17 82       	std	Z+7, r1	; 0x07
    1b6e:	81 e0       	ldi	r24, 0x01	; 1
    1b70:	62 e0       	ldi	r22, 0x02	; 2
    1b72:	41 e0       	ldi	r20, 0x01	; 1
    1b74:	22 e3       	ldi	r18, 0x32	; 50
    1b76:	30 e0       	ldi	r19, 0x00	; 0
    1b78:	09 81       	ldd	r16, Y+1	; 0x01
    1b7a:	1a 81       	ldd	r17, Y+2	; 0x02
    1b7c:	b2 ec       	ldi	r27, 0xC2	; 194
    1b7e:	eb 2e       	mov	r14, r27
    1b80:	b1 e0       	ldi	r27, 0x01	; 1
    1b82:	fb 2e       	mov	r15, r27
    1b84:	cc 24       	eor	r12, r12
    1b86:	aa 24       	eor	r10, r10
    1b88:	bb 24       	eor	r11, r11
    1b8a:	88 24       	eor	r8, r8
    1b8c:	83 94       	inc	r8
    1b8e:	0e 94 af 11 	call	0x235e	; 0x235e <STEPPER_move>
	STEPPER_REV, 50, stepper_speed_L, 450, STEPPER_BRK_OFF, // Left
	STEPPER_REV, 50, stepper_speed_R, 450, STEPPER_BRK_OFF ); // Right
	
	// debug LCP print statement
	LCD_clear();
    1b92:	8d b7       	in	r24, 0x3d	; 61
    1b94:	9e b7       	in	r25, 0x3e	; 62
    1b96:	09 96       	adiw	r24, 0x09	; 9
    1b98:	0f b6       	in	r0, 0x3f	; 63
    1b9a:	f8 94       	cli
    1b9c:	9e bf       	out	0x3e, r25	; 62
    1b9e:	0f be       	out	0x3f, r0	; 63
    1ba0:	8d bf       	out	0x3d, r24	; 61
    1ba2:	0e 94 ce 0e 	call	0x1d9c	; 0x1d9c <LCD_clear>
	LCD_printf("bkIR: %3.2f\nmoveWall\nError: %3f\nEffort: %3f\n", bkIR, error, effort);
    1ba6:	ad b7       	in	r26, 0x3d	; 61
    1ba8:	be b7       	in	r27, 0x3e	; 62
    1baa:	1e 97       	sbiw	r26, 0x0e	; 14
    1bac:	0f b6       	in	r0, 0x3f	; 63
    1bae:	f8 94       	cli
    1bb0:	be bf       	out	0x3e, r27	; 62
    1bb2:	0f be       	out	0x3f, r0	; 63
    1bb4:	ad bf       	out	0x3d, r26	; 61
    1bb6:	ed b7       	in	r30, 0x3d	; 61
    1bb8:	fe b7       	in	r31, 0x3e	; 62
    1bba:	31 96       	adiw	r30, 0x01	; 1
    1bbc:	8e e3       	ldi	r24, 0x3E	; 62
    1bbe:	91 e0       	ldi	r25, 0x01	; 1
    1bc0:	12 96       	adiw	r26, 0x02	; 2
    1bc2:	9c 93       	st	X, r25
    1bc4:	8e 93       	st	-X, r24
    1bc6:	11 97       	sbiw	r26, 0x01	; 1
    1bc8:	80 91 02 02 	lds	r24, 0x0202
    1bcc:	90 91 03 02 	lds	r25, 0x0203
    1bd0:	a0 91 04 02 	lds	r26, 0x0204
    1bd4:	b0 91 05 02 	lds	r27, 0x0205
    1bd8:	82 83       	std	Z+2, r24	; 0x02
    1bda:	93 83       	std	Z+3, r25	; 0x03
    1bdc:	a4 83       	std	Z+4, r26	; 0x04
    1bde:	b5 83       	std	Z+5, r27	; 0x05
    1be0:	2d 81       	ldd	r18, Y+5	; 0x05
    1be2:	39 2d       	mov	r19, r9
    1be4:	c9 01       	movw	r24, r18
    1be6:	d1 01       	movw	r26, r2
    1be8:	86 83       	std	Z+6, r24	; 0x06
    1bea:	97 83       	std	Z+7, r25	; 0x07
    1bec:	a0 87       	std	Z+8, r26	; 0x08
    1bee:	b1 87       	std	Z+9, r27	; 0x09
    1bf0:	42 86       	std	Z+10, r4	; 0x0a
    1bf2:	53 86       	std	Z+11, r5	; 0x0b
    1bf4:	64 86       	std	Z+12, r6	; 0x0c
    1bf6:	75 86       	std	Z+13, r7	; 0x0d
    1bf8:	0e 94 be 2b 	call	0x577c	; 0x577c <printf>
    1bfc:	ed b7       	in	r30, 0x3d	; 61
    1bfe:	fe b7       	in	r31, 0x3e	; 62
    1c00:	3e 96       	adiw	r30, 0x0e	; 14
    1c02:	0f b6       	in	r0, 0x3f	; 63
    1c04:	f8 94       	cli
    1c06:	fe bf       	out	0x3e, r31	; 62
    1c08:	0f be       	out	0x3f, r0	; 63
    1c0a:	ed bf       	out	0x3d, r30	; 61
	
}
    1c0c:	0f 90       	pop	r0
    1c0e:	0f 90       	pop	r0
    1c10:	0f 90       	pop	r0
    1c12:	0f 90       	pop	r0
    1c14:	0f 90       	pop	r0
    1c16:	cf 91       	pop	r28
    1c18:	df 91       	pop	r29
    1c1a:	1f 91       	pop	r17
    1c1c:	0f 91       	pop	r16
    1c1e:	ff 90       	pop	r15
    1c20:	ef 90       	pop	r14
    1c22:	df 90       	pop	r13
    1c24:	cf 90       	pop	r12
    1c26:	bf 90       	pop	r11
    1c28:	af 90       	pop	r10
    1c2a:	9f 90       	pop	r9
    1c2c:	8f 90       	pop	r8
    1c2e:	7f 90       	pop	r7
    1c30:	6f 90       	pop	r6
    1c32:	5f 90       	pop	r5
    1c34:	4f 90       	pop	r4
    1c36:	3f 90       	pop	r3
    1c38:	2f 90       	pop	r2
    1c3a:	08 95       	ret

00001c3c <CBOT_main>:
/*******************************************************************
* Function:        void CBOT_main( void )
********************************************************************/

void CBOT_main( void )
{
    1c3c:	cf 93       	push	r28
    1c3e:	df 93       	push	r29
	// Initialize variables
	int btnValue=0;//value of button pushed

	ATopstat = ATTINY_open();//open the tiny microcontroller
    1c40:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <ATTINY_open>
    1c44:	90 93 8a 02 	sts	0x028A, r25
    1c48:	80 93 89 02 	sts	0x0289, r24
	LEopstat = LED_open(); //open the LED module
    1c4c:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <LED_open>
    1c50:	90 93 88 02 	sts	0x0288, r25
    1c54:	80 93 87 02 	sts	0x0287, r24
	LCopstat = LCD_open(); //open the LCD module
    1c58:	0e 94 eb 0e 	call	0x1dd6	; 0x1dd6 <LCD_open>
    1c5c:	90 93 86 02 	sts	0x0286, r25
    1c60:	80 93 85 02 	sts	0x0285, r24
	STEPPER_open(); // Open STEPPER module for use
    1c64:	0e 94 56 12 	call	0x24ac	; 0x24ac <STEPPER_open>
	SPKR_open(SPKR_BEEP_MODE);//open the speaker in beep mode
    1c68:	81 e0       	ldi	r24, 0x01	; 1
    1c6a:	0e 94 da 10 	call	0x21b4	; 0x21b4 <SPKR_open>
	
	LED_open();
    1c6e:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <LED_open>
	I2C_open();
    1c72:	0e 94 43 16 	call	0x2c86	; 0x2c86 <I2C_open>
	ADC_open();//open the ADC module
    1c76:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <ADC_open>
 	ADC_set_VREF( ADC_VREF_AVCC );// Set the Voltage Reference first so VREF=5V.
    1c7a:	81 e0       	ldi	r24, 0x01	; 1
    1c7c:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ADC_set_VREF>

	// Initialize IR Values and Reset Prefilter
	checkIR();
    1c80:	0e 94 87 08 	call	0x110e	; 0x110e <checkIR>
	prefilter(1);
    1c84:	81 e0       	ldi	r24, 0x01	; 1
    1c86:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <prefilter>
	
	//
	LCD_printf("PRESS a button\nOR\nWAIT for default\n");
    1c8a:	8b e6       	ldi	r24, 0x6B	; 107
    1c8c:	91 e0       	ldi	r25, 0x01	; 1
    1c8e:	0e 94 d0 2b 	call	0x57a0	; 0x57a0 <puts>
	TMRSRVC_delay(3000);//wait 3 seconds
    1c92:	88 eb       	ldi	r24, 0xB8	; 184
    1c94:	9b e0       	ldi	r25, 0x0B	; 11
    1c96:	0e 94 38 15 	call	0x2a70	; 0x2a70 <TMRSRVC_delay>
	btnValue = WaitButton();
    1c9a:	0e 94 82 05 	call	0xb04	; 0xb04 <WaitButton>
    1c9e:	ec 01       	movw	r28, r24

	// Infinite loop
	while (1)
    {
		// update the sensor values
		checkLightSensor();
    1ca0:	0e 94 72 08 	call	0x10e4	; 0x10e4 <checkLightSensor>
		checkIR();
    1ca4:	0e 94 87 08 	call	0x110e	; 0x110e <checkIR>
		moveBehavior(btnValue);
    1ca8:	ce 01       	movw	r24, r28
    1caa:	0e 94 a5 0b 	call	0x174a	; 0x174a <moveBehavior>
    1cae:	f8 cf       	rjmp	.-16     	; 0x1ca0 <CBOT_main+0x64>

00001cb0 <ADC_open>:
    1cb0:	8f e0       	ldi	r24, 0x0F	; 15
    1cb2:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    1cb6:	88 23       	and	r24, r24
    1cb8:	31 f4       	brne	.+12     	; 0x1cc6 <ADC_open+0x16>
    1cba:	0e 94 6a 16 	call	0x2cd4	; 0x2cd4 <__ADC_init>
    1cbe:	8f e0       	ldi	r24, 0x0F	; 15
    1cc0:	61 e0       	ldi	r22, 0x01	; 1
    1cc2:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    1cc6:	8f e0       	ldi	r24, 0x0F	; 15
    1cc8:	91 e0       	ldi	r25, 0x01	; 1
    1cca:	08 95       	ret

00001ccc <ADC_sample>:
    1ccc:	8f e0       	ldi	r24, 0x0F	; 15
    1cce:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    1cd2:	81 30       	cpi	r24, 0x01	; 1
    1cd4:	19 f0       	breq	.+6      	; 0x1cdc <ADC_sample+0x10>
    1cd6:	20 e0       	ldi	r18, 0x00	; 0
    1cd8:	30 e0       	ldi	r19, 0x00	; 0
    1cda:	13 c0       	rjmp	.+38     	; 0x1d02 <ADC_sample+0x36>
    1cdc:	80 91 7a 00 	lds	r24, 0x007A
    1ce0:	80 64       	ori	r24, 0x40	; 64
    1ce2:	80 93 7a 00 	sts	0x007A, r24
    1ce6:	80 91 7a 00 	lds	r24, 0x007A
    1cea:	86 fd       	sbrc	r24, 6
    1cec:	fc cf       	rjmp	.-8      	; 0x1ce6 <ADC_sample+0x1a>
    1cee:	30 91 78 00 	lds	r19, 0x0078
    1cf2:	20 91 79 00 	lds	r18, 0x0079
    1cf6:	92 2f       	mov	r25, r18
    1cf8:	80 e0       	ldi	r24, 0x00	; 0
    1cfa:	23 2f       	mov	r18, r19
    1cfc:	30 e0       	ldi	r19, 0x00	; 0
    1cfe:	28 2b       	or	r18, r24
    1d00:	39 2b       	or	r19, r25
    1d02:	c9 01       	movw	r24, r18
    1d04:	08 95       	ret

00001d06 <ADC_set_channel>:
    1d06:	58 2f       	mov	r21, r24
    1d08:	80 91 8e 01 	lds	r24, 0x018E
    1d0c:	88 30       	cpi	r24, 0x08	; 8
    1d0e:	d8 f4       	brcc	.+54     	; 0x1d46 <ADC_set_channel+0x40>
    1d10:	40 91 7e 00 	lds	r20, 0x007E
    1d14:	21 e0       	ldi	r18, 0x01	; 1
    1d16:	30 e0       	ldi	r19, 0x00	; 0
    1d18:	b9 01       	movw	r22, r18
    1d1a:	02 c0       	rjmp	.+4      	; 0x1d20 <ADC_set_channel+0x1a>
    1d1c:	66 0f       	add	r22, r22
    1d1e:	77 1f       	adc	r23, r23
    1d20:	8a 95       	dec	r24
    1d22:	e2 f7       	brpl	.-8      	; 0x1d1c <ADC_set_channel+0x16>
    1d24:	cb 01       	movw	r24, r22
    1d26:	80 95       	com	r24
    1d28:	84 23       	and	r24, r20
    1d2a:	80 93 7e 00 	sts	0x007E, r24
    1d2e:	80 91 7e 00 	lds	r24, 0x007E
    1d32:	05 2e       	mov	r0, r21
    1d34:	02 c0       	rjmp	.+4      	; 0x1d3a <ADC_set_channel+0x34>
    1d36:	22 0f       	add	r18, r18
    1d38:	33 1f       	adc	r19, r19
    1d3a:	0a 94       	dec	r0
    1d3c:	e2 f7       	brpl	.-8      	; 0x1d36 <ADC_set_channel+0x30>
    1d3e:	82 2b       	or	r24, r18
    1d40:	80 93 7e 00 	sts	0x007E, r24
    1d44:	0d c0       	rjmp	.+26     	; 0x1d60 <ADC_set_channel+0x5a>
    1d46:	20 91 7e 00 	lds	r18, 0x007E
    1d4a:	81 e0       	ldi	r24, 0x01	; 1
    1d4c:	90 e0       	ldi	r25, 0x00	; 0
    1d4e:	05 2e       	mov	r0, r21
    1d50:	02 c0       	rjmp	.+4      	; 0x1d56 <ADC_set_channel+0x50>
    1d52:	88 0f       	add	r24, r24
    1d54:	99 1f       	adc	r25, r25
    1d56:	0a 94       	dec	r0
    1d58:	e2 f7       	brpl	.-8      	; 0x1d52 <ADC_set_channel+0x4c>
    1d5a:	28 2b       	or	r18, r24
    1d5c:	20 93 7e 00 	sts	0x007E, r18
    1d60:	50 93 8e 01 	sts	0x018E, r21
    1d64:	80 91 7c 00 	lds	r24, 0x007C
    1d68:	5f 71       	andi	r21, 0x1F	; 31
    1d6a:	80 7e       	andi	r24, 0xE0	; 224
    1d6c:	85 2b       	or	r24, r21
    1d6e:	80 93 7c 00 	sts	0x007C, r24
    1d72:	08 95       	ret

00001d74 <ADC_set_VREF>:
    1d74:	ec e7       	ldi	r30, 0x7C	; 124
    1d76:	f0 e0       	ldi	r31, 0x00	; 0
    1d78:	90 81       	ld	r25, Z
    1d7a:	82 95       	swap	r24
    1d7c:	88 0f       	add	r24, r24
    1d7e:	88 0f       	add	r24, r24
    1d80:	80 7c       	andi	r24, 0xC0	; 192
    1d82:	9f 73       	andi	r25, 0x3F	; 63
    1d84:	98 2b       	or	r25, r24
    1d86:	90 83       	st	Z, r25
    1d88:	08 95       	ret

00001d8a <main>:
    1d8a:	0e 94 83 16 	call	0x2d06	; 0x2d06 <CBOT_ISR_init>
    1d8e:	0e 94 75 16 	call	0x2cea	; 0x2cea <CBOT_init>
    1d92:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <CBOT_main>
    1d96:	80 e0       	ldi	r24, 0x00	; 0
    1d98:	90 e0       	ldi	r25, 0x00	; 0
    1d9a:	08 95       	ret

00001d9c <LCD_clear>:
    1d9c:	0f 93       	push	r16
    1d9e:	1f 93       	push	r17
    1da0:	80 e4       	ldi	r24, 0x40	; 64
    1da2:	60 e0       	ldi	r22, 0x00	; 0
    1da4:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1da8:	00 e0       	ldi	r16, 0x00	; 0
    1daa:	80 2f       	mov	r24, r16
    1dac:	60 e0       	ldi	r22, 0x00	; 0
    1dae:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <LCD_set_PGC_addr>
    1db2:	10 e0       	ldi	r17, 0x00	; 0
    1db4:	80 e0       	ldi	r24, 0x00	; 0
    1db6:	61 e0       	ldi	r22, 0x01	; 1
    1db8:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1dbc:	1f 5f       	subi	r17, 0xFF	; 255
    1dbe:	10 38       	cpi	r17, 0x80	; 128
    1dc0:	c9 f7       	brne	.-14     	; 0x1db4 <LCD_clear+0x18>
    1dc2:	0f 5f       	subi	r16, 0xFF	; 255
    1dc4:	04 30       	cpi	r16, 0x04	; 4
    1dc6:	89 f7       	brne	.-30     	; 0x1daa <LCD_clear+0xe>
    1dc8:	83 e0       	ldi	r24, 0x03	; 3
    1dca:	60 e0       	ldi	r22, 0x00	; 0
    1dcc:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <LCD_set_next_PGC>
    1dd0:	1f 91       	pop	r17
    1dd2:	0f 91       	pop	r16
    1dd4:	08 95       	ret

00001dd6 <LCD_open>:
    1dd6:	0f 93       	push	r16
    1dd8:	1f 93       	push	r17
    1dda:	82 e0       	ldi	r24, 0x02	; 2
    1ddc:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    1de0:	88 23       	and	r24, r24
    1de2:	11 f4       	brne	.+4      	; 0x1de8 <LCD_open+0x12>
    1de4:	82 e0       	ldi	r24, 0x02	; 2
    1de6:	06 c0       	rjmp	.+12     	; 0x1df4 <LCD_open+0x1e>
    1de8:	81 e0       	ldi	r24, 0x01	; 1
    1dea:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    1dee:	88 23       	and	r24, r24
    1df0:	19 f4       	brne	.+6      	; 0x1df8 <LCD_open+0x22>
    1df2:	81 e0       	ldi	r24, 0x01	; 1
    1df4:	90 e0       	ldi	r25, 0x00	; 0
    1df6:	6d c0       	rjmp	.+218    	; 0x1ed2 <LCD_open+0xfc>
    1df8:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__LCD_init>
    1dfc:	85 e0       	ldi	r24, 0x05	; 5
    1dfe:	61 e0       	ldi	r22, 0x01	; 1
    1e00:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    1e04:	8e ea       	ldi	r24, 0xAE	; 174
    1e06:	60 e0       	ldi	r22, 0x00	; 0
    1e08:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1e0c:	82 ea       	ldi	r24, 0xA2	; 162
    1e0e:	60 e0       	ldi	r22, 0x00	; 0
    1e10:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1e14:	80 ea       	ldi	r24, 0xA0	; 160
    1e16:	60 e0       	ldi	r22, 0x00	; 0
    1e18:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1e1c:	00 e5       	ldi	r16, 0x50	; 80
    1e1e:	13 ec       	ldi	r17, 0xC3	; 195
    1e20:	c8 01       	movw	r24, r16
    1e22:	01 97       	sbiw	r24, 0x01	; 1
    1e24:	f1 f7       	brne	.-4      	; 0x1e22 <LCD_open+0x4c>
    1e26:	80 ec       	ldi	r24, 0xC0	; 192
    1e28:	60 e0       	ldi	r22, 0x00	; 0
    1e2a:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1e2e:	8f e2       	ldi	r24, 0x2F	; 47
    1e30:	60 e0       	ldi	r22, 0x00	; 0
    1e32:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1e36:	81 e8       	ldi	r24, 0x81	; 129
    1e38:	60 e0       	ldi	r22, 0x00	; 0
    1e3a:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1e3e:	86 e1       	ldi	r24, 0x16	; 22
    1e40:	60 e0       	ldi	r22, 0x00	; 0
    1e42:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1e46:	82 e2       	ldi	r24, 0x22	; 34
    1e48:	60 e0       	ldi	r22, 0x00	; 0
    1e4a:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1e4e:	c8 01       	movw	r24, r16
    1e50:	01 97       	sbiw	r24, 0x01	; 1
    1e52:	f1 f7       	brne	.-4      	; 0x1e50 <LCD_open+0x7a>
    1e54:	8f ea       	ldi	r24, 0xAF	; 175
    1e56:	60 e0       	ldi	r22, 0x00	; 0
    1e58:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1e5c:	86 ea       	ldi	r24, 0xA6	; 166
    1e5e:	60 e0       	ldi	r22, 0x00	; 0
    1e60:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1e64:	85 ea       	ldi	r24, 0xA5	; 165
    1e66:	60 e0       	ldi	r22, 0x00	; 0
    1e68:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1e6c:	80 e0       	ldi	r24, 0x00	; 0
    1e6e:	90 e0       	ldi	r25, 0x00	; 0
    1e70:	28 e8       	ldi	r18, 0x88	; 136
    1e72:	33 e1       	ldi	r19, 0x13	; 19
    1e74:	f9 01       	movw	r30, r18
    1e76:	31 97       	sbiw	r30, 0x01	; 1
    1e78:	f1 f7       	brne	.-4      	; 0x1e76 <LCD_open+0xa0>
    1e7a:	01 96       	adiw	r24, 0x01	; 1
    1e7c:	43 e0       	ldi	r20, 0x03	; 3
    1e7e:	88 3e       	cpi	r24, 0xE8	; 232
    1e80:	94 07       	cpc	r25, r20
    1e82:	c1 f7       	brne	.-16     	; 0x1e74 <LCD_open+0x9e>
    1e84:	83 eb       	ldi	r24, 0xB3	; 179
    1e86:	60 e0       	ldi	r22, 0x00	; 0
    1e88:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1e8c:	80 e4       	ldi	r24, 0x40	; 64
    1e8e:	60 e0       	ldi	r22, 0x00	; 0
    1e90:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1e94:	83 e0       	ldi	r24, 0x03	; 3
    1e96:	60 e0       	ldi	r22, 0x00	; 0
    1e98:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <LCD_set_PGC_addr>
    1e9c:	83 e0       	ldi	r24, 0x03	; 3
    1e9e:	60 e0       	ldi	r22, 0x00	; 0
    1ea0:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <LCD_set_next_PGC>
    1ea4:	10 92 b9 04 	sts	0x04B9, r1
    1ea8:	10 92 bb 04 	sts	0x04BB, r1
    1eac:	10 92 ba 04 	sts	0x04BA, r1
    1eb0:	8d e9       	ldi	r24, 0x9D	; 157
    1eb2:	91 e0       	ldi	r25, 0x01	; 1
    1eb4:	90 93 ea 04 	sts	0x04EA, r25
    1eb8:	80 93 e9 04 	sts	0x04E9, r24
    1ebc:	88 e1       	ldi	r24, 0x18	; 24
    1ebe:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <LCD_set_backlight>
    1ec2:	0e 94 ce 0e 	call	0x1d9c	; 0x1d9c <LCD_clear>
    1ec6:	84 ea       	ldi	r24, 0xA4	; 164
    1ec8:	60 e0       	ldi	r22, 0x00	; 0
    1eca:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1ece:	85 e0       	ldi	r24, 0x05	; 5
    1ed0:	91 e0       	ldi	r25, 0x01	; 1
    1ed2:	1f 91       	pop	r17
    1ed4:	0f 91       	pop	r16
    1ed6:	08 95       	ret

00001ed8 <LCD_set_backlight>:
    1ed8:	1f 93       	push	r17
    1eda:	18 2f       	mov	r17, r24
    1edc:	85 e0       	ldi	r24, 0x05	; 5
    1ede:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    1ee2:	81 30       	cpi	r24, 0x01	; 1
    1ee4:	c1 f4       	brne	.+48     	; 0x1f16 <LCD_set_backlight+0x3e>
    1ee6:	87 e0       	ldi	r24, 0x07	; 7
    1ee8:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <SPI_set_slave_addr>
    1eec:	82 e0       	ldi	r24, 0x02	; 2
    1eee:	6a e0       	ldi	r22, 0x0A	; 10
    1ef0:	0e 94 3a 10 	call	0x2074	; 0x2074 <SPI_transmit>
    1ef4:	82 e0       	ldi	r24, 0x02	; 2
    1ef6:	61 eb       	ldi	r22, 0xB1	; 177
    1ef8:	0e 94 3a 10 	call	0x2074	; 0x2074 <SPI_transmit>
    1efc:	61 2f       	mov	r22, r17
    1efe:	11 32       	cpi	r17, 0x21	; 33
    1f00:	08 f0       	brcs	.+2      	; 0x1f04 <LCD_set_backlight+0x2c>
    1f02:	60 e2       	ldi	r22, 0x20	; 32
    1f04:	82 e0       	ldi	r24, 0x02	; 2
    1f06:	0e 94 3a 10 	call	0x2074	; 0x2074 <SPI_transmit>
    1f0a:	89 ee       	ldi	r24, 0xE9	; 233
    1f0c:	8a 95       	dec	r24
    1f0e:	f1 f7       	brne	.-4      	; 0x1f0c <LCD_set_backlight+0x34>
    1f10:	87 e0       	ldi	r24, 0x07	; 7
    1f12:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <SPI_set_slave_addr>
    1f16:	1f 91       	pop	r17
    1f18:	08 95       	ret

00001f1a <LCD_set_next_PGC>:
    1f1a:	83 70       	andi	r24, 0x03	; 3
    1f1c:	6f 77       	andi	r22, 0x7F	; 127
    1f1e:	60 93 b7 04 	sts	0x04B7, r22
    1f22:	80 93 b8 04 	sts	0x04B8, r24
    1f26:	08 95       	ret

00001f28 <LCD_set_PGC_addr>:
    1f28:	0f 93       	push	r16
    1f2a:	1f 93       	push	r17
    1f2c:	06 2f       	mov	r16, r22
    1f2e:	16 2f       	mov	r17, r22
    1f30:	1f 77       	andi	r17, 0x7F	; 127
    1f32:	83 70       	andi	r24, 0x03	; 3
    1f34:	80 6b       	ori	r24, 0xB0	; 176
    1f36:	60 e0       	ldi	r22, 0x00	; 0
    1f38:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1f3c:	12 95       	swap	r17
    1f3e:	1f 70       	andi	r17, 0x0F	; 15
    1f40:	81 2f       	mov	r24, r17
    1f42:	80 61       	ori	r24, 0x10	; 16
    1f44:	60 e0       	ldi	r22, 0x00	; 0
    1f46:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1f4a:	80 2f       	mov	r24, r16
    1f4c:	8f 70       	andi	r24, 0x0F	; 15
    1f4e:	60 e0       	ldi	r22, 0x00	; 0
    1f50:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    1f54:	1f 91       	pop	r17
    1f56:	0f 91       	pop	r16
    1f58:	08 95       	ret

00001f5a <LCD_write>:
    1f5a:	0f 93       	push	r16
    1f5c:	1f 93       	push	r17
    1f5e:	08 2f       	mov	r16, r24
    1f60:	16 2f       	mov	r17, r22
    1f62:	85 e0       	ldi	r24, 0x05	; 5
    1f64:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    1f68:	81 30       	cpi	r24, 0x01	; 1
    1f6a:	79 f4       	brne	.+30     	; 0x1f8a <LCD_write+0x30>
    1f6c:	11 23       	and	r17, r17
    1f6e:	19 f0       	breq	.+6      	; 0x1f76 <LCD_write+0x1c>
    1f70:	11 30       	cpi	r17, 0x01	; 1
    1f72:	21 f4       	brne	.+8      	; 0x1f7c <LCD_write+0x22>
    1f74:	02 c0       	rjmp	.+4      	; 0x1f7a <LCD_write+0x20>
    1f76:	2b 98       	cbi	0x05, 3	; 5
    1f78:	01 c0       	rjmp	.+2      	; 0x1f7c <LCD_write+0x22>
    1f7a:	2b 9a       	sbi	0x05, 3	; 5
    1f7c:	86 e0       	ldi	r24, 0x06	; 6
    1f7e:	8a 95       	dec	r24
    1f80:	f1 f7       	brne	.-4      	; 0x1f7e <LCD_write+0x24>
    1f82:	80 e0       	ldi	r24, 0x00	; 0
    1f84:	60 2f       	mov	r22, r16
    1f86:	0e 94 3a 10 	call	0x2074	; 0x2074 <SPI_transmit>
    1f8a:	1f 91       	pop	r17
    1f8c:	0f 91       	pop	r16
    1f8e:	08 95       	ret

00001f90 <LED_clr_pattern>:
    1f90:	1f 93       	push	r17
    1f92:	18 2f       	mov	r17, r24
    1f94:	86 e0       	ldi	r24, 0x06	; 6
    1f96:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    1f9a:	81 30       	cpi	r24, 0x01	; 1
    1f9c:	19 f4       	brne	.+6      	; 0x1fa4 <LED_clr_pattern+0x14>
    1f9e:	81 2f       	mov	r24, r17
    1fa0:	0e 94 9a 19 	call	0x3334	; 0x3334 <__LED_clr_pattern>
    1fa4:	1f 91       	pop	r17
    1fa6:	08 95       	ret

00001fa8 <LED_open>:
    1fa8:	0e 94 9f 19 	call	0x333e	; 0x333e <__LED_init>
    1fac:	86 e0       	ldi	r24, 0x06	; 6
    1fae:	61 e0       	ldi	r22, 0x01	; 1
    1fb0:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    1fb4:	86 e0       	ldi	r24, 0x06	; 6
    1fb6:	91 e0       	ldi	r25, 0x01	; 1
    1fb8:	08 95       	ret

00001fba <LED_set_pattern>:
    1fba:	1f 93       	push	r17
    1fbc:	18 2f       	mov	r17, r24
    1fbe:	86 e0       	ldi	r24, 0x06	; 6
    1fc0:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    1fc4:	81 30       	cpi	r24, 0x01	; 1
    1fc6:	19 f4       	brne	.+6      	; 0x1fce <LED_set_pattern+0x14>
    1fc8:	81 2f       	mov	r24, r17
    1fca:	0e 94 a2 19 	call	0x3344	; 0x3344 <__LED_set_pattern>
    1fce:	1f 91       	pop	r17
    1fd0:	08 95       	ret

00001fd2 <SPI_set_slave_addr>:
    1fd2:	1f 93       	push	r17
    1fd4:	18 2f       	mov	r17, r24
    1fd6:	82 e0       	ldi	r24, 0x02	; 2
    1fd8:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    1fdc:	81 30       	cpi	r24, 0x01	; 1
    1fde:	09 f0       	breq	.+2      	; 0x1fe2 <SPI_set_slave_addr+0x10>
    1fe0:	47 c0       	rjmp	.+142    	; 0x2070 <SPI_set_slave_addr+0x9e>
    1fe2:	91 2f       	mov	r25, r17
    1fe4:	97 70       	andi	r25, 0x07	; 7
    1fe6:	80 91 bc 04 	lds	r24, 0x04BC
    1fea:	98 17       	cp	r25, r24
    1fec:	09 f4       	brne	.+2      	; 0x1ff0 <SPI_set_slave_addr+0x1e>
    1fee:	40 c0       	rjmp	.+128    	; 0x2070 <SPI_set_slave_addr+0x9e>
    1ff0:	90 93 bc 04 	sts	0x04BC, r25
    1ff4:	85 b1       	in	r24, 0x05	; 5
    1ff6:	88 7f       	andi	r24, 0xF8	; 248
    1ff8:	89 2b       	or	r24, r25
    1ffa:	85 b9       	out	0x05, r24	; 5
    1ffc:	93 30       	cpi	r25, 0x03	; 3
    1ffe:	11 f1       	breq	.+68     	; 0x2044 <SPI_set_slave_addr+0x72>
    2000:	94 30       	cpi	r25, 0x04	; 4
    2002:	28 f4       	brcc	.+10     	; 0x200e <SPI_set_slave_addr+0x3c>
    2004:	91 30       	cpi	r25, 0x01	; 1
    2006:	51 f0       	breq	.+20     	; 0x201c <SPI_set_slave_addr+0x4a>
    2008:	92 30       	cpi	r25, 0x02	; 2
    200a:	90 f4       	brcc	.+36     	; 0x2030 <SPI_set_slave_addr+0x5e>
    200c:	0c c0       	rjmp	.+24     	; 0x2026 <SPI_set_slave_addr+0x54>
    200e:	95 30       	cpi	r25, 0x05	; 5
    2010:	19 f1       	breq	.+70     	; 0x2058 <SPI_set_slave_addr+0x86>
    2012:	95 30       	cpi	r25, 0x05	; 5
    2014:	e0 f0       	brcs	.+56     	; 0x204e <SPI_set_slave_addr+0x7c>
    2016:	96 30       	cpi	r25, 0x06	; 6
    2018:	21 f5       	brne	.+72     	; 0x2062 <SPI_set_slave_addr+0x90>
    201a:	0f c0       	rjmp	.+30     	; 0x203a <SPI_set_slave_addr+0x68>
    201c:	e0 91 60 02 	lds	r30, 0x0260
    2020:	f0 91 61 02 	lds	r31, 0x0261
    2024:	22 c0       	rjmp	.+68     	; 0x206a <SPI_set_slave_addr+0x98>
    2026:	e0 91 5e 02 	lds	r30, 0x025E
    202a:	f0 91 5f 02 	lds	r31, 0x025F
    202e:	1d c0       	rjmp	.+58     	; 0x206a <SPI_set_slave_addr+0x98>
    2030:	e0 91 62 02 	lds	r30, 0x0262
    2034:	f0 91 63 02 	lds	r31, 0x0263
    2038:	18 c0       	rjmp	.+48     	; 0x206a <SPI_set_slave_addr+0x98>
    203a:	e0 91 6a 02 	lds	r30, 0x026A
    203e:	f0 91 6b 02 	lds	r31, 0x026B
    2042:	13 c0       	rjmp	.+38     	; 0x206a <SPI_set_slave_addr+0x98>
    2044:	e0 91 64 02 	lds	r30, 0x0264
    2048:	f0 91 65 02 	lds	r31, 0x0265
    204c:	0e c0       	rjmp	.+28     	; 0x206a <SPI_set_slave_addr+0x98>
    204e:	e0 91 66 02 	lds	r30, 0x0266
    2052:	f0 91 67 02 	lds	r31, 0x0267
    2056:	09 c0       	rjmp	.+18     	; 0x206a <SPI_set_slave_addr+0x98>
    2058:	e0 91 68 02 	lds	r30, 0x0268
    205c:	f0 91 69 02 	lds	r31, 0x0269
    2060:	04 c0       	rjmp	.+8      	; 0x206a <SPI_set_slave_addr+0x98>
    2062:	e0 91 6c 02 	lds	r30, 0x026C
    2066:	f0 91 6d 02 	lds	r31, 0x026D
    206a:	30 97       	sbiw	r30, 0x00	; 0
    206c:	09 f0       	breq	.+2      	; 0x2070 <SPI_set_slave_addr+0x9e>
    206e:	09 95       	icall
    2070:	1f 91       	pop	r17
    2072:	08 95       	ret

00002074 <SPI_transmit>:
    2074:	1f 93       	push	r17
    2076:	16 2f       	mov	r17, r22
    2078:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <SPI_set_slave_addr>
    207c:	82 e0       	ldi	r24, 0x02	; 2
    207e:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    2082:	81 30       	cpi	r24, 0x01	; 1
    2084:	21 f4       	brne	.+8      	; 0x208e <SPI_transmit+0x1a>
    2086:	1e bd       	out	0x2e, r17	; 46
    2088:	0d b4       	in	r0, 0x2d	; 45
    208a:	07 fe       	sbrs	r0, 7
    208c:	fd cf       	rjmp	.-6      	; 0x2088 <SPI_transmit+0x14>
    208e:	1f 91       	pop	r17
    2090:	08 95       	ret

00002092 <__SPKR_set_up_freq_LUT>:
    2092:	0f 93       	push	r16
    2094:	1f 93       	push	r17
    2096:	cf 93       	push	r28
    2098:	df 93       	push	r29
    209a:	80 e2       	ldi	r24, 0x20	; 32
    209c:	91 e0       	ldi	r25, 0x01	; 1
    209e:	0e 94 46 29 	call	0x528c	; 0x528c <malloc>
    20a2:	9c 01       	movw	r18, r24
    20a4:	90 93 7d 02 	sts	0x027D, r25
    20a8:	80 93 7c 02 	sts	0x027C, r24
    20ac:	89 2b       	or	r24, r25
    20ae:	11 f4       	brne	.+4      	; 0x20b4 <__SPKR_set_up_freq_LUT+0x22>
    20b0:	80 e0       	ldi	r24, 0x00	; 0
    20b2:	39 c0       	rjmp	.+114    	; 0x2126 <__SPKR_set_up_freq_LUT+0x94>
    20b4:	89 01       	movw	r16, r18
    20b6:	c0 e0       	ldi	r28, 0x00	; 0
    20b8:	d0 e0       	ldi	r29, 0x00	; 0
    20ba:	be 01       	movw	r22, r28
    20bc:	80 e0       	ldi	r24, 0x00	; 0
    20be:	90 e0       	ldi	r25, 0x00	; 0
    20c0:	0e 94 87 22 	call	0x450e	; 0x450e <__floatunsisf>
    20c4:	20 e0       	ldi	r18, 0x00	; 0
    20c6:	30 e0       	ldi	r19, 0x00	; 0
    20c8:	40 ea       	ldi	r20, 0xA0	; 160
    20ca:	51 e4       	ldi	r21, 0x41	; 65
    20cc:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__divsf3>
    20d0:	27 ef       	ldi	r18, 0xF7	; 247
    20d2:	35 e7       	ldi	r19, 0x75	; 117
    20d4:	40 e0       	ldi	r20, 0x00	; 0
    20d6:	5f e3       	ldi	r21, 0x3F	; 63
    20d8:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
    20dc:	9b 01       	movw	r18, r22
    20de:	ac 01       	movw	r20, r24
    20e0:	60 e0       	ldi	r22, 0x00	; 0
    20e2:	70 e0       	ldi	r23, 0x00	; 0
    20e4:	80 e2       	ldi	r24, 0x20	; 32
    20e6:	91 e4       	ldi	r25, 0x41	; 65
    20e8:	0e 94 da 23 	call	0x47b4	; 0x47b4 <pow>
    20ec:	9b 01       	movw	r18, r22
    20ee:	ac 01       	movw	r20, r24
    20f0:	ca 01       	movw	r24, r20
    20f2:	b9 01       	movw	r22, r18
    20f4:	2d ec       	ldi	r18, 0xCD	; 205
    20f6:	3c ec       	ldi	r19, 0xCC	; 204
    20f8:	42 e8       	ldi	r20, 0x82	; 130
    20fa:	51 e4       	ldi	r21, 0x41	; 65
    20fc:	0e 94 77 23 	call	0x46ee	; 0x46ee <__mulsf3>
    2100:	0e 94 3d 23 	call	0x467a	; 0x467a <lrint>
    2104:	2a e0       	ldi	r18, 0x0A	; 10
    2106:	30 e0       	ldi	r19, 0x00	; 0
    2108:	40 e0       	ldi	r20, 0x00	; 0
    210a:	50 e0       	ldi	r21, 0x00	; 0
    210c:	0e 94 a7 28 	call	0x514e	; 0x514e <__mulsi3>
    2110:	f8 01       	movw	r30, r16
    2112:	61 93       	st	Z+, r22
    2114:	71 93       	st	Z+, r23
    2116:	81 93       	st	Z+, r24
    2118:	91 93       	st	Z+, r25
    211a:	8f 01       	movw	r16, r30
    211c:	21 96       	adiw	r28, 0x01	; 1
    211e:	c8 34       	cpi	r28, 0x48	; 72
    2120:	d1 05       	cpc	r29, r1
    2122:	59 f6       	brne	.-106    	; 0x20ba <__SPKR_set_up_freq_LUT+0x28>
    2124:	81 e0       	ldi	r24, 0x01	; 1
    2126:	df 91       	pop	r29
    2128:	cf 91       	pop	r28
    212a:	1f 91       	pop	r17
    212c:	0f 91       	pop	r16
    212e:	08 95       	ret

00002130 <__SPKR_open_beep_mode>:
    2130:	8a e0       	ldi	r24, 0x0A	; 10
    2132:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    2136:	88 23       	and	r24, r24
    2138:	71 f4       	brne	.+28     	; 0x2156 <__SPKR_open_beep_mode+0x26>
    213a:	10 92 79 02 	sts	0x0279, r1
    213e:	10 92 78 02 	sts	0x0278, r1
    2142:	81 e0       	ldi	r24, 0x01	; 1
    2144:	0e 94 cb 1a 	call	0x3596	; 0x3596 <__SPKR_init>
    2148:	81 e0       	ldi	r24, 0x01	; 1
    214a:	80 93 6f 02 	sts	0x026F, r24
    214e:	8a e0       	ldi	r24, 0x0A	; 10
    2150:	61 e0       	ldi	r22, 0x01	; 1
    2152:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    2156:	8a e0       	ldi	r24, 0x0A	; 10
    2158:	91 e0       	ldi	r25, 0x01	; 1
    215a:	08 95       	ret

0000215c <__SPKR_open_tone_mode>:
    215c:	1f 93       	push	r17
    215e:	8b e0       	ldi	r24, 0x0B	; 11
    2160:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    2164:	88 23       	and	r24, r24
    2166:	11 f0       	breq	.+4      	; 0x216c <__SPKR_open_tone_mode+0x10>
    2168:	90 e0       	ldi	r25, 0x00	; 0
    216a:	21 c0       	rjmp	.+66     	; 0x21ae <__SPKR_open_tone_mode+0x52>
    216c:	89 e0       	ldi	r24, 0x09	; 9
    216e:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    2172:	88 23       	and	r24, r24
    2174:	d9 f4       	brne	.+54     	; 0x21ac <__SPKR_open_tone_mode+0x50>
    2176:	0e 94 49 10 	call	0x2092	; 0x2092 <__SPKR_set_up_freq_LUT>
    217a:	18 2f       	mov	r17, r24
    217c:	81 30       	cpi	r24, 0x01	; 1
    217e:	b1 f4       	brne	.+44     	; 0x21ac <__SPKR_open_tone_mode+0x50>
    2180:	10 92 70 02 	sts	0x0270, r1
    2184:	10 92 71 02 	sts	0x0271, r1
    2188:	10 92 72 02 	sts	0x0272, r1
    218c:	10 92 73 02 	sts	0x0273, r1
    2190:	8d e0       	ldi	r24, 0x0D	; 13
    2192:	6e e4       	ldi	r22, 0x4E	; 78
    2194:	7a e1       	ldi	r23, 0x1A	; 26
    2196:	0e 94 c3 18 	call	0x3186	; 0x3186 <ISR_attach>
    219a:	82 e0       	ldi	r24, 0x02	; 2
    219c:	0e 94 cb 1a 	call	0x3596	; 0x3596 <__SPKR_init>
    21a0:	10 93 6e 02 	sts	0x026E, r17
    21a4:	89 e0       	ldi	r24, 0x09	; 9
    21a6:	61 e0       	ldi	r22, 0x01	; 1
    21a8:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    21ac:	91 e0       	ldi	r25, 0x01	; 1
    21ae:	89 e0       	ldi	r24, 0x09	; 9
    21b0:	1f 91       	pop	r17
    21b2:	08 95       	ret

000021b4 <SPKR_open>:
    21b4:	81 30       	cpi	r24, 0x01	; 1
    21b6:	29 f0       	breq	.+10     	; 0x21c2 <SPKR_open+0xe>
    21b8:	82 30       	cpi	r24, 0x02	; 2
    21ba:	31 f0       	breq	.+12     	; 0x21c8 <SPKR_open+0x14>
    21bc:	90 e0       	ldi	r25, 0x00	; 0
    21be:	89 e0       	ldi	r24, 0x09	; 9
    21c0:	08 95       	ret
    21c2:	0e 94 98 10 	call	0x2130	; 0x2130 <__SPKR_open_beep_mode>
    21c6:	08 95       	ret
    21c8:	0e 94 ae 10 	call	0x215c	; 0x215c <__SPKR_open_tone_mode>
    21cc:	08 95       	ret

000021ce <STEPPER_get_nSteps>:
    21ce:	80 91 7d 04 	lds	r24, 0x047D
    21d2:	90 91 7e 04 	lds	r25, 0x047E
    21d6:	20 91 7f 04 	lds	r18, 0x047F
    21da:	30 91 80 04 	lds	r19, 0x0480
    21de:	bc 01       	movw	r22, r24
    21e0:	c9 01       	movw	r24, r18
    21e2:	08 95       	ret

000021e4 <STEPPER_stepmode>:
    21e4:	2f 92       	push	r2
    21e6:	3f 92       	push	r3
    21e8:	4f 92       	push	r4
    21ea:	5f 92       	push	r5
    21ec:	6f 92       	push	r6
    21ee:	7f 92       	push	r7
    21f0:	8f 92       	push	r8
    21f2:	9f 92       	push	r9
    21f4:	af 92       	push	r10
    21f6:	bf 92       	push	r11
    21f8:	cf 92       	push	r12
    21fa:	df 92       	push	r13
    21fc:	ef 92       	push	r14
    21fe:	ff 92       	push	r15
    2200:	0f 93       	push	r16
    2202:	1f 93       	push	r17
    2204:	df 93       	push	r29
    2206:	cf 93       	push	r28
    2208:	cd b7       	in	r28, 0x3d	; 61
    220a:	de b7       	in	r29, 0x3e	; 62
    220c:	58 2e       	mov	r5, r24
    220e:	96 2e       	mov	r9, r22
    2210:	44 2e       	mov	r4, r20
    2212:	39 01       	movw	r6, r18
    2214:	3c 2c       	mov	r3, r12
    2216:	c9 8c       	ldd	r12, Y+25	; 0x19
    2218:	da 8c       	ldd	r13, Y+26	; 0x1a
    221a:	2b 8c       	ldd	r2, Y+27	; 0x1b
    221c:	81 e0       	ldi	r24, 0x01	; 1
    221e:	68 17       	cp	r22, r24
    2220:	39 f1       	breq	.+78     	; 0x2270 <STEPPER_stepmode+0x8c>
    2222:	68 17       	cp	r22, r24
    2224:	28 f0       	brcs	.+10     	; 0x2230 <STEPPER_stepmode+0x4c>
    2226:	92 e0       	ldi	r25, 0x02	; 2
    2228:	69 17       	cp	r22, r25
    222a:	09 f0       	breq	.+2      	; 0x222e <STEPPER_stepmode+0x4a>
    222c:	85 c0       	rjmp	.+266    	; 0x2338 <STEPPER_stepmode+0x154>
    222e:	49 c0       	rjmp	.+146    	; 0x22c2 <STEPPER_stepmode+0xde>
    2230:	80 e0       	ldi	r24, 0x00	; 0
    2232:	61 e0       	ldi	r22, 0x01	; 1
    2234:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <STEPPER_set_mode>
    2238:	80 e0       	ldi	r24, 0x00	; 0
    223a:	b7 01       	movw	r22, r14
    223c:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_accel>
    2240:	80 e0       	ldi	r24, 0x00	; 0
    2242:	64 2d       	mov	r22, r4
    2244:	a3 01       	movw	r20, r6
    2246:	98 01       	movw	r18, r16
    2248:	03 2d       	mov	r16, r3
    224a:	ee 24       	eor	r14, r14
    224c:	e3 94       	inc	r14
    224e:	e2 ea       	ldi	r30, 0xA2	; 162
    2250:	ce 2e       	mov	r12, r30
    2252:	e4 e0       	ldi	r30, 0x04	; 4
    2254:	de 2e       	mov	r13, r30
    2256:	0e 94 32 13 	call	0x2664	; 0x2664 <STEPPER_step>
    225a:	55 20       	and	r5, r5
    225c:	09 f0       	breq	.+2      	; 0x2260 <STEPPER_stepmode+0x7c>
    225e:	6c c0       	rjmp	.+216    	; 0x2338 <STEPPER_stepmode+0x154>
    2260:	00 d0       	rcall	.+0      	; 0x2262 <STEPPER_stepmode+0x7e>
    2262:	0f 92       	push	r0
    2264:	ed b7       	in	r30, 0x3d	; 61
    2266:	fe b7       	in	r31, 0x3e	; 62
    2268:	11 82       	std	Z+1, r1	; 0x01
    226a:	b3 82       	std	Z+3, r11	; 0x03
    226c:	a2 82       	std	Z+2, r10	; 0x02
    226e:	23 c0       	rjmp	.+70     	; 0x22b6 <STEPPER_stepmode+0xd2>
    2270:	81 e0       	ldi	r24, 0x01	; 1
    2272:	61 e0       	ldi	r22, 0x01	; 1
    2274:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <STEPPER_set_mode>
    2278:	81 e0       	ldi	r24, 0x01	; 1
    227a:	b6 01       	movw	r22, r12
    227c:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_accel>
    2280:	81 e0       	ldi	r24, 0x01	; 1
    2282:	68 2d       	mov	r22, r8
    2284:	4d 89       	ldd	r20, Y+21	; 0x15
    2286:	5e 89       	ldd	r21, Y+22	; 0x16
    2288:	2f 89       	ldd	r18, Y+23	; 0x17
    228a:	38 8d       	ldd	r19, Y+24	; 0x18
    228c:	02 2d       	mov	r16, r2
    228e:	ee 24       	eor	r14, r14
    2290:	e3 94       	inc	r14
    2292:	72 ea       	ldi	r23, 0xA2	; 162
    2294:	c7 2e       	mov	r12, r23
    2296:	74 e0       	ldi	r23, 0x04	; 4
    2298:	d7 2e       	mov	r13, r23
    229a:	0e 94 32 13 	call	0x2664	; 0x2664 <STEPPER_step>
    229e:	55 20       	and	r5, r5
    22a0:	09 f0       	breq	.+2      	; 0x22a4 <STEPPER_stepmode+0xc0>
    22a2:	4a c0       	rjmp	.+148    	; 0x2338 <STEPPER_stepmode+0x154>
    22a4:	00 d0       	rcall	.+0      	; 0x22a6 <STEPPER_stepmode+0xc2>
    22a6:	0f 92       	push	r0
    22a8:	ed b7       	in	r30, 0x3d	; 61
    22aa:	fe b7       	in	r31, 0x3e	; 62
    22ac:	91 82       	std	Z+1, r9	; 0x01
    22ae:	8c 8d       	ldd	r24, Y+28	; 0x1c
    22b0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    22b2:	93 83       	std	Z+3, r25	; 0x03
    22b4:	82 83       	std	Z+2, r24	; 0x02
    22b6:	0e 94 be 13 	call	0x277c	; 0x277c <STEPPER_wait_and_then>
    22ba:	0f 90       	pop	r0
    22bc:	0f 90       	pop	r0
    22be:	0f 90       	pop	r0
    22c0:	3b c0       	rjmp	.+118    	; 0x2338 <STEPPER_stepmode+0x154>
    22c2:	82 e0       	ldi	r24, 0x02	; 2
    22c4:	61 e0       	ldi	r22, 0x01	; 1
    22c6:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <STEPPER_set_mode>
    22ca:	80 e0       	ldi	r24, 0x00	; 0
    22cc:	b7 01       	movw	r22, r14
    22ce:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_accel>
    22d2:	81 e0       	ldi	r24, 0x01	; 1
    22d4:	b6 01       	movw	r22, r12
    22d6:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_accel>
    22da:	80 e0       	ldi	r24, 0x00	; 0
    22dc:	64 2d       	mov	r22, r4
    22de:	a3 01       	movw	r20, r6
    22e0:	98 01       	movw	r18, r16
    22e2:	03 2d       	mov	r16, r3
    22e4:	ee 24       	eor	r14, r14
    22e6:	e3 94       	inc	r14
    22e8:	92 ea       	ldi	r25, 0xA2	; 162
    22ea:	c9 2e       	mov	r12, r25
    22ec:	94 e0       	ldi	r25, 0x04	; 4
    22ee:	d9 2e       	mov	r13, r25
    22f0:	0e 94 32 13 	call	0x2664	; 0x2664 <STEPPER_step>
    22f4:	81 e0       	ldi	r24, 0x01	; 1
    22f6:	68 2d       	mov	r22, r8
    22f8:	4d 89       	ldd	r20, Y+21	; 0x15
    22fa:	5e 89       	ldd	r21, Y+22	; 0x16
    22fc:	2f 89       	ldd	r18, Y+23	; 0x17
    22fe:	38 8d       	ldd	r19, Y+24	; 0x18
    2300:	02 2d       	mov	r16, r2
    2302:	0e 94 32 13 	call	0x2664	; 0x2664 <STEPPER_step>
    2306:	55 20       	and	r5, r5
    2308:	b9 f4       	brne	.+46     	; 0x2338 <STEPPER_stepmode+0x154>
    230a:	00 d0       	rcall	.+0      	; 0x230c <STEPPER_stepmode+0x128>
    230c:	00 d0       	rcall	.+0      	; 0x230e <STEPPER_stepmode+0x12a>
    230e:	0f 92       	push	r0
    2310:	ad b7       	in	r26, 0x3d	; 61
    2312:	be b7       	in	r27, 0x3e	; 62
    2314:	11 96       	adiw	r26, 0x01	; 1
    2316:	ed b7       	in	r30, 0x3d	; 61
    2318:	fe b7       	in	r31, 0x3e	; 62
    231a:	91 82       	std	Z+1, r9	; 0x01
    231c:	fd 01       	movw	r30, r26
    231e:	b2 82       	std	Z+2, r11	; 0x02
    2320:	a1 82       	std	Z+1, r10	; 0x01
    2322:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2324:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2326:	94 83       	std	Z+4, r25	; 0x04
    2328:	83 83       	std	Z+3, r24	; 0x03
    232a:	0e 94 be 13 	call	0x277c	; 0x277c <STEPPER_wait_and_then>
    232e:	0f 90       	pop	r0
    2330:	0f 90       	pop	r0
    2332:	0f 90       	pop	r0
    2334:	0f 90       	pop	r0
    2336:	0f 90       	pop	r0
    2338:	cf 91       	pop	r28
    233a:	df 91       	pop	r29
    233c:	1f 91       	pop	r17
    233e:	0f 91       	pop	r16
    2340:	ff 90       	pop	r15
    2342:	ef 90       	pop	r14
    2344:	df 90       	pop	r13
    2346:	cf 90       	pop	r12
    2348:	bf 90       	pop	r11
    234a:	af 90       	pop	r10
    234c:	9f 90       	pop	r9
    234e:	8f 90       	pop	r8
    2350:	7f 90       	pop	r7
    2352:	6f 90       	pop	r6
    2354:	5f 90       	pop	r5
    2356:	4f 90       	pop	r4
    2358:	3f 90       	pop	r3
    235a:	2f 90       	pop	r2
    235c:	08 95       	ret

0000235e <STEPPER_move>:
    235e:	6f 92       	push	r6
    2360:	7f 92       	push	r7
    2362:	8f 92       	push	r8
    2364:	9f 92       	push	r9
    2366:	af 92       	push	r10
    2368:	bf 92       	push	r11
    236a:	cf 92       	push	r12
    236c:	df 92       	push	r13
    236e:	ef 92       	push	r14
    2370:	ff 92       	push	r15
    2372:	0f 93       	push	r16
    2374:	1f 93       	push	r17
    2376:	df 93       	push	r29
    2378:	cf 93       	push	r28
    237a:	cd b7       	in	r28, 0x3d	; 61
    237c:	de b7       	in	r29, 0x3e	; 62
    237e:	94 2e       	mov	r9, r20
    2380:	7c 2d       	mov	r23, r12
    2382:	d5 01       	movw	r26, r10
    2384:	49 89       	ldd	r20, Y+17	; 0x11
    2386:	5a 89       	ldd	r21, Y+18	; 0x12
    2388:	ab 88       	ldd	r10, Y+19	; 0x13
    238a:	bc 88       	ldd	r11, Y+20	; 0x14
    238c:	cd 88       	ldd	r12, Y+21	; 0x15
    238e:	de 88       	ldd	r13, Y+22	; 0x16
    2390:	9f 89       	ldd	r25, Y+23	; 0x17
    2392:	81 30       	cpi	r24, 0x01	; 1
    2394:	09 f4       	brne	.+2      	; 0x2398 <STEPPER_move+0x3a>
    2396:	57 c0       	rjmp	.+174    	; 0x2446 <STEPPER_move+0xe8>
    2398:	81 30       	cpi	r24, 0x01	; 1
    239a:	b8 f1       	brcs	.+110    	; 0x240a <STEPPER_move+0xac>
    239c:	82 30       	cpi	r24, 0x02	; 2
    239e:	09 f0       	breq	.+2      	; 0x23a2 <STEPPER_move+0x44>
    23a0:	76 c0       	rjmp	.+236    	; 0x248e <STEPPER_move+0x130>
    23a2:	61 30       	cpi	r22, 0x01	; 1
    23a4:	91 f0       	breq	.+36     	; 0x23ca <STEPPER_move+0x6c>
    23a6:	61 30       	cpi	r22, 0x01	; 1
    23a8:	20 f0       	brcs	.+8      	; 0x23b2 <STEPPER_move+0x54>
    23aa:	62 30       	cpi	r22, 0x02	; 2
    23ac:	09 f0       	breq	.+2      	; 0x23b0 <STEPPER_move+0x52>
    23ae:	6f c0       	rjmp	.+222    	; 0x248e <STEPPER_move+0x130>
    23b0:	15 c0       	rjmp	.+42     	; 0x23dc <STEPPER_move+0x7e>
    23b2:	80 e0       	ldi	r24, 0x00	; 0
    23b4:	60 e0       	ldi	r22, 0x00	; 0
    23b6:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <STEPPER_set_mode>
    23ba:	80 e0       	ldi	r24, 0x00	; 0
    23bc:	b7 01       	movw	r22, r14
    23be:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_accel>
    23c2:	80 e0       	ldi	r24, 0x00	; 0
    23c4:	69 2d       	mov	r22, r9
    23c6:	a8 01       	movw	r20, r16
    23c8:	1d c0       	rjmp	.+58     	; 0x2404 <STEPPER_move+0xa6>
    23ca:	81 e0       	ldi	r24, 0x01	; 1
    23cc:	60 e0       	ldi	r22, 0x00	; 0
    23ce:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <STEPPER_set_mode>
    23d2:	81 e0       	ldi	r24, 0x01	; 1
    23d4:	b6 01       	movw	r22, r12
    23d6:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_accel>
    23da:	11 c0       	rjmp	.+34     	; 0x23fe <STEPPER_move+0xa0>
    23dc:	82 e0       	ldi	r24, 0x02	; 2
    23de:	60 e0       	ldi	r22, 0x00	; 0
    23e0:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <STEPPER_set_mode>
    23e4:	80 e0       	ldi	r24, 0x00	; 0
    23e6:	b7 01       	movw	r22, r14
    23e8:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_accel>
    23ec:	81 e0       	ldi	r24, 0x01	; 1
    23ee:	b6 01       	movw	r22, r12
    23f0:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_accel>
    23f4:	80 e0       	ldi	r24, 0x00	; 0
    23f6:	69 2d       	mov	r22, r9
    23f8:	a8 01       	movw	r20, r16
    23fa:	0e 94 ad 12 	call	0x255a	; 0x255a <STEPPER_run>
    23fe:	81 e0       	ldi	r24, 0x01	; 1
    2400:	68 2d       	mov	r22, r8
    2402:	a5 01       	movw	r20, r10
    2404:	0e 94 ad 12 	call	0x255a	; 0x255a <STEPPER_run>
    2408:	42 c0       	rjmp	.+132    	; 0x248e <STEPPER_move+0x130>
    240a:	ed b7       	in	r30, 0x3d	; 61
    240c:	fe b7       	in	r31, 0x3e	; 62
    240e:	39 97       	sbiw	r30, 0x09	; 9
    2410:	0f b6       	in	r0, 0x3f	; 63
    2412:	f8 94       	cli
    2414:	fe bf       	out	0x3e, r31	; 62
    2416:	0f be       	out	0x3f, r0	; 63
    2418:	ed bf       	out	0x3d, r30	; 61
    241a:	6d b6       	in	r6, 0x3d	; 61
    241c:	7e b6       	in	r7, 0x3e	; 62
    241e:	08 94       	sec
    2420:	61 1c       	adc	r6, r1
    2422:	71 1c       	adc	r7, r1
    2424:	52 83       	std	Z+2, r21	; 0x02
    2426:	41 83       	std	Z+1, r20	; 0x01
    2428:	f3 01       	movw	r30, r6
    242a:	b3 82       	std	Z+3, r11	; 0x03
    242c:	a2 82       	std	Z+2, r10	; 0x02
    242e:	d5 82       	std	Z+5, r13	; 0x05
    2430:	c4 82       	std	Z+4, r12	; 0x04
    2432:	96 83       	std	Z+6, r25	; 0x06
    2434:	88 8d       	ldd	r24, Y+24	; 0x18
    2436:	99 8d       	ldd	r25, Y+25	; 0x19
    2438:	90 87       	std	Z+8, r25	; 0x08
    243a:	87 83       	std	Z+7, r24	; 0x07
    243c:	80 e0       	ldi	r24, 0x00	; 0
    243e:	49 2d       	mov	r20, r9
    2440:	c7 2e       	mov	r12, r23
    2442:	5d 01       	movw	r10, r26
    2444:	1a c0       	rjmp	.+52     	; 0x247a <STEPPER_move+0x11c>
    2446:	ed b7       	in	r30, 0x3d	; 61
    2448:	fe b7       	in	r31, 0x3e	; 62
    244a:	39 97       	sbiw	r30, 0x09	; 9
    244c:	0f b6       	in	r0, 0x3f	; 63
    244e:	f8 94       	cli
    2450:	fe bf       	out	0x3e, r31	; 62
    2452:	0f be       	out	0x3f, r0	; 63
    2454:	ed bf       	out	0x3d, r30	; 61
    2456:	ad b7       	in	r26, 0x3d	; 61
    2458:	be b7       	in	r27, 0x3e	; 62
    245a:	11 96       	adiw	r26, 0x01	; 1
    245c:	52 83       	std	Z+2, r21	; 0x02
    245e:	41 83       	std	Z+1, r20	; 0x01
    2460:	fd 01       	movw	r30, r26
    2462:	b3 82       	std	Z+3, r11	; 0x03
    2464:	a2 82       	std	Z+2, r10	; 0x02
    2466:	d5 82       	std	Z+5, r13	; 0x05
    2468:	c4 82       	std	Z+4, r12	; 0x04
    246a:	96 83       	std	Z+6, r25	; 0x06
    246c:	10 86       	std	Z+8, r1	; 0x08
    246e:	17 82       	std	Z+7, r1	; 0x07
    2470:	81 e0       	ldi	r24, 0x01	; 1
    2472:	49 2d       	mov	r20, r9
    2474:	c7 2e       	mov	r12, r23
    2476:	aa 24       	eor	r10, r10
    2478:	bb 24       	eor	r11, r11
    247a:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <STEPPER_stepmode>
    247e:	8d b7       	in	r24, 0x3d	; 61
    2480:	9e b7       	in	r25, 0x3e	; 62
    2482:	09 96       	adiw	r24, 0x09	; 9
    2484:	0f b6       	in	r0, 0x3f	; 63
    2486:	f8 94       	cli
    2488:	9e bf       	out	0x3e, r25	; 62
    248a:	0f be       	out	0x3f, r0	; 63
    248c:	8d bf       	out	0x3d, r24	; 61
    248e:	cf 91       	pop	r28
    2490:	df 91       	pop	r29
    2492:	1f 91       	pop	r17
    2494:	0f 91       	pop	r16
    2496:	ff 90       	pop	r15
    2498:	ef 90       	pop	r14
    249a:	df 90       	pop	r13
    249c:	cf 90       	pop	r12
    249e:	bf 90       	pop	r11
    24a0:	af 90       	pop	r10
    24a2:	9f 90       	pop	r9
    24a4:	8f 90       	pop	r8
    24a6:	7f 90       	pop	r7
    24a8:	6f 90       	pop	r6
    24aa:	08 95       	ret

000024ac <STEPPER_open>:
    24ac:	0e 94 5d 1b 	call	0x36ba	; 0x36ba <__STEPPER_init>
    24b0:	81 e0       	ldi	r24, 0x01	; 1
    24b2:	80 93 a1 04 	sts	0x04A1, r24
    24b6:	eb e6       	ldi	r30, 0x6B	; 107
    24b8:	f4 e0       	ldi	r31, 0x04	; 4
    24ba:	11 92       	st	Z+, r1
    24bc:	11 92       	st	Z+, r1
    24be:	11 82       	std	Z+1, r1	; 0x01
    24c0:	10 82       	st	Z, r1
    24c2:	32 96       	adiw	r30, 0x02	; 2
    24c4:	11 82       	std	Z+1, r1	; 0x01
    24c6:	10 82       	st	Z, r1
    24c8:	32 96       	adiw	r30, 0x02	; 2
    24ca:	11 82       	std	Z+1, r1	; 0x01
    24cc:	10 82       	st	Z, r1
    24ce:	32 96       	adiw	r30, 0x02	; 2
    24d0:	11 82       	std	Z+1, r1	; 0x01
    24d2:	10 82       	st	Z, r1
    24d4:	32 96       	adiw	r30, 0x02	; 2
    24d6:	11 82       	std	Z+1, r1	; 0x01
    24d8:	10 82       	st	Z, r1
    24da:	32 96       	adiw	r30, 0x02	; 2
    24dc:	11 82       	std	Z+1, r1	; 0x01
    24de:	10 82       	st	Z, r1
    24e0:	32 96       	adiw	r30, 0x02	; 2
    24e2:	11 82       	std	Z+1, r1	; 0x01
    24e4:	10 82       	st	Z, r1
    24e6:	32 96       	adiw	r30, 0x02	; 2
    24e8:	11 82       	std	Z+1, r1	; 0x01
    24ea:	10 82       	st	Z, r1
    24ec:	32 96       	adiw	r30, 0x02	; 2
    24ee:	11 82       	std	Z+1, r1	; 0x01
    24f0:	10 82       	st	Z, r1
    24f2:	32 96       	adiw	r30, 0x02	; 2
    24f4:	11 82       	std	Z+1, r1	; 0x01
    24f6:	10 82       	st	Z, r1
    24f8:	32 96       	adiw	r30, 0x02	; 2
    24fa:	11 82       	std	Z+1, r1	; 0x01
    24fc:	10 82       	st	Z, r1
    24fe:	32 96       	adiw	r30, 0x02	; 2
    2500:	11 82       	std	Z+1, r1	; 0x01
    2502:	10 82       	st	Z, r1
    2504:	36 96       	adiw	r30, 0x06	; 6
    2506:	11 92       	st	Z+, r1
    2508:	11 92       	st	Z+, r1
    250a:	11 92       	st	Z+, r1
    250c:	10 82       	st	Z, r1
    250e:	32 96       	adiw	r30, 0x02	; 2
    2510:	11 92       	st	Z+, r1
    2512:	11 92       	st	Z+, r1
    2514:	11 92       	st	Z+, r1
    2516:	11 92       	st	Z+, r1
    2518:	11 92       	st	Z+, r1
    251a:	11 92       	st	Z+, r1
    251c:	11 92       	st	Z+, r1
    251e:	11 82       	std	Z+1, r1	; 0x01
    2520:	10 82       	st	Z, r1
    2522:	32 96       	adiw	r30, 0x02	; 2
    2524:	11 82       	std	Z+1, r1	; 0x01
    2526:	10 82       	st	Z, r1
    2528:	32 96       	adiw	r30, 0x02	; 2
    252a:	11 82       	std	Z+1, r1	; 0x01
    252c:	10 82       	st	Z, r1
    252e:	32 96       	adiw	r30, 0x02	; 2
    2530:	11 82       	std	Z+1, r1	; 0x01
    2532:	10 82       	st	Z, r1
    2534:	76 97       	sbiw	r30, 0x16	; 22
    2536:	11 82       	std	Z+1, r1	; 0x01
    2538:	10 82       	st	Z, r1
    253a:	32 96       	adiw	r30, 0x02	; 2
    253c:	11 82       	std	Z+1, r1	; 0x01
    253e:	10 82       	st	Z, r1
    2540:	10 92 a0 04 	sts	0x04A0, r1
    2544:	10 92 9f 04 	sts	0x049F, r1
    2548:	10 92 a1 04 	sts	0x04A1, r1
    254c:	87 e0       	ldi	r24, 0x07	; 7
    254e:	61 e0       	ldi	r22, 0x01	; 1
    2550:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    2554:	87 e0       	ldi	r24, 0x07	; 7
    2556:	91 e0       	ldi	r25, 0x01	; 1
    2558:	08 95       	ret

0000255a <STEPPER_run>:
    255a:	ef 92       	push	r14
    255c:	ff 92       	push	r15
    255e:	0f 93       	push	r16
    2560:	1f 93       	push	r17
    2562:	18 2f       	mov	r17, r24
    2564:	06 2f       	mov	r16, r22
    2566:	7a 01       	movw	r14, r20
    2568:	60 e0       	ldi	r22, 0x00	; 0
    256a:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <STEPPER_set_mode>
    256e:	81 2f       	mov	r24, r17
    2570:	60 2f       	mov	r22, r16
    2572:	0e 94 e6 12 	call	0x25cc	; 0x25cc <STEPPER_set_dir>
    2576:	81 2f       	mov	r24, r17
    2578:	b7 01       	movw	r22, r14
    257a:	0e 94 10 13 	call	0x2620	; 0x2620 <STEPPER_set_speed>
    257e:	1f 91       	pop	r17
    2580:	0f 91       	pop	r16
    2582:	ff 90       	pop	r15
    2584:	ef 90       	pop	r14
    2586:	08 95       	ret

00002588 <STEPPER_set_accel>:
    2588:	48 2f       	mov	r20, r24
    258a:	81 e0       	ldi	r24, 0x01	; 1
    258c:	80 93 a1 04 	sts	0x04A1, r24
    2590:	cb 01       	movw	r24, r22
    2592:	23 e0       	ldi	r18, 0x03	; 3
    2594:	69 3e       	cpi	r22, 0xE9	; 233
    2596:	72 07       	cpc	r23, r18
    2598:	10 f0       	brcs	.+4      	; 0x259e <STEPPER_set_accel+0x16>
    259a:	88 ee       	ldi	r24, 0xE8	; 232
    259c:	93 e0       	ldi	r25, 0x03	; 3
    259e:	41 30       	cpi	r20, 0x01	; 1
    25a0:	71 f0       	breq	.+28     	; 0x25be <STEPPER_set_accel+0x36>
    25a2:	41 30       	cpi	r20, 0x01	; 1
    25a4:	18 f0       	brcs	.+6      	; 0x25ac <STEPPER_set_accel+0x24>
    25a6:	42 30       	cpi	r20, 0x02	; 2
    25a8:	71 f4       	brne	.+28     	; 0x25c6 <STEPPER_set_accel+0x3e>
    25aa:	05 c0       	rjmp	.+10     	; 0x25b6 <STEPPER_set_accel+0x2e>
    25ac:	90 93 76 04 	sts	0x0476, r25
    25b0:	80 93 75 04 	sts	0x0475, r24
    25b4:	08 c0       	rjmp	.+16     	; 0x25c6 <STEPPER_set_accel+0x3e>
    25b6:	90 93 76 04 	sts	0x0476, r25
    25ba:	80 93 75 04 	sts	0x0475, r24
    25be:	90 93 78 04 	sts	0x0478, r25
    25c2:	80 93 77 04 	sts	0x0477, r24
    25c6:	10 92 a1 04 	sts	0x04A1, r1
    25ca:	08 95       	ret

000025cc <STEPPER_set_dir>:
    25cc:	98 2f       	mov	r25, r24
    25ce:	81 e0       	ldi	r24, 0x01	; 1
    25d0:	80 93 a1 04 	sts	0x04A1, r24
    25d4:	91 30       	cpi	r25, 0x01	; 1
    25d6:	51 f0       	breq	.+20     	; 0x25ec <STEPPER_set_dir+0x20>
    25d8:	91 30       	cpi	r25, 0x01	; 1
    25da:	18 f0       	brcs	.+6      	; 0x25e2 <STEPPER_set_dir+0x16>
    25dc:	92 30       	cpi	r25, 0x02	; 2
    25de:	41 f4       	brne	.+16     	; 0x25f0 <STEPPER_set_dir+0x24>
    25e0:	03 c0       	rjmp	.+6      	; 0x25e8 <STEPPER_set_dir+0x1c>
    25e2:	60 93 8e 04 	sts	0x048E, r22
    25e6:	04 c0       	rjmp	.+8      	; 0x25f0 <STEPPER_set_dir+0x24>
    25e8:	60 93 8e 04 	sts	0x048E, r22
    25ec:	60 93 8f 04 	sts	0x048F, r22
    25f0:	10 92 a1 04 	sts	0x04A1, r1
    25f4:	08 95       	ret

000025f6 <STEPPER_set_mode>:
    25f6:	98 2f       	mov	r25, r24
    25f8:	81 e0       	ldi	r24, 0x01	; 1
    25fa:	80 93 a1 04 	sts	0x04A1, r24
    25fe:	91 30       	cpi	r25, 0x01	; 1
    2600:	51 f0       	breq	.+20     	; 0x2616 <STEPPER_set_mode+0x20>
    2602:	91 30       	cpi	r25, 0x01	; 1
    2604:	18 f0       	brcs	.+6      	; 0x260c <STEPPER_set_mode+0x16>
    2606:	92 30       	cpi	r25, 0x02	; 2
    2608:	41 f4       	brne	.+16     	; 0x261a <STEPPER_set_mode+0x24>
    260a:	03 c0       	rjmp	.+6      	; 0x2612 <STEPPER_set_mode+0x1c>
    260c:	60 93 6b 04 	sts	0x046B, r22
    2610:	04 c0       	rjmp	.+8      	; 0x261a <STEPPER_set_mode+0x24>
    2612:	60 93 6b 04 	sts	0x046B, r22
    2616:	60 93 6c 04 	sts	0x046C, r22
    261a:	10 92 a1 04 	sts	0x04A1, r1
    261e:	08 95       	ret

00002620 <STEPPER_set_speed>:
    2620:	48 2f       	mov	r20, r24
    2622:	81 e0       	ldi	r24, 0x01	; 1
    2624:	80 93 a1 04 	sts	0x04A1, r24
    2628:	cb 01       	movw	r24, r22
    262a:	21 e0       	ldi	r18, 0x01	; 1
    262c:	61 39       	cpi	r22, 0x91	; 145
    262e:	72 07       	cpc	r23, r18
    2630:	10 f0       	brcs	.+4      	; 0x2636 <STEPPER_set_speed+0x16>
    2632:	80 e9       	ldi	r24, 0x90	; 144
    2634:	91 e0       	ldi	r25, 0x01	; 1
    2636:	41 30       	cpi	r20, 0x01	; 1
    2638:	71 f0       	breq	.+28     	; 0x2656 <STEPPER_set_speed+0x36>
    263a:	41 30       	cpi	r20, 0x01	; 1
    263c:	18 f0       	brcs	.+6      	; 0x2644 <STEPPER_set_speed+0x24>
    263e:	42 30       	cpi	r20, 0x02	; 2
    2640:	71 f4       	brne	.+28     	; 0x265e <STEPPER_set_speed+0x3e>
    2642:	05 c0       	rjmp	.+10     	; 0x264e <STEPPER_set_speed+0x2e>
    2644:	90 93 6e 04 	sts	0x046E, r25
    2648:	80 93 6d 04 	sts	0x046D, r24
    264c:	08 c0       	rjmp	.+16     	; 0x265e <STEPPER_set_speed+0x3e>
    264e:	90 93 6e 04 	sts	0x046E, r25
    2652:	80 93 6d 04 	sts	0x046D, r24
    2656:	90 93 70 04 	sts	0x0470, r25
    265a:	80 93 6f 04 	sts	0x046F, r24
    265e:	10 92 a1 04 	sts	0x04A1, r1
    2662:	08 95       	ret

00002664 <STEPPER_step>:
    2664:	8f 92       	push	r8
    2666:	9f 92       	push	r9
    2668:	af 92       	push	r10
    266a:	bf 92       	push	r11
    266c:	cf 92       	push	r12
    266e:	df 92       	push	r13
    2670:	ef 92       	push	r14
    2672:	ff 92       	push	r15
    2674:	0f 93       	push	r16
    2676:	1f 93       	push	r17
    2678:	cf 93       	push	r28
    267a:	df 93       	push	r29
    267c:	18 2f       	mov	r17, r24
    267e:	f6 2e       	mov	r15, r22
    2680:	5a 01       	movw	r10, r20
    2682:	49 01       	movw	r8, r18
    2684:	e6 01       	movw	r28, r12
    2686:	61 e0       	ldi	r22, 0x01	; 1
    2688:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <STEPPER_set_mode>
    268c:	81 2f       	mov	r24, r17
    268e:	b5 01       	movw	r22, r10
    2690:	a4 01       	movw	r20, r8
    2692:	0e 94 97 1b 	call	0x372e	; 0x372e <STEPPER_setup_decels>
    2696:	81 2f       	mov	r24, r17
    2698:	6f 2d       	mov	r22, r15
    269a:	0e 94 e6 12 	call	0x25cc	; 0x25cc <STEPPER_set_dir>
    269e:	81 2f       	mov	r24, r17
    26a0:	60 2f       	mov	r22, r16
    26a2:	0e 94 82 1b 	call	0x3704	; 0x3704 <STEPPER_set_stop_mode>
    26a6:	81 2f       	mov	r24, r17
    26a8:	b5 01       	movw	r22, r10
    26aa:	0e 94 67 1b 	call	0x36ce	; 0x36ce <STEPPER_set_steps>
    26ae:	c1 14       	cp	r12, r1
    26b0:	d1 04       	cpc	r13, r1
    26b2:	99 f0       	breq	.+38     	; 0x26da <STEPPER_step+0x76>
    26b4:	11 30       	cpi	r17, 0x01	; 1
    26b6:	49 f0       	breq	.+18     	; 0x26ca <STEPPER_step+0x66>
    26b8:	11 30       	cpi	r17, 0x01	; 1
    26ba:	18 f0       	brcs	.+6      	; 0x26c2 <STEPPER_step+0x5e>
    26bc:	12 30       	cpi	r17, 0x02	; 2
    26be:	69 f4       	brne	.+26     	; 0x26da <STEPPER_step+0x76>
    26c0:	06 c0       	rjmp	.+12     	; 0x26ce <STEPPER_step+0x6a>
    26c2:	18 82       	st	Y, r1
    26c4:	10 92 9d 04 	sts	0x049D, r1
    26c8:	08 c0       	rjmp	.+16     	; 0x26da <STEPPER_step+0x76>
    26ca:	19 82       	std	Y+1, r1	; 0x01
    26cc:	04 c0       	rjmp	.+8      	; 0x26d6 <STEPPER_step+0x72>
    26ce:	18 82       	st	Y, r1
    26d0:	19 82       	std	Y+1, r1	; 0x01
    26d2:	10 92 9d 04 	sts	0x049D, r1
    26d6:	10 92 9e 04 	sts	0x049E, r1
    26da:	d0 93 a0 04 	sts	0x04A0, r29
    26de:	c0 93 9f 04 	sts	0x049F, r28
    26e2:	ee 20       	and	r14, r14
    26e4:	b9 f5       	brne	.+110    	; 0x2754 <STEPPER_step+0xf0>
    26e6:	8e e0       	ldi	r24, 0x0E	; 14
    26e8:	92 e0       	ldi	r25, 0x02	; 2
    26ea:	90 93 a0 04 	sts	0x04A0, r25
    26ee:	80 93 9f 04 	sts	0x049F, r24
    26f2:	81 2f       	mov	r24, r17
    26f4:	b4 01       	movw	r22, r8
    26f6:	0e 94 10 13 	call	0x2620	; 0x2620 <STEPPER_set_speed>
    26fa:	81 2f       	mov	r24, r17
    26fc:	0e 94 48 1b 	call	0x3690	; 0x3690 <STEPPER_go>
    2700:	11 30       	cpi	r17, 0x01	; 1
    2702:	71 f0       	breq	.+28     	; 0x2720 <STEPPER_step+0xbc>
    2704:	11 30       	cpi	r17, 0x01	; 1
    2706:	18 f0       	brcs	.+6      	; 0x270e <STEPPER_step+0xaa>
    2708:	12 30       	cpi	r17, 0x02	; 2
    270a:	59 f5       	brne	.+86     	; 0x2762 <STEPPER_step+0xfe>
    270c:	12 c0       	rjmp	.+36     	; 0x2732 <STEPPER_step+0xce>
    270e:	10 92 0e 02 	sts	0x020E, r1
    2712:	10 92 9d 04 	sts	0x049D, r1
    2716:	80 91 0e 02 	lds	r24, 0x020E
    271a:	88 23       	and	r24, r24
    271c:	e1 f3       	breq	.-8      	; 0x2716 <STEPPER_step+0xb2>
    271e:	21 c0       	rjmp	.+66     	; 0x2762 <STEPPER_step+0xfe>
    2720:	10 92 0f 02 	sts	0x020F, r1
    2724:	10 92 9e 04 	sts	0x049E, r1
    2728:	80 91 0f 02 	lds	r24, 0x020F
    272c:	88 23       	and	r24, r24
    272e:	e1 f3       	breq	.-8      	; 0x2728 <STEPPER_step+0xc4>
    2730:	18 c0       	rjmp	.+48     	; 0x2762 <STEPPER_step+0xfe>
    2732:	10 92 0e 02 	sts	0x020E, r1
    2736:	10 92 0f 02 	sts	0x020F, r1
    273a:	10 92 9d 04 	sts	0x049D, r1
    273e:	10 92 9e 04 	sts	0x049E, r1
    2742:	80 91 0e 02 	lds	r24, 0x020E
    2746:	88 23       	and	r24, r24
    2748:	e1 f3       	breq	.-8      	; 0x2742 <STEPPER_step+0xde>
    274a:	80 91 0f 02 	lds	r24, 0x020F
    274e:	88 23       	and	r24, r24
    2750:	c1 f3       	breq	.-16     	; 0x2742 <STEPPER_step+0xde>
    2752:	07 c0       	rjmp	.+14     	; 0x2762 <STEPPER_step+0xfe>
    2754:	81 2f       	mov	r24, r17
    2756:	b4 01       	movw	r22, r8
    2758:	0e 94 10 13 	call	0x2620	; 0x2620 <STEPPER_set_speed>
    275c:	81 2f       	mov	r24, r17
    275e:	0e 94 48 1b 	call	0x3690	; 0x3690 <STEPPER_go>
    2762:	df 91       	pop	r29
    2764:	cf 91       	pop	r28
    2766:	1f 91       	pop	r17
    2768:	0f 91       	pop	r16
    276a:	ff 90       	pop	r15
    276c:	ef 90       	pop	r14
    276e:	df 90       	pop	r13
    2770:	cf 90       	pop	r12
    2772:	bf 90       	pop	r11
    2774:	af 90       	pop	r10
    2776:	9f 90       	pop	r9
    2778:	8f 90       	pop	r8
    277a:	08 95       	ret

0000277c <STEPPER_wait_and_then>:
    277c:	cf 92       	push	r12
    277e:	df 92       	push	r13
    2780:	ef 92       	push	r14
    2782:	ff 92       	push	r15
    2784:	0f 93       	push	r16
    2786:	1f 93       	push	r17
    2788:	df 93       	push	r29
    278a:	cf 93       	push	r28
    278c:	cd b7       	in	r28, 0x3d	; 61
    278e:	de b7       	in	r29, 0x3e	; 62
    2790:	8b 85       	ldd	r24, Y+11	; 0x0b
    2792:	81 30       	cpi	r24, 0x01	; 1
    2794:	61 f0       	breq	.+24     	; 0x27ae <STEPPER_wait_and_then+0x32>
    2796:	81 30       	cpi	r24, 0x01	; 1
    2798:	18 f0       	brcs	.+6      	; 0x27a0 <STEPPER_wait_and_then+0x24>
    279a:	82 30       	cpi	r24, 0x02	; 2
    279c:	a1 f5       	brne	.+104    	; 0x2806 <STEPPER_wait_and_then+0x8a>
    279e:	11 c0       	rjmp	.+34     	; 0x27c2 <STEPPER_wait_and_then+0x46>
    27a0:	ec 85       	ldd	r30, Y+12	; 0x0c
    27a2:	fd 85       	ldd	r31, Y+13	; 0x0d
    27a4:	80 91 a2 04 	lds	r24, 0x04A2
    27a8:	88 23       	and	r24, r24
    27aa:	e1 f3       	breq	.-8      	; 0x27a4 <STEPPER_wait_and_then+0x28>
    27ac:	06 c0       	rjmp	.+12     	; 0x27ba <STEPPER_wait_and_then+0x3e>
    27ae:	ec 85       	ldd	r30, Y+12	; 0x0c
    27b0:	fd 85       	ldd	r31, Y+13	; 0x0d
    27b2:	80 91 a3 04 	lds	r24, 0x04A3
    27b6:	88 23       	and	r24, r24
    27b8:	e1 f3       	breq	.-8      	; 0x27b2 <STEPPER_wait_and_then+0x36>
    27ba:	30 97       	sbiw	r30, 0x00	; 0
    27bc:	21 f1       	breq	.+72     	; 0x2806 <STEPPER_wait_and_then+0x8a>
    27be:	09 95       	icall
    27c0:	22 c0       	rjmp	.+68     	; 0x2806 <STEPPER_wait_and_then+0x8a>
    27c2:	cc 84       	ldd	r12, Y+12	; 0x0c
    27c4:	dd 84       	ldd	r13, Y+13	; 0x0d
    27c6:	ee 84       	ldd	r14, Y+14	; 0x0e
    27c8:	ff 84       	ldd	r15, Y+15	; 0x0f
    27ca:	00 e0       	ldi	r16, 0x00	; 0
    27cc:	10 e0       	ldi	r17, 0x00	; 0
    27ce:	00 23       	and	r16, r16
    27d0:	51 f4       	brne	.+20     	; 0x27e6 <STEPPER_wait_and_then+0x6a>
    27d2:	80 91 a2 04 	lds	r24, 0x04A2
    27d6:	88 23       	and	r24, r24
    27d8:	31 f0       	breq	.+12     	; 0x27e6 <STEPPER_wait_and_then+0x6a>
    27da:	c1 14       	cp	r12, r1
    27dc:	d1 04       	cpc	r13, r1
    27de:	11 f0       	breq	.+4      	; 0x27e4 <STEPPER_wait_and_then+0x68>
    27e0:	f6 01       	movw	r30, r12
    27e2:	09 95       	icall
    27e4:	01 e0       	ldi	r16, 0x01	; 1
    27e6:	11 23       	and	r17, r17
    27e8:	51 f4       	brne	.+20     	; 0x27fe <STEPPER_wait_and_then+0x82>
    27ea:	80 91 a3 04 	lds	r24, 0x04A3
    27ee:	88 23       	and	r24, r24
    27f0:	31 f0       	breq	.+12     	; 0x27fe <STEPPER_wait_and_then+0x82>
    27f2:	e1 14       	cp	r14, r1
    27f4:	f1 04       	cpc	r15, r1
    27f6:	11 f0       	breq	.+4      	; 0x27fc <STEPPER_wait_and_then+0x80>
    27f8:	f7 01       	movw	r30, r14
    27fa:	09 95       	icall
    27fc:	11 e0       	ldi	r17, 0x01	; 1
    27fe:	00 23       	and	r16, r16
    2800:	31 f3       	breq	.-52     	; 0x27ce <STEPPER_wait_and_then+0x52>
    2802:	11 23       	and	r17, r17
    2804:	21 f3       	breq	.-56     	; 0x27ce <STEPPER_wait_and_then+0x52>
    2806:	cf 91       	pop	r28
    2808:	df 91       	pop	r29
    280a:	1f 91       	pop	r17
    280c:	0f 91       	pop	r16
    280e:	ff 90       	pop	r15
    2810:	ef 90       	pop	r14
    2812:	df 90       	pop	r13
    2814:	cf 90       	pop	r12
    2816:	08 95       	ret

00002818 <SYS_get_state>:
    2818:	e8 2f       	mov	r30, r24
    281a:	f0 e0       	ldi	r31, 0x00	; 0
    281c:	e3 31       	cpi	r30, 0x13	; 19
    281e:	f1 05       	cpc	r31, r1
    2820:	40 f4       	brcc	.+16     	; 0x2832 <SYS_get_state+0x1a>
    2822:	e2 5c       	subi	r30, 0xC2	; 194
    2824:	ff 4f       	sbci	r31, 0xFF	; 255
    2826:	ee 0f       	add	r30, r30
    2828:	ff 1f       	adc	r31, r31
    282a:	05 90       	lpm	r0, Z+
    282c:	f4 91       	lpm	r31, Z+
    282e:	e0 2d       	mov	r30, r0
    2830:	09 94       	ijmp
    2832:	80 e0       	ldi	r24, 0x00	; 0
    2834:	08 95       	ret
    2836:	80 91 a4 04 	lds	r24, 0x04A4
    283a:	08 95       	ret
    283c:	80 91 a5 04 	lds	r24, 0x04A5
    2840:	08 95       	ret
    2842:	80 91 a6 04 	lds	r24, 0x04A6
    2846:	08 95       	ret
    2848:	80 91 a7 04 	lds	r24, 0x04A7
    284c:	08 95       	ret
    284e:	80 91 a8 04 	lds	r24, 0x04A8
    2852:	08 95       	ret
    2854:	80 91 aa 04 	lds	r24, 0x04AA
    2858:	08 95       	ret
    285a:	80 91 a9 04 	lds	r24, 0x04A9
    285e:	08 95       	ret
    2860:	80 91 ab 04 	lds	r24, 0x04AB
    2864:	08 95       	ret
    2866:	80 91 ac 04 	lds	r24, 0x04AC
    286a:	08 95       	ret
    286c:	80 91 ad 04 	lds	r24, 0x04AD
    2870:	08 95       	ret
    2872:	80 91 ae 04 	lds	r24, 0x04AE
    2876:	08 95       	ret
    2878:	80 91 af 04 	lds	r24, 0x04AF
    287c:	08 95       	ret
    287e:	80 91 b0 04 	lds	r24, 0x04B0
    2882:	08 95       	ret
    2884:	80 91 b1 04 	lds	r24, 0x04B1
    2888:	08 95       	ret
    288a:	80 91 b2 04 	lds	r24, 0x04B2
    288e:	08 95       	ret
    2890:	80 91 b3 04 	lds	r24, 0x04B3
    2894:	08 95       	ret
    2896:	80 91 b4 04 	lds	r24, 0x04B4
    289a:	08 95       	ret
    289c:	80 91 b5 04 	lds	r24, 0x04B5
    28a0:	08 95       	ret
    28a2:	80 91 b6 04 	lds	r24, 0x04B6
    28a6:	08 95       	ret

000028a8 <SYS_set_state>:
    28a8:	e8 2f       	mov	r30, r24
    28aa:	f0 e0       	ldi	r31, 0x00	; 0
    28ac:	e3 31       	cpi	r30, 0x13	; 19
    28ae:	f1 05       	cpc	r31, r1
    28b0:	08 f0       	brcs	.+2      	; 0x28b4 <SYS_set_state+0xc>
    28b2:	40 c0       	rjmp	.+128    	; 0x2934 <SYS_set_state+0x8c>
    28b4:	ef 5a       	subi	r30, 0xAF	; 175
    28b6:	ff 4f       	sbci	r31, 0xFF	; 255
    28b8:	ee 0f       	add	r30, r30
    28ba:	ff 1f       	adc	r31, r31
    28bc:	05 90       	lpm	r0, Z+
    28be:	f4 91       	lpm	r31, Z+
    28c0:	e0 2d       	mov	r30, r0
    28c2:	09 94       	ijmp
    28c4:	60 93 a4 04 	sts	0x04A4, r22
    28c8:	08 95       	ret
    28ca:	60 93 a5 04 	sts	0x04A5, r22
    28ce:	08 95       	ret
    28d0:	60 93 a6 04 	sts	0x04A6, r22
    28d4:	08 95       	ret
    28d6:	60 93 a7 04 	sts	0x04A7, r22
    28da:	08 95       	ret
    28dc:	60 93 a8 04 	sts	0x04A8, r22
    28e0:	08 95       	ret
    28e2:	60 93 aa 04 	sts	0x04AA, r22
    28e6:	08 95       	ret
    28e8:	60 93 a9 04 	sts	0x04A9, r22
    28ec:	08 95       	ret
    28ee:	60 93 ab 04 	sts	0x04AB, r22
    28f2:	08 95       	ret
    28f4:	60 93 ac 04 	sts	0x04AC, r22
    28f8:	08 95       	ret
    28fa:	60 93 ad 04 	sts	0x04AD, r22
    28fe:	08 95       	ret
    2900:	60 93 ae 04 	sts	0x04AE, r22
    2904:	08 95       	ret
    2906:	60 93 af 04 	sts	0x04AF, r22
    290a:	08 95       	ret
    290c:	60 93 b0 04 	sts	0x04B0, r22
    2910:	08 95       	ret
    2912:	60 93 b1 04 	sts	0x04B1, r22
    2916:	08 95       	ret
    2918:	60 93 b2 04 	sts	0x04B2, r22
    291c:	08 95       	ret
    291e:	60 93 b3 04 	sts	0x04B3, r22
    2922:	08 95       	ret
    2924:	60 93 b4 04 	sts	0x04B4, r22
    2928:	08 95       	ret
    292a:	60 93 b5 04 	sts	0x04B5, r22
    292e:	08 95       	ret
    2930:	60 93 b4 04 	sts	0x04B4, r22
    2934:	08 95       	ret

00002936 <ATTINY_get_SW_state>:
    2936:	1f 93       	push	r17
    2938:	cf 93       	push	r28
    293a:	df 93       	push	r29
    293c:	18 2f       	mov	r17, r24
    293e:	80 91 11 02 	lds	r24, 0x0211
    2942:	88 23       	and	r24, r24
    2944:	41 f0       	breq	.+16     	; 0x2956 <ATTINY_get_SW_state+0x20>
    2946:	80 91 1b 02 	lds	r24, 0x021B
    294a:	88 23       	and	r24, r24
    294c:	99 f0       	breq	.+38     	; 0x2974 <ATTINY_get_SW_state+0x3e>
    294e:	10 92 11 02 	sts	0x0211, r1
    2952:	10 92 1b 02 	sts	0x021B, r1
    2956:	0e 94 f7 1b 	call	0x37ee	; 0x37ee <ATTINY_get_sensors>
    295a:	80 93 10 02 	sts	0x0210, r24
    295e:	85 e1       	ldi	r24, 0x15	; 21
    2960:	92 e0       	ldi	r25, 0x02	; 2
    2962:	61 e0       	ldi	r22, 0x01	; 1
    2964:	40 e0       	ldi	r20, 0x00	; 0
    2966:	22 e3       	ldi	r18, 0x32	; 50
    2968:	30 e0       	ldi	r19, 0x00	; 0
    296a:	0e 94 59 15 	call	0x2ab2	; 0x2ab2 <TMRSRVC_new>
    296e:	81 e0       	ldi	r24, 0x01	; 1
    2970:	80 93 11 02 	sts	0x0211, r24
    2974:	90 91 10 02 	lds	r25, 0x0210
    2978:	a1 2f       	mov	r26, r17
    297a:	b0 e0       	ldi	r27, 0x00	; 0
    297c:	ed 01       	movw	r28, r26
    297e:	c9 56       	subi	r28, 0x69	; 105
    2980:	de 4f       	sbci	r29, 0xFE	; 254
    2982:	88 81       	ld	r24, Y
    2984:	88 23       	and	r24, r24
    2986:	69 f0       	breq	.+26     	; 0x29a2 <ATTINY_get_SW_state+0x6c>
    2988:	fd 01       	movw	r30, r26
    298a:	e6 56       	subi	r30, 0x66	; 102
    298c:	fe 4f       	sbci	r31, 0xFE	; 254
    298e:	80 81       	ld	r24, Z
    2990:	98 23       	and	r25, r24
    2992:	c1 f0       	breq	.+48     	; 0x29c4 <ATTINY_get_SW_state+0x8e>
    2994:	fd 01       	movw	r30, r26
    2996:	ee 5e       	subi	r30, 0xEE	; 238
    2998:	fd 4f       	sbci	r31, 0xFD	; 253
    299a:	81 e0       	ldi	r24, 0x01	; 1
    299c:	80 83       	st	Z, r24
    299e:	18 82       	st	Y, r1
    29a0:	11 c0       	rjmp	.+34     	; 0x29c4 <ATTINY_get_SW_state+0x8e>
    29a2:	fd 01       	movw	r30, r26
    29a4:	ee 5e       	subi	r30, 0xEE	; 238
    29a6:	fd 4f       	sbci	r31, 0xFD	; 253
    29a8:	80 81       	ld	r24, Z
    29aa:	81 11       	cpse	r24, r1
    29ac:	10 82       	st	Z, r1
    29ae:	fd 01       	movw	r30, r26
    29b0:	e6 56       	subi	r30, 0x66	; 102
    29b2:	fe 4f       	sbci	r31, 0xFE	; 254
    29b4:	80 81       	ld	r24, Z
    29b6:	98 23       	and	r25, r24
    29b8:	29 f4       	brne	.+10     	; 0x29c4 <ATTINY_get_SW_state+0x8e>
    29ba:	fd 01       	movw	r30, r26
    29bc:	e9 56       	subi	r30, 0x69	; 105
    29be:	fe 4f       	sbci	r31, 0xFE	; 254
    29c0:	81 e0       	ldi	r24, 0x01	; 1
    29c2:	80 83       	st	Z, r24
    29c4:	ae 5e       	subi	r26, 0xEE	; 238
    29c6:	bd 4f       	sbci	r27, 0xFD	; 253
    29c8:	8c 91       	ld	r24, X
    29ca:	df 91       	pop	r29
    29cc:	cf 91       	pop	r28
    29ce:	1f 91       	pop	r17
    29d0:	08 95       	ret

000029d2 <ATTINY_open>:
    29d2:	82 e0       	ldi	r24, 0x02	; 2
    29d4:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    29d8:	88 23       	and	r24, r24
    29da:	19 f4       	brne	.+6      	; 0x29e2 <ATTINY_open+0x10>
    29dc:	90 e0       	ldi	r25, 0x00	; 0
    29de:	82 e0       	ldi	r24, 0x02	; 2
    29e0:	08 95       	ret
    29e2:	10 92 d2 04 	sts	0x04D2, r1
    29e6:	10 92 d1 04 	sts	0x04D1, r1
    29ea:	10 92 d4 04 	sts	0x04D4, r1
    29ee:	10 92 d3 04 	sts	0x04D3, r1
    29f2:	10 92 d6 04 	sts	0x04D6, r1
    29f6:	10 92 d5 04 	sts	0x04D5, r1
    29fa:	10 92 d8 04 	sts	0x04D8, r1
    29fe:	10 92 d7 04 	sts	0x04D7, r1
    2a02:	10 92 da 04 	sts	0x04DA, r1
    2a06:	10 92 d9 04 	sts	0x04D9, r1
    2a0a:	80 e9       	ldi	r24, 0x90	; 144
    2a0c:	91 e0       	ldi	r25, 0x01	; 1
    2a0e:	90 93 be 04 	sts	0x04BE, r25
    2a12:	80 93 bd 04 	sts	0x04BD, r24
    2a16:	90 93 c0 04 	sts	0x04C0, r25
    2a1a:	80 93 bf 04 	sts	0x04BF, r24
    2a1e:	90 93 c2 04 	sts	0x04C2, r25
    2a22:	80 93 c1 04 	sts	0x04C1, r24
    2a26:	90 93 c4 04 	sts	0x04C4, r25
    2a2a:	80 93 c3 04 	sts	0x04C3, r24
    2a2e:	90 93 c6 04 	sts	0x04C6, r25
    2a32:	80 93 c5 04 	sts	0x04C5, r24
    2a36:	84 e3       	ldi	r24, 0x34	; 52
    2a38:	98 e0       	ldi	r25, 0x08	; 8
    2a3a:	90 93 c8 04 	sts	0x04C8, r25
    2a3e:	80 93 c7 04 	sts	0x04C7, r24
    2a42:	90 93 ca 04 	sts	0x04CA, r25
    2a46:	80 93 c9 04 	sts	0x04C9, r24
    2a4a:	90 93 cc 04 	sts	0x04CC, r25
    2a4e:	80 93 cb 04 	sts	0x04CB, r24
    2a52:	90 93 ce 04 	sts	0x04CE, r25
    2a56:	80 93 cd 04 	sts	0x04CD, r24
    2a5a:	90 93 d0 04 	sts	0x04D0, r25
    2a5e:	80 93 cf 04 	sts	0x04CF, r24
    2a62:	81 e0       	ldi	r24, 0x01	; 1
    2a64:	61 e0       	ldi	r22, 0x01	; 1
    2a66:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    2a6a:	91 e0       	ldi	r25, 0x01	; 1
    2a6c:	81 e0       	ldi	r24, 0x01	; 1
    2a6e:	08 95       	ret

00002a70 <TMRSRVC_delay>:
    2a70:	df 93       	push	r29
    2a72:	cf 93       	push	r28
    2a74:	cd b7       	in	r28, 0x3d	; 61
    2a76:	de b7       	in	r29, 0x3e	; 62
    2a78:	29 97       	sbiw	r28, 0x09	; 9
    2a7a:	0f b6       	in	r0, 0x3f	; 63
    2a7c:	f8 94       	cli
    2a7e:	de bf       	out	0x3e, r29	; 62
    2a80:	0f be       	out	0x3f, r0	; 63
    2a82:	cd bf       	out	0x3d, r28	; 61
    2a84:	9c 01       	movw	r18, r24
    2a86:	ce 01       	movw	r24, r28
    2a88:	01 96       	adiw	r24, 0x01	; 1
    2a8a:	61 e0       	ldi	r22, 0x01	; 1
    2a8c:	40 e0       	ldi	r20, 0x00	; 0
    2a8e:	0e 94 59 15 	call	0x2ab2	; 0x2ab2 <TMRSRVC_new>
    2a92:	98 2f       	mov	r25, r24
    2a94:	88 23       	and	r24, r24
    2a96:	19 f4       	brne	.+6      	; 0x2a9e <TMRSRVC_delay+0x2e>
    2a98:	8f 81       	ldd	r24, Y+7	; 0x07
    2a9a:	88 23       	and	r24, r24
    2a9c:	e9 f3       	breq	.-6      	; 0x2a98 <TMRSRVC_delay+0x28>
    2a9e:	89 2f       	mov	r24, r25
    2aa0:	29 96       	adiw	r28, 0x09	; 9
    2aa2:	0f b6       	in	r0, 0x3f	; 63
    2aa4:	f8 94       	cli
    2aa6:	de bf       	out	0x3e, r29	; 62
    2aa8:	0f be       	out	0x3f, r0	; 63
    2aaa:	cd bf       	out	0x3d, r28	; 61
    2aac:	cf 91       	pop	r28
    2aae:	df 91       	pop	r29
    2ab0:	08 95       	ret

00002ab2 <TMRSRVC_new>:
    2ab2:	ef 92       	push	r14
    2ab4:	ff 92       	push	r15
    2ab6:	0f 93       	push	r16
    2ab8:	1f 93       	push	r17
    2aba:	cf 93       	push	r28
    2abc:	df 93       	push	r29
    2abe:	ec 01       	movw	r28, r24
    2ac0:	f6 2e       	mov	r15, r22
    2ac2:	e4 2e       	mov	r14, r20
    2ac4:	89 01       	movw	r16, r18
    2ac6:	88 e0       	ldi	r24, 0x08	; 8
    2ac8:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    2acc:	81 30       	cpi	r24, 0x01	; 1
    2ace:	11 f0       	breq	.+4      	; 0x2ad4 <TMRSRVC_new+0x22>
    2ad0:	81 e0       	ldi	r24, 0x01	; 1
    2ad2:	26 c0       	rjmp	.+76     	; 0x2b20 <TMRSRVC_new+0x6e>
    2ad4:	84 e0       	ldi	r24, 0x04	; 4
    2ad6:	90 e0       	ldi	r25, 0x00	; 0
    2ad8:	0e 94 46 29 	call	0x528c	; 0x528c <malloc>
    2adc:	fc 01       	movw	r30, r24
    2ade:	00 97       	sbiw	r24, 0x00	; 0
    2ae0:	11 f4       	brne	.+4      	; 0x2ae6 <TMRSRVC_new+0x34>
    2ae2:	82 e0       	ldi	r24, 0x02	; 2
    2ae4:	1d c0       	rjmp	.+58     	; 0x2b20 <TMRSRVC_new+0x6e>
    2ae6:	f9 82       	std	Y+1, r15	; 0x01
    2ae8:	f0 fc       	sbrc	r15, 0
    2aea:	1e 82       	std	Y+6, r1	; 0x06
    2aec:	81 e0       	ldi	r24, 0x01	; 1
    2aee:	e8 16       	cp	r14, r24
    2af0:	19 f4       	brne	.+6      	; 0x2af8 <TMRSRVC_new+0x46>
    2af2:	89 81       	ldd	r24, Y+1	; 0x01
    2af4:	84 60       	ori	r24, 0x04	; 4
    2af6:	89 83       	std	Y+1, r24	; 0x01
    2af8:	89 81       	ldd	r24, Y+1	; 0x01
    2afa:	88 60       	ori	r24, 0x08	; 8
    2afc:	89 83       	std	Y+1, r24	; 0x01
    2afe:	1b 83       	std	Y+3, r17	; 0x03
    2b00:	0a 83       	std	Y+2, r16	; 0x02
    2b02:	1d 83       	std	Y+5, r17	; 0x05
    2b04:	0c 83       	std	Y+4, r16	; 0x04
    2b06:	d1 83       	std	Z+1, r29	; 0x01
    2b08:	c0 83       	st	Z, r28
    2b0a:	13 82       	std	Z+3, r1	; 0x03
    2b0c:	12 82       	std	Z+2, r1	; 0x02
    2b0e:	81 e0       	ldi	r24, 0x01	; 1
    2b10:	80 93 7e 02 	sts	0x027E, r24
    2b14:	cf 01       	movw	r24, r30
    2b16:	0e 94 28 1c 	call	0x3850	; 0x3850 <TMRSRVC_insert>
    2b1a:	10 92 7e 02 	sts	0x027E, r1
    2b1e:	80 e0       	ldi	r24, 0x00	; 0
    2b20:	df 91       	pop	r29
    2b22:	cf 91       	pop	r28
    2b24:	1f 91       	pop	r17
    2b26:	0f 91       	pop	r16
    2b28:	ff 90       	pop	r15
    2b2a:	ef 90       	pop	r14
    2b2c:	08 95       	ret

00002b2e <I2C_MSTR_get>:
    2b2e:	fc 01       	movw	r30, r24
    2b30:	80 91 de 04 	lds	r24, 0x04DE
    2b34:	81 30       	cpi	r24, 0x01	; 1
    2b36:	11 f0       	breq	.+4      	; 0x2b3c <I2C_MSTR_get+0xe>
    2b38:	85 e0       	ldi	r24, 0x05	; 5
    2b3a:	08 95       	ret
    2b3c:	80 91 df 04 	lds	r24, 0x04DF
    2b40:	81 30       	cpi	r24, 0x01	; 1
    2b42:	11 f0       	breq	.+4      	; 0x2b48 <I2C_MSTR_get+0x1a>
    2b44:	8a e0       	ldi	r24, 0x0A	; 10
    2b46:	08 95       	ret
    2b48:	61 30       	cpi	r22, 0x01	; 1
    2b4a:	11 f4       	brne	.+4      	; 0x2b50 <I2C_MSTR_get+0x22>
    2b4c:	84 ec       	ldi	r24, 0xC4	; 196
    2b4e:	01 c0       	rjmp	.+2      	; 0x2b52 <I2C_MSTR_get+0x24>
    2b50:	84 e8       	ldi	r24, 0x84	; 132
    2b52:	80 93 bc 00 	sts	0x00BC, r24
    2b56:	80 91 bc 00 	lds	r24, 0x00BC
    2b5a:	87 ff       	sbrs	r24, 7
    2b5c:	fc cf       	rjmp	.-8      	; 0x2b56 <I2C_MSTR_get+0x28>
    2b5e:	61 30       	cpi	r22, 0x01	; 1
    2b60:	31 f4       	brne	.+12     	; 0x2b6e <I2C_MSTR_get+0x40>
    2b62:	80 91 b9 00 	lds	r24, 0x00B9
    2b66:	88 7f       	andi	r24, 0xF8	; 248
    2b68:	80 35       	cpi	r24, 0x50	; 80
    2b6a:	59 f4       	brne	.+22     	; 0x2b82 <I2C_MSTR_get+0x54>
    2b6c:	05 c0       	rjmp	.+10     	; 0x2b78 <I2C_MSTR_get+0x4a>
    2b6e:	80 91 b9 00 	lds	r24, 0x00B9
    2b72:	88 7f       	andi	r24, 0xF8	; 248
    2b74:	88 35       	cpi	r24, 0x58	; 88
    2b76:	29 f4       	brne	.+10     	; 0x2b82 <I2C_MSTR_get+0x54>
    2b78:	80 91 bb 00 	lds	r24, 0x00BB
    2b7c:	80 83       	st	Z, r24
    2b7e:	80 e0       	ldi	r24, 0x00	; 0
    2b80:	08 95       	ret
    2b82:	82 e0       	ldi	r24, 0x02	; 2
    2b84:	08 95       	ret

00002b86 <I2C_MSTR_send>:
    2b86:	98 2f       	mov	r25, r24
    2b88:	80 91 de 04 	lds	r24, 0x04DE
    2b8c:	81 30       	cpi	r24, 0x01	; 1
    2b8e:	11 f0       	breq	.+4      	; 0x2b94 <I2C_MSTR_send+0xe>
    2b90:	85 e0       	ldi	r24, 0x05	; 5
    2b92:	08 95       	ret
    2b94:	80 91 df 04 	lds	r24, 0x04DF
    2b98:	81 30       	cpi	r24, 0x01	; 1
    2b9a:	11 f0       	breq	.+4      	; 0x2ba0 <I2C_MSTR_send+0x1a>
    2b9c:	8a e0       	ldi	r24, 0x0A	; 10
    2b9e:	08 95       	ret
    2ba0:	90 93 bb 00 	sts	0x00BB, r25
    2ba4:	84 e8       	ldi	r24, 0x84	; 132
    2ba6:	80 93 bc 00 	sts	0x00BC, r24
    2baa:	80 91 bc 00 	lds	r24, 0x00BC
    2bae:	87 ff       	sbrs	r24, 7
    2bb0:	fc cf       	rjmp	.-8      	; 0x2baa <I2C_MSTR_send+0x24>
    2bb2:	80 91 b9 00 	lds	r24, 0x00B9
    2bb6:	90 e0       	ldi	r25, 0x00	; 0
    2bb8:	88 7f       	andi	r24, 0xF8	; 248
    2bba:	90 70       	andi	r25, 0x00	; 0
    2bbc:	88 32       	cpi	r24, 0x28	; 40
    2bbe:	91 05       	cpc	r25, r1
    2bc0:	21 f0       	breq	.+8      	; 0x2bca <I2C_MSTR_send+0x44>
    2bc2:	c0 97       	sbiw	r24, 0x30	; 48
    2bc4:	21 f4       	brne	.+8      	; 0x2bce <I2C_MSTR_send+0x48>
    2bc6:	83 e0       	ldi	r24, 0x03	; 3
    2bc8:	08 95       	ret
    2bca:	80 e0       	ldi	r24, 0x00	; 0
    2bcc:	08 95       	ret
    2bce:	8c e0       	ldi	r24, 0x0C	; 12
    2bd0:	08 95       	ret

00002bd2 <I2C_MSTR_start>:
    2bd2:	98 2f       	mov	r25, r24
    2bd4:	20 91 de 04 	lds	r18, 0x04DE
    2bd8:	21 30       	cpi	r18, 0x01	; 1
    2bda:	11 f0       	breq	.+4      	; 0x2be0 <I2C_MSTR_start+0xe>
    2bdc:	85 e0       	ldi	r24, 0x05	; 5
    2bde:	08 95       	ret
    2be0:	80 91 e0 04 	lds	r24, 0x04E0
    2be4:	81 30       	cpi	r24, 0x01	; 1
    2be6:	11 f4       	brne	.+4      	; 0x2bec <I2C_MSTR_start+0x1a>
    2be8:	89 e0       	ldi	r24, 0x09	; 9
    2bea:	08 95       	ret
    2bec:	20 93 df 04 	sts	0x04DF, r18
    2bf0:	84 ea       	ldi	r24, 0xA4	; 164
    2bf2:	80 93 bc 00 	sts	0x00BC, r24
    2bf6:	80 91 bc 00 	lds	r24, 0x00BC
    2bfa:	87 ff       	sbrs	r24, 7
    2bfc:	fc cf       	rjmp	.-8      	; 0x2bf6 <I2C_MSTR_start+0x24>
    2bfe:	80 91 b9 00 	lds	r24, 0x00B9
    2c02:	88 7f       	andi	r24, 0xF8	; 248
    2c04:	88 30       	cpi	r24, 0x08	; 8
    2c06:	39 f0       	breq	.+14     	; 0x2c16 <I2C_MSTR_start+0x44>
    2c08:	80 91 b9 00 	lds	r24, 0x00B9
    2c0c:	88 7f       	andi	r24, 0xF8	; 248
    2c0e:	80 31       	cpi	r24, 0x10	; 16
    2c10:	11 f0       	breq	.+4      	; 0x2c16 <I2C_MSTR_start+0x44>
    2c12:	81 e0       	ldi	r24, 0x01	; 1
    2c14:	08 95       	ret
    2c16:	61 30       	cpi	r22, 0x01	; 1
    2c18:	19 f4       	brne	.+6      	; 0x2c20 <I2C_MSTR_start+0x4e>
    2c1a:	99 0f       	add	r25, r25
    2c1c:	91 60       	ori	r25, 0x01	; 1
    2c1e:	03 c0       	rjmp	.+6      	; 0x2c26 <I2C_MSTR_start+0x54>
    2c20:	66 23       	and	r22, r22
    2c22:	19 f4       	brne	.+6      	; 0x2c2a <I2C_MSTR_start+0x58>
    2c24:	99 0f       	add	r25, r25
    2c26:	90 93 bb 00 	sts	0x00BB, r25
    2c2a:	84 e8       	ldi	r24, 0x84	; 132
    2c2c:	80 93 bc 00 	sts	0x00BC, r24
    2c30:	80 91 bc 00 	lds	r24, 0x00BC
    2c34:	87 ff       	sbrs	r24, 7
    2c36:	fc cf       	rjmp	.-8      	; 0x2c30 <I2C_MSTR_start+0x5e>
    2c38:	61 30       	cpi	r22, 0x01	; 1
    2c3a:	31 f4       	brne	.+12     	; 0x2c48 <I2C_MSTR_start+0x76>
    2c3c:	80 91 b9 00 	lds	r24, 0x00B9
    2c40:	88 7f       	andi	r24, 0xF8	; 248
    2c42:	80 34       	cpi	r24, 0x40	; 64
    2c44:	41 f4       	brne	.+16     	; 0x2c56 <I2C_MSTR_start+0x84>
    2c46:	09 c0       	rjmp	.+18     	; 0x2c5a <I2C_MSTR_start+0x88>
    2c48:	66 23       	and	r22, r22
    2c4a:	39 f4       	brne	.+14     	; 0x2c5a <I2C_MSTR_start+0x88>
    2c4c:	80 91 b9 00 	lds	r24, 0x00B9
    2c50:	88 7f       	andi	r24, 0xF8	; 248
    2c52:	88 31       	cpi	r24, 0x18	; 24
    2c54:	11 f0       	breq	.+4      	; 0x2c5a <I2C_MSTR_start+0x88>
    2c56:	82 e0       	ldi	r24, 0x02	; 2
    2c58:	08 95       	ret
    2c5a:	80 e0       	ldi	r24, 0x00	; 0
    2c5c:	08 95       	ret

00002c5e <I2C_MSTR_stop>:
    2c5e:	80 91 df 04 	lds	r24, 0x04DF
    2c62:	81 30       	cpi	r24, 0x01	; 1
    2c64:	11 f0       	breq	.+4      	; 0x2c6a <I2C_MSTR_stop+0xc>
    2c66:	8a e0       	ldi	r24, 0x0A	; 10
    2c68:	08 95       	ret
    2c6a:	80 91 e1 04 	lds	r24, 0x04E1
    2c6e:	81 30       	cpi	r24, 0x01	; 1
    2c70:	29 f4       	brne	.+10     	; 0x2c7c <I2C_MSTR_stop+0x1e>
    2c72:	85 e9       	ldi	r24, 0x95	; 149
    2c74:	80 93 bc 00 	sts	0x00BC, r24
    2c78:	80 e0       	ldi	r24, 0x00	; 0
    2c7a:	08 95       	ret
    2c7c:	84 e9       	ldi	r24, 0x94	; 148
    2c7e:	80 93 bc 00 	sts	0x00BC, r24
    2c82:	80 e0       	ldi	r24, 0x00	; 0
    2c84:	08 95       	ret

00002c86 <I2C_open>:
    2c86:	82 e1       	ldi	r24, 0x12	; 18
    2c88:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    2c8c:	88 23       	and	r24, r24
    2c8e:	b1 f4       	brne	.+44     	; 0x2cbc <I2C_open+0x36>
    2c90:	10 92 de 04 	sts	0x04DE, r1
    2c94:	10 92 df 04 	sts	0x04DF, r1
    2c98:	10 92 e0 04 	sts	0x04E0, r1
    2c9c:	10 92 e1 04 	sts	0x04E1, r1
    2ca0:	10 92 e2 04 	sts	0x04E2, r1
    2ca4:	0e 94 c4 1c 	call	0x3988	; 0x3988 <__I2C_init>
    2ca8:	87 e1       	ldi	r24, 0x17	; 23
    2caa:	60 e0       	ldi	r22, 0x00	; 0
    2cac:	0e 94 61 16 	call	0x2cc2	; 0x2cc2 <I2C_set_BRG>
    2cb0:	0e 94 ba 1c 	call	0x3974	; 0x3974 <I2C_enable>
    2cb4:	82 e1       	ldi	r24, 0x12	; 18
    2cb6:	61 e0       	ldi	r22, 0x01	; 1
    2cb8:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    2cbc:	82 e1       	ldi	r24, 0x12	; 18
    2cbe:	90 e0       	ldi	r25, 0x00	; 0
    2cc0:	08 95       	ret

00002cc2 <I2C_set_BRG>:
    2cc2:	63 70       	andi	r22, 0x03	; 3
    2cc4:	60 93 b9 00 	sts	0x00B9, r22
    2cc8:	80 93 b8 00 	sts	0x00B8, r24
    2ccc:	81 e0       	ldi	r24, 0x01	; 1
    2cce:	80 93 de 04 	sts	0x04DE, r24
    2cd2:	08 95       	ret

00002cd4 <__ADC_init>:
    2cd4:	8f e1       	ldi	r24, 0x1F	; 31
    2cd6:	80 93 7c 00 	sts	0x007C, r24
    2cda:	ea e7       	ldi	r30, 0x7A	; 122
    2cdc:	f0 e0       	ldi	r31, 0x00	; 0
    2cde:	87 e0       	ldi	r24, 0x07	; 7
    2ce0:	80 83       	st	Z, r24
    2ce2:	80 81       	ld	r24, Z
    2ce4:	80 68       	ori	r24, 0x80	; 128
    2ce6:	80 83       	st	Z, r24
    2ce8:	08 95       	ret

00002cea <CBOT_init>:
    2cea:	0e 94 d4 1b 	call	0x37a8	; 0x37a8 <SYS_init>
    2cee:	0e 94 a7 19 	call	0x334e	; 0x334e <ATMEGA_open>
    2cf2:	0e 94 d7 18 	call	0x31ae	; 0x31ae <ISR_open>
    2cf6:	0e 94 91 1c 	call	0x3922	; 0x3922 <TMRSRVC_open>
    2cfa:	0e 94 0c 1a 	call	0x3418	; 0x3418 <SPI_open>
    2cfe:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <ATTINY_open>
    2d02:	78 94       	sei
    2d04:	08 95       	ret

00002d06 <CBOT_ISR_init>:
    2d06:	00 00       	nop
    2d08:	08 95       	ret

00002d0a <__vector_16>:
    2d0a:	1f 92       	push	r1
    2d0c:	0f 92       	push	r0
    2d0e:	0f b6       	in	r0, 0x3f	; 63
    2d10:	0f 92       	push	r0
    2d12:	11 24       	eor	r1, r1
    2d14:	2f 93       	push	r18
    2d16:	3f 93       	push	r19
    2d18:	4f 93       	push	r20
    2d1a:	5f 93       	push	r21
    2d1c:	6f 93       	push	r22
    2d1e:	7f 93       	push	r23
    2d20:	8f 93       	push	r24
    2d22:	9f 93       	push	r25
    2d24:	af 93       	push	r26
    2d26:	bf 93       	push	r27
    2d28:	ef 93       	push	r30
    2d2a:	ff 93       	push	r31
    2d2c:	e0 91 3e 02 	lds	r30, 0x023E
    2d30:	f0 91 3f 02 	lds	r31, 0x023F
    2d34:	30 97       	sbiw	r30, 0x00	; 0
    2d36:	09 f0       	breq	.+2      	; 0x2d3a <__vector_16+0x30>
    2d38:	09 95       	icall
    2d3a:	ff 91       	pop	r31
    2d3c:	ef 91       	pop	r30
    2d3e:	bf 91       	pop	r27
    2d40:	af 91       	pop	r26
    2d42:	9f 91       	pop	r25
    2d44:	8f 91       	pop	r24
    2d46:	7f 91       	pop	r23
    2d48:	6f 91       	pop	r22
    2d4a:	5f 91       	pop	r21
    2d4c:	4f 91       	pop	r20
    2d4e:	3f 91       	pop	r19
    2d50:	2f 91       	pop	r18
    2d52:	0f 90       	pop	r0
    2d54:	0f be       	out	0x3f, r0	; 63
    2d56:	0f 90       	pop	r0
    2d58:	1f 90       	pop	r1
    2d5a:	18 95       	reti

00002d5c <__vector_17>:
    2d5c:	1f 92       	push	r1
    2d5e:	0f 92       	push	r0
    2d60:	0f b6       	in	r0, 0x3f	; 63
    2d62:	0f 92       	push	r0
    2d64:	11 24       	eor	r1, r1
    2d66:	2f 93       	push	r18
    2d68:	3f 93       	push	r19
    2d6a:	4f 93       	push	r20
    2d6c:	5f 93       	push	r21
    2d6e:	6f 93       	push	r22
    2d70:	7f 93       	push	r23
    2d72:	8f 93       	push	r24
    2d74:	9f 93       	push	r25
    2d76:	af 93       	push	r26
    2d78:	bf 93       	push	r27
    2d7a:	ef 93       	push	r30
    2d7c:	ff 93       	push	r31
    2d7e:	e0 91 40 02 	lds	r30, 0x0240
    2d82:	f0 91 41 02 	lds	r31, 0x0241
    2d86:	30 97       	sbiw	r30, 0x00	; 0
    2d88:	09 f0       	breq	.+2      	; 0x2d8c <__vector_17+0x30>
    2d8a:	09 95       	icall
    2d8c:	ff 91       	pop	r31
    2d8e:	ef 91       	pop	r30
    2d90:	bf 91       	pop	r27
    2d92:	af 91       	pop	r26
    2d94:	9f 91       	pop	r25
    2d96:	8f 91       	pop	r24
    2d98:	7f 91       	pop	r23
    2d9a:	6f 91       	pop	r22
    2d9c:	5f 91       	pop	r21
    2d9e:	4f 91       	pop	r20
    2da0:	3f 91       	pop	r19
    2da2:	2f 91       	pop	r18
    2da4:	0f 90       	pop	r0
    2da6:	0f be       	out	0x3f, r0	; 63
    2da8:	0f 90       	pop	r0
    2daa:	1f 90       	pop	r1
    2dac:	18 95       	reti

00002dae <__vector_18>:
    2dae:	1f 92       	push	r1
    2db0:	0f 92       	push	r0
    2db2:	0f b6       	in	r0, 0x3f	; 63
    2db4:	0f 92       	push	r0
    2db6:	11 24       	eor	r1, r1
    2db8:	2f 93       	push	r18
    2dba:	3f 93       	push	r19
    2dbc:	4f 93       	push	r20
    2dbe:	5f 93       	push	r21
    2dc0:	6f 93       	push	r22
    2dc2:	7f 93       	push	r23
    2dc4:	8f 93       	push	r24
    2dc6:	9f 93       	push	r25
    2dc8:	af 93       	push	r26
    2dca:	bf 93       	push	r27
    2dcc:	ef 93       	push	r30
    2dce:	ff 93       	push	r31
    2dd0:	e0 91 42 02 	lds	r30, 0x0242
    2dd4:	f0 91 43 02 	lds	r31, 0x0243
    2dd8:	30 97       	sbiw	r30, 0x00	; 0
    2dda:	09 f0       	breq	.+2      	; 0x2dde <__vector_18+0x30>
    2ddc:	09 95       	icall
    2dde:	ff 91       	pop	r31
    2de0:	ef 91       	pop	r30
    2de2:	bf 91       	pop	r27
    2de4:	af 91       	pop	r26
    2de6:	9f 91       	pop	r25
    2de8:	8f 91       	pop	r24
    2dea:	7f 91       	pop	r23
    2dec:	6f 91       	pop	r22
    2dee:	5f 91       	pop	r21
    2df0:	4f 91       	pop	r20
    2df2:	3f 91       	pop	r19
    2df4:	2f 91       	pop	r18
    2df6:	0f 90       	pop	r0
    2df8:	0f be       	out	0x3f, r0	; 63
    2dfa:	0f 90       	pop	r0
    2dfc:	1f 90       	pop	r1
    2dfe:	18 95       	reti

00002e00 <__vector_9>:
    2e00:	1f 92       	push	r1
    2e02:	0f 92       	push	r0
    2e04:	0f b6       	in	r0, 0x3f	; 63
    2e06:	0f 92       	push	r0
    2e08:	11 24       	eor	r1, r1
    2e0a:	2f 93       	push	r18
    2e0c:	3f 93       	push	r19
    2e0e:	4f 93       	push	r20
    2e10:	5f 93       	push	r21
    2e12:	6f 93       	push	r22
    2e14:	7f 93       	push	r23
    2e16:	8f 93       	push	r24
    2e18:	9f 93       	push	r25
    2e1a:	af 93       	push	r26
    2e1c:	bf 93       	push	r27
    2e1e:	ef 93       	push	r30
    2e20:	ff 93       	push	r31
    2e22:	e0 91 30 02 	lds	r30, 0x0230
    2e26:	f0 91 31 02 	lds	r31, 0x0231
    2e2a:	30 97       	sbiw	r30, 0x00	; 0
    2e2c:	09 f0       	breq	.+2      	; 0x2e30 <__vector_9+0x30>
    2e2e:	09 95       	icall
    2e30:	ff 91       	pop	r31
    2e32:	ef 91       	pop	r30
    2e34:	bf 91       	pop	r27
    2e36:	af 91       	pop	r26
    2e38:	9f 91       	pop	r25
    2e3a:	8f 91       	pop	r24
    2e3c:	7f 91       	pop	r23
    2e3e:	6f 91       	pop	r22
    2e40:	5f 91       	pop	r21
    2e42:	4f 91       	pop	r20
    2e44:	3f 91       	pop	r19
    2e46:	2f 91       	pop	r18
    2e48:	0f 90       	pop	r0
    2e4a:	0f be       	out	0x3f, r0	; 63
    2e4c:	0f 90       	pop	r0
    2e4e:	1f 90       	pop	r1
    2e50:	18 95       	reti

00002e52 <__vector_10>:
    2e52:	1f 92       	push	r1
    2e54:	0f 92       	push	r0
    2e56:	0f b6       	in	r0, 0x3f	; 63
    2e58:	0f 92       	push	r0
    2e5a:	11 24       	eor	r1, r1
    2e5c:	2f 93       	push	r18
    2e5e:	3f 93       	push	r19
    2e60:	4f 93       	push	r20
    2e62:	5f 93       	push	r21
    2e64:	6f 93       	push	r22
    2e66:	7f 93       	push	r23
    2e68:	8f 93       	push	r24
    2e6a:	9f 93       	push	r25
    2e6c:	af 93       	push	r26
    2e6e:	bf 93       	push	r27
    2e70:	ef 93       	push	r30
    2e72:	ff 93       	push	r31
    2e74:	e0 91 32 02 	lds	r30, 0x0232
    2e78:	f0 91 33 02 	lds	r31, 0x0233
    2e7c:	30 97       	sbiw	r30, 0x00	; 0
    2e7e:	09 f0       	breq	.+2      	; 0x2e82 <__vector_10+0x30>
    2e80:	09 95       	icall
    2e82:	ff 91       	pop	r31
    2e84:	ef 91       	pop	r30
    2e86:	bf 91       	pop	r27
    2e88:	af 91       	pop	r26
    2e8a:	9f 91       	pop	r25
    2e8c:	8f 91       	pop	r24
    2e8e:	7f 91       	pop	r23
    2e90:	6f 91       	pop	r22
    2e92:	5f 91       	pop	r21
    2e94:	4f 91       	pop	r20
    2e96:	3f 91       	pop	r19
    2e98:	2f 91       	pop	r18
    2e9a:	0f 90       	pop	r0
    2e9c:	0f be       	out	0x3f, r0	; 63
    2e9e:	0f 90       	pop	r0
    2ea0:	1f 90       	pop	r1
    2ea2:	18 95       	reti

00002ea4 <__vector_11>:
    2ea4:	1f 92       	push	r1
    2ea6:	0f 92       	push	r0
    2ea8:	0f b6       	in	r0, 0x3f	; 63
    2eaa:	0f 92       	push	r0
    2eac:	11 24       	eor	r1, r1
    2eae:	2f 93       	push	r18
    2eb0:	3f 93       	push	r19
    2eb2:	4f 93       	push	r20
    2eb4:	5f 93       	push	r21
    2eb6:	6f 93       	push	r22
    2eb8:	7f 93       	push	r23
    2eba:	8f 93       	push	r24
    2ebc:	9f 93       	push	r25
    2ebe:	af 93       	push	r26
    2ec0:	bf 93       	push	r27
    2ec2:	ef 93       	push	r30
    2ec4:	ff 93       	push	r31
    2ec6:	e0 91 34 02 	lds	r30, 0x0234
    2eca:	f0 91 35 02 	lds	r31, 0x0235
    2ece:	30 97       	sbiw	r30, 0x00	; 0
    2ed0:	09 f0       	breq	.+2      	; 0x2ed4 <__vector_11+0x30>
    2ed2:	09 95       	icall
    2ed4:	ff 91       	pop	r31
    2ed6:	ef 91       	pop	r30
    2ed8:	bf 91       	pop	r27
    2eda:	af 91       	pop	r26
    2edc:	9f 91       	pop	r25
    2ede:	8f 91       	pop	r24
    2ee0:	7f 91       	pop	r23
    2ee2:	6f 91       	pop	r22
    2ee4:	5f 91       	pop	r21
    2ee6:	4f 91       	pop	r20
    2ee8:	3f 91       	pop	r19
    2eea:	2f 91       	pop	r18
    2eec:	0f 90       	pop	r0
    2eee:	0f be       	out	0x3f, r0	; 63
    2ef0:	0f 90       	pop	r0
    2ef2:	1f 90       	pop	r1
    2ef4:	18 95       	reti

00002ef6 <__vector_13>:
    2ef6:	1f 92       	push	r1
    2ef8:	0f 92       	push	r0
    2efa:	0f b6       	in	r0, 0x3f	; 63
    2efc:	0f 92       	push	r0
    2efe:	11 24       	eor	r1, r1
    2f00:	2f 93       	push	r18
    2f02:	3f 93       	push	r19
    2f04:	4f 93       	push	r20
    2f06:	5f 93       	push	r21
    2f08:	6f 93       	push	r22
    2f0a:	7f 93       	push	r23
    2f0c:	8f 93       	push	r24
    2f0e:	9f 93       	push	r25
    2f10:	af 93       	push	r26
    2f12:	bf 93       	push	r27
    2f14:	ef 93       	push	r30
    2f16:	ff 93       	push	r31
    2f18:	e0 91 38 02 	lds	r30, 0x0238
    2f1c:	f0 91 39 02 	lds	r31, 0x0239
    2f20:	30 97       	sbiw	r30, 0x00	; 0
    2f22:	09 f0       	breq	.+2      	; 0x2f26 <__vector_13+0x30>
    2f24:	09 95       	icall
    2f26:	ff 91       	pop	r31
    2f28:	ef 91       	pop	r30
    2f2a:	bf 91       	pop	r27
    2f2c:	af 91       	pop	r26
    2f2e:	9f 91       	pop	r25
    2f30:	8f 91       	pop	r24
    2f32:	7f 91       	pop	r23
    2f34:	6f 91       	pop	r22
    2f36:	5f 91       	pop	r21
    2f38:	4f 91       	pop	r20
    2f3a:	3f 91       	pop	r19
    2f3c:	2f 91       	pop	r18
    2f3e:	0f 90       	pop	r0
    2f40:	0f be       	out	0x3f, r0	; 63
    2f42:	0f 90       	pop	r0
    2f44:	1f 90       	pop	r1
    2f46:	18 95       	reti

00002f48 <__vector_14>:
    2f48:	1f 92       	push	r1
    2f4a:	0f 92       	push	r0
    2f4c:	0f b6       	in	r0, 0x3f	; 63
    2f4e:	0f 92       	push	r0
    2f50:	11 24       	eor	r1, r1
    2f52:	2f 93       	push	r18
    2f54:	3f 93       	push	r19
    2f56:	4f 93       	push	r20
    2f58:	5f 93       	push	r21
    2f5a:	6f 93       	push	r22
    2f5c:	7f 93       	push	r23
    2f5e:	8f 93       	push	r24
    2f60:	9f 93       	push	r25
    2f62:	af 93       	push	r26
    2f64:	bf 93       	push	r27
    2f66:	ef 93       	push	r30
    2f68:	ff 93       	push	r31
    2f6a:	e0 91 3a 02 	lds	r30, 0x023A
    2f6e:	f0 91 3b 02 	lds	r31, 0x023B
    2f72:	30 97       	sbiw	r30, 0x00	; 0
    2f74:	09 f0       	breq	.+2      	; 0x2f78 <__vector_14+0x30>
    2f76:	09 95       	icall
    2f78:	ff 91       	pop	r31
    2f7a:	ef 91       	pop	r30
    2f7c:	bf 91       	pop	r27
    2f7e:	af 91       	pop	r26
    2f80:	9f 91       	pop	r25
    2f82:	8f 91       	pop	r24
    2f84:	7f 91       	pop	r23
    2f86:	6f 91       	pop	r22
    2f88:	5f 91       	pop	r21
    2f8a:	4f 91       	pop	r20
    2f8c:	3f 91       	pop	r19
    2f8e:	2f 91       	pop	r18
    2f90:	0f 90       	pop	r0
    2f92:	0f be       	out	0x3f, r0	; 63
    2f94:	0f 90       	pop	r0
    2f96:	1f 90       	pop	r1
    2f98:	18 95       	reti

00002f9a <__vector_12>:
    2f9a:	1f 92       	push	r1
    2f9c:	0f 92       	push	r0
    2f9e:	0f b6       	in	r0, 0x3f	; 63
    2fa0:	0f 92       	push	r0
    2fa2:	11 24       	eor	r1, r1
    2fa4:	2f 93       	push	r18
    2fa6:	3f 93       	push	r19
    2fa8:	4f 93       	push	r20
    2faa:	5f 93       	push	r21
    2fac:	6f 93       	push	r22
    2fae:	7f 93       	push	r23
    2fb0:	8f 93       	push	r24
    2fb2:	9f 93       	push	r25
    2fb4:	af 93       	push	r26
    2fb6:	bf 93       	push	r27
    2fb8:	ef 93       	push	r30
    2fba:	ff 93       	push	r31
    2fbc:	e0 91 36 02 	lds	r30, 0x0236
    2fc0:	f0 91 37 02 	lds	r31, 0x0237
    2fc4:	30 97       	sbiw	r30, 0x00	; 0
    2fc6:	09 f0       	breq	.+2      	; 0x2fca <__vector_12+0x30>
    2fc8:	09 95       	icall
    2fca:	ff 91       	pop	r31
    2fcc:	ef 91       	pop	r30
    2fce:	bf 91       	pop	r27
    2fd0:	af 91       	pop	r26
    2fd2:	9f 91       	pop	r25
    2fd4:	8f 91       	pop	r24
    2fd6:	7f 91       	pop	r23
    2fd8:	6f 91       	pop	r22
    2fda:	5f 91       	pop	r21
    2fdc:	4f 91       	pop	r20
    2fde:	3f 91       	pop	r19
    2fe0:	2f 91       	pop	r18
    2fe2:	0f 90       	pop	r0
    2fe4:	0f be       	out	0x3f, r0	; 63
    2fe6:	0f 90       	pop	r0
    2fe8:	1f 90       	pop	r1
    2fea:	18 95       	reti

00002fec <__vector_15>:
    2fec:	1f 92       	push	r1
    2fee:	0f 92       	push	r0
    2ff0:	0f b6       	in	r0, 0x3f	; 63
    2ff2:	0f 92       	push	r0
    2ff4:	11 24       	eor	r1, r1
    2ff6:	2f 93       	push	r18
    2ff8:	3f 93       	push	r19
    2ffa:	4f 93       	push	r20
    2ffc:	5f 93       	push	r21
    2ffe:	6f 93       	push	r22
    3000:	7f 93       	push	r23
    3002:	8f 93       	push	r24
    3004:	9f 93       	push	r25
    3006:	af 93       	push	r26
    3008:	bf 93       	push	r27
    300a:	ef 93       	push	r30
    300c:	ff 93       	push	r31
    300e:	e0 91 3c 02 	lds	r30, 0x023C
    3012:	f0 91 3d 02 	lds	r31, 0x023D
    3016:	30 97       	sbiw	r30, 0x00	; 0
    3018:	09 f0       	breq	.+2      	; 0x301c <__vector_15+0x30>
    301a:	09 95       	icall
    301c:	ff 91       	pop	r31
    301e:	ef 91       	pop	r30
    3020:	bf 91       	pop	r27
    3022:	af 91       	pop	r26
    3024:	9f 91       	pop	r25
    3026:	8f 91       	pop	r24
    3028:	7f 91       	pop	r23
    302a:	6f 91       	pop	r22
    302c:	5f 91       	pop	r21
    302e:	4f 91       	pop	r20
    3030:	3f 91       	pop	r19
    3032:	2f 91       	pop	r18
    3034:	0f 90       	pop	r0
    3036:	0f be       	out	0x3f, r0	; 63
    3038:	0f 90       	pop	r0
    303a:	1f 90       	pop	r1
    303c:	18 95       	reti

0000303e <__vector_4>:
    303e:	1f 92       	push	r1
    3040:	0f 92       	push	r0
    3042:	0f b6       	in	r0, 0x3f	; 63
    3044:	0f 92       	push	r0
    3046:	11 24       	eor	r1, r1
    3048:	2f 93       	push	r18
    304a:	3f 93       	push	r19
    304c:	4f 93       	push	r20
    304e:	5f 93       	push	r21
    3050:	6f 93       	push	r22
    3052:	7f 93       	push	r23
    3054:	8f 93       	push	r24
    3056:	9f 93       	push	r25
    3058:	af 93       	push	r26
    305a:	bf 93       	push	r27
    305c:	ef 93       	push	r30
    305e:	ff 93       	push	r31
    3060:	e0 91 26 02 	lds	r30, 0x0226
    3064:	f0 91 27 02 	lds	r31, 0x0227
    3068:	30 97       	sbiw	r30, 0x00	; 0
    306a:	09 f0       	breq	.+2      	; 0x306e <__vector_4+0x30>
    306c:	09 95       	icall
    306e:	ff 91       	pop	r31
    3070:	ef 91       	pop	r30
    3072:	bf 91       	pop	r27
    3074:	af 91       	pop	r26
    3076:	9f 91       	pop	r25
    3078:	8f 91       	pop	r24
    307a:	7f 91       	pop	r23
    307c:	6f 91       	pop	r22
    307e:	5f 91       	pop	r21
    3080:	4f 91       	pop	r20
    3082:	3f 91       	pop	r19
    3084:	2f 91       	pop	r18
    3086:	0f 90       	pop	r0
    3088:	0f be       	out	0x3f, r0	; 63
    308a:	0f 90       	pop	r0
    308c:	1f 90       	pop	r1
    308e:	18 95       	reti

00003090 <__vector_5>:
    3090:	1f 92       	push	r1
    3092:	0f 92       	push	r0
    3094:	0f b6       	in	r0, 0x3f	; 63
    3096:	0f 92       	push	r0
    3098:	11 24       	eor	r1, r1
    309a:	2f 93       	push	r18
    309c:	3f 93       	push	r19
    309e:	4f 93       	push	r20
    30a0:	5f 93       	push	r21
    30a2:	6f 93       	push	r22
    30a4:	7f 93       	push	r23
    30a6:	8f 93       	push	r24
    30a8:	9f 93       	push	r25
    30aa:	af 93       	push	r26
    30ac:	bf 93       	push	r27
    30ae:	ef 93       	push	r30
    30b0:	ff 93       	push	r31
    30b2:	e0 91 28 02 	lds	r30, 0x0228
    30b6:	f0 91 29 02 	lds	r31, 0x0229
    30ba:	30 97       	sbiw	r30, 0x00	; 0
    30bc:	09 f0       	breq	.+2      	; 0x30c0 <__vector_5+0x30>
    30be:	09 95       	icall
    30c0:	ff 91       	pop	r31
    30c2:	ef 91       	pop	r30
    30c4:	bf 91       	pop	r27
    30c6:	af 91       	pop	r26
    30c8:	9f 91       	pop	r25
    30ca:	8f 91       	pop	r24
    30cc:	7f 91       	pop	r23
    30ce:	6f 91       	pop	r22
    30d0:	5f 91       	pop	r21
    30d2:	4f 91       	pop	r20
    30d4:	3f 91       	pop	r19
    30d6:	2f 91       	pop	r18
    30d8:	0f 90       	pop	r0
    30da:	0f be       	out	0x3f, r0	; 63
    30dc:	0f 90       	pop	r0
    30de:	1f 90       	pop	r1
    30e0:	18 95       	reti

000030e2 <__vector_6>:
    30e2:	1f 92       	push	r1
    30e4:	0f 92       	push	r0
    30e6:	0f b6       	in	r0, 0x3f	; 63
    30e8:	0f 92       	push	r0
    30ea:	11 24       	eor	r1, r1
    30ec:	2f 93       	push	r18
    30ee:	3f 93       	push	r19
    30f0:	4f 93       	push	r20
    30f2:	5f 93       	push	r21
    30f4:	6f 93       	push	r22
    30f6:	7f 93       	push	r23
    30f8:	8f 93       	push	r24
    30fa:	9f 93       	push	r25
    30fc:	af 93       	push	r26
    30fe:	bf 93       	push	r27
    3100:	ef 93       	push	r30
    3102:	ff 93       	push	r31
    3104:	e0 91 2a 02 	lds	r30, 0x022A
    3108:	f0 91 2b 02 	lds	r31, 0x022B
    310c:	30 97       	sbiw	r30, 0x00	; 0
    310e:	09 f0       	breq	.+2      	; 0x3112 <__vector_6+0x30>
    3110:	09 95       	icall
    3112:	ff 91       	pop	r31
    3114:	ef 91       	pop	r30
    3116:	bf 91       	pop	r27
    3118:	af 91       	pop	r26
    311a:	9f 91       	pop	r25
    311c:	8f 91       	pop	r24
    311e:	7f 91       	pop	r23
    3120:	6f 91       	pop	r22
    3122:	5f 91       	pop	r21
    3124:	4f 91       	pop	r20
    3126:	3f 91       	pop	r19
    3128:	2f 91       	pop	r18
    312a:	0f 90       	pop	r0
    312c:	0f be       	out	0x3f, r0	; 63
    312e:	0f 90       	pop	r0
    3130:	1f 90       	pop	r1
    3132:	18 95       	reti

00003134 <__vector_7>:
    3134:	1f 92       	push	r1
    3136:	0f 92       	push	r0
    3138:	0f b6       	in	r0, 0x3f	; 63
    313a:	0f 92       	push	r0
    313c:	11 24       	eor	r1, r1
    313e:	2f 93       	push	r18
    3140:	3f 93       	push	r19
    3142:	4f 93       	push	r20
    3144:	5f 93       	push	r21
    3146:	6f 93       	push	r22
    3148:	7f 93       	push	r23
    314a:	8f 93       	push	r24
    314c:	9f 93       	push	r25
    314e:	af 93       	push	r26
    3150:	bf 93       	push	r27
    3152:	ef 93       	push	r30
    3154:	ff 93       	push	r31
    3156:	e0 91 2c 02 	lds	r30, 0x022C
    315a:	f0 91 2d 02 	lds	r31, 0x022D
    315e:	30 97       	sbiw	r30, 0x00	; 0
    3160:	09 f0       	breq	.+2      	; 0x3164 <__vector_7+0x30>
    3162:	09 95       	icall
    3164:	ff 91       	pop	r31
    3166:	ef 91       	pop	r30
    3168:	bf 91       	pop	r27
    316a:	af 91       	pop	r26
    316c:	9f 91       	pop	r25
    316e:	8f 91       	pop	r24
    3170:	7f 91       	pop	r23
    3172:	6f 91       	pop	r22
    3174:	5f 91       	pop	r21
    3176:	4f 91       	pop	r20
    3178:	3f 91       	pop	r19
    317a:	2f 91       	pop	r18
    317c:	0f 90       	pop	r0
    317e:	0f be       	out	0x3f, r0	; 63
    3180:	0f 90       	pop	r0
    3182:	1f 90       	pop	r1
    3184:	18 95       	reti

00003186 <ISR_attach>:
    3186:	e8 2f       	mov	r30, r24
    3188:	80 32       	cpi	r24, 0x20	; 32
    318a:	68 f4       	brcc	.+26     	; 0x31a6 <ISR_attach+0x20>
    318c:	80 51       	subi	r24, 0x10	; 16
    318e:	83 30       	cpi	r24, 0x03	; 3
    3190:	50 f0       	brcs	.+20     	; 0x31a6 <ISR_attach+0x20>
    3192:	f0 e0       	ldi	r31, 0x00	; 0
    3194:	ee 0f       	add	r30, r30
    3196:	ff 1f       	adc	r31, r31
    3198:	e2 5e       	subi	r30, 0xE2	; 226
    319a:	fd 4f       	sbci	r31, 0xFD	; 253
    319c:	20 81       	ld	r18, Z
    319e:	31 81       	ldd	r19, Z+1	; 0x01
    31a0:	71 83       	std	Z+1, r23	; 0x01
    31a2:	60 83       	st	Z, r22
    31a4:	02 c0       	rjmp	.+4      	; 0x31aa <ISR_attach+0x24>
    31a6:	20 e0       	ldi	r18, 0x00	; 0
    31a8:	30 e0       	ldi	r19, 0x00	; 0
    31aa:	c9 01       	movw	r24, r18
    31ac:	08 95       	ret

000031ae <ISR_open>:
    31ae:	80 e1       	ldi	r24, 0x10	; 16
    31b0:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    31b4:	88 23       	and	r24, r24
    31b6:	61 f4       	brne	.+24     	; 0x31d0 <ISR_open+0x22>
    31b8:	ee e1       	ldi	r30, 0x1E	; 30
    31ba:	f2 e0       	ldi	r31, 0x02	; 2
    31bc:	11 92       	st	Z+, r1
    31be:	11 92       	st	Z+, r1
    31c0:	82 e0       	ldi	r24, 0x02	; 2
    31c2:	ee 35       	cpi	r30, 0x5E	; 94
    31c4:	f8 07       	cpc	r31, r24
    31c6:	d1 f7       	brne	.-12     	; 0x31bc <ISR_open+0xe>
    31c8:	80 e1       	ldi	r24, 0x10	; 16
    31ca:	61 e0       	ldi	r22, 0x01	; 1
    31cc:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    31d0:	80 e1       	ldi	r24, 0x10	; 16
    31d2:	91 e0       	ldi	r25, 0x01	; 1
    31d4:	08 95       	ret

000031d6 <__LCD_init>:
    31d6:	23 9a       	sbi	0x04, 3	; 4
    31d8:	08 95       	ret

000031da <__LCD_putchar>:
    31da:	ff 92       	push	r15
    31dc:	0f 93       	push	r16
    31de:	1f 93       	push	r17
    31e0:	cf 93       	push	r28
    31e2:	df 93       	push	r29
    31e4:	f8 2e       	mov	r15, r24
    31e6:	8a e0       	ldi	r24, 0x0A	; 10
    31e8:	f8 16       	cp	r15, r24
    31ea:	b1 f0       	breq	.+44     	; 0x3218 <__LCD_putchar+0x3e>
    31ec:	8f 15       	cp	r24, r15
    31ee:	48 f0       	brcs	.+18     	; 0x3202 <__LCD_putchar+0x28>
    31f0:	e8 e0       	ldi	r30, 0x08	; 8
    31f2:	fe 16       	cp	r15, r30
    31f4:	b9 f1       	breq	.+110    	; 0x3264 <__LCD_putchar+0x8a>
    31f6:	ef 15       	cp	r30, r15
    31f8:	38 f1       	brcs	.+78     	; 0x3248 <__LCD_putchar+0x6e>
    31fa:	f7 e0       	ldi	r31, 0x07	; 7
    31fc:	ff 16       	cp	r15, r31
    31fe:	51 f4       	brne	.+20     	; 0x3214 <__LCD_putchar+0x3a>
    3200:	3b c0       	rjmp	.+118    	; 0x3278 <__LCD_putchar+0x9e>
    3202:	8d e0       	ldi	r24, 0x0D	; 13
    3204:	f8 16       	cp	r15, r24
    3206:	59 f0       	breq	.+22     	; 0x321e <__LCD_putchar+0x44>
    3208:	eb e1       	ldi	r30, 0x1B	; 27
    320a:	fe 16       	cp	r15, r30
    320c:	89 f0       	breq	.+34     	; 0x3230 <__LCD_putchar+0x56>
    320e:	fc e0       	ldi	r31, 0x0C	; 12
    3210:	ff 16       	cp	r15, r31
    3212:	41 f0       	breq	.+16     	; 0x3224 <__LCD_putchar+0x4a>
    3214:	01 e0       	ldi	r16, 0x01	; 1
    3216:	41 c0       	rjmp	.+130    	; 0x329a <__LCD_putchar+0xc0>
    3218:	10 92 b7 04 	sts	0x04B7, r1
    321c:	03 c0       	rjmp	.+6      	; 0x3224 <__LCD_putchar+0x4a>
    321e:	10 92 b7 04 	sts	0x04B7, r1
    3222:	3a c0       	rjmp	.+116    	; 0x3298 <__LCD_putchar+0xbe>
    3224:	80 91 b8 04 	lds	r24, 0x04B8
    3228:	81 50       	subi	r24, 0x01	; 1
    322a:	80 93 b8 04 	sts	0x04B8, r24
    322e:	34 c0       	rjmp	.+104    	; 0x3298 <__LCD_putchar+0xbe>
    3230:	0e 94 ce 0e 	call	0x1d9c	; 0x1d9c <LCD_clear>
    3234:	14 c0       	rjmp	.+40     	; 0x325e <__LCD_putchar+0x84>
    3236:	80 e0       	ldi	r24, 0x00	; 0
    3238:	61 e0       	ldi	r22, 0x01	; 1
    323a:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    323e:	80 91 b7 04 	lds	r24, 0x04B7
    3242:	8f 5f       	subi	r24, 0xFF	; 255
    3244:	80 93 b7 04 	sts	0x04B7, r24
    3248:	80 91 b7 04 	lds	r24, 0x04B7
    324c:	87 ff       	sbrs	r24, 7
    324e:	f3 cf       	rjmp	.-26     	; 0x3236 <__LCD_putchar+0x5c>
    3250:	10 92 b7 04 	sts	0x04B7, r1
    3254:	80 91 b8 04 	lds	r24, 0x04B8
    3258:	81 50       	subi	r24, 0x01	; 1
    325a:	80 93 b8 04 	sts	0x04B8, r24
    325e:	00 e0       	ldi	r16, 0x00	; 0
    3260:	11 e0       	ldi	r17, 0x01	; 1
    3262:	1c c0       	rjmp	.+56     	; 0x329c <__LCD_putchar+0xc2>
    3264:	80 91 b7 04 	lds	r24, 0x04B7
    3268:	88 23       	and	r24, r24
    326a:	b1 f0       	breq	.+44     	; 0x3298 <__LCD_putchar+0xbe>
    326c:	80 91 b7 04 	lds	r24, 0x04B7
    3270:	86 50       	subi	r24, 0x06	; 6
    3272:	80 93 b7 04 	sts	0x04B7, r24
    3276:	10 c0       	rjmp	.+32     	; 0x3298 <__LCD_putchar+0xbe>
    3278:	81 e0       	ldi	r24, 0x01	; 1
    327a:	0e 94 da 10 	call	0x21b4	; 0x21b4 <SPKR_open>
    327e:	64 ef       	ldi	r22, 0xF4	; 244
    3280:	71 e0       	ldi	r23, 0x01	; 1
    3282:	80 e0       	ldi	r24, 0x00	; 0
    3284:	90 e0       	ldi	r25, 0x00	; 0
    3286:	4d e7       	ldi	r20, 0x7D	; 125
    3288:	50 e0       	ldi	r21, 0x00	; 0
    328a:	24 e6       	ldi	r18, 0x64	; 100
    328c:	30 e0       	ldi	r19, 0x00	; 0
    328e:	0e 94 f5 1a 	call	0x35ea	; 0x35ea <SPKR_play_beep>
    3292:	81 e0       	ldi	r24, 0x01	; 1
    3294:	0e 94 c1 1a 	call	0x3582	; 0x3582 <SPKR_close>
    3298:	00 e0       	ldi	r16, 0x00	; 0
    329a:	10 e0       	ldi	r17, 0x00	; 0
    329c:	80 91 b8 04 	lds	r24, 0x04B8
    32a0:	60 91 b7 04 	lds	r22, 0x04B7
    32a4:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <LCD_set_PGC_addr>
    32a8:	00 23       	and	r16, r16
    32aa:	51 f1       	breq	.+84     	; 0x3300 <__LCD_putchar+0x126>
    32ac:	85 e0       	ldi	r24, 0x05	; 5
    32ae:	f8 9e       	mul	r15, r24
    32b0:	c0 01       	movw	r24, r0
    32b2:	11 24       	eor	r1, r1
    32b4:	ec 01       	movw	r28, r24
    32b6:	c3 55       	subi	r28, 0x53	; 83
    32b8:	df 4f       	sbci	r29, 0xFF	; 255
    32ba:	8c 01       	movw	r16, r24
    32bc:	0e 54       	subi	r16, 0x4E	; 78
    32be:	1f 4f       	sbci	r17, 0xFF	; 255
    32c0:	fe 01       	movw	r30, r28
    32c2:	84 91       	lpm	r24, Z+
    32c4:	61 e0       	ldi	r22, 0x01	; 1
    32c6:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    32ca:	21 96       	adiw	r28, 0x01	; 1
    32cc:	c0 17       	cp	r28, r16
    32ce:	d1 07       	cpc	r29, r17
    32d0:	b9 f7       	brne	.-18     	; 0x32c0 <__LCD_putchar+0xe6>
    32d2:	80 e0       	ldi	r24, 0x00	; 0
    32d4:	61 e0       	ldi	r22, 0x01	; 1
    32d6:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <LCD_write>
    32da:	80 91 b7 04 	lds	r24, 0x04B7
    32de:	8a 5f       	subi	r24, 0xFA	; 250
    32e0:	80 93 b7 04 	sts	0x04B7, r24
    32e4:	80 91 b7 04 	lds	r24, 0x04B7
    32e8:	90 e0       	ldi	r25, 0x00	; 0
    32ea:	8c 37       	cpi	r24, 0x7C	; 124
    32ec:	91 05       	cpc	r25, r1
    32ee:	3c f0       	brlt	.+14     	; 0x32fe <__LCD_putchar+0x124>
    32f0:	10 92 b7 04 	sts	0x04B7, r1
    32f4:	80 91 b8 04 	lds	r24, 0x04B8
    32f8:	81 50       	subi	r24, 0x01	; 1
    32fa:	80 93 b8 04 	sts	0x04B8, r24
    32fe:	11 e0       	ldi	r17, 0x01	; 1
    3300:	80 91 b8 04 	lds	r24, 0x04B8
    3304:	83 70       	andi	r24, 0x03	; 3
    3306:	80 93 b8 04 	sts	0x04B8, r24
    330a:	11 30       	cpi	r17, 0x01	; 1
    330c:	59 f4       	brne	.+22     	; 0x3324 <__LCD_putchar+0x14a>
    330e:	80 91 b9 04 	lds	r24, 0x04B9
    3312:	81 30       	cpi	r24, 0x01	; 1
    3314:	39 f4       	brne	.+14     	; 0x3324 <__LCD_putchar+0x14a>
    3316:	e0 91 ba 04 	lds	r30, 0x04BA
    331a:	f0 91 bb 04 	lds	r31, 0x04BB
    331e:	30 97       	sbiw	r30, 0x00	; 0
    3320:	09 f0       	breq	.+2      	; 0x3324 <__LCD_putchar+0x14a>
    3322:	09 95       	icall
    3324:	80 e0       	ldi	r24, 0x00	; 0
    3326:	90 e0       	ldi	r25, 0x00	; 0
    3328:	df 91       	pop	r29
    332a:	cf 91       	pop	r28
    332c:	1f 91       	pop	r17
    332e:	0f 91       	pop	r16
    3330:	ff 90       	pop	r15
    3332:	08 95       	ret

00003334 <__LED_clr_pattern>:
    3334:	85 fd       	sbrc	r24, 5
    3336:	5d 98       	cbi	0x0b, 5	; 11
    3338:	86 fd       	sbrc	r24, 6
    333a:	5e 98       	cbi	0x0b, 6	; 11
    333c:	08 95       	ret

0000333e <__LED_init>:
    333e:	55 9a       	sbi	0x0a, 5	; 10
    3340:	56 9a       	sbi	0x0a, 6	; 10
    3342:	08 95       	ret

00003344 <__LED_set_pattern>:
    3344:	85 fd       	sbrc	r24, 5
    3346:	5d 9a       	sbi	0x0b, 5	; 11
    3348:	86 fd       	sbrc	r24, 6
    334a:	5e 9a       	sbi	0x0b, 6	; 11
    334c:	08 95       	ret

0000334e <ATMEGA_open>:
    334e:	80 e0       	ldi	r24, 0x00	; 0
    3350:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    3354:	88 23       	and	r24, r24
    3356:	51 f4       	brne	.+20     	; 0x336c <ATMEGA_open+0x1e>
    3358:	f8 94       	cli
    335a:	0e 94 d8 1c 	call	0x39b0	; 0x39b0 <__ATMEGA_init>
    335e:	81 e0       	ldi	r24, 0x01	; 1
    3360:	0e 94 b9 19 	call	0x3372	; 0x3372 <ATMEGA_set_clk_mode>
    3364:	80 e0       	ldi	r24, 0x00	; 0
    3366:	61 e0       	ldi	r22, 0x01	; 1
    3368:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    336c:	80 e0       	ldi	r24, 0x00	; 0
    336e:	91 e0       	ldi	r25, 0x01	; 1
    3370:	08 95       	ret

00003372 <ATMEGA_set_clk_mode>:
    3372:	81 30       	cpi	r24, 0x01	; 1
    3374:	49 f0       	breq	.+18     	; 0x3388 <ATMEGA_set_clk_mode+0x16>
    3376:	f8 94       	cli
    3378:	81 30       	cpi	r24, 0x01	; 1
    337a:	20 f1       	brcs	.+72     	; 0x33c4 <ATMEGA_set_clk_mode+0x52>
    337c:	82 30       	cpi	r24, 0x02	; 2
    337e:	b1 f0       	breq	.+44     	; 0x33ac <ATMEGA_set_clk_mode+0x3a>
    3380:	83 30       	cpi	r24, 0x03	; 3
    3382:	09 f0       	breq	.+2      	; 0x3386 <ATMEGA_set_clk_mode+0x14>
    3384:	45 c0       	rjmp	.+138    	; 0x3410 <ATMEGA_set_clk_mode+0x9e>
    3386:	17 c0       	rjmp	.+46     	; 0x33b6 <ATMEGA_set_clk_mode+0x44>
    3388:	2c 9a       	sbi	0x05, 4	; 5
    338a:	80 e8       	ldi	r24, 0x80	; 128
    338c:	80 93 61 00 	sts	0x0061, r24
    3390:	10 92 61 00 	sts	0x0061, r1
    3394:	80 e0       	ldi	r24, 0x00	; 0
    3396:	90 e0       	ldi	r25, 0x00	; 0
    3398:	00 00       	nop
    339a:	01 96       	adiw	r24, 0x01	; 1
    339c:	88 32       	cpi	r24, 0x28	; 40
    339e:	91 05       	cpc	r25, r1
    33a0:	d9 f7       	brne	.-10     	; 0x3398 <ATMEGA_set_clk_mode+0x26>
    33a2:	10 92 68 00 	sts	0x0068, r1
    33a6:	10 92 6b 00 	sts	0x006B, r1
    33aa:	08 95       	ret
    33ac:	80 e8       	ldi	r24, 0x80	; 128
    33ae:	80 93 61 00 	sts	0x0061, r24
    33b2:	83 e0       	ldi	r24, 0x03	; 3
    33b4:	04 c0       	rjmp	.+8      	; 0x33be <ATMEGA_set_clk_mode+0x4c>
    33b6:	80 e8       	ldi	r24, 0x80	; 128
    33b8:	80 93 61 00 	sts	0x0061, r24
    33bc:	88 e0       	ldi	r24, 0x08	; 8
    33be:	80 93 61 00 	sts	0x0061, r24
    33c2:	28 c0       	rjmp	.+80     	; 0x3414 <ATMEGA_set_clk_mode+0xa2>
    33c4:	80 e0       	ldi	r24, 0x00	; 0
    33c6:	90 e0       	ldi	r25, 0x00	; 0
    33c8:	00 00       	nop
    33ca:	01 96       	adiw	r24, 0x01	; 1
    33cc:	2d e6       	ldi	r18, 0x6D	; 109
    33ce:	80 36       	cpi	r24, 0x60	; 96
    33d0:	92 07       	cpc	r25, r18
    33d2:	d1 f7       	brne	.-12     	; 0x33c8 <ATMEGA_set_clk_mode+0x56>
    33d4:	2c 98       	cbi	0x05, 4	; 5
    33d6:	80 e0       	ldi	r24, 0x00	; 0
    33d8:	90 e0       	ldi	r25, 0x00	; 0
    33da:	00 00       	nop
    33dc:	01 96       	adiw	r24, 0x01	; 1
    33de:	2d e6       	ldi	r18, 0x6D	; 109
    33e0:	80 36       	cpi	r24, 0x60	; 96
    33e2:	92 07       	cpc	r25, r18
    33e4:	d1 f7       	brne	.-12     	; 0x33da <ATMEGA_set_clk_mode+0x68>
    33e6:	10 92 7a 00 	sts	0x007A, r1
    33ea:	8f ef       	ldi	r24, 0xFF	; 255
    33ec:	80 93 64 00 	sts	0x0064, r24
    33f0:	80 91 68 00 	lds	r24, 0x0068
    33f4:	81 60       	ori	r24, 0x01	; 1
    33f6:	80 93 68 00 	sts	0x0068, r24
    33fa:	80 91 6b 00 	lds	r24, 0x006B
    33fe:	84 60       	ori	r24, 0x04	; 4
    3400:	80 93 6b 00 	sts	0x006B, r24
    3404:	78 94       	sei
    3406:	83 b7       	in	r24, 0x33	; 51
    3408:	81 60       	ori	r24, 0x01	; 1
    340a:	83 bf       	out	0x33, r24	; 51
    340c:	88 95       	sleep
    340e:	08 95       	ret
    3410:	82 30       	cpi	r24, 0x02	; 2
    3412:	08 f0       	brcs	.+2      	; 0x3416 <ATMEGA_set_clk_mode+0xa4>
    3414:	78 94       	sei
    3416:	08 95       	ret

00003418 <SPI_open>:
    3418:	0f 93       	push	r16
    341a:	1f 93       	push	r17
    341c:	0e 94 04 1d 	call	0x3a08	; 0x3a08 <__SPI_init>
    3420:	80 e0       	ldi	r24, 0x00	; 0
    3422:	63 ef       	ldi	r22, 0xF3	; 243
    3424:	7c e1       	ldi	r23, 0x1C	; 28
    3426:	0e 94 45 1a 	call	0x348a	; 0x348a <SPI_set_config_func>
    342a:	81 e0       	ldi	r24, 0x01	; 1
    342c:	6b ee       	ldi	r22, 0xEB	; 235
    342e:	7c e1       	ldi	r23, 0x1C	; 28
    3430:	0e 94 45 1a 	call	0x348a	; 0x348a <SPI_set_config_func>
    3434:	82 e0       	ldi	r24, 0x02	; 2
    3436:	63 ee       	ldi	r22, 0xE3	; 227
    3438:	7c e1       	ldi	r23, 0x1C	; 28
    343a:	0e 94 45 1a 	call	0x348a	; 0x348a <SPI_set_config_func>
    343e:	86 e0       	ldi	r24, 0x06	; 6
    3440:	6b ef       	ldi	r22, 0xFB	; 251
    3442:	7c e1       	ldi	r23, 0x1C	; 28
    3444:	0e 94 45 1a 	call	0x348a	; 0x348a <SPI_set_config_func>
    3448:	0b ed       	ldi	r16, 0xDB	; 219
    344a:	1c e1       	ldi	r17, 0x1C	; 28
    344c:	83 e0       	ldi	r24, 0x03	; 3
    344e:	b8 01       	movw	r22, r16
    3450:	0e 94 45 1a 	call	0x348a	; 0x348a <SPI_set_config_func>
    3454:	84 e0       	ldi	r24, 0x04	; 4
    3456:	b8 01       	movw	r22, r16
    3458:	0e 94 45 1a 	call	0x348a	; 0x348a <SPI_set_config_func>
    345c:	85 e0       	ldi	r24, 0x05	; 5
    345e:	b8 01       	movw	r22, r16
    3460:	0e 94 45 1a 	call	0x348a	; 0x348a <SPI_set_config_func>
    3464:	87 e0       	ldi	r24, 0x07	; 7
    3466:	b8 01       	movw	r22, r16
    3468:	0e 94 45 1a 	call	0x348a	; 0x348a <SPI_set_config_func>
    346c:	82 e0       	ldi	r24, 0x02	; 2
    346e:	61 e0       	ldi	r22, 0x01	; 1
    3470:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    3474:	8f ef       	ldi	r24, 0xFF	; 255
    3476:	80 93 bc 04 	sts	0x04BC, r24
    347a:	87 e0       	ldi	r24, 0x07	; 7
    347c:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <SPI_set_slave_addr>
    3480:	82 e0       	ldi	r24, 0x02	; 2
    3482:	91 e0       	ldi	r25, 0x01	; 1
    3484:	1f 91       	pop	r17
    3486:	0f 91       	pop	r16
    3488:	08 95       	ret

0000348a <SPI_set_config_func>:
    348a:	e8 2f       	mov	r30, r24
    348c:	f0 e0       	ldi	r31, 0x00	; 0
    348e:	ee 0f       	add	r30, r30
    3490:	ff 1f       	adc	r31, r31
    3492:	e2 5a       	subi	r30, 0xA2	; 162
    3494:	fd 4f       	sbci	r31, 0xFD	; 253
    3496:	71 83       	std	Z+1, r23	; 0x01
    3498:	60 83       	st	Z, r22
    349a:	08 95       	ret

0000349c <__SPKR_TIMER1_COMPA_vect>:
    349c:	0e 94 51 1a 	call	0x34a2	; 0x34a2 <SPKR_clk>
    34a0:	08 95       	ret

000034a2 <SPKR_clk>:
    34a2:	80 91 70 02 	lds	r24, 0x0270
    34a6:	90 91 71 02 	lds	r25, 0x0271
    34aa:	a0 91 72 02 	lds	r26, 0x0272
    34ae:	b0 91 73 02 	lds	r27, 0x0273
    34b2:	20 91 74 02 	lds	r18, 0x0274
    34b6:	30 91 75 02 	lds	r19, 0x0275
    34ba:	40 91 76 02 	lds	r20, 0x0276
    34be:	50 91 77 02 	lds	r21, 0x0277
    34c2:	28 0f       	add	r18, r24
    34c4:	39 1f       	adc	r19, r25
    34c6:	4a 1f       	adc	r20, r26
    34c8:	5b 1f       	adc	r21, r27
    34ca:	20 93 70 02 	sts	0x0270, r18
    34ce:	30 93 71 02 	sts	0x0271, r19
    34d2:	40 93 72 02 	sts	0x0272, r20
    34d6:	50 93 73 02 	sts	0x0273, r21
    34da:	80 91 70 02 	lds	r24, 0x0270
    34de:	90 91 71 02 	lds	r25, 0x0271
    34e2:	a0 91 72 02 	lds	r26, 0x0272
    34e6:	b0 91 73 02 	lds	r27, 0x0273
    34ea:	88 51       	subi	r24, 0x18	; 24
    34ec:	96 4f       	sbci	r25, 0xF6	; 246
    34ee:	a0 40       	sbci	r26, 0x00	; 0
    34f0:	b0 40       	sbci	r27, 0x00	; 0
    34f2:	bc f0       	brlt	.+46     	; 0x3522 <SPKR_clk+0x80>
    34f4:	8b b1       	in	r24, 0x0b	; 11
    34f6:	80 58       	subi	r24, 0x80	; 128
    34f8:	8b b9       	out	0x0b, r24	; 11
    34fa:	80 91 70 02 	lds	r24, 0x0270
    34fe:	90 91 71 02 	lds	r25, 0x0271
    3502:	a0 91 72 02 	lds	r26, 0x0272
    3506:	b0 91 73 02 	lds	r27, 0x0273
    350a:	88 51       	subi	r24, 0x18	; 24
    350c:	96 4f       	sbci	r25, 0xF6	; 246
    350e:	a0 40       	sbci	r26, 0x00	; 0
    3510:	b0 40       	sbci	r27, 0x00	; 0
    3512:	80 93 70 02 	sts	0x0270, r24
    3516:	90 93 71 02 	sts	0x0271, r25
    351a:	a0 93 72 02 	sts	0x0272, r26
    351e:	b0 93 73 02 	sts	0x0273, r27
    3522:	08 95       	ret

00003524 <__SPKR_close_beep_mode>:
    3524:	8a e0       	ldi	r24, 0x0A	; 10
    3526:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    352a:	81 30       	cpi	r24, 0x01	; 1
    352c:	41 f4       	brne	.+16     	; 0x353e <__SPKR_close_beep_mode+0x1a>
    352e:	0e 94 34 1d 	call	0x3a68	; 0x3a68 <__SPKR_close>
    3532:	10 92 6f 02 	sts	0x026F, r1
    3536:	8a e0       	ldi	r24, 0x0A	; 10
    3538:	60 e0       	ldi	r22, 0x00	; 0
    353a:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    353e:	08 95       	ret

00003540 <__SPKR_close_tone_mode>:
    3540:	89 e0       	ldi	r24, 0x09	; 9
    3542:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    3546:	81 30       	cpi	r24, 0x01	; 1
    3548:	d9 f4       	brne	.+54     	; 0x3580 <__SPKR_close_tone_mode+0x40>
    354a:	80 91 6e 02 	lds	r24, 0x026E
    354e:	88 23       	and	r24, r24
    3550:	11 f0       	breq	.+4      	; 0x3556 <__SPKR_close_tone_mode+0x16>
    3552:	0e 94 42 1b 	call	0x3684	; 0x3684 <__SPKR_stop>
    3556:	82 e0       	ldi	r24, 0x02	; 2
    3558:	0e 94 34 1d 	call	0x3a68	; 0x3a68 <__SPKR_close>
    355c:	80 91 7c 02 	lds	r24, 0x027C
    3560:	90 91 7d 02 	lds	r25, 0x027D
    3564:	00 97       	sbiw	r24, 0x00	; 0
    3566:	31 f0       	breq	.+12     	; 0x3574 <__SPKR_close_tone_mode+0x34>
    3568:	0e 94 f3 29 	call	0x53e6	; 0x53e6 <free>
    356c:	10 92 7d 02 	sts	0x027D, r1
    3570:	10 92 7c 02 	sts	0x027C, r1
    3574:	10 92 6e 02 	sts	0x026E, r1
    3578:	89 e0       	ldi	r24, 0x09	; 9
    357a:	60 e0       	ldi	r22, 0x00	; 0
    357c:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    3580:	08 95       	ret

00003582 <SPKR_close>:
    3582:	81 30       	cpi	r24, 0x01	; 1
    3584:	29 f0       	breq	.+10     	; 0x3590 <SPKR_close+0xe>
    3586:	82 30       	cpi	r24, 0x02	; 2
    3588:	29 f4       	brne	.+10     	; 0x3594 <SPKR_close+0x12>
    358a:	0e 94 a0 1a 	call	0x3540	; 0x3540 <__SPKR_close_tone_mode>
    358e:	08 95       	ret
    3590:	0e 94 92 1a 	call	0x3524	; 0x3524 <__SPKR_close_beep_mode>
    3594:	08 95       	ret

00003596 <__SPKR_init>:
    3596:	98 2f       	mov	r25, r24
    3598:	80 91 6e 02 	lds	r24, 0x026E
    359c:	88 23       	and	r24, r24
    359e:	31 f4       	brne	.+12     	; 0x35ac <__SPKR_init+0x16>
    35a0:	80 91 6f 02 	lds	r24, 0x026F
    35a4:	88 23       	and	r24, r24
    35a6:	11 f4       	brne	.+4      	; 0x35ac <__SPKR_init+0x16>
    35a8:	57 9a       	sbi	0x0a, 7	; 10
    35aa:	5f 98       	cbi	0x0b, 7	; 11
    35ac:	80 91 6e 02 	lds	r24, 0x026E
    35b0:	88 23       	and	r24, r24
    35b2:	d1 f4       	brne	.+52     	; 0x35e8 <__SPKR_init+0x52>
    35b4:	92 30       	cpi	r25, 0x02	; 2
    35b6:	c1 f4       	brne	.+48     	; 0x35e8 <__SPKR_init+0x52>
    35b8:	10 92 80 00 	sts	0x0080, r1
    35bc:	10 92 81 00 	sts	0x0081, r1
    35c0:	80 91 81 00 	lds	r24, 0x0081
    35c4:	88 60       	ori	r24, 0x08	; 8
    35c6:	80 93 81 00 	sts	0x0081, r24
    35ca:	80 91 81 00 	lds	r24, 0x0081
    35ce:	81 60       	ori	r24, 0x01	; 1
    35d0:	80 93 81 00 	sts	0x0081, r24
    35d4:	10 92 85 00 	sts	0x0085, r1
    35d8:	10 92 84 00 	sts	0x0084, r1
    35dc:	81 e0       	ldi	r24, 0x01	; 1
    35de:	80 93 89 00 	sts	0x0089, r24
    35e2:	80 e9       	ldi	r24, 0x90	; 144
    35e4:	80 93 88 00 	sts	0x0088, r24
    35e8:	08 95       	ret

000035ea <SPKR_play_beep>:
    35ea:	8f 92       	push	r8
    35ec:	9f 92       	push	r9
    35ee:	af 92       	push	r10
    35f0:	bf 92       	push	r11
    35f2:	cf 92       	push	r12
    35f4:	df 92       	push	r13
    35f6:	ef 92       	push	r14
    35f8:	ff 92       	push	r15
    35fa:	0f 93       	push	r16
    35fc:	1f 93       	push	r17
    35fe:	cf 93       	push	r28
    3600:	df 93       	push	r29
    3602:	4b 01       	movw	r8, r22
    3604:	5c 01       	movw	r10, r24
    3606:	ea 01       	movw	r28, r20
    3608:	b9 01       	movw	r22, r18
    360a:	21 15       	cp	r18, r1
    360c:	31 05       	cpc	r19, r1
    360e:	39 f1       	breq	.+78     	; 0x365e <SPKR_play_beep+0x74>
    3610:	9e 01       	movw	r18, r28
    3612:	44 27       	eor	r20, r20
    3614:	37 fd       	sbrc	r19, 7
    3616:	40 95       	com	r20
    3618:	54 2f       	mov	r21, r20
    361a:	65 36       	cpi	r22, 0x65	; 101
    361c:	71 05       	cpc	r23, r1
    361e:	10 f0       	brcs	.+4      	; 0x3624 <SPKR_play_beep+0x3a>
    3620:	64 e6       	ldi	r22, 0x64	; 100
    3622:	70 e0       	ldi	r23, 0x00	; 0
    3624:	80 e0       	ldi	r24, 0x00	; 0
    3626:	90 e0       	ldi	r25, 0x00	; 0
    3628:	0e 94 a7 28 	call	0x514e	; 0x514e <__mulsi3>
    362c:	24 e6       	ldi	r18, 0x64	; 100
    362e:	30 e0       	ldi	r19, 0x00	; 0
    3630:	40 e0       	ldi	r20, 0x00	; 0
    3632:	50 e0       	ldi	r21, 0x00	; 0
    3634:	0e 94 d9 28 	call	0x51b2	; 0x51b2 <__udivmodsi4>
    3638:	79 01       	movw	r14, r18
    363a:	8a 01       	movw	r16, r20
    363c:	c5 01       	movw	r24, r10
    363e:	b4 01       	movw	r22, r8
    3640:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <SPKR_beep>
    3644:	c7 01       	movw	r24, r14
    3646:	0e 94 38 15 	call	0x2a70	; 0x2a70 <TMRSRVC_delay>
    364a:	60 e0       	ldi	r22, 0x00	; 0
    364c:	70 e0       	ldi	r23, 0x00	; 0
    364e:	80 e0       	ldi	r24, 0x00	; 0
    3650:	90 e0       	ldi	r25, 0x00	; 0
    3652:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <SPKR_beep>
    3656:	ce 01       	movw	r24, r28
    3658:	8e 19       	sub	r24, r14
    365a:	9f 09       	sbc	r25, r15
    365c:	04 c0       	rjmp	.+8      	; 0x3666 <SPKR_play_beep+0x7c>
    365e:	41 15       	cp	r20, r1
    3660:	51 05       	cpc	r21, r1
    3662:	19 f0       	breq	.+6      	; 0x366a <SPKR_play_beep+0x80>
    3664:	ca 01       	movw	r24, r20
    3666:	0e 94 38 15 	call	0x2a70	; 0x2a70 <TMRSRVC_delay>
    366a:	df 91       	pop	r29
    366c:	cf 91       	pop	r28
    366e:	1f 91       	pop	r17
    3670:	0f 91       	pop	r16
    3672:	ff 90       	pop	r15
    3674:	ef 90       	pop	r14
    3676:	df 90       	pop	r13
    3678:	cf 90       	pop	r12
    367a:	bf 90       	pop	r11
    367c:	af 90       	pop	r10
    367e:	9f 90       	pop	r9
    3680:	8f 90       	pop	r8
    3682:	08 95       	ret

00003684 <__SPKR_stop>:
    3684:	ef e6       	ldi	r30, 0x6F	; 111
    3686:	f0 e0       	ldi	r31, 0x00	; 0
    3688:	80 81       	ld	r24, Z
    368a:	8d 7f       	andi	r24, 0xFD	; 253
    368c:	80 83       	st	Z, r24
    368e:	08 95       	ret

00003690 <STEPPER_go>:
    3690:	98 2f       	mov	r25, r24
    3692:	81 e0       	ldi	r24, 0x01	; 1
    3694:	80 93 a1 04 	sts	0x04A1, r24
    3698:	91 30       	cpi	r25, 0x01	; 1
    369a:	51 f0       	breq	.+20     	; 0x36b0 <STEPPER_go+0x20>
    369c:	91 30       	cpi	r25, 0x01	; 1
    369e:	18 f0       	brcs	.+6      	; 0x36a6 <STEPPER_go+0x16>
    36a0:	92 30       	cpi	r25, 0x02	; 2
    36a2:	41 f4       	brne	.+16     	; 0x36b4 <STEPPER_go+0x24>
    36a4:	03 c0       	rjmp	.+6      	; 0x36ac <STEPPER_go+0x1c>
    36a6:	10 92 89 04 	sts	0x0489, r1
    36aa:	04 c0       	rjmp	.+8      	; 0x36b4 <STEPPER_go+0x24>
    36ac:	10 92 89 04 	sts	0x0489, r1
    36b0:	10 92 8a 04 	sts	0x048A, r1
    36b4:	10 92 a1 04 	sts	0x04A1, r1
    36b8:	08 95       	ret

000036ba <__STEPPER_init>:
    36ba:	3a 9a       	sbi	0x07, 2	; 7
    36bc:	3b 9a       	sbi	0x07, 3	; 7
    36be:	3c 9a       	sbi	0x07, 4	; 7
    36c0:	3d 9a       	sbi	0x07, 5	; 7
    36c2:	3e 9a       	sbi	0x07, 6	; 7
    36c4:	3f 9a       	sbi	0x07, 7	; 7
    36c6:	88 b1       	in	r24, 0x08	; 8
    36c8:	83 70       	andi	r24, 0x03	; 3
    36ca:	88 b9       	out	0x08, r24	; 8
    36cc:	08 95       	ret

000036ce <STEPPER_set_steps>:
    36ce:	98 2f       	mov	r25, r24
    36d0:	81 e0       	ldi	r24, 0x01	; 1
    36d2:	80 93 a1 04 	sts	0x04A1, r24
    36d6:	91 30       	cpi	r25, 0x01	; 1
    36d8:	71 f0       	breq	.+28     	; 0x36f6 <STEPPER_set_steps+0x28>
    36da:	91 30       	cpi	r25, 0x01	; 1
    36dc:	18 f0       	brcs	.+6      	; 0x36e4 <STEPPER_set_steps+0x16>
    36de:	92 30       	cpi	r25, 0x02	; 2
    36e0:	71 f4       	brne	.+28     	; 0x36fe <STEPPER_set_steps+0x30>
    36e2:	05 c0       	rjmp	.+10     	; 0x36ee <STEPPER_set_steps+0x20>
    36e4:	70 93 7e 04 	sts	0x047E, r23
    36e8:	60 93 7d 04 	sts	0x047D, r22
    36ec:	08 c0       	rjmp	.+16     	; 0x36fe <STEPPER_set_steps+0x30>
    36ee:	70 93 7e 04 	sts	0x047E, r23
    36f2:	60 93 7d 04 	sts	0x047D, r22
    36f6:	70 93 80 04 	sts	0x0480, r23
    36fa:	60 93 7f 04 	sts	0x047F, r22
    36fe:	10 92 a1 04 	sts	0x04A1, r1
    3702:	08 95       	ret

00003704 <STEPPER_set_stop_mode>:
    3704:	98 2f       	mov	r25, r24
    3706:	81 e0       	ldi	r24, 0x01	; 1
    3708:	80 93 a1 04 	sts	0x04A1, r24
    370c:	91 30       	cpi	r25, 0x01	; 1
    370e:	51 f0       	breq	.+20     	; 0x3724 <STEPPER_set_stop_mode+0x20>
    3710:	91 30       	cpi	r25, 0x01	; 1
    3712:	18 f0       	brcs	.+6      	; 0x371a <STEPPER_set_stop_mode+0x16>
    3714:	92 30       	cpi	r25, 0x02	; 2
    3716:	41 f4       	brne	.+16     	; 0x3728 <STEPPER_set_stop_mode+0x24>
    3718:	03 c0       	rjmp	.+6      	; 0x3720 <STEPPER_set_stop_mode+0x1c>
    371a:	60 93 8b 04 	sts	0x048B, r22
    371e:	04 c0       	rjmp	.+8      	; 0x3728 <STEPPER_set_stop_mode+0x24>
    3720:	60 93 8b 04 	sts	0x048B, r22
    3724:	60 93 8c 04 	sts	0x048C, r22
    3728:	10 92 a1 04 	sts	0x04A1, r1
    372c:	08 95       	ret

0000372e <STEPPER_setup_decels>:
    372e:	0f 93       	push	r16
    3730:	1f 93       	push	r17
    3732:	cf 93       	push	r28
    3734:	df 93       	push	r29
    3736:	eb 01       	movw	r28, r22
    3738:	8a 01       	movw	r16, r20
    373a:	81 30       	cpi	r24, 0x01	; 1
    373c:	01 f1       	breq	.+64     	; 0x377e <STEPPER_setup_decels+0x50>
    373e:	81 30       	cpi	r24, 0x01	; 1
    3740:	18 f0       	brcs	.+6      	; 0x3748 <STEPPER_setup_decels+0x1a>
    3742:	82 30       	cpi	r24, 0x02	; 2
    3744:	61 f5       	brne	.+88     	; 0x379e <STEPPER_setup_decels+0x70>
    3746:	0d c0       	rjmp	.+26     	; 0x3762 <STEPPER_setup_decels+0x34>
    3748:	80 91 75 04 	lds	r24, 0x0475
    374c:	90 91 76 04 	lds	r25, 0x0476
    3750:	89 2b       	or	r24, r25
    3752:	11 f0       	breq	.+4      	; 0x3758 <STEPPER_setup_decels+0x2a>
    3754:	80 e0       	ldi	r24, 0x00	; 0
    3756:	1a c0       	rjmp	.+52     	; 0x378c <STEPPER_setup_decels+0x5e>
    3758:	10 92 82 04 	sts	0x0482, r1
    375c:	10 92 81 04 	sts	0x0481, r1
    3760:	1e c0       	rjmp	.+60     	; 0x379e <STEPPER_setup_decels+0x70>
    3762:	80 91 75 04 	lds	r24, 0x0475
    3766:	90 91 76 04 	lds	r25, 0x0476
    376a:	89 2b       	or	r24, r25
    376c:	21 f0       	breq	.+8      	; 0x3776 <STEPPER_setup_decels+0x48>
    376e:	80 e0       	ldi	r24, 0x00	; 0
    3770:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <STEPPER_set_decel_step_values>
    3774:	04 c0       	rjmp	.+8      	; 0x377e <STEPPER_setup_decels+0x50>
    3776:	10 92 82 04 	sts	0x0482, r1
    377a:	10 92 81 04 	sts	0x0481, r1
    377e:	80 91 77 04 	lds	r24, 0x0477
    3782:	90 91 78 04 	lds	r25, 0x0478
    3786:	89 2b       	or	r24, r25
    3788:	31 f0       	breq	.+12     	; 0x3796 <STEPPER_setup_decels+0x68>
    378a:	81 e0       	ldi	r24, 0x01	; 1
    378c:	be 01       	movw	r22, r28
    378e:	a8 01       	movw	r20, r16
    3790:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <STEPPER_set_decel_step_values>
    3794:	04 c0       	rjmp	.+8      	; 0x379e <STEPPER_setup_decels+0x70>
    3796:	10 92 84 04 	sts	0x0484, r1
    379a:	10 92 83 04 	sts	0x0483, r1
    379e:	df 91       	pop	r29
    37a0:	cf 91       	pop	r28
    37a2:	1f 91       	pop	r17
    37a4:	0f 91       	pop	r16
    37a6:	08 95       	ret

000037a8 <SYS_init>:
    37a8:	10 92 a4 04 	sts	0x04A4, r1
    37ac:	10 92 a5 04 	sts	0x04A5, r1
    37b0:	10 92 a9 04 	sts	0x04A9, r1
    37b4:	10 92 a6 04 	sts	0x04A6, r1
    37b8:	10 92 a8 04 	sts	0x04A8, r1
    37bc:	10 92 aa 04 	sts	0x04AA, r1
    37c0:	10 92 ab 04 	sts	0x04AB, r1
    37c4:	10 92 ac 04 	sts	0x04AC, r1
    37c8:	10 92 ad 04 	sts	0x04AD, r1
    37cc:	10 92 ae 04 	sts	0x04AE, r1
    37d0:	10 92 af 04 	sts	0x04AF, r1
    37d4:	10 92 b0 04 	sts	0x04B0, r1
    37d8:	10 92 b1 04 	sts	0x04B1, r1
    37dc:	10 92 b2 04 	sts	0x04B2, r1
    37e0:	10 92 b3 04 	sts	0x04B3, r1
    37e4:	10 92 b4 04 	sts	0x04B4, r1
    37e8:	10 92 b5 04 	sts	0x04B5, r1
    37ec:	08 95       	ret

000037ee <ATTINY_get_sensors>:
    37ee:	0f 93       	push	r16
    37f0:	1f 93       	push	r17
    37f2:	81 e0       	ldi	r24, 0x01	; 1
    37f4:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    37f8:	81 30       	cpi	r24, 0x01	; 1
    37fa:	11 f0       	breq	.+4      	; 0x3800 <ATTINY_get_sensors+0x12>
    37fc:	00 e0       	ldi	r16, 0x00	; 0
    37fe:	24 c0       	rjmp	.+72     	; 0x3848 <ATTINY_get_sensors+0x5a>
    3800:	87 e0       	ldi	r24, 0x07	; 7
    3802:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <SPI_set_slave_addr>
    3806:	82 e0       	ldi	r24, 0x02	; 2
    3808:	6a e0       	ldi	r22, 0x0A	; 10
    380a:	0e 94 3a 10 	call	0x2074	; 0x2074 <SPI_transmit>
    380e:	82 e0       	ldi	r24, 0x02	; 2
    3810:	62 eb       	ldi	r22, 0xB2	; 178
    3812:	0e 94 3a 10 	call	0x2074	; 0x2074 <SPI_transmit>
    3816:	18 ec       	ldi	r17, 0xC8	; 200
    3818:	81 2f       	mov	r24, r17
    381a:	8a 95       	dec	r24
    381c:	f1 f7       	brne	.-4      	; 0x381a <ATTINY_get_sensors+0x2c>
    381e:	82 e0       	ldi	r24, 0x02	; 2
    3820:	60 e0       	ldi	r22, 0x00	; 0
    3822:	0e 94 0b 1d 	call	0x3a16	; 0x3a16 <SPI_receive>
    3826:	08 2f       	mov	r16, r24
    3828:	81 2f       	mov	r24, r17
    382a:	8a 95       	dec	r24
    382c:	f1 f7       	brne	.-4      	; 0x382a <ATTINY_get_sensors+0x3c>
    382e:	82 e0       	ldi	r24, 0x02	; 2
    3830:	60 e0       	ldi	r22, 0x00	; 0
    3832:	0e 94 0b 1d 	call	0x3a16	; 0x3a16 <SPI_receive>
    3836:	1a 95       	dec	r17
    3838:	f1 f7       	brne	.-4      	; 0x3836 <ATTINY_get_sensors+0x48>
    383a:	87 e0       	ldi	r24, 0x07	; 7
    383c:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <SPI_set_slave_addr>
    3840:	88 e8       	ldi	r24, 0x88	; 136
    3842:	93 e1       	ldi	r25, 0x13	; 19
    3844:	01 97       	sbiw	r24, 0x01	; 1
    3846:	f1 f7       	brne	.-4      	; 0x3844 <ATTINY_get_sensors+0x56>
    3848:	80 2f       	mov	r24, r16
    384a:	1f 91       	pop	r17
    384c:	0f 91       	pop	r16
    384e:	08 95       	ret

00003850 <TMRSRVC_insert>:
    3850:	cf 92       	push	r12
    3852:	df 92       	push	r13
    3854:	ef 92       	push	r14
    3856:	ff 92       	push	r15
    3858:	0f 93       	push	r16
    385a:	1f 93       	push	r17
    385c:	cf 93       	push	r28
    385e:	df 93       	push	r29
    3860:	ec 01       	movw	r28, r24
    3862:	80 91 db 04 	lds	r24, 0x04DB
    3866:	88 23       	and	r24, r24
    3868:	39 f4       	brne	.+14     	; 0x3878 <TMRSRVC_insert+0x28>
    386a:	d0 93 dd 04 	sts	0x04DD, r29
    386e:	c0 93 dc 04 	sts	0x04DC, r28
    3872:	0e 94 b6 1c 	call	0x396c	; 0x396c <TMRSRVC_start>
    3876:	47 c0       	rjmp	.+142    	; 0x3906 <TMRSRVC_insert+0xb6>
    3878:	c0 90 dc 04 	lds	r12, 0x04DC
    387c:	d0 90 dd 04 	lds	r13, 0x04DD
    3880:	00 e0       	ldi	r16, 0x00	; 0
    3882:	10 e0       	ldi	r17, 0x00	; 0
    3884:	ee 24       	eor	r14, r14
    3886:	ff 24       	eor	r15, r15
    3888:	37 c0       	rjmp	.+110    	; 0x38f8 <TMRSRVC_insert+0xa8>
    388a:	a8 81       	ld	r26, Y
    388c:	b9 81       	ldd	r27, Y+1	; 0x01
    388e:	fd 01       	movw	r30, r26
    3890:	64 81       	ldd	r22, Z+4	; 0x04
    3892:	75 81       	ldd	r23, Z+5	; 0x05
    3894:	f6 01       	movw	r30, r12
    3896:	40 81       	ld	r20, Z
    3898:	51 81       	ldd	r21, Z+1	; 0x01
    389a:	fa 01       	movw	r30, r20
    389c:	84 81       	ldd	r24, Z+4	; 0x04
    389e:	95 81       	ldd	r25, Z+5	; 0x05
    38a0:	9b 01       	movw	r18, r22
    38a2:	28 1b       	sub	r18, r24
    38a4:	39 0b       	sbc	r19, r25
    38a6:	37 ff       	sbrs	r19, 7
    38a8:	0f c0       	rjmp	.+30     	; 0x38c8 <TMRSRVC_insert+0x78>
    38aa:	86 1b       	sub	r24, r22
    38ac:	97 0b       	sbc	r25, r23
    38ae:	95 83       	std	Z+5, r25	; 0x05
    38b0:	84 83       	std	Z+4, r24	; 0x04
    38b2:	db 82       	std	Y+3, r13	; 0x03
    38b4:	ca 82       	std	Y+2, r12	; 0x02
    38b6:	01 2b       	or	r16, r17
    38b8:	29 f4       	brne	.+10     	; 0x38c4 <TMRSRVC_insert+0x74>
    38ba:	d0 93 dd 04 	sts	0x04DD, r29
    38be:	c0 93 dc 04 	sts	0x04DC, r28
    38c2:	21 c0       	rjmp	.+66     	; 0x3906 <TMRSRVC_insert+0xb6>
    38c4:	f7 01       	movw	r30, r14
    38c6:	0c c0       	rjmp	.+24     	; 0x38e0 <TMRSRVC_insert+0x90>
    38c8:	f6 01       	movw	r30, r12
    38ca:	82 81       	ldd	r24, Z+2	; 0x02
    38cc:	93 81       	ldd	r25, Z+3	; 0x03
    38ce:	21 15       	cp	r18, r1
    38d0:	31 05       	cpc	r19, r1
    38d2:	49 f4       	brne	.+18     	; 0x38e6 <TMRSRVC_insert+0x96>
    38d4:	fd 01       	movw	r30, r26
    38d6:	15 82       	std	Z+5, r1	; 0x05
    38d8:	14 82       	std	Z+4, r1	; 0x04
    38da:	9b 83       	std	Y+3, r25	; 0x03
    38dc:	8a 83       	std	Y+2, r24	; 0x02
    38de:	f6 01       	movw	r30, r12
    38e0:	d3 83       	std	Z+3, r29	; 0x03
    38e2:	c2 83       	std	Z+2, r28	; 0x02
    38e4:	10 c0       	rjmp	.+32     	; 0x3906 <TMRSRVC_insert+0xb6>
    38e6:	fd 01       	movw	r30, r26
    38e8:	35 83       	std	Z+5, r19	; 0x05
    38ea:	24 83       	std	Z+4, r18	; 0x04
    38ec:	00 97       	sbiw	r24, 0x00	; 0
    38ee:	b9 f3       	breq	.-18     	; 0x38de <TMRSRVC_insert+0x8e>
    38f0:	0f 5f       	subi	r16, 0xFF	; 255
    38f2:	1f 4f       	sbci	r17, 0xFF	; 255
    38f4:	76 01       	movw	r14, r12
    38f6:	6c 01       	movw	r12, r24
    38f8:	80 91 db 04 	lds	r24, 0x04DB
    38fc:	90 e0       	ldi	r25, 0x00	; 0
    38fe:	08 17       	cp	r16, r24
    3900:	19 07       	cpc	r17, r25
    3902:	18 f2       	brcs	.-122    	; 0x388a <TMRSRVC_insert+0x3a>
    3904:	ec cf       	rjmp	.-40     	; 0x38de <TMRSRVC_insert+0x8e>
    3906:	80 91 db 04 	lds	r24, 0x04DB
    390a:	8f 5f       	subi	r24, 0xFF	; 255
    390c:	80 93 db 04 	sts	0x04DB, r24
    3910:	df 91       	pop	r29
    3912:	cf 91       	pop	r28
    3914:	1f 91       	pop	r17
    3916:	0f 91       	pop	r16
    3918:	ff 90       	pop	r15
    391a:	ef 90       	pop	r14
    391c:	df 90       	pop	r13
    391e:	cf 90       	pop	r12
    3920:	08 95       	ret

00003922 <TMRSRVC_open>:
    3922:	88 e0       	ldi	r24, 0x08	; 8
    3924:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    3928:	88 23       	and	r24, r24
    392a:	b9 f4       	brne	.+46     	; 0x395a <TMRSRVC_open+0x38>
    392c:	10 92 db 04 	sts	0x04DB, r1
    3930:	10 92 dd 04 	sts	0x04DD, r1
    3934:	10 92 dc 04 	sts	0x04DC, r1
    3938:	10 92 7e 02 	sts	0x027E, r1
    393c:	10 92 7f 02 	sts	0x027F, r1
    3940:	80 e1       	ldi	r24, 0x10	; 16
    3942:	6d eb       	ldi	r22, 0xBD	; 189
    3944:	7d e1       	ldi	r23, 0x1D	; 29
    3946:	0e 94 c7 1c 	call	0x398e	; 0x398e <__ISR_attach>
    394a:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <__TMRSRVC_init>
    394e:	0e 94 b0 1c 	call	0x3960	; 0x3960 <__TMRSRVC_start>
    3952:	88 e0       	ldi	r24, 0x08	; 8
    3954:	61 e0       	ldi	r22, 0x01	; 1
    3956:	0e 94 54 14 	call	0x28a8	; 0x28a8 <SYS_set_state>
    395a:	88 e0       	ldi	r24, 0x08	; 8
    395c:	91 e0       	ldi	r25, 0x01	; 1
    395e:	08 95       	ret

00003960 <__TMRSRVC_start>:
    3960:	ee e6       	ldi	r30, 0x6E	; 110
    3962:	f0 e0       	ldi	r31, 0x00	; 0
    3964:	80 81       	ld	r24, Z
    3966:	82 60       	ori	r24, 0x02	; 2
    3968:	80 83       	st	Z, r24
    396a:	08 95       	ret

0000396c <TMRSRVC_start>:
    396c:	81 e0       	ldi	r24, 0x01	; 1
    396e:	80 93 7f 02 	sts	0x027F, r24
    3972:	08 95       	ret

00003974 <I2C_enable>:
    3974:	80 91 de 04 	lds	r24, 0x04DE
    3978:	81 30       	cpi	r24, 0x01	; 1
    397a:	29 f4       	brne	.+10     	; 0x3986 <I2C_enable+0x12>
    397c:	80 91 bc 00 	lds	r24, 0x00BC
    3980:	84 60       	ori	r24, 0x04	; 4
    3982:	80 93 bc 00 	sts	0x00BC, r24
    3986:	08 95       	ret

00003988 <__I2C_init>:
    3988:	38 98       	cbi	0x07, 0	; 7
    398a:	39 98       	cbi	0x07, 1	; 7
    398c:	08 95       	ret

0000398e <__ISR_attach>:
    398e:	80 32       	cpi	r24, 0x20	; 32
    3990:	18 f0       	brcs	.+6      	; 0x3998 <__ISR_attach+0xa>
    3992:	20 e0       	ldi	r18, 0x00	; 0
    3994:	30 e0       	ldi	r19, 0x00	; 0
    3996:	0a c0       	rjmp	.+20     	; 0x39ac <__ISR_attach+0x1e>
    3998:	e8 2f       	mov	r30, r24
    399a:	f0 e0       	ldi	r31, 0x00	; 0
    399c:	ee 0f       	add	r30, r30
    399e:	ff 1f       	adc	r31, r31
    39a0:	e2 5e       	subi	r30, 0xE2	; 226
    39a2:	fd 4f       	sbci	r31, 0xFD	; 253
    39a4:	20 81       	ld	r18, Z
    39a6:	31 81       	ldd	r19, Z+1	; 0x01
    39a8:	71 83       	std	Z+1, r23	; 0x01
    39aa:	60 83       	st	Z, r22
    39ac:	c9 01       	movw	r24, r18
    39ae:	08 95       	ret

000039b0 <__ATMEGA_init>:
    39b0:	24 9a       	sbi	0x04, 4	; 4
    39b2:	2c 9a       	sbi	0x05, 4	; 5
    39b4:	08 95       	ret

000039b6 <SPI_default_config>:
    39b6:	83 e5       	ldi	r24, 0x53	; 83
    39b8:	8c bd       	out	0x2c, r24	; 44
    39ba:	81 e0       	ldi	r24, 0x01	; 1
    39bc:	8d bd       	out	0x2d, r24	; 45
    39be:	8d e0       	ldi	r24, 0x0D	; 13
    39c0:	8a 95       	dec	r24
    39c2:	f1 f7       	brne	.-4      	; 0x39c0 <SPI_default_config+0xa>
    39c4:	08 95       	ret

000039c6 <SPI_ATtiny0_config>:
    39c6:	83 e5       	ldi	r24, 0x53	; 83
    39c8:	8c bd       	out	0x2c, r24	; 44
    39ca:	1d bc       	out	0x2d, r1	; 45
    39cc:	84 ef       	ldi	r24, 0xF4	; 244
    39ce:	91 e0       	ldi	r25, 0x01	; 1
    39d0:	01 97       	sbiw	r24, 0x01	; 1
    39d2:	f1 f7       	brne	.-4      	; 0x39d0 <SPI_ATtiny0_config+0xa>
    39d4:	08 95       	ret

000039d6 <SPI_PSXC_config>:
    39d6:	8f e7       	ldi	r24, 0x7F	; 127
    39d8:	8c bd       	out	0x2c, r24	; 44
    39da:	1d bc       	out	0x2d, r1	; 45
    39dc:	84 ef       	ldi	r24, 0xF4	; 244
    39de:	91 e0       	ldi	r25, 0x01	; 1
    39e0:	01 97       	sbiw	r24, 0x01	; 1
    39e2:	f1 f7       	brne	.-4      	; 0x39e0 <SPI_PSXC_config+0xa>
    39e4:	08 95       	ret

000039e6 <SPI_LCD_config>:
    39e6:	83 e5       	ldi	r24, 0x53	; 83
    39e8:	8c bd       	out	0x2c, r24	; 44
    39ea:	81 e0       	ldi	r24, 0x01	; 1
    39ec:	8d bd       	out	0x2d, r24	; 45
    39ee:	8d e0       	ldi	r24, 0x0D	; 13
    39f0:	8a 95       	dec	r24
    39f2:	f1 f7       	brne	.-4      	; 0x39f0 <SPI_LCD_config+0xa>
    39f4:	08 95       	ret

000039f6 <SPI_FLASH_config>:
    39f6:	83 e5       	ldi	r24, 0x53	; 83
    39f8:	8c bd       	out	0x2c, r24	; 44
    39fa:	81 e0       	ldi	r24, 0x01	; 1
    39fc:	8d bd       	out	0x2d, r24	; 45
    39fe:	84 ef       	ldi	r24, 0xF4	; 244
    3a00:	91 e0       	ldi	r25, 0x01	; 1
    3a02:	01 97       	sbiw	r24, 0x01	; 1
    3a04:	f1 f7       	brne	.-4      	; 0x3a02 <SPI_FLASH_config+0xc>
    3a06:	08 95       	ret

00003a08 <__SPI_init>:
    3a08:	25 9a       	sbi	0x04, 5	; 4
    3a0a:	26 98       	cbi	0x04, 6	; 4
    3a0c:	27 9a       	sbi	0x04, 7	; 4
    3a0e:	20 9a       	sbi	0x04, 0	; 4
    3a10:	21 9a       	sbi	0x04, 1	; 4
    3a12:	22 9a       	sbi	0x04, 2	; 4
    3a14:	08 95       	ret

00003a16 <SPI_receive>:
    3a16:	1f 93       	push	r17
    3a18:	16 2f       	mov	r17, r22
    3a1a:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <SPI_set_slave_addr>
    3a1e:	82 e0       	ldi	r24, 0x02	; 2
    3a20:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    3a24:	81 30       	cpi	r24, 0x01	; 1
    3a26:	11 f0       	breq	.+4      	; 0x3a2c <SPI_receive+0x16>
    3a28:	80 e0       	ldi	r24, 0x00	; 0
    3a2a:	05 c0       	rjmp	.+10     	; 0x3a36 <SPI_receive+0x20>
    3a2c:	1e bd       	out	0x2e, r17	; 46
    3a2e:	0d b4       	in	r0, 0x2d	; 45
    3a30:	07 fe       	sbrs	r0, 7
    3a32:	fd cf       	rjmp	.-6      	; 0x3a2e <SPI_receive+0x18>
    3a34:	8e b5       	in	r24, 0x2e	; 46
    3a36:	1f 91       	pop	r17
    3a38:	08 95       	ret

00003a3a <SPKR_beep>:
    3a3a:	9b 01       	movw	r18, r22
    3a3c:	ac 01       	movw	r20, r24
    3a3e:	80 91 6f 02 	lds	r24, 0x026F
    3a42:	88 23       	and	r24, r24
    3a44:	81 f0       	breq	.+32     	; 0x3a66 <SPKR_beep+0x2c>
    3a46:	da 01       	movw	r26, r20
    3a48:	c9 01       	movw	r24, r18
    3a4a:	88 0f       	add	r24, r24
    3a4c:	99 1f       	adc	r25, r25
    3a4e:	aa 1f       	adc	r26, r26
    3a50:	bb 1f       	adc	r27, r27
    3a52:	90 93 7b 02 	sts	0x027B, r25
    3a56:	80 93 7a 02 	sts	0x027A, r24
    3a5a:	21 15       	cp	r18, r1
    3a5c:	31 05       	cpc	r19, r1
    3a5e:	41 05       	cpc	r20, r1
    3a60:	51 05       	cpc	r21, r1
    3a62:	09 f4       	brne	.+2      	; 0x3a66 <SPKR_beep+0x2c>
    3a64:	5f 98       	cbi	0x0b, 7	; 11
    3a66:	08 95       	ret

00003a68 <__SPKR_close>:
    3a68:	82 30       	cpi	r24, 0x02	; 2
    3a6a:	29 f4       	brne	.+10     	; 0x3a76 <__SPKR_close+0xe>
    3a6c:	80 91 81 00 	lds	r24, 0x0081
    3a70:	8e 7f       	andi	r24, 0xFE	; 254
    3a72:	80 93 81 00 	sts	0x0081, r24
    3a76:	80 91 6e 02 	lds	r24, 0x026E
    3a7a:	81 30       	cpi	r24, 0x01	; 1
    3a7c:	31 f4       	brne	.+12     	; 0x3a8a <__SPKR_close+0x22>
    3a7e:	80 91 6f 02 	lds	r24, 0x026F
    3a82:	81 30       	cpi	r24, 0x01	; 1
    3a84:	11 f4       	brne	.+4      	; 0x3a8a <__SPKR_close+0x22>
    3a86:	00 00       	nop
    3a88:	08 95       	ret
    3a8a:	80 91 6e 02 	lds	r24, 0x026E
    3a8e:	81 30       	cpi	r24, 0x01	; 1
    3a90:	21 f0       	breq	.+8      	; 0x3a9a <__SPKR_close+0x32>
    3a92:	80 91 6f 02 	lds	r24, 0x026F
    3a96:	81 30       	cpi	r24, 0x01	; 1
    3a98:	11 f4       	brne	.+4      	; 0x3a9e <__SPKR_close+0x36>
    3a9a:	5f 98       	cbi	0x0b, 7	; 11
    3a9c:	57 98       	cbi	0x0a, 7	; 10
    3a9e:	08 95       	ret

00003aa0 <STEPPER_set_decel_step_values>:
    3aa0:	ef 92       	push	r14
    3aa2:	ff 92       	push	r15
    3aa4:	0f 93       	push	r16
    3aa6:	1f 93       	push	r17
    3aa8:	cf 93       	push	r28
    3aaa:	df 93       	push	r29
    3aac:	eb 01       	movw	r28, r22
    3aae:	88 23       	and	r24, r24
    3ab0:	21 f0       	breq	.+8      	; 0x3aba <STEPPER_set_decel_step_values+0x1a>
    3ab2:	81 30       	cpi	r24, 0x01	; 1
    3ab4:	09 f0       	breq	.+2      	; 0x3ab8 <STEPPER_set_decel_step_values+0x18>
    3ab6:	5a c0       	rjmp	.+180    	; 0x3b6c <STEPPER_set_decel_step_values+0xcc>
    3ab8:	2d c0       	rjmp	.+90     	; 0x3b14 <STEPPER_set_decel_step_values+0x74>
    3aba:	9a 01       	movw	r18, r20
    3abc:	40 e0       	ldi	r20, 0x00	; 0
    3abe:	50 e0       	ldi	r21, 0x00	; 0
    3ac0:	ca 01       	movw	r24, r20
    3ac2:	b9 01       	movw	r22, r18
    3ac4:	0e 94 a7 28 	call	0x514e	; 0x514e <__mulsi3>
    3ac8:	20 91 75 04 	lds	r18, 0x0475
    3acc:	30 91 76 04 	lds	r19, 0x0476
    3ad0:	22 0f       	add	r18, r18
    3ad2:	33 1f       	adc	r19, r19
    3ad4:	40 e0       	ldi	r20, 0x00	; 0
    3ad6:	50 e0       	ldi	r21, 0x00	; 0
    3ad8:	0e 94 d9 28 	call	0x51b2	; 0x51b2 <__udivmodsi4>
    3adc:	79 01       	movw	r14, r18
    3ade:	8a 01       	movw	r16, r20
    3ae0:	a8 01       	movw	r20, r16
    3ae2:	97 01       	movw	r18, r14
    3ae4:	22 0f       	add	r18, r18
    3ae6:	33 1f       	adc	r19, r19
    3ae8:	44 1f       	adc	r20, r20
    3aea:	55 1f       	adc	r21, r21
    3aec:	ce 01       	movw	r24, r28
    3aee:	a0 e0       	ldi	r26, 0x00	; 0
    3af0:	b0 e0       	ldi	r27, 0x00	; 0
    3af2:	82 17       	cp	r24, r18
    3af4:	93 07       	cpc	r25, r19
    3af6:	a4 07       	cpc	r26, r20
    3af8:	b5 07       	cpc	r27, r21
    3afa:	28 f0       	brcs	.+10     	; 0x3b06 <STEPPER_set_decel_step_values+0x66>
    3afc:	f0 92 82 04 	sts	0x0482, r15
    3b00:	e0 92 81 04 	sts	0x0481, r14
    3b04:	33 c0       	rjmp	.+102    	; 0x3b6c <STEPPER_set_decel_step_values+0xcc>
    3b06:	d6 95       	lsr	r29
    3b08:	c7 95       	ror	r28
    3b0a:	d0 93 82 04 	sts	0x0482, r29
    3b0e:	c0 93 81 04 	sts	0x0481, r28
    3b12:	2c c0       	rjmp	.+88     	; 0x3b6c <STEPPER_set_decel_step_values+0xcc>
    3b14:	9a 01       	movw	r18, r20
    3b16:	40 e0       	ldi	r20, 0x00	; 0
    3b18:	50 e0       	ldi	r21, 0x00	; 0
    3b1a:	ca 01       	movw	r24, r20
    3b1c:	b9 01       	movw	r22, r18
    3b1e:	0e 94 a7 28 	call	0x514e	; 0x514e <__mulsi3>
    3b22:	20 91 77 04 	lds	r18, 0x0477
    3b26:	30 91 78 04 	lds	r19, 0x0478
    3b2a:	22 0f       	add	r18, r18
    3b2c:	33 1f       	adc	r19, r19
    3b2e:	40 e0       	ldi	r20, 0x00	; 0
    3b30:	50 e0       	ldi	r21, 0x00	; 0
    3b32:	0e 94 d9 28 	call	0x51b2	; 0x51b2 <__udivmodsi4>
    3b36:	79 01       	movw	r14, r18
    3b38:	8a 01       	movw	r16, r20
    3b3a:	a8 01       	movw	r20, r16
    3b3c:	97 01       	movw	r18, r14
    3b3e:	22 0f       	add	r18, r18
    3b40:	33 1f       	adc	r19, r19
    3b42:	44 1f       	adc	r20, r20
    3b44:	55 1f       	adc	r21, r21
    3b46:	ce 01       	movw	r24, r28
    3b48:	a0 e0       	ldi	r26, 0x00	; 0
    3b4a:	b0 e0       	ldi	r27, 0x00	; 0
    3b4c:	82 17       	cp	r24, r18
    3b4e:	93 07       	cpc	r25, r19
    3b50:	a4 07       	cpc	r26, r20
    3b52:	b5 07       	cpc	r27, r21
    3b54:	28 f0       	brcs	.+10     	; 0x3b60 <STEPPER_set_decel_step_values+0xc0>
    3b56:	f0 92 84 04 	sts	0x0484, r15
    3b5a:	e0 92 83 04 	sts	0x0483, r14
    3b5e:	06 c0       	rjmp	.+12     	; 0x3b6c <STEPPER_set_decel_step_values+0xcc>
    3b60:	d6 95       	lsr	r29
    3b62:	c7 95       	ror	r28
    3b64:	d0 93 84 04 	sts	0x0484, r29
    3b68:	c0 93 83 04 	sts	0x0483, r28
    3b6c:	df 91       	pop	r29
    3b6e:	cf 91       	pop	r28
    3b70:	1f 91       	pop	r17
    3b72:	0f 91       	pop	r16
    3b74:	ff 90       	pop	r15
    3b76:	ef 90       	pop	r14
    3b78:	08 95       	ret

00003b7a <__TIMER0_COMPA_vect>:
    3b7a:	0e 94 cd 1d 	call	0x3b9a	; 0x3b9a <TMRSRVC_tick>
    3b7e:	0e 94 0d 1e 	call	0x3c1a	; 0x3c1a <STEPPER_clk>
    3b82:	0e 94 e6 1d 	call	0x3bcc	; 0x3bcc <SPKR_beep_clk>
    3b86:	08 95       	ret

00003b88 <__TMRSRVC_init>:
    3b88:	84 b5       	in	r24, 0x24	; 36
    3b8a:	82 60       	ori	r24, 0x02	; 2
    3b8c:	84 bd       	out	0x24, r24	; 36
    3b8e:	85 b5       	in	r24, 0x25	; 37
    3b90:	84 60       	ori	r24, 0x04	; 4
    3b92:	85 bd       	out	0x25, r24	; 37
    3b94:	8e e4       	ldi	r24, 0x4E	; 78
    3b96:	87 bd       	out	0x27, r24	; 39
    3b98:	08 95       	ret

00003b9a <TMRSRVC_tick>:
    3b9a:	88 e0       	ldi	r24, 0x08	; 8
    3b9c:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    3ba0:	88 23       	and	r24, r24
    3ba2:	11 f4       	brne	.+4      	; 0x3ba8 <TMRSRVC_tick+0xe>
    3ba4:	84 e0       	ldi	r24, 0x04	; 4
    3ba6:	08 95       	ret
    3ba8:	80 91 7f 02 	lds	r24, 0x027F
    3bac:	88 23       	and	r24, r24
    3bae:	11 f4       	brne	.+4      	; 0x3bb4 <TMRSRVC_tick+0x1a>
    3bb0:	83 e0       	ldi	r24, 0x03	; 3
    3bb2:	08 95       	ret
    3bb4:	80 91 7e 02 	lds	r24, 0x027E
    3bb8:	88 23       	and	r24, r24
    3bba:	11 f0       	breq	.+4      	; 0x3bc0 <TMRSRVC_tick+0x26>
    3bbc:	82 e0       	ldi	r24, 0x02	; 2
    3bbe:	08 95       	ret
    3bc0:	0e 94 7f 20 	call	0x40fe	; 0x40fe <TMRSRVC_process>
    3bc4:	81 30       	cpi	r24, 0x01	; 1
    3bc6:	e1 f3       	breq	.-8      	; 0x3bc0 <TMRSRVC_tick+0x26>
    3bc8:	80 e0       	ldi	r24, 0x00	; 0
    3bca:	08 95       	ret

00003bcc <SPKR_beep_clk>:
    3bcc:	80 91 6f 02 	lds	r24, 0x026F
    3bd0:	81 30       	cpi	r24, 0x01	; 1
    3bd2:	11 f5       	brne	.+68     	; 0x3c18 <SPKR_beep_clk+0x4c>
    3bd4:	80 91 78 02 	lds	r24, 0x0278
    3bd8:	90 91 79 02 	lds	r25, 0x0279
    3bdc:	20 91 7a 02 	lds	r18, 0x027A
    3be0:	30 91 7b 02 	lds	r19, 0x027B
    3be4:	28 0f       	add	r18, r24
    3be6:	39 1f       	adc	r19, r25
    3be8:	30 93 79 02 	sts	0x0279, r19
    3bec:	20 93 78 02 	sts	0x0278, r18
    3bf0:	80 91 78 02 	lds	r24, 0x0278
    3bf4:	90 91 79 02 	lds	r25, 0x0279
    3bf8:	88 5e       	subi	r24, 0xE8	; 232
    3bfa:	93 40       	sbci	r25, 0x03	; 3
    3bfc:	6c f0       	brlt	.+26     	; 0x3c18 <SPKR_beep_clk+0x4c>
    3bfe:	8b b1       	in	r24, 0x0b	; 11
    3c00:	80 58       	subi	r24, 0x80	; 128
    3c02:	8b b9       	out	0x0b, r24	; 11
    3c04:	80 91 78 02 	lds	r24, 0x0278
    3c08:	90 91 79 02 	lds	r25, 0x0279
    3c0c:	88 5e       	subi	r24, 0xE8	; 232
    3c0e:	93 40       	sbci	r25, 0x03	; 3
    3c10:	90 93 79 02 	sts	0x0279, r25
    3c14:	80 93 78 02 	sts	0x0278, r24
    3c18:	08 95       	ret

00003c1a <STEPPER_clk>:
    3c1a:	87 e0       	ldi	r24, 0x07	; 7
    3c1c:	0e 94 0c 14 	call	0x2818	; 0x2818 <SYS_get_state>
    3c20:	81 30       	cpi	r24, 0x01	; 1
    3c22:	09 f0       	breq	.+2      	; 0x3c26 <STEPPER_clk+0xc>
    3c24:	aa c0       	rjmp	.+340    	; 0x3d7a <STEPPER_clk+0x160>
    3c26:	80 91 75 04 	lds	r24, 0x0475
    3c2a:	90 91 76 04 	lds	r25, 0x0476
    3c2e:	89 2b       	or	r24, r25
    3c30:	09 f1       	breq	.+66     	; 0x3c74 <STEPPER_clk+0x5a>
    3c32:	80 91 99 04 	lds	r24, 0x0499
    3c36:	90 91 9a 04 	lds	r25, 0x049A
    3c3a:	20 91 75 04 	lds	r18, 0x0475
    3c3e:	30 91 76 04 	lds	r19, 0x0476
    3c42:	82 0f       	add	r24, r18
    3c44:	93 1f       	adc	r25, r19
    3c46:	90 93 9a 04 	sts	0x049A, r25
    3c4a:	80 93 99 04 	sts	0x0499, r24
    3c4e:	80 91 99 04 	lds	r24, 0x0499
    3c52:	90 91 9a 04 	lds	r25, 0x049A
    3c56:	88 5e       	subi	r24, 0xE8	; 232
    3c58:	93 40       	sbci	r25, 0x03	; 3
    3c5a:	a4 f0       	brlt	.+40     	; 0x3c84 <STEPPER_clk+0x6a>
    3c5c:	80 91 99 04 	lds	r24, 0x0499
    3c60:	90 91 9a 04 	lds	r25, 0x049A
    3c64:	88 5e       	subi	r24, 0xE8	; 232
    3c66:	93 40       	sbci	r25, 0x03	; 3
    3c68:	90 93 9a 04 	sts	0x049A, r25
    3c6c:	80 93 99 04 	sts	0x0499, r24
    3c70:	41 e0       	ldi	r20, 0x01	; 1
    3c72:	09 c0       	rjmp	.+18     	; 0x3c86 <STEPPER_clk+0x6c>
    3c74:	80 91 6d 04 	lds	r24, 0x046D
    3c78:	90 91 6e 04 	lds	r25, 0x046E
    3c7c:	90 93 72 04 	sts	0x0472, r25
    3c80:	80 93 71 04 	sts	0x0471, r24
    3c84:	40 e0       	ldi	r20, 0x00	; 0
    3c86:	80 91 77 04 	lds	r24, 0x0477
    3c8a:	90 91 78 04 	lds	r25, 0x0478
    3c8e:	89 2b       	or	r24, r25
    3c90:	09 f1       	breq	.+66     	; 0x3cd4 <STEPPER_clk+0xba>
    3c92:	80 91 9b 04 	lds	r24, 0x049B
    3c96:	90 91 9c 04 	lds	r25, 0x049C
    3c9a:	20 91 77 04 	lds	r18, 0x0477
    3c9e:	30 91 78 04 	lds	r19, 0x0478
    3ca2:	82 0f       	add	r24, r18
    3ca4:	93 1f       	adc	r25, r19
    3ca6:	90 93 9c 04 	sts	0x049C, r25
    3caa:	80 93 9b 04 	sts	0x049B, r24
    3cae:	80 91 9b 04 	lds	r24, 0x049B
    3cb2:	90 91 9c 04 	lds	r25, 0x049C
    3cb6:	88 5e       	subi	r24, 0xE8	; 232
    3cb8:	93 40       	sbci	r25, 0x03	; 3
    3cba:	a4 f0       	brlt	.+40     	; 0x3ce4 <STEPPER_clk+0xca>
    3cbc:	80 91 9b 04 	lds	r24, 0x049B
    3cc0:	90 91 9c 04 	lds	r25, 0x049C
    3cc4:	88 5e       	subi	r24, 0xE8	; 232
    3cc6:	93 40       	sbci	r25, 0x03	; 3
    3cc8:	90 93 9c 04 	sts	0x049C, r25
    3ccc:	80 93 9b 04 	sts	0x049B, r24
    3cd0:	61 e0       	ldi	r22, 0x01	; 1
    3cd2:	09 c0       	rjmp	.+18     	; 0x3ce6 <STEPPER_clk+0xcc>
    3cd4:	80 91 6f 04 	lds	r24, 0x046F
    3cd8:	90 91 70 04 	lds	r25, 0x0470
    3cdc:	90 93 74 04 	sts	0x0474, r25
    3ce0:	80 93 73 04 	sts	0x0473, r24
    3ce4:	60 e0       	ldi	r22, 0x00	; 0
    3ce6:	84 2f       	mov	r24, r20
    3ce8:	0e 94 be 1e 	call	0x3d7c	; 0x3d7c <STEPPER_process_accel>
    3cec:	80 91 95 04 	lds	r24, 0x0495
    3cf0:	90 91 96 04 	lds	r25, 0x0496
    3cf4:	20 91 71 04 	lds	r18, 0x0471
    3cf8:	30 91 72 04 	lds	r19, 0x0472
    3cfc:	28 0f       	add	r18, r24
    3cfe:	39 1f       	adc	r19, r25
    3d00:	30 93 96 04 	sts	0x0496, r19
    3d04:	20 93 95 04 	sts	0x0495, r18
    3d08:	80 91 95 04 	lds	r24, 0x0495
    3d0c:	90 91 96 04 	lds	r25, 0x0496
    3d10:	88 5e       	subi	r24, 0xE8	; 232
    3d12:	93 40       	sbci	r25, 0x03	; 3
    3d14:	14 f4       	brge	.+4      	; 0x3d1a <STEPPER_clk+0x100>
    3d16:	40 e0       	ldi	r20, 0x00	; 0
    3d18:	0b c0       	rjmp	.+22     	; 0x3d30 <STEPPER_clk+0x116>
    3d1a:	80 91 95 04 	lds	r24, 0x0495
    3d1e:	90 91 96 04 	lds	r25, 0x0496
    3d22:	88 5e       	subi	r24, 0xE8	; 232
    3d24:	93 40       	sbci	r25, 0x03	; 3
    3d26:	90 93 96 04 	sts	0x0496, r25
    3d2a:	80 93 95 04 	sts	0x0495, r24
    3d2e:	41 e0       	ldi	r20, 0x01	; 1
    3d30:	80 91 97 04 	lds	r24, 0x0497
    3d34:	90 91 98 04 	lds	r25, 0x0498
    3d38:	20 91 73 04 	lds	r18, 0x0473
    3d3c:	30 91 74 04 	lds	r19, 0x0474
    3d40:	28 0f       	add	r18, r24
    3d42:	39 1f       	adc	r19, r25
    3d44:	30 93 98 04 	sts	0x0498, r19
    3d48:	20 93 97 04 	sts	0x0497, r18
    3d4c:	80 91 97 04 	lds	r24, 0x0497
    3d50:	90 91 98 04 	lds	r25, 0x0498
    3d54:	88 5e       	subi	r24, 0xE8	; 232
    3d56:	93 40       	sbci	r25, 0x03	; 3
    3d58:	14 f4       	brge	.+4      	; 0x3d5e <STEPPER_clk+0x144>
    3d5a:	60 e0       	ldi	r22, 0x00	; 0
    3d5c:	0b c0       	rjmp	.+22     	; 0x3d74 <STEPPER_clk+0x15a>
    3d5e:	80 91 97 04 	lds	r24, 0x0497
    3d62:	90 91 98 04 	lds	r25, 0x0498
    3d66:	88 5e       	subi	r24, 0xE8	; 232
    3d68:	93 40       	sbci	r25, 0x03	; 3
    3d6a:	90 93 98 04 	sts	0x0498, r25
    3d6e:	80 93 97 04 	sts	0x0497, r24
    3d72:	61 e0       	ldi	r22, 0x01	; 1
    3d74:	84 2f       	mov	r24, r20
    3d76:	0e 94 03 1f 	call	0x3e06	; 0x3e06 <STEPPER_process_run_mode>
    3d7a:	08 95       	ret

00003d7c <STEPPER_process_accel>:
    3d7c:	88 23       	and	r24, r24
    3d7e:	f1 f0       	breq	.+60     	; 0x3dbc <STEPPER_process_accel+0x40>
    3d80:	20 91 6d 04 	lds	r18, 0x046D
    3d84:	30 91 6e 04 	lds	r19, 0x046E
    3d88:	80 91 71 04 	lds	r24, 0x0471
    3d8c:	90 91 72 04 	lds	r25, 0x0472
    3d90:	28 1b       	sub	r18, r24
    3d92:	39 0b       	sbc	r19, r25
    3d94:	12 16       	cp	r1, r18
    3d96:	13 06       	cpc	r1, r19
    3d98:	34 f4       	brge	.+12     	; 0x3da6 <STEPPER_process_accel+0x2a>
    3d9a:	80 91 71 04 	lds	r24, 0x0471
    3d9e:	90 91 72 04 	lds	r25, 0x0472
    3da2:	01 96       	adiw	r24, 0x01	; 1
    3da4:	07 c0       	rjmp	.+14     	; 0x3db4 <STEPPER_process_accel+0x38>
    3da6:	23 2b       	or	r18, r19
    3da8:	49 f0       	breq	.+18     	; 0x3dbc <STEPPER_process_accel+0x40>
    3daa:	80 91 71 04 	lds	r24, 0x0471
    3dae:	90 91 72 04 	lds	r25, 0x0472
    3db2:	01 97       	sbiw	r24, 0x01	; 1
    3db4:	90 93 72 04 	sts	0x0472, r25
    3db8:	80 93 71 04 	sts	0x0471, r24
    3dbc:	66 23       	and	r22, r22
    3dbe:	11 f1       	breq	.+68     	; 0x3e04 <STEPPER_process_accel+0x88>
    3dc0:	20 91 6f 04 	lds	r18, 0x046F
    3dc4:	30 91 70 04 	lds	r19, 0x0470
    3dc8:	80 91 73 04 	lds	r24, 0x0473
    3dcc:	90 91 74 04 	lds	r25, 0x0474
    3dd0:	28 1b       	sub	r18, r24
    3dd2:	39 0b       	sbc	r19, r25
    3dd4:	12 16       	cp	r1, r18
    3dd6:	13 06       	cpc	r1, r19
    3dd8:	54 f4       	brge	.+20     	; 0x3dee <STEPPER_process_accel+0x72>
    3dda:	80 91 73 04 	lds	r24, 0x0473
    3dde:	90 91 74 04 	lds	r25, 0x0474
    3de2:	01 96       	adiw	r24, 0x01	; 1
    3de4:	90 93 74 04 	sts	0x0474, r25
    3de8:	80 93 73 04 	sts	0x0473, r24
    3dec:	08 95       	ret
    3dee:	23 2b       	or	r18, r19
    3df0:	49 f0       	breq	.+18     	; 0x3e04 <STEPPER_process_accel+0x88>
    3df2:	80 91 73 04 	lds	r24, 0x0473
    3df6:	90 91 74 04 	lds	r25, 0x0474
    3dfa:	01 97       	sbiw	r24, 0x01	; 1
    3dfc:	90 93 74 04 	sts	0x0474, r25
    3e00:	80 93 73 04 	sts	0x0473, r24
    3e04:	08 95       	ret

00003e06 <STEPPER_process_run_mode>:
    3e06:	0f 93       	push	r16
    3e08:	1f 93       	push	r17
    3e0a:	18 2f       	mov	r17, r24
    3e0c:	06 2f       	mov	r16, r22
    3e0e:	80 91 a1 04 	lds	r24, 0x04A1
    3e12:	88 23       	and	r24, r24
    3e14:	09 f0       	breq	.+2      	; 0x3e18 <STEPPER_process_run_mode+0x12>
    3e16:	e7 c0       	rjmp	.+462    	; 0x3fe6 <STEPPER_process_run_mode+0x1e0>
    3e18:	80 91 89 04 	lds	r24, 0x0489
    3e1c:	88 23       	and	r24, r24
    3e1e:	09 f0       	breq	.+2      	; 0x3e22 <STEPPER_process_run_mode+0x1c>
    3e20:	5a c0       	rjmp	.+180    	; 0x3ed6 <STEPPER_process_run_mode+0xd0>
    3e22:	80 91 71 04 	lds	r24, 0x0471
    3e26:	90 91 72 04 	lds	r25, 0x0472
    3e2a:	89 2b       	or	r24, r25
    3e2c:	e9 f4       	brne	.+58     	; 0x3e68 <STEPPER_process_run_mode+0x62>
    3e2e:	80 91 80 02 	lds	r24, 0x0280
    3e32:	83 7e       	andi	r24, 0xE3	; 227
    3e34:	80 93 80 02 	sts	0x0280, r24
    3e38:	10 92 92 04 	sts	0x0492, r1
    3e3c:	80 91 9d 04 	lds	r24, 0x049D
    3e40:	88 23       	and	r24, r24
    3e42:	09 f4       	brne	.+2      	; 0x3e46 <STEPPER_process_run_mode+0x40>
    3e44:	5d c0       	rjmp	.+186    	; 0x3f00 <STEPPER_process_run_mode+0xfa>
    3e46:	60 91 8b 04 	lds	r22, 0x048B
    3e4a:	80 e0       	ldi	r24, 0x00	; 0
    3e4c:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <STEPPER_stop>
    3e50:	e0 91 9f 04 	lds	r30, 0x049F
    3e54:	f0 91 a0 04 	lds	r31, 0x04A0
    3e58:	30 97       	sbiw	r30, 0x00	; 0
    3e5a:	09 f4       	brne	.+2      	; 0x3e5e <STEPPER_process_run_mode+0x58>
    3e5c:	51 c0       	rjmp	.+162    	; 0x3f00 <STEPPER_process_run_mode+0xfa>
    3e5e:	81 e0       	ldi	r24, 0x01	; 1
    3e60:	80 83       	st	Z, r24
    3e62:	10 92 9d 04 	sts	0x049D, r1
    3e66:	4c c0       	rjmp	.+152    	; 0x3f00 <STEPPER_process_run_mode+0xfa>
    3e68:	80 91 6b 04 	lds	r24, 0x046B
    3e6c:	81 30       	cpi	r24, 0x01	; 1
    3e6e:	41 f4       	brne	.+16     	; 0x3e80 <STEPPER_process_run_mode+0x7a>
    3e70:	80 91 7d 04 	lds	r24, 0x047D
    3e74:	90 91 7e 04 	lds	r25, 0x047E
    3e78:	01 97       	sbiw	r24, 0x01	; 1
    3e7a:	11 f4       	brne	.+4      	; 0x3e80 <STEPPER_process_run_mode+0x7a>
    3e7c:	11 e0       	ldi	r17, 0x01	; 1
    3e7e:	02 c0       	rjmp	.+4      	; 0x3e84 <STEPPER_process_run_mode+0x7e>
    3e80:	11 23       	and	r17, r17
    3e82:	f1 f1       	breq	.+124    	; 0x3f00 <STEPPER_process_run_mode+0xfa>
    3e84:	e0 91 90 04 	lds	r30, 0x0490
    3e88:	f0 e0       	ldi	r31, 0x00	; 0
    3e8a:	e1 57       	subi	r30, 0x71	; 113
    3e8c:	fe 4f       	sbci	r31, 0xFE	; 254
    3e8e:	90 91 80 02 	lds	r25, 0x0280
    3e92:	93 7e       	andi	r25, 0xE3	; 227
    3e94:	80 81       	ld	r24, Z
    3e96:	89 2b       	or	r24, r25
    3e98:	80 93 80 02 	sts	0x0280, r24
    3e9c:	80 91 8e 04 	lds	r24, 0x048E
    3ea0:	88 23       	and	r24, r24
    3ea2:	21 f4       	brne	.+8      	; 0x3eac <STEPPER_process_run_mode+0xa6>
    3ea4:	80 91 90 04 	lds	r24, 0x0490
    3ea8:	8f 5f       	subi	r24, 0xFF	; 255
    3eaa:	03 c0       	rjmp	.+6      	; 0x3eb2 <STEPPER_process_run_mode+0xac>
    3eac:	80 91 90 04 	lds	r24, 0x0490
    3eb0:	81 50       	subi	r24, 0x01	; 1
    3eb2:	80 93 90 04 	sts	0x0490, r24
    3eb6:	80 91 90 04 	lds	r24, 0x0490
    3eba:	83 70       	andi	r24, 0x03	; 3
    3ebc:	80 93 90 04 	sts	0x0490, r24
    3ec0:	81 e0       	ldi	r24, 0x01	; 1
    3ec2:	80 93 92 04 	sts	0x0492, r24
    3ec6:	80 91 6b 04 	lds	r24, 0x046B
    3eca:	81 30       	cpi	r24, 0x01	; 1
    3ecc:	c9 f4       	brne	.+50     	; 0x3f00 <STEPPER_process_run_mode+0xfa>
    3ece:	80 e0       	ldi	r24, 0x00	; 0
    3ed0:	0e 94 06 20 	call	0x400c	; 0x400c <STEPPER_process_step_mode>
    3ed4:	15 c0       	rjmp	.+42     	; 0x3f00 <STEPPER_process_run_mode+0xfa>
    3ed6:	90 91 80 02 	lds	r25, 0x0280
    3eda:	93 7e       	andi	r25, 0xE3	; 227
    3edc:	90 93 80 02 	sts	0x0280, r25
    3ee0:	e0 91 90 04 	lds	r30, 0x0490
    3ee4:	f0 e0       	ldi	r31, 0x00	; 0
    3ee6:	e1 57       	subi	r30, 0x71	; 113
    3ee8:	fe 4f       	sbci	r31, 0xFE	; 254
    3eea:	80 81       	ld	r24, Z
    3eec:	89 2b       	or	r24, r25
    3eee:	80 93 80 02 	sts	0x0280, r24
    3ef2:	82 e0       	ldi	r24, 0x02	; 2
    3ef4:	80 93 92 04 	sts	0x0492, r24
    3ef8:	10 92 72 04 	sts	0x0472, r1
    3efc:	10 92 71 04 	sts	0x0471, r1
    3f00:	80 91 8a 04 	lds	r24, 0x048A
    3f04:	88 23       	and	r24, r24
    3f06:	09 f0       	breq	.+2      	; 0x3f0a <STEPPER_process_run_mode+0x104>
    3f08:	59 c0       	rjmp	.+178    	; 0x3fbc <STEPPER_process_run_mode+0x1b6>
    3f0a:	80 91 73 04 	lds	r24, 0x0473
    3f0e:	90 91 74 04 	lds	r25, 0x0474
    3f12:	89 2b       	or	r24, r25
    3f14:	e9 f4       	brne	.+58     	; 0x3f50 <STEPPER_process_run_mode+0x14a>
    3f16:	80 91 80 02 	lds	r24, 0x0280
    3f1a:	8f 71       	andi	r24, 0x1F	; 31
    3f1c:	80 93 80 02 	sts	0x0280, r24
    3f20:	10 92 93 04 	sts	0x0493, r1
    3f24:	80 91 9e 04 	lds	r24, 0x049E
    3f28:	88 23       	and	r24, r24
    3f2a:	09 f4       	brne	.+2      	; 0x3f2e <STEPPER_process_run_mode+0x128>
    3f2c:	5c c0       	rjmp	.+184    	; 0x3fe6 <STEPPER_process_run_mode+0x1e0>
    3f2e:	60 91 8c 04 	lds	r22, 0x048C
    3f32:	81 e0       	ldi	r24, 0x01	; 1
    3f34:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <STEPPER_stop>
    3f38:	e0 91 9f 04 	lds	r30, 0x049F
    3f3c:	f0 91 a0 04 	lds	r31, 0x04A0
    3f40:	30 97       	sbiw	r30, 0x00	; 0
    3f42:	09 f4       	brne	.+2      	; 0x3f46 <STEPPER_process_run_mode+0x140>
    3f44:	50 c0       	rjmp	.+160    	; 0x3fe6 <STEPPER_process_run_mode+0x1e0>
    3f46:	81 e0       	ldi	r24, 0x01	; 1
    3f48:	81 83       	std	Z+1, r24	; 0x01
    3f4a:	10 92 9e 04 	sts	0x049E, r1
    3f4e:	4b c0       	rjmp	.+150    	; 0x3fe6 <STEPPER_process_run_mode+0x1e0>
    3f50:	80 91 6c 04 	lds	r24, 0x046C
    3f54:	81 30       	cpi	r24, 0x01	; 1
    3f56:	41 f4       	brne	.+16     	; 0x3f68 <STEPPER_process_run_mode+0x162>
    3f58:	80 91 7f 04 	lds	r24, 0x047F
    3f5c:	90 91 80 04 	lds	r25, 0x0480
    3f60:	01 97       	sbiw	r24, 0x01	; 1
    3f62:	11 f4       	brne	.+4      	; 0x3f68 <STEPPER_process_run_mode+0x162>
    3f64:	01 e0       	ldi	r16, 0x01	; 1
    3f66:	02 c0       	rjmp	.+4      	; 0x3f6c <STEPPER_process_run_mode+0x166>
    3f68:	00 23       	and	r16, r16
    3f6a:	e9 f1       	breq	.+122    	; 0x3fe6 <STEPPER_process_run_mode+0x1e0>
    3f6c:	e0 91 91 04 	lds	r30, 0x0491
    3f70:	f0 e0       	ldi	r31, 0x00	; 0
    3f72:	ed 56       	subi	r30, 0x6D	; 109
    3f74:	fe 4f       	sbci	r31, 0xFE	; 254
    3f76:	90 91 80 02 	lds	r25, 0x0280
    3f7a:	9f 71       	andi	r25, 0x1F	; 31
    3f7c:	80 81       	ld	r24, Z
    3f7e:	89 2b       	or	r24, r25
    3f80:	80 93 80 02 	sts	0x0280, r24
    3f84:	80 91 8f 04 	lds	r24, 0x048F
    3f88:	88 23       	and	r24, r24
    3f8a:	21 f4       	brne	.+8      	; 0x3f94 <STEPPER_process_run_mode+0x18e>
    3f8c:	80 91 91 04 	lds	r24, 0x0491
    3f90:	8f 5f       	subi	r24, 0xFF	; 255
    3f92:	03 c0       	rjmp	.+6      	; 0x3f9a <STEPPER_process_run_mode+0x194>
    3f94:	80 91 91 04 	lds	r24, 0x0491
    3f98:	81 50       	subi	r24, 0x01	; 1
    3f9a:	80 93 91 04 	sts	0x0491, r24
    3f9e:	80 91 91 04 	lds	r24, 0x0491
    3fa2:	83 70       	andi	r24, 0x03	; 3
    3fa4:	80 93 91 04 	sts	0x0491, r24
    3fa8:	81 e0       	ldi	r24, 0x01	; 1
    3faa:	80 93 93 04 	sts	0x0493, r24
    3fae:	80 91 6c 04 	lds	r24, 0x046C
    3fb2:	81 30       	cpi	r24, 0x01	; 1
    3fb4:	c1 f4       	brne	.+48     	; 0x3fe6 <STEPPER_process_run_mode+0x1e0>
    3fb6:	0e 94 06 20 	call	0x400c	; 0x400c <STEPPER_process_step_mode>
    3fba:	15 c0       	rjmp	.+42     	; 0x3fe6 <STEPPER_process_run_mode+0x1e0>
    3fbc:	90 91 80 02 	lds	r25, 0x0280
    3fc0:	9f 71       	andi	r25, 0x1F	; 31
    3fc2:	90 93 80 02 	sts	0x0280, r25
    3fc6:	e0 91 91 04 	lds	r30, 0x0491
    3fca:	f0 e0       	ldi	r31, 0x00	; 0
    3fcc:	ed 56       	subi	r30, 0x6D	; 109
    3fce:	fe 4f       	sbci	r31, 0xFE	; 254
    3fd0:	80 81       	ld	r24, Z
    3fd2:	89 2b       	or	r24, r25
    3fd4:	80 93 80 02 	sts	0x0280, r24
    3fd8:	82 e0       	ldi	r24, 0x02	; 2
    3fda:	80 93 93 04 	sts	0x0493, r24
    3fde:	10 92 74 04 	sts	0x0474, r1
    3fe2:	10 92 73 04 	sts	0x0473, r1
    3fe6:	80 91 94 04 	lds	r24, 0x0494
    3fea:	88 23       	and	r24, r24
    3fec:	31 f4       	brne	.+12     	; 0x3ffa <STEPPER_process_run_mode+0x1f4>
    3fee:	80 e8       	ldi	r24, 0x80	; 128
    3ff0:	92 e0       	ldi	r25, 0x02	; 2
    3ff2:	61 2f       	mov	r22, r17
    3ff4:	40 2f       	mov	r20, r16
    3ff6:	0e 94 ed 20 	call	0x41da	; 0x41da <STEPPER_process_pwm>
    3ffa:	88 b1       	in	r24, 0x08	; 8
    3ffc:	83 70       	andi	r24, 0x03	; 3
    3ffe:	90 91 80 02 	lds	r25, 0x0280
    4002:	89 2b       	or	r24, r25
    4004:	88 b9       	out	0x08, r24	; 8
    4006:	1f 91       	pop	r17
    4008:	0f 91       	pop	r16
    400a:	08 95       	ret

0000400c <STEPPER_process_step_mode>:
    400c:	88 23       	and	r24, r24
    400e:	21 f0       	breq	.+8      	; 0x4018 <STEPPER_process_step_mode+0xc>
    4010:	81 30       	cpi	r24, 0x01	; 1
    4012:	09 f0       	breq	.+2      	; 0x4016 <STEPPER_process_step_mode+0xa>
    4014:	4e c0       	rjmp	.+156    	; 0x40b2 <STEPPER_process_step_mode+0xa6>
    4016:	27 c0       	rjmp	.+78     	; 0x4066 <STEPPER_process_step_mode+0x5a>
    4018:	80 91 7d 04 	lds	r24, 0x047D
    401c:	90 91 7e 04 	lds	r25, 0x047E
    4020:	89 2b       	or	r24, r25
    4022:	49 f0       	breq	.+18     	; 0x4036 <STEPPER_process_step_mode+0x2a>
    4024:	80 91 7d 04 	lds	r24, 0x047D
    4028:	90 91 7e 04 	lds	r25, 0x047E
    402c:	01 97       	sbiw	r24, 0x01	; 1
    402e:	90 93 7e 04 	sts	0x047E, r25
    4032:	80 93 7d 04 	sts	0x047D, r24
    4036:	80 91 9d 04 	lds	r24, 0x049D
    403a:	88 23       	and	r24, r24
    403c:	d1 f5       	brne	.+116    	; 0x40b2 <STEPPER_process_step_mode+0xa6>
    403e:	20 91 7d 04 	lds	r18, 0x047D
    4042:	30 91 7e 04 	lds	r19, 0x047E
    4046:	80 91 81 04 	lds	r24, 0x0481
    404a:	90 91 82 04 	lds	r25, 0x0482
    404e:	28 17       	cp	r18, r24
    4050:	39 07       	cpc	r19, r25
    4052:	79 f5       	brne	.+94     	; 0x40b2 <STEPPER_process_step_mode+0xa6>
    4054:	80 e0       	ldi	r24, 0x00	; 0
    4056:	60 e0       	ldi	r22, 0x00	; 0
    4058:	70 e0       	ldi	r23, 0x00	; 0
    405a:	0e 94 10 13 	call	0x2620	; 0x2620 <STEPPER_set_speed>
    405e:	81 e0       	ldi	r24, 0x01	; 1
    4060:	80 93 9d 04 	sts	0x049D, r24
    4064:	08 95       	ret
    4066:	80 91 7f 04 	lds	r24, 0x047F
    406a:	90 91 80 04 	lds	r25, 0x0480
    406e:	89 2b       	or	r24, r25
    4070:	49 f0       	breq	.+18     	; 0x4084 <STEPPER_process_step_mode+0x78>
    4072:	80 91 7f 04 	lds	r24, 0x047F
    4076:	90 91 80 04 	lds	r25, 0x0480
    407a:	01 97       	sbiw	r24, 0x01	; 1
    407c:	90 93 80 04 	sts	0x0480, r25
    4080:	80 93 7f 04 	sts	0x047F, r24
    4084:	80 91 9e 04 	lds	r24, 0x049E
    4088:	88 23       	and	r24, r24
    408a:	99 f4       	brne	.+38     	; 0x40b2 <STEPPER_process_step_mode+0xa6>
    408c:	20 91 7f 04 	lds	r18, 0x047F
    4090:	30 91 80 04 	lds	r19, 0x0480
    4094:	80 91 83 04 	lds	r24, 0x0483
    4098:	90 91 84 04 	lds	r25, 0x0484
    409c:	28 17       	cp	r18, r24
    409e:	39 07       	cpc	r19, r25
    40a0:	41 f4       	brne	.+16     	; 0x40b2 <STEPPER_process_step_mode+0xa6>
    40a2:	81 e0       	ldi	r24, 0x01	; 1
    40a4:	60 e0       	ldi	r22, 0x00	; 0
    40a6:	70 e0       	ldi	r23, 0x00	; 0
    40a8:	0e 94 10 13 	call	0x2620	; 0x2620 <STEPPER_set_speed>
    40ac:	81 e0       	ldi	r24, 0x01	; 1
    40ae:	80 93 9e 04 	sts	0x049E, r24
    40b2:	08 95       	ret

000040b4 <STEPPER_stop>:
    40b4:	0f 93       	push	r16
    40b6:	1f 93       	push	r17
    40b8:	18 2f       	mov	r17, r24
    40ba:	06 2f       	mov	r16, r22
    40bc:	66 23       	and	r22, r22
    40be:	49 f4       	brne	.+18     	; 0x40d2 <STEPPER_stop+0x1e>
    40c0:	60 e0       	ldi	r22, 0x00	; 0
    40c2:	70 e0       	ldi	r23, 0x00	; 0
    40c4:	0e 94 10 13 	call	0x2620	; 0x2620 <STEPPER_set_speed>
    40c8:	81 2f       	mov	r24, r17
    40ca:	60 e0       	ldi	r22, 0x00	; 0
    40cc:	70 e0       	ldi	r23, 0x00	; 0
    40ce:	0e 94 67 1b 	call	0x36ce	; 0x36ce <STEPPER_set_steps>
    40d2:	81 e0       	ldi	r24, 0x01	; 1
    40d4:	80 93 a1 04 	sts	0x04A1, r24
    40d8:	11 30       	cpi	r17, 0x01	; 1
    40da:	51 f0       	breq	.+20     	; 0x40f0 <STEPPER_stop+0x3c>
    40dc:	11 30       	cpi	r17, 0x01	; 1
    40de:	18 f0       	brcs	.+6      	; 0x40e6 <STEPPER_stop+0x32>
    40e0:	12 30       	cpi	r17, 0x02	; 2
    40e2:	41 f4       	brne	.+16     	; 0x40f4 <STEPPER_stop+0x40>
    40e4:	03 c0       	rjmp	.+6      	; 0x40ec <STEPPER_stop+0x38>
    40e6:	00 93 89 04 	sts	0x0489, r16
    40ea:	04 c0       	rjmp	.+8      	; 0x40f4 <STEPPER_stop+0x40>
    40ec:	00 93 89 04 	sts	0x0489, r16
    40f0:	00 93 8a 04 	sts	0x048A, r16
    40f4:	10 92 a1 04 	sts	0x04A1, r1
    40f8:	1f 91       	pop	r17
    40fa:	0f 91       	pop	r16
    40fc:	08 95       	ret

000040fe <TMRSRVC_process>:
    40fe:	ff 92       	push	r15
    4100:	0f 93       	push	r16
    4102:	1f 93       	push	r17
    4104:	cf 93       	push	r28
    4106:	df 93       	push	r29
    4108:	80 91 db 04 	lds	r24, 0x04DB
    410c:	88 23       	and	r24, r24
    410e:	09 f4       	brne	.+2      	; 0x4112 <TMRSRVC_process+0x14>
    4110:	59 c0       	rjmp	.+178    	; 0x41c4 <TMRSRVC_process+0xc6>
    4112:	00 91 dc 04 	lds	r16, 0x04DC
    4116:	10 91 dd 04 	lds	r17, 0x04DD
    411a:	f8 01       	movw	r30, r16
    411c:	c0 81       	ld	r28, Z
    411e:	d1 81       	ldd	r29, Z+1	; 0x01
    4120:	8c 81       	ldd	r24, Y+4	; 0x04
    4122:	9d 81       	ldd	r25, Y+5	; 0x05
    4124:	01 97       	sbiw	r24, 0x01	; 1
    4126:	9d 83       	std	Y+5, r25	; 0x05
    4128:	8c 83       	std	Y+4, r24	; 0x04
    412a:	18 16       	cp	r1, r24
    412c:	19 06       	cpc	r1, r25
    412e:	0c f4       	brge	.+2      	; 0x4132 <TMRSRVC_process+0x34>
    4130:	49 c0       	rjmp	.+146    	; 0x41c4 <TMRSRVC_process+0xc6>
    4132:	89 81       	ldd	r24, Y+1	; 0x01
    4134:	80 ff       	sbrs	r24, 0
    4136:	05 c0       	rjmp	.+10     	; 0x4142 <TMRSRVC_process+0x44>
    4138:	8e 81       	ldd	r24, Y+6	; 0x06
    413a:	88 23       	and	r24, r24
    413c:	11 f4       	brne	.+4      	; 0x4142 <TMRSRVC_process+0x44>
    413e:	81 e0       	ldi	r24, 0x01	; 1
    4140:	8e 83       	std	Y+6, r24	; 0x06
    4142:	89 81       	ldd	r24, Y+1	; 0x01
    4144:	81 ff       	sbrs	r24, 1
    4146:	03 c0       	rjmp	.+6      	; 0x414e <TMRSRVC_process+0x50>
    4148:	ef 81       	ldd	r30, Y+7	; 0x07
    414a:	f8 85       	ldd	r31, Y+8	; 0x08
    414c:	09 95       	icall
    414e:	80 91 db 04 	lds	r24, 0x04DB
    4152:	82 30       	cpi	r24, 0x02	; 2
    4154:	a8 f0       	brcs	.+42     	; 0x4180 <TMRSRVC_process+0x82>
    4156:	f8 01       	movw	r30, r16
    4158:	82 81       	ldd	r24, Z+2	; 0x02
    415a:	93 81       	ldd	r25, Z+3	; 0x03
    415c:	90 93 dd 04 	sts	0x04DD, r25
    4160:	80 93 dc 04 	sts	0x04DC, r24
    4164:	13 82       	std	Z+3, r1	; 0x03
    4166:	12 82       	std	Z+2, r1	; 0x02
    4168:	e0 91 00 00 	lds	r30, 0x0000
    416c:	f0 91 01 00 	lds	r31, 0x0001
    4170:	84 81       	ldd	r24, Z+4	; 0x04
    4172:	95 81       	ldd	r25, Z+5	; 0x05
    4174:	18 16       	cp	r1, r24
    4176:	19 06       	cpc	r1, r25
    4178:	3c f0       	brlt	.+14     	; 0x4188 <TMRSRVC_process+0x8a>
    417a:	ff 24       	eor	r15, r15
    417c:	f3 94       	inc	r15
    417e:	05 c0       	rjmp	.+10     	; 0x418a <TMRSRVC_process+0x8c>
    4180:	10 92 dd 04 	sts	0x04DD, r1
    4184:	10 92 dc 04 	sts	0x04DC, r1
    4188:	ff 24       	eor	r15, r15
    418a:	80 91 db 04 	lds	r24, 0x04DB
    418e:	81 50       	subi	r24, 0x01	; 1
    4190:	80 93 db 04 	sts	0x04DB, r24
    4194:	80 91 db 04 	lds	r24, 0x04DB
    4198:	88 23       	and	r24, r24
    419a:	11 f4       	brne	.+4      	; 0x41a0 <TMRSRVC_process+0xa2>
    419c:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <TMRSRVC_stop>
    41a0:	89 81       	ldd	r24, Y+1	; 0x01
    41a2:	82 ff       	sbrs	r24, 2
    41a4:	08 c0       	rjmp	.+16     	; 0x41b6 <TMRSRVC_process+0xb8>
    41a6:	8a 81       	ldd	r24, Y+2	; 0x02
    41a8:	9b 81       	ldd	r25, Y+3	; 0x03
    41aa:	9d 83       	std	Y+5, r25	; 0x05
    41ac:	8c 83       	std	Y+4, r24	; 0x04
    41ae:	c8 01       	movw	r24, r16
    41b0:	0e 94 28 1c 	call	0x3850	; 0x3850 <TMRSRVC_insert>
    41b4:	08 c0       	rjmp	.+16     	; 0x41c6 <TMRSRVC_process+0xc8>
    41b6:	c8 01       	movw	r24, r16
    41b8:	0e 94 f3 29 	call	0x53e6	; 0x53e6 <free>
    41bc:	89 81       	ldd	r24, Y+1	; 0x01
    41be:	8f 7e       	andi	r24, 0xEF	; 239
    41c0:	89 83       	std	Y+1, r24	; 0x01
    41c2:	01 c0       	rjmp	.+2      	; 0x41c6 <TMRSRVC_process+0xc8>
    41c4:	ff 24       	eor	r15, r15
    41c6:	8f 2d       	mov	r24, r15
    41c8:	df 91       	pop	r29
    41ca:	cf 91       	pop	r28
    41cc:	1f 91       	pop	r17
    41ce:	0f 91       	pop	r16
    41d0:	ff 90       	pop	r15
    41d2:	08 95       	ret

000041d4 <TMRSRVC_stop>:
    41d4:	10 92 7f 02 	sts	0x027F, r1
    41d8:	08 95       	ret

000041da <STEPPER_process_pwm>:
    41da:	fc 01       	movw	r30, r24
    41dc:	80 91 92 04 	lds	r24, 0x0492
    41e0:	82 30       	cpi	r24, 0x02	; 2
    41e2:	69 f4       	brne	.+26     	; 0x41fe <STEPPER_process_pwm+0x24>
    41e4:	80 91 84 02 	lds	r24, 0x0284
    41e8:	91 e0       	ldi	r25, 0x01	; 1
    41ea:	89 27       	eor	r24, r25
    41ec:	80 93 84 02 	sts	0x0284, r24
    41f0:	88 23       	and	r24, r24
    41f2:	09 f0       	breq	.+2      	; 0x41f6 <STEPPER_process_pwm+0x1c>
    41f4:	3e c0       	rjmp	.+124    	; 0x4272 <STEPPER_process_pwm+0x98>
    41f6:	80 81       	ld	r24, Z
    41f8:	83 7e       	andi	r24, 0xE3	; 227
    41fa:	80 83       	st	Z, r24
    41fc:	3a c0       	rjmp	.+116    	; 0x4272 <STEPPER_process_pwm+0x98>
    41fe:	80 91 71 04 	lds	r24, 0x0471
    4202:	90 91 72 04 	lds	r25, 0x0472
    4206:	c3 97       	sbiw	r24, 0x33	; 51
    4208:	a4 f5       	brge	.+104    	; 0x4272 <STEPPER_process_pwm+0x98>
    420a:	66 23       	and	r22, r22
    420c:	d1 f0       	breq	.+52     	; 0x4242 <STEPPER_process_pwm+0x68>
    420e:	20 91 71 04 	lds	r18, 0x0471
    4212:	30 91 72 04 	lds	r19, 0x0472
    4216:	80 e6       	ldi	r24, 0x60	; 96
    4218:	90 e0       	ldi	r25, 0x00	; 0
    421a:	bc 01       	movw	r22, r24
    421c:	26 9f       	mul	r18, r22
    421e:	c0 01       	movw	r24, r0
    4220:	27 9f       	mul	r18, r23
    4222:	90 0d       	add	r25, r0
    4224:	36 9f       	mul	r19, r22
    4226:	90 0d       	add	r25, r0
    4228:	11 24       	eor	r1, r1
    422a:	88 0f       	add	r24, r24
    422c:	89 2f       	mov	r24, r25
    422e:	88 1f       	adc	r24, r24
    4230:	99 0b       	sbc	r25, r25
    4232:	90 93 86 04 	sts	0x0486, r25
    4236:	80 93 85 04 	sts	0x0485, r24
    423a:	81 e0       	ldi	r24, 0x01	; 1
    423c:	80 93 82 02 	sts	0x0282, r24
    4240:	18 c0       	rjmp	.+48     	; 0x4272 <STEPPER_process_pwm+0x98>
    4242:	80 91 82 02 	lds	r24, 0x0282
    4246:	88 23       	and	r24, r24
    4248:	a1 f0       	breq	.+40     	; 0x4272 <STEPPER_process_pwm+0x98>
    424a:	80 91 85 04 	lds	r24, 0x0485
    424e:	90 91 86 04 	lds	r25, 0x0486
    4252:	01 97       	sbiw	r24, 0x01	; 1
    4254:	90 93 86 04 	sts	0x0486, r25
    4258:	80 93 85 04 	sts	0x0485, r24
    425c:	80 91 85 04 	lds	r24, 0x0485
    4260:	90 91 86 04 	lds	r25, 0x0486
    4264:	89 2b       	or	r24, r25
    4266:	29 f4       	brne	.+10     	; 0x4272 <STEPPER_process_pwm+0x98>
    4268:	80 81       	ld	r24, Z
    426a:	83 7e       	andi	r24, 0xE3	; 227
    426c:	80 83       	st	Z, r24
    426e:	10 92 82 02 	sts	0x0282, r1
    4272:	80 91 93 04 	lds	r24, 0x0493
    4276:	82 30       	cpi	r24, 0x02	; 2
    4278:	69 f4       	brne	.+26     	; 0x4294 <STEPPER_process_pwm+0xba>
    427a:	80 91 83 02 	lds	r24, 0x0283
    427e:	91 e0       	ldi	r25, 0x01	; 1
    4280:	89 27       	eor	r24, r25
    4282:	80 93 83 02 	sts	0x0283, r24
    4286:	88 23       	and	r24, r24
    4288:	09 f0       	breq	.+2      	; 0x428c <STEPPER_process_pwm+0xb2>
    428a:	3e c0       	rjmp	.+124    	; 0x4308 <STEPPER_process_pwm+0x12e>
    428c:	80 81       	ld	r24, Z
    428e:	8f 71       	andi	r24, 0x1F	; 31
    4290:	80 83       	st	Z, r24
    4292:	08 95       	ret
    4294:	80 91 73 04 	lds	r24, 0x0473
    4298:	90 91 74 04 	lds	r25, 0x0474
    429c:	c3 97       	sbiw	r24, 0x33	; 51
    429e:	a4 f5       	brge	.+104    	; 0x4308 <STEPPER_process_pwm+0x12e>
    42a0:	44 23       	and	r20, r20
    42a2:	d1 f0       	breq	.+52     	; 0x42d8 <STEPPER_process_pwm+0xfe>
    42a4:	20 91 73 04 	lds	r18, 0x0473
    42a8:	30 91 74 04 	lds	r19, 0x0474
    42ac:	80 e6       	ldi	r24, 0x60	; 96
    42ae:	90 e0       	ldi	r25, 0x00	; 0
    42b0:	ac 01       	movw	r20, r24
    42b2:	24 9f       	mul	r18, r20
    42b4:	c0 01       	movw	r24, r0
    42b6:	25 9f       	mul	r18, r21
    42b8:	90 0d       	add	r25, r0
    42ba:	34 9f       	mul	r19, r20
    42bc:	90 0d       	add	r25, r0
    42be:	11 24       	eor	r1, r1
    42c0:	88 0f       	add	r24, r24
    42c2:	89 2f       	mov	r24, r25
    42c4:	88 1f       	adc	r24, r24
    42c6:	99 0b       	sbc	r25, r25
    42c8:	90 93 88 04 	sts	0x0488, r25
    42cc:	80 93 87 04 	sts	0x0487, r24
    42d0:	81 e0       	ldi	r24, 0x01	; 1
    42d2:	80 93 81 02 	sts	0x0281, r24
    42d6:	08 95       	ret
    42d8:	80 91 81 02 	lds	r24, 0x0281
    42dc:	88 23       	and	r24, r24
    42de:	a1 f0       	breq	.+40     	; 0x4308 <STEPPER_process_pwm+0x12e>
    42e0:	80 91 87 04 	lds	r24, 0x0487
    42e4:	90 91 88 04 	lds	r25, 0x0488
    42e8:	01 97       	sbiw	r24, 0x01	; 1
    42ea:	90 93 88 04 	sts	0x0488, r25
    42ee:	80 93 87 04 	sts	0x0487, r24
    42f2:	80 91 87 04 	lds	r24, 0x0487
    42f6:	90 91 88 04 	lds	r25, 0x0488
    42fa:	89 2b       	or	r24, r25
    42fc:	29 f4       	brne	.+10     	; 0x4308 <STEPPER_process_pwm+0x12e>
    42fe:	80 81       	ld	r24, Z
    4300:	8f 71       	andi	r24, 0x1F	; 31
    4302:	80 83       	st	Z, r24
    4304:	10 92 81 02 	sts	0x0281, r1
    4308:	08 95       	ret

0000430a <__subsf3>:
    430a:	50 58       	subi	r21, 0x80	; 128

0000430c <__addsf3>:
    430c:	bb 27       	eor	r27, r27
    430e:	aa 27       	eor	r26, r26
    4310:	0e d0       	rcall	.+28     	; 0x432e <__addsf3x>
    4312:	75 c1       	rjmp	.+746    	; 0x45fe <__fp_round>
    4314:	66 d1       	rcall	.+716    	; 0x45e2 <__fp_pscA>
    4316:	30 f0       	brcs	.+12     	; 0x4324 <__addsf3+0x18>
    4318:	6b d1       	rcall	.+726    	; 0x45f0 <__fp_pscB>
    431a:	20 f0       	brcs	.+8      	; 0x4324 <__addsf3+0x18>
    431c:	31 f4       	brne	.+12     	; 0x432a <__addsf3+0x1e>
    431e:	9f 3f       	cpi	r25, 0xFF	; 255
    4320:	11 f4       	brne	.+4      	; 0x4326 <__addsf3+0x1a>
    4322:	1e f4       	brtc	.+6      	; 0x432a <__addsf3+0x1e>
    4324:	5b c1       	rjmp	.+694    	; 0x45dc <__fp_nan>
    4326:	0e f4       	brtc	.+2      	; 0x432a <__addsf3+0x1e>
    4328:	e0 95       	com	r30
    432a:	e7 fb       	bst	r30, 7
    432c:	51 c1       	rjmp	.+674    	; 0x45d0 <__fp_inf>

0000432e <__addsf3x>:
    432e:	e9 2f       	mov	r30, r25
    4330:	77 d1       	rcall	.+750    	; 0x4620 <__fp_split3>
    4332:	80 f3       	brcs	.-32     	; 0x4314 <__addsf3+0x8>
    4334:	ba 17       	cp	r27, r26
    4336:	62 07       	cpc	r22, r18
    4338:	73 07       	cpc	r23, r19
    433a:	84 07       	cpc	r24, r20
    433c:	95 07       	cpc	r25, r21
    433e:	18 f0       	brcs	.+6      	; 0x4346 <__addsf3x+0x18>
    4340:	71 f4       	brne	.+28     	; 0x435e <__addsf3x+0x30>
    4342:	9e f5       	brtc	.+102    	; 0x43aa <__addsf3x+0x7c>
    4344:	8f c1       	rjmp	.+798    	; 0x4664 <__fp_zero>
    4346:	0e f4       	brtc	.+2      	; 0x434a <__addsf3x+0x1c>
    4348:	e0 95       	com	r30
    434a:	0b 2e       	mov	r0, r27
    434c:	ba 2f       	mov	r27, r26
    434e:	a0 2d       	mov	r26, r0
    4350:	0b 01       	movw	r0, r22
    4352:	b9 01       	movw	r22, r18
    4354:	90 01       	movw	r18, r0
    4356:	0c 01       	movw	r0, r24
    4358:	ca 01       	movw	r24, r20
    435a:	a0 01       	movw	r20, r0
    435c:	11 24       	eor	r1, r1
    435e:	ff 27       	eor	r31, r31
    4360:	59 1b       	sub	r21, r25
    4362:	99 f0       	breq	.+38     	; 0x438a <__addsf3x+0x5c>
    4364:	59 3f       	cpi	r21, 0xF9	; 249
    4366:	50 f4       	brcc	.+20     	; 0x437c <__addsf3x+0x4e>
    4368:	50 3e       	cpi	r21, 0xE0	; 224
    436a:	68 f1       	brcs	.+90     	; 0x43c6 <__addsf3x+0x98>
    436c:	1a 16       	cp	r1, r26
    436e:	f0 40       	sbci	r31, 0x00	; 0
    4370:	a2 2f       	mov	r26, r18
    4372:	23 2f       	mov	r18, r19
    4374:	34 2f       	mov	r19, r20
    4376:	44 27       	eor	r20, r20
    4378:	58 5f       	subi	r21, 0xF8	; 248
    437a:	f3 cf       	rjmp	.-26     	; 0x4362 <__addsf3x+0x34>
    437c:	46 95       	lsr	r20
    437e:	37 95       	ror	r19
    4380:	27 95       	ror	r18
    4382:	a7 95       	ror	r26
    4384:	f0 40       	sbci	r31, 0x00	; 0
    4386:	53 95       	inc	r21
    4388:	c9 f7       	brne	.-14     	; 0x437c <__addsf3x+0x4e>
    438a:	7e f4       	brtc	.+30     	; 0x43aa <__addsf3x+0x7c>
    438c:	1f 16       	cp	r1, r31
    438e:	ba 0b       	sbc	r27, r26
    4390:	62 0b       	sbc	r22, r18
    4392:	73 0b       	sbc	r23, r19
    4394:	84 0b       	sbc	r24, r20
    4396:	ba f0       	brmi	.+46     	; 0x43c6 <__addsf3x+0x98>
    4398:	91 50       	subi	r25, 0x01	; 1
    439a:	a1 f0       	breq	.+40     	; 0x43c4 <__addsf3x+0x96>
    439c:	ff 0f       	add	r31, r31
    439e:	bb 1f       	adc	r27, r27
    43a0:	66 1f       	adc	r22, r22
    43a2:	77 1f       	adc	r23, r23
    43a4:	88 1f       	adc	r24, r24
    43a6:	c2 f7       	brpl	.-16     	; 0x4398 <__addsf3x+0x6a>
    43a8:	0e c0       	rjmp	.+28     	; 0x43c6 <__addsf3x+0x98>
    43aa:	ba 0f       	add	r27, r26
    43ac:	62 1f       	adc	r22, r18
    43ae:	73 1f       	adc	r23, r19
    43b0:	84 1f       	adc	r24, r20
    43b2:	48 f4       	brcc	.+18     	; 0x43c6 <__addsf3x+0x98>
    43b4:	87 95       	ror	r24
    43b6:	77 95       	ror	r23
    43b8:	67 95       	ror	r22
    43ba:	b7 95       	ror	r27
    43bc:	f7 95       	ror	r31
    43be:	9e 3f       	cpi	r25, 0xFE	; 254
    43c0:	08 f0       	brcs	.+2      	; 0x43c4 <__addsf3x+0x96>
    43c2:	b3 cf       	rjmp	.-154    	; 0x432a <__addsf3+0x1e>
    43c4:	93 95       	inc	r25
    43c6:	88 0f       	add	r24, r24
    43c8:	08 f0       	brcs	.+2      	; 0x43cc <__addsf3x+0x9e>
    43ca:	99 27       	eor	r25, r25
    43cc:	ee 0f       	add	r30, r30
    43ce:	97 95       	ror	r25
    43d0:	87 95       	ror	r24
    43d2:	08 95       	ret

000043d4 <__cmpsf2>:
    43d4:	d9 d0       	rcall	.+434    	; 0x4588 <__fp_cmp>
    43d6:	08 f4       	brcc	.+2      	; 0x43da <__cmpsf2+0x6>
    43d8:	81 e0       	ldi	r24, 0x01	; 1
    43da:	08 95       	ret

000043dc <__divsf3>:
    43dc:	0c d0       	rcall	.+24     	; 0x43f6 <__divsf3x>
    43de:	0f c1       	rjmp	.+542    	; 0x45fe <__fp_round>
    43e0:	07 d1       	rcall	.+526    	; 0x45f0 <__fp_pscB>
    43e2:	40 f0       	brcs	.+16     	; 0x43f4 <__divsf3+0x18>
    43e4:	fe d0       	rcall	.+508    	; 0x45e2 <__fp_pscA>
    43e6:	30 f0       	brcs	.+12     	; 0x43f4 <__divsf3+0x18>
    43e8:	21 f4       	brne	.+8      	; 0x43f2 <__divsf3+0x16>
    43ea:	5f 3f       	cpi	r21, 0xFF	; 255
    43ec:	19 f0       	breq	.+6      	; 0x43f4 <__divsf3+0x18>
    43ee:	f0 c0       	rjmp	.+480    	; 0x45d0 <__fp_inf>
    43f0:	51 11       	cpse	r21, r1
    43f2:	39 c1       	rjmp	.+626    	; 0x4666 <__fp_szero>
    43f4:	f3 c0       	rjmp	.+486    	; 0x45dc <__fp_nan>

000043f6 <__divsf3x>:
    43f6:	14 d1       	rcall	.+552    	; 0x4620 <__fp_split3>
    43f8:	98 f3       	brcs	.-26     	; 0x43e0 <__divsf3+0x4>

000043fa <__divsf3_pse>:
    43fa:	99 23       	and	r25, r25
    43fc:	c9 f3       	breq	.-14     	; 0x43f0 <__divsf3+0x14>
    43fe:	55 23       	and	r21, r21
    4400:	b1 f3       	breq	.-20     	; 0x43ee <__divsf3+0x12>
    4402:	95 1b       	sub	r25, r21
    4404:	55 0b       	sbc	r21, r21
    4406:	bb 27       	eor	r27, r27
    4408:	aa 27       	eor	r26, r26
    440a:	62 17       	cp	r22, r18
    440c:	73 07       	cpc	r23, r19
    440e:	84 07       	cpc	r24, r20
    4410:	38 f0       	brcs	.+14     	; 0x4420 <__divsf3_pse+0x26>
    4412:	9f 5f       	subi	r25, 0xFF	; 255
    4414:	5f 4f       	sbci	r21, 0xFF	; 255
    4416:	22 0f       	add	r18, r18
    4418:	33 1f       	adc	r19, r19
    441a:	44 1f       	adc	r20, r20
    441c:	aa 1f       	adc	r26, r26
    441e:	a9 f3       	breq	.-22     	; 0x440a <__divsf3_pse+0x10>
    4420:	33 d0       	rcall	.+102    	; 0x4488 <__divsf3_pse+0x8e>
    4422:	0e 2e       	mov	r0, r30
    4424:	3a f0       	brmi	.+14     	; 0x4434 <__divsf3_pse+0x3a>
    4426:	e0 e8       	ldi	r30, 0x80	; 128
    4428:	30 d0       	rcall	.+96     	; 0x448a <__divsf3_pse+0x90>
    442a:	91 50       	subi	r25, 0x01	; 1
    442c:	50 40       	sbci	r21, 0x00	; 0
    442e:	e6 95       	lsr	r30
    4430:	00 1c       	adc	r0, r0
    4432:	ca f7       	brpl	.-14     	; 0x4426 <__divsf3_pse+0x2c>
    4434:	29 d0       	rcall	.+82     	; 0x4488 <__divsf3_pse+0x8e>
    4436:	fe 2f       	mov	r31, r30
    4438:	27 d0       	rcall	.+78     	; 0x4488 <__divsf3_pse+0x8e>
    443a:	66 0f       	add	r22, r22
    443c:	77 1f       	adc	r23, r23
    443e:	88 1f       	adc	r24, r24
    4440:	bb 1f       	adc	r27, r27
    4442:	26 17       	cp	r18, r22
    4444:	37 07       	cpc	r19, r23
    4446:	48 07       	cpc	r20, r24
    4448:	ab 07       	cpc	r26, r27
    444a:	b0 e8       	ldi	r27, 0x80	; 128
    444c:	09 f0       	breq	.+2      	; 0x4450 <__divsf3_pse+0x56>
    444e:	bb 0b       	sbc	r27, r27
    4450:	80 2d       	mov	r24, r0
    4452:	bf 01       	movw	r22, r30
    4454:	ff 27       	eor	r31, r31
    4456:	93 58       	subi	r25, 0x83	; 131
    4458:	5f 4f       	sbci	r21, 0xFF	; 255
    445a:	2a f0       	brmi	.+10     	; 0x4466 <__divsf3_pse+0x6c>
    445c:	9e 3f       	cpi	r25, 0xFE	; 254
    445e:	51 05       	cpc	r21, r1
    4460:	68 f0       	brcs	.+26     	; 0x447c <__divsf3_pse+0x82>
    4462:	b6 c0       	rjmp	.+364    	; 0x45d0 <__fp_inf>
    4464:	00 c1       	rjmp	.+512    	; 0x4666 <__fp_szero>
    4466:	5f 3f       	cpi	r21, 0xFF	; 255
    4468:	ec f3       	brlt	.-6      	; 0x4464 <__divsf3_pse+0x6a>
    446a:	98 3e       	cpi	r25, 0xE8	; 232
    446c:	dc f3       	brlt	.-10     	; 0x4464 <__divsf3_pse+0x6a>
    446e:	86 95       	lsr	r24
    4470:	77 95       	ror	r23
    4472:	67 95       	ror	r22
    4474:	b7 95       	ror	r27
    4476:	f7 95       	ror	r31
    4478:	9f 5f       	subi	r25, 0xFF	; 255
    447a:	c9 f7       	brne	.-14     	; 0x446e <__divsf3_pse+0x74>
    447c:	88 0f       	add	r24, r24
    447e:	91 1d       	adc	r25, r1
    4480:	96 95       	lsr	r25
    4482:	87 95       	ror	r24
    4484:	97 f9       	bld	r25, 7
    4486:	08 95       	ret
    4488:	e1 e0       	ldi	r30, 0x01	; 1
    448a:	66 0f       	add	r22, r22
    448c:	77 1f       	adc	r23, r23
    448e:	88 1f       	adc	r24, r24
    4490:	bb 1f       	adc	r27, r27
    4492:	62 17       	cp	r22, r18
    4494:	73 07       	cpc	r23, r19
    4496:	84 07       	cpc	r24, r20
    4498:	ba 07       	cpc	r27, r26
    449a:	20 f0       	brcs	.+8      	; 0x44a4 <__divsf3_pse+0xaa>
    449c:	62 1b       	sub	r22, r18
    449e:	73 0b       	sbc	r23, r19
    44a0:	84 0b       	sbc	r24, r20
    44a2:	ba 0b       	sbc	r27, r26
    44a4:	ee 1f       	adc	r30, r30
    44a6:	88 f7       	brcc	.-30     	; 0x448a <__divsf3_pse+0x90>
    44a8:	e0 95       	com	r30
    44aa:	08 95       	ret

000044ac <__fixsfsi>:
    44ac:	04 d0       	rcall	.+8      	; 0x44b6 <__fixunssfsi>
    44ae:	68 94       	set
    44b0:	b1 11       	cpse	r27, r1
    44b2:	d9 c0       	rjmp	.+434    	; 0x4666 <__fp_szero>
    44b4:	08 95       	ret

000044b6 <__fixunssfsi>:
    44b6:	bc d0       	rcall	.+376    	; 0x4630 <__fp_splitA>
    44b8:	88 f0       	brcs	.+34     	; 0x44dc <__fixunssfsi+0x26>
    44ba:	9f 57       	subi	r25, 0x7F	; 127
    44bc:	90 f0       	brcs	.+36     	; 0x44e2 <__fixunssfsi+0x2c>
    44be:	b9 2f       	mov	r27, r25
    44c0:	99 27       	eor	r25, r25
    44c2:	b7 51       	subi	r27, 0x17	; 23
    44c4:	a0 f0       	brcs	.+40     	; 0x44ee <__fixunssfsi+0x38>
    44c6:	d1 f0       	breq	.+52     	; 0x44fc <__fixunssfsi+0x46>
    44c8:	66 0f       	add	r22, r22
    44ca:	77 1f       	adc	r23, r23
    44cc:	88 1f       	adc	r24, r24
    44ce:	99 1f       	adc	r25, r25
    44d0:	1a f0       	brmi	.+6      	; 0x44d8 <__fixunssfsi+0x22>
    44d2:	ba 95       	dec	r27
    44d4:	c9 f7       	brne	.-14     	; 0x44c8 <__fixunssfsi+0x12>
    44d6:	12 c0       	rjmp	.+36     	; 0x44fc <__fixunssfsi+0x46>
    44d8:	b1 30       	cpi	r27, 0x01	; 1
    44da:	81 f0       	breq	.+32     	; 0x44fc <__fixunssfsi+0x46>
    44dc:	c3 d0       	rcall	.+390    	; 0x4664 <__fp_zero>
    44de:	b1 e0       	ldi	r27, 0x01	; 1
    44e0:	08 95       	ret
    44e2:	c0 c0       	rjmp	.+384    	; 0x4664 <__fp_zero>
    44e4:	67 2f       	mov	r22, r23
    44e6:	78 2f       	mov	r23, r24
    44e8:	88 27       	eor	r24, r24
    44ea:	b8 5f       	subi	r27, 0xF8	; 248
    44ec:	39 f0       	breq	.+14     	; 0x44fc <__fixunssfsi+0x46>
    44ee:	b9 3f       	cpi	r27, 0xF9	; 249
    44f0:	cc f3       	brlt	.-14     	; 0x44e4 <__fixunssfsi+0x2e>
    44f2:	86 95       	lsr	r24
    44f4:	77 95       	ror	r23
    44f6:	67 95       	ror	r22
    44f8:	b3 95       	inc	r27
    44fa:	d9 f7       	brne	.-10     	; 0x44f2 <__fixunssfsi+0x3c>
    44fc:	3e f4       	brtc	.+14     	; 0x450c <__fixunssfsi+0x56>
    44fe:	90 95       	com	r25
    4500:	80 95       	com	r24
    4502:	70 95       	com	r23
    4504:	61 95       	neg	r22
    4506:	7f 4f       	sbci	r23, 0xFF	; 255
    4508:	8f 4f       	sbci	r24, 0xFF	; 255
    450a:	9f 4f       	sbci	r25, 0xFF	; 255
    450c:	08 95       	ret

0000450e <__floatunsisf>:
    450e:	e8 94       	clt
    4510:	09 c0       	rjmp	.+18     	; 0x4524 <__floatsisf+0x12>

00004512 <__floatsisf>:
    4512:	97 fb       	bst	r25, 7
    4514:	3e f4       	brtc	.+14     	; 0x4524 <__floatsisf+0x12>
    4516:	90 95       	com	r25
    4518:	80 95       	com	r24
    451a:	70 95       	com	r23
    451c:	61 95       	neg	r22
    451e:	7f 4f       	sbci	r23, 0xFF	; 255
    4520:	8f 4f       	sbci	r24, 0xFF	; 255
    4522:	9f 4f       	sbci	r25, 0xFF	; 255
    4524:	99 23       	and	r25, r25
    4526:	a9 f0       	breq	.+42     	; 0x4552 <__floatsisf+0x40>
    4528:	f9 2f       	mov	r31, r25
    452a:	96 e9       	ldi	r25, 0x96	; 150
    452c:	bb 27       	eor	r27, r27
    452e:	93 95       	inc	r25
    4530:	f6 95       	lsr	r31
    4532:	87 95       	ror	r24
    4534:	77 95       	ror	r23
    4536:	67 95       	ror	r22
    4538:	b7 95       	ror	r27
    453a:	f1 11       	cpse	r31, r1
    453c:	f8 cf       	rjmp	.-16     	; 0x452e <__floatsisf+0x1c>
    453e:	fa f4       	brpl	.+62     	; 0x457e <__floatsisf+0x6c>
    4540:	bb 0f       	add	r27, r27
    4542:	11 f4       	brne	.+4      	; 0x4548 <__floatsisf+0x36>
    4544:	60 ff       	sbrs	r22, 0
    4546:	1b c0       	rjmp	.+54     	; 0x457e <__floatsisf+0x6c>
    4548:	6f 5f       	subi	r22, 0xFF	; 255
    454a:	7f 4f       	sbci	r23, 0xFF	; 255
    454c:	8f 4f       	sbci	r24, 0xFF	; 255
    454e:	9f 4f       	sbci	r25, 0xFF	; 255
    4550:	16 c0       	rjmp	.+44     	; 0x457e <__floatsisf+0x6c>
    4552:	88 23       	and	r24, r24
    4554:	11 f0       	breq	.+4      	; 0x455a <__floatsisf+0x48>
    4556:	96 e9       	ldi	r25, 0x96	; 150
    4558:	11 c0       	rjmp	.+34     	; 0x457c <__floatsisf+0x6a>
    455a:	77 23       	and	r23, r23
    455c:	21 f0       	breq	.+8      	; 0x4566 <__floatsisf+0x54>
    455e:	9e e8       	ldi	r25, 0x8E	; 142
    4560:	87 2f       	mov	r24, r23
    4562:	76 2f       	mov	r23, r22
    4564:	05 c0       	rjmp	.+10     	; 0x4570 <__floatsisf+0x5e>
    4566:	66 23       	and	r22, r22
    4568:	71 f0       	breq	.+28     	; 0x4586 <__floatsisf+0x74>
    456a:	96 e8       	ldi	r25, 0x86	; 134
    456c:	86 2f       	mov	r24, r22
    456e:	70 e0       	ldi	r23, 0x00	; 0
    4570:	60 e0       	ldi	r22, 0x00	; 0
    4572:	2a f0       	brmi	.+10     	; 0x457e <__floatsisf+0x6c>
    4574:	9a 95       	dec	r25
    4576:	66 0f       	add	r22, r22
    4578:	77 1f       	adc	r23, r23
    457a:	88 1f       	adc	r24, r24
    457c:	da f7       	brpl	.-10     	; 0x4574 <__floatsisf+0x62>
    457e:	88 0f       	add	r24, r24
    4580:	96 95       	lsr	r25
    4582:	87 95       	ror	r24
    4584:	97 f9       	bld	r25, 7
    4586:	08 95       	ret

00004588 <__fp_cmp>:
    4588:	99 0f       	add	r25, r25
    458a:	00 08       	sbc	r0, r0
    458c:	55 0f       	add	r21, r21
    458e:	aa 0b       	sbc	r26, r26
    4590:	e0 e8       	ldi	r30, 0x80	; 128
    4592:	fe ef       	ldi	r31, 0xFE	; 254
    4594:	16 16       	cp	r1, r22
    4596:	17 06       	cpc	r1, r23
    4598:	e8 07       	cpc	r30, r24
    459a:	f9 07       	cpc	r31, r25
    459c:	c0 f0       	brcs	.+48     	; 0x45ce <__fp_cmp+0x46>
    459e:	12 16       	cp	r1, r18
    45a0:	13 06       	cpc	r1, r19
    45a2:	e4 07       	cpc	r30, r20
    45a4:	f5 07       	cpc	r31, r21
    45a6:	98 f0       	brcs	.+38     	; 0x45ce <__fp_cmp+0x46>
    45a8:	62 1b       	sub	r22, r18
    45aa:	73 0b       	sbc	r23, r19
    45ac:	84 0b       	sbc	r24, r20
    45ae:	95 0b       	sbc	r25, r21
    45b0:	39 f4       	brne	.+14     	; 0x45c0 <__fp_cmp+0x38>
    45b2:	0a 26       	eor	r0, r26
    45b4:	61 f0       	breq	.+24     	; 0x45ce <__fp_cmp+0x46>
    45b6:	23 2b       	or	r18, r19
    45b8:	24 2b       	or	r18, r20
    45ba:	25 2b       	or	r18, r21
    45bc:	21 f4       	brne	.+8      	; 0x45c6 <__fp_cmp+0x3e>
    45be:	08 95       	ret
    45c0:	0a 26       	eor	r0, r26
    45c2:	09 f4       	brne	.+2      	; 0x45c6 <__fp_cmp+0x3e>
    45c4:	a1 40       	sbci	r26, 0x01	; 1
    45c6:	a6 95       	lsr	r26
    45c8:	8f ef       	ldi	r24, 0xFF	; 255
    45ca:	81 1d       	adc	r24, r1
    45cc:	81 1d       	adc	r24, r1
    45ce:	08 95       	ret

000045d0 <__fp_inf>:
    45d0:	97 f9       	bld	r25, 7
    45d2:	9f 67       	ori	r25, 0x7F	; 127
    45d4:	80 e8       	ldi	r24, 0x80	; 128
    45d6:	70 e0       	ldi	r23, 0x00	; 0
    45d8:	60 e0       	ldi	r22, 0x00	; 0
    45da:	08 95       	ret

000045dc <__fp_nan>:
    45dc:	9f ef       	ldi	r25, 0xFF	; 255
    45de:	80 ec       	ldi	r24, 0xC0	; 192
    45e0:	08 95       	ret

000045e2 <__fp_pscA>:
    45e2:	00 24       	eor	r0, r0
    45e4:	0a 94       	dec	r0
    45e6:	16 16       	cp	r1, r22
    45e8:	17 06       	cpc	r1, r23
    45ea:	18 06       	cpc	r1, r24
    45ec:	09 06       	cpc	r0, r25
    45ee:	08 95       	ret

000045f0 <__fp_pscB>:
    45f0:	00 24       	eor	r0, r0
    45f2:	0a 94       	dec	r0
    45f4:	12 16       	cp	r1, r18
    45f6:	13 06       	cpc	r1, r19
    45f8:	14 06       	cpc	r1, r20
    45fa:	05 06       	cpc	r0, r21
    45fc:	08 95       	ret

000045fe <__fp_round>:
    45fe:	09 2e       	mov	r0, r25
    4600:	03 94       	inc	r0
    4602:	00 0c       	add	r0, r0
    4604:	11 f4       	brne	.+4      	; 0x460a <__fp_round+0xc>
    4606:	88 23       	and	r24, r24
    4608:	52 f0       	brmi	.+20     	; 0x461e <__fp_round+0x20>
    460a:	bb 0f       	add	r27, r27
    460c:	40 f4       	brcc	.+16     	; 0x461e <__fp_round+0x20>
    460e:	bf 2b       	or	r27, r31
    4610:	11 f4       	brne	.+4      	; 0x4616 <__fp_round+0x18>
    4612:	60 ff       	sbrs	r22, 0
    4614:	04 c0       	rjmp	.+8      	; 0x461e <__fp_round+0x20>
    4616:	6f 5f       	subi	r22, 0xFF	; 255
    4618:	7f 4f       	sbci	r23, 0xFF	; 255
    461a:	8f 4f       	sbci	r24, 0xFF	; 255
    461c:	9f 4f       	sbci	r25, 0xFF	; 255
    461e:	08 95       	ret

00004620 <__fp_split3>:
    4620:	57 fd       	sbrc	r21, 7
    4622:	90 58       	subi	r25, 0x80	; 128
    4624:	44 0f       	add	r20, r20
    4626:	55 1f       	adc	r21, r21
    4628:	59 f0       	breq	.+22     	; 0x4640 <__fp_splitA+0x10>
    462a:	5f 3f       	cpi	r21, 0xFF	; 255
    462c:	71 f0       	breq	.+28     	; 0x464a <__fp_splitA+0x1a>
    462e:	47 95       	ror	r20

00004630 <__fp_splitA>:
    4630:	88 0f       	add	r24, r24
    4632:	97 fb       	bst	r25, 7
    4634:	99 1f       	adc	r25, r25
    4636:	61 f0       	breq	.+24     	; 0x4650 <__fp_splitA+0x20>
    4638:	9f 3f       	cpi	r25, 0xFF	; 255
    463a:	79 f0       	breq	.+30     	; 0x465a <__fp_splitA+0x2a>
    463c:	87 95       	ror	r24
    463e:	08 95       	ret
    4640:	12 16       	cp	r1, r18
    4642:	13 06       	cpc	r1, r19
    4644:	14 06       	cpc	r1, r20
    4646:	55 1f       	adc	r21, r21
    4648:	f2 cf       	rjmp	.-28     	; 0x462e <__fp_split3+0xe>
    464a:	46 95       	lsr	r20
    464c:	f1 df       	rcall	.-30     	; 0x4630 <__fp_splitA>
    464e:	08 c0       	rjmp	.+16     	; 0x4660 <__fp_splitA+0x30>
    4650:	16 16       	cp	r1, r22
    4652:	17 06       	cpc	r1, r23
    4654:	18 06       	cpc	r1, r24
    4656:	99 1f       	adc	r25, r25
    4658:	f1 cf       	rjmp	.-30     	; 0x463c <__fp_splitA+0xc>
    465a:	86 95       	lsr	r24
    465c:	71 05       	cpc	r23, r1
    465e:	61 05       	cpc	r22, r1
    4660:	08 94       	sec
    4662:	08 95       	ret

00004664 <__fp_zero>:
    4664:	e8 94       	clt

00004666 <__fp_szero>:
    4666:	bb 27       	eor	r27, r27
    4668:	66 27       	eor	r22, r22
    466a:	77 27       	eor	r23, r23
    466c:	cb 01       	movw	r24, r22
    466e:	97 f9       	bld	r25, 7
    4670:	08 95       	ret

00004672 <__gesf2>:
    4672:	8a df       	rcall	.-236    	; 0x4588 <__fp_cmp>
    4674:	08 f4       	brcc	.+2      	; 0x4678 <__gesf2+0x6>
    4676:	8f ef       	ldi	r24, 0xFF	; 255
    4678:	08 95       	ret

0000467a <lrint>:
    467a:	da df       	rcall	.-76     	; 0x4630 <__fp_splitA>
    467c:	a8 f1       	brcs	.+106    	; 0x46e8 <lrint+0x6e>
    467e:	9e 57       	subi	r25, 0x7E	; 126
    4680:	a8 f1       	brcs	.+106    	; 0x46ec <lrint+0x72>
    4682:	98 51       	subi	r25, 0x18	; 24
    4684:	60 f0       	brcs	.+24     	; 0x469e <lrint+0x24>
    4686:	39 f1       	breq	.+78     	; 0x46d6 <lrint+0x5c>
    4688:	98 30       	cpi	r25, 0x08	; 8
    468a:	70 f5       	brcc	.+92     	; 0x46e8 <lrint+0x6e>
    468c:	09 2e       	mov	r0, r25
    468e:	99 27       	eor	r25, r25
    4690:	66 0f       	add	r22, r22
    4692:	77 1f       	adc	r23, r23
    4694:	88 1f       	adc	r24, r24
    4696:	99 1f       	adc	r25, r25
    4698:	0a 94       	dec	r0
    469a:	d1 f7       	brne	.-12     	; 0x4690 <lrint+0x16>
    469c:	1c c0       	rjmp	.+56     	; 0x46d6 <lrint+0x5c>
    469e:	bb 27       	eor	r27, r27
    46a0:	99 3f       	cpi	r25, 0xF9	; 249
    46a2:	4c f4       	brge	.+18     	; 0x46b6 <lrint+0x3c>
    46a4:	b1 11       	cpse	r27, r1
    46a6:	b1 e0       	ldi	r27, 0x01	; 1
    46a8:	b6 2b       	or	r27, r22
    46aa:	67 2f       	mov	r22, r23
    46ac:	78 2f       	mov	r23, r24
    46ae:	88 27       	eor	r24, r24
    46b0:	98 5f       	subi	r25, 0xF8	; 248
    46b2:	b1 f7       	brne	.-20     	; 0x46a0 <lrint+0x26>
    46b4:	08 c0       	rjmp	.+16     	; 0x46c6 <lrint+0x4c>
    46b6:	86 95       	lsr	r24
    46b8:	77 95       	ror	r23
    46ba:	67 95       	ror	r22
    46bc:	b7 95       	ror	r27
    46be:	08 f4       	brcc	.+2      	; 0x46c2 <lrint+0x48>
    46c0:	b1 60       	ori	r27, 0x01	; 1
    46c2:	93 95       	inc	r25
    46c4:	c1 f7       	brne	.-16     	; 0x46b6 <lrint+0x3c>
    46c6:	bb 0f       	add	r27, r27
    46c8:	30 f4       	brcc	.+12     	; 0x46d6 <lrint+0x5c>
    46ca:	11 f4       	brne	.+4      	; 0x46d0 <lrint+0x56>
    46cc:	60 ff       	sbrs	r22, 0
    46ce:	03 c0       	rjmp	.+6      	; 0x46d6 <lrint+0x5c>
    46d0:	6f 5f       	subi	r22, 0xFF	; 255
    46d2:	7f 4f       	sbci	r23, 0xFF	; 255
    46d4:	8f 4f       	sbci	r24, 0xFF	; 255
    46d6:	3e f4       	brtc	.+14     	; 0x46e6 <lrint+0x6c>
    46d8:	90 95       	com	r25
    46da:	80 95       	com	r24
    46dc:	70 95       	com	r23
    46de:	61 95       	neg	r22
    46e0:	7f 4f       	sbci	r23, 0xFF	; 255
    46e2:	8f 4f       	sbci	r24, 0xFF	; 255
    46e4:	9f 4f       	sbci	r25, 0xFF	; 255
    46e6:	08 95       	ret
    46e8:	68 94       	set
    46ea:	bd cf       	rjmp	.-134    	; 0x4666 <__fp_szero>
    46ec:	bb cf       	rjmp	.-138    	; 0x4664 <__fp_zero>

000046ee <__mulsf3>:
    46ee:	0b d0       	rcall	.+22     	; 0x4706 <__mulsf3x>
    46f0:	86 cf       	rjmp	.-244    	; 0x45fe <__fp_round>
    46f2:	77 df       	rcall	.-274    	; 0x45e2 <__fp_pscA>
    46f4:	28 f0       	brcs	.+10     	; 0x4700 <__mulsf3+0x12>
    46f6:	7c df       	rcall	.-264    	; 0x45f0 <__fp_pscB>
    46f8:	18 f0       	brcs	.+6      	; 0x4700 <__mulsf3+0x12>
    46fa:	95 23       	and	r25, r21
    46fc:	09 f0       	breq	.+2      	; 0x4700 <__mulsf3+0x12>
    46fe:	68 cf       	rjmp	.-304    	; 0x45d0 <__fp_inf>
    4700:	6d cf       	rjmp	.-294    	; 0x45dc <__fp_nan>
    4702:	11 24       	eor	r1, r1
    4704:	b0 cf       	rjmp	.-160    	; 0x4666 <__fp_szero>

00004706 <__mulsf3x>:
    4706:	8c df       	rcall	.-232    	; 0x4620 <__fp_split3>
    4708:	a0 f3       	brcs	.-24     	; 0x46f2 <__mulsf3+0x4>

0000470a <__mulsf3_pse>:
    470a:	95 9f       	mul	r25, r21
    470c:	d1 f3       	breq	.-12     	; 0x4702 <__mulsf3+0x14>
    470e:	95 0f       	add	r25, r21
    4710:	50 e0       	ldi	r21, 0x00	; 0
    4712:	55 1f       	adc	r21, r21
    4714:	62 9f       	mul	r22, r18
    4716:	f0 01       	movw	r30, r0
    4718:	72 9f       	mul	r23, r18
    471a:	bb 27       	eor	r27, r27
    471c:	f0 0d       	add	r31, r0
    471e:	b1 1d       	adc	r27, r1
    4720:	63 9f       	mul	r22, r19
    4722:	aa 27       	eor	r26, r26
    4724:	f0 0d       	add	r31, r0
    4726:	b1 1d       	adc	r27, r1
    4728:	aa 1f       	adc	r26, r26
    472a:	64 9f       	mul	r22, r20
    472c:	66 27       	eor	r22, r22
    472e:	b0 0d       	add	r27, r0
    4730:	a1 1d       	adc	r26, r1
    4732:	66 1f       	adc	r22, r22
    4734:	82 9f       	mul	r24, r18
    4736:	22 27       	eor	r18, r18
    4738:	b0 0d       	add	r27, r0
    473a:	a1 1d       	adc	r26, r1
    473c:	62 1f       	adc	r22, r18
    473e:	73 9f       	mul	r23, r19
    4740:	b0 0d       	add	r27, r0
    4742:	a1 1d       	adc	r26, r1
    4744:	62 1f       	adc	r22, r18
    4746:	83 9f       	mul	r24, r19
    4748:	a0 0d       	add	r26, r0
    474a:	61 1d       	adc	r22, r1
    474c:	22 1f       	adc	r18, r18
    474e:	74 9f       	mul	r23, r20
    4750:	33 27       	eor	r19, r19
    4752:	a0 0d       	add	r26, r0
    4754:	61 1d       	adc	r22, r1
    4756:	23 1f       	adc	r18, r19
    4758:	84 9f       	mul	r24, r20
    475a:	60 0d       	add	r22, r0
    475c:	21 1d       	adc	r18, r1
    475e:	82 2f       	mov	r24, r18
    4760:	76 2f       	mov	r23, r22
    4762:	6a 2f       	mov	r22, r26
    4764:	11 24       	eor	r1, r1
    4766:	9f 57       	subi	r25, 0x7F	; 127
    4768:	50 40       	sbci	r21, 0x00	; 0
    476a:	8a f0       	brmi	.+34     	; 0x478e <__mulsf3_pse+0x84>
    476c:	e1 f0       	breq	.+56     	; 0x47a6 <__mulsf3_pse+0x9c>
    476e:	88 23       	and	r24, r24
    4770:	4a f0       	brmi	.+18     	; 0x4784 <__mulsf3_pse+0x7a>
    4772:	ee 0f       	add	r30, r30
    4774:	ff 1f       	adc	r31, r31
    4776:	bb 1f       	adc	r27, r27
    4778:	66 1f       	adc	r22, r22
    477a:	77 1f       	adc	r23, r23
    477c:	88 1f       	adc	r24, r24
    477e:	91 50       	subi	r25, 0x01	; 1
    4780:	50 40       	sbci	r21, 0x00	; 0
    4782:	a9 f7       	brne	.-22     	; 0x476e <__mulsf3_pse+0x64>
    4784:	9e 3f       	cpi	r25, 0xFE	; 254
    4786:	51 05       	cpc	r21, r1
    4788:	70 f0       	brcs	.+28     	; 0x47a6 <__mulsf3_pse+0x9c>
    478a:	22 cf       	rjmp	.-444    	; 0x45d0 <__fp_inf>
    478c:	6c cf       	rjmp	.-296    	; 0x4666 <__fp_szero>
    478e:	5f 3f       	cpi	r21, 0xFF	; 255
    4790:	ec f3       	brlt	.-6      	; 0x478c <__mulsf3_pse+0x82>
    4792:	98 3e       	cpi	r25, 0xE8	; 232
    4794:	dc f3       	brlt	.-10     	; 0x478c <__mulsf3_pse+0x82>
    4796:	86 95       	lsr	r24
    4798:	77 95       	ror	r23
    479a:	67 95       	ror	r22
    479c:	b7 95       	ror	r27
    479e:	f7 95       	ror	r31
    47a0:	e7 95       	ror	r30
    47a2:	9f 5f       	subi	r25, 0xFF	; 255
    47a4:	c1 f7       	brne	.-16     	; 0x4796 <__mulsf3_pse+0x8c>
    47a6:	fe 2b       	or	r31, r30
    47a8:	88 0f       	add	r24, r24
    47aa:	91 1d       	adc	r25, r1
    47ac:	96 95       	lsr	r25
    47ae:	87 95       	ror	r24
    47b0:	97 f9       	bld	r25, 7
    47b2:	08 95       	ret

000047b4 <pow>:
    47b4:	fa 01       	movw	r30, r20
    47b6:	ee 0f       	add	r30, r30
    47b8:	ff 1f       	adc	r31, r31
    47ba:	30 96       	adiw	r30, 0x00	; 0
    47bc:	21 05       	cpc	r18, r1
    47be:	31 05       	cpc	r19, r1
    47c0:	99 f1       	breq	.+102    	; 0x4828 <pow+0x74>
    47c2:	61 15       	cp	r22, r1
    47c4:	71 05       	cpc	r23, r1
    47c6:	61 f4       	brne	.+24     	; 0x47e0 <pow+0x2c>
    47c8:	80 38       	cpi	r24, 0x80	; 128
    47ca:	bf e3       	ldi	r27, 0x3F	; 63
    47cc:	9b 07       	cpc	r25, r27
    47ce:	49 f1       	breq	.+82     	; 0x4822 <pow+0x6e>
    47d0:	68 94       	set
    47d2:	90 38       	cpi	r25, 0x80	; 128
    47d4:	81 05       	cpc	r24, r1
    47d6:	61 f0       	breq	.+24     	; 0x47f0 <pow+0x3c>
    47d8:	80 38       	cpi	r24, 0x80	; 128
    47da:	bf ef       	ldi	r27, 0xFF	; 255
    47dc:	9b 07       	cpc	r25, r27
    47de:	41 f0       	breq	.+16     	; 0x47f0 <pow+0x3c>
    47e0:	99 23       	and	r25, r25
    47e2:	42 f5       	brpl	.+80     	; 0x4834 <pow+0x80>
    47e4:	ff 3f       	cpi	r31, 0xFF	; 255
    47e6:	e1 05       	cpc	r30, r1
    47e8:	31 05       	cpc	r19, r1
    47ea:	21 05       	cpc	r18, r1
    47ec:	11 f1       	breq	.+68     	; 0x4832 <pow+0x7e>
    47ee:	e8 94       	clt
    47f0:	08 94       	sec
    47f2:	e7 95       	ror	r30
    47f4:	d9 01       	movw	r26, r18
    47f6:	aa 23       	and	r26, r26
    47f8:	29 f4       	brne	.+10     	; 0x4804 <pow+0x50>
    47fa:	ab 2f       	mov	r26, r27
    47fc:	be 2f       	mov	r27, r30
    47fe:	f8 5f       	subi	r31, 0xF8	; 248
    4800:	d0 f3       	brcs	.-12     	; 0x47f6 <pow+0x42>
    4802:	10 c0       	rjmp	.+32     	; 0x4824 <pow+0x70>
    4804:	ff 5f       	subi	r31, 0xFF	; 255
    4806:	70 f4       	brcc	.+28     	; 0x4824 <pow+0x70>
    4808:	a6 95       	lsr	r26
    480a:	e0 f7       	brcc	.-8      	; 0x4804 <pow+0x50>
    480c:	f7 39       	cpi	r31, 0x97	; 151
    480e:	50 f0       	brcs	.+20     	; 0x4824 <pow+0x70>
    4810:	19 f0       	breq	.+6      	; 0x4818 <pow+0x64>
    4812:	ff 3a       	cpi	r31, 0xAF	; 175
    4814:	38 f4       	brcc	.+14     	; 0x4824 <pow+0x70>
    4816:	9f 77       	andi	r25, 0x7F	; 127
    4818:	9f 93       	push	r25
    481a:	0c d0       	rcall	.+24     	; 0x4834 <pow+0x80>
    481c:	0f 90       	pop	r0
    481e:	07 fc       	sbrc	r0, 7
    4820:	90 58       	subi	r25, 0x80	; 128
    4822:	08 95       	ret
    4824:	3e f0       	brts	.+14     	; 0x4834 <pow+0x80>
    4826:	da ce       	rjmp	.-588    	; 0x45dc <__fp_nan>
    4828:	60 e0       	ldi	r22, 0x00	; 0
    482a:	70 e0       	ldi	r23, 0x00	; 0
    482c:	80 e8       	ldi	r24, 0x80	; 128
    482e:	9f e3       	ldi	r25, 0x3F	; 63
    4830:	08 95       	ret
    4832:	4f e7       	ldi	r20, 0x7F	; 127
    4834:	9f 77       	andi	r25, 0x7F	; 127
    4836:	5f 93       	push	r21
    4838:	4f 93       	push	r20
    483a:	3f 93       	push	r19
    483c:	2f 93       	push	r18
    483e:	9e d0       	rcall	.+316    	; 0x497c <log>
    4840:	2f 91       	pop	r18
    4842:	3f 91       	pop	r19
    4844:	4f 91       	pop	r20
    4846:	5f 91       	pop	r21
    4848:	52 df       	rcall	.-348    	; 0x46ee <__mulsf3>
    484a:	05 c0       	rjmp	.+10     	; 0x4856 <exp>
    484c:	19 f4       	brne	.+6      	; 0x4854 <pow+0xa0>
    484e:	0e f0       	brts	.+2      	; 0x4852 <pow+0x9e>
    4850:	bf ce       	rjmp	.-642    	; 0x45d0 <__fp_inf>
    4852:	08 cf       	rjmp	.-496    	; 0x4664 <__fp_zero>
    4854:	c3 ce       	rjmp	.-634    	; 0x45dc <__fp_nan>

00004856 <exp>:
    4856:	ec de       	rcall	.-552    	; 0x4630 <__fp_splitA>
    4858:	c8 f3       	brcs	.-14     	; 0x484c <pow+0x98>
    485a:	96 38       	cpi	r25, 0x86	; 134
    485c:	c0 f7       	brcc	.-16     	; 0x484e <pow+0x9a>
    485e:	07 f8       	bld	r0, 7
    4860:	0f 92       	push	r0
    4862:	e8 94       	clt
    4864:	2b e3       	ldi	r18, 0x3B	; 59
    4866:	3a ea       	ldi	r19, 0xAA	; 170
    4868:	48 eb       	ldi	r20, 0xB8	; 184
    486a:	5f e7       	ldi	r21, 0x7F	; 127
    486c:	4e df       	rcall	.-356    	; 0x470a <__mulsf3_pse>
    486e:	0f 92       	push	r0
    4870:	0f 92       	push	r0
    4872:	0f 92       	push	r0
    4874:	4d b7       	in	r20, 0x3d	; 61
    4876:	5e b7       	in	r21, 0x3e	; 62
    4878:	0f 92       	push	r0
    487a:	c0 d0       	rcall	.+384    	; 0x49fc <modf>
    487c:	e8 ec       	ldi	r30, 0xC8	; 200
    487e:	f0 e0       	ldi	r31, 0x00	; 0
    4880:	16 d0       	rcall	.+44     	; 0x48ae <__fp_powser>
    4882:	4f 91       	pop	r20
    4884:	5f 91       	pop	r21
    4886:	ef 91       	pop	r30
    4888:	ff 91       	pop	r31
    488a:	e5 95       	asr	r30
    488c:	ee 1f       	adc	r30, r30
    488e:	ff 1f       	adc	r31, r31
    4890:	49 f0       	breq	.+18     	; 0x48a4 <exp+0x4e>
    4892:	fe 57       	subi	r31, 0x7E	; 126
    4894:	e0 68       	ori	r30, 0x80	; 128
    4896:	44 27       	eor	r20, r20
    4898:	ee 0f       	add	r30, r30
    489a:	44 1f       	adc	r20, r20
    489c:	fa 95       	dec	r31
    489e:	e1 f7       	brne	.-8      	; 0x4898 <exp+0x42>
    48a0:	41 95       	neg	r20
    48a2:	55 0b       	sbc	r21, r21
    48a4:	32 d0       	rcall	.+100    	; 0x490a <ldexp>
    48a6:	0f 90       	pop	r0
    48a8:	07 fe       	sbrs	r0, 7
    48aa:	26 c0       	rjmp	.+76     	; 0x48f8 <inverse>
    48ac:	08 95       	ret

000048ae <__fp_powser>:
    48ae:	df 93       	push	r29
    48b0:	cf 93       	push	r28
    48b2:	1f 93       	push	r17
    48b4:	0f 93       	push	r16
    48b6:	ff 92       	push	r15
    48b8:	ef 92       	push	r14
    48ba:	df 92       	push	r13
    48bc:	7b 01       	movw	r14, r22
    48be:	8c 01       	movw	r16, r24
    48c0:	68 94       	set
    48c2:	05 c0       	rjmp	.+10     	; 0x48ce <__fp_powser+0x20>
    48c4:	da 2e       	mov	r13, r26
    48c6:	ef 01       	movw	r28, r30
    48c8:	1e df       	rcall	.-452    	; 0x4706 <__mulsf3x>
    48ca:	fe 01       	movw	r30, r28
    48cc:	e8 94       	clt
    48ce:	a5 91       	lpm	r26, Z+
    48d0:	25 91       	lpm	r18, Z+
    48d2:	35 91       	lpm	r19, Z+
    48d4:	45 91       	lpm	r20, Z+
    48d6:	55 91       	lpm	r21, Z+
    48d8:	ae f3       	brts	.-22     	; 0x48c4 <__fp_powser+0x16>
    48da:	ef 01       	movw	r28, r30
    48dc:	28 dd       	rcall	.-1456   	; 0x432e <__addsf3x>
    48de:	fe 01       	movw	r30, r28
    48e0:	97 01       	movw	r18, r14
    48e2:	a8 01       	movw	r20, r16
    48e4:	da 94       	dec	r13
    48e6:	79 f7       	brne	.-34     	; 0x48c6 <__fp_powser+0x18>
    48e8:	df 90       	pop	r13
    48ea:	ef 90       	pop	r14
    48ec:	ff 90       	pop	r15
    48ee:	0f 91       	pop	r16
    48f0:	1f 91       	pop	r17
    48f2:	cf 91       	pop	r28
    48f4:	df 91       	pop	r29
    48f6:	08 95       	ret

000048f8 <inverse>:
    48f8:	9b 01       	movw	r18, r22
    48fa:	ac 01       	movw	r20, r24
    48fc:	60 e0       	ldi	r22, 0x00	; 0
    48fe:	70 e0       	ldi	r23, 0x00	; 0
    4900:	80 e8       	ldi	r24, 0x80	; 128
    4902:	9f e3       	ldi	r25, 0x3F	; 63
    4904:	6b cd       	rjmp	.-1322   	; 0x43dc <__divsf3>
    4906:	64 ce       	rjmp	.-824    	; 0x45d0 <__fp_inf>
    4908:	ac c0       	rjmp	.+344    	; 0x4a62 <__fp_mpack>

0000490a <ldexp>:
    490a:	92 de       	rcall	.-732    	; 0x4630 <__fp_splitA>
    490c:	e8 f3       	brcs	.-6      	; 0x4908 <inverse+0x10>
    490e:	99 23       	and	r25, r25
    4910:	d9 f3       	breq	.-10     	; 0x4908 <inverse+0x10>
    4912:	94 0f       	add	r25, r20
    4914:	51 1d       	adc	r21, r1
    4916:	bb f3       	brvs	.-18     	; 0x4906 <inverse+0xe>
    4918:	91 50       	subi	r25, 0x01	; 1
    491a:	50 40       	sbci	r21, 0x00	; 0
    491c:	94 f0       	brlt	.+36     	; 0x4942 <ldexp+0x38>
    491e:	59 f0       	breq	.+22     	; 0x4936 <ldexp+0x2c>
    4920:	88 23       	and	r24, r24
    4922:	32 f0       	brmi	.+12     	; 0x4930 <ldexp+0x26>
    4924:	66 0f       	add	r22, r22
    4926:	77 1f       	adc	r23, r23
    4928:	88 1f       	adc	r24, r24
    492a:	91 50       	subi	r25, 0x01	; 1
    492c:	50 40       	sbci	r21, 0x00	; 0
    492e:	c1 f7       	brne	.-16     	; 0x4920 <ldexp+0x16>
    4930:	9e 3f       	cpi	r25, 0xFE	; 254
    4932:	51 05       	cpc	r21, r1
    4934:	44 f7       	brge	.-48     	; 0x4906 <inverse+0xe>
    4936:	88 0f       	add	r24, r24
    4938:	91 1d       	adc	r25, r1
    493a:	96 95       	lsr	r25
    493c:	87 95       	ror	r24
    493e:	97 f9       	bld	r25, 7
    4940:	08 95       	ret
    4942:	5f 3f       	cpi	r21, 0xFF	; 255
    4944:	ac f0       	brlt	.+42     	; 0x4970 <ldexp+0x66>
    4946:	98 3e       	cpi	r25, 0xE8	; 232
    4948:	9c f0       	brlt	.+38     	; 0x4970 <ldexp+0x66>
    494a:	bb 27       	eor	r27, r27
    494c:	86 95       	lsr	r24
    494e:	77 95       	ror	r23
    4950:	67 95       	ror	r22
    4952:	b7 95       	ror	r27
    4954:	08 f4       	brcc	.+2      	; 0x4958 <ldexp+0x4e>
    4956:	b1 60       	ori	r27, 0x01	; 1
    4958:	93 95       	inc	r25
    495a:	c1 f7       	brne	.-16     	; 0x494c <ldexp+0x42>
    495c:	bb 0f       	add	r27, r27
    495e:	58 f7       	brcc	.-42     	; 0x4936 <ldexp+0x2c>
    4960:	11 f4       	brne	.+4      	; 0x4966 <ldexp+0x5c>
    4962:	60 ff       	sbrs	r22, 0
    4964:	e8 cf       	rjmp	.-48     	; 0x4936 <ldexp+0x2c>
    4966:	6f 5f       	subi	r22, 0xFF	; 255
    4968:	7f 4f       	sbci	r23, 0xFF	; 255
    496a:	8f 4f       	sbci	r24, 0xFF	; 255
    496c:	9f 4f       	sbci	r25, 0xFF	; 255
    496e:	e3 cf       	rjmp	.-58     	; 0x4936 <ldexp+0x2c>
    4970:	7a ce       	rjmp	.-780    	; 0x4666 <__fp_szero>
    4972:	0e f0       	brts	.+2      	; 0x4976 <ldexp+0x6c>
    4974:	76 c0       	rjmp	.+236    	; 0x4a62 <__fp_mpack>
    4976:	32 ce       	rjmp	.-924    	; 0x45dc <__fp_nan>
    4978:	68 94       	set
    497a:	2a ce       	rjmp	.-940    	; 0x45d0 <__fp_inf>

0000497c <log>:
    497c:	59 de       	rcall	.-846    	; 0x4630 <__fp_splitA>
    497e:	c8 f3       	brcs	.-14     	; 0x4972 <ldexp+0x68>
    4980:	99 23       	and	r25, r25
    4982:	d1 f3       	breq	.-12     	; 0x4978 <ldexp+0x6e>
    4984:	c6 f3       	brts	.-16     	; 0x4976 <ldexp+0x6c>
    4986:	df 93       	push	r29
    4988:	cf 93       	push	r28
    498a:	1f 93       	push	r17
    498c:	0f 93       	push	r16
    498e:	ff 92       	push	r15
    4990:	c9 2f       	mov	r28, r25
    4992:	dd 27       	eor	r29, r29
    4994:	88 23       	and	r24, r24
    4996:	2a f0       	brmi	.+10     	; 0x49a2 <log+0x26>
    4998:	21 97       	sbiw	r28, 0x01	; 1
    499a:	66 0f       	add	r22, r22
    499c:	77 1f       	adc	r23, r23
    499e:	88 1f       	adc	r24, r24
    49a0:	da f7       	brpl	.-10     	; 0x4998 <log+0x1c>
    49a2:	20 e0       	ldi	r18, 0x00	; 0
    49a4:	30 e0       	ldi	r19, 0x00	; 0
    49a6:	40 e8       	ldi	r20, 0x80	; 128
    49a8:	5f eb       	ldi	r21, 0xBF	; 191
    49aa:	9f e3       	ldi	r25, 0x3F	; 63
    49ac:	88 39       	cpi	r24, 0x98	; 152
    49ae:	20 f0       	brcs	.+8      	; 0x49b8 <log+0x3c>
    49b0:	80 3e       	cpi	r24, 0xE0	; 224
    49b2:	30 f0       	brcs	.+12     	; 0x49c0 <log+0x44>
    49b4:	21 96       	adiw	r28, 0x01	; 1
    49b6:	8f 77       	andi	r24, 0x7F	; 127
    49b8:	a9 dc       	rcall	.-1710   	; 0x430c <__addsf3>
    49ba:	e0 ef       	ldi	r30, 0xF0	; 240
    49bc:	f0 e0       	ldi	r31, 0x00	; 0
    49be:	03 c0       	rjmp	.+6      	; 0x49c6 <log+0x4a>
    49c0:	a5 dc       	rcall	.-1718   	; 0x430c <__addsf3>
    49c2:	ed e1       	ldi	r30, 0x1D	; 29
    49c4:	f1 e0       	ldi	r31, 0x01	; 1
    49c6:	73 df       	rcall	.-282    	; 0x48ae <__fp_powser>
    49c8:	8b 01       	movw	r16, r22
    49ca:	be 01       	movw	r22, r28
    49cc:	ec 01       	movw	r28, r24
    49ce:	fb 2e       	mov	r15, r27
    49d0:	6f 57       	subi	r22, 0x7F	; 127
    49d2:	71 09       	sbc	r23, r1
    49d4:	75 95       	asr	r23
    49d6:	77 1f       	adc	r23, r23
    49d8:	88 0b       	sbc	r24, r24
    49da:	99 0b       	sbc	r25, r25
    49dc:	9a dd       	rcall	.-1228   	; 0x4512 <__floatsisf>
    49de:	28 e1       	ldi	r18, 0x18	; 24
    49e0:	32 e7       	ldi	r19, 0x72	; 114
    49e2:	41 e3       	ldi	r20, 0x31	; 49
    49e4:	5f e3       	ldi	r21, 0x3F	; 63
    49e6:	8f de       	rcall	.-738    	; 0x4706 <__mulsf3x>
    49e8:	af 2d       	mov	r26, r15
    49ea:	98 01       	movw	r18, r16
    49ec:	ae 01       	movw	r20, r28
    49ee:	ff 90       	pop	r15
    49f0:	0f 91       	pop	r16
    49f2:	1f 91       	pop	r17
    49f4:	cf 91       	pop	r28
    49f6:	df 91       	pop	r29
    49f8:	9a dc       	rcall	.-1740   	; 0x432e <__addsf3x>
    49fa:	01 ce       	rjmp	.-1022   	; 0x45fe <__fp_round>

000049fc <modf>:
    49fc:	fa 01       	movw	r30, r20
    49fe:	dc 01       	movw	r26, r24
    4a00:	aa 0f       	add	r26, r26
    4a02:	bb 1f       	adc	r27, r27
    4a04:	9b 01       	movw	r18, r22
    4a06:	ac 01       	movw	r20, r24
    4a08:	bf 57       	subi	r27, 0x7F	; 127
    4a0a:	28 f4       	brcc	.+10     	; 0x4a16 <modf+0x1a>
    4a0c:	22 27       	eor	r18, r18
    4a0e:	33 27       	eor	r19, r19
    4a10:	44 27       	eor	r20, r20
    4a12:	50 78       	andi	r21, 0x80	; 128
    4a14:	1f c0       	rjmp	.+62     	; 0x4a54 <modf+0x58>
    4a16:	b7 51       	subi	r27, 0x17	; 23
    4a18:	88 f4       	brcc	.+34     	; 0x4a3c <modf+0x40>
    4a1a:	ab 2f       	mov	r26, r27
    4a1c:	00 24       	eor	r0, r0
    4a1e:	46 95       	lsr	r20
    4a20:	37 95       	ror	r19
    4a22:	27 95       	ror	r18
    4a24:	01 1c       	adc	r0, r1
    4a26:	a3 95       	inc	r26
    4a28:	d2 f3       	brmi	.-12     	; 0x4a1e <modf+0x22>
    4a2a:	00 20       	and	r0, r0
    4a2c:	69 f0       	breq	.+26     	; 0x4a48 <modf+0x4c>
    4a2e:	22 0f       	add	r18, r18
    4a30:	33 1f       	adc	r19, r19
    4a32:	44 1f       	adc	r20, r20
    4a34:	b3 95       	inc	r27
    4a36:	da f3       	brmi	.-10     	; 0x4a2e <modf+0x32>
    4a38:	0d d0       	rcall	.+26     	; 0x4a54 <modf+0x58>
    4a3a:	67 cc       	rjmp	.-1842   	; 0x430a <__subsf3>
    4a3c:	61 30       	cpi	r22, 0x01	; 1
    4a3e:	71 05       	cpc	r23, r1
    4a40:	a0 e8       	ldi	r26, 0x80	; 128
    4a42:	8a 07       	cpc	r24, r26
    4a44:	b9 46       	sbci	r27, 0x69	; 105
    4a46:	30 f4       	brcc	.+12     	; 0x4a54 <modf+0x58>
    4a48:	9b 01       	movw	r18, r22
    4a4a:	ac 01       	movw	r20, r24
    4a4c:	66 27       	eor	r22, r22
    4a4e:	77 27       	eor	r23, r23
    4a50:	88 27       	eor	r24, r24
    4a52:	90 78       	andi	r25, 0x80	; 128
    4a54:	30 96       	adiw	r30, 0x00	; 0
    4a56:	21 f0       	breq	.+8      	; 0x4a60 <modf+0x64>
    4a58:	20 83       	st	Z, r18
    4a5a:	31 83       	std	Z+1, r19	; 0x01
    4a5c:	42 83       	std	Z+2, r20	; 0x02
    4a5e:	53 83       	std	Z+3, r21	; 0x03
    4a60:	08 95       	ret

00004a62 <__fp_mpack>:
    4a62:	9f 3f       	cpi	r25, 0xFF	; 255
    4a64:	31 f0       	breq	.+12     	; 0x4a72 <__fp_mpack_finite+0xc>

00004a66 <__fp_mpack_finite>:
    4a66:	91 50       	subi	r25, 0x01	; 1
    4a68:	20 f4       	brcc	.+8      	; 0x4a72 <__fp_mpack_finite+0xc>
    4a6a:	87 95       	ror	r24
    4a6c:	77 95       	ror	r23
    4a6e:	67 95       	ror	r22
    4a70:	b7 95       	ror	r27
    4a72:	88 0f       	add	r24, r24
    4a74:	91 1d       	adc	r25, r1
    4a76:	96 95       	lsr	r25
    4a78:	87 95       	ror	r24
    4a7a:	97 f9       	bld	r25, 7
    4a7c:	08 95       	ret

00004a7e <vfprintf>:
    4a7e:	a1 e1       	ldi	r26, 0x11	; 17
    4a80:	b0 e0       	ldi	r27, 0x00	; 0
    4a82:	e4 e4       	ldi	r30, 0x44	; 68
    4a84:	f5 e2       	ldi	r31, 0x25	; 37
    4a86:	b7 c3       	rjmp	.+1902   	; 0x51f6 <__prologue_saves__>
    4a88:	3c 01       	movw	r6, r24
    4a8a:	7f 87       	std	Y+15, r23	; 0x0f
    4a8c:	6e 87       	std	Y+14, r22	; 0x0e
    4a8e:	6a 01       	movw	r12, r20
    4a90:	fc 01       	movw	r30, r24
    4a92:	17 82       	std	Z+7, r1	; 0x07
    4a94:	16 82       	std	Z+6, r1	; 0x06
    4a96:	83 81       	ldd	r24, Z+3	; 0x03
    4a98:	81 fd       	sbrc	r24, 1
    4a9a:	03 c0       	rjmp	.+6      	; 0x4aa2 <vfprintf+0x24>
    4a9c:	6f ef       	ldi	r22, 0xFF	; 255
    4a9e:	7f ef       	ldi	r23, 0xFF	; 255
    4aa0:	52 c3       	rjmp	.+1700   	; 0x5146 <vfprintf+0x6c8>
    4aa2:	9e 01       	movw	r18, r28
    4aa4:	2f 5f       	subi	r18, 0xFF	; 255
    4aa6:	3f 4f       	sbci	r19, 0xFF	; 255
    4aa8:	39 8b       	std	Y+17, r19	; 0x11
    4aaa:	28 8b       	std	Y+16, r18	; 0x10
    4aac:	f3 01       	movw	r30, r6
    4aae:	23 81       	ldd	r18, Z+3	; 0x03
    4ab0:	ee 85       	ldd	r30, Y+14	; 0x0e
    4ab2:	ff 85       	ldd	r31, Y+15	; 0x0f
    4ab4:	23 fd       	sbrc	r18, 3
    4ab6:	85 91       	lpm	r24, Z+
    4ab8:	23 ff       	sbrs	r18, 3
    4aba:	81 91       	ld	r24, Z+
    4abc:	ff 87       	std	Y+15, r31	; 0x0f
    4abe:	ee 87       	std	Y+14, r30	; 0x0e
    4ac0:	88 23       	and	r24, r24
    4ac2:	09 f4       	brne	.+2      	; 0x4ac6 <vfprintf+0x48>
    4ac4:	3d c3       	rjmp	.+1658   	; 0x5140 <vfprintf+0x6c2>
    4ac6:	85 32       	cpi	r24, 0x25	; 37
    4ac8:	51 f4       	brne	.+20     	; 0x4ade <vfprintf+0x60>
    4aca:	ee 85       	ldd	r30, Y+14	; 0x0e
    4acc:	ff 85       	ldd	r31, Y+15	; 0x0f
    4ace:	23 fd       	sbrc	r18, 3
    4ad0:	85 91       	lpm	r24, Z+
    4ad2:	23 ff       	sbrs	r18, 3
    4ad4:	81 91       	ld	r24, Z+
    4ad6:	ff 87       	std	Y+15, r31	; 0x0f
    4ad8:	ee 87       	std	Y+14, r30	; 0x0e
    4ada:	85 32       	cpi	r24, 0x25	; 37
    4adc:	21 f4       	brne	.+8      	; 0x4ae6 <vfprintf+0x68>
    4ade:	90 e0       	ldi	r25, 0x00	; 0
    4ae0:	b3 01       	movw	r22, r6
    4ae2:	20 d6       	rcall	.+3136   	; 0x5724 <fputc>
    4ae4:	e3 cf       	rjmp	.-58     	; 0x4aac <vfprintf+0x2e>
    4ae6:	98 2f       	mov	r25, r24
    4ae8:	10 e0       	ldi	r17, 0x00	; 0
    4aea:	88 24       	eor	r8, r8
    4aec:	99 24       	eor	r9, r9
    4aee:	10 32       	cpi	r17, 0x20	; 32
    4af0:	b0 f4       	brcc	.+44     	; 0x4b1e <vfprintf+0xa0>
    4af2:	9b 32       	cpi	r25, 0x2B	; 43
    4af4:	69 f0       	breq	.+26     	; 0x4b10 <vfprintf+0x92>
    4af6:	9c 32       	cpi	r25, 0x2C	; 44
    4af8:	28 f4       	brcc	.+10     	; 0x4b04 <vfprintf+0x86>
    4afa:	90 32       	cpi	r25, 0x20	; 32
    4afc:	51 f0       	breq	.+20     	; 0x4b12 <vfprintf+0x94>
    4afe:	93 32       	cpi	r25, 0x23	; 35
    4b00:	71 f4       	brne	.+28     	; 0x4b1e <vfprintf+0xa0>
    4b02:	0b c0       	rjmp	.+22     	; 0x4b1a <vfprintf+0x9c>
    4b04:	9d 32       	cpi	r25, 0x2D	; 45
    4b06:	39 f0       	breq	.+14     	; 0x4b16 <vfprintf+0x98>
    4b08:	90 33       	cpi	r25, 0x30	; 48
    4b0a:	49 f4       	brne	.+18     	; 0x4b1e <vfprintf+0xa0>
    4b0c:	11 60       	ori	r17, 0x01	; 1
    4b0e:	28 c0       	rjmp	.+80     	; 0x4b60 <vfprintf+0xe2>
    4b10:	12 60       	ori	r17, 0x02	; 2
    4b12:	14 60       	ori	r17, 0x04	; 4
    4b14:	25 c0       	rjmp	.+74     	; 0x4b60 <vfprintf+0xe2>
    4b16:	18 60       	ori	r17, 0x08	; 8
    4b18:	23 c0       	rjmp	.+70     	; 0x4b60 <vfprintf+0xe2>
    4b1a:	10 61       	ori	r17, 0x10	; 16
    4b1c:	21 c0       	rjmp	.+66     	; 0x4b60 <vfprintf+0xe2>
    4b1e:	17 fd       	sbrc	r17, 7
    4b20:	2a c0       	rjmp	.+84     	; 0x4b76 <vfprintf+0xf8>
    4b22:	89 2f       	mov	r24, r25
    4b24:	80 53       	subi	r24, 0x30	; 48
    4b26:	8a 30       	cpi	r24, 0x0A	; 10
    4b28:	78 f4       	brcc	.+30     	; 0x4b48 <vfprintf+0xca>
    4b2a:	16 ff       	sbrs	r17, 6
    4b2c:	06 c0       	rjmp	.+12     	; 0x4b3a <vfprintf+0xbc>
    4b2e:	fa e0       	ldi	r31, 0x0A	; 10
    4b30:	9f 9e       	mul	r9, r31
    4b32:	90 2c       	mov	r9, r0
    4b34:	11 24       	eor	r1, r1
    4b36:	98 0e       	add	r9, r24
    4b38:	13 c0       	rjmp	.+38     	; 0x4b60 <vfprintf+0xe2>
    4b3a:	3a e0       	ldi	r19, 0x0A	; 10
    4b3c:	83 9e       	mul	r8, r19
    4b3e:	80 2c       	mov	r8, r0
    4b40:	11 24       	eor	r1, r1
    4b42:	88 0e       	add	r8, r24
    4b44:	10 62       	ori	r17, 0x20	; 32
    4b46:	0c c0       	rjmp	.+24     	; 0x4b60 <vfprintf+0xe2>
    4b48:	9e 32       	cpi	r25, 0x2E	; 46
    4b4a:	21 f4       	brne	.+8      	; 0x4b54 <vfprintf+0xd6>
    4b4c:	16 fd       	sbrc	r17, 6
    4b4e:	f8 c2       	rjmp	.+1520   	; 0x5140 <vfprintf+0x6c2>
    4b50:	10 64       	ori	r17, 0x40	; 64
    4b52:	06 c0       	rjmp	.+12     	; 0x4b60 <vfprintf+0xe2>
    4b54:	9c 36       	cpi	r25, 0x6C	; 108
    4b56:	11 f4       	brne	.+4      	; 0x4b5c <vfprintf+0xde>
    4b58:	10 68       	ori	r17, 0x80	; 128
    4b5a:	02 c0       	rjmp	.+4      	; 0x4b60 <vfprintf+0xe2>
    4b5c:	98 36       	cpi	r25, 0x68	; 104
    4b5e:	59 f4       	brne	.+22     	; 0x4b76 <vfprintf+0xf8>
    4b60:	ee 85       	ldd	r30, Y+14	; 0x0e
    4b62:	ff 85       	ldd	r31, Y+15	; 0x0f
    4b64:	23 fd       	sbrc	r18, 3
    4b66:	95 91       	lpm	r25, Z+
    4b68:	23 ff       	sbrs	r18, 3
    4b6a:	91 91       	ld	r25, Z+
    4b6c:	ff 87       	std	Y+15, r31	; 0x0f
    4b6e:	ee 87       	std	Y+14, r30	; 0x0e
    4b70:	99 23       	and	r25, r25
    4b72:	09 f0       	breq	.+2      	; 0x4b76 <vfprintf+0xf8>
    4b74:	bc cf       	rjmp	.-136    	; 0x4aee <vfprintf+0x70>
    4b76:	89 2f       	mov	r24, r25
    4b78:	85 54       	subi	r24, 0x45	; 69
    4b7a:	83 30       	cpi	r24, 0x03	; 3
    4b7c:	20 f4       	brcc	.+8      	; 0x4b86 <vfprintf+0x108>
    4b7e:	81 2f       	mov	r24, r17
    4b80:	80 61       	ori	r24, 0x10	; 16
    4b82:	90 5e       	subi	r25, 0xE0	; 224
    4b84:	07 c0       	rjmp	.+14     	; 0x4b94 <vfprintf+0x116>
    4b86:	89 2f       	mov	r24, r25
    4b88:	85 56       	subi	r24, 0x65	; 101
    4b8a:	83 30       	cpi	r24, 0x03	; 3
    4b8c:	08 f0       	brcs	.+2      	; 0x4b90 <vfprintf+0x112>
    4b8e:	8f c1       	rjmp	.+798    	; 0x4eae <vfprintf+0x430>
    4b90:	81 2f       	mov	r24, r17
    4b92:	8f 7e       	andi	r24, 0xEF	; 239
    4b94:	86 fd       	sbrc	r24, 6
    4b96:	02 c0       	rjmp	.+4      	; 0x4b9c <vfprintf+0x11e>
    4b98:	76 e0       	ldi	r23, 0x06	; 6
    4b9a:	97 2e       	mov	r9, r23
    4b9c:	6f e3       	ldi	r22, 0x3F	; 63
    4b9e:	f6 2e       	mov	r15, r22
    4ba0:	f8 22       	and	r15, r24
    4ba2:	95 36       	cpi	r25, 0x65	; 101
    4ba4:	19 f4       	brne	.+6      	; 0x4bac <vfprintf+0x12e>
    4ba6:	f0 e4       	ldi	r31, 0x40	; 64
    4ba8:	ff 2a       	or	r15, r31
    4baa:	07 c0       	rjmp	.+14     	; 0x4bba <vfprintf+0x13c>
    4bac:	96 36       	cpi	r25, 0x66	; 102
    4bae:	19 f4       	brne	.+6      	; 0x4bb6 <vfprintf+0x138>
    4bb0:	20 e8       	ldi	r18, 0x80	; 128
    4bb2:	f2 2a       	or	r15, r18
    4bb4:	02 c0       	rjmp	.+4      	; 0x4bba <vfprintf+0x13c>
    4bb6:	91 10       	cpse	r9, r1
    4bb8:	9a 94       	dec	r9
    4bba:	f7 fe       	sbrs	r15, 7
    4bbc:	0a c0       	rjmp	.+20     	; 0x4bd2 <vfprintf+0x154>
    4bbe:	3b e3       	ldi	r19, 0x3B	; 59
    4bc0:	39 15       	cp	r19, r9
    4bc2:	18 f4       	brcc	.+6      	; 0x4bca <vfprintf+0x14c>
    4bc4:	5c e3       	ldi	r21, 0x3C	; 60
    4bc6:	b5 2e       	mov	r11, r21
    4bc8:	02 c0       	rjmp	.+4      	; 0x4bce <vfprintf+0x150>
    4bca:	b9 2c       	mov	r11, r9
    4bcc:	b3 94       	inc	r11
    4bce:	27 e0       	ldi	r18, 0x07	; 7
    4bd0:	09 c0       	rjmp	.+18     	; 0x4be4 <vfprintf+0x166>
    4bd2:	47 e0       	ldi	r20, 0x07	; 7
    4bd4:	49 15       	cp	r20, r9
    4bd6:	20 f4       	brcc	.+8      	; 0x4be0 <vfprintf+0x162>
    4bd8:	bb 24       	eor	r11, r11
    4bda:	47 e0       	ldi	r20, 0x07	; 7
    4bdc:	94 2e       	mov	r9, r20
    4bde:	f7 cf       	rjmp	.-18     	; 0x4bce <vfprintf+0x150>
    4be0:	29 2d       	mov	r18, r9
    4be2:	bb 24       	eor	r11, r11
    4be4:	c6 01       	movw	r24, r12
    4be6:	04 96       	adiw	r24, 0x04	; 4
    4be8:	9d 87       	std	Y+13, r25	; 0x0d
    4bea:	8c 87       	std	Y+12, r24	; 0x0c
    4bec:	f6 01       	movw	r30, r12
    4bee:	60 81       	ld	r22, Z
    4bf0:	71 81       	ldd	r23, Z+1	; 0x01
    4bf2:	82 81       	ldd	r24, Z+2	; 0x02
    4bf4:	93 81       	ldd	r25, Z+3	; 0x03
    4bf6:	ae 01       	movw	r20, r28
    4bf8:	4f 5f       	subi	r20, 0xFF	; 255
    4bfa:	5f 4f       	sbci	r21, 0xFF	; 255
    4bfc:	0b 2d       	mov	r16, r11
    4bfe:	a4 d4       	rcall	.+2376   	; 0x5548 <__ftoa_engine>
    4c00:	6c 01       	movw	r12, r24
    4c02:	09 81       	ldd	r16, Y+1	; 0x01
    4c04:	20 2e       	mov	r2, r16
    4c06:	33 24       	eor	r3, r3
    4c08:	00 ff       	sbrs	r16, 0
    4c0a:	04 c0       	rjmp	.+8      	; 0x4c14 <vfprintf+0x196>
    4c0c:	03 fd       	sbrc	r16, 3
    4c0e:	02 c0       	rjmp	.+4      	; 0x4c14 <vfprintf+0x196>
    4c10:	1d e2       	ldi	r17, 0x2D	; 45
    4c12:	09 c0       	rjmp	.+18     	; 0x4c26 <vfprintf+0x1a8>
    4c14:	f1 fe       	sbrs	r15, 1
    4c16:	02 c0       	rjmp	.+4      	; 0x4c1c <vfprintf+0x19e>
    4c18:	1b e2       	ldi	r17, 0x2B	; 43
    4c1a:	05 c0       	rjmp	.+10     	; 0x4c26 <vfprintf+0x1a8>
    4c1c:	f2 fc       	sbrc	r15, 2
    4c1e:	02 c0       	rjmp	.+4      	; 0x4c24 <vfprintf+0x1a6>
    4c20:	10 e0       	ldi	r17, 0x00	; 0
    4c22:	01 c0       	rjmp	.+2      	; 0x4c26 <vfprintf+0x1a8>
    4c24:	10 e2       	ldi	r17, 0x20	; 32
    4c26:	c1 01       	movw	r24, r2
    4c28:	8c 70       	andi	r24, 0x0C	; 12
    4c2a:	90 70       	andi	r25, 0x00	; 0
    4c2c:	89 2b       	or	r24, r25
    4c2e:	a1 f1       	breq	.+104    	; 0x4c98 <vfprintf+0x21a>
    4c30:	11 23       	and	r17, r17
    4c32:	11 f4       	brne	.+4      	; 0x4c38 <vfprintf+0x1ba>
    4c34:	83 e0       	ldi	r24, 0x03	; 3
    4c36:	01 c0       	rjmp	.+2      	; 0x4c3a <vfprintf+0x1bc>
    4c38:	84 e0       	ldi	r24, 0x04	; 4
    4c3a:	88 15       	cp	r24, r8
    4c3c:	10 f0       	brcs	.+4      	; 0x4c42 <vfprintf+0x1c4>
    4c3e:	88 24       	eor	r8, r8
    4c40:	09 c0       	rjmp	.+18     	; 0x4c54 <vfprintf+0x1d6>
    4c42:	88 1a       	sub	r8, r24
    4c44:	f3 fc       	sbrc	r15, 3
    4c46:	06 c0       	rjmp	.+12     	; 0x4c54 <vfprintf+0x1d6>
    4c48:	80 e2       	ldi	r24, 0x20	; 32
    4c4a:	90 e0       	ldi	r25, 0x00	; 0
    4c4c:	b3 01       	movw	r22, r6
    4c4e:	6a d5       	rcall	.+2772   	; 0x5724 <fputc>
    4c50:	8a 94       	dec	r8
    4c52:	d1 f7       	brne	.-12     	; 0x4c48 <vfprintf+0x1ca>
    4c54:	11 23       	and	r17, r17
    4c56:	21 f0       	breq	.+8      	; 0x4c60 <vfprintf+0x1e2>
    4c58:	81 2f       	mov	r24, r17
    4c5a:	90 e0       	ldi	r25, 0x00	; 0
    4c5c:	b3 01       	movw	r22, r6
    4c5e:	62 d5       	rcall	.+2756   	; 0x5724 <fputc>
    4c60:	23 fe       	sbrs	r2, 3
    4c62:	03 c0       	rjmp	.+6      	; 0x4c6a <vfprintf+0x1ec>
    4c64:	0f e5       	ldi	r16, 0x5F	; 95
    4c66:	15 e0       	ldi	r17, 0x05	; 5
    4c68:	0d c0       	rjmp	.+26     	; 0x4c84 <vfprintf+0x206>
    4c6a:	03 e6       	ldi	r16, 0x63	; 99
    4c6c:	15 e0       	ldi	r17, 0x05	; 5
    4c6e:	0a c0       	rjmp	.+20     	; 0x4c84 <vfprintf+0x206>
    4c70:	e1 14       	cp	r14, r1
    4c72:	f1 04       	cpc	r15, r1
    4c74:	09 f0       	breq	.+2      	; 0x4c78 <vfprintf+0x1fa>
    4c76:	80 52       	subi	r24, 0x20	; 32
    4c78:	90 e0       	ldi	r25, 0x00	; 0
    4c7a:	b3 01       	movw	r22, r6
    4c7c:	53 d5       	rcall	.+2726   	; 0x5724 <fputc>
    4c7e:	0f 5f       	subi	r16, 0xFF	; 255
    4c80:	1f 4f       	sbci	r17, 0xFF	; 255
    4c82:	05 c0       	rjmp	.+10     	; 0x4c8e <vfprintf+0x210>
    4c84:	ef 2c       	mov	r14, r15
    4c86:	ff 24       	eor	r15, r15
    4c88:	f0 e1       	ldi	r31, 0x10	; 16
    4c8a:	ef 22       	and	r14, r31
    4c8c:	ff 24       	eor	r15, r15
    4c8e:	f8 01       	movw	r30, r16
    4c90:	84 91       	lpm	r24, Z+
    4c92:	88 23       	and	r24, r24
    4c94:	69 f7       	brne	.-38     	; 0x4c70 <vfprintf+0x1f2>
    4c96:	08 c1       	rjmp	.+528    	; 0x4ea8 <vfprintf+0x42a>
    4c98:	f7 fe       	sbrs	r15, 7
    4c9a:	12 c0       	rjmp	.+36     	; 0x4cc0 <vfprintf+0x242>
    4c9c:	bc 0c       	add	r11, r12
    4c9e:	24 fe       	sbrs	r2, 4
    4ca0:	04 c0       	rjmp	.+8      	; 0x4caa <vfprintf+0x22c>
    4ca2:	8a 81       	ldd	r24, Y+2	; 0x02
    4ca4:	81 33       	cpi	r24, 0x31	; 49
    4ca6:	09 f4       	brne	.+2      	; 0x4caa <vfprintf+0x22c>
    4ca8:	ba 94       	dec	r11
    4caa:	1b 14       	cp	r1, r11
    4cac:	1c f0       	brlt	.+6      	; 0x4cb4 <vfprintf+0x236>
    4cae:	bb 24       	eor	r11, r11
    4cb0:	b3 94       	inc	r11
    4cb2:	2d c0       	rjmp	.+90     	; 0x4d0e <vfprintf+0x290>
    4cb4:	f8 e0       	ldi	r31, 0x08	; 8
    4cb6:	fb 15       	cp	r31, r11
    4cb8:	50 f5       	brcc	.+84     	; 0x4d0e <vfprintf+0x290>
    4cba:	38 e0       	ldi	r19, 0x08	; 8
    4cbc:	b3 2e       	mov	r11, r19
    4cbe:	27 c0       	rjmp	.+78     	; 0x4d0e <vfprintf+0x290>
    4cc0:	f6 fc       	sbrc	r15, 6
    4cc2:	25 c0       	rjmp	.+74     	; 0x4d0e <vfprintf+0x290>
    4cc4:	89 2d       	mov	r24, r9
    4cc6:	90 e0       	ldi	r25, 0x00	; 0
    4cc8:	8c 15       	cp	r24, r12
    4cca:	9d 05       	cpc	r25, r13
    4ccc:	4c f0       	brlt	.+18     	; 0x4ce0 <vfprintf+0x262>
    4cce:	2c ef       	ldi	r18, 0xFC	; 252
    4cd0:	c2 16       	cp	r12, r18
    4cd2:	2f ef       	ldi	r18, 0xFF	; 255
    4cd4:	d2 06       	cpc	r13, r18
    4cd6:	24 f0       	brlt	.+8      	; 0x4ce0 <vfprintf+0x262>
    4cd8:	30 e8       	ldi	r19, 0x80	; 128
    4cda:	f3 2a       	or	r15, r19
    4cdc:	01 c0       	rjmp	.+2      	; 0x4ce0 <vfprintf+0x262>
    4cde:	9a 94       	dec	r9
    4ce0:	99 20       	and	r9, r9
    4ce2:	49 f0       	breq	.+18     	; 0x4cf6 <vfprintf+0x278>
    4ce4:	e2 e0       	ldi	r30, 0x02	; 2
    4ce6:	f0 e0       	ldi	r31, 0x00	; 0
    4ce8:	ec 0f       	add	r30, r28
    4cea:	fd 1f       	adc	r31, r29
    4cec:	e9 0d       	add	r30, r9
    4cee:	f1 1d       	adc	r31, r1
    4cf0:	80 81       	ld	r24, Z
    4cf2:	80 33       	cpi	r24, 0x30	; 48
    4cf4:	a1 f3       	breq	.-24     	; 0x4cde <vfprintf+0x260>
    4cf6:	f7 fe       	sbrs	r15, 7
    4cf8:	0a c0       	rjmp	.+20     	; 0x4d0e <vfprintf+0x290>
    4cfa:	b9 2c       	mov	r11, r9
    4cfc:	b3 94       	inc	r11
    4cfe:	89 2d       	mov	r24, r9
    4d00:	90 e0       	ldi	r25, 0x00	; 0
    4d02:	c8 16       	cp	r12, r24
    4d04:	d9 06       	cpc	r13, r25
    4d06:	14 f0       	brlt	.+4      	; 0x4d0c <vfprintf+0x28e>
    4d08:	99 24       	eor	r9, r9
    4d0a:	01 c0       	rjmp	.+2      	; 0x4d0e <vfprintf+0x290>
    4d0c:	9c 18       	sub	r9, r12
    4d0e:	f7 fc       	sbrc	r15, 7
    4d10:	03 c0       	rjmp	.+6      	; 0x4d18 <vfprintf+0x29a>
    4d12:	25 e0       	ldi	r18, 0x05	; 5
    4d14:	30 e0       	ldi	r19, 0x00	; 0
    4d16:	09 c0       	rjmp	.+18     	; 0x4d2a <vfprintf+0x2ac>
    4d18:	1c 14       	cp	r1, r12
    4d1a:	1d 04       	cpc	r1, r13
    4d1c:	1c f0       	brlt	.+6      	; 0x4d24 <vfprintf+0x2a6>
    4d1e:	21 e0       	ldi	r18, 0x01	; 1
    4d20:	30 e0       	ldi	r19, 0x00	; 0
    4d22:	03 c0       	rjmp	.+6      	; 0x4d2a <vfprintf+0x2ac>
    4d24:	96 01       	movw	r18, r12
    4d26:	2f 5f       	subi	r18, 0xFF	; 255
    4d28:	3f 4f       	sbci	r19, 0xFF	; 255
    4d2a:	11 23       	and	r17, r17
    4d2c:	11 f0       	breq	.+4      	; 0x4d32 <vfprintf+0x2b4>
    4d2e:	2f 5f       	subi	r18, 0xFF	; 255
    4d30:	3f 4f       	sbci	r19, 0xFF	; 255
    4d32:	99 20       	and	r9, r9
    4d34:	29 f0       	breq	.+10     	; 0x4d40 <vfprintf+0x2c2>
    4d36:	89 2d       	mov	r24, r9
    4d38:	90 e0       	ldi	r25, 0x00	; 0
    4d3a:	01 96       	adiw	r24, 0x01	; 1
    4d3c:	28 0f       	add	r18, r24
    4d3e:	39 1f       	adc	r19, r25
    4d40:	88 2d       	mov	r24, r8
    4d42:	90 e0       	ldi	r25, 0x00	; 0
    4d44:	28 17       	cp	r18, r24
    4d46:	39 07       	cpc	r19, r25
    4d48:	14 f0       	brlt	.+4      	; 0x4d4e <vfprintf+0x2d0>
    4d4a:	88 24       	eor	r8, r8
    4d4c:	01 c0       	rjmp	.+2      	; 0x4d50 <vfprintf+0x2d2>
    4d4e:	82 1a       	sub	r8, r18
    4d50:	4f 2c       	mov	r4, r15
    4d52:	55 24       	eor	r5, r5
    4d54:	c2 01       	movw	r24, r4
    4d56:	89 70       	andi	r24, 0x09	; 9
    4d58:	90 70       	andi	r25, 0x00	; 0
    4d5a:	89 2b       	or	r24, r25
    4d5c:	31 f0       	breq	.+12     	; 0x4d6a <vfprintf+0x2ec>
    4d5e:	07 c0       	rjmp	.+14     	; 0x4d6e <vfprintf+0x2f0>
    4d60:	80 e2       	ldi	r24, 0x20	; 32
    4d62:	90 e0       	ldi	r25, 0x00	; 0
    4d64:	b3 01       	movw	r22, r6
    4d66:	de d4       	rcall	.+2492   	; 0x5724 <fputc>
    4d68:	8a 94       	dec	r8
    4d6a:	88 20       	and	r8, r8
    4d6c:	c9 f7       	brne	.-14     	; 0x4d60 <vfprintf+0x2e2>
    4d6e:	11 23       	and	r17, r17
    4d70:	21 f0       	breq	.+8      	; 0x4d7a <vfprintf+0x2fc>
    4d72:	81 2f       	mov	r24, r17
    4d74:	90 e0       	ldi	r25, 0x00	; 0
    4d76:	b3 01       	movw	r22, r6
    4d78:	d5 d4       	rcall	.+2474   	; 0x5724 <fputc>
    4d7a:	43 fe       	sbrs	r4, 3
    4d7c:	06 c0       	rjmp	.+12     	; 0x4d8a <vfprintf+0x30c>
    4d7e:	07 c0       	rjmp	.+14     	; 0x4d8e <vfprintf+0x310>
    4d80:	80 e3       	ldi	r24, 0x30	; 48
    4d82:	90 e0       	ldi	r25, 0x00	; 0
    4d84:	b3 01       	movw	r22, r6
    4d86:	ce d4       	rcall	.+2460   	; 0x5724 <fputc>
    4d88:	8a 94       	dec	r8
    4d8a:	88 20       	and	r8, r8
    4d8c:	c9 f7       	brne	.-14     	; 0x4d80 <vfprintf+0x302>
    4d8e:	f7 fe       	sbrs	r15, 7
    4d90:	44 c0       	rjmp	.+136    	; 0x4e1a <vfprintf+0x39c>
    4d92:	86 01       	movw	r16, r12
    4d94:	d7 fe       	sbrs	r13, 7
    4d96:	02 c0       	rjmp	.+4      	; 0x4d9c <vfprintf+0x31e>
    4d98:	00 e0       	ldi	r16, 0x00	; 0
    4d9a:	10 e0       	ldi	r17, 0x00	; 0
    4d9c:	76 01       	movw	r14, r12
    4d9e:	08 94       	sec
    4da0:	e1 1c       	adc	r14, r1
    4da2:	f1 1c       	adc	r15, r1
    4da4:	e0 1a       	sub	r14, r16
    4da6:	f1 0a       	sbc	r15, r17
    4da8:	41 e0       	ldi	r20, 0x01	; 1
    4daa:	50 e0       	ldi	r21, 0x00	; 0
    4dac:	4c 0f       	add	r20, r28
    4dae:	5d 1f       	adc	r21, r29
    4db0:	e4 0e       	add	r14, r20
    4db2:	f5 1e       	adc	r15, r21
    4db4:	26 01       	movw	r4, r12
    4db6:	4b 18       	sub	r4, r11
    4db8:	51 08       	sbc	r5, r1
    4dba:	89 2d       	mov	r24, r9
    4dbc:	90 e0       	ldi	r25, 0x00	; 0
    4dbe:	aa 24       	eor	r10, r10
    4dc0:	bb 24       	eor	r11, r11
    4dc2:	a8 1a       	sub	r10, r24
    4dc4:	b9 0a       	sbc	r11, r25
    4dc6:	5f ef       	ldi	r21, 0xFF	; 255
    4dc8:	0f 3f       	cpi	r16, 0xFF	; 255
    4dca:	15 07       	cpc	r17, r21
    4dcc:	21 f4       	brne	.+8      	; 0x4dd6 <vfprintf+0x358>
    4dce:	8e e2       	ldi	r24, 0x2E	; 46
    4dd0:	90 e0       	ldi	r25, 0x00	; 0
    4dd2:	b3 01       	movw	r22, r6
    4dd4:	a7 d4       	rcall	.+2382   	; 0x5724 <fputc>
    4dd6:	c0 16       	cp	r12, r16
    4dd8:	d1 06       	cpc	r13, r17
    4dda:	34 f0       	brlt	.+12     	; 0x4de8 <vfprintf+0x36a>
    4ddc:	40 16       	cp	r4, r16
    4dde:	51 06       	cpc	r5, r17
    4de0:	1c f4       	brge	.+6      	; 0x4de8 <vfprintf+0x36a>
    4de2:	f7 01       	movw	r30, r14
    4de4:	80 81       	ld	r24, Z
    4de6:	01 c0       	rjmp	.+2      	; 0x4dea <vfprintf+0x36c>
    4de8:	80 e3       	ldi	r24, 0x30	; 48
    4dea:	01 50       	subi	r16, 0x01	; 1
    4dec:	10 40       	sbci	r17, 0x00	; 0
    4dee:	08 94       	sec
    4df0:	e1 1c       	adc	r14, r1
    4df2:	f1 1c       	adc	r15, r1
    4df4:	0a 15       	cp	r16, r10
    4df6:	1b 05       	cpc	r17, r11
    4df8:	24 f0       	brlt	.+8      	; 0x4e02 <vfprintf+0x384>
    4dfa:	90 e0       	ldi	r25, 0x00	; 0
    4dfc:	b3 01       	movw	r22, r6
    4dfe:	92 d4       	rcall	.+2340   	; 0x5724 <fputc>
    4e00:	e2 cf       	rjmp	.-60     	; 0x4dc6 <vfprintf+0x348>
    4e02:	0c 15       	cp	r16, r12
    4e04:	1d 05       	cpc	r17, r13
    4e06:	39 f4       	brne	.+14     	; 0x4e16 <vfprintf+0x398>
    4e08:	9a 81       	ldd	r25, Y+2	; 0x02
    4e0a:	96 33       	cpi	r25, 0x36	; 54
    4e0c:	18 f4       	brcc	.+6      	; 0x4e14 <vfprintf+0x396>
    4e0e:	95 33       	cpi	r25, 0x35	; 53
    4e10:	11 f4       	brne	.+4      	; 0x4e16 <vfprintf+0x398>
    4e12:	24 fe       	sbrs	r2, 4
    4e14:	81 e3       	ldi	r24, 0x31	; 49
    4e16:	90 e0       	ldi	r25, 0x00	; 0
    4e18:	45 c0       	rjmp	.+138    	; 0x4ea4 <vfprintf+0x426>
    4e1a:	8a 81       	ldd	r24, Y+2	; 0x02
    4e1c:	81 33       	cpi	r24, 0x31	; 49
    4e1e:	09 f0       	breq	.+2      	; 0x4e22 <vfprintf+0x3a4>
    4e20:	0f 7e       	andi	r16, 0xEF	; 239
    4e22:	90 e0       	ldi	r25, 0x00	; 0
    4e24:	b3 01       	movw	r22, r6
    4e26:	7e d4       	rcall	.+2300   	; 0x5724 <fputc>
    4e28:	99 20       	and	r9, r9
    4e2a:	91 f0       	breq	.+36     	; 0x4e50 <vfprintf+0x3d2>
    4e2c:	8e e2       	ldi	r24, 0x2E	; 46
    4e2e:	90 e0       	ldi	r25, 0x00	; 0
    4e30:	b3 01       	movw	r22, r6
    4e32:	78 d4       	rcall	.+2288   	; 0x5724 <fputc>
    4e34:	12 e0       	ldi	r17, 0x02	; 2
    4e36:	e1 e0       	ldi	r30, 0x01	; 1
    4e38:	f0 e0       	ldi	r31, 0x00	; 0
    4e3a:	ec 0f       	add	r30, r28
    4e3c:	fd 1f       	adc	r31, r29
    4e3e:	e1 0f       	add	r30, r17
    4e40:	f1 1d       	adc	r31, r1
    4e42:	1f 5f       	subi	r17, 0xFF	; 255
    4e44:	80 81       	ld	r24, Z
    4e46:	90 e0       	ldi	r25, 0x00	; 0
    4e48:	b3 01       	movw	r22, r6
    4e4a:	6c d4       	rcall	.+2264   	; 0x5724 <fputc>
    4e4c:	9a 94       	dec	r9
    4e4e:	99 f7       	brne	.-26     	; 0x4e36 <vfprintf+0x3b8>
    4e50:	44 fc       	sbrc	r4, 4
    4e52:	03 c0       	rjmp	.+6      	; 0x4e5a <vfprintf+0x3dc>
    4e54:	85 e6       	ldi	r24, 0x65	; 101
    4e56:	90 e0       	ldi	r25, 0x00	; 0
    4e58:	02 c0       	rjmp	.+4      	; 0x4e5e <vfprintf+0x3e0>
    4e5a:	85 e4       	ldi	r24, 0x45	; 69
    4e5c:	90 e0       	ldi	r25, 0x00	; 0
    4e5e:	b3 01       	movw	r22, r6
    4e60:	61 d4       	rcall	.+2242   	; 0x5724 <fputc>
    4e62:	d7 fc       	sbrc	r13, 7
    4e64:	05 c0       	rjmp	.+10     	; 0x4e70 <vfprintf+0x3f2>
    4e66:	c1 14       	cp	r12, r1
    4e68:	d1 04       	cpc	r13, r1
    4e6a:	41 f4       	brne	.+16     	; 0x4e7c <vfprintf+0x3fe>
    4e6c:	04 ff       	sbrs	r16, 4
    4e6e:	06 c0       	rjmp	.+12     	; 0x4e7c <vfprintf+0x3fe>
    4e70:	d0 94       	com	r13
    4e72:	c1 94       	neg	r12
    4e74:	d1 08       	sbc	r13, r1
    4e76:	d3 94       	inc	r13
    4e78:	8d e2       	ldi	r24, 0x2D	; 45
    4e7a:	01 c0       	rjmp	.+2      	; 0x4e7e <vfprintf+0x400>
    4e7c:	8b e2       	ldi	r24, 0x2B	; 43
    4e7e:	90 e0       	ldi	r25, 0x00	; 0
    4e80:	b3 01       	movw	r22, r6
    4e82:	50 d4       	rcall	.+2208   	; 0x5724 <fputc>
    4e84:	80 e3       	ldi	r24, 0x30	; 48
    4e86:	05 c0       	rjmp	.+10     	; 0x4e92 <vfprintf+0x414>
    4e88:	8f 5f       	subi	r24, 0xFF	; 255
    4e8a:	26 ef       	ldi	r18, 0xF6	; 246
    4e8c:	3f ef       	ldi	r19, 0xFF	; 255
    4e8e:	c2 0e       	add	r12, r18
    4e90:	d3 1e       	adc	r13, r19
    4e92:	3a e0       	ldi	r19, 0x0A	; 10
    4e94:	c3 16       	cp	r12, r19
    4e96:	d1 04       	cpc	r13, r1
    4e98:	bc f7       	brge	.-18     	; 0x4e88 <vfprintf+0x40a>
    4e9a:	90 e0       	ldi	r25, 0x00	; 0
    4e9c:	b3 01       	movw	r22, r6
    4e9e:	42 d4       	rcall	.+2180   	; 0x5724 <fputc>
    4ea0:	c6 01       	movw	r24, r12
    4ea2:	c0 96       	adiw	r24, 0x30	; 48
    4ea4:	b3 01       	movw	r22, r6
    4ea6:	3e d4       	rcall	.+2172   	; 0x5724 <fputc>
    4ea8:	cc 84       	ldd	r12, Y+12	; 0x0c
    4eaa:	dd 84       	ldd	r13, Y+13	; 0x0d
    4eac:	46 c1       	rjmp	.+652    	; 0x513a <vfprintf+0x6bc>
    4eae:	93 36       	cpi	r25, 0x63	; 99
    4eb0:	31 f0       	breq	.+12     	; 0x4ebe <vfprintf+0x440>
    4eb2:	93 37       	cpi	r25, 0x73	; 115
    4eb4:	99 f0       	breq	.+38     	; 0x4edc <vfprintf+0x45e>
    4eb6:	93 35       	cpi	r25, 0x53	; 83
    4eb8:	09 f0       	breq	.+2      	; 0x4ebc <vfprintf+0x43e>
    4eba:	55 c0       	rjmp	.+170    	; 0x4f66 <vfprintf+0x4e8>
    4ebc:	22 c0       	rjmp	.+68     	; 0x4f02 <vfprintf+0x484>
    4ebe:	f6 01       	movw	r30, r12
    4ec0:	80 81       	ld	r24, Z
    4ec2:	89 83       	std	Y+1, r24	; 0x01
    4ec4:	5e 01       	movw	r10, r28
    4ec6:	08 94       	sec
    4ec8:	a1 1c       	adc	r10, r1
    4eca:	b1 1c       	adc	r11, r1
    4ecc:	22 e0       	ldi	r18, 0x02	; 2
    4ece:	30 e0       	ldi	r19, 0x00	; 0
    4ed0:	c2 0e       	add	r12, r18
    4ed2:	d3 1e       	adc	r13, r19
    4ed4:	21 e0       	ldi	r18, 0x01	; 1
    4ed6:	e2 2e       	mov	r14, r18
    4ed8:	f1 2c       	mov	r15, r1
    4eda:	11 c0       	rjmp	.+34     	; 0x4efe <vfprintf+0x480>
    4edc:	f6 01       	movw	r30, r12
    4ede:	a0 80       	ld	r10, Z
    4ee0:	b1 80       	ldd	r11, Z+1	; 0x01
    4ee2:	16 fd       	sbrc	r17, 6
    4ee4:	03 c0       	rjmp	.+6      	; 0x4eec <vfprintf+0x46e>
    4ee6:	6f ef       	ldi	r22, 0xFF	; 255
    4ee8:	7f ef       	ldi	r23, 0xFF	; 255
    4eea:	02 c0       	rjmp	.+4      	; 0x4ef0 <vfprintf+0x472>
    4eec:	69 2d       	mov	r22, r9
    4eee:	70 e0       	ldi	r23, 0x00	; 0
    4ef0:	22 e0       	ldi	r18, 0x02	; 2
    4ef2:	30 e0       	ldi	r19, 0x00	; 0
    4ef4:	c2 0e       	add	r12, r18
    4ef6:	d3 1e       	adc	r13, r19
    4ef8:	c5 01       	movw	r24, r10
    4efa:	09 d4       	rcall	.+2066   	; 0x570e <strnlen>
    4efc:	7c 01       	movw	r14, r24
    4efe:	1f 77       	andi	r17, 0x7F	; 127
    4f00:	12 c0       	rjmp	.+36     	; 0x4f26 <vfprintf+0x4a8>
    4f02:	f6 01       	movw	r30, r12
    4f04:	a0 80       	ld	r10, Z
    4f06:	b1 80       	ldd	r11, Z+1	; 0x01
    4f08:	16 fd       	sbrc	r17, 6
    4f0a:	03 c0       	rjmp	.+6      	; 0x4f12 <vfprintf+0x494>
    4f0c:	6f ef       	ldi	r22, 0xFF	; 255
    4f0e:	7f ef       	ldi	r23, 0xFF	; 255
    4f10:	02 c0       	rjmp	.+4      	; 0x4f16 <vfprintf+0x498>
    4f12:	69 2d       	mov	r22, r9
    4f14:	70 e0       	ldi	r23, 0x00	; 0
    4f16:	22 e0       	ldi	r18, 0x02	; 2
    4f18:	30 e0       	ldi	r19, 0x00	; 0
    4f1a:	c2 0e       	add	r12, r18
    4f1c:	d3 1e       	adc	r13, r19
    4f1e:	c5 01       	movw	r24, r10
    4f20:	eb d3       	rcall	.+2006   	; 0x56f8 <strnlen_P>
    4f22:	7c 01       	movw	r14, r24
    4f24:	10 68       	ori	r17, 0x80	; 128
    4f26:	13 ff       	sbrs	r17, 3
    4f28:	06 c0       	rjmp	.+12     	; 0x4f36 <vfprintf+0x4b8>
    4f2a:	19 c0       	rjmp	.+50     	; 0x4f5e <vfprintf+0x4e0>
    4f2c:	80 e2       	ldi	r24, 0x20	; 32
    4f2e:	90 e0       	ldi	r25, 0x00	; 0
    4f30:	b3 01       	movw	r22, r6
    4f32:	f8 d3       	rcall	.+2032   	; 0x5724 <fputc>
    4f34:	8a 94       	dec	r8
    4f36:	88 2d       	mov	r24, r8
    4f38:	90 e0       	ldi	r25, 0x00	; 0
    4f3a:	e8 16       	cp	r14, r24
    4f3c:	f9 06       	cpc	r15, r25
    4f3e:	b0 f3       	brcs	.-20     	; 0x4f2c <vfprintf+0x4ae>
    4f40:	0e c0       	rjmp	.+28     	; 0x4f5e <vfprintf+0x4e0>
    4f42:	f5 01       	movw	r30, r10
    4f44:	17 fd       	sbrc	r17, 7
    4f46:	85 91       	lpm	r24, Z+
    4f48:	17 ff       	sbrs	r17, 7
    4f4a:	81 91       	ld	r24, Z+
    4f4c:	5f 01       	movw	r10, r30
    4f4e:	90 e0       	ldi	r25, 0x00	; 0
    4f50:	b3 01       	movw	r22, r6
    4f52:	e8 d3       	rcall	.+2000   	; 0x5724 <fputc>
    4f54:	81 10       	cpse	r8, r1
    4f56:	8a 94       	dec	r8
    4f58:	08 94       	sec
    4f5a:	e1 08       	sbc	r14, r1
    4f5c:	f1 08       	sbc	r15, r1
    4f5e:	e1 14       	cp	r14, r1
    4f60:	f1 04       	cpc	r15, r1
    4f62:	79 f7       	brne	.-34     	; 0x4f42 <vfprintf+0x4c4>
    4f64:	ea c0       	rjmp	.+468    	; 0x513a <vfprintf+0x6bc>
    4f66:	94 36       	cpi	r25, 0x64	; 100
    4f68:	11 f0       	breq	.+4      	; 0x4f6e <vfprintf+0x4f0>
    4f6a:	99 36       	cpi	r25, 0x69	; 105
    4f6c:	81 f5       	brne	.+96     	; 0x4fce <vfprintf+0x550>
    4f6e:	17 ff       	sbrs	r17, 7
    4f70:	08 c0       	rjmp	.+16     	; 0x4f82 <vfprintf+0x504>
    4f72:	f6 01       	movw	r30, r12
    4f74:	20 81       	ld	r18, Z
    4f76:	31 81       	ldd	r19, Z+1	; 0x01
    4f78:	42 81       	ldd	r20, Z+2	; 0x02
    4f7a:	53 81       	ldd	r21, Z+3	; 0x03
    4f7c:	84 e0       	ldi	r24, 0x04	; 4
    4f7e:	90 e0       	ldi	r25, 0x00	; 0
    4f80:	0a c0       	rjmp	.+20     	; 0x4f96 <vfprintf+0x518>
    4f82:	f6 01       	movw	r30, r12
    4f84:	80 81       	ld	r24, Z
    4f86:	91 81       	ldd	r25, Z+1	; 0x01
    4f88:	9c 01       	movw	r18, r24
    4f8a:	44 27       	eor	r20, r20
    4f8c:	37 fd       	sbrc	r19, 7
    4f8e:	40 95       	com	r20
    4f90:	54 2f       	mov	r21, r20
    4f92:	82 e0       	ldi	r24, 0x02	; 2
    4f94:	90 e0       	ldi	r25, 0x00	; 0
    4f96:	c8 0e       	add	r12, r24
    4f98:	d9 1e       	adc	r13, r25
    4f9a:	9f e6       	ldi	r25, 0x6F	; 111
    4f9c:	f9 2e       	mov	r15, r25
    4f9e:	f1 22       	and	r15, r17
    4fa0:	57 ff       	sbrs	r21, 7
    4fa2:	09 c0       	rjmp	.+18     	; 0x4fb6 <vfprintf+0x538>
    4fa4:	50 95       	com	r21
    4fa6:	40 95       	com	r20
    4fa8:	30 95       	com	r19
    4faa:	21 95       	neg	r18
    4fac:	3f 4f       	sbci	r19, 0xFF	; 255
    4fae:	4f 4f       	sbci	r20, 0xFF	; 255
    4fb0:	5f 4f       	sbci	r21, 0xFF	; 255
    4fb2:	90 e8       	ldi	r25, 0x80	; 128
    4fb4:	f9 2a       	or	r15, r25
    4fb6:	ca 01       	movw	r24, r20
    4fb8:	b9 01       	movw	r22, r18
    4fba:	ae 01       	movw	r20, r28
    4fbc:	4f 5f       	subi	r20, 0xFF	; 255
    4fbe:	5f 4f       	sbci	r21, 0xFF	; 255
    4fc0:	2a e0       	ldi	r18, 0x0A	; 10
    4fc2:	30 e0       	ldi	r19, 0x00	; 0
    4fc4:	22 d4       	rcall	.+2116   	; 0x580a <__ultoa_invert>
    4fc6:	e8 2e       	mov	r14, r24
    4fc8:	e8 89       	ldd	r30, Y+16	; 0x10
    4fca:	ee 1a       	sub	r14, r30
    4fcc:	40 c0       	rjmp	.+128    	; 0x504e <vfprintf+0x5d0>
    4fce:	95 37       	cpi	r25, 0x75	; 117
    4fd0:	21 f4       	brne	.+8      	; 0x4fda <vfprintf+0x55c>
    4fd2:	1f 7e       	andi	r17, 0xEF	; 239
    4fd4:	2a e0       	ldi	r18, 0x0A	; 10
    4fd6:	30 e0       	ldi	r19, 0x00	; 0
    4fd8:	1c c0       	rjmp	.+56     	; 0x5012 <vfprintf+0x594>
    4fda:	19 7f       	andi	r17, 0xF9	; 249
    4fdc:	9f 36       	cpi	r25, 0x6F	; 111
    4fde:	61 f0       	breq	.+24     	; 0x4ff8 <vfprintf+0x57a>
    4fe0:	90 37       	cpi	r25, 0x70	; 112
    4fe2:	20 f4       	brcc	.+8      	; 0x4fec <vfprintf+0x56e>
    4fe4:	98 35       	cpi	r25, 0x58	; 88
    4fe6:	09 f0       	breq	.+2      	; 0x4fea <vfprintf+0x56c>
    4fe8:	ab c0       	rjmp	.+342    	; 0x5140 <vfprintf+0x6c2>
    4fea:	0f c0       	rjmp	.+30     	; 0x500a <vfprintf+0x58c>
    4fec:	90 37       	cpi	r25, 0x70	; 112
    4fee:	39 f0       	breq	.+14     	; 0x4ffe <vfprintf+0x580>
    4ff0:	98 37       	cpi	r25, 0x78	; 120
    4ff2:	09 f0       	breq	.+2      	; 0x4ff6 <vfprintf+0x578>
    4ff4:	a5 c0       	rjmp	.+330    	; 0x5140 <vfprintf+0x6c2>
    4ff6:	04 c0       	rjmp	.+8      	; 0x5000 <vfprintf+0x582>
    4ff8:	28 e0       	ldi	r18, 0x08	; 8
    4ffa:	30 e0       	ldi	r19, 0x00	; 0
    4ffc:	0a c0       	rjmp	.+20     	; 0x5012 <vfprintf+0x594>
    4ffe:	10 61       	ori	r17, 0x10	; 16
    5000:	14 fd       	sbrc	r17, 4
    5002:	14 60       	ori	r17, 0x04	; 4
    5004:	20 e1       	ldi	r18, 0x10	; 16
    5006:	30 e0       	ldi	r19, 0x00	; 0
    5008:	04 c0       	rjmp	.+8      	; 0x5012 <vfprintf+0x594>
    500a:	14 fd       	sbrc	r17, 4
    500c:	16 60       	ori	r17, 0x06	; 6
    500e:	20 e1       	ldi	r18, 0x10	; 16
    5010:	32 e0       	ldi	r19, 0x02	; 2
    5012:	17 ff       	sbrs	r17, 7
    5014:	08 c0       	rjmp	.+16     	; 0x5026 <vfprintf+0x5a8>
    5016:	f6 01       	movw	r30, r12
    5018:	60 81       	ld	r22, Z
    501a:	71 81       	ldd	r23, Z+1	; 0x01
    501c:	82 81       	ldd	r24, Z+2	; 0x02
    501e:	93 81       	ldd	r25, Z+3	; 0x03
    5020:	44 e0       	ldi	r20, 0x04	; 4
    5022:	50 e0       	ldi	r21, 0x00	; 0
    5024:	08 c0       	rjmp	.+16     	; 0x5036 <vfprintf+0x5b8>
    5026:	f6 01       	movw	r30, r12
    5028:	80 81       	ld	r24, Z
    502a:	91 81       	ldd	r25, Z+1	; 0x01
    502c:	bc 01       	movw	r22, r24
    502e:	80 e0       	ldi	r24, 0x00	; 0
    5030:	90 e0       	ldi	r25, 0x00	; 0
    5032:	42 e0       	ldi	r20, 0x02	; 2
    5034:	50 e0       	ldi	r21, 0x00	; 0
    5036:	c4 0e       	add	r12, r20
    5038:	d5 1e       	adc	r13, r21
    503a:	ae 01       	movw	r20, r28
    503c:	4f 5f       	subi	r20, 0xFF	; 255
    503e:	5f 4f       	sbci	r21, 0xFF	; 255
    5040:	e4 d3       	rcall	.+1992   	; 0x580a <__ultoa_invert>
    5042:	e8 2e       	mov	r14, r24
    5044:	58 89       	ldd	r21, Y+16	; 0x10
    5046:	e5 1a       	sub	r14, r21
    5048:	8f e7       	ldi	r24, 0x7F	; 127
    504a:	f8 2e       	mov	r15, r24
    504c:	f1 22       	and	r15, r17
    504e:	f6 fe       	sbrs	r15, 6
    5050:	0b c0       	rjmp	.+22     	; 0x5068 <vfprintf+0x5ea>
    5052:	8e ef       	ldi	r24, 0xFE	; 254
    5054:	f8 22       	and	r15, r24
    5056:	e9 14       	cp	r14, r9
    5058:	38 f4       	brcc	.+14     	; 0x5068 <vfprintf+0x5ea>
    505a:	f4 fe       	sbrs	r15, 4
    505c:	07 c0       	rjmp	.+14     	; 0x506c <vfprintf+0x5ee>
    505e:	f2 fc       	sbrc	r15, 2
    5060:	05 c0       	rjmp	.+10     	; 0x506c <vfprintf+0x5ee>
    5062:	9f ee       	ldi	r25, 0xEF	; 239
    5064:	f9 22       	and	r15, r25
    5066:	02 c0       	rjmp	.+4      	; 0x506c <vfprintf+0x5ee>
    5068:	1e 2d       	mov	r17, r14
    506a:	01 c0       	rjmp	.+2      	; 0x506e <vfprintf+0x5f0>
    506c:	19 2d       	mov	r17, r9
    506e:	f4 fe       	sbrs	r15, 4
    5070:	0d c0       	rjmp	.+26     	; 0x508c <vfprintf+0x60e>
    5072:	fe 01       	movw	r30, r28
    5074:	ee 0d       	add	r30, r14
    5076:	f1 1d       	adc	r31, r1
    5078:	80 81       	ld	r24, Z
    507a:	80 33       	cpi	r24, 0x30	; 48
    507c:	19 f4       	brne	.+6      	; 0x5084 <vfprintf+0x606>
    507e:	e9 ee       	ldi	r30, 0xE9	; 233
    5080:	fe 22       	and	r15, r30
    5082:	08 c0       	rjmp	.+16     	; 0x5094 <vfprintf+0x616>
    5084:	1f 5f       	subi	r17, 0xFF	; 255
    5086:	f2 fe       	sbrs	r15, 2
    5088:	05 c0       	rjmp	.+10     	; 0x5094 <vfprintf+0x616>
    508a:	03 c0       	rjmp	.+6      	; 0x5092 <vfprintf+0x614>
    508c:	8f 2d       	mov	r24, r15
    508e:	86 78       	andi	r24, 0x86	; 134
    5090:	09 f0       	breq	.+2      	; 0x5094 <vfprintf+0x616>
    5092:	1f 5f       	subi	r17, 0xFF	; 255
    5094:	0f 2d       	mov	r16, r15
    5096:	f3 fc       	sbrc	r15, 3
    5098:	13 c0       	rjmp	.+38     	; 0x50c0 <vfprintf+0x642>
    509a:	f0 fe       	sbrs	r15, 0
    509c:	0e c0       	rjmp	.+28     	; 0x50ba <vfprintf+0x63c>
    509e:	18 15       	cp	r17, r8
    50a0:	10 f0       	brcs	.+4      	; 0x50a6 <vfprintf+0x628>
    50a2:	9e 2c       	mov	r9, r14
    50a4:	0a c0       	rjmp	.+20     	; 0x50ba <vfprintf+0x63c>
    50a6:	9e 2c       	mov	r9, r14
    50a8:	98 0c       	add	r9, r8
    50aa:	91 1a       	sub	r9, r17
    50ac:	18 2d       	mov	r17, r8
    50ae:	05 c0       	rjmp	.+10     	; 0x50ba <vfprintf+0x63c>
    50b0:	80 e2       	ldi	r24, 0x20	; 32
    50b2:	90 e0       	ldi	r25, 0x00	; 0
    50b4:	b3 01       	movw	r22, r6
    50b6:	36 d3       	rcall	.+1644   	; 0x5724 <fputc>
    50b8:	1f 5f       	subi	r17, 0xFF	; 255
    50ba:	18 15       	cp	r17, r8
    50bc:	c8 f3       	brcs	.-14     	; 0x50b0 <vfprintf+0x632>
    50be:	04 c0       	rjmp	.+8      	; 0x50c8 <vfprintf+0x64a>
    50c0:	18 15       	cp	r17, r8
    50c2:	10 f4       	brcc	.+4      	; 0x50c8 <vfprintf+0x64a>
    50c4:	81 1a       	sub	r8, r17
    50c6:	01 c0       	rjmp	.+2      	; 0x50ca <vfprintf+0x64c>
    50c8:	88 24       	eor	r8, r8
    50ca:	04 ff       	sbrs	r16, 4
    50cc:	0e c0       	rjmp	.+28     	; 0x50ea <vfprintf+0x66c>
    50ce:	80 e3       	ldi	r24, 0x30	; 48
    50d0:	90 e0       	ldi	r25, 0x00	; 0
    50d2:	b3 01       	movw	r22, r6
    50d4:	27 d3       	rcall	.+1614   	; 0x5724 <fputc>
    50d6:	02 ff       	sbrs	r16, 2
    50d8:	1b c0       	rjmp	.+54     	; 0x5110 <vfprintf+0x692>
    50da:	01 fd       	sbrc	r16, 1
    50dc:	03 c0       	rjmp	.+6      	; 0x50e4 <vfprintf+0x666>
    50de:	88 e7       	ldi	r24, 0x78	; 120
    50e0:	90 e0       	ldi	r25, 0x00	; 0
    50e2:	0e c0       	rjmp	.+28     	; 0x5100 <vfprintf+0x682>
    50e4:	88 e5       	ldi	r24, 0x58	; 88
    50e6:	90 e0       	ldi	r25, 0x00	; 0
    50e8:	0b c0       	rjmp	.+22     	; 0x5100 <vfprintf+0x682>
    50ea:	80 2f       	mov	r24, r16
    50ec:	86 78       	andi	r24, 0x86	; 134
    50ee:	81 f0       	breq	.+32     	; 0x5110 <vfprintf+0x692>
    50f0:	01 ff       	sbrs	r16, 1
    50f2:	02 c0       	rjmp	.+4      	; 0x50f8 <vfprintf+0x67a>
    50f4:	8b e2       	ldi	r24, 0x2B	; 43
    50f6:	01 c0       	rjmp	.+2      	; 0x50fa <vfprintf+0x67c>
    50f8:	80 e2       	ldi	r24, 0x20	; 32
    50fa:	f7 fc       	sbrc	r15, 7
    50fc:	8d e2       	ldi	r24, 0x2D	; 45
    50fe:	90 e0       	ldi	r25, 0x00	; 0
    5100:	b3 01       	movw	r22, r6
    5102:	10 d3       	rcall	.+1568   	; 0x5724 <fputc>
    5104:	05 c0       	rjmp	.+10     	; 0x5110 <vfprintf+0x692>
    5106:	80 e3       	ldi	r24, 0x30	; 48
    5108:	90 e0       	ldi	r25, 0x00	; 0
    510a:	b3 01       	movw	r22, r6
    510c:	0b d3       	rcall	.+1558   	; 0x5724 <fputc>
    510e:	9a 94       	dec	r9
    5110:	e9 14       	cp	r14, r9
    5112:	c8 f3       	brcs	.-14     	; 0x5106 <vfprintf+0x688>
    5114:	ea 94       	dec	r14
    5116:	e1 e0       	ldi	r30, 0x01	; 1
    5118:	f0 e0       	ldi	r31, 0x00	; 0
    511a:	ec 0f       	add	r30, r28
    511c:	fd 1f       	adc	r31, r29
    511e:	ee 0d       	add	r30, r14
    5120:	f1 1d       	adc	r31, r1
    5122:	80 81       	ld	r24, Z
    5124:	90 e0       	ldi	r25, 0x00	; 0
    5126:	b3 01       	movw	r22, r6
    5128:	fd d2       	rcall	.+1530   	; 0x5724 <fputc>
    512a:	ee 20       	and	r14, r14
    512c:	99 f7       	brne	.-26     	; 0x5114 <vfprintf+0x696>
    512e:	05 c0       	rjmp	.+10     	; 0x513a <vfprintf+0x6bc>
    5130:	80 e2       	ldi	r24, 0x20	; 32
    5132:	90 e0       	ldi	r25, 0x00	; 0
    5134:	b3 01       	movw	r22, r6
    5136:	f6 d2       	rcall	.+1516   	; 0x5724 <fputc>
    5138:	8a 94       	dec	r8
    513a:	88 20       	and	r8, r8
    513c:	c9 f7       	brne	.-14     	; 0x5130 <vfprintf+0x6b2>
    513e:	b6 cc       	rjmp	.-1684   	; 0x4aac <vfprintf+0x2e>
    5140:	f3 01       	movw	r30, r6
    5142:	66 81       	ldd	r22, Z+6	; 0x06
    5144:	77 81       	ldd	r23, Z+7	; 0x07
    5146:	cb 01       	movw	r24, r22
    5148:	61 96       	adiw	r28, 0x11	; 17
    514a:	e2 e1       	ldi	r30, 0x12	; 18
    514c:	70 c0       	rjmp	.+224    	; 0x522e <__epilogue_restores__>

0000514e <__mulsi3>:
    514e:	62 9f       	mul	r22, r18
    5150:	d0 01       	movw	r26, r0
    5152:	73 9f       	mul	r23, r19
    5154:	f0 01       	movw	r30, r0
    5156:	82 9f       	mul	r24, r18
    5158:	e0 0d       	add	r30, r0
    515a:	f1 1d       	adc	r31, r1
    515c:	64 9f       	mul	r22, r20
    515e:	e0 0d       	add	r30, r0
    5160:	f1 1d       	adc	r31, r1
    5162:	92 9f       	mul	r25, r18
    5164:	f0 0d       	add	r31, r0
    5166:	83 9f       	mul	r24, r19
    5168:	f0 0d       	add	r31, r0
    516a:	74 9f       	mul	r23, r20
    516c:	f0 0d       	add	r31, r0
    516e:	65 9f       	mul	r22, r21
    5170:	f0 0d       	add	r31, r0
    5172:	99 27       	eor	r25, r25
    5174:	72 9f       	mul	r23, r18
    5176:	b0 0d       	add	r27, r0
    5178:	e1 1d       	adc	r30, r1
    517a:	f9 1f       	adc	r31, r25
    517c:	63 9f       	mul	r22, r19
    517e:	b0 0d       	add	r27, r0
    5180:	e1 1d       	adc	r30, r1
    5182:	f9 1f       	adc	r31, r25
    5184:	bd 01       	movw	r22, r26
    5186:	cf 01       	movw	r24, r30
    5188:	11 24       	eor	r1, r1
    518a:	08 95       	ret

0000518c <__divmodhi4>:
    518c:	97 fb       	bst	r25, 7
    518e:	09 2e       	mov	r0, r25
    5190:	07 26       	eor	r0, r23
    5192:	0a d0       	rcall	.+20     	; 0x51a8 <__divmodhi4_neg1>
    5194:	77 fd       	sbrc	r23, 7
    5196:	04 d0       	rcall	.+8      	; 0x51a0 <__divmodhi4_neg2>
    5198:	65 d0       	rcall	.+202    	; 0x5264 <__udivmodhi4>
    519a:	06 d0       	rcall	.+12     	; 0x51a8 <__divmodhi4_neg1>
    519c:	00 20       	and	r0, r0
    519e:	1a f4       	brpl	.+6      	; 0x51a6 <__divmodhi4_exit>

000051a0 <__divmodhi4_neg2>:
    51a0:	70 95       	com	r23
    51a2:	61 95       	neg	r22
    51a4:	7f 4f       	sbci	r23, 0xFF	; 255

000051a6 <__divmodhi4_exit>:
    51a6:	08 95       	ret

000051a8 <__divmodhi4_neg1>:
    51a8:	f6 f7       	brtc	.-4      	; 0x51a6 <__divmodhi4_exit>
    51aa:	90 95       	com	r25
    51ac:	81 95       	neg	r24
    51ae:	9f 4f       	sbci	r25, 0xFF	; 255
    51b0:	08 95       	ret

000051b2 <__udivmodsi4>:
    51b2:	a1 e2       	ldi	r26, 0x21	; 33
    51b4:	1a 2e       	mov	r1, r26
    51b6:	aa 1b       	sub	r26, r26
    51b8:	bb 1b       	sub	r27, r27
    51ba:	fd 01       	movw	r30, r26
    51bc:	0d c0       	rjmp	.+26     	; 0x51d8 <__udivmodsi4_ep>

000051be <__udivmodsi4_loop>:
    51be:	aa 1f       	adc	r26, r26
    51c0:	bb 1f       	adc	r27, r27
    51c2:	ee 1f       	adc	r30, r30
    51c4:	ff 1f       	adc	r31, r31
    51c6:	a2 17       	cp	r26, r18
    51c8:	b3 07       	cpc	r27, r19
    51ca:	e4 07       	cpc	r30, r20
    51cc:	f5 07       	cpc	r31, r21
    51ce:	20 f0       	brcs	.+8      	; 0x51d8 <__udivmodsi4_ep>
    51d0:	a2 1b       	sub	r26, r18
    51d2:	b3 0b       	sbc	r27, r19
    51d4:	e4 0b       	sbc	r30, r20
    51d6:	f5 0b       	sbc	r31, r21

000051d8 <__udivmodsi4_ep>:
    51d8:	66 1f       	adc	r22, r22
    51da:	77 1f       	adc	r23, r23
    51dc:	88 1f       	adc	r24, r24
    51de:	99 1f       	adc	r25, r25
    51e0:	1a 94       	dec	r1
    51e2:	69 f7       	brne	.-38     	; 0x51be <__udivmodsi4_loop>
    51e4:	60 95       	com	r22
    51e6:	70 95       	com	r23
    51e8:	80 95       	com	r24
    51ea:	90 95       	com	r25
    51ec:	9b 01       	movw	r18, r22
    51ee:	ac 01       	movw	r20, r24
    51f0:	bd 01       	movw	r22, r26
    51f2:	cf 01       	movw	r24, r30
    51f4:	08 95       	ret

000051f6 <__prologue_saves__>:
    51f6:	2f 92       	push	r2
    51f8:	3f 92       	push	r3
    51fa:	4f 92       	push	r4
    51fc:	5f 92       	push	r5
    51fe:	6f 92       	push	r6
    5200:	7f 92       	push	r7
    5202:	8f 92       	push	r8
    5204:	9f 92       	push	r9
    5206:	af 92       	push	r10
    5208:	bf 92       	push	r11
    520a:	cf 92       	push	r12
    520c:	df 92       	push	r13
    520e:	ef 92       	push	r14
    5210:	ff 92       	push	r15
    5212:	0f 93       	push	r16
    5214:	1f 93       	push	r17
    5216:	cf 93       	push	r28
    5218:	df 93       	push	r29
    521a:	cd b7       	in	r28, 0x3d	; 61
    521c:	de b7       	in	r29, 0x3e	; 62
    521e:	ca 1b       	sub	r28, r26
    5220:	db 0b       	sbc	r29, r27
    5222:	0f b6       	in	r0, 0x3f	; 63
    5224:	f8 94       	cli
    5226:	de bf       	out	0x3e, r29	; 62
    5228:	0f be       	out	0x3f, r0	; 63
    522a:	cd bf       	out	0x3d, r28	; 61
    522c:	09 94       	ijmp

0000522e <__epilogue_restores__>:
    522e:	2a 88       	ldd	r2, Y+18	; 0x12
    5230:	39 88       	ldd	r3, Y+17	; 0x11
    5232:	48 88       	ldd	r4, Y+16	; 0x10
    5234:	5f 84       	ldd	r5, Y+15	; 0x0f
    5236:	6e 84       	ldd	r6, Y+14	; 0x0e
    5238:	7d 84       	ldd	r7, Y+13	; 0x0d
    523a:	8c 84       	ldd	r8, Y+12	; 0x0c
    523c:	9b 84       	ldd	r9, Y+11	; 0x0b
    523e:	aa 84       	ldd	r10, Y+10	; 0x0a
    5240:	b9 84       	ldd	r11, Y+9	; 0x09
    5242:	c8 84       	ldd	r12, Y+8	; 0x08
    5244:	df 80       	ldd	r13, Y+7	; 0x07
    5246:	ee 80       	ldd	r14, Y+6	; 0x06
    5248:	fd 80       	ldd	r15, Y+5	; 0x05
    524a:	0c 81       	ldd	r16, Y+4	; 0x04
    524c:	1b 81       	ldd	r17, Y+3	; 0x03
    524e:	aa 81       	ldd	r26, Y+2	; 0x02
    5250:	b9 81       	ldd	r27, Y+1	; 0x01
    5252:	ce 0f       	add	r28, r30
    5254:	d1 1d       	adc	r29, r1
    5256:	0f b6       	in	r0, 0x3f	; 63
    5258:	f8 94       	cli
    525a:	de bf       	out	0x3e, r29	; 62
    525c:	0f be       	out	0x3f, r0	; 63
    525e:	cd bf       	out	0x3d, r28	; 61
    5260:	ed 01       	movw	r28, r26
    5262:	08 95       	ret

00005264 <__udivmodhi4>:
    5264:	aa 1b       	sub	r26, r26
    5266:	bb 1b       	sub	r27, r27
    5268:	51 e1       	ldi	r21, 0x11	; 17
    526a:	07 c0       	rjmp	.+14     	; 0x527a <__udivmodhi4_ep>

0000526c <__udivmodhi4_loop>:
    526c:	aa 1f       	adc	r26, r26
    526e:	bb 1f       	adc	r27, r27
    5270:	a6 17       	cp	r26, r22
    5272:	b7 07       	cpc	r27, r23
    5274:	10 f0       	brcs	.+4      	; 0x527a <__udivmodhi4_ep>
    5276:	a6 1b       	sub	r26, r22
    5278:	b7 0b       	sbc	r27, r23

0000527a <__udivmodhi4_ep>:
    527a:	88 1f       	adc	r24, r24
    527c:	99 1f       	adc	r25, r25
    527e:	5a 95       	dec	r21
    5280:	a9 f7       	brne	.-22     	; 0x526c <__udivmodhi4_loop>
    5282:	80 95       	com	r24
    5284:	90 95       	com	r25
    5286:	bc 01       	movw	r22, r24
    5288:	cd 01       	movw	r24, r26
    528a:	08 95       	ret

0000528c <malloc>:
    528c:	cf 93       	push	r28
    528e:	df 93       	push	r29
    5290:	bc 01       	movw	r22, r24
    5292:	82 30       	cpi	r24, 0x02	; 2
    5294:	91 05       	cpc	r25, r1
    5296:	10 f4       	brcc	.+4      	; 0x529c <malloc+0x10>
    5298:	62 e0       	ldi	r22, 0x02	; 2
    529a:	70 e0       	ldi	r23, 0x00	; 0
    529c:	a0 91 e5 04 	lds	r26, 0x04E5
    52a0:	b0 91 e6 04 	lds	r27, 0x04E6
    52a4:	ed 01       	movw	r28, r26
    52a6:	e0 e0       	ldi	r30, 0x00	; 0
    52a8:	f0 e0       	ldi	r31, 0x00	; 0
    52aa:	40 e0       	ldi	r20, 0x00	; 0
    52ac:	50 e0       	ldi	r21, 0x00	; 0
    52ae:	21 c0       	rjmp	.+66     	; 0x52f2 <malloc+0x66>
    52b0:	88 81       	ld	r24, Y
    52b2:	99 81       	ldd	r25, Y+1	; 0x01
    52b4:	86 17       	cp	r24, r22
    52b6:	97 07       	cpc	r25, r23
    52b8:	69 f4       	brne	.+26     	; 0x52d4 <malloc+0x48>
    52ba:	8a 81       	ldd	r24, Y+2	; 0x02
    52bc:	9b 81       	ldd	r25, Y+3	; 0x03
    52be:	30 97       	sbiw	r30, 0x00	; 0
    52c0:	19 f0       	breq	.+6      	; 0x52c8 <malloc+0x3c>
    52c2:	93 83       	std	Z+3, r25	; 0x03
    52c4:	82 83       	std	Z+2, r24	; 0x02
    52c6:	04 c0       	rjmp	.+8      	; 0x52d0 <malloc+0x44>
    52c8:	90 93 e6 04 	sts	0x04E6, r25
    52cc:	80 93 e5 04 	sts	0x04E5, r24
    52d0:	fe 01       	movw	r30, r28
    52d2:	34 c0       	rjmp	.+104    	; 0x533c <malloc+0xb0>
    52d4:	68 17       	cp	r22, r24
    52d6:	79 07       	cpc	r23, r25
    52d8:	38 f4       	brcc	.+14     	; 0x52e8 <malloc+0x5c>
    52da:	41 15       	cp	r20, r1
    52dc:	51 05       	cpc	r21, r1
    52de:	19 f0       	breq	.+6      	; 0x52e6 <malloc+0x5a>
    52e0:	84 17       	cp	r24, r20
    52e2:	95 07       	cpc	r25, r21
    52e4:	08 f4       	brcc	.+2      	; 0x52e8 <malloc+0x5c>
    52e6:	ac 01       	movw	r20, r24
    52e8:	fe 01       	movw	r30, r28
    52ea:	8a 81       	ldd	r24, Y+2	; 0x02
    52ec:	9b 81       	ldd	r25, Y+3	; 0x03
    52ee:	9c 01       	movw	r18, r24
    52f0:	e9 01       	movw	r28, r18
    52f2:	20 97       	sbiw	r28, 0x00	; 0
    52f4:	e9 f6       	brne	.-70     	; 0x52b0 <malloc+0x24>
    52f6:	41 15       	cp	r20, r1
    52f8:	51 05       	cpc	r21, r1
    52fa:	a9 f1       	breq	.+106    	; 0x5366 <malloc+0xda>
    52fc:	ca 01       	movw	r24, r20
    52fe:	86 1b       	sub	r24, r22
    5300:	97 0b       	sbc	r25, r23
    5302:	04 97       	sbiw	r24, 0x04	; 4
    5304:	08 f4       	brcc	.+2      	; 0x5308 <malloc+0x7c>
    5306:	ba 01       	movw	r22, r20
    5308:	e0 e0       	ldi	r30, 0x00	; 0
    530a:	f0 e0       	ldi	r31, 0x00	; 0
    530c:	2a c0       	rjmp	.+84     	; 0x5362 <malloc+0xd6>
    530e:	8d 91       	ld	r24, X+
    5310:	9c 91       	ld	r25, X
    5312:	11 97       	sbiw	r26, 0x01	; 1
    5314:	84 17       	cp	r24, r20
    5316:	95 07       	cpc	r25, r21
    5318:	f9 f4       	brne	.+62     	; 0x5358 <malloc+0xcc>
    531a:	64 17       	cp	r22, r20
    531c:	75 07       	cpc	r23, r21
    531e:	81 f4       	brne	.+32     	; 0x5340 <malloc+0xb4>
    5320:	12 96       	adiw	r26, 0x02	; 2
    5322:	8d 91       	ld	r24, X+
    5324:	9c 91       	ld	r25, X
    5326:	13 97       	sbiw	r26, 0x03	; 3
    5328:	30 97       	sbiw	r30, 0x00	; 0
    532a:	19 f0       	breq	.+6      	; 0x5332 <malloc+0xa6>
    532c:	93 83       	std	Z+3, r25	; 0x03
    532e:	82 83       	std	Z+2, r24	; 0x02
    5330:	04 c0       	rjmp	.+8      	; 0x533a <malloc+0xae>
    5332:	90 93 e6 04 	sts	0x04E6, r25
    5336:	80 93 e5 04 	sts	0x04E5, r24
    533a:	fd 01       	movw	r30, r26
    533c:	32 96       	adiw	r30, 0x02	; 2
    533e:	4f c0       	rjmp	.+158    	; 0x53de <malloc+0x152>
    5340:	ca 01       	movw	r24, r20
    5342:	86 1b       	sub	r24, r22
    5344:	97 0b       	sbc	r25, r23
    5346:	fd 01       	movw	r30, r26
    5348:	e8 0f       	add	r30, r24
    534a:	f9 1f       	adc	r31, r25
    534c:	61 93       	st	Z+, r22
    534e:	71 93       	st	Z+, r23
    5350:	02 97       	sbiw	r24, 0x02	; 2
    5352:	8d 93       	st	X+, r24
    5354:	9c 93       	st	X, r25
    5356:	43 c0       	rjmp	.+134    	; 0x53de <malloc+0x152>
    5358:	fd 01       	movw	r30, r26
    535a:	82 81       	ldd	r24, Z+2	; 0x02
    535c:	93 81       	ldd	r25, Z+3	; 0x03
    535e:	9c 01       	movw	r18, r24
    5360:	d9 01       	movw	r26, r18
    5362:	10 97       	sbiw	r26, 0x00	; 0
    5364:	a1 f6       	brne	.-88     	; 0x530e <malloc+0x82>
    5366:	80 91 e3 04 	lds	r24, 0x04E3
    536a:	90 91 e4 04 	lds	r25, 0x04E4
    536e:	89 2b       	or	r24, r25
    5370:	41 f4       	brne	.+16     	; 0x5382 <malloc+0xf6>
    5372:	80 91 e5 01 	lds	r24, 0x01E5
    5376:	90 91 e6 01 	lds	r25, 0x01E6
    537a:	90 93 e4 04 	sts	0x04E4, r25
    537e:	80 93 e3 04 	sts	0x04E3, r24
    5382:	40 91 e7 01 	lds	r20, 0x01E7
    5386:	50 91 e8 01 	lds	r21, 0x01E8
    538a:	41 15       	cp	r20, r1
    538c:	51 05       	cpc	r21, r1
    538e:	41 f4       	brne	.+16     	; 0x53a0 <malloc+0x114>
    5390:	4d b7       	in	r20, 0x3d	; 61
    5392:	5e b7       	in	r21, 0x3e	; 62
    5394:	80 91 e3 01 	lds	r24, 0x01E3
    5398:	90 91 e4 01 	lds	r25, 0x01E4
    539c:	48 1b       	sub	r20, r24
    539e:	59 0b       	sbc	r21, r25
    53a0:	20 91 e3 04 	lds	r18, 0x04E3
    53a4:	30 91 e4 04 	lds	r19, 0x04E4
    53a8:	24 17       	cp	r18, r20
    53aa:	35 07       	cpc	r19, r21
    53ac:	b0 f4       	brcc	.+44     	; 0x53da <malloc+0x14e>
    53ae:	ca 01       	movw	r24, r20
    53b0:	82 1b       	sub	r24, r18
    53b2:	93 0b       	sbc	r25, r19
    53b4:	86 17       	cp	r24, r22
    53b6:	97 07       	cpc	r25, r23
    53b8:	80 f0       	brcs	.+32     	; 0x53da <malloc+0x14e>
    53ba:	ab 01       	movw	r20, r22
    53bc:	4e 5f       	subi	r20, 0xFE	; 254
    53be:	5f 4f       	sbci	r21, 0xFF	; 255
    53c0:	84 17       	cp	r24, r20
    53c2:	95 07       	cpc	r25, r21
    53c4:	50 f0       	brcs	.+20     	; 0x53da <malloc+0x14e>
    53c6:	42 0f       	add	r20, r18
    53c8:	53 1f       	adc	r21, r19
    53ca:	50 93 e4 04 	sts	0x04E4, r21
    53ce:	40 93 e3 04 	sts	0x04E3, r20
    53d2:	f9 01       	movw	r30, r18
    53d4:	61 93       	st	Z+, r22
    53d6:	71 93       	st	Z+, r23
    53d8:	02 c0       	rjmp	.+4      	; 0x53de <malloc+0x152>
    53da:	e0 e0       	ldi	r30, 0x00	; 0
    53dc:	f0 e0       	ldi	r31, 0x00	; 0
    53de:	cf 01       	movw	r24, r30
    53e0:	df 91       	pop	r29
    53e2:	cf 91       	pop	r28
    53e4:	08 95       	ret

000053e6 <free>:
    53e6:	cf 93       	push	r28
    53e8:	df 93       	push	r29
    53ea:	00 97       	sbiw	r24, 0x00	; 0
    53ec:	09 f4       	brne	.+2      	; 0x53f0 <free+0xa>
    53ee:	50 c0       	rjmp	.+160    	; 0x5490 <free+0xaa>
    53f0:	ec 01       	movw	r28, r24
    53f2:	22 97       	sbiw	r28, 0x02	; 2
    53f4:	1b 82       	std	Y+3, r1	; 0x03
    53f6:	1a 82       	std	Y+2, r1	; 0x02
    53f8:	a0 91 e5 04 	lds	r26, 0x04E5
    53fc:	b0 91 e6 04 	lds	r27, 0x04E6
    5400:	10 97       	sbiw	r26, 0x00	; 0
    5402:	09 f1       	breq	.+66     	; 0x5446 <free+0x60>
    5404:	40 e0       	ldi	r20, 0x00	; 0
    5406:	50 e0       	ldi	r21, 0x00	; 0
    5408:	ac 17       	cp	r26, r28
    540a:	bd 07       	cpc	r27, r29
    540c:	08 f1       	brcs	.+66     	; 0x5450 <free+0x6a>
    540e:	bb 83       	std	Y+3, r27	; 0x03
    5410:	aa 83       	std	Y+2, r26	; 0x02
    5412:	fe 01       	movw	r30, r28
    5414:	21 91       	ld	r18, Z+
    5416:	31 91       	ld	r19, Z+
    5418:	e2 0f       	add	r30, r18
    541a:	f3 1f       	adc	r31, r19
    541c:	ae 17       	cp	r26, r30
    541e:	bf 07       	cpc	r27, r31
    5420:	79 f4       	brne	.+30     	; 0x5440 <free+0x5a>
    5422:	8d 91       	ld	r24, X+
    5424:	9c 91       	ld	r25, X
    5426:	11 97       	sbiw	r26, 0x01	; 1
    5428:	28 0f       	add	r18, r24
    542a:	39 1f       	adc	r19, r25
    542c:	2e 5f       	subi	r18, 0xFE	; 254
    542e:	3f 4f       	sbci	r19, 0xFF	; 255
    5430:	39 83       	std	Y+1, r19	; 0x01
    5432:	28 83       	st	Y, r18
    5434:	12 96       	adiw	r26, 0x02	; 2
    5436:	8d 91       	ld	r24, X+
    5438:	9c 91       	ld	r25, X
    543a:	13 97       	sbiw	r26, 0x03	; 3
    543c:	9b 83       	std	Y+3, r25	; 0x03
    543e:	8a 83       	std	Y+2, r24	; 0x02
    5440:	41 15       	cp	r20, r1
    5442:	51 05       	cpc	r21, r1
    5444:	71 f4       	brne	.+28     	; 0x5462 <free+0x7c>
    5446:	d0 93 e6 04 	sts	0x04E6, r29
    544a:	c0 93 e5 04 	sts	0x04E5, r28
    544e:	20 c0       	rjmp	.+64     	; 0x5490 <free+0xaa>
    5450:	12 96       	adiw	r26, 0x02	; 2
    5452:	8d 91       	ld	r24, X+
    5454:	9c 91       	ld	r25, X
    5456:	13 97       	sbiw	r26, 0x03	; 3
    5458:	ad 01       	movw	r20, r26
    545a:	00 97       	sbiw	r24, 0x00	; 0
    545c:	11 f0       	breq	.+4      	; 0x5462 <free+0x7c>
    545e:	dc 01       	movw	r26, r24
    5460:	d3 cf       	rjmp	.-90     	; 0x5408 <free+0x22>
    5462:	fa 01       	movw	r30, r20
    5464:	d3 83       	std	Z+3, r29	; 0x03
    5466:	c2 83       	std	Z+2, r28	; 0x02
    5468:	21 91       	ld	r18, Z+
    546a:	31 91       	ld	r19, Z+
    546c:	e2 0f       	add	r30, r18
    546e:	f3 1f       	adc	r31, r19
    5470:	ce 17       	cp	r28, r30
    5472:	df 07       	cpc	r29, r31
    5474:	69 f4       	brne	.+26     	; 0x5490 <free+0xaa>
    5476:	88 81       	ld	r24, Y
    5478:	99 81       	ldd	r25, Y+1	; 0x01
    547a:	28 0f       	add	r18, r24
    547c:	39 1f       	adc	r19, r25
    547e:	2e 5f       	subi	r18, 0xFE	; 254
    5480:	3f 4f       	sbci	r19, 0xFF	; 255
    5482:	fa 01       	movw	r30, r20
    5484:	31 83       	std	Z+1, r19	; 0x01
    5486:	20 83       	st	Z, r18
    5488:	8a 81       	ldd	r24, Y+2	; 0x02
    548a:	9b 81       	ldd	r25, Y+3	; 0x03
    548c:	93 83       	std	Z+3, r25	; 0x03
    548e:	82 83       	std	Z+2, r24	; 0x02
    5490:	df 91       	pop	r29
    5492:	cf 91       	pop	r28
    5494:	08 95       	ret

00005496 <do_rand>:
    5496:	a0 e0       	ldi	r26, 0x00	; 0
    5498:	b0 e0       	ldi	r27, 0x00	; 0
    549a:	e0 e5       	ldi	r30, 0x50	; 80
    549c:	fa e2       	ldi	r31, 0x2A	; 42
    549e:	b3 ce       	rjmp	.-666    	; 0x5206 <__prologue_saves__+0x10>
    54a0:	ec 01       	movw	r28, r24
    54a2:	a8 80       	ld	r10, Y
    54a4:	b9 80       	ldd	r11, Y+1	; 0x01
    54a6:	ca 80       	ldd	r12, Y+2	; 0x02
    54a8:	db 80       	ldd	r13, Y+3	; 0x03
    54aa:	a1 14       	cp	r10, r1
    54ac:	b1 04       	cpc	r11, r1
    54ae:	c1 04       	cpc	r12, r1
    54b0:	d1 04       	cpc	r13, r1
    54b2:	41 f4       	brne	.+16     	; 0x54c4 <do_rand+0x2e>
    54b4:	84 e2       	ldi	r24, 0x24	; 36
    54b6:	a8 2e       	mov	r10, r24
    54b8:	89 ed       	ldi	r24, 0xD9	; 217
    54ba:	b8 2e       	mov	r11, r24
    54bc:	8b e5       	ldi	r24, 0x5B	; 91
    54be:	c8 2e       	mov	r12, r24
    54c0:	87 e0       	ldi	r24, 0x07	; 7
    54c2:	d8 2e       	mov	r13, r24
    54c4:	c6 01       	movw	r24, r12
    54c6:	b5 01       	movw	r22, r10
    54c8:	2d e1       	ldi	r18, 0x1D	; 29
    54ca:	33 ef       	ldi	r19, 0xF3	; 243
    54cc:	41 e0       	ldi	r20, 0x01	; 1
    54ce:	50 e0       	ldi	r21, 0x00	; 0
    54d0:	fa d1       	rcall	.+1012   	; 0x58c6 <__divmodsi4>
    54d2:	27 ea       	ldi	r18, 0xA7	; 167
    54d4:	31 e4       	ldi	r19, 0x41	; 65
    54d6:	40 e0       	ldi	r20, 0x00	; 0
    54d8:	50 e0       	ldi	r21, 0x00	; 0
    54da:	39 de       	rcall	.-910    	; 0x514e <__mulsi3>
    54dc:	7b 01       	movw	r14, r22
    54de:	8c 01       	movw	r16, r24
    54e0:	c6 01       	movw	r24, r12
    54e2:	b5 01       	movw	r22, r10
    54e4:	2d e1       	ldi	r18, 0x1D	; 29
    54e6:	33 ef       	ldi	r19, 0xF3	; 243
    54e8:	41 e0       	ldi	r20, 0x01	; 1
    54ea:	50 e0       	ldi	r21, 0x00	; 0
    54ec:	ec d1       	rcall	.+984    	; 0x58c6 <__divmodsi4>
    54ee:	ca 01       	movw	r24, r20
    54f0:	b9 01       	movw	r22, r18
    54f2:	2c ee       	ldi	r18, 0xEC	; 236
    54f4:	34 ef       	ldi	r19, 0xF4	; 244
    54f6:	4f ef       	ldi	r20, 0xFF	; 255
    54f8:	5f ef       	ldi	r21, 0xFF	; 255
    54fa:	29 de       	rcall	.-942    	; 0x514e <__mulsi3>
    54fc:	6e 0d       	add	r22, r14
    54fe:	7f 1d       	adc	r23, r15
    5500:	80 1f       	adc	r24, r16
    5502:	91 1f       	adc	r25, r17
    5504:	97 ff       	sbrs	r25, 7
    5506:	04 c0       	rjmp	.+8      	; 0x5510 <do_rand+0x7a>
    5508:	61 50       	subi	r22, 0x01	; 1
    550a:	70 40       	sbci	r23, 0x00	; 0
    550c:	80 40       	sbci	r24, 0x00	; 0
    550e:	90 48       	sbci	r25, 0x80	; 128
    5510:	68 83       	st	Y, r22
    5512:	79 83       	std	Y+1, r23	; 0x01
    5514:	8a 83       	std	Y+2, r24	; 0x02
    5516:	9b 83       	std	Y+3, r25	; 0x03
    5518:	9b 01       	movw	r18, r22
    551a:	3f 77       	andi	r19, 0x7F	; 127
    551c:	c9 01       	movw	r24, r18
    551e:	cd b7       	in	r28, 0x3d	; 61
    5520:	de b7       	in	r29, 0x3e	; 62
    5522:	ea e0       	ldi	r30, 0x0A	; 10
    5524:	8c ce       	rjmp	.-744    	; 0x523e <__epilogue_restores__+0x10>

00005526 <rand_r>:
    5526:	b7 df       	rcall	.-146    	; 0x5496 <do_rand>
    5528:	08 95       	ret

0000552a <rand>:
    552a:	89 ee       	ldi	r24, 0xE9	; 233
    552c:	91 e0       	ldi	r25, 0x01	; 1
    552e:	b3 df       	rcall	.-154    	; 0x5496 <do_rand>
    5530:	08 95       	ret

00005532 <srand>:
    5532:	a0 e0       	ldi	r26, 0x00	; 0
    5534:	b0 e0       	ldi	r27, 0x00	; 0
    5536:	80 93 e9 01 	sts	0x01E9, r24
    553a:	90 93 ea 01 	sts	0x01EA, r25
    553e:	a0 93 eb 01 	sts	0x01EB, r26
    5542:	b0 93 ec 01 	sts	0x01EC, r27
    5546:	08 95       	ret

00005548 <__ftoa_engine>:
    5548:	28 30       	cpi	r18, 0x08	; 8
    554a:	08 f0       	brcs	.+2      	; 0x554e <__ftoa_engine+0x6>
    554c:	27 e0       	ldi	r18, 0x07	; 7
    554e:	33 27       	eor	r19, r19
    5550:	da 01       	movw	r26, r20
    5552:	99 0f       	add	r25, r25
    5554:	31 1d       	adc	r19, r1
    5556:	87 fd       	sbrc	r24, 7
    5558:	91 60       	ori	r25, 0x01	; 1
    555a:	00 96       	adiw	r24, 0x00	; 0
    555c:	61 05       	cpc	r22, r1
    555e:	71 05       	cpc	r23, r1
    5560:	39 f4       	brne	.+14     	; 0x5570 <__ftoa_engine+0x28>
    5562:	32 60       	ori	r19, 0x02	; 2
    5564:	2e 5f       	subi	r18, 0xFE	; 254
    5566:	3d 93       	st	X+, r19
    5568:	30 e3       	ldi	r19, 0x30	; 48
    556a:	2a 95       	dec	r18
    556c:	e1 f7       	brne	.-8      	; 0x5566 <__ftoa_engine+0x1e>
    556e:	08 95       	ret
    5570:	9f 3f       	cpi	r25, 0xFF	; 255
    5572:	30 f0       	brcs	.+12     	; 0x5580 <__ftoa_engine+0x38>
    5574:	80 38       	cpi	r24, 0x80	; 128
    5576:	71 05       	cpc	r23, r1
    5578:	61 05       	cpc	r22, r1
    557a:	09 f0       	breq	.+2      	; 0x557e <__ftoa_engine+0x36>
    557c:	3c 5f       	subi	r19, 0xFC	; 252
    557e:	3c 5f       	subi	r19, 0xFC	; 252
    5580:	3d 93       	st	X+, r19
    5582:	91 30       	cpi	r25, 0x01	; 1
    5584:	08 f0       	brcs	.+2      	; 0x5588 <__ftoa_engine+0x40>
    5586:	80 68       	ori	r24, 0x80	; 128
    5588:	91 1d       	adc	r25, r1
    558a:	df 93       	push	r29
    558c:	cf 93       	push	r28
    558e:	1f 93       	push	r17
    5590:	0f 93       	push	r16
    5592:	ff 92       	push	r15
    5594:	ef 92       	push	r14
    5596:	19 2f       	mov	r17, r25
    5598:	98 7f       	andi	r25, 0xF8	; 248
    559a:	96 95       	lsr	r25
    559c:	e9 2f       	mov	r30, r25
    559e:	96 95       	lsr	r25
    55a0:	96 95       	lsr	r25
    55a2:	e9 0f       	add	r30, r25
    55a4:	ff 27       	eor	r31, r31
    55a6:	ef 53       	subi	r30, 0x3F	; 63
    55a8:	fa 4f       	sbci	r31, 0xFA	; 250
    55aa:	99 27       	eor	r25, r25
    55ac:	33 27       	eor	r19, r19
    55ae:	ee 24       	eor	r14, r14
    55b0:	ff 24       	eor	r15, r15
    55b2:	a7 01       	movw	r20, r14
    55b4:	e7 01       	movw	r28, r14
    55b6:	05 90       	lpm	r0, Z+
    55b8:	08 94       	sec
    55ba:	07 94       	ror	r0
    55bc:	28 f4       	brcc	.+10     	; 0x55c8 <__ftoa_engine+0x80>
    55be:	36 0f       	add	r19, r22
    55c0:	e7 1e       	adc	r14, r23
    55c2:	f8 1e       	adc	r15, r24
    55c4:	49 1f       	adc	r20, r25
    55c6:	51 1d       	adc	r21, r1
    55c8:	66 0f       	add	r22, r22
    55ca:	77 1f       	adc	r23, r23
    55cc:	88 1f       	adc	r24, r24
    55ce:	99 1f       	adc	r25, r25
    55d0:	06 94       	lsr	r0
    55d2:	a1 f7       	brne	.-24     	; 0x55bc <__ftoa_engine+0x74>
    55d4:	05 90       	lpm	r0, Z+
    55d6:	07 94       	ror	r0
    55d8:	28 f4       	brcc	.+10     	; 0x55e4 <__ftoa_engine+0x9c>
    55da:	e7 0e       	add	r14, r23
    55dc:	f8 1e       	adc	r15, r24
    55de:	49 1f       	adc	r20, r25
    55e0:	56 1f       	adc	r21, r22
    55e2:	c1 1d       	adc	r28, r1
    55e4:	77 0f       	add	r23, r23
    55e6:	88 1f       	adc	r24, r24
    55e8:	99 1f       	adc	r25, r25
    55ea:	66 1f       	adc	r22, r22
    55ec:	06 94       	lsr	r0
    55ee:	a1 f7       	brne	.-24     	; 0x55d8 <__ftoa_engine+0x90>
    55f0:	05 90       	lpm	r0, Z+
    55f2:	07 94       	ror	r0
    55f4:	28 f4       	brcc	.+10     	; 0x5600 <__ftoa_engine+0xb8>
    55f6:	f8 0e       	add	r15, r24
    55f8:	49 1f       	adc	r20, r25
    55fa:	56 1f       	adc	r21, r22
    55fc:	c7 1f       	adc	r28, r23
    55fe:	d1 1d       	adc	r29, r1
    5600:	88 0f       	add	r24, r24
    5602:	99 1f       	adc	r25, r25
    5604:	66 1f       	adc	r22, r22
    5606:	77 1f       	adc	r23, r23
    5608:	06 94       	lsr	r0
    560a:	a1 f7       	brne	.-24     	; 0x55f4 <__ftoa_engine+0xac>
    560c:	05 90       	lpm	r0, Z+
    560e:	07 94       	ror	r0
    5610:	20 f4       	brcc	.+8      	; 0x561a <__ftoa_engine+0xd2>
    5612:	49 0f       	add	r20, r25
    5614:	56 1f       	adc	r21, r22
    5616:	c7 1f       	adc	r28, r23
    5618:	d8 1f       	adc	r29, r24
    561a:	99 0f       	add	r25, r25
    561c:	66 1f       	adc	r22, r22
    561e:	77 1f       	adc	r23, r23
    5620:	88 1f       	adc	r24, r24
    5622:	06 94       	lsr	r0
    5624:	a9 f7       	brne	.-22     	; 0x5610 <__ftoa_engine+0xc8>
    5626:	84 91       	lpm	r24, Z+
    5628:	10 95       	com	r17
    562a:	17 70       	andi	r17, 0x07	; 7
    562c:	41 f0       	breq	.+16     	; 0x563e <__ftoa_engine+0xf6>
    562e:	d6 95       	lsr	r29
    5630:	c7 95       	ror	r28
    5632:	57 95       	ror	r21
    5634:	47 95       	ror	r20
    5636:	f7 94       	ror	r15
    5638:	e7 94       	ror	r14
    563a:	1a 95       	dec	r17
    563c:	c1 f7       	brne	.-16     	; 0x562e <__ftoa_engine+0xe6>
    563e:	e7 e6       	ldi	r30, 0x67	; 103
    5640:	f5 e0       	ldi	r31, 0x05	; 5
    5642:	68 94       	set
    5644:	15 90       	lpm	r1, Z+
    5646:	15 91       	lpm	r17, Z+
    5648:	35 91       	lpm	r19, Z+
    564a:	65 91       	lpm	r22, Z+
    564c:	95 91       	lpm	r25, Z+
    564e:	05 90       	lpm	r0, Z+
    5650:	7f e2       	ldi	r23, 0x2F	; 47
    5652:	73 95       	inc	r23
    5654:	e1 18       	sub	r14, r1
    5656:	f1 0a       	sbc	r15, r17
    5658:	43 0b       	sbc	r20, r19
    565a:	56 0b       	sbc	r21, r22
    565c:	c9 0b       	sbc	r28, r25
    565e:	d0 09       	sbc	r29, r0
    5660:	c0 f7       	brcc	.-16     	; 0x5652 <__ftoa_engine+0x10a>
    5662:	e1 0c       	add	r14, r1
    5664:	f1 1e       	adc	r15, r17
    5666:	43 1f       	adc	r20, r19
    5668:	56 1f       	adc	r21, r22
    566a:	c9 1f       	adc	r28, r25
    566c:	d0 1d       	adc	r29, r0
    566e:	7e f4       	brtc	.+30     	; 0x568e <__ftoa_engine+0x146>
    5670:	70 33       	cpi	r23, 0x30	; 48
    5672:	11 f4       	brne	.+4      	; 0x5678 <__ftoa_engine+0x130>
    5674:	8a 95       	dec	r24
    5676:	e6 cf       	rjmp	.-52     	; 0x5644 <__ftoa_engine+0xfc>
    5678:	e8 94       	clt
    567a:	01 50       	subi	r16, 0x01	; 1
    567c:	30 f0       	brcs	.+12     	; 0x568a <__ftoa_engine+0x142>
    567e:	08 0f       	add	r16, r24
    5680:	0a f4       	brpl	.+2      	; 0x5684 <__ftoa_engine+0x13c>
    5682:	00 27       	eor	r16, r16
    5684:	02 17       	cp	r16, r18
    5686:	08 f4       	brcc	.+2      	; 0x568a <__ftoa_engine+0x142>
    5688:	20 2f       	mov	r18, r16
    568a:	23 95       	inc	r18
    568c:	02 2f       	mov	r16, r18
    568e:	7a 33       	cpi	r23, 0x3A	; 58
    5690:	28 f0       	brcs	.+10     	; 0x569c <__ftoa_engine+0x154>
    5692:	79 e3       	ldi	r23, 0x39	; 57
    5694:	7d 93       	st	X+, r23
    5696:	2a 95       	dec	r18
    5698:	e9 f7       	brne	.-6      	; 0x5694 <__ftoa_engine+0x14c>
    569a:	10 c0       	rjmp	.+32     	; 0x56bc <__ftoa_engine+0x174>
    569c:	7d 93       	st	X+, r23
    569e:	2a 95       	dec	r18
    56a0:	89 f6       	brne	.-94     	; 0x5644 <__ftoa_engine+0xfc>
    56a2:	06 94       	lsr	r0
    56a4:	97 95       	ror	r25
    56a6:	67 95       	ror	r22
    56a8:	37 95       	ror	r19
    56aa:	17 95       	ror	r17
    56ac:	17 94       	ror	r1
    56ae:	e1 18       	sub	r14, r1
    56b0:	f1 0a       	sbc	r15, r17
    56b2:	43 0b       	sbc	r20, r19
    56b4:	56 0b       	sbc	r21, r22
    56b6:	c9 0b       	sbc	r28, r25
    56b8:	d0 09       	sbc	r29, r0
    56ba:	98 f0       	brcs	.+38     	; 0x56e2 <__ftoa_engine+0x19a>
    56bc:	23 95       	inc	r18
    56be:	7e 91       	ld	r23, -X
    56c0:	73 95       	inc	r23
    56c2:	7a 33       	cpi	r23, 0x3A	; 58
    56c4:	08 f0       	brcs	.+2      	; 0x56c8 <__ftoa_engine+0x180>
    56c6:	70 e3       	ldi	r23, 0x30	; 48
    56c8:	7c 93       	st	X, r23
    56ca:	20 13       	cpse	r18, r16
    56cc:	b8 f7       	brcc	.-18     	; 0x56bc <__ftoa_engine+0x174>
    56ce:	7e 91       	ld	r23, -X
    56d0:	70 61       	ori	r23, 0x10	; 16
    56d2:	7d 93       	st	X+, r23
    56d4:	30 f0       	brcs	.+12     	; 0x56e2 <__ftoa_engine+0x19a>
    56d6:	83 95       	inc	r24
    56d8:	71 e3       	ldi	r23, 0x31	; 49
    56da:	7d 93       	st	X+, r23
    56dc:	70 e3       	ldi	r23, 0x30	; 48
    56de:	2a 95       	dec	r18
    56e0:	e1 f7       	brne	.-8      	; 0x56da <__ftoa_engine+0x192>
    56e2:	11 24       	eor	r1, r1
    56e4:	ef 90       	pop	r14
    56e6:	ff 90       	pop	r15
    56e8:	0f 91       	pop	r16
    56ea:	1f 91       	pop	r17
    56ec:	cf 91       	pop	r28
    56ee:	df 91       	pop	r29
    56f0:	99 27       	eor	r25, r25
    56f2:	87 fd       	sbrc	r24, 7
    56f4:	90 95       	com	r25
    56f6:	08 95       	ret

000056f8 <strnlen_P>:
    56f8:	fc 01       	movw	r30, r24
    56fa:	05 90       	lpm	r0, Z+
    56fc:	61 50       	subi	r22, 0x01	; 1
    56fe:	70 40       	sbci	r23, 0x00	; 0
    5700:	01 10       	cpse	r0, r1
    5702:	d8 f7       	brcc	.-10     	; 0x56fa <strnlen_P+0x2>
    5704:	80 95       	com	r24
    5706:	90 95       	com	r25
    5708:	8e 0f       	add	r24, r30
    570a:	9f 1f       	adc	r25, r31
    570c:	08 95       	ret

0000570e <strnlen>:
    570e:	fc 01       	movw	r30, r24
    5710:	61 50       	subi	r22, 0x01	; 1
    5712:	70 40       	sbci	r23, 0x00	; 0
    5714:	01 90       	ld	r0, Z+
    5716:	01 10       	cpse	r0, r1
    5718:	d8 f7       	brcc	.-10     	; 0x5710 <strnlen+0x2>
    571a:	80 95       	com	r24
    571c:	90 95       	com	r25
    571e:	8e 0f       	add	r24, r30
    5720:	9f 1f       	adc	r25, r31
    5722:	08 95       	ret

00005724 <fputc>:
    5724:	0f 93       	push	r16
    5726:	1f 93       	push	r17
    5728:	cf 93       	push	r28
    572a:	df 93       	push	r29
    572c:	8c 01       	movw	r16, r24
    572e:	eb 01       	movw	r28, r22
    5730:	8b 81       	ldd	r24, Y+3	; 0x03
    5732:	81 ff       	sbrs	r24, 1
    5734:	1b c0       	rjmp	.+54     	; 0x576c <fputc+0x48>
    5736:	82 ff       	sbrs	r24, 2
    5738:	0d c0       	rjmp	.+26     	; 0x5754 <fputc+0x30>
    573a:	2e 81       	ldd	r18, Y+6	; 0x06
    573c:	3f 81       	ldd	r19, Y+7	; 0x07
    573e:	8c 81       	ldd	r24, Y+4	; 0x04
    5740:	9d 81       	ldd	r25, Y+5	; 0x05
    5742:	28 17       	cp	r18, r24
    5744:	39 07       	cpc	r19, r25
    5746:	64 f4       	brge	.+24     	; 0x5760 <fputc+0x3c>
    5748:	e8 81       	ld	r30, Y
    574a:	f9 81       	ldd	r31, Y+1	; 0x01
    574c:	01 93       	st	Z+, r16
    574e:	f9 83       	std	Y+1, r31	; 0x01
    5750:	e8 83       	st	Y, r30
    5752:	06 c0       	rjmp	.+12     	; 0x5760 <fputc+0x3c>
    5754:	e8 85       	ldd	r30, Y+8	; 0x08
    5756:	f9 85       	ldd	r31, Y+9	; 0x09
    5758:	80 2f       	mov	r24, r16
    575a:	09 95       	icall
    575c:	89 2b       	or	r24, r25
    575e:	31 f4       	brne	.+12     	; 0x576c <fputc+0x48>
    5760:	8e 81       	ldd	r24, Y+6	; 0x06
    5762:	9f 81       	ldd	r25, Y+7	; 0x07
    5764:	01 96       	adiw	r24, 0x01	; 1
    5766:	9f 83       	std	Y+7, r25	; 0x07
    5768:	8e 83       	std	Y+6, r24	; 0x06
    576a:	02 c0       	rjmp	.+4      	; 0x5770 <fputc+0x4c>
    576c:	0f ef       	ldi	r16, 0xFF	; 255
    576e:	1f ef       	ldi	r17, 0xFF	; 255
    5770:	c8 01       	movw	r24, r16
    5772:	df 91       	pop	r29
    5774:	cf 91       	pop	r28
    5776:	1f 91       	pop	r17
    5778:	0f 91       	pop	r16
    577a:	08 95       	ret

0000577c <printf>:
    577c:	a0 e0       	ldi	r26, 0x00	; 0
    577e:	b0 e0       	ldi	r27, 0x00	; 0
    5780:	e3 ec       	ldi	r30, 0xC3	; 195
    5782:	fb e2       	ldi	r31, 0x2B	; 43
    5784:	48 cd       	rjmp	.-1392   	; 0x5216 <__prologue_saves__+0x20>
    5786:	fe 01       	movw	r30, r28
    5788:	35 96       	adiw	r30, 0x05	; 5
    578a:	61 91       	ld	r22, Z+
    578c:	71 91       	ld	r23, Z+
    578e:	80 91 e9 04 	lds	r24, 0x04E9
    5792:	90 91 ea 04 	lds	r25, 0x04EA
    5796:	af 01       	movw	r20, r30
    5798:	72 d9       	rcall	.-3356   	; 0x4a7e <vfprintf>
    579a:	20 96       	adiw	r28, 0x00	; 0
    579c:	e2 e0       	ldi	r30, 0x02	; 2
    579e:	57 cd       	rjmp	.-1362   	; 0x524e <__epilogue_restores__+0x20>

000057a0 <puts>:
    57a0:	0f 93       	push	r16
    57a2:	1f 93       	push	r17
    57a4:	cf 93       	push	r28
    57a6:	df 93       	push	r29
    57a8:	8c 01       	movw	r16, r24
    57aa:	e0 91 e9 04 	lds	r30, 0x04E9
    57ae:	f0 91 ea 04 	lds	r31, 0x04EA
    57b2:	83 81       	ldd	r24, Z+3	; 0x03
    57b4:	81 ff       	sbrs	r24, 1
    57b6:	21 c0       	rjmp	.+66     	; 0x57fa <puts+0x5a>
    57b8:	c0 e0       	ldi	r28, 0x00	; 0
    57ba:	d0 e0       	ldi	r29, 0x00	; 0
    57bc:	0d c0       	rjmp	.+26     	; 0x57d8 <puts+0x38>
    57be:	e0 91 e9 04 	lds	r30, 0x04E9
    57c2:	f0 91 ea 04 	lds	r31, 0x04EA
    57c6:	20 85       	ldd	r18, Z+8	; 0x08
    57c8:	31 85       	ldd	r19, Z+9	; 0x09
    57ca:	bf 01       	movw	r22, r30
    57cc:	f9 01       	movw	r30, r18
    57ce:	09 95       	icall
    57d0:	89 2b       	or	r24, r25
    57d2:	11 f0       	breq	.+4      	; 0x57d8 <puts+0x38>
    57d4:	cf ef       	ldi	r28, 0xFF	; 255
    57d6:	df ef       	ldi	r29, 0xFF	; 255
    57d8:	f8 01       	movw	r30, r16
    57da:	81 91       	ld	r24, Z+
    57dc:	8f 01       	movw	r16, r30
    57de:	88 23       	and	r24, r24
    57e0:	71 f7       	brne	.-36     	; 0x57be <puts+0x1e>
    57e2:	e0 91 e9 04 	lds	r30, 0x04E9
    57e6:	f0 91 ea 04 	lds	r31, 0x04EA
    57ea:	20 85       	ldd	r18, Z+8	; 0x08
    57ec:	31 85       	ldd	r19, Z+9	; 0x09
    57ee:	8a e0       	ldi	r24, 0x0A	; 10
    57f0:	bf 01       	movw	r22, r30
    57f2:	f9 01       	movw	r30, r18
    57f4:	09 95       	icall
    57f6:	89 2b       	or	r24, r25
    57f8:	11 f0       	breq	.+4      	; 0x57fe <puts+0x5e>
    57fa:	cf ef       	ldi	r28, 0xFF	; 255
    57fc:	df ef       	ldi	r29, 0xFF	; 255
    57fe:	ce 01       	movw	r24, r28
    5800:	df 91       	pop	r29
    5802:	cf 91       	pop	r28
    5804:	1f 91       	pop	r17
    5806:	0f 91       	pop	r16
    5808:	08 95       	ret

0000580a <__ultoa_invert>:
    580a:	fa 01       	movw	r30, r20
    580c:	aa 27       	eor	r26, r26
    580e:	28 30       	cpi	r18, 0x08	; 8
    5810:	51 f1       	breq	.+84     	; 0x5866 <__ultoa_invert+0x5c>
    5812:	20 31       	cpi	r18, 0x10	; 16
    5814:	81 f1       	breq	.+96     	; 0x5876 <__ultoa_invert+0x6c>
    5816:	e8 94       	clt
    5818:	6f 93       	push	r22
    581a:	6e 7f       	andi	r22, 0xFE	; 254
    581c:	6e 5f       	subi	r22, 0xFE	; 254
    581e:	7f 4f       	sbci	r23, 0xFF	; 255
    5820:	8f 4f       	sbci	r24, 0xFF	; 255
    5822:	9f 4f       	sbci	r25, 0xFF	; 255
    5824:	af 4f       	sbci	r26, 0xFF	; 255
    5826:	b1 e0       	ldi	r27, 0x01	; 1
    5828:	3e d0       	rcall	.+124    	; 0x58a6 <__ultoa_invert+0x9c>
    582a:	b4 e0       	ldi	r27, 0x04	; 4
    582c:	3c d0       	rcall	.+120    	; 0x58a6 <__ultoa_invert+0x9c>
    582e:	67 0f       	add	r22, r23
    5830:	78 1f       	adc	r23, r24
    5832:	89 1f       	adc	r24, r25
    5834:	9a 1f       	adc	r25, r26
    5836:	a1 1d       	adc	r26, r1
    5838:	68 0f       	add	r22, r24
    583a:	79 1f       	adc	r23, r25
    583c:	8a 1f       	adc	r24, r26
    583e:	91 1d       	adc	r25, r1
    5840:	a1 1d       	adc	r26, r1
    5842:	6a 0f       	add	r22, r26
    5844:	71 1d       	adc	r23, r1
    5846:	81 1d       	adc	r24, r1
    5848:	91 1d       	adc	r25, r1
    584a:	a1 1d       	adc	r26, r1
    584c:	20 d0       	rcall	.+64     	; 0x588e <__ultoa_invert+0x84>
    584e:	09 f4       	brne	.+2      	; 0x5852 <__ultoa_invert+0x48>
    5850:	68 94       	set
    5852:	3f 91       	pop	r19
    5854:	2a e0       	ldi	r18, 0x0A	; 10
    5856:	26 9f       	mul	r18, r22
    5858:	11 24       	eor	r1, r1
    585a:	30 19       	sub	r19, r0
    585c:	30 5d       	subi	r19, 0xD0	; 208
    585e:	31 93       	st	Z+, r19
    5860:	de f6       	brtc	.-74     	; 0x5818 <__ultoa_invert+0xe>
    5862:	cf 01       	movw	r24, r30
    5864:	08 95       	ret
    5866:	46 2f       	mov	r20, r22
    5868:	47 70       	andi	r20, 0x07	; 7
    586a:	40 5d       	subi	r20, 0xD0	; 208
    586c:	41 93       	st	Z+, r20
    586e:	b3 e0       	ldi	r27, 0x03	; 3
    5870:	0f d0       	rcall	.+30     	; 0x5890 <__ultoa_invert+0x86>
    5872:	c9 f7       	brne	.-14     	; 0x5866 <__ultoa_invert+0x5c>
    5874:	f6 cf       	rjmp	.-20     	; 0x5862 <__ultoa_invert+0x58>
    5876:	46 2f       	mov	r20, r22
    5878:	4f 70       	andi	r20, 0x0F	; 15
    587a:	40 5d       	subi	r20, 0xD0	; 208
    587c:	4a 33       	cpi	r20, 0x3A	; 58
    587e:	18 f0       	brcs	.+6      	; 0x5886 <__ultoa_invert+0x7c>
    5880:	49 5d       	subi	r20, 0xD9	; 217
    5882:	31 fd       	sbrc	r19, 1
    5884:	40 52       	subi	r20, 0x20	; 32
    5886:	41 93       	st	Z+, r20
    5888:	02 d0       	rcall	.+4      	; 0x588e <__ultoa_invert+0x84>
    588a:	a9 f7       	brne	.-22     	; 0x5876 <__ultoa_invert+0x6c>
    588c:	ea cf       	rjmp	.-44     	; 0x5862 <__ultoa_invert+0x58>
    588e:	b4 e0       	ldi	r27, 0x04	; 4
    5890:	a6 95       	lsr	r26
    5892:	97 95       	ror	r25
    5894:	87 95       	ror	r24
    5896:	77 95       	ror	r23
    5898:	67 95       	ror	r22
    589a:	ba 95       	dec	r27
    589c:	c9 f7       	brne	.-14     	; 0x5890 <__ultoa_invert+0x86>
    589e:	00 97       	sbiw	r24, 0x00	; 0
    58a0:	61 05       	cpc	r22, r1
    58a2:	71 05       	cpc	r23, r1
    58a4:	08 95       	ret
    58a6:	9b 01       	movw	r18, r22
    58a8:	ac 01       	movw	r20, r24
    58aa:	0a 2e       	mov	r0, r26
    58ac:	06 94       	lsr	r0
    58ae:	57 95       	ror	r21
    58b0:	47 95       	ror	r20
    58b2:	37 95       	ror	r19
    58b4:	27 95       	ror	r18
    58b6:	ba 95       	dec	r27
    58b8:	c9 f7       	brne	.-14     	; 0x58ac <__ultoa_invert+0xa2>
    58ba:	62 0f       	add	r22, r18
    58bc:	73 1f       	adc	r23, r19
    58be:	84 1f       	adc	r24, r20
    58c0:	95 1f       	adc	r25, r21
    58c2:	a0 1d       	adc	r26, r0
    58c4:	08 95       	ret

000058c6 <__divmodsi4>:
    58c6:	97 fb       	bst	r25, 7
    58c8:	09 2e       	mov	r0, r25
    58ca:	05 26       	eor	r0, r21
    58cc:	0e d0       	rcall	.+28     	; 0x58ea <__divmodsi4_neg1>
    58ce:	57 fd       	sbrc	r21, 7
    58d0:	04 d0       	rcall	.+8      	; 0x58da <__divmodsi4_neg2>
    58d2:	6f dc       	rcall	.-1826   	; 0x51b2 <__udivmodsi4>
    58d4:	0a d0       	rcall	.+20     	; 0x58ea <__divmodsi4_neg1>
    58d6:	00 1c       	adc	r0, r0
    58d8:	38 f4       	brcc	.+14     	; 0x58e8 <__divmodsi4_exit>

000058da <__divmodsi4_neg2>:
    58da:	50 95       	com	r21
    58dc:	40 95       	com	r20
    58de:	30 95       	com	r19
    58e0:	21 95       	neg	r18
    58e2:	3f 4f       	sbci	r19, 0xFF	; 255
    58e4:	4f 4f       	sbci	r20, 0xFF	; 255
    58e6:	5f 4f       	sbci	r21, 0xFF	; 255

000058e8 <__divmodsi4_exit>:
    58e8:	08 95       	ret

000058ea <__divmodsi4_neg1>:
    58ea:	f6 f7       	brtc	.-4      	; 0x58e8 <__divmodsi4_exit>
    58ec:	90 95       	com	r25
    58ee:	80 95       	com	r24
    58f0:	70 95       	com	r23
    58f2:	61 95       	neg	r22
    58f4:	7f 4f       	sbci	r23, 0xFF	; 255
    58f6:	8f 4f       	sbci	r24, 0xFF	; 255
    58f8:	9f 4f       	sbci	r25, 0xFF	; 255
    58fa:	08 95       	ret

000058fc <_exit>:
    58fc:	f8 94       	cli

000058fe <__stop_program>:
    58fe:	ff cf       	rjmp	.-2      	; 0x58fe <__stop_program>
