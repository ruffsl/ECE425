
WallFollowing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ee  00800100  0000595c  000059f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000595c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002ff  008001ee  008001ee  00005ade  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  00005ade  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000002e0  00000000  00000000  00005b1e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f3d  00000000  00000000  00005dfe  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002cc  00000000  00000000  00006d3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000cd9  00000000  00000000  00007007  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f0  00000000  00000000  00007ce0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000a44  00000000  00000000  00007ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ade  00000000  00000000  00008914  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 31 03 	jmp	0x662	; 0x662 <__ctors_end>
       4:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       8:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      10:	0c 94 4d 18 	jmp	0x309a	; 0x309a <__vector_4>
      14:	0c 94 76 18 	jmp	0x30ec	; 0x30ec <__vector_5>
      18:	0c 94 9f 18 	jmp	0x313e	; 0x313e <__vector_6>
      1c:	0c 94 c8 18 	jmp	0x3190	; 0x3190 <__vector_7>
      20:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      24:	0c 94 2e 17 	jmp	0x2e5c	; 0x2e5c <__vector_9>
      28:	0c 94 57 17 	jmp	0x2eae	; 0x2eae <__vector_10>
      2c:	0c 94 80 17 	jmp	0x2f00	; 0x2f00 <__vector_11>
      30:	0c 94 fb 17 	jmp	0x2ff6	; 0x2ff6 <__vector_12>
      34:	0c 94 a9 17 	jmp	0x2f52	; 0x2f52 <__vector_13>
      38:	0c 94 d2 17 	jmp	0x2fa4	; 0x2fa4 <__vector_14>
      3c:	0c 94 24 18 	jmp	0x3048	; 0x3048 <__vector_15>
      40:	0c 94 b3 16 	jmp	0x2d66	; 0x2d66 <__vector_16>
      44:	0c 94 dc 16 	jmp	0x2db8	; 0x2db8 <__vector_17>
      48:	0c 94 05 17 	jmp	0x2e0a	; 0x2e0a <__vector_18>
      4c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      50:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      54:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      58:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      5c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      60:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      64:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      68:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      6c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      70:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      74:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      78:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      7c:	49 14       	cp	r4, r9
      7e:	4c 14       	cp	r4, r12
      80:	4f 14       	cp	r4, r15
      82:	52 14       	cp	r5, r2
      84:	5b 14       	cp	r5, r11
      86:	55 14       	cp	r5, r5
      88:	58 14       	cp	r5, r8
      8a:	5e 14       	cp	r5, r14
      8c:	61 14       	cp	r6, r1
      8e:	64 14       	cp	r6, r4
      90:	67 14       	cp	r6, r7
      92:	6a 14       	cp	r6, r10
      94:	6d 14       	cp	r6, r13
      96:	70 14       	cp	r7, r0
      98:	73 14       	cp	r7, r3
      9a:	76 14       	cp	r7, r6
      9c:	79 14       	cp	r7, r9
      9e:	7c 14       	cp	r7, r12
      a0:	7f 14       	cp	r7, r15
      a2:	90 14       	cp	r9, r0
      a4:	93 14       	cp	r9, r3
      a6:	96 14       	cp	r9, r6
      a8:	99 14       	cp	r9, r9
      aa:	a2 14       	cp	r10, r2
      ac:	9c 14       	cp	r9, r12
      ae:	9f 14       	cp	r9, r15
      b0:	a5 14       	cp	r10, r5
      b2:	a8 14       	cp	r10, r8
      b4:	ab 14       	cp	r10, r11
      b6:	ae 14       	cp	r10, r14
      b8:	b1 14       	cp	r11, r1
      ba:	b4 14       	cp	r11, r4
      bc:	b7 14       	cp	r11, r7
      be:	ba 14       	cp	r11, r10
      c0:	bd 14       	cp	r11, r13
      c2:	c0 14       	cp	r12, r0
      c4:	c3 14       	cp	r12, r3
      c6:	c6 14       	cp	r12, r6
      c8:	07 63       	ori	r16, 0x37	; 55
      ca:	42 36       	cpi	r20, 0x62	; 98
      cc:	b7 9b       	sbis	0x16, 7	; 22
      ce:	d8 a7       	std	Y+40, r29	; 0x28
      d0:	1a 39       	cpi	r17, 0x9A	; 154
      d2:	68 56       	subi	r22, 0x68	; 104
      d4:	18 ae       	std	Y+56, r1	; 0x38
      d6:	ba ab       	std	Y+50, r27	; 0x32
      d8:	55 8c       	ldd	r5, Z+29	; 0x1d
      da:	1d 3c       	cpi	r17, 0xCD	; 205
      dc:	b7 cc       	rjmp	.-1682   	; 0xfffffa4c <__eeprom_end+0xff7efa4c>
      de:	57 63       	ori	r21, 0x37	; 55
      e0:	bd 6d       	ori	r27, 0xDD	; 221
      e2:	ed fd       	.word	0xfded	; ????
      e4:	75 3e       	cpi	r23, 0xE5	; 229
      e6:	f6 17       	cp	r31, r22
      e8:	72 31       	cpi	r23, 0x12	; 18
      ea:	bf 00       	.word	0x00bf	; ????
      ec:	00 00       	nop
      ee:	80 3f       	cpi	r24, 0xF0	; 240
      f0:	08 00       	.word	0x0008	; ????
      f2:	00 00       	nop
      f4:	be 92       	st	-X, r11
      f6:	24 49       	sbci	r18, 0x94	; 148
      f8:	12 3e       	cpi	r17, 0xE2	; 226
      fa:	ab aa       	std	Y+51, r10	; 0x33
      fc:	aa 2a       	or	r10, r26
      fe:	be cd       	rjmp	.-1156   	; 0xfffffc7c <__eeprom_end+0xff7efc7c>
     100:	cc cc       	rjmp	.-1640   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     102:	4c 3e       	cpi	r20, 0xEC	; 236
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	be ab       	std	Y+54, r27	; 0x36
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	aa 3e       	cpi	r26, 0xEA	; 234
     10e:	00 00       	nop
     110:	00 00       	nop
     112:	bf 00       	.word	0x00bf	; ????
     114:	00 00       	nop
     116:	80 3f       	cpi	r24, 0xF0	; 240
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	00 08       	sbc	r0, r0
     11e:	41 78       	andi	r20, 0x81	; 129
     120:	d3 bb       	out	0x13, r29	; 19
     122:	43 87       	std	Z+11, r20	; 0x0b
     124:	d1 13       	cpse	r29, r17
     126:	3d 19       	sub	r19, r13
     128:	0e 3c       	cpi	r16, 0xCE	; 206
     12a:	c3 bd       	out	0x23, r28	; 35
     12c:	42 82       	std	Z+2, r4	; 0x02
     12e:	ad 2b       	or	r26, r29
     130:	3e 68       	ori	r19, 0x8E	; 142
     132:	ec 82       	std	Y+4, r14	; 0x04
     134:	76 be       	out	0x36, r7	; 54
     136:	d9 8f       	std	Y+25, r29	; 0x19
     138:	e1 a9       	ldd	r30, Z+49	; 0x31
     13a:	3e 4c       	sbci	r19, 0xCE	; 206
     13c:	80 ef       	ldi	r24, 0xF0	; 240
     13e:	ff be       	out	0x3f, r15	; 63
     140:	01 c4       	rjmp	.+2050   	; 0x944 <read_pixel_1+0x44>
     142:	ff 7f       	andi	r31, 0xFF	; 255
     144:	3f 00       	.word	0x003f	; ????
     146:	00 00       	nop
	...

0000014a <char_bitmap>:
     14a:	16 05 01 00 00 00 00 00 00 00 fa 00 00 00 e0 00     ................
     15a:	e0 00 28 fe 28 fe 28 24 54 fe 54 48 c4 c8 10 26     ..(.(.($T.TH...&
     16a:	46 6c 92 aa 44 a0 00 a0 c0 00 00 00 38 44 82 00     Fl..D.......8D..
     17a:	00 82 44 38 00 28 10 7c 10 28 10 10 7c 10 10 00     ..D8.(.|.(..|...
     18a:	0a 0c 00 00 10 10 10 10 10 00 06 06 00 00 04 08     ................
     19a:	10 20 40 7c 8a 92 a2 7c 00 42 fe 02 00 42 86 8a     . @|...|.B...B..
     1aa:	92 62 84 82 a2 d2 8c 18 28 48 fe 08 e4 a2 a2 a2     .b......(H......
     1ba:	9c 3c 52 92 92 0c 80 8e 90 a0 c0 6c 92 92 92 6c     .<R........l...l
     1ca:	60 92 92 94 78 00 6c 6c 00 00 00 6a 6c 00 00 10     `...x.ll...jl...
     1da:	28 44 82 00 28 28 28 28 28 00 82 44 28 10 40 80     (D..(((((..D(.@.
     1ea:	8a 90 60 4c 92 9e 82 7c 7e 88 88 88 7e fe 92 92     ..`L...|~...~...
     1fa:	92 6c 7c 82 82 82 44 fe 82 82 44 38 fe 92 92 92     .l|...D...D8....
     20a:	82 fe 90 90 90 80 7c 82 92 92 5e fe 10 10 10 fe     ......|...^.....
     21a:	00 82 fe 82 00 04 02 82 fc 80 fe 10 28 44 82 fe     ............(D..
     22a:	02 02 02 02 fe 40 30 40 fe fe 20 10 08 fe 7c 82     .....@0@.. ...|.
     23a:	82 82 7c fe 90 90 90 60 7c 82 8a 84 7a fe 90 98     ..|....`|...z...
     24a:	94 62 62 92 92 92 8c 80 80 fe 80 80 fc 02 02 02     .bb.............
     25a:	fc f8 04 02 04 f8 fc 02 1c 02 fc c6 28 10 28 c6     ............(.(.
     26a:	e0 10 0e 10 e0 86 8a 92 a2 c2 00 fe 82 82 00 40     ...............@
     27a:	20 10 08 04 00 82 82 fe 00 20 40 80 40 20 02 02      ........ @.@ ..
     28a:	02 02 02 00 80 40 20 00 04 2a 2a 2a 1e fe 12 22     .....@ ..***..."
     29a:	22 1c 1c 22 22 22 04 1c 22 22 12 fe 1c 2a 2a 2a     ".."""..""...***
     2aa:	18 10 7e 90 80 40 30 4a 4a 4a 7c fe 10 20 20 1e     ..~..@0JJJ|..  .
     2ba:	00 22 be 02 00 04 02 22 bc 00 fe 08 14 22 00 00     ."....."....."..
     2ca:	82 fe 02 00 3e 20 18 20 1e 3e 10 20 20 1e 1c 22     ....> . .>.  .."
     2da:	22 22 1c 3e 28 28 28 10 10 28 28 18 3e 3e 10 20     "".>(((..((.>>. 
     2ea:	20 10 12 2a 2a 2a 04 20 fc 22 02 04 3c 02 02 04      ..***. ."..<...
     2fa:	3e 38 04 02 04 38 3c 02 0c 02 3c 22 14 08 14 22     >8...8<...<"..."
     30a:	30 0a 0a 0a 3c 22 26 2a 32 22 00 10 6c 82 00 00     0...<"&*2"..l...
     31a:	00 fe 00 00 00 82 6c 10 00 08 10 10 08 10 00 00     ......l.........
     32a:	00 00 00 7f 81 81 81 7f 7f 83 83 83 7f 7f 87 87     ................
     33a:	87 7f 7f 8f 8f 8f 7f 7f 9f 9f 9f 7f 7f bf bf bf     ................
     34a:	7f 7f ff ff ff 7f 20 40 ff 40 20 62 15 17 15 65     ...... @.@ b...e
     35a:	00 fb fb 00 00                                      .....

0000035f <CEENBoT_Inc_logo_bitmap>:
     35f:	00 00 00 00 00 c0 ff 03 00 e0 ff 07 00 f0 ff 0f     ................
     36f:	00 f8 ff 1f 00 78 00 1e 00 78 00 1e 00 78 00 1e     .....x...x...x..
     37f:	00 78 00 1e 00 78 00 1e 00 78 00 1e 00 78 00 1e     .x...x...x...x..
     38f:	00 78 00 1e 00 78 00 1e 00 00 00 00 00 00 00 00     .x...x..........
     39f:	00 80 ff 03 00 e0 ff 07 00 f0 ff 0f 00 f8 ff 1f     ................
     3af:	00 f8 3c 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     ..<..x<..x<..x<.
     3bf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     3cf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     3df:	00 00 00 00 00 e0 ff 03 00 f0 ff 07 00 f8 ff 0f     ................
     3ef:	00 f8 ff 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .....x<..x<..x<.
     3ff:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     40f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     41f:	00 00 00 00 00 f8 ff 03 00 f8 ff 0f 00 f8 ff 1f     ................
     42f:	00 f8 ff 1f 00 00 00 1e 00 00 00 1e 00 00 80 1f     ................
     43f:	00 00 f0 1f 00 00 ff 0f 00 e0 ff 07 00 f0 ff 00     ................
     44f:	00 f8 0f 00 00 f8 00 00 00 78 00 00 00 78 00 00     .........x...x..
     45f:	00 f8 ff 1f 00 f8 ff 1f 00 f0 ff 1f 00 e0 ff 1f     ................
	...
     477:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     487:	00 78 00 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x...x<..x<..x<.
     497:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 f8 7e 1f     .x<..x<..x<...~.
     4a7:	00 f8 ff 1f 00 f0 ff 0f 00 e0 e7 03 00 00 00 00     ................
     4b7:	00 00 00 38 00 ee ff 6c 00 2a 80 45 00 3a 00 47     ...8...l.*.E.:.G
     4c7:	fc 03 ff 6c fc 83 ff 39 00 de ff 0b 7c d0 81 0b     ...l...9....|...
     4d7:	fc d0 81 0b c0 d0 81 0b fc d0 81 0b 7c de ff 0b     ............|...
     4e7:	00 82 ff 39 70 02 ff 6c f8 3a 00 47 dc 2a 80 45     ...9p..l.:.G.*.E
     4f7:	cc ee ff 6c cc 00 00 38 00 00 00 00 0c 00 00 1e     ...l...8........
     507:	0c 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     517:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     527:	00 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     537:	00 00 00 5e 00 00 00 40 00 00 00 7c 00 00 00 40     ...^...@...|...@
     547:	00 00 00 40 00 00 00 7c 00 00 00 30 00 00 00 10     ...@...|...0....
     557:	00 00 00 30 00 00 00 7c                             ...0...|

0000055f <__c.1790>:
     55f:	6e 61 6e 00                                         nan.

00000563 <__c.1788>:
     563:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     573:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     583:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     593:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     5a3:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     5b3:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     5c3:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     5d3:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     5e3:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     5f3:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     603:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     613:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     623:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     633:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     643:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     653:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

00000662 <__ctors_end>:
     662:	11 24       	eor	r1, r1
     664:	1f be       	out	0x3f, r1	; 63
     666:	cf ef       	ldi	r28, 0xFF	; 255
     668:	d8 e0       	ldi	r29, 0x08	; 8
     66a:	de bf       	out	0x3e, r29	; 62
     66c:	cd bf       	out	0x3d, r28	; 61

0000066e <__do_copy_data>:
     66e:	11 e0       	ldi	r17, 0x01	; 1
     670:	a0 e0       	ldi	r26, 0x00	; 0
     672:	b1 e0       	ldi	r27, 0x01	; 1
     674:	ec e5       	ldi	r30, 0x5C	; 92
     676:	f9 e5       	ldi	r31, 0x59	; 89
     678:	02 c0       	rjmp	.+4      	; 0x67e <.do_copy_data_start>

0000067a <.do_copy_data_loop>:
     67a:	05 90       	lpm	r0, Z+
     67c:	0d 92       	st	X+, r0

0000067e <.do_copy_data_start>:
     67e:	ae 3e       	cpi	r26, 0xEE	; 238
     680:	b1 07       	cpc	r27, r17
     682:	d9 f7       	brne	.-10     	; 0x67a <.do_copy_data_loop>

00000684 <__do_clear_bss>:
     684:	14 e0       	ldi	r17, 0x04	; 4
     686:	ae ee       	ldi	r26, 0xEE	; 238
     688:	b1 e0       	ldi	r27, 0x01	; 1
     68a:	01 c0       	rjmp	.+2      	; 0x68e <.do_clear_bss_start>

0000068c <.do_clear_bss_loop>:
     68c:	1d 92       	st	X+, r1

0000068e <.do_clear_bss_start>:
     68e:	ad 3e       	cpi	r26, 0xED	; 237
     690:	b1 07       	cpc	r27, r17
     692:	e1 f7       	brne	.-8      	; 0x68c <.do_clear_bss_loop>
     694:	0e 94 f3 0e 	call	0x1de6	; 0x1de6 <main>
     698:	0c 94 ac 2c 	jmp	0x5958	; 0x5958 <_exit>

0000069c <__bad_interrupt>:
     69c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006a0 <get_ambient_temp>:
* Output Return:	I2C_STATUS
* Overview:			Reads the ambient temperature
********************************************************************/

I2C_STATUS get_ambient_temp( unsigned char *ambient_temp )
{
     6a0:	1f 93       	push	r17
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6a8:	88 e6       	ldi	r24, 0x68	; 104
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     6b0:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     6b2:	88 23       	and	r24, r24
     6b4:	a1 f4       	brne	.+40     	; 0x6de <get_ambient_temp+0x3e>
	{

		// Send the register value (being 1).  This is
		// the register that contains the ambient temperature.
		i2c_stat = I2C_MSTR_send( __TPA81_AMBIENT );
     6b6:	81 e0       	ldi	r24, 0x01	; 1
     6b8:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <I2C_MSTR_send>
     6bc:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     6be:	88 23       	and	r24, r24
     6c0:	71 f4       	brne	.+28     	; 0x6de <get_ambient_temp+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     6c2:	88 e6       	ldi	r24, 0x68	; 104
     6c4:	61 e0       	ldi	r22, 0x01	; 1
     6c6:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     6ca:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     6cc:	88 23       	and	r24, r24
     6ce:	39 f4       	brne	.+14     	; 0x6de <get_ambient_temp+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( ambient_temp, FALSE );
     6d0:	ce 01       	movw	r24, r28
     6d2:	60 e0       	ldi	r22, 0x00	; 0
     6d4:	0e 94 c5 15 	call	0x2b8a	; 0x2b8a <I2C_MSTR_get>
     6d8:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     6da:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*ambient_temp = 0;
     6dc:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     6de:	0e 94 5d 16 	call	0x2cba	; 0x2cba <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_ambient_temp()
     6e2:	81 2f       	mov	r24, r17
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	1f 91       	pop	r17
     6ea:	08 95       	ret

000006ec <read_pixel_8>:
	return i2c_stat;
}

// get pixel eight
I2C_STATUS read_pixel_8( unsigned char *pixel_8)
{
     6ec:	1f 93       	push	r17
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6f4:	88 e6       	ldi	r24, 0x68	; 104
     6f6:	60 e0       	ldi	r22, 0x00	; 0
     6f8:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     6fc:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     6fe:	88 23       	and	r24, r24
     700:	a1 f4       	brne	.+40     	; 0x72a <read_pixel_8+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX8 );
     702:	89 e0       	ldi	r24, 0x09	; 9
     704:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <I2C_MSTR_send>
     708:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     70a:	88 23       	and	r24, r24
     70c:	71 f4       	brne	.+28     	; 0x72a <read_pixel_8+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     70e:	88 e6       	ldi	r24, 0x68	; 104
     710:	61 e0       	ldi	r22, 0x01	; 1
     712:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     716:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     718:	88 23       	and	r24, r24
     71a:	39 f4       	brne	.+14     	; 0x72a <read_pixel_8+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_8, FALSE );
     71c:	ce 01       	movw	r24, r28
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	0e 94 c5 15 	call	0x2b8a	; 0x2b8a <I2C_MSTR_get>
     724:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     726:	81 11       	cpse	r24, r1
					*pixel_8 = 0;
     728:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     72a:	0e 94 5d 16 	call	0x2cba	; 0x2cba <I2C_MSTR_stop>
	return i2c_stat;
}
     72e:	81 2f       	mov	r24, r17
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	1f 91       	pop	r17
     736:	08 95       	ret

00000738 <read_pixel_7>:
	return i2c_stat;
}

// get pixel seven
I2C_STATUS read_pixel_7( unsigned char *pixel_7)
{
     738:	1f 93       	push	r17
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     740:	88 e6       	ldi	r24, 0x68	; 104
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     748:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     74a:	88 23       	and	r24, r24
     74c:	a1 f4       	brne	.+40     	; 0x776 <read_pixel_7+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX7 );
     74e:	88 e0       	ldi	r24, 0x08	; 8
     750:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <I2C_MSTR_send>
     754:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     756:	88 23       	and	r24, r24
     758:	71 f4       	brne	.+28     	; 0x776 <read_pixel_7+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     75a:	88 e6       	ldi	r24, 0x68	; 104
     75c:	61 e0       	ldi	r22, 0x01	; 1
     75e:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     762:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     764:	88 23       	and	r24, r24
     766:	39 f4       	brne	.+14     	; 0x776 <read_pixel_7+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_7, FALSE );
     768:	ce 01       	movw	r24, r28
     76a:	60 e0       	ldi	r22, 0x00	; 0
     76c:	0e 94 c5 15 	call	0x2b8a	; 0x2b8a <I2C_MSTR_get>
     770:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     772:	81 11       	cpse	r24, r1
					*pixel_7 = 0;
     774:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     776:	0e 94 5d 16 	call	0x2cba	; 0x2cba <I2C_MSTR_stop>
	return i2c_stat;
}
     77a:	81 2f       	mov	r24, r17
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	1f 91       	pop	r17
     782:	08 95       	ret

00000784 <read_pixel_6>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel six
I2C_STATUS read_pixel_6( unsigned char *pixel_6)
{
     784:	1f 93       	push	r17
     786:	cf 93       	push	r28
     788:	df 93       	push	r29
     78a:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     78c:	88 e6       	ldi	r24, 0x68	; 104
     78e:	60 e0       	ldi	r22, 0x00	; 0
     790:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     794:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     796:	88 23       	and	r24, r24
     798:	a1 f4       	brne	.+40     	; 0x7c2 <read_pixel_6+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX6 );
     79a:	87 e0       	ldi	r24, 0x07	; 7
     79c:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <I2C_MSTR_send>
     7a0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7a2:	88 23       	and	r24, r24
     7a4:	71 f4       	brne	.+28     	; 0x7c2 <read_pixel_6+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7a6:	88 e6       	ldi	r24, 0x68	; 104
     7a8:	61 e0       	ldi	r22, 0x01	; 1
     7aa:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     7ae:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7b0:	88 23       	and	r24, r24
     7b2:	39 f4       	brne	.+14     	; 0x7c2 <read_pixel_6+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_6, FALSE );
     7b4:	ce 01       	movw	r24, r28
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	0e 94 c5 15 	call	0x2b8a	; 0x2b8a <I2C_MSTR_get>
     7bc:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     7be:	81 11       	cpse	r24, r1
					*pixel_6 = 0;
     7c0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     7c2:	0e 94 5d 16 	call	0x2cba	; 0x2cba <I2C_MSTR_stop>
	return i2c_stat;
}
     7c6:	81 2f       	mov	r24, r17
     7c8:	df 91       	pop	r29
     7ca:	cf 91       	pop	r28
     7cc:	1f 91       	pop	r17
     7ce:	08 95       	ret

000007d0 <read_pixel_5>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel five
I2C_STATUS read_pixel_5( unsigned char *pixel_5)
{
     7d0:	1f 93       	push	r17
     7d2:	cf 93       	push	r28
     7d4:	df 93       	push	r29
     7d6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     7d8:	88 e6       	ldi	r24, 0x68	; 104
     7da:	60 e0       	ldi	r22, 0x00	; 0
     7dc:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     7e0:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     7e2:	88 23       	and	r24, r24
     7e4:	a1 f4       	brne	.+40     	; 0x80e <read_pixel_5+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX5 );
     7e6:	86 e0       	ldi	r24, 0x06	; 6
     7e8:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <I2C_MSTR_send>
     7ec:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7ee:	88 23       	and	r24, r24
     7f0:	71 f4       	brne	.+28     	; 0x80e <read_pixel_5+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7f2:	88 e6       	ldi	r24, 0x68	; 104
     7f4:	61 e0       	ldi	r22, 0x01	; 1
     7f6:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     7fa:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7fc:	88 23       	and	r24, r24
     7fe:	39 f4       	brne	.+14     	; 0x80e <read_pixel_5+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_5, FALSE );
     800:	ce 01       	movw	r24, r28
     802:	60 e0       	ldi	r22, 0x00	; 0
     804:	0e 94 c5 15 	call	0x2b8a	; 0x2b8a <I2C_MSTR_get>
     808:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     80a:	81 11       	cpse	r24, r1
					*pixel_5 = 0;
     80c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     80e:	0e 94 5d 16 	call	0x2cba	; 0x2cba <I2C_MSTR_stop>
	return i2c_stat;
}
     812:	81 2f       	mov	r24, r17
     814:	df 91       	pop	r29
     816:	cf 91       	pop	r28
     818:	1f 91       	pop	r17
     81a:	08 95       	ret

0000081c <read_pixel_4>:
	return i2c_stat;
}

// get pixel four
I2C_STATUS read_pixel_4( unsigned char *pixel_4)
{
     81c:	1f 93       	push	r17
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     824:	88 e6       	ldi	r24, 0x68	; 104
     826:	60 e0       	ldi	r22, 0x00	; 0
     828:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     82c:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     82e:	88 23       	and	r24, r24
     830:	a1 f4       	brne	.+40     	; 0x85a <read_pixel_4+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX4 );
     832:	85 e0       	ldi	r24, 0x05	; 5
     834:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <I2C_MSTR_send>
     838:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     83a:	88 23       	and	r24, r24
     83c:	71 f4       	brne	.+28     	; 0x85a <read_pixel_4+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     83e:	88 e6       	ldi	r24, 0x68	; 104
     840:	61 e0       	ldi	r22, 0x01	; 1
     842:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     846:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     848:	88 23       	and	r24, r24
     84a:	39 f4       	brne	.+14     	; 0x85a <read_pixel_4+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_4, FALSE );
     84c:	ce 01       	movw	r24, r28
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	0e 94 c5 15 	call	0x2b8a	; 0x2b8a <I2C_MSTR_get>
     854:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     856:	81 11       	cpse	r24, r1
					*pixel_4 = 0;
     858:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     85a:	0e 94 5d 16 	call	0x2cba	; 0x2cba <I2C_MSTR_stop>
	return i2c_stat;
}
     85e:	81 2f       	mov	r24, r17
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	1f 91       	pop	r17
     866:	08 95       	ret

00000868 <read_pixel_3>:
	return i2c_stat;
}

// get pixel three
I2C_STATUS read_pixel_3( unsigned char *pixel_3)
{
     868:	1f 93       	push	r17
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     870:	88 e6       	ldi	r24, 0x68	; 104
     872:	60 e0       	ldi	r22, 0x00	; 0
     874:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     878:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     87a:	88 23       	and	r24, r24
     87c:	a1 f4       	brne	.+40     	; 0x8a6 <read_pixel_3+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX3 );
     87e:	84 e0       	ldi	r24, 0x04	; 4
     880:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <I2C_MSTR_send>
     884:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     886:	88 23       	and	r24, r24
     888:	71 f4       	brne	.+28     	; 0x8a6 <read_pixel_3+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     88a:	88 e6       	ldi	r24, 0x68	; 104
     88c:	61 e0       	ldi	r22, 0x01	; 1
     88e:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     892:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     894:	88 23       	and	r24, r24
     896:	39 f4       	brne	.+14     	; 0x8a6 <read_pixel_3+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_3, FALSE );
     898:	ce 01       	movw	r24, r28
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	0e 94 c5 15 	call	0x2b8a	; 0x2b8a <I2C_MSTR_get>
     8a0:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8a2:	81 11       	cpse	r24, r1
					*pixel_3 = 0;
     8a4:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     8a6:	0e 94 5d 16 	call	0x2cba	; 0x2cba <I2C_MSTR_stop>
	return i2c_stat;
}
     8aa:	81 2f       	mov	r24, r17
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	1f 91       	pop	r17
     8b2:	08 95       	ret

000008b4 <read_pixel_2>:
}


// get pixel two
I2C_STATUS read_pixel_2( unsigned char *pixel_2)
{
     8b4:	1f 93       	push	r17
     8b6:	cf 93       	push	r28
     8b8:	df 93       	push	r29
     8ba:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     8bc:	88 e6       	ldi	r24, 0x68	; 104
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     8c4:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     8c6:	88 23       	and	r24, r24
     8c8:	a1 f4       	brne	.+40     	; 0x8f2 <read_pixel_2+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX2 );
     8ca:	83 e0       	ldi	r24, 0x03	; 3
     8cc:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <I2C_MSTR_send>
     8d0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     8d2:	88 23       	and	r24, r24
     8d4:	71 f4       	brne	.+28     	; 0x8f2 <read_pixel_2+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     8d6:	88 e6       	ldi	r24, 0x68	; 104
     8d8:	61 e0       	ldi	r22, 0x01	; 1
     8da:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     8de:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     8e0:	88 23       	and	r24, r24
     8e2:	39 f4       	brne	.+14     	; 0x8f2 <read_pixel_2+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_2, FALSE );
     8e4:	ce 01       	movw	r24, r28
     8e6:	60 e0       	ldi	r22, 0x00	; 0
     8e8:	0e 94 c5 15 	call	0x2b8a	; 0x2b8a <I2C_MSTR_get>
     8ec:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8ee:	81 11       	cpse	r24, r1
					*pixel_2 = 0;
     8f0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     8f2:	0e 94 5d 16 	call	0x2cba	; 0x2cba <I2C_MSTR_stop>
	return i2c_stat;
}
     8f6:	81 2f       	mov	r24, r17
     8f8:	df 91       	pop	r29
     8fa:	cf 91       	pop	r28
     8fc:	1f 91       	pop	r17
     8fe:	08 95       	ret

00000900 <read_pixel_1>:
* Output Return:	I2C_STATUS
* Overview:			These are several pixel read values for each of the pixels
********************************************************************/
// get pixel one
I2C_STATUS read_pixel_1( unsigned char *pixel_1)
{
     900:	1f 93       	push	r17
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     908:	88 e6       	ldi	r24, 0x68	; 104
     90a:	60 e0       	ldi	r22, 0x00	; 0
     90c:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     910:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     912:	88 23       	and	r24, r24
     914:	a1 f4       	brne	.+40     	; 0x93e <read_pixel_1+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX1 );
     916:	82 e0       	ldi	r24, 0x02	; 2
     918:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <I2C_MSTR_send>
     91c:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     91e:	88 23       	and	r24, r24
     920:	71 f4       	brne	.+28     	; 0x93e <read_pixel_1+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     922:	88 e6       	ldi	r24, 0x68	; 104
     924:	61 e0       	ldi	r22, 0x01	; 1
     926:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     92a:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     92c:	88 23       	and	r24, r24
     92e:	39 f4       	brne	.+14     	; 0x93e <read_pixel_1+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_1, FALSE );
     930:	ce 01       	movw	r24, r28
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	0e 94 c5 15 	call	0x2b8a	; 0x2b8a <I2C_MSTR_get>
     938:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     93a:	81 11       	cpse	r24, r1
					*pixel_1 = 0;
     93c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     93e:	0e 94 5d 16 	call	0x2cba	; 0x2cba <I2C_MSTR_stop>
	return i2c_stat;
}
     942:	81 2f       	mov	r24, r17
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	1f 91       	pop	r17
     94a:	08 95       	ret

0000094c <get_revision>:
* Input Variables:	unsigned char revision
* Output Return:	I2C_STATUS
* Overview:			
********************************************************************/
I2C_STATUS get_revision( unsigned char *revision )
{
     94c:	1f 93       	push	r17
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
     952:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     954:	88 e6       	ldi	r24, 0x68	; 104
     956:	60 e0       	ldi	r22, 0x00	; 0
     958:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     95c:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     95e:	88 23       	and	r24, r24
     960:	a1 f4       	brne	.+40     	; 0x98a <get_revision+0x3e>
	{

		// Send the register value (being 0).  This is
		// the register that contains the software revision.
		i2c_stat = I2C_MSTR_send( __TPA81_REVISION );
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <I2C_MSTR_send>
     968:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     96a:	88 23       	and	r24, r24
     96c:	71 f4       	brne	.+28     	; 0x98a <get_revision+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     96e:	88 e6       	ldi	r24, 0x68	; 104
     970:	61 e0       	ldi	r22, 0x01	; 1
     972:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <I2C_MSTR_start>
     976:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     978:	88 23       	and	r24, r24
     97a:	39 f4       	brne	.+14     	; 0x98a <get_revision+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( revision, FALSE );
     97c:	ce 01       	movw	r24, r28
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	0e 94 c5 15 	call	0x2b8a	; 0x2b8a <I2C_MSTR_get>
     984:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     986:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*revision = 0;
     988:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     98a:	0e 94 5d 16 	call	0x2cba	; 0x2cba <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_revision()
     98e:	81 2f       	mov	r24, r17
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	1f 91       	pop	r17
     996:	08 95       	ret

00000998 <getBackIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <ADC_set_VREF>
	// Set the channel we will sample from.
	// Note: Swaped with frount IR for orientation
	ADC_set_channel(IRBACK_CHAN);
     99e:	85 e0       	ldi	r24, 0x05	; 5
     9a0:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9a4:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <ADC_sample>
     9a8:	a0 e0       	ldi	r26, 0x00	; 0
     9aa:	b0 e0       	ldi	r27, 0x00	; 0
     9ac:	bc 01       	movw	r22, r24
     9ae:	cd 01       	movw	r24, r26
     9b0:	0e 94 b5 22 	call	0x456a	; 0x456a <__floatunsisf>
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	40 ea       	ldi	r20, 0xA0	; 160
     9ba:	50 e4       	ldi	r21, 0x40	; 64
     9bc:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
     9c0:	9b 01       	movw	r18, r22
     9c2:	ac 01       	movw	r20, r24
     9c4:	60 e0       	ldi	r22, 0x00	; 0
     9c6:	70 e2       	ldi	r23, 0x20	; 32
     9c8:	86 e3       	ldi	r24, 0x36	; 54
     9ca:	95 e4       	ldi	r25, 0x45	; 69
     9cc:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
     9d0:	20 e0       	ldi	r18, 0x00	; 0
     9d2:	30 e0       	ldi	r19, 0x00	; 0
     9d4:	40 e8       	ldi	r20, 0x80	; 128
     9d6:	5f e3       	ldi	r21, 0x3F	; 63
     9d8:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     9dc:	08 95       	ret

000009de <getFrontIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     9de:	81 e0       	ldi	r24, 0x01	; 1
     9e0:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <ADC_set_VREF>
	// Set the channel we will sample from.
	// Note: Swaped with back IR for orientation
	ADC_set_channel(IRFRONT_CHAN);
     9e4:	87 e0       	ldi	r24, 0x07	; 7
     9e6:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9ea:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <ADC_sample>
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	bc 01       	movw	r22, r24
     9f4:	cd 01       	movw	r24, r26
     9f6:	0e 94 b5 22 	call	0x456a	; 0x456a <__floatunsisf>
     9fa:	20 e0       	ldi	r18, 0x00	; 0
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	40 ea       	ldi	r20, 0xA0	; 160
     a00:	50 e4       	ldi	r21, 0x40	; 64
     a02:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
     a06:	9b 01       	movw	r18, r22
     a08:	ac 01       	movw	r20, r24
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	70 e2       	ldi	r23, 0x20	; 32
     a0e:	86 e3       	ldi	r24, 0x36	; 54
     a10:	95 e4       	ldi	r25, 0x45	; 69
     a12:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	40 e8       	ldi	r20, 0x80	; 128
     a1c:	5f e3       	ldi	r21, 0x3F	; 63
     a1e:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a22:	08 95       	ret

00000a24 <getRightIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
     a2a:	83 e0       	ldi	r24, 0x03	; 3
     a2c:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a30:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <ADC_sample>
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	bc 01       	movw	r22, r24
     a3a:	cd 01       	movw	r24, r26
     a3c:	0e 94 b5 22 	call	0x456a	; 0x456a <__floatunsisf>
     a40:	20 e0       	ldi	r18, 0x00	; 0
     a42:	30 e0       	ldi	r19, 0x00	; 0
     a44:	40 ea       	ldi	r20, 0xA0	; 160
     a46:	50 e4       	ldi	r21, 0x40	; 64
     a48:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
     a4c:	9b 01       	movw	r18, r22
     a4e:	ac 01       	movw	r20, r24
     a50:	60 e0       	ldi	r22, 0x00	; 0
     a52:	70 e2       	ldi	r23, 0x20	; 32
     a54:	86 e3       	ldi	r24, 0x36	; 54
     a56:	95 e4       	ldi	r25, 0x45	; 69
     a58:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
     a5c:	20 e0       	ldi	r18, 0x00	; 0
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	40 e8       	ldi	r20, 0x80	; 128
     a62:	5f e3       	ldi	r21, 0x3F	; 63
     a64:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a68:	08 95       	ret

00000a6a <getLeftIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
 	ADC_set_VREF( ADC_VREF_AVCC );
     a6a:	81 e0       	ldi	r24, 0x01	; 1
     a6c:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
     a70:	84 e0       	ldi	r24, 0x04	; 4
     a72:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a76:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <ADC_sample>
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	b0 e0       	ldi	r27, 0x00	; 0
     a7e:	bc 01       	movw	r22, r24
     a80:	cd 01       	movw	r24, r26
     a82:	0e 94 b5 22 	call	0x456a	; 0x456a <__floatunsisf>
     a86:	20 e0       	ldi	r18, 0x00	; 0
     a88:	30 e0       	ldi	r19, 0x00	; 0
     a8a:	40 ea       	ldi	r20, 0xA0	; 160
     a8c:	50 e4       	ldi	r21, 0x40	; 64
     a8e:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
     a92:	9b 01       	movw	r18, r22
     a94:	ac 01       	movw	r20, r24
     a96:	60 e0       	ldi	r22, 0x00	; 0
     a98:	70 e2       	ldi	r23, 0x20	; 32
     a9a:	86 e3       	ldi	r24, 0x36	; 54
     a9c:	95 e4       	ldi	r25, 0x45	; 69
     a9e:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	30 e0       	ldi	r19, 0x00	; 0
     aa6:	40 e8       	ldi	r20, 0x80	; 128
     aa8:	5f e3       	ldi	r21, 0x3F	; 63
     aaa:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     aae:	08 95       	ret

00000ab0 <getRightLight>:
********************************************************************/
float getRightLight( void )
{
	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <ADC_set_VREF>
	ADC_set_channel( RIGHT_LIGHT_CHAN );
     ab6:	85 e0       	ldi	r24, 0x05	; 5
     ab8:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <ADC_set_channel>
	adcsample = ADC_sample();
     abc:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <ADC_sample>
     ac0:	a0 e0       	ldi	r26, 0x00	; 0
     ac2:	b0 e0       	ldi	r27, 0x00	; 0
     ac4:	bc 01       	movw	r22, r24
     ac6:	cd 01       	movw	r24, r26
     ac8:	0e 94 b5 22 	call	0x456a	; 0x456a <__floatunsisf>
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	40 ea       	ldi	r20, 0xA0	; 160
     ad2:	5b e3       	ldi	r21, 0x3B	; 59
     ad4:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
	// LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * ( 5.0 / 1024 );
	// LCD_printf( "right: %f\n",voltage);
	return voltage;
}
     ad8:	08 95       	ret

00000ada <getLeftLight>:
float getLeftLight( void )
{

	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ada:	81 e0       	ldi	r24, 0x01	; 1
     adc:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <ADC_set_VREF>
	ADC_set_channel( LEFT_LIGHT_CHAN );
     ae0:	86 e0       	ldi	r24, 0x06	; 6
     ae2:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <ADC_set_channel>
	adcsample = ADC_sample();
     ae6:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <ADC_sample>
     aea:	a0 e0       	ldi	r26, 0x00	; 0
     aec:	b0 e0       	ldi	r27, 0x00	; 0
     aee:	bc 01       	movw	r22, r24
     af0:	cd 01       	movw	r24, r26
     af2:	0e 94 b5 22 	call	0x456a	; 0x456a <__floatunsisf>
     af6:	20 e0       	ldi	r18, 0x00	; 0
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	40 ea       	ldi	r20, 0xA0	; 160
     afc:	5b e3       	ldi	r21, 0x3B	; 59
     afe:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * (5.0/ 1024.0 );
	// LCD_printf( "voltage: %f\n",voltage);
	return voltage;
}
     b02:	08 95       	ret

00000b04 <WaitButton>:
* Input Variables:	none
* Output Return:	int
* Overview:			Use a comment block like this before functions
********************************************************************/
int WaitButton( void ) 
{
     b04:	ff 92       	push	r15
     b06:	0f 93       	push	r16
     b08:	1f 93       	push	r17
     b0a:	cf 93       	push	r28
     b0c:	df 93       	push	r29
    BOOL btnState1, btnState2, btnState3;//local variables - button states
	//int rtnValue=0;//return the button value
	int rtnValue=0;

	LCD_clear();
     b0e:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <LCD_clear>

	if((ATopstat.state=SUBSYS_OPEN))
     b12:	81 e0       	ldi	r24, 0x01	; 1
     b14:	80 93 8a 02 	sts	0x028A, r24
	{
       		// Get switch states.
		btnState1 = ATTINY_get_SW_state( ATTINY_SW3 );
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	0e 94 c9 14 	call	0x2992	; 0x2992 <ATTINY_get_SW_state>
     b1e:	18 2f       	mov	r17, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
     b20:	81 e0       	ldi	r24, 0x01	; 1
     b22:	0e 94 c9 14 	call	0x2992	; 0x2992 <ATTINY_get_SW_state>
     b26:	08 2f       	mov	r16, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
     b28:	82 e0       	ldi	r24, 0x02	; 2
     b2a:	0e 94 c9 14 	call	0x2992	; 0x2992 <ATTINY_get_SW_state>
     b2e:	f8 2e       	mov	r15, r24
		//LCD_printf("btnStates: %d %d %d \n", btnState1, btnState2, btnState3);

		if( btnState1 == TRUE ) 
     b30:	11 30       	cpi	r17, 0x01	; 1
     b32:	19 f0       	breq	.+6      	; 0xb3a <WaitButton+0x36>
     b34:	c0 e0       	ldi	r28, 0x00	; 0
     b36:	d0 e0       	ldi	r29, 0x00	; 0
     b38:	17 c0       	rjmp	.+46     	; 0xb68 <WaitButton+0x64>
		{
			LCD_printf( "SW1: Pushed\n");
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	91 e0       	ldi	r25, 0x01	; 1
     b3e:	0e 94 fe 2b 	call	0x57fc	; 0x57fc <puts>
			TMRSRVC_delay(1000);//wait 1 s
     b42:	88 ee       	ldi	r24, 0xE8	; 232
     b44:	93 e0       	ldi	r25, 0x03	; 3
     b46:	0e 94 66 15 	call	0x2acc	; 0x2acc <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b00100000 );//turn the red LED on
     b4a:	80 e2       	ldi	r24, 0x20	; 32
     b4c:	0e 94 0b 10 	call	0x2016	; 0x2016 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     b50:	80 ed       	ldi	r24, 0xD0	; 208
     b52:	97 e0       	ldi	r25, 0x07	; 7
     b54:	0e 94 66 15 	call	0x2acc	; 0x2acc <TMRSRVC_delay>
               		LED_clr_pattern( 0b01000000 );//turn the green LED off
     b58:	80 e4       	ldi	r24, 0x40	; 64
     b5a:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b5e:	80 e2       	ldi	r24, 0x20	; 32
     b60:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <LED_clr_pattern>
     b64:	c1 e0       	ldi	r28, 0x01	; 1
     b66:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=1;
			}//end if button 1 state open

		if( btnState2 == TRUE ) 
     b68:	01 30       	cpi	r16, 0x01	; 1
     b6a:	b9 f4       	brne	.+46     	; 0xb9a <WaitButton+0x96>
		{
			LCD_printf( "SW2: Pushed\n");
     b6c:	8c e0       	ldi	r24, 0x0C	; 12
     b6e:	91 e0       	ldi	r25, 0x01	; 1
     b70:	0e 94 fe 2b 	call	0x57fc	; 0x57fc <puts>
			TMRSRVC_delay(1000);//wait 1 s
     b74:	88 ee       	ldi	r24, 0xE8	; 232
     b76:	93 e0       	ldi	r25, 0x03	; 3
     b78:	0e 94 66 15 	call	0x2acc	; 0x2acc <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     b7c:	80 e4       	ldi	r24, 0x40	; 64
     b7e:	0e 94 0b 10 	call	0x2016	; 0x2016 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     b82:	80 ed       	ldi	r24, 0xD0	; 208
     b84:	97 e0       	ldi	r25, 0x07	; 7
     b86:	0e 94 66 15 	call	0x2acc	; 0x2acc <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     b8a:	80 e4       	ldi	r24, 0x40	; 64
     b8c:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b90:	80 e2       	ldi	r24, 0x20	; 32
     b92:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <LED_clr_pattern>
     b96:	c2 e0       	ldi	r28, 0x02	; 2
     b98:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=2;
		}//end if btn 2 open

		if ( btnState3 == TRUE ) 
     b9a:	81 e0       	ldi	r24, 0x01	; 1
     b9c:	f8 16       	cp	r15, r24
     b9e:	d1 f4       	brne	.+52     	; 0xbd4 <WaitButton+0xd0>
		{
			LCD_printf( "SW3: Pushed\n");
     ba0:	88 e1       	ldi	r24, 0x18	; 24
     ba2:	91 e0       	ldi	r25, 0x01	; 1
     ba4:	0e 94 fe 2b 	call	0x57fc	; 0x57fc <puts>
			TMRSRVC_delay(1000);//wait 1 s
     ba8:	88 ee       	ldi	r24, 0xE8	; 232
     baa:	93 e0       	ldi	r25, 0x03	; 3
     bac:	0e 94 66 15 	call	0x2acc	; 0x2acc <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     bb0:	80 e4       	ldi	r24, 0x40	; 64
     bb2:	0e 94 0b 10 	call	0x2016	; 0x2016 <LED_set_pattern>
                	LED_set_pattern( 0b00100000 );//turn the red LED on
     bb6:	80 e2       	ldi	r24, 0x20	; 32
     bb8:	0e 94 0b 10 	call	0x2016	; 0x2016 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     bbc:	80 ed       	ldi	r24, 0xD0	; 208
     bbe:	97 e0       	ldi	r25, 0x07	; 7
     bc0:	0e 94 66 15 	call	0x2acc	; 0x2acc <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     bc4:	80 e4       	ldi	r24, 0x40	; 64
     bc6:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     bca:	80 e2       	ldi	r24, 0x20	; 32
     bcc:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <LED_clr_pattern>
     bd0:	c3 e0       	ldi	r28, 0x03	; 3
     bd2:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=3;
		}//end if btn 3 open
            	LCD_clear();
     bd4:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <LCD_clear>
		return rtnValue;
	}//end AT while

}//end the WaitButton() function
     bd8:	ce 01       	movw	r24, r28
     bda:	df 91       	pop	r29
     bdc:	cf 91       	pop	r28
     bde:	1f 91       	pop	r17
     be0:	0f 91       	pop	r16
     be2:	ff 90       	pop	r15
     be4:	08 95       	ret

00000be6 <prefilter>:
* Overview:			This appies a prefilter to the IR data by
*					storing the history of measurements within the
*					an arrayand calculating a running average
********************************************************************/
void prefilter(char reset)
{	
     be6:	2f 92       	push	r2
     be8:	3f 92       	push	r3
     bea:	4f 92       	push	r4
     bec:	5f 92       	push	r5
     bee:	6f 92       	push	r6
     bf0:	7f 92       	push	r7
     bf2:	8f 92       	push	r8
     bf4:	9f 92       	push	r9
     bf6:	af 92       	push	r10
     bf8:	bf 92       	push	r11
     bfa:	cf 92       	push	r12
     bfc:	df 92       	push	r13
     bfe:	ef 92       	push	r14
     c00:	ff 92       	push	r15
     c02:	0f 93       	push	r16
     c04:	1f 93       	push	r17
     c06:	df 93       	push	r29
     c08:	cf 93       	push	r28
     c0a:	cd b7       	in	r28, 0x3d	; 61
     c0c:	de b7       	in	r29, 0x3e	; 62
     c0e:	64 97       	sbiw	r28, 0x14	; 20
     c10:	0f b6       	in	r0, 0x3f	; 63
     c12:	f8 94       	cli
     c14:	de bf       	out	0x3e, r29	; 62
     c16:	0f be       	out	0x3f, r0	; 63
     c18:	cd bf       	out	0x3d, r28	; 61
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
     c1a:	88 23       	and	r24, r24
     c1c:	39 f5       	brne	.+78     	; 0xc6c <prefilter+0x86>
     c1e:	8b ef       	ldi	r24, 0xFB	; 251
     c20:	92 e0       	ldi	r25, 0x02	; 2
     c22:	9c 8b       	std	Y+20, r25	; 0x14
     c24:	8b 8b       	std	Y+19, r24	; 0x13
     c26:	a3 e6       	ldi	r26, 0x63	; 99
     c28:	b4 e0       	ldi	r27, 0x04	; 4
     c2a:	be 83       	std	Y+6, r27	; 0x06
     c2c:	ad 83       	std	Y+5, r26	; 0x05
     c2e:	eb ee       	ldi	r30, 0xEB	; 235
     c30:	f3 e0       	ldi	r31, 0x03	; 3
     c32:	fc 83       	std	Y+4, r31	; 0x04
     c34:	eb 83       	std	Y+3, r30	; 0x03
     c36:	83 e7       	ldi	r24, 0x73	; 115
     c38:	93 e0       	ldi	r25, 0x03	; 3
     c3a:	9a 83       	std	Y+2, r25	; 0x02
     c3c:	89 83       	std	Y+1, r24	; 0x01
     c3e:	0f 2e       	mov	r0, r31
     c40:	f0 e0       	ldi	r31, 0x00	; 0
     c42:	2f 2e       	mov	r2, r31
     c44:	f0 e0       	ldi	r31, 0x00	; 0
     c46:	3f 2e       	mov	r3, r31
     c48:	f0 e0       	ldi	r31, 0x00	; 0
     c4a:	4f 2e       	mov	r4, r31
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	5f 2e       	mov	r5, r31
     c50:	f0 2d       	mov	r31, r0
     c52:	2f 86       	std	Y+15, r2	; 0x0f
     c54:	38 8a       	std	Y+16, r3	; 0x10
     c56:	49 8a       	std	Y+17, r4	; 0x11
     c58:	5a 8a       	std	Y+18, r5	; 0x12
     c5a:	2b 86       	std	Y+11, r2	; 0x0b
     c5c:	3c 86       	std	Y+12, r3	; 0x0c
     c5e:	4d 86       	std	Y+13, r4	; 0x0d
     c60:	5e 86       	std	Y+14, r5	; 0x0e
     c62:	2f 82       	std	Y+7, r2	; 0x07
     c64:	38 86       	std	Y+8, r3	; 0x08
     c66:	49 86       	std	Y+9, r4	; 0x09
     c68:	5a 86       	std	Y+10, r5	; 0x0a
     c6a:	43 c0       	rjmp	.+134    	; 0xcf2 <prefilter+0x10c>
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     c6c:	a0 90 f6 01 	lds	r10, 0x01F6
     c70:	b0 90 f7 01 	lds	r11, 0x01F7
     c74:	c0 90 f8 01 	lds	r12, 0x01F8
     c78:	d0 90 f9 01 	lds	r13, 0x01F9
			rtIR_old[i] = rtIR;
     c7c:	e0 90 fa 01 	lds	r14, 0x01FA
     c80:	f0 90 fb 01 	lds	r15, 0x01FB
     c84:	00 91 fc 01 	lds	r16, 0x01FC
     c88:	10 91 fd 01 	lds	r17, 0x01FD
			ftIR_old[i] = ftIR;
     c8c:	20 90 fe 01 	lds	r2, 0x01FE
     c90:	30 90 ff 01 	lds	r3, 0x01FF
     c94:	40 90 00 02 	lds	r4, 0x0200
     c98:	50 90 01 02 	lds	r5, 0x0201
			bkIR_old[i] = bkIR;
     c9c:	20 91 02 02 	lds	r18, 0x0202
     ca0:	30 91 03 02 	lds	r19, 0x0203
     ca4:	40 91 04 02 	lds	r20, 0x0204
     ca8:	50 91 05 02 	lds	r21, 0x0205
     cac:	80 e0       	ldi	r24, 0x00	; 0
     cae:	90 e0       	ldi	r25, 0x00	; 0
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     cb0:	fc 01       	movw	r30, r24
     cb2:	e5 57       	subi	r30, 0x75	; 117
     cb4:	fd 4f       	sbci	r31, 0xFD	; 253
     cb6:	a0 82       	st	Z, r10
     cb8:	b1 82       	std	Z+1, r11	; 0x01
     cba:	c2 82       	std	Z+2, r12	; 0x02
     cbc:	d3 82       	std	Z+3, r13	; 0x03
			rtIR_old[i] = rtIR;
     cbe:	fc 01       	movw	r30, r24
     cc0:	ed 50       	subi	r30, 0x0D	; 13
     cc2:	fc 4f       	sbci	r31, 0xFC	; 252
     cc4:	e0 82       	st	Z, r14
     cc6:	f1 82       	std	Z+1, r15	; 0x01
     cc8:	02 83       	std	Z+2, r16	; 0x02
     cca:	13 83       	std	Z+3, r17	; 0x03
			ftIR_old[i] = ftIR;
     ccc:	fc 01       	movw	r30, r24
     cce:	e5 58       	subi	r30, 0x85	; 133
     cd0:	fc 4f       	sbci	r31, 0xFC	; 252
     cd2:	20 82       	st	Z, r2
     cd4:	31 82       	std	Z+1, r3	; 0x01
     cd6:	42 82       	std	Z+2, r4	; 0x02
     cd8:	53 82       	std	Z+3, r5	; 0x03
			bkIR_old[i] = bkIR;
     cda:	fc 01       	movw	r30, r24
     cdc:	ed 5f       	subi	r30, 0xFD	; 253
     cde:	fc 4f       	sbci	r31, 0xFC	; 252
     ce0:	20 83       	st	Z, r18
     ce2:	31 83       	std	Z+1, r19	; 0x01
     ce4:	42 83       	std	Z+2, r20	; 0x02
     ce6:	53 83       	std	Z+3, r21	; 0x03
     ce8:	04 96       	adiw	r24, 0x04	; 4
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
     cea:	88 37       	cpi	r24, 0x78	; 120
     cec:	91 05       	cpc	r25, r1
     cee:	01 f7       	brne	.-64     	; 0xcb0 <prefilter+0xca>
     cf0:	96 cf       	rjmp	.-212    	; 0xc1e <prefilter+0x38>
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
	{
		j = i - 1;
		ltIR_old[i] = ltIR_old[j];
     cf2:	ab 89       	ldd	r26, Y+19	; 0x13
     cf4:	bc 89       	ldd	r27, Y+20	; 0x14
     cf6:	2d 91       	ld	r18, X+
     cf8:	3d 91       	ld	r19, X+
     cfa:	4d 91       	ld	r20, X+
     cfc:	5c 91       	ld	r21, X
     cfe:	13 97       	sbiw	r26, 0x03	; 3
     d00:	fd 01       	movw	r30, r26
     d02:	24 83       	std	Z+4, r18	; 0x04
     d04:	35 83       	std	Z+5, r19	; 0x05
     d06:	46 83       	std	Z+6, r20	; 0x06
     d08:	57 83       	std	Z+7, r21	; 0x07
		rtIR_old[i] = rtIR_old[j];
     d0a:	ad 81       	ldd	r26, Y+5	; 0x05
     d0c:	be 81       	ldd	r27, Y+6	; 0x06
     d0e:	ed 90       	ld	r14, X+
     d10:	fd 90       	ld	r15, X+
     d12:	0d 91       	ld	r16, X+
     d14:	1c 91       	ld	r17, X
     d16:	13 97       	sbiw	r26, 0x03	; 3
     d18:	fd 01       	movw	r30, r26
     d1a:	e4 82       	std	Z+4, r14	; 0x04
     d1c:	f5 82       	std	Z+5, r15	; 0x05
     d1e:	06 83       	std	Z+6, r16	; 0x06
     d20:	17 83       	std	Z+7, r17	; 0x07
		ftIR_old[i] = ftIR_old[j];
     d22:	ab 81       	ldd	r26, Y+3	; 0x03
     d24:	bc 81       	ldd	r27, Y+4	; 0x04
     d26:	ad 90       	ld	r10, X+
     d28:	bd 90       	ld	r11, X+
     d2a:	cd 90       	ld	r12, X+
     d2c:	dc 90       	ld	r13, X
     d2e:	13 97       	sbiw	r26, 0x03	; 3
     d30:	fd 01       	movw	r30, r26
     d32:	a4 82       	std	Z+4, r10	; 0x04
     d34:	b5 82       	std	Z+5, r11	; 0x05
     d36:	c6 82       	std	Z+6, r12	; 0x06
     d38:	d7 82       	std	Z+7, r13	; 0x07
		bkIR_old[i] = bkIR_old[j];
     d3a:	a9 81       	ldd	r26, Y+1	; 0x01
     d3c:	ba 81       	ldd	r27, Y+2	; 0x02
     d3e:	6d 90       	ld	r6, X+
     d40:	7d 90       	ld	r7, X+
     d42:	8d 90       	ld	r8, X+
     d44:	9c 90       	ld	r9, X
     d46:	13 97       	sbiw	r26, 0x03	; 3
     d48:	fd 01       	movw	r30, r26
     d4a:	64 82       	std	Z+4, r6	; 0x04
     d4c:	75 82       	std	Z+5, r7	; 0x05
     d4e:	86 82       	std	Z+6, r8	; 0x06
     d50:	97 82       	std	Z+7, r9	; 0x07
		ltIR_new += ltIR_old[i];
     d52:	c2 01       	movw	r24, r4
     d54:	b1 01       	movw	r22, r2
     d56:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
     d5a:	1b 01       	movw	r2, r22
     d5c:	2c 01       	movw	r4, r24
		rtIR_new += rtIR_old[i];
     d5e:	6f 85       	ldd	r22, Y+15	; 0x0f
     d60:	78 89       	ldd	r23, Y+16	; 0x10
     d62:	89 89       	ldd	r24, Y+17	; 0x11
     d64:	9a 89       	ldd	r25, Y+18	; 0x12
     d66:	a8 01       	movw	r20, r16
     d68:	97 01       	movw	r18, r14
     d6a:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
     d6e:	6f 87       	std	Y+15, r22	; 0x0f
     d70:	78 8b       	std	Y+16, r23	; 0x10
     d72:	89 8b       	std	Y+17, r24	; 0x11
     d74:	9a 8b       	std	Y+18, r25	; 0x12
		ftIR_new += ftIR_old[i];
     d76:	6b 85       	ldd	r22, Y+11	; 0x0b
     d78:	7c 85       	ldd	r23, Y+12	; 0x0c
     d7a:	8d 85       	ldd	r24, Y+13	; 0x0d
     d7c:	9e 85       	ldd	r25, Y+14	; 0x0e
     d7e:	a6 01       	movw	r20, r12
     d80:	95 01       	movw	r18, r10
     d82:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
     d86:	6b 87       	std	Y+11, r22	; 0x0b
     d88:	7c 87       	std	Y+12, r23	; 0x0c
     d8a:	8d 87       	std	Y+13, r24	; 0x0d
     d8c:	9e 87       	std	Y+14, r25	; 0x0e
		bkIR_new += bkIR_old[i];
     d8e:	6f 81       	ldd	r22, Y+7	; 0x07
     d90:	78 85       	ldd	r23, Y+8	; 0x08
     d92:	89 85       	ldd	r24, Y+9	; 0x09
     d94:	9a 85       	ldd	r25, Y+10	; 0x0a
     d96:	a4 01       	movw	r20, r8
     d98:	93 01       	movw	r18, r6
     d9a:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
     d9e:	6f 83       	std	Y+7, r22	; 0x07
     da0:	78 87       	std	Y+8, r23	; 0x08
     da2:	89 87       	std	Y+9, r24	; 0x09
     da4:	9a 87       	std	Y+10, r25	; 0x0a
     da6:	8b 89       	ldd	r24, Y+19	; 0x13
     da8:	9c 89       	ldd	r25, Y+20	; 0x14
     daa:	04 97       	sbiw	r24, 0x04	; 4
     dac:	9c 8b       	std	Y+20, r25	; 0x14
     dae:	8b 8b       	std	Y+19, r24	; 0x13
     db0:	ad 81       	ldd	r26, Y+5	; 0x05
     db2:	be 81       	ldd	r27, Y+6	; 0x06
     db4:	14 97       	sbiw	r26, 0x04	; 4
     db6:	be 83       	std	Y+6, r27	; 0x06
     db8:	ad 83       	std	Y+5, r26	; 0x05
     dba:	eb 81       	ldd	r30, Y+3	; 0x03
     dbc:	fc 81       	ldd	r31, Y+4	; 0x04
     dbe:	34 97       	sbiw	r30, 0x04	; 4
     dc0:	fc 83       	std	Y+4, r31	; 0x04
     dc2:	eb 83       	std	Y+3, r30	; 0x03
     dc4:	89 81       	ldd	r24, Y+1	; 0x01
     dc6:	9a 81       	ldd	r25, Y+2	; 0x02
     dc8:	04 97       	sbiw	r24, 0x04	; 4
     dca:	9a 83       	std	Y+2, r25	; 0x02
     dcc:	89 83       	std	Y+1, r24	; 0x01
	float ftIR_new = 0;
	float bkIR_new = 0;
	
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
     dce:	ab 89       	ldd	r26, Y+19	; 0x13
     dd0:	bc 89       	ldd	r27, Y+20	; 0x14
     dd2:	a3 58       	subi	r26, 0x83	; 131
     dd4:	b2 40       	sbci	r27, 0x02	; 2
     dd6:	09 f0       	breq	.+2      	; 0xdda <prefilter+0x1f4>
     dd8:	8c cf       	rjmp	.-232    	; 0xcf2 <prefilter+0x10c>
		bkIR_new += bkIR_old[i];
	}
	
	// Set the current reading to the first element 
	// within the historical array
	ltIR_old[0] = ltIR;
     dda:	80 91 f6 01 	lds	r24, 0x01F6
     dde:	90 91 f7 01 	lds	r25, 0x01F7
     de2:	a0 91 f8 01 	lds	r26, 0x01F8
     de6:	b0 91 f9 01 	lds	r27, 0x01F9
     dea:	eb 89       	ldd	r30, Y+19	; 0x13
     dec:	fc 89       	ldd	r31, Y+20	; 0x14
     dee:	80 87       	std	Z+8, r24	; 0x08
     df0:	91 87       	std	Z+9, r25	; 0x09
     df2:	a2 87       	std	Z+10, r26	; 0x0a
     df4:	b3 87       	std	Z+11, r27	; 0x0b
	rtIR_old[0] = rtIR;
     df6:	80 91 fa 01 	lds	r24, 0x01FA
     dfa:	90 91 fb 01 	lds	r25, 0x01FB
     dfe:	a0 91 fc 01 	lds	r26, 0x01FC
     e02:	b0 91 fd 01 	lds	r27, 0x01FD
     e06:	80 93 f3 03 	sts	0x03F3, r24
     e0a:	90 93 f4 03 	sts	0x03F4, r25
     e0e:	a0 93 f5 03 	sts	0x03F5, r26
     e12:	b0 93 f6 03 	sts	0x03F6, r27
	ftIR_old[0] = ftIR;
     e16:	80 91 fe 01 	lds	r24, 0x01FE
     e1a:	90 91 ff 01 	lds	r25, 0x01FF
     e1e:	a0 91 00 02 	lds	r26, 0x0200
     e22:	b0 91 01 02 	lds	r27, 0x0201
     e26:	80 93 7b 03 	sts	0x037B, r24
     e2a:	90 93 7c 03 	sts	0x037C, r25
     e2e:	a0 93 7d 03 	sts	0x037D, r26
     e32:	b0 93 7e 03 	sts	0x037E, r27
	bkIR_old[0] = bkIR;
     e36:	80 91 02 02 	lds	r24, 0x0202
     e3a:	90 91 03 02 	lds	r25, 0x0203
     e3e:	a0 91 04 02 	lds	r26, 0x0204
     e42:	b0 91 05 02 	lds	r27, 0x0205
     e46:	80 93 03 03 	sts	0x0303, r24
     e4a:	90 93 04 03 	sts	0x0304, r25
     e4e:	a0 93 05 03 	sts	0x0305, r26
     e52:	b0 93 06 03 	sts	0x0306, r27
	
	// Calculate the average value within the array
	// and said that as the new current measurement
	ltIR = ltIR_new/PREFILTER_SIZE;
     e56:	c2 01       	movw	r24, r4
     e58:	b1 01       	movw	r22, r2
     e5a:	20 e0       	ldi	r18, 0x00	; 0
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	40 ef       	ldi	r20, 0xF0	; 240
     e60:	51 e4       	ldi	r21, 0x41	; 65
     e62:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
     e66:	60 93 f6 01 	sts	0x01F6, r22
     e6a:	70 93 f7 01 	sts	0x01F7, r23
     e6e:	80 93 f8 01 	sts	0x01F8, r24
     e72:	90 93 f9 01 	sts	0x01F9, r25
	rtIR = rtIR_new/PREFILTER_SIZE;
     e76:	6f 85       	ldd	r22, Y+15	; 0x0f
     e78:	78 89       	ldd	r23, Y+16	; 0x10
     e7a:	89 89       	ldd	r24, Y+17	; 0x11
     e7c:	9a 89       	ldd	r25, Y+18	; 0x12
     e7e:	20 e0       	ldi	r18, 0x00	; 0
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	40 ef       	ldi	r20, 0xF0	; 240
     e84:	51 e4       	ldi	r21, 0x41	; 65
     e86:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
     e8a:	60 93 fa 01 	sts	0x01FA, r22
     e8e:	70 93 fb 01 	sts	0x01FB, r23
     e92:	80 93 fc 01 	sts	0x01FC, r24
     e96:	90 93 fd 01 	sts	0x01FD, r25
	ftIR = ftIR_new/PREFILTER_SIZE;
     e9a:	6b 85       	ldd	r22, Y+11	; 0x0b
     e9c:	7c 85       	ldd	r23, Y+12	; 0x0c
     e9e:	8d 85       	ldd	r24, Y+13	; 0x0d
     ea0:	9e 85       	ldd	r25, Y+14	; 0x0e
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	40 ef       	ldi	r20, 0xF0	; 240
     ea8:	51 e4       	ldi	r21, 0x41	; 65
     eaa:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
     eae:	60 93 fe 01 	sts	0x01FE, r22
     eb2:	70 93 ff 01 	sts	0x01FF, r23
     eb6:	80 93 00 02 	sts	0x0200, r24
     eba:	90 93 01 02 	sts	0x0201, r25
	bkIR = bkIR_new/PREFILTER_SIZE;
     ebe:	6f 81       	ldd	r22, Y+7	; 0x07
     ec0:	78 85       	ldd	r23, Y+8	; 0x08
     ec2:	89 85       	ldd	r24, Y+9	; 0x09
     ec4:	9a 85       	ldd	r25, Y+10	; 0x0a
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	40 ef       	ldi	r20, 0xF0	; 240
     ecc:	51 e4       	ldi	r21, 0x41	; 65
     ece:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
     ed2:	60 93 02 02 	sts	0x0202, r22
     ed6:	70 93 03 02 	sts	0x0203, r23
     eda:	80 93 04 02 	sts	0x0204, r24
     ede:	90 93 05 02 	sts	0x0205, r25
}
     ee2:	64 96       	adiw	r28, 0x14	; 20
     ee4:	0f b6       	in	r0, 0x3f	; 63
     ee6:	f8 94       	cli
     ee8:	de bf       	out	0x3e, r29	; 62
     eea:	0f be       	out	0x3f, r0	; 63
     eec:	cd bf       	out	0x3d, r28	; 61
     eee:	cf 91       	pop	r28
     ef0:	df 91       	pop	r29
     ef2:	1f 91       	pop	r17
     ef4:	0f 91       	pop	r16
     ef6:	ff 90       	pop	r15
     ef8:	ef 90       	pop	r14
     efa:	df 90       	pop	r13
     efc:	cf 90       	pop	r12
     efe:	bf 90       	pop	r11
     f00:	af 90       	pop	r10
     f02:	9f 90       	pop	r9
     f04:	8f 90       	pop	r8
     f06:	7f 90       	pop	r7
     f08:	6f 90       	pop	r6
     f0a:	5f 90       	pop	r5
     f0c:	4f 90       	pop	r4
     f0e:	3f 90       	pop	r3
     f10:	2f 90       	pop	r2
     f12:	08 95       	ret

00000f14 <pidController>:
* Output Return:	float
* Overview:			This computes the control effort using a PID 
*					controller approach
********************************************************************/
float pidController(float error, char reset )
{	
     f14:	6f 92       	push	r6
     f16:	7f 92       	push	r7
     f18:	8f 92       	push	r8
     f1a:	9f 92       	push	r9
     f1c:	af 92       	push	r10
     f1e:	bf 92       	push	r11
     f20:	cf 92       	push	r12
     f22:	df 92       	push	r13
     f24:	ef 92       	push	r14
     f26:	ff 92       	push	r15
     f28:	0f 93       	push	r16
     f2a:	1f 93       	push	r17
     f2c:	3b 01       	movw	r6, r22
     f2e:	4c 01       	movw	r8, r24
	// Reset the integrator error if specified
	if(reset){
     f30:	44 23       	and	r20, r20
     f32:	61 f0       	breq	.+24     	; 0xf4c <pidController+0x38>
		Ierror = 0;
     f34:	80 e0       	ldi	r24, 0x00	; 0
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	a0 e0       	ldi	r26, 0x00	; 0
     f3a:	b0 e0       	ldi	r27, 0x00	; 0
     f3c:	80 93 ee 01 	sts	0x01EE, r24
     f40:	90 93 ef 01 	sts	0x01EF, r25
     f44:	a0 93 f0 01 	sts	0x01F0, r26
     f48:	b0 93 f1 01 	sts	0x01F1, r27
	}
	// At the current error to the running sum
	Ierror += error;
     f4c:	c4 01       	movw	r24, r8
     f4e:	b3 01       	movw	r22, r6
     f50:	20 91 ee 01 	lds	r18, 0x01EE
     f54:	30 91 ef 01 	lds	r19, 0x01EF
     f58:	40 91 f0 01 	lds	r20, 0x01F0
     f5c:	50 91 f1 01 	lds	r21, 0x01F1
     f60:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
     f64:	5b 01       	movw	r10, r22
     f66:	6c 01       	movw	r12, r24
     f68:	60 93 ee 01 	sts	0x01EE, r22
     f6c:	70 93 ef 01 	sts	0x01EF, r23
     f70:	80 93 f0 01 	sts	0x01F0, r24
     f74:	90 93 f1 01 	sts	0x01F1, r25
     f78:	c4 01       	movw	r24, r8
     f7a:	b3 01       	movw	r22, r6
     f7c:	a4 01       	movw	r20, r8
     f7e:	93 01       	movw	r18, r6
     f80:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
     f84:	7b 01       	movw	r14, r22
     f86:	8c 01       	movw	r16, r24
     f88:	c4 01       	movw	r24, r8
     f8a:	b3 01       	movw	r22, r6
     f8c:	20 91 f2 01 	lds	r18, 0x01F2
     f90:	30 91 f3 01 	lds	r19, 0x01F3
     f94:	40 91 f4 01 	lds	r20, 0x01F4
     f98:	50 91 f5 01 	lds	r21, 0x01F5
     f9c:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
     fa0:	20 e0       	ldi	r18, 0x00	; 0
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	40 ea       	ldi	r20, 0xA0	; 160
     fa6:	50 e4       	ldi	r21, 0x40	; 64
     fa8:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
     fac:	9b 01       	movw	r18, r22
     fae:	ac 01       	movw	r20, r24
     fb0:	c8 01       	movw	r24, r16
     fb2:	b7 01       	movw	r22, r14
     fb4:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
     fb8:	7b 01       	movw	r14, r22
     fba:	8c 01       	movw	r16, r24
     fbc:	c6 01       	movw	r24, r12
     fbe:	b5 01       	movw	r22, r10
     fc0:	2f e6       	ldi	r18, 0x6F	; 111
     fc2:	32 e1       	ldi	r19, 0x12	; 18
     fc4:	43 e8       	ldi	r20, 0x83	; 131
     fc6:	5a e3       	ldi	r21, 0x3A	; 58
     fc8:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
     fcc:	9b 01       	movw	r18, r22
     fce:	ac 01       	movw	r20, r24
     fd0:	c8 01       	movw	r24, r16
     fd2:	b7 01       	movw	r22, r14
     fd4:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
	
	// Use the PID controller approach to calculate the effort
	float effort = (KP*error) + (KD*(error-error_old)) + (KI*Ierror);
	
	return effort;	
}
     fd8:	1f 91       	pop	r17
     fda:	0f 91       	pop	r16
     fdc:	ff 90       	pop	r15
     fde:	ef 90       	pop	r14
     fe0:	df 90       	pop	r13
     fe2:	cf 90       	pop	r12
     fe4:	bf 90       	pop	r11
     fe6:	af 90       	pop	r10
     fe8:	9f 90       	pop	r9
     fea:	8f 90       	pop	r8
     fec:	7f 90       	pop	r7
     fee:	6f 90       	pop	r6
     ff0:	08 95       	ret

00000ff2 <check_threshhold>:
* Output Return:	char
* Overview:			This check the IR values to thresholds
********************************************************************/

char check_threshhold(float F, float B, float L, float R)
{
     ff2:	2f 92       	push	r2
     ff4:	6f 92       	push	r6
     ff6:	7f 92       	push	r7
     ff8:	8f 92       	push	r8
     ffa:	9f 92       	push	r9
     ffc:	af 92       	push	r10
     ffe:	bf 92       	push	r11
    1000:	cf 92       	push	r12
    1002:	df 92       	push	r13
    1004:	ef 92       	push	r14
    1006:	ff 92       	push	r15
    1008:	0f 93       	push	r16
    100a:	1f 93       	push	r17
    100c:	df 93       	push	r29
    100e:	cf 93       	push	r28
    1010:	00 d0       	rcall	.+0      	; 0x1012 <check_threshhold+0x20>
    1012:	00 d0       	rcall	.+0      	; 0x1014 <check_threshhold+0x22>
    1014:	cd b7       	in	r28, 0x3d	; 61
    1016:	de b7       	in	r29, 0x3e	; 62
    1018:	69 83       	std	Y+1, r22	; 0x01
    101a:	7a 83       	std	Y+2, r23	; 0x02
    101c:	8b 83       	std	Y+3, r24	; 0x03
    101e:	9c 83       	std	Y+4, r25	; 0x04
	char check = 0;
	check += 0b00000001*(ftIR < F);
    1020:	60 90 fe 01 	lds	r6, 0x01FE
    1024:	70 90 ff 01 	lds	r7, 0x01FF
    1028:	80 90 00 02 	lds	r8, 0x0200
    102c:	90 90 01 02 	lds	r9, 0x0201
	check += 0b00000010*(bkIR < B);
    1030:	60 91 02 02 	lds	r22, 0x0202
    1034:	70 91 03 02 	lds	r23, 0x0203
    1038:	80 91 04 02 	lds	r24, 0x0204
    103c:	90 91 05 02 	lds	r25, 0x0205
    1040:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    1044:	28 2e       	mov	r2, r24
    1046:	22 1c       	adc	r2, r2
    1048:	22 24       	eor	r2, r2
    104a:	22 1c       	adc	r2, r2
    104c:	22 0c       	add	r2, r2
	check += 0b00000100*(ltIR < L);
    104e:	60 91 f6 01 	lds	r22, 0x01F6
    1052:	70 91 f7 01 	lds	r23, 0x01F7
    1056:	80 91 f8 01 	lds	r24, 0x01F8
    105a:	90 91 f9 01 	lds	r25, 0x01F9
    105e:	a8 01       	movw	r20, r16
    1060:	97 01       	movw	r18, r14
    1062:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    1066:	08 2f       	mov	r16, r24
    1068:	00 1f       	adc	r16, r16
    106a:	00 27       	eor	r16, r16
    106c:	00 1f       	adc	r16, r16
    106e:	00 0f       	add	r16, r16
    1070:	00 0f       	add	r16, r16
	check += 0b00001000*(rtIR < R);
    1072:	60 91 fa 01 	lds	r22, 0x01FA
    1076:	70 91 fb 01 	lds	r23, 0x01FB
    107a:	80 91 fc 01 	lds	r24, 0x01FC
    107e:	90 91 fd 01 	lds	r25, 0x01FD
    1082:	a6 01       	movw	r20, r12
    1084:	95 01       	movw	r18, r10
    1086:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    108a:	18 2f       	mov	r17, r24
    108c:	11 1f       	adc	r17, r17
    108e:	11 27       	eor	r17, r17
    1090:	11 1f       	adc	r17, r17
    1092:	11 0f       	add	r17, r17
    1094:	11 0f       	add	r17, r17
    1096:	11 0f       	add	r17, r17

char check_threshhold(float F, float B, float L, float R)
{
	char check = 0;
	check += 0b00000001*(ftIR < F);
	check += 0b00000010*(bkIR < B);
    1098:	ff 24       	eor	r15, r15
    109a:	c4 01       	movw	r24, r8
    109c:	b3 01       	movw	r22, r6
    109e:	29 81       	ldd	r18, Y+1	; 0x01
    10a0:	3a 81       	ldd	r19, Y+2	; 0x02
    10a2:	4b 81       	ldd	r20, Y+3	; 0x03
    10a4:	5c 81       	ldd	r21, Y+4	; 0x04
    10a6:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    10aa:	88 23       	and	r24, r24
    10ac:	14 f4       	brge	.+4      	; 0x10b2 <check_threshhold+0xc0>
    10ae:	ff 24       	eor	r15, r15
    10b0:	f3 94       	inc	r15
    10b2:	2f 0c       	add	r2, r15
	check += 0b00000100*(ltIR < L);
    10b4:	20 0e       	add	r2, r16
	check += 0b00001000*(rtIR < R);
	return check;	
}
    10b6:	82 2d       	mov	r24, r2
    10b8:	81 0f       	add	r24, r17
    10ba:	0f 90       	pop	r0
    10bc:	0f 90       	pop	r0
    10be:	0f 90       	pop	r0
    10c0:	0f 90       	pop	r0
    10c2:	cf 91       	pop	r28
    10c4:	df 91       	pop	r29
    10c6:	1f 91       	pop	r17
    10c8:	0f 91       	pop	r16
    10ca:	ff 90       	pop	r15
    10cc:	ef 90       	pop	r14
    10ce:	df 90       	pop	r13
    10d0:	cf 90       	pop	r12
    10d2:	bf 90       	pop	r11
    10d4:	af 90       	pop	r10
    10d6:	9f 90       	pop	r9
    10d8:	8f 90       	pop	r8
    10da:	7f 90       	pop	r7
    10dc:	6f 90       	pop	r6
    10de:	2f 90       	pop	r2
    10e0:	08 95       	ret

000010e2 <move_arc_stwt>:
		// bool stepper_FWD = arcLength >= 0;
		// STEPPER_move_stwt( STEPPER_BOTH, 
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk, // Left
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk); // Right
	// }
}
    10e2:	08 95       	ret

000010e4 <checkLightSensor>:
*					sensors values sequentially
********************************************************************/
void checkLightSensor( void )
{
	// Update both light sensor variables
	rightLightVolt = getRightLight();
    10e4:	0e 94 58 05 	call	0xab0	; 0xab0 <getRightLight>
    10e8:	60 93 06 02 	sts	0x0206, r22
    10ec:	70 93 07 02 	sts	0x0207, r23
    10f0:	80 93 08 02 	sts	0x0208, r24
    10f4:	90 93 09 02 	sts	0x0209, r25
	leftLightVolt = getLeftLight();
    10f8:	0e 94 6d 05 	call	0xada	; 0xada <getLeftLight>
    10fc:	60 93 0a 02 	sts	0x020A, r22
    1100:	70 93 0b 02 	sts	0x020B, r23
    1104:	80 93 0c 02 	sts	0x020C, r24
    1108:	90 93 0d 02 	sts	0x020D, r25
	// LCD_printf("R Voltage: %3.2f\nL Voltage: %3.2f\n\n\n", voltageR, voltageL);
	// TMRSRVC_delay(2000);//wait 2 seconds
	// LCD_clear;
}
    110c:	08 95       	ret

0000110e <checkIR>:
*					finding sensor values sequentially
********************************************************************/
void checkIR( void )
{
	// Update all IR values
	ftIR = getFrontIR();
    110e:	0e 94 ef 04 	call	0x9de	; 0x9de <getFrontIR>
    1112:	60 93 fe 01 	sts	0x01FE, r22
    1116:	70 93 ff 01 	sts	0x01FF, r23
    111a:	80 93 00 02 	sts	0x0200, r24
    111e:	90 93 01 02 	sts	0x0201, r25
	bkIR = getBackIR();
    1122:	0e 94 cc 04 	call	0x998	; 0x998 <getBackIR>
    1126:	60 93 02 02 	sts	0x0202, r22
    112a:	70 93 03 02 	sts	0x0203, r23
    112e:	80 93 04 02 	sts	0x0204, r24
    1132:	90 93 05 02 	sts	0x0205, r25
	ltIR = getLeftIR();
    1136:	0e 94 35 05 	call	0xa6a	; 0xa6a <getLeftIR>
    113a:	60 93 f6 01 	sts	0x01F6, r22
    113e:	70 93 f7 01 	sts	0x01F7, r23
    1142:	80 93 f8 01 	sts	0x01F8, r24
    1146:	90 93 f9 01 	sts	0x01F9, r25
	rtIR = getRightIR();
    114a:	0e 94 12 05 	call	0xa24	; 0xa24 <getRightIR>
    114e:	60 93 fa 01 	sts	0x01FA, r22
    1152:	70 93 fb 01 	sts	0x01FB, r23
    1156:	80 93 fc 01 	sts	0x01FC, r24
    115a:	90 93 fd 01 	sts	0x01FD, r25
}
    115e:	08 95       	ret

00001160 <moveLight>:
					 1: Light_Lover = track the light but do not collide
					 2: Light_Aggro = run towards the light and touch it
					 3: Light_Shy = run away from the light
********************************************************************/
char moveLight( int lightBehavior)
{
    1160:	3f 92       	push	r3
    1162:	4f 92       	push	r4
    1164:	5f 92       	push	r5
    1166:	6f 92       	push	r6
    1168:	7f 92       	push	r7
    116a:	8f 92       	push	r8
    116c:	9f 92       	push	r9
    116e:	af 92       	push	r10
    1170:	bf 92       	push	r11
    1172:	cf 92       	push	r12
    1174:	df 92       	push	r13
    1176:	ef 92       	push	r14
    1178:	ff 92       	push	r15
    117a:	0f 93       	push	r16
    117c:	1f 93       	push	r17
    117e:	7c 01       	movw	r14, r24
	// call the moveWall() to detect walls and return a Boolean
	
	BOOL isLight = (rightLightVolt > LIGHT_R_THRESH)||(leftLightVolt > LIGHT_L_THRESH);
    1180:	40 90 06 02 	lds	r4, 0x0206
    1184:	50 90 07 02 	lds	r5, 0x0207
    1188:	60 90 08 02 	lds	r6, 0x0208
    118c:	70 90 09 02 	lds	r7, 0x0209
    1190:	c3 01       	movw	r24, r6
    1192:	b2 01       	movw	r22, r4
    1194:	23 e3       	ldi	r18, 0x33	; 51
    1196:	33 e3       	ldi	r19, 0x33	; 51
    1198:	43 e1       	ldi	r20, 0x13	; 19
    119a:	50 e4       	ldi	r21, 0x40	; 64
    119c:	0e 94 67 23 	call	0x46ce	; 0x46ce <__gesf2>
    11a0:	18 16       	cp	r1, r24
    11a2:	94 f0       	brlt	.+36     	; 0x11c8 <moveLight+0x68>
    11a4:	00 e0       	ldi	r16, 0x00	; 0
    11a6:	10 e0       	ldi	r17, 0x00	; 0
    11a8:	60 91 0a 02 	lds	r22, 0x020A
    11ac:	70 91 0b 02 	lds	r23, 0x020B
    11b0:	80 91 0c 02 	lds	r24, 0x020C
    11b4:	90 91 0d 02 	lds	r25, 0x020D
    11b8:	27 ed       	ldi	r18, 0xD7	; 215
    11ba:	33 ea       	ldi	r19, 0xA3	; 163
    11bc:	40 e3       	ldi	r20, 0x30	; 48
    11be:	50 e4       	ldi	r21, 0x40	; 64
    11c0:	0e 94 67 23 	call	0x46ce	; 0x46ce <__gesf2>
    11c4:	18 16       	cp	r1, r24
    11c6:	14 f4       	brge	.+4      	; 0x11cc <moveLight+0x6c>
    11c8:	01 e0       	ldi	r16, 0x01	; 1
    11ca:	10 e0       	ldi	r17, 0x00	; 0
    11cc:	30 2e       	mov	r3, r16
	if(!isLight){
    11ce:	00 23       	and	r16, r16
    11d0:	09 f4       	brne	.+2      	; 0x11d4 <moveLight+0x74>
    11d2:	5b c1       	rjmp	.+694    	; 0x148a <moveLight+0x32a>
	float stepper_speed_L = 0;
	float stepper_speed_R = 0;
	BOOL direction_L = 1;
	BOOL direction_R = 1;
	
	switch(lightBehavior){
    11d4:	81 e0       	ldi	r24, 0x01	; 1
    11d6:	e8 16       	cp	r14, r24
    11d8:	f1 04       	cpc	r15, r1
    11da:	09 f4       	brne	.+2      	; 0x11de <moveLight+0x7e>
    11dc:	47 c0       	rjmp	.+142    	; 0x126c <moveLight+0x10c>
    11de:	92 e0       	ldi	r25, 0x02	; 2
    11e0:	e9 16       	cp	r14, r25
    11e2:	f1 04       	cpc	r15, r1
    11e4:	1c f4       	brge	.+6      	; 0x11ec <moveLight+0x8c>
    11e6:	ef 28       	or	r14, r15
    11e8:	c1 f0       	breq	.+48     	; 0x121a <moveLight+0xba>
    11ea:	0a c0       	rjmp	.+20     	; 0x1200 <moveLight+0xa0>
    11ec:	e2 e0       	ldi	r30, 0x02	; 2
    11ee:	ee 16       	cp	r14, r30
    11f0:	f1 04       	cpc	r15, r1
    11f2:	09 f4       	brne	.+2      	; 0x11f6 <moveLight+0x96>
    11f4:	78 c0       	rjmp	.+240    	; 0x12e6 <moveLight+0x186>
    11f6:	f3 e0       	ldi	r31, 0x03	; 3
    11f8:	ef 16       	cp	r14, r31
    11fa:	f1 04       	cpc	r15, r1
    11fc:	09 f4       	brne	.+2      	; 0x1200 <moveLight+0xa0>
    11fe:	a6 c0       	rjmp	.+332    	; 0x134c <moveLight+0x1ec>
    1200:	0f 2e       	mov	r0, r31
    1202:	f0 e0       	ldi	r31, 0x00	; 0
    1204:	cf 2e       	mov	r12, r31
    1206:	f0 e0       	ldi	r31, 0x00	; 0
    1208:	df 2e       	mov	r13, r31
    120a:	f0 e0       	ldi	r31, 0x00	; 0
    120c:	ef 2e       	mov	r14, r31
    120e:	f0 e0       	ldi	r31, 0x00	; 0
    1210:	ff 2e       	mov	r15, r31
    1212:	f0 2d       	mov	r31, r0
    1214:	46 01       	movw	r8, r12
    1216:	57 01       	movw	r10, r14
    1218:	cb c0       	rjmp	.+406    	; 0x13b0 <moveLight+0x250>
		case LIGHT_WANDER:
			stepper_speed_L = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_R_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    121a:	60 91 0a 02 	lds	r22, 0x020A
    121e:	70 91 0b 02 	lds	r23, 0x020B
    1222:	80 91 0c 02 	lds	r24, 0x020C
    1226:	90 91 0d 02 	lds	r25, 0x020D
    122a:	23 e3       	ldi	r18, 0x33	; 51
    122c:	33 e3       	ldi	r19, 0x33	; 51
    122e:	43 e1       	ldi	r20, 0x13	; 19
    1230:	50 e4       	ldi	r21, 0x40	; 64
    1232:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
    1236:	22 e5       	ldi	r18, 0x52	; 82
    1238:	38 eb       	ldi	r19, 0xB8	; 184
    123a:	4e e9       	ldi	r20, 0x9E	; 158
    123c:	5f e3       	ldi	r21, 0x3F	; 63
    123e:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
    1242:	20 e0       	ldi	r18, 0x00	; 0
    1244:	30 e0       	ldi	r19, 0x00	; 0
    1246:	40 e2       	ldi	r20, 0x20	; 32
    1248:	52 ec       	ldi	r21, 0xC2	; 194
    124a:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    124e:	20 e0       	ldi	r18, 0x00	; 0
    1250:	30 e0       	ldi	r19, 0x00	; 0
    1252:	40 e2       	ldi	r20, 0x20	; 32
    1254:	52 e4       	ldi	r21, 0x42	; 66
    1256:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
    125a:	6b 01       	movw	r12, r22
    125c:	7c 01       	movw	r14, r24
			stepper_speed_R = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_L_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    125e:	c3 01       	movw	r24, r6
    1260:	b2 01       	movw	r22, r4
    1262:	27 ed       	ldi	r18, 0xD7	; 215
    1264:	33 ea       	ldi	r19, 0xA3	; 163
    1266:	40 e3       	ldi	r20, 0x30	; 48
    1268:	50 e4       	ldi	r21, 0x40	; 64
    126a:	28 c0       	rjmp	.+80     	; 0x12bc <moveLight+0x15c>
			break;
						
		case LIGHT_LOVER:
			stepper_speed_L = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_L_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    126c:	60 91 0a 02 	lds	r22, 0x020A
    1270:	70 91 0b 02 	lds	r23, 0x020B
    1274:	80 91 0c 02 	lds	r24, 0x020C
    1278:	90 91 0d 02 	lds	r25, 0x020D
    127c:	27 ed       	ldi	r18, 0xD7	; 215
    127e:	33 ea       	ldi	r19, 0xA3	; 163
    1280:	40 e3       	ldi	r20, 0x30	; 48
    1282:	50 e4       	ldi	r21, 0x40	; 64
    1284:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
    1288:	22 e5       	ldi	r18, 0x52	; 82
    128a:	38 eb       	ldi	r19, 0xB8	; 184
    128c:	4e e9       	ldi	r20, 0x9E	; 158
    128e:	5f e3       	ldi	r21, 0x3F	; 63
    1290:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
    1294:	20 e0       	ldi	r18, 0x00	; 0
    1296:	30 e0       	ldi	r19, 0x00	; 0
    1298:	40 e2       	ldi	r20, 0x20	; 32
    129a:	52 ec       	ldi	r21, 0xC2	; 194
    129c:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    12a0:	20 e0       	ldi	r18, 0x00	; 0
    12a2:	30 e0       	ldi	r19, 0x00	; 0
    12a4:	40 e2       	ldi	r20, 0x20	; 32
    12a6:	52 e4       	ldi	r21, 0x42	; 66
    12a8:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
    12ac:	6b 01       	movw	r12, r22
    12ae:	7c 01       	movw	r14, r24
			stepper_speed_R = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_R_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    12b0:	c3 01       	movw	r24, r6
    12b2:	b2 01       	movw	r22, r4
    12b4:	23 e3       	ldi	r18, 0x33	; 51
    12b6:	33 e3       	ldi	r19, 0x33	; 51
    12b8:	43 e1       	ldi	r20, 0x13	; 19
    12ba:	50 e4       	ldi	r21, 0x40	; 64
    12bc:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
    12c0:	2a e9       	ldi	r18, 0x9A	; 154
    12c2:	39 e9       	ldi	r19, 0x99	; 153
    12c4:	49 ed       	ldi	r20, 0xD9	; 217
    12c6:	5f e3       	ldi	r21, 0x3F	; 63
    12c8:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
    12cc:	20 e0       	ldi	r18, 0x00	; 0
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	40 e2       	ldi	r20, 0x20	; 32
    12d2:	52 ec       	ldi	r21, 0xC2	; 194
    12d4:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    12d8:	20 e0       	ldi	r18, 0x00	; 0
    12da:	30 e0       	ldi	r19, 0x00	; 0
    12dc:	40 e2       	ldi	r20, 0x20	; 32
    12de:	52 e4       	ldi	r21, 0x42	; 66
    12e0:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
    12e4:	63 c0       	rjmp	.+198    	; 0x13ac <moveLight+0x24c>
			break;
			
		case LIGHT_AGGRO:	
			stepper_speed_R = MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_L_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    12e6:	60 91 0a 02 	lds	r22, 0x020A
    12ea:	70 91 0b 02 	lds	r23, 0x020B
    12ee:	80 91 0c 02 	lds	r24, 0x020C
    12f2:	90 91 0d 02 	lds	r25, 0x020D
    12f6:	27 ed       	ldi	r18, 0xD7	; 215
    12f8:	33 ea       	ldi	r19, 0xA3	; 163
    12fa:	40 e3       	ldi	r20, 0x30	; 48
    12fc:	50 e4       	ldi	r21, 0x40	; 64
    12fe:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
    1302:	22 e5       	ldi	r18, 0x52	; 82
    1304:	38 eb       	ldi	r19, 0xB8	; 184
    1306:	4e e9       	ldi	r20, 0x9E	; 158
    1308:	5f e3       	ldi	r21, 0x3F	; 63
    130a:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
    130e:	20 e0       	ldi	r18, 0x00	; 0
    1310:	30 e0       	ldi	r19, 0x00	; 0
    1312:	40 e2       	ldi	r20, 0x20	; 32
    1314:	52 e4       	ldi	r21, 0x42	; 66
    1316:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    131a:	4b 01       	movw	r8, r22
    131c:	5c 01       	movw	r10, r24
			stepper_speed_L = MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_R_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    131e:	c3 01       	movw	r24, r6
    1320:	b2 01       	movw	r22, r4
    1322:	23 e3       	ldi	r18, 0x33	; 51
    1324:	33 e3       	ldi	r19, 0x33	; 51
    1326:	43 e1       	ldi	r20, 0x13	; 19
    1328:	50 e4       	ldi	r21, 0x40	; 64
    132a:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
    132e:	2a e9       	ldi	r18, 0x9A	; 154
    1330:	39 e9       	ldi	r19, 0x99	; 153
    1332:	49 ed       	ldi	r20, 0xD9	; 217
    1334:	5f e3       	ldi	r21, 0x3F	; 63
    1336:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
    133a:	20 e0       	ldi	r18, 0x00	; 0
    133c:	30 e0       	ldi	r19, 0x00	; 0
    133e:	40 e2       	ldi	r20, 0x20	; 32
    1340:	52 e4       	ldi	r21, 0x42	; 66
    1342:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    1346:	6b 01       	movw	r12, r22
    1348:	7c 01       	movw	r14, r24
    134a:	32 c0       	rjmp	.+100    	; 0x13b0 <moveLight+0x250>
			break;
			
		case LIGHT_SHY:
			stepper_speed_L = MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_L_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    134c:	60 91 0a 02 	lds	r22, 0x020A
    1350:	70 91 0b 02 	lds	r23, 0x020B
    1354:	80 91 0c 02 	lds	r24, 0x020C
    1358:	90 91 0d 02 	lds	r25, 0x020D
    135c:	27 ed       	ldi	r18, 0xD7	; 215
    135e:	33 ea       	ldi	r19, 0xA3	; 163
    1360:	40 e3       	ldi	r20, 0x30	; 48
    1362:	50 e4       	ldi	r21, 0x40	; 64
    1364:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
    1368:	22 e5       	ldi	r18, 0x52	; 82
    136a:	38 eb       	ldi	r19, 0xB8	; 184
    136c:	4e e9       	ldi	r20, 0x9E	; 158
    136e:	5f e3       	ldi	r21, 0x3F	; 63
    1370:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
    1374:	20 e0       	ldi	r18, 0x00	; 0
    1376:	30 e0       	ldi	r19, 0x00	; 0
    1378:	40 e2       	ldi	r20, 0x20	; 32
    137a:	52 e4       	ldi	r21, 0x42	; 66
    137c:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    1380:	6b 01       	movw	r12, r22
    1382:	7c 01       	movw	r14, r24
			stepper_speed_R = MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_R_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    1384:	c3 01       	movw	r24, r6
    1386:	b2 01       	movw	r22, r4
    1388:	23 e3       	ldi	r18, 0x33	; 51
    138a:	33 e3       	ldi	r19, 0x33	; 51
    138c:	43 e1       	ldi	r20, 0x13	; 19
    138e:	50 e4       	ldi	r21, 0x40	; 64
    1390:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
    1394:	2a e9       	ldi	r18, 0x9A	; 154
    1396:	39 e9       	ldi	r19, 0x99	; 153
    1398:	49 ed       	ldi	r20, 0xD9	; 217
    139a:	5f e3       	ldi	r21, 0x3F	; 63
    139c:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
    13a0:	20 e0       	ldi	r18, 0x00	; 0
    13a2:	30 e0       	ldi	r19, 0x00	; 0
    13a4:	40 e2       	ldi	r20, 0x20	; 32
    13a6:	52 e4       	ldi	r21, 0x42	; 66
    13a8:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    13ac:	4b 01       	movw	r8, r22
    13ae:	5c 01       	movw	r10, r24
			break;
			
		default: break;
		}
		
		if(stepper_speed_L<0){
    13b0:	c7 01       	movw	r24, r14
    13b2:	b6 01       	movw	r22, r12
    13b4:	20 e0       	ldi	r18, 0x00	; 0
    13b6:	30 e0       	ldi	r19, 0x00	; 0
    13b8:	40 e0       	ldi	r20, 0x00	; 0
    13ba:	50 e0       	ldi	r21, 0x00	; 0
    13bc:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    13c0:	88 23       	and	r24, r24
    13c2:	64 f4       	brge	.+24     	; 0x13dc <moveLight+0x27c>
    13c4:	0f 2e       	mov	r0, r31
    13c6:	f0 e0       	ldi	r31, 0x00	; 0
    13c8:	cf 2e       	mov	r12, r31
    13ca:	f0 e0       	ldi	r31, 0x00	; 0
    13cc:	df 2e       	mov	r13, r31
    13ce:	f0 e0       	ldi	r31, 0x00	; 0
    13d0:	ef 2e       	mov	r14, r31
    13d2:	f0 e0       	ldi	r31, 0x00	; 0
    13d4:	ff 2e       	mov	r15, r31
    13d6:	f0 2d       	mov	r31, r0
    13d8:	66 24       	eor	r6, r6
    13da:	02 c0       	rjmp	.+4      	; 0x13e0 <moveLight+0x280>
    13dc:	66 24       	eor	r6, r6
    13de:	63 94       	inc	r6
			stepper_speed_L = 0;
			direction_L = 0;}
		
		if(stepper_speed_R<0){
    13e0:	c5 01       	movw	r24, r10
    13e2:	b4 01       	movw	r22, r8
    13e4:	20 e0       	ldi	r18, 0x00	; 0
    13e6:	30 e0       	ldi	r19, 0x00	; 0
    13e8:	40 e0       	ldi	r20, 0x00	; 0
    13ea:	50 e0       	ldi	r21, 0x00	; 0
    13ec:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    13f0:	88 23       	and	r24, r24
    13f2:	64 f4       	brge	.+24     	; 0x140c <moveLight+0x2ac>
    13f4:	0f 2e       	mov	r0, r31
    13f6:	f0 e0       	ldi	r31, 0x00	; 0
    13f8:	8f 2e       	mov	r8, r31
    13fa:	f0 e0       	ldi	r31, 0x00	; 0
    13fc:	9f 2e       	mov	r9, r31
    13fe:	f0 e0       	ldi	r31, 0x00	; 0
    1400:	af 2e       	mov	r10, r31
    1402:	f0 e0       	ldi	r31, 0x00	; 0
    1404:	bf 2e       	mov	r11, r31
    1406:	f0 2d       	mov	r31, r0
    1408:	77 24       	eor	r7, r7
    140a:	02 c0       	rjmp	.+4      	; 0x1410 <moveLight+0x2b0>
    140c:	77 24       	eor	r7, r7
    140e:	73 94       	inc	r7
			stepper_speed_R = 0;
			direction_R = 0;}
			
		// STEPPER_REV
		STEPPER_move_stnb( STEPPER_BOTH, 
    1410:	8d b7       	in	r24, 0x3d	; 61
    1412:	9e b7       	in	r25, 0x3e	; 62
    1414:	09 97       	sbiw	r24, 0x09	; 9
    1416:	0f b6       	in	r0, 0x3f	; 63
    1418:	f8 94       	cli
    141a:	9e bf       	out	0x3e, r25	; 62
    141c:	0f be       	out	0x3f, r0	; 63
    141e:	8d bf       	out	0x3d, r24	; 61
    1420:	0d b7       	in	r16, 0x3d	; 61
    1422:	1e b7       	in	r17, 0x3e	; 62
    1424:	0f 5f       	subi	r16, 0xFF	; 255
    1426:	1f 4f       	sbci	r17, 0xFF	; 255
    1428:	c7 01       	movw	r24, r14
    142a:	b6 01       	movw	r22, r12
    142c:	0e 94 89 22 	call	0x4512	; 0x4512 <__fixunssfsi>
    1430:	6b 01       	movw	r12, r22
    1432:	7c 01       	movw	r14, r24
    1434:	82 e3       	ldi	r24, 0x32	; 50
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	f8 01       	movw	r30, r16
    143a:	91 83       	std	Z+1, r25	; 0x01
    143c:	80 83       	st	Z, r24
    143e:	c5 01       	movw	r24, r10
    1440:	b4 01       	movw	r22, r8
    1442:	0e 94 89 22 	call	0x4512	; 0x4512 <__fixunssfsi>
    1446:	f8 01       	movw	r30, r16
    1448:	73 83       	std	Z+3, r23	; 0x03
    144a:	62 83       	std	Z+2, r22	; 0x02
    144c:	82 ec       	ldi	r24, 0xC2	; 194
    144e:	91 e0       	ldi	r25, 0x01	; 1
    1450:	95 83       	std	Z+5, r25	; 0x05
    1452:	84 83       	std	Z+4, r24	; 0x04
    1454:	16 82       	std	Z+6, r1	; 0x06
    1456:	10 86       	std	Z+8, r1	; 0x08
    1458:	17 82       	std	Z+7, r1	; 0x07
    145a:	81 e0       	ldi	r24, 0x01	; 1
    145c:	62 e0       	ldi	r22, 0x02	; 2
    145e:	46 2d       	mov	r20, r6
    1460:	22 e3       	ldi	r18, 0x32	; 50
    1462:	30 e0       	ldi	r19, 0x00	; 0
    1464:	86 01       	movw	r16, r12
    1466:	92 ec       	ldi	r25, 0xC2	; 194
    1468:	e9 2e       	mov	r14, r25
    146a:	91 e0       	ldi	r25, 0x01	; 1
    146c:	f9 2e       	mov	r15, r25
    146e:	cc 24       	eor	r12, r12
    1470:	aa 24       	eor	r10, r10
    1472:	bb 24       	eor	r11, r11
    1474:	87 2c       	mov	r8, r7
    1476:	0e 94 dd 11 	call	0x23ba	; 0x23ba <STEPPER_move>
    147a:	8d b7       	in	r24, 0x3d	; 61
    147c:	9e b7       	in	r25, 0x3e	; 62
    147e:	09 96       	adiw	r24, 0x09	; 9
    1480:	0f b6       	in	r0, 0x3f	; 63
    1482:	f8 94       	cli
    1484:	9e bf       	out	0x3e, r25	; 62
    1486:	0f be       	out	0x3f, r0	; 63
    1488:	8d bf       	out	0x3d, r24	; 61
		direction_L, 50, stepper_speed_L, 450, STEPPER_BRK_OFF, // Left
		direction_R, 50, stepper_speed_R, 450, STEPPER_BRK_OFF ); // Right

		return isLight;
}
    148a:	83 2d       	mov	r24, r3
    148c:	1f 91       	pop	r17
    148e:	0f 91       	pop	r16
    1490:	ff 90       	pop	r15
    1492:	ef 90       	pop	r14
    1494:	df 90       	pop	r13
    1496:	cf 90       	pop	r12
    1498:	bf 90       	pop	r11
    149a:	af 90       	pop	r10
    149c:	9f 90       	pop	r9
    149e:	8f 90       	pop	r8
    14a0:	7f 90       	pop	r7
    14a2:	6f 90       	pop	r6
    14a4:	5f 90       	pop	r5
    14a6:	4f 90       	pop	r4
    14a8:	3f 90       	pop	r3
    14aa:	08 95       	ret

000014ac <moveAway>:
* Input Variables:	none
* Output Return:	char
* Overview:			Use a comment block like this before functions
********************************************************************/
char moveAway ( void )
{	
    14ac:	2f 92       	push	r2
    14ae:	3f 92       	push	r3
    14b0:	4f 92       	push	r4
    14b2:	5f 92       	push	r5
    14b4:	6f 92       	push	r6
    14b6:	7f 92       	push	r7
    14b8:	8f 92       	push	r8
    14ba:	9f 92       	push	r9
    14bc:	af 92       	push	r10
    14be:	bf 92       	push	r11
    14c0:	cf 92       	push	r12
    14c2:	df 92       	push	r13
    14c4:	ef 92       	push	r14
    14c6:	ff 92       	push	r15
    14c8:	0f 93       	push	r16
    14ca:	1f 93       	push	r17
    14cc:	df 93       	push	r29
    14ce:	cf 93       	push	r28
    14d0:	00 d0       	rcall	.+0      	; 0x14d2 <moveAway+0x26>
    14d2:	00 d0       	rcall	.+0      	; 0x14d4 <moveAway+0x28>
    14d4:	cd b7       	in	r28, 0x3d	; 61
    14d6:	de b7       	in	r29, 0x3e	; 62
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
    14d8:	60 90 fe 01 	lds	r6, 0x01FE
    14dc:	70 90 ff 01 	lds	r7, 0x01FF
    14e0:	80 90 00 02 	lds	r8, 0x0200
    14e4:	90 90 01 02 	lds	r9, 0x0201
    14e8:	a0 90 02 02 	lds	r10, 0x0202
    14ec:	b0 90 03 02 	lds	r11, 0x0203
    14f0:	c0 90 04 02 	lds	r12, 0x0204
    14f4:	d0 90 05 02 	lds	r13, 0x0205
	float moveX = rtIR - ltIR;
    14f8:	e0 90 fa 01 	lds	r14, 0x01FA
    14fc:	f0 90 fb 01 	lds	r15, 0x01FB
    1500:	00 91 fc 01 	lds	r16, 0x01FC
    1504:	10 91 fd 01 	lds	r17, 0x01FD
    1508:	20 90 f6 01 	lds	r2, 0x01F6
    150c:	30 90 f7 01 	lds	r3, 0x01F7
    1510:	40 90 f8 01 	lds	r4, 0x01F8
    1514:	50 90 f9 01 	lds	r5, 0x01F9
    1518:	c8 01       	movw	r24, r16
    151a:	b7 01       	movw	r22, r14
    151c:	a2 01       	movw	r20, r4
    151e:	91 01       	movw	r18, r2
    1520:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
    1524:	69 83       	std	Y+1, r22	; 0x01
    1526:	7a 83       	std	Y+2, r23	; 0x02
    1528:	8b 83       	std	Y+3, r24	; 0x03
    152a:	9c 83       	std	Y+4, r25	; 0x04
	
	// if the object is in front of us are behind us
	// move appropriately in the Y direction
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
    152c:	c4 01       	movw	r24, r8
    152e:	b3 01       	movw	r22, r6
    1530:	20 e0       	ldi	r18, 0x00	; 0
    1532:	30 e0       	ldi	r19, 0x00	; 0
    1534:	40 ea       	ldi	r20, 0xA0	; 160
    1536:	50 e4       	ldi	r21, 0x40	; 64
    1538:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    153c:	87 fd       	sbrc	r24, 7
    153e:	0b c0       	rjmp	.+22     	; 0x1556 <moveAway+0xaa>
    1540:	c6 01       	movw	r24, r12
    1542:	b5 01       	movw	r22, r10
    1544:	20 e0       	ldi	r18, 0x00	; 0
    1546:	30 e0       	ldi	r19, 0x00	; 0
    1548:	40 ea       	ldi	r20, 0xA0	; 160
    154a:	50 e4       	ldi	r21, 0x40	; 64
    154c:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    1550:	88 23       	and	r24, r24
    1552:	0c f0       	brlt	.+2      	; 0x1556 <moveAway+0xaa>
    1554:	76 c0       	rjmp	.+236    	; 0x1642 <moveAway+0x196>
{	
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
    1556:	c4 01       	movw	r24, r8
    1558:	b3 01       	movw	r22, r6
    155a:	a6 01       	movw	r20, r12
    155c:	95 01       	movw	r18, r10
    155e:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
    1562:	7b 01       	movw	r14, r22
    1564:	8c 01       	movw	r16, r24
	
	// if the object is in front of us are behind us
	// move appropriately in the Y direction
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
	{
			BOOL moveForward = ~(moveY <= 0);
    1566:	dd 24       	eor	r13, r13
    1568:	20 e0       	ldi	r18, 0x00	; 0
    156a:	30 e0       	ldi	r19, 0x00	; 0
    156c:	40 e0       	ldi	r20, 0x00	; 0
    156e:	50 e0       	ldi	r21, 0x00	; 0
    1570:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    1574:	18 16       	cp	r1, r24
    1576:	14 f0       	brlt	.+4      	; 0x157c <moveAway+0xd0>
    1578:	dd 24       	eor	r13, r13
    157a:	d3 94       	inc	r13
    157c:	7d 2c       	mov	r7, r13
    157e:	70 94       	com	r7
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    1580:	c8 01       	movw	r24, r16
    1582:	b7 01       	movw	r22, r14
    1584:	0e 94 84 22 	call	0x4508	; 0x4508 <__fixsfsi>
    1588:	9b 01       	movw	r18, r22
    158a:	77 ff       	sbrs	r23, 7
    158c:	03 c0       	rjmp	.+6      	; 0x1594 <moveAway+0xe8>
    158e:	30 95       	com	r19
    1590:	21 95       	neg	r18
    1592:	3f 4f       	sbci	r19, 0xFF	; 255
    1594:	b9 01       	movw	r22, r18
    1596:	88 27       	eor	r24, r24
    1598:	77 fd       	sbrc	r23, 7
    159a:	80 95       	com	r24
    159c:	98 2f       	mov	r25, r24
    159e:	0e 94 b7 22 	call	0x456e	; 0x456e <__floatsisf>
    15a2:	6b 01       	movw	r12, r22
    15a4:	7c 01       	movw	r14, r24
    15a6:	8d b7       	in	r24, 0x3d	; 61
    15a8:	9e b7       	in	r25, 0x3e	; 62
    15aa:	09 97       	sbiw	r24, 0x09	; 9
    15ac:	0f b6       	in	r0, 0x3f	; 63
    15ae:	f8 94       	cli
    15b0:	9e bf       	out	0x3e, r25	; 62
    15b2:	0f be       	out	0x3f, r0	; 63
    15b4:	8d bf       	out	0x3d, r24	; 61
    15b6:	0d b7       	in	r16, 0x3d	; 61
    15b8:	1e b7       	in	r17, 0x3e	; 62
    15ba:	0f 5f       	subi	r16, 0xFF	; 255
    15bc:	1f 4f       	sbci	r17, 0xFF	; 255
    15be:	c7 01       	movw	r24, r14
    15c0:	b6 01       	movw	r22, r12
    15c2:	29 81       	ldd	r18, Y+1	; 0x01
    15c4:	3a 81       	ldd	r19, Y+2	; 0x02
    15c6:	4b 81       	ldd	r20, Y+3	; 0x03
    15c8:	5c 81       	ldd	r21, Y+4	; 0x04
    15ca:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
    15ce:	0e 94 89 22 	call	0x4512	; 0x4512 <__fixunssfsi>
    15d2:	4b 01       	movw	r8, r22
    15d4:	5c 01       	movw	r10, r24
    15d6:	82 e3       	ldi	r24, 0x32	; 50
    15d8:	90 e0       	ldi	r25, 0x00	; 0
    15da:	f8 01       	movw	r30, r16
    15dc:	91 83       	std	Z+1, r25	; 0x01
    15de:	80 83       	st	Z, r24
    15e0:	c7 01       	movw	r24, r14
    15e2:	b6 01       	movw	r22, r12
    15e4:	29 81       	ldd	r18, Y+1	; 0x01
    15e6:	3a 81       	ldd	r19, Y+2	; 0x02
    15e8:	4b 81       	ldd	r20, Y+3	; 0x03
    15ea:	5c 81       	ldd	r21, Y+4	; 0x04
    15ec:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
    15f0:	0e 94 89 22 	call	0x4512	; 0x4512 <__fixunssfsi>
    15f4:	f8 01       	movw	r30, r16
    15f6:	73 83       	std	Z+3, r23	; 0x03
    15f8:	62 83       	std	Z+2, r22	; 0x02
    15fa:	82 ec       	ldi	r24, 0xC2	; 194
    15fc:	91 e0       	ldi	r25, 0x01	; 1
    15fe:	95 83       	std	Z+5, r25	; 0x05
    1600:	84 83       	std	Z+4, r24	; 0x04
    1602:	16 82       	std	Z+6, r1	; 0x06
    1604:	10 86       	std	Z+8, r1	; 0x08
    1606:	17 82       	std	Z+7, r1	; 0x07
    1608:	81 e0       	ldi	r24, 0x01	; 1
    160a:	62 e0       	ldi	r22, 0x02	; 2
    160c:	47 2d       	mov	r20, r7
    160e:	22 e3       	ldi	r18, 0x32	; 50
    1610:	30 e0       	ldi	r19, 0x00	; 0
    1612:	84 01       	movw	r16, r8
    1614:	72 ec       	ldi	r23, 0xC2	; 194
    1616:	e7 2e       	mov	r14, r23
    1618:	71 e0       	ldi	r23, 0x01	; 1
    161a:	f7 2e       	mov	r15, r23
    161c:	cc 24       	eor	r12, r12
    161e:	aa 24       	eor	r10, r10
    1620:	bb 24       	eor	r11, r11
    1622:	87 2c       	mov	r8, r7
    1624:	0e 94 dd 11 	call	0x23ba	; 0x23ba <STEPPER_move>
			moveForward, 50, abs(moveY)+moveX, 450, STEPPER_BRK_OFF, // Left
			moveForward, 50, abs(moveY)-moveX, 450, STEPPER_BRK_OFF ); // Right
			
			// debug LCP print statement
			LCD_clear();
    1628:	8d b7       	in	r24, 0x3d	; 61
    162a:	9e b7       	in	r25, 0x3e	; 62
    162c:	09 96       	adiw	r24, 0x09	; 9
    162e:	0f b6       	in	r0, 0x3f	; 63
    1630:	f8 94       	cli
    1632:	9e bf       	out	0x3e, r25	; 62
    1634:	0f be       	out	0x3f, r0	; 63
    1636:	8d bf       	out	0x3d, r24	; 61
    1638:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <LCD_clear>
			LCD_printf("moveAwayF\n\n\n\n");
    163c:	84 e2       	ldi	r24, 0x24	; 36
    163e:	91 e0       	ldi	r25, 0x01	; 1
    1640:	78 c0       	rjmp	.+240    	; 0x1732 <moveAway+0x286>
			shyRobot = 1;
	}
	
	// if the object is on either side of the robot
	// rotate the robot appropriately
	else if ((rtIR < IR_OBST_R_THRESH)|(ltIR < IR_OBST_L_THRESH))
    1642:	c8 01       	movw	r24, r16
    1644:	b7 01       	movw	r22, r14
    1646:	20 e0       	ldi	r18, 0x00	; 0
    1648:	30 e0       	ldi	r19, 0x00	; 0
    164a:	40 ea       	ldi	r20, 0xA0	; 160
    164c:	50 e4       	ldi	r21, 0x40	; 64
    164e:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    1652:	87 fd       	sbrc	r24, 7
    1654:	0c c0       	rjmp	.+24     	; 0x166e <moveAway+0x1c2>
    1656:	c2 01       	movw	r24, r4
    1658:	b1 01       	movw	r22, r2
    165a:	20 e0       	ldi	r18, 0x00	; 0
    165c:	30 e0       	ldi	r19, 0x00	; 0
    165e:	40 ea       	ldi	r20, 0xA0	; 160
    1660:	50 e4       	ldi	r21, 0x40	; 64
    1662:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    1666:	87 fd       	sbrc	r24, 7
    1668:	02 c0       	rjmp	.+4      	; 0x166e <moveAway+0x1c2>
    166a:	80 e0       	ldi	r24, 0x00	; 0
    166c:	65 c0       	rjmp	.+202    	; 0x1738 <moveAway+0x28c>
	{
			BOOL moveForwardR = ~(moveX <= 0);
			BOOL moveForwardL = ~(moveX > 0);
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    166e:	69 81       	ldd	r22, Y+1	; 0x01
    1670:	7a 81       	ldd	r23, Y+2	; 0x02
    1672:	8b 81       	ldd	r24, Y+3	; 0x03
    1674:	9c 81       	ldd	r25, Y+4	; 0x04
    1676:	0e 94 84 22 	call	0x4508	; 0x4508 <__fixsfsi>
    167a:	8b 01       	movw	r16, r22
    167c:	77 ff       	sbrs	r23, 7
    167e:	03 c0       	rjmp	.+6      	; 0x1686 <moveAway+0x1da>
    1680:	10 95       	com	r17
    1682:	01 95       	neg	r16
    1684:	1f 4f       	sbci	r17, 0xFF	; 255
    1686:	ed b7       	in	r30, 0x3d	; 61
    1688:	fe b7       	in	r31, 0x3e	; 62
    168a:	39 97       	sbiw	r30, 0x09	; 9
    168c:	0f b6       	in	r0, 0x3f	; 63
    168e:	f8 94       	cli
    1690:	fe bf       	out	0x3e, r31	; 62
    1692:	0f be       	out	0x3f, r0	; 63
    1694:	ed bf       	out	0x3d, r30	; 61
    1696:	ad b6       	in	r10, 0x3d	; 61
    1698:	be b6       	in	r11, 0x3e	; 62
    169a:	08 94       	sec
    169c:	a1 1c       	adc	r10, r1
    169e:	b1 1c       	adc	r11, r1
    16a0:	ff 24       	eor	r15, r15
    16a2:	69 81       	ldd	r22, Y+1	; 0x01
    16a4:	7a 81       	ldd	r23, Y+2	; 0x02
    16a6:	8b 81       	ldd	r24, Y+3	; 0x03
    16a8:	9c 81       	ldd	r25, Y+4	; 0x04
    16aa:	20 e0       	ldi	r18, 0x00	; 0
    16ac:	30 e0       	ldi	r19, 0x00	; 0
    16ae:	40 e0       	ldi	r20, 0x00	; 0
    16b0:	50 e0       	ldi	r21, 0x00	; 0
    16b2:	0e 94 67 23 	call	0x46ce	; 0x46ce <__gesf2>
    16b6:	18 16       	cp	r1, r24
    16b8:	14 f4       	brge	.+4      	; 0x16be <moveAway+0x212>
    16ba:	ff 24       	eor	r15, r15
    16bc:	f3 94       	inc	r15
    16be:	f0 94       	com	r15
    16c0:	dd 24       	eor	r13, r13
    16c2:	69 81       	ldd	r22, Y+1	; 0x01
    16c4:	7a 81       	ldd	r23, Y+2	; 0x02
    16c6:	8b 81       	ldd	r24, Y+3	; 0x03
    16c8:	9c 81       	ldd	r25, Y+4	; 0x04
    16ca:	20 e0       	ldi	r18, 0x00	; 0
    16cc:	30 e0       	ldi	r19, 0x00	; 0
    16ce:	40 e0       	ldi	r20, 0x00	; 0
    16d0:	50 e0       	ldi	r21, 0x00	; 0
    16d2:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    16d6:	18 16       	cp	r1, r24
    16d8:	14 f0       	brlt	.+4      	; 0x16de <moveAway+0x232>
    16da:	dd 24       	eor	r13, r13
    16dc:	d3 94       	inc	r13
    16de:	d0 94       	com	r13
    16e0:	88 ec       	ldi	r24, 0xC8	; 200
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	f5 01       	movw	r30, r10
    16e6:	91 83       	std	Z+1, r25	; 0x01
    16e8:	80 83       	st	Z, r24
    16ea:	13 83       	std	Z+3, r17	; 0x03
    16ec:	02 83       	std	Z+2, r16	; 0x02
    16ee:	82 ec       	ldi	r24, 0xC2	; 194
    16f0:	91 e0       	ldi	r25, 0x01	; 1
    16f2:	95 83       	std	Z+5, r25	; 0x05
    16f4:	84 83       	std	Z+4, r24	; 0x04
    16f6:	16 82       	std	Z+6, r1	; 0x06
    16f8:	10 86       	std	Z+8, r1	; 0x08
    16fa:	17 82       	std	Z+7, r1	; 0x07
    16fc:	81 e0       	ldi	r24, 0x01	; 1
    16fe:	62 e0       	ldi	r22, 0x02	; 2
    1700:	4f 2d       	mov	r20, r15
    1702:	28 ec       	ldi	r18, 0xC8	; 200
    1704:	30 e0       	ldi	r19, 0x00	; 0
    1706:	52 ec       	ldi	r21, 0xC2	; 194
    1708:	e5 2e       	mov	r14, r21
    170a:	51 e0       	ldi	r21, 0x01	; 1
    170c:	f5 2e       	mov	r15, r21
    170e:	cc 24       	eor	r12, r12
    1710:	aa 24       	eor	r10, r10
    1712:	bb 24       	eor	r11, r11
    1714:	8d 2c       	mov	r8, r13
    1716:	0e 94 dd 11 	call	0x23ba	; 0x23ba <STEPPER_move>
			moveForwardL, 200, abs(moveX), 450, STEPPER_BRK_OFF, // Left
			moveForwardR, 200, abs(moveX), 450, STEPPER_BRK_OFF ); // Right
			
			// debug LCP print statement
			LCD_clear();
    171a:	8d b7       	in	r24, 0x3d	; 61
    171c:	9e b7       	in	r25, 0x3e	; 62
    171e:	09 96       	adiw	r24, 0x09	; 9
    1720:	0f b6       	in	r0, 0x3f	; 63
    1722:	f8 94       	cli
    1724:	9e bf       	out	0x3e, r25	; 62
    1726:	0f be       	out	0x3f, r0	; 63
    1728:	8d bf       	out	0x3d, r24	; 61
    172a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <LCD_clear>
			LCD_printf("moveAwayS\n\n\n\n");
    172e:	81 e3       	ldi	r24, 0x31	; 49
    1730:	91 e0       	ldi	r25, 0x01	; 1
    1732:	0e 94 fe 2b 	call	0x57fc	; 0x57fc <puts>
    1736:	81 e0       	ldi	r24, 0x01	; 1
			// state that fact
			shyRobot = 1;
	}
	
	return shyRobot;
}
    1738:	0f 90       	pop	r0
    173a:	0f 90       	pop	r0
    173c:	0f 90       	pop	r0
    173e:	0f 90       	pop	r0
    1740:	cf 91       	pop	r28
    1742:	df 91       	pop	r29
    1744:	1f 91       	pop	r17
    1746:	0f 91       	pop	r16
    1748:	ff 90       	pop	r15
    174a:	ef 90       	pop	r14
    174c:	df 90       	pop	r13
    174e:	cf 90       	pop	r12
    1750:	bf 90       	pop	r11
    1752:	af 90       	pop	r10
    1754:	9f 90       	pop	r9
    1756:	8f 90       	pop	r8
    1758:	7f 90       	pop	r7
    175a:	6f 90       	pop	r6
    175c:	5f 90       	pop	r5
    175e:	4f 90       	pop	r4
    1760:	3f 90       	pop	r3
    1762:	2f 90       	pop	r2
    1764:	08 95       	ret

00001766 <moveWander>:
* Output Return:	none
* Overview:			This function checks for walls and moves the 
*					robot randomly if walls are not detected
********************************************************************/
char moveWander ( void )
{	
    1766:	8f 92       	push	r8
    1768:	af 92       	push	r10
    176a:	bf 92       	push	r11
    176c:	cf 92       	push	r12
    176e:	df 92       	push	r13
    1770:	ef 92       	push	r14
    1772:	ff 92       	push	r15
    1774:	0f 93       	push	r16
    1776:	1f 93       	push	r17
    1778:	cf 93       	push	r28
    177a:	df 93       	push	r29
	// notify that we have
	char isWander = 1;
	
	// if we are wondering
	// first check the current progress of our wondering
	STEPPER_STEPS curr_steps = STEPPER_get_nSteps();
    177c:	0e 94 15 11 	call	0x222a	; 0x222a <STEPPER_get_nSteps>
	
	
	// IF my motion is complete do another random motion
	if ((curr_steps.left == 0)&(curr_steps.right == 0))
    1780:	67 2b       	or	r22, r23
    1782:	09 f0       	breq	.+2      	; 0x1786 <moveWander+0x20>
    1784:	76 c0       	rjmp	.+236    	; 0x1872 <moveWander+0x10c>
    1786:	89 2b       	or	r24, r25
    1788:	09 f0       	breq	.+2      	; 0x178c <moveWander+0x26>
    178a:	73 c0       	rjmp	.+230    	; 0x1872 <moveWander+0x10c>
	{
		// create random values for wheel position and wheel speed
		int moveRand = rand()%400+400;
    178c:	0e 94 c3 2a 	call	0x5586	; 0x5586 <rand>
    1790:	8c 01       	movw	r16, r24
		float turnRandR = rand()%200+200;
    1792:	0e 94 c3 2a 	call	0x5586	; 0x5586 <rand>
    1796:	ec 01       	movw	r28, r24
		float turnRandL = rand()%200+200;
    1798:	0e 94 c3 2a 	call	0x5586	; 0x5586 <rand>
    179c:	7c 01       	movw	r14, r24
		
		// Weight the chance that we will go forward slightly more
		// so that the robot may possibly traverse farther
		BOOL direction = ~((rand()%10)>7);
    179e:	0e 94 c3 2a 	call	0x5586	; 0x5586 <rand>
    17a2:	20 e0       	ldi	r18, 0x00	; 0
    17a4:	6a e0       	ldi	r22, 0x0A	; 10
    17a6:	70 e0       	ldi	r23, 0x00	; 0
    17a8:	0e 94 f4 28 	call	0x51e8	; 0x51e8 <__divmodhi4>
    17ac:	08 97       	sbiw	r24, 0x08	; 8
    17ae:	0c f0       	brlt	.+2      	; 0x17b2 <moveWander+0x4c>
    17b0:	21 e0       	ldi	r18, 0x01	; 1
    17b2:	82 2e       	mov	r8, r18
    17b4:	80 94       	com	r8
				
		// Move.
		STEPPER_move_stnb( STEPPER_BOTH, 
    17b6:	c8 01       	movw	r24, r16
    17b8:	60 e9       	ldi	r22, 0x90	; 144
    17ba:	71 e0       	ldi	r23, 0x01	; 1
    17bc:	0e 94 f4 28 	call	0x51e8	; 0x51e8 <__divmodhi4>
    17c0:	f0 e9       	ldi	r31, 0x90	; 144
    17c2:	af 2e       	mov	r10, r31
    17c4:	f1 e0       	ldi	r31, 0x01	; 1
    17c6:	bf 2e       	mov	r11, r31
    17c8:	a8 0e       	add	r10, r24
    17ca:	b9 1e       	adc	r11, r25
    17cc:	8d b7       	in	r24, 0x3d	; 61
    17ce:	9e b7       	in	r25, 0x3e	; 62
    17d0:	09 97       	sbiw	r24, 0x09	; 9
    17d2:	0f b6       	in	r0, 0x3f	; 63
    17d4:	f8 94       	cli
    17d6:	9e bf       	out	0x3e, r25	; 62
    17d8:	0f be       	out	0x3f, r0	; 63
    17da:	8d bf       	out	0x3d, r24	; 61
    17dc:	0d b7       	in	r16, 0x3d	; 61
    17de:	1e b7       	in	r17, 0x3e	; 62
    17e0:	0f 5f       	subi	r16, 0xFF	; 255
    17e2:	1f 4f       	sbci	r17, 0xFF	; 255
    17e4:	c7 01       	movw	r24, r14
    17e6:	68 ec       	ldi	r22, 0xC8	; 200
    17e8:	70 e0       	ldi	r23, 0x00	; 0
    17ea:	0e 94 f4 28 	call	0x51e8	; 0x51e8 <__divmodhi4>
    17ee:	88 53       	subi	r24, 0x38	; 56
    17f0:	9f 4f       	sbci	r25, 0xFF	; 255
    17f2:	aa 27       	eor	r26, r26
    17f4:	97 fd       	sbrc	r25, 7
    17f6:	a0 95       	com	r26
    17f8:	ba 2f       	mov	r27, r26
    17fa:	bc 01       	movw	r22, r24
    17fc:	cd 01       	movw	r24, r26
    17fe:	0e 94 b7 22 	call	0x456e	; 0x456e <__floatsisf>
    1802:	0e 94 89 22 	call	0x4512	; 0x4512 <__fixunssfsi>
    1806:	6b 01       	movw	r12, r22
    1808:	7c 01       	movw	r14, r24
    180a:	f8 01       	movw	r30, r16
    180c:	b1 82       	std	Z+1, r11	; 0x01
    180e:	a0 82       	st	Z, r10
    1810:	ce 01       	movw	r24, r28
    1812:	68 ec       	ldi	r22, 0xC8	; 200
    1814:	70 e0       	ldi	r23, 0x00	; 0
    1816:	0e 94 f4 28 	call	0x51e8	; 0x51e8 <__divmodhi4>
    181a:	88 53       	subi	r24, 0x38	; 56
    181c:	9f 4f       	sbci	r25, 0xFF	; 255
    181e:	aa 27       	eor	r26, r26
    1820:	97 fd       	sbrc	r25, 7
    1822:	a0 95       	com	r26
    1824:	ba 2f       	mov	r27, r26
    1826:	bc 01       	movw	r22, r24
    1828:	cd 01       	movw	r24, r26
    182a:	0e 94 b7 22 	call	0x456e	; 0x456e <__floatsisf>
    182e:	0e 94 89 22 	call	0x4512	; 0x4512 <__fixunssfsi>
    1832:	f8 01       	movw	r30, r16
    1834:	73 83       	std	Z+3, r23	; 0x03
    1836:	62 83       	std	Z+2, r22	; 0x02
    1838:	82 ec       	ldi	r24, 0xC2	; 194
    183a:	91 e0       	ldi	r25, 0x01	; 1
    183c:	95 83       	std	Z+5, r25	; 0x05
    183e:	84 83       	std	Z+4, r24	; 0x04
    1840:	16 82       	std	Z+6, r1	; 0x06
    1842:	10 86       	std	Z+8, r1	; 0x08
    1844:	17 82       	std	Z+7, r1	; 0x07
    1846:	81 e0       	ldi	r24, 0x01	; 1
    1848:	62 e0       	ldi	r22, 0x02	; 2
    184a:	48 2d       	mov	r20, r8
    184c:	95 01       	movw	r18, r10
    184e:	86 01       	movw	r16, r12
    1850:	e2 ec       	ldi	r30, 0xC2	; 194
    1852:	ee 2e       	mov	r14, r30
    1854:	e1 e0       	ldi	r30, 0x01	; 1
    1856:	fe 2e       	mov	r15, r30
    1858:	cc 24       	eor	r12, r12
    185a:	aa 24       	eor	r10, r10
    185c:	bb 24       	eor	r11, r11
    185e:	0e 94 dd 11 	call	0x23ba	; 0x23ba <STEPPER_move>
    1862:	8d b7       	in	r24, 0x3d	; 61
    1864:	9e b7       	in	r25, 0x3e	; 62
    1866:	09 96       	adiw	r24, 0x09	; 9
    1868:	0f b6       	in	r0, 0x3f	; 63
    186a:	f8 94       	cli
    186c:	9e bf       	out	0x3e, r25	; 62
    186e:	0f be       	out	0x3f, r0	; 63
    1870:	8d bf       	out	0x3d, r24	; 61
		// debug LCP print statement
		// LCD_clear();
		// LCD_printf("moveWander\nmoveRand: %3d\nturnRandR: %3d\nturnRandL: %3d\n",moveRand,turnRandR,turnRandL);
		}
	return isWander;
}
    1872:	81 e0       	ldi	r24, 0x01	; 1
    1874:	df 91       	pop	r29
    1876:	cf 91       	pop	r28
    1878:	1f 91       	pop	r17
    187a:	0f 91       	pop	r16
    187c:	ff 90       	pop	r15
    187e:	ef 90       	pop	r14
    1880:	df 90       	pop	r13
    1882:	cf 90       	pop	r12
    1884:	bf 90       	pop	r11
    1886:	af 90       	pop	r10
    1888:	8f 90       	pop	r8
    188a:	08 95       	ret

0000188c <moveWall>:
* Overview:			This function searches for walls and adjust the 
*					robots differential steering to attempts to
*					follow them
********************************************************************/
char moveWall( void )
{	
    188c:	2f 92       	push	r2
    188e:	3f 92       	push	r3
    1890:	4f 92       	push	r4
    1892:	5f 92       	push	r5
    1894:	6f 92       	push	r6
    1896:	7f 92       	push	r7
    1898:	8f 92       	push	r8
    189a:	9f 92       	push	r9
    189c:	af 92       	push	r10
    189e:	bf 92       	push	r11
    18a0:	cf 92       	push	r12
    18a2:	df 92       	push	r13
    18a4:	ef 92       	push	r14
    18a6:	ff 92       	push	r15
    18a8:	0f 93       	push	r16
    18aa:	1f 93       	push	r17
    18ac:	df 93       	push	r29
    18ae:	cf 93       	push	r28
    18b0:	00 d0       	rcall	.+0      	; 0x18b2 <moveWall+0x26>
    18b2:	00 d0       	rcall	.+0      	; 0x18b4 <moveWall+0x28>
    18b4:	0f 92       	push	r0
    18b6:	cd b7       	in	r28, 0x3d	; 61
    18b8:	de b7       	in	r29, 0x3e	; 62
	// Check for walls
	BOOL isWall = (ftIR < IR_WALL_F_THRESH)|(bkIR < IR_WALL_B_THRESH)|(rtIR < IR_WALL_R_THRESH)|(ltIR < IR_WALL_L_THRESH);
    18ba:	e0 90 02 02 	lds	r14, 0x0202
    18be:	f0 90 03 02 	lds	r15, 0x0203
    18c2:	00 91 04 02 	lds	r16, 0x0204
    18c6:	10 91 05 02 	lds	r17, 0x0205
    18ca:	88 24       	eor	r8, r8
    18cc:	c8 01       	movw	r24, r16
    18ce:	b7 01       	movw	r22, r14
    18d0:	20 e0       	ldi	r18, 0x00	; 0
    18d2:	30 e0       	ldi	r19, 0x00	; 0
    18d4:	40 ea       	ldi	r20, 0xA0	; 160
    18d6:	51 e4       	ldi	r21, 0x41	; 65
    18d8:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    18dc:	88 23       	and	r24, r24
    18de:	14 f4       	brge	.+4      	; 0x18e4 <moveWall+0x58>
    18e0:	88 24       	eor	r8, r8
    18e2:	83 94       	inc	r8
    18e4:	a0 90 fa 01 	lds	r10, 0x01FA
    18e8:	b0 90 fb 01 	lds	r11, 0x01FB
    18ec:	c0 90 fc 01 	lds	r12, 0x01FC
    18f0:	d0 90 fd 01 	lds	r13, 0x01FD
    18f4:	40 90 f6 01 	lds	r4, 0x01F6
    18f8:	50 90 f7 01 	lds	r5, 0x01F7
    18fc:	60 90 f8 01 	lds	r6, 0x01F8
    1900:	70 90 f9 01 	lds	r7, 0x01F9
	if(!isWall){	
    1904:	60 91 fe 01 	lds	r22, 0x01FE
    1908:	70 91 ff 01 	lds	r23, 0x01FF
    190c:	80 91 00 02 	lds	r24, 0x0200
    1910:	90 91 01 02 	lds	r25, 0x0201
    1914:	20 e0       	ldi	r18, 0x00	; 0
    1916:	30 e0       	ldi	r19, 0x00	; 0
    1918:	40 ea       	ldi	r20, 0xA0	; 160
    191a:	51 e4       	ldi	r21, 0x41	; 65
    191c:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    1920:	87 fd       	sbrc	r24, 7
    1922:	18 c0       	rjmp	.+48     	; 0x1954 <moveWall+0xc8>
    1924:	88 20       	and	r8, r8
    1926:	b1 f4       	brne	.+44     	; 0x1954 <moveWall+0xc8>
    1928:	c6 01       	movw	r24, r12
    192a:	b5 01       	movw	r22, r10
    192c:	20 e0       	ldi	r18, 0x00	; 0
    192e:	30 e0       	ldi	r19, 0x00	; 0
    1930:	40 ea       	ldi	r20, 0xA0	; 160
    1932:	51 e4       	ldi	r21, 0x41	; 65
    1934:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    1938:	87 fd       	sbrc	r24, 7
    193a:	0c c0       	rjmp	.+24     	; 0x1954 <moveWall+0xc8>
    193c:	c3 01       	movw	r24, r6
    193e:	b2 01       	movw	r22, r4
    1940:	20 e0       	ldi	r18, 0x00	; 0
    1942:	30 e0       	ldi	r19, 0x00	; 0
    1944:	40 ea       	ldi	r20, 0xA0	; 160
    1946:	51 e4       	ldi	r21, 0x41	; 65
    1948:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    194c:	87 fd       	sbrc	r24, 7
    194e:	02 c0       	rjmp	.+4      	; 0x1954 <moveWall+0xc8>
	
	// debug LCP print statement
	LCD_clear();
	LCD_printf("bkIR: %3.2f\nmoveWall\nError: %3f\nEffort: %3f\n", bkIR, error, effort);
	
}
    1950:	80 e0       	ldi	r24, 0x00	; 0
    1952:	40 c1       	rjmp	.+640    	; 0x1bd4 <moveWall+0x348>
	// A variable that contains the logic of which wall is imaginary
	BOOL isLEFT;
	
	// If there is no wall on our right side
	// place an imaginary wall just within the threshold
	if(rtIR>IR_WALL_R_THRESH){
    1954:	c6 01       	movw	r24, r12
    1956:	b5 01       	movw	r22, r10
    1958:	20 e0       	ldi	r18, 0x00	; 0
    195a:	30 e0       	ldi	r19, 0x00	; 0
    195c:	40 ea       	ldi	r20, 0xA0	; 160
    195e:	51 e4       	ldi	r21, 0x41	; 65
    1960:	0e 94 67 23 	call	0x46ce	; 0x46ce <__gesf2>
    1964:	18 16       	cp	r1, r24
    1966:	64 f4       	brge	.+24     	; 0x1980 <moveWall+0xf4>
		rtIR = IR_WALL_R_THRESH-15;
    1968:	80 e0       	ldi	r24, 0x00	; 0
    196a:	90 e0       	ldi	r25, 0x00	; 0
    196c:	a0 ea       	ldi	r26, 0xA0	; 160
    196e:	b0 e4       	ldi	r27, 0x40	; 64
    1970:	80 93 fa 01 	sts	0x01FA, r24
    1974:	90 93 fb 01 	sts	0x01FB, r25
    1978:	a0 93 fc 01 	sts	0x01FC, r26
    197c:	b0 93 fd 01 	sts	0x01FD, r27
		isLEFT = 0;
	}
	// If there is no wall on our left side
	// place an imaginary wall just within the threshold
	if(ltIR>IR_WALL_L_THRESH){
    1980:	c3 01       	movw	r24, r6
    1982:	b2 01       	movw	r22, r4
    1984:	20 e0       	ldi	r18, 0x00	; 0
    1986:	30 e0       	ldi	r19, 0x00	; 0
    1988:	40 ea       	ldi	r20, 0xA0	; 160
    198a:	51 e4       	ldi	r21, 0x41	; 65
    198c:	0e 94 67 23 	call	0x46ce	; 0x46ce <__gesf2>
    1990:	18 16       	cp	r1, r24
    1992:	14 f0       	brlt	.+4      	; 0x1998 <moveWall+0x10c>
    1994:	80 e0       	ldi	r24, 0x00	; 0
    1996:	0d c0       	rjmp	.+26     	; 0x19b2 <moveWall+0x126>
		ltIR = IR_WALL_L_THRESH-15;
    1998:	80 e0       	ldi	r24, 0x00	; 0
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	a0 ea       	ldi	r26, 0xA0	; 160
    199e:	b0 e4       	ldi	r27, 0x40	; 64
    19a0:	80 93 f6 01 	sts	0x01F6, r24
    19a4:	90 93 f7 01 	sts	0x01F7, r25
    19a8:	a0 93 f8 01 	sts	0x01F8, r26
    19ac:	b0 93 f9 01 	sts	0x01F9, r27
    19b0:	81 e0       	ldi	r24, 0x01	; 1
	}
	
	float error;
	
	// Check to see if the wall exists in front of the robot
	if(bkIR < IR_WALL_B_THRESH)
    19b2:	88 20       	and	r8, r8
    19b4:	81 f1       	breq	.+96     	; 0x1a16 <moveWall+0x18a>
	{
		// if the imaginary wall was on the left side
		// then biased the error so that when the robot encounters
		// an upcoming corner, the robot will turn away from both walls
		if (isLEFT)
    19b6:	88 23       	and	r24, r24
    19b8:	89 f0       	breq	.+34     	; 0x19dc <moveWall+0x150>
		{
			error = rtIR - (ltIR + bkIR*bkIR);
    19ba:	c8 01       	movw	r24, r16
    19bc:	b7 01       	movw	r22, r14
    19be:	a8 01       	movw	r20, r16
    19c0:	97 01       	movw	r18, r14
    19c2:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    19c6:	20 91 f6 01 	lds	r18, 0x01F6
    19ca:	30 91 f7 01 	lds	r19, 0x01F7
    19ce:	40 91 f8 01 	lds	r20, 0x01F8
    19d2:	50 91 f9 01 	lds	r21, 0x01F9
    19d6:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
    19da:	12 c0       	rjmp	.+36     	; 0x1a00 <moveWall+0x174>
		}
		// biased the error appropriately for the inverse situation
		else 
		{
			error = rtIR - (ltIR - bkIR*bkIR);
    19dc:	c8 01       	movw	r24, r16
    19de:	b7 01       	movw	r22, r14
    19e0:	a8 01       	movw	r20, r16
    19e2:	97 01       	movw	r18, r14
    19e4:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    19e8:	9b 01       	movw	r18, r22
    19ea:	ac 01       	movw	r20, r24
    19ec:	60 91 f6 01 	lds	r22, 0x01F6
    19f0:	70 91 f7 01 	lds	r23, 0x01F7
    19f4:	80 91 f8 01 	lds	r24, 0x01F8
    19f8:	90 91 f9 01 	lds	r25, 0x01F9
    19fc:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
    1a00:	9b 01       	movw	r18, r22
    1a02:	ac 01       	movw	r20, r24
    1a04:	60 91 fa 01 	lds	r22, 0x01FA
    1a08:	70 91 fb 01 	lds	r23, 0x01FB
    1a0c:	80 91 fc 01 	lds	r24, 0x01FC
    1a10:	90 91 fd 01 	lds	r25, 0x01FD
    1a14:	10 c0       	rjmp	.+32     	; 0x1a36 <moveWall+0x1aa>
	// the air is simply the right distance minus the left left distance
	// this ensures symmetry that the robot will follow in between the two walls
	// either one real and one imaginary, or both real
	else 
	{
		error = rtIR - ltIR;
    1a16:	60 91 fa 01 	lds	r22, 0x01FA
    1a1a:	70 91 fb 01 	lds	r23, 0x01FB
    1a1e:	80 91 fc 01 	lds	r24, 0x01FC
    1a22:	90 91 fd 01 	lds	r25, 0x01FD
    1a26:	20 91 f6 01 	lds	r18, 0x01F6
    1a2a:	30 91 f7 01 	lds	r19, 0x01F7
    1a2e:	40 91 f8 01 	lds	r20, 0x01F8
    1a32:	50 91 f9 01 	lds	r21, 0x01F9
    1a36:	0e 94 b3 21 	call	0x4366	; 0x4366 <__subsf3>
    1a3a:	6d 83       	std	Y+5, r22	; 0x05
    1a3c:	97 2e       	mov	r9, r23
    1a3e:	1c 01       	movw	r2, r24
	}

	// Use the PID controller function to calculate error
	float effort = pidController(error, 0);
    1a40:	2d 81       	ldd	r18, Y+5	; 0x05
    1a42:	37 2f       	mov	r19, r23
    1a44:	b9 01       	movw	r22, r18
    1a46:	40 e0       	ldi	r20, 0x00	; 0
    1a48:	0e 94 8a 07 	call	0xf14	; 0xf14 <pidController>
    1a4c:	2b 01       	movw	r4, r22
    1a4e:	3c 01       	movw	r6, r24
	
	// Limit the control effort to the max allowable effort
	if((abs(effort) > MAX_EFFORT)&(effort!=0)){
    1a50:	0e 94 84 22 	call	0x4508	; 0x4508 <__fixsfsi>
    1a54:	8b 01       	movw	r16, r22
    1a56:	77 ff       	sbrs	r23, 7
    1a58:	03 c0       	rjmp	.+6      	; 0x1a60 <moveWall+0x1d4>
    1a5a:	10 95       	com	r17
    1a5c:	01 95       	neg	r16
    1a5e:	1f 4f       	sbci	r17, 0xFF	; 255
    1a60:	05 36       	cpi	r16, 0x65	; 101
    1a62:	11 05       	cpc	r17, r1
    1a64:	fc f0       	brlt	.+62     	; 0x1aa4 <moveWall+0x218>
    1a66:	c3 01       	movw	r24, r6
    1a68:	b2 01       	movw	r22, r4
    1a6a:	20 e0       	ldi	r18, 0x00	; 0
    1a6c:	30 e0       	ldi	r19, 0x00	; 0
    1a6e:	40 e0       	ldi	r20, 0x00	; 0
    1a70:	50 e0       	ldi	r21, 0x00	; 0
    1a72:	0e 94 18 22 	call	0x4430	; 0x4430 <__cmpsf2>
    1a76:	88 23       	and	r24, r24
    1a78:	a9 f0       	breq	.+42     	; 0x1aa4 <moveWall+0x218>
		effort = MAX_EFFORT*(effort/abs(effort));
    1a7a:	b8 01       	movw	r22, r16
    1a7c:	88 27       	eor	r24, r24
    1a7e:	77 fd       	sbrc	r23, 7
    1a80:	80 95       	com	r24
    1a82:	98 2f       	mov	r25, r24
    1a84:	0e 94 b7 22 	call	0x456e	; 0x456e <__floatsisf>
    1a88:	9b 01       	movw	r18, r22
    1a8a:	ac 01       	movw	r20, r24
    1a8c:	c3 01       	movw	r24, r6
    1a8e:	b2 01       	movw	r22, r4
    1a90:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
    1a94:	20 e0       	ldi	r18, 0x00	; 0
    1a96:	30 e0       	ldi	r19, 0x00	; 0
    1a98:	48 ec       	ldi	r20, 0xC8	; 200
    1a9a:	52 e4       	ldi	r21, 0x42	; 66
    1a9c:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    1aa0:	2b 01       	movw	r4, r22
    1aa2:	3c 01       	movw	r6, r24
	}
	
	// Calculate the stepper speeds for each wheel using a ratio
	float stepper_speed_L = MAX_SPEED/2 + (MAX_SPEED/2)*(effort/MAX_EFFORT);
    1aa4:	c3 01       	movw	r24, r6
    1aa6:	b2 01       	movw	r22, r4
    1aa8:	20 e0       	ldi	r18, 0x00	; 0
    1aaa:	30 e0       	ldi	r19, 0x00	; 0
    1aac:	48 ec       	ldi	r20, 0xC8	; 200
    1aae:	52 e4       	ldi	r21, 0x42	; 66
    1ab0:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
    1ab4:	6b 01       	movw	r12, r22
    1ab6:	7c 01       	movw	r14, r24
	float stepper_speed_R = MAX_SPEED/2 - (MAX_SPEED/2)*(effort/MAX_EFFORT);
	
	// Move with wall
	STEPPER_move_stnb( STEPPER_BOTH, 
    1ab8:	8d b7       	in	r24, 0x3d	; 61
    1aba:	9e b7       	in	r25, 0x3e	; 62
    1abc:	09 97       	sbiw	r24, 0x09	; 9
    1abe:	0f b6       	in	r0, 0x3f	; 63
    1ac0:	f8 94       	cli
    1ac2:	9e bf       	out	0x3e, r25	; 62
    1ac4:	0f be       	out	0x3f, r0	; 63
    1ac6:	8d bf       	out	0x3d, r24	; 61
    1ac8:	0d b7       	in	r16, 0x3d	; 61
    1aca:	1e b7       	in	r17, 0x3e	; 62
    1acc:	0f 5f       	subi	r16, 0xFF	; 255
    1ace:	1f 4f       	sbci	r17, 0xFF	; 255
    1ad0:	c7 01       	movw	r24, r14
    1ad2:	b6 01       	movw	r22, r12
    1ad4:	20 e0       	ldi	r18, 0x00	; 0
    1ad6:	30 e0       	ldi	r19, 0x00	; 0
    1ad8:	48 ec       	ldi	r20, 0xC8	; 200
    1ada:	52 e4       	ldi	r21, 0x42	; 66
    1adc:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    1ae0:	20 e0       	ldi	r18, 0x00	; 0
    1ae2:	30 e0       	ldi	r19, 0x00	; 0
    1ae4:	48 ec       	ldi	r20, 0xC8	; 200
    1ae6:	52 e4       	ldi	r21, 0x42	; 66
    1ae8:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
    1aec:	0e 94 89 22 	call	0x4512	; 0x4512 <__fixunssfsi>
    1af0:	69 83       	std	Y+1, r22	; 0x01
    1af2:	7a 83       	std	Y+2, r23	; 0x02
    1af4:	8b 83       	std	Y+3, r24	; 0x03
    1af6:	9c 83       	std	Y+4, r25	; 0x04
    1af8:	82 e3       	ldi	r24, 0x32	; 50
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	d8 01       	movw	r26, r16
    1afe:	8d 93       	st	X+, r24
    1b00:	9c 93       	st	X, r25
    1b02:	c7 01       	movw	r24, r14
    1b04:	b6 01       	movw	r22, r12
    1b06:	20 e0       	ldi	r18, 0x00	; 0
    1b08:	30 e0       	ldi	r19, 0x00	; 0
    1b0a:	48 ec       	ldi	r20, 0xC8	; 200
    1b0c:	52 ec       	ldi	r21, 0xC2	; 194
    1b0e:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    1b12:	20 e0       	ldi	r18, 0x00	; 0
    1b14:	30 e0       	ldi	r19, 0x00	; 0
    1b16:	48 ec       	ldi	r20, 0xC8	; 200
    1b18:	52 e4       	ldi	r21, 0x42	; 66
    1b1a:	0e 94 b4 21 	call	0x4368	; 0x4368 <__addsf3>
    1b1e:	0e 94 89 22 	call	0x4512	; 0x4512 <__fixunssfsi>
    1b22:	f8 01       	movw	r30, r16
    1b24:	73 83       	std	Z+3, r23	; 0x03
    1b26:	62 83       	std	Z+2, r22	; 0x02
    1b28:	82 ec       	ldi	r24, 0xC2	; 194
    1b2a:	91 e0       	ldi	r25, 0x01	; 1
    1b2c:	95 83       	std	Z+5, r25	; 0x05
    1b2e:	84 83       	std	Z+4, r24	; 0x04
    1b30:	16 82       	std	Z+6, r1	; 0x06
    1b32:	10 86       	std	Z+8, r1	; 0x08
    1b34:	17 82       	std	Z+7, r1	; 0x07
    1b36:	81 e0       	ldi	r24, 0x01	; 1
    1b38:	62 e0       	ldi	r22, 0x02	; 2
    1b3a:	41 e0       	ldi	r20, 0x01	; 1
    1b3c:	22 e3       	ldi	r18, 0x32	; 50
    1b3e:	30 e0       	ldi	r19, 0x00	; 0
    1b40:	09 81       	ldd	r16, Y+1	; 0x01
    1b42:	1a 81       	ldd	r17, Y+2	; 0x02
    1b44:	a2 ec       	ldi	r26, 0xC2	; 194
    1b46:	ea 2e       	mov	r14, r26
    1b48:	a1 e0       	ldi	r26, 0x01	; 1
    1b4a:	fa 2e       	mov	r15, r26
    1b4c:	cc 24       	eor	r12, r12
    1b4e:	aa 24       	eor	r10, r10
    1b50:	bb 24       	eor	r11, r11
    1b52:	88 24       	eor	r8, r8
    1b54:	83 94       	inc	r8
    1b56:	0e 94 dd 11 	call	0x23ba	; 0x23ba <STEPPER_move>
	STEPPER_REV, 50, stepper_speed_L, 450, STEPPER_BRK_OFF, // Left
	STEPPER_REV, 50, stepper_speed_R, 450, STEPPER_BRK_OFF ); // Right
	
	// debug LCP print statement
	LCD_clear();
    1b5a:	8d b7       	in	r24, 0x3d	; 61
    1b5c:	9e b7       	in	r25, 0x3e	; 62
    1b5e:	09 96       	adiw	r24, 0x09	; 9
    1b60:	0f b6       	in	r0, 0x3f	; 63
    1b62:	f8 94       	cli
    1b64:	9e bf       	out	0x3e, r25	; 62
    1b66:	0f be       	out	0x3f, r0	; 63
    1b68:	8d bf       	out	0x3d, r24	; 61
    1b6a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <LCD_clear>
	LCD_printf("bkIR: %3.2f\nmoveWall\nError: %3f\nEffort: %3f\n", bkIR, error, effort);
    1b6e:	ad b7       	in	r26, 0x3d	; 61
    1b70:	be b7       	in	r27, 0x3e	; 62
    1b72:	1e 97       	sbiw	r26, 0x0e	; 14
    1b74:	0f b6       	in	r0, 0x3f	; 63
    1b76:	f8 94       	cli
    1b78:	be bf       	out	0x3e, r27	; 62
    1b7a:	0f be       	out	0x3f, r0	; 63
    1b7c:	ad bf       	out	0x3d, r26	; 61
    1b7e:	ed b7       	in	r30, 0x3d	; 61
    1b80:	fe b7       	in	r31, 0x3e	; 62
    1b82:	31 96       	adiw	r30, 0x01	; 1
    1b84:	8e e3       	ldi	r24, 0x3E	; 62
    1b86:	91 e0       	ldi	r25, 0x01	; 1
    1b88:	12 96       	adiw	r26, 0x02	; 2
    1b8a:	9c 93       	st	X, r25
    1b8c:	8e 93       	st	-X, r24
    1b8e:	11 97       	sbiw	r26, 0x01	; 1
    1b90:	80 91 02 02 	lds	r24, 0x0202
    1b94:	90 91 03 02 	lds	r25, 0x0203
    1b98:	a0 91 04 02 	lds	r26, 0x0204
    1b9c:	b0 91 05 02 	lds	r27, 0x0205
    1ba0:	82 83       	std	Z+2, r24	; 0x02
    1ba2:	93 83       	std	Z+3, r25	; 0x03
    1ba4:	a4 83       	std	Z+4, r26	; 0x04
    1ba6:	b5 83       	std	Z+5, r27	; 0x05
    1ba8:	2d 81       	ldd	r18, Y+5	; 0x05
    1baa:	39 2d       	mov	r19, r9
    1bac:	c9 01       	movw	r24, r18
    1bae:	d1 01       	movw	r26, r2
    1bb0:	86 83       	std	Z+6, r24	; 0x06
    1bb2:	97 83       	std	Z+7, r25	; 0x07
    1bb4:	a0 87       	std	Z+8, r26	; 0x08
    1bb6:	b1 87       	std	Z+9, r27	; 0x09
    1bb8:	42 86       	std	Z+10, r4	; 0x0a
    1bba:	53 86       	std	Z+11, r5	; 0x0b
    1bbc:	64 86       	std	Z+12, r6	; 0x0c
    1bbe:	75 86       	std	Z+13, r7	; 0x0d
    1bc0:	0e 94 ec 2b 	call	0x57d8	; 0x57d8 <printf>
    1bc4:	ed b7       	in	r30, 0x3d	; 61
    1bc6:	fe b7       	in	r31, 0x3e	; 62
    1bc8:	3e 96       	adiw	r30, 0x0e	; 14
    1bca:	0f b6       	in	r0, 0x3f	; 63
    1bcc:	f8 94       	cli
    1bce:	fe bf       	out	0x3e, r31	; 62
    1bd0:	0f be       	out	0x3f, r0	; 63
    1bd2:	ed bf       	out	0x3d, r30	; 61
	
}
    1bd4:	0f 90       	pop	r0
    1bd6:	0f 90       	pop	r0
    1bd8:	0f 90       	pop	r0
    1bda:	0f 90       	pop	r0
    1bdc:	0f 90       	pop	r0
    1bde:	cf 91       	pop	r28
    1be0:	df 91       	pop	r29
    1be2:	1f 91       	pop	r17
    1be4:	0f 91       	pop	r16
    1be6:	ff 90       	pop	r15
    1be8:	ef 90       	pop	r14
    1bea:	df 90       	pop	r13
    1bec:	cf 90       	pop	r12
    1bee:	bf 90       	pop	r11
    1bf0:	af 90       	pop	r10
    1bf2:	9f 90       	pop	r9
    1bf4:	8f 90       	pop	r8
    1bf6:	7f 90       	pop	r7
    1bf8:	6f 90       	pop	r6
    1bfa:	5f 90       	pop	r5
    1bfc:	4f 90       	pop	r4
    1bfe:	3f 90       	pop	r3
    1c00:	2f 90       	pop	r2
    1c02:	08 95       	ret

00001c04 <moveBehavior>:
* Input Variables:	int
* Output Return:	char
* Overview:		    This is the currrent behavior of the robot
********************************************************************/
char moveBehavior( int behavior)
{
    1c04:	cf 93       	push	r28
    1c06:	df 93       	push	r29
    1c08:	ec 01       	movw	r28, r24
	if(moveAway()){
    1c0a:	0e 94 56 0a 	call	0x14ac	; 0x14ac <moveAway>
    1c0e:	88 23       	and	r24, r24
    1c10:	71 f0       	breq	.+28     	; 0x1c2e <moveBehavior+0x2a>
		Ierror = 0;
    1c12:	80 e0       	ldi	r24, 0x00	; 0
    1c14:	90 e0       	ldi	r25, 0x00	; 0
    1c16:	a0 e0       	ldi	r26, 0x00	; 0
    1c18:	b0 e0       	ldi	r27, 0x00	; 0
    1c1a:	80 93 ee 01 	sts	0x01EE, r24
    1c1e:	90 93 ef 01 	sts	0x01EF, r25
    1c22:	a0 93 f0 01 	sts	0x01F0, r26
    1c26:	b0 93 f1 01 	sts	0x01F1, r27
    1c2a:	81 e0       	ldi	r24, 0x01	; 1
    1c2c:	2a c0       	rjmp	.+84     	; 0x1c82 <moveBehavior+0x7e>
		return 1; 
	}
	if(moveLight(behavior)){
    1c2e:	ce 01       	movw	r24, r28
    1c30:	0e 94 b0 08 	call	0x1160	; 0x1160 <moveLight>
    1c34:	88 23       	and	r24, r24
    1c36:	71 f0       	breq	.+28     	; 0x1c54 <moveBehavior+0x50>
		Ierror = 0;
    1c38:	80 e0       	ldi	r24, 0x00	; 0
    1c3a:	90 e0       	ldi	r25, 0x00	; 0
    1c3c:	a0 e0       	ldi	r26, 0x00	; 0
    1c3e:	b0 e0       	ldi	r27, 0x00	; 0
    1c40:	80 93 ee 01 	sts	0x01EE, r24
    1c44:	90 93 ef 01 	sts	0x01EF, r25
    1c48:	a0 93 f0 01 	sts	0x01F0, r26
    1c4c:	b0 93 f1 01 	sts	0x01F1, r27
    1c50:	82 e0       	ldi	r24, 0x02	; 2
    1c52:	17 c0       	rjmp	.+46     	; 0x1c82 <moveBehavior+0x7e>
		return 2;
	}
	if(moveWall()){
    1c54:	0e 94 46 0c 	call	0x188c	; 0x188c <moveWall>
    1c58:	88 23       	and	r24, r24
    1c5a:	11 f0       	breq	.+4      	; 0x1c60 <moveBehavior+0x5c>
    1c5c:	83 e0       	ldi	r24, 0x03	; 3
    1c5e:	11 c0       	rjmp	.+34     	; 0x1c82 <moveBehavior+0x7e>
		return 3;
	}
	if(moveWander()){
    1c60:	0e 94 b3 0b 	call	0x1766	; 0x1766 <moveWander>
    1c64:	88 23       	and	r24, r24
    1c66:	69 f0       	breq	.+26     	; 0x1c82 <moveBehavior+0x7e>
		Ierror = 0;
    1c68:	80 e0       	ldi	r24, 0x00	; 0
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	a0 e0       	ldi	r26, 0x00	; 0
    1c6e:	b0 e0       	ldi	r27, 0x00	; 0
    1c70:	80 93 ee 01 	sts	0x01EE, r24
    1c74:	90 93 ef 01 	sts	0x01EF, r25
    1c78:	a0 93 f0 01 	sts	0x01F0, r26
    1c7c:	b0 93 f1 01 	sts	0x01F1, r27
    1c80:	84 e0       	ldi	r24, 0x04	; 4
		return 4;
	}
	return 0;	
}
    1c82:	df 91       	pop	r29
    1c84:	cf 91       	pop	r28
    1c86:	08 95       	ret

00001c88 <CBOT_main>:
/*******************************************************************
* Function:        void CBOT_main( void )
********************************************************************/

void CBOT_main( void )
{
    1c88:	cf 93       	push	r28
    1c8a:	df 93       	push	r29
	// Initialize variables
	int btnValue=0;//value of button pushed

	ATopstat = ATTINY_open();//open the tiny microcontroller
    1c8c:	0e 94 17 15 	call	0x2a2e	; 0x2a2e <ATTINY_open>
    1c90:	90 93 8a 02 	sts	0x028A, r25
    1c94:	80 93 89 02 	sts	0x0289, r24
	LEopstat = LED_open(); //open the LED module
    1c98:	0e 94 02 10 	call	0x2004	; 0x2004 <LED_open>
    1c9c:	90 93 88 02 	sts	0x0288, r25
    1ca0:	80 93 87 02 	sts	0x0287, r24
	LCopstat = LCD_open(); //open the LCD module
    1ca4:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <LCD_open>
    1ca8:	90 93 86 02 	sts	0x0286, r25
    1cac:	80 93 85 02 	sts	0x0285, r24
	STEPPER_open(); // Open STEPPER module for use
    1cb0:	0e 94 84 12 	call	0x2508	; 0x2508 <STEPPER_open>
	SPKR_open(SPKR_BEEP_MODE);//open the speaker in beep mode
    1cb4:	81 e0       	ldi	r24, 0x01	; 1
    1cb6:	0e 94 08 11 	call	0x2210	; 0x2210 <SPKR_open>
	
	LED_open();
    1cba:	0e 94 02 10 	call	0x2004	; 0x2004 <LED_open>
	I2C_open();
    1cbe:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <I2C_open>
	ADC_open();//open the ADC module
    1cc2:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <ADC_open>
 	ADC_set_VREF( ADC_VREF_AVCC );// Set the Voltage Reference first so VREF=5V.
    1cc6:	81 e0       	ldi	r24, 0x01	; 1
    1cc8:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <ADC_set_VREF>

	// Initialize IR Values and Reset Prefilter
	checkIR();
    1ccc:	0e 94 87 08 	call	0x110e	; 0x110e <checkIR>
	prefilter(1);
    1cd0:	81 e0       	ldi	r24, 0x01	; 1
    1cd2:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <prefilter>
	
	//
	LCD_printf("PRESS a button\nOR\nWAIT for default\n");
    1cd6:	8b e6       	ldi	r24, 0x6B	; 107
    1cd8:	91 e0       	ldi	r25, 0x01	; 1
    1cda:	0e 94 fe 2b 	call	0x57fc	; 0x57fc <puts>
	TMRSRVC_delay(3000);//wait 3 seconds
    1cde:	88 eb       	ldi	r24, 0xB8	; 184
    1ce0:	9b e0       	ldi	r25, 0x0B	; 11
    1ce2:	0e 94 66 15 	call	0x2acc	; 0x2acc <TMRSRVC_delay>
	btnValue = WaitButton();
    1ce6:	0e 94 82 05 	call	0xb04	; 0xb04 <WaitButton>
    1cea:	ec 01       	movw	r28, r24

	// Infinite loop
	while (1)
    {
		// update the sensor values
		checkLightSensor();
    1cec:	0e 94 72 08 	call	0x10e4	; 0x10e4 <checkLightSensor>
		checkIR();
    1cf0:	0e 94 87 08 	call	0x110e	; 0x110e <checkIR>
		if(btnValue == LIGHT_LOVER){
    1cf4:	c1 30       	cpi	r28, 0x01	; 1
    1cf6:	d1 05       	cpc	r29, r1
    1cf8:	29 f4       	brne	.+10     	; 0x1d04 <CBOT_main+0x7c>
			moveBehavior(btnValue);
    1cfa:	81 e0       	ldi	r24, 0x01	; 1
    1cfc:	90 e0       	ldi	r25, 0x00	; 0
    1cfe:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <moveBehavior>
    1d02:	f4 cf       	rjmp	.-24     	; 0x1cec <CBOT_main+0x64>
		}
		else{
			moveLight(btnValue);
    1d04:	ce 01       	movw	r24, r28
    1d06:	0e 94 b0 08 	call	0x1160	; 0x1160 <moveLight>
    1d0a:	f0 cf       	rjmp	.-32     	; 0x1cec <CBOT_main+0x64>

00001d0c <ADC_open>:
    1d0c:	8f e0       	ldi	r24, 0x0F	; 15
    1d0e:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    1d12:	88 23       	and	r24, r24
    1d14:	31 f4       	brne	.+12     	; 0x1d22 <ADC_open+0x16>
    1d16:	0e 94 98 16 	call	0x2d30	; 0x2d30 <__ADC_init>
    1d1a:	8f e0       	ldi	r24, 0x0F	; 15
    1d1c:	61 e0       	ldi	r22, 0x01	; 1
    1d1e:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    1d22:	8f e0       	ldi	r24, 0x0F	; 15
    1d24:	91 e0       	ldi	r25, 0x01	; 1
    1d26:	08 95       	ret

00001d28 <ADC_sample>:
    1d28:	8f e0       	ldi	r24, 0x0F	; 15
    1d2a:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    1d2e:	81 30       	cpi	r24, 0x01	; 1
    1d30:	19 f0       	breq	.+6      	; 0x1d38 <ADC_sample+0x10>
    1d32:	20 e0       	ldi	r18, 0x00	; 0
    1d34:	30 e0       	ldi	r19, 0x00	; 0
    1d36:	13 c0       	rjmp	.+38     	; 0x1d5e <ADC_sample+0x36>
    1d38:	80 91 7a 00 	lds	r24, 0x007A
    1d3c:	80 64       	ori	r24, 0x40	; 64
    1d3e:	80 93 7a 00 	sts	0x007A, r24
    1d42:	80 91 7a 00 	lds	r24, 0x007A
    1d46:	86 fd       	sbrc	r24, 6
    1d48:	fc cf       	rjmp	.-8      	; 0x1d42 <ADC_sample+0x1a>
    1d4a:	30 91 78 00 	lds	r19, 0x0078
    1d4e:	20 91 79 00 	lds	r18, 0x0079
    1d52:	92 2f       	mov	r25, r18
    1d54:	80 e0       	ldi	r24, 0x00	; 0
    1d56:	23 2f       	mov	r18, r19
    1d58:	30 e0       	ldi	r19, 0x00	; 0
    1d5a:	28 2b       	or	r18, r24
    1d5c:	39 2b       	or	r19, r25
    1d5e:	c9 01       	movw	r24, r18
    1d60:	08 95       	ret

00001d62 <ADC_set_channel>:
    1d62:	58 2f       	mov	r21, r24
    1d64:	80 91 8e 01 	lds	r24, 0x018E
    1d68:	88 30       	cpi	r24, 0x08	; 8
    1d6a:	d8 f4       	brcc	.+54     	; 0x1da2 <ADC_set_channel+0x40>
    1d6c:	40 91 7e 00 	lds	r20, 0x007E
    1d70:	21 e0       	ldi	r18, 0x01	; 1
    1d72:	30 e0       	ldi	r19, 0x00	; 0
    1d74:	b9 01       	movw	r22, r18
    1d76:	02 c0       	rjmp	.+4      	; 0x1d7c <ADC_set_channel+0x1a>
    1d78:	66 0f       	add	r22, r22
    1d7a:	77 1f       	adc	r23, r23
    1d7c:	8a 95       	dec	r24
    1d7e:	e2 f7       	brpl	.-8      	; 0x1d78 <ADC_set_channel+0x16>
    1d80:	cb 01       	movw	r24, r22
    1d82:	80 95       	com	r24
    1d84:	84 23       	and	r24, r20
    1d86:	80 93 7e 00 	sts	0x007E, r24
    1d8a:	80 91 7e 00 	lds	r24, 0x007E
    1d8e:	05 2e       	mov	r0, r21
    1d90:	02 c0       	rjmp	.+4      	; 0x1d96 <ADC_set_channel+0x34>
    1d92:	22 0f       	add	r18, r18
    1d94:	33 1f       	adc	r19, r19
    1d96:	0a 94       	dec	r0
    1d98:	e2 f7       	brpl	.-8      	; 0x1d92 <ADC_set_channel+0x30>
    1d9a:	82 2b       	or	r24, r18
    1d9c:	80 93 7e 00 	sts	0x007E, r24
    1da0:	0d c0       	rjmp	.+26     	; 0x1dbc <ADC_set_channel+0x5a>
    1da2:	20 91 7e 00 	lds	r18, 0x007E
    1da6:	81 e0       	ldi	r24, 0x01	; 1
    1da8:	90 e0       	ldi	r25, 0x00	; 0
    1daa:	05 2e       	mov	r0, r21
    1dac:	02 c0       	rjmp	.+4      	; 0x1db2 <ADC_set_channel+0x50>
    1dae:	88 0f       	add	r24, r24
    1db0:	99 1f       	adc	r25, r25
    1db2:	0a 94       	dec	r0
    1db4:	e2 f7       	brpl	.-8      	; 0x1dae <ADC_set_channel+0x4c>
    1db6:	28 2b       	or	r18, r24
    1db8:	20 93 7e 00 	sts	0x007E, r18
    1dbc:	50 93 8e 01 	sts	0x018E, r21
    1dc0:	80 91 7c 00 	lds	r24, 0x007C
    1dc4:	5f 71       	andi	r21, 0x1F	; 31
    1dc6:	80 7e       	andi	r24, 0xE0	; 224
    1dc8:	85 2b       	or	r24, r21
    1dca:	80 93 7c 00 	sts	0x007C, r24
    1dce:	08 95       	ret

00001dd0 <ADC_set_VREF>:
    1dd0:	ec e7       	ldi	r30, 0x7C	; 124
    1dd2:	f0 e0       	ldi	r31, 0x00	; 0
    1dd4:	90 81       	ld	r25, Z
    1dd6:	82 95       	swap	r24
    1dd8:	88 0f       	add	r24, r24
    1dda:	88 0f       	add	r24, r24
    1ddc:	80 7c       	andi	r24, 0xC0	; 192
    1dde:	9f 73       	andi	r25, 0x3F	; 63
    1de0:	98 2b       	or	r25, r24
    1de2:	90 83       	st	Z, r25
    1de4:	08 95       	ret

00001de6 <main>:
    1de6:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <CBOT_ISR_init>
    1dea:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <CBOT_init>
    1dee:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <CBOT_main>
    1df2:	80 e0       	ldi	r24, 0x00	; 0
    1df4:	90 e0       	ldi	r25, 0x00	; 0
    1df6:	08 95       	ret

00001df8 <LCD_clear>:
    1df8:	0f 93       	push	r16
    1dfa:	1f 93       	push	r17
    1dfc:	80 e4       	ldi	r24, 0x40	; 64
    1dfe:	60 e0       	ldi	r22, 0x00	; 0
    1e00:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1e04:	00 e0       	ldi	r16, 0x00	; 0
    1e06:	80 2f       	mov	r24, r16
    1e08:	60 e0       	ldi	r22, 0x00	; 0
    1e0a:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <LCD_set_PGC_addr>
    1e0e:	10 e0       	ldi	r17, 0x00	; 0
    1e10:	80 e0       	ldi	r24, 0x00	; 0
    1e12:	61 e0       	ldi	r22, 0x01	; 1
    1e14:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1e18:	1f 5f       	subi	r17, 0xFF	; 255
    1e1a:	10 38       	cpi	r17, 0x80	; 128
    1e1c:	c9 f7       	brne	.-14     	; 0x1e10 <LCD_clear+0x18>
    1e1e:	0f 5f       	subi	r16, 0xFF	; 255
    1e20:	04 30       	cpi	r16, 0x04	; 4
    1e22:	89 f7       	brne	.-30     	; 0x1e06 <LCD_clear+0xe>
    1e24:	83 e0       	ldi	r24, 0x03	; 3
    1e26:	60 e0       	ldi	r22, 0x00	; 0
    1e28:	0e 94 bb 0f 	call	0x1f76	; 0x1f76 <LCD_set_next_PGC>
    1e2c:	1f 91       	pop	r17
    1e2e:	0f 91       	pop	r16
    1e30:	08 95       	ret

00001e32 <LCD_open>:
    1e32:	0f 93       	push	r16
    1e34:	1f 93       	push	r17
    1e36:	82 e0       	ldi	r24, 0x02	; 2
    1e38:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    1e3c:	88 23       	and	r24, r24
    1e3e:	11 f4       	brne	.+4      	; 0x1e44 <LCD_open+0x12>
    1e40:	82 e0       	ldi	r24, 0x02	; 2
    1e42:	06 c0       	rjmp	.+12     	; 0x1e50 <LCD_open+0x1e>
    1e44:	81 e0       	ldi	r24, 0x01	; 1
    1e46:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    1e4a:	88 23       	and	r24, r24
    1e4c:	19 f4       	brne	.+6      	; 0x1e54 <LCD_open+0x22>
    1e4e:	81 e0       	ldi	r24, 0x01	; 1
    1e50:	90 e0       	ldi	r25, 0x00	; 0
    1e52:	6d c0       	rjmp	.+218    	; 0x1f2e <LCD_open+0xfc>
    1e54:	0e 94 19 19 	call	0x3232	; 0x3232 <__LCD_init>
    1e58:	85 e0       	ldi	r24, 0x05	; 5
    1e5a:	61 e0       	ldi	r22, 0x01	; 1
    1e5c:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    1e60:	8e ea       	ldi	r24, 0xAE	; 174
    1e62:	60 e0       	ldi	r22, 0x00	; 0
    1e64:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1e68:	82 ea       	ldi	r24, 0xA2	; 162
    1e6a:	60 e0       	ldi	r22, 0x00	; 0
    1e6c:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1e70:	80 ea       	ldi	r24, 0xA0	; 160
    1e72:	60 e0       	ldi	r22, 0x00	; 0
    1e74:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1e78:	00 e5       	ldi	r16, 0x50	; 80
    1e7a:	13 ec       	ldi	r17, 0xC3	; 195
    1e7c:	c8 01       	movw	r24, r16
    1e7e:	01 97       	sbiw	r24, 0x01	; 1
    1e80:	f1 f7       	brne	.-4      	; 0x1e7e <LCD_open+0x4c>
    1e82:	80 ec       	ldi	r24, 0xC0	; 192
    1e84:	60 e0       	ldi	r22, 0x00	; 0
    1e86:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1e8a:	8f e2       	ldi	r24, 0x2F	; 47
    1e8c:	60 e0       	ldi	r22, 0x00	; 0
    1e8e:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1e92:	81 e8       	ldi	r24, 0x81	; 129
    1e94:	60 e0       	ldi	r22, 0x00	; 0
    1e96:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1e9a:	86 e1       	ldi	r24, 0x16	; 22
    1e9c:	60 e0       	ldi	r22, 0x00	; 0
    1e9e:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1ea2:	82 e2       	ldi	r24, 0x22	; 34
    1ea4:	60 e0       	ldi	r22, 0x00	; 0
    1ea6:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1eaa:	c8 01       	movw	r24, r16
    1eac:	01 97       	sbiw	r24, 0x01	; 1
    1eae:	f1 f7       	brne	.-4      	; 0x1eac <LCD_open+0x7a>
    1eb0:	8f ea       	ldi	r24, 0xAF	; 175
    1eb2:	60 e0       	ldi	r22, 0x00	; 0
    1eb4:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1eb8:	86 ea       	ldi	r24, 0xA6	; 166
    1eba:	60 e0       	ldi	r22, 0x00	; 0
    1ebc:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1ec0:	85 ea       	ldi	r24, 0xA5	; 165
    1ec2:	60 e0       	ldi	r22, 0x00	; 0
    1ec4:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1ec8:	80 e0       	ldi	r24, 0x00	; 0
    1eca:	90 e0       	ldi	r25, 0x00	; 0
    1ecc:	28 e8       	ldi	r18, 0x88	; 136
    1ece:	33 e1       	ldi	r19, 0x13	; 19
    1ed0:	f9 01       	movw	r30, r18
    1ed2:	31 97       	sbiw	r30, 0x01	; 1
    1ed4:	f1 f7       	brne	.-4      	; 0x1ed2 <LCD_open+0xa0>
    1ed6:	01 96       	adiw	r24, 0x01	; 1
    1ed8:	43 e0       	ldi	r20, 0x03	; 3
    1eda:	88 3e       	cpi	r24, 0xE8	; 232
    1edc:	94 07       	cpc	r25, r20
    1ede:	c1 f7       	brne	.-16     	; 0x1ed0 <LCD_open+0x9e>
    1ee0:	83 eb       	ldi	r24, 0xB3	; 179
    1ee2:	60 e0       	ldi	r22, 0x00	; 0
    1ee4:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1ee8:	80 e4       	ldi	r24, 0x40	; 64
    1eea:	60 e0       	ldi	r22, 0x00	; 0
    1eec:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1ef0:	83 e0       	ldi	r24, 0x03	; 3
    1ef2:	60 e0       	ldi	r22, 0x00	; 0
    1ef4:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <LCD_set_PGC_addr>
    1ef8:	83 e0       	ldi	r24, 0x03	; 3
    1efa:	60 e0       	ldi	r22, 0x00	; 0
    1efc:	0e 94 bb 0f 	call	0x1f76	; 0x1f76 <LCD_set_next_PGC>
    1f00:	10 92 b9 04 	sts	0x04B9, r1
    1f04:	10 92 bb 04 	sts	0x04BB, r1
    1f08:	10 92 ba 04 	sts	0x04BA, r1
    1f0c:	8d e9       	ldi	r24, 0x9D	; 157
    1f0e:	91 e0       	ldi	r25, 0x01	; 1
    1f10:	90 93 ea 04 	sts	0x04EA, r25
    1f14:	80 93 e9 04 	sts	0x04E9, r24
    1f18:	88 e1       	ldi	r24, 0x18	; 24
    1f1a:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <LCD_set_backlight>
    1f1e:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <LCD_clear>
    1f22:	84 ea       	ldi	r24, 0xA4	; 164
    1f24:	60 e0       	ldi	r22, 0x00	; 0
    1f26:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1f2a:	85 e0       	ldi	r24, 0x05	; 5
    1f2c:	91 e0       	ldi	r25, 0x01	; 1
    1f2e:	1f 91       	pop	r17
    1f30:	0f 91       	pop	r16
    1f32:	08 95       	ret

00001f34 <LCD_set_backlight>:
    1f34:	1f 93       	push	r17
    1f36:	18 2f       	mov	r17, r24
    1f38:	85 e0       	ldi	r24, 0x05	; 5
    1f3a:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    1f3e:	81 30       	cpi	r24, 0x01	; 1
    1f40:	c1 f4       	brne	.+48     	; 0x1f72 <LCD_set_backlight+0x3e>
    1f42:	87 e0       	ldi	r24, 0x07	; 7
    1f44:	0e 94 17 10 	call	0x202e	; 0x202e <SPI_set_slave_addr>
    1f48:	82 e0       	ldi	r24, 0x02	; 2
    1f4a:	6a e0       	ldi	r22, 0x0A	; 10
    1f4c:	0e 94 68 10 	call	0x20d0	; 0x20d0 <SPI_transmit>
    1f50:	82 e0       	ldi	r24, 0x02	; 2
    1f52:	61 eb       	ldi	r22, 0xB1	; 177
    1f54:	0e 94 68 10 	call	0x20d0	; 0x20d0 <SPI_transmit>
    1f58:	61 2f       	mov	r22, r17
    1f5a:	11 32       	cpi	r17, 0x21	; 33
    1f5c:	08 f0       	brcs	.+2      	; 0x1f60 <LCD_set_backlight+0x2c>
    1f5e:	60 e2       	ldi	r22, 0x20	; 32
    1f60:	82 e0       	ldi	r24, 0x02	; 2
    1f62:	0e 94 68 10 	call	0x20d0	; 0x20d0 <SPI_transmit>
    1f66:	89 ee       	ldi	r24, 0xE9	; 233
    1f68:	8a 95       	dec	r24
    1f6a:	f1 f7       	brne	.-4      	; 0x1f68 <LCD_set_backlight+0x34>
    1f6c:	87 e0       	ldi	r24, 0x07	; 7
    1f6e:	0e 94 17 10 	call	0x202e	; 0x202e <SPI_set_slave_addr>
    1f72:	1f 91       	pop	r17
    1f74:	08 95       	ret

00001f76 <LCD_set_next_PGC>:
    1f76:	83 70       	andi	r24, 0x03	; 3
    1f78:	6f 77       	andi	r22, 0x7F	; 127
    1f7a:	60 93 b7 04 	sts	0x04B7, r22
    1f7e:	80 93 b8 04 	sts	0x04B8, r24
    1f82:	08 95       	ret

00001f84 <LCD_set_PGC_addr>:
    1f84:	0f 93       	push	r16
    1f86:	1f 93       	push	r17
    1f88:	06 2f       	mov	r16, r22
    1f8a:	16 2f       	mov	r17, r22
    1f8c:	1f 77       	andi	r17, 0x7F	; 127
    1f8e:	83 70       	andi	r24, 0x03	; 3
    1f90:	80 6b       	ori	r24, 0xB0	; 176
    1f92:	60 e0       	ldi	r22, 0x00	; 0
    1f94:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1f98:	12 95       	swap	r17
    1f9a:	1f 70       	andi	r17, 0x0F	; 15
    1f9c:	81 2f       	mov	r24, r17
    1f9e:	80 61       	ori	r24, 0x10	; 16
    1fa0:	60 e0       	ldi	r22, 0x00	; 0
    1fa2:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1fa6:	80 2f       	mov	r24, r16
    1fa8:	8f 70       	andi	r24, 0x0F	; 15
    1faa:	60 e0       	ldi	r22, 0x00	; 0
    1fac:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    1fb0:	1f 91       	pop	r17
    1fb2:	0f 91       	pop	r16
    1fb4:	08 95       	ret

00001fb6 <LCD_write>:
    1fb6:	0f 93       	push	r16
    1fb8:	1f 93       	push	r17
    1fba:	08 2f       	mov	r16, r24
    1fbc:	16 2f       	mov	r17, r22
    1fbe:	85 e0       	ldi	r24, 0x05	; 5
    1fc0:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    1fc4:	81 30       	cpi	r24, 0x01	; 1
    1fc6:	79 f4       	brne	.+30     	; 0x1fe6 <LCD_write+0x30>
    1fc8:	11 23       	and	r17, r17
    1fca:	19 f0       	breq	.+6      	; 0x1fd2 <LCD_write+0x1c>
    1fcc:	11 30       	cpi	r17, 0x01	; 1
    1fce:	21 f4       	brne	.+8      	; 0x1fd8 <LCD_write+0x22>
    1fd0:	02 c0       	rjmp	.+4      	; 0x1fd6 <LCD_write+0x20>
    1fd2:	2b 98       	cbi	0x05, 3	; 5
    1fd4:	01 c0       	rjmp	.+2      	; 0x1fd8 <LCD_write+0x22>
    1fd6:	2b 9a       	sbi	0x05, 3	; 5
    1fd8:	86 e0       	ldi	r24, 0x06	; 6
    1fda:	8a 95       	dec	r24
    1fdc:	f1 f7       	brne	.-4      	; 0x1fda <LCD_write+0x24>
    1fde:	80 e0       	ldi	r24, 0x00	; 0
    1fe0:	60 2f       	mov	r22, r16
    1fe2:	0e 94 68 10 	call	0x20d0	; 0x20d0 <SPI_transmit>
    1fe6:	1f 91       	pop	r17
    1fe8:	0f 91       	pop	r16
    1fea:	08 95       	ret

00001fec <LED_clr_pattern>:
    1fec:	1f 93       	push	r17
    1fee:	18 2f       	mov	r17, r24
    1ff0:	86 e0       	ldi	r24, 0x06	; 6
    1ff2:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    1ff6:	81 30       	cpi	r24, 0x01	; 1
    1ff8:	19 f4       	brne	.+6      	; 0x2000 <LED_clr_pattern+0x14>
    1ffa:	81 2f       	mov	r24, r17
    1ffc:	0e 94 c8 19 	call	0x3390	; 0x3390 <__LED_clr_pattern>
    2000:	1f 91       	pop	r17
    2002:	08 95       	ret

00002004 <LED_open>:
    2004:	0e 94 cd 19 	call	0x339a	; 0x339a <__LED_init>
    2008:	86 e0       	ldi	r24, 0x06	; 6
    200a:	61 e0       	ldi	r22, 0x01	; 1
    200c:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    2010:	86 e0       	ldi	r24, 0x06	; 6
    2012:	91 e0       	ldi	r25, 0x01	; 1
    2014:	08 95       	ret

00002016 <LED_set_pattern>:
    2016:	1f 93       	push	r17
    2018:	18 2f       	mov	r17, r24
    201a:	86 e0       	ldi	r24, 0x06	; 6
    201c:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    2020:	81 30       	cpi	r24, 0x01	; 1
    2022:	19 f4       	brne	.+6      	; 0x202a <LED_set_pattern+0x14>
    2024:	81 2f       	mov	r24, r17
    2026:	0e 94 d0 19 	call	0x33a0	; 0x33a0 <__LED_set_pattern>
    202a:	1f 91       	pop	r17
    202c:	08 95       	ret

0000202e <SPI_set_slave_addr>:
    202e:	1f 93       	push	r17
    2030:	18 2f       	mov	r17, r24
    2032:	82 e0       	ldi	r24, 0x02	; 2
    2034:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    2038:	81 30       	cpi	r24, 0x01	; 1
    203a:	09 f0       	breq	.+2      	; 0x203e <SPI_set_slave_addr+0x10>
    203c:	47 c0       	rjmp	.+142    	; 0x20cc <SPI_set_slave_addr+0x9e>
    203e:	91 2f       	mov	r25, r17
    2040:	97 70       	andi	r25, 0x07	; 7
    2042:	80 91 bc 04 	lds	r24, 0x04BC
    2046:	98 17       	cp	r25, r24
    2048:	09 f4       	brne	.+2      	; 0x204c <SPI_set_slave_addr+0x1e>
    204a:	40 c0       	rjmp	.+128    	; 0x20cc <SPI_set_slave_addr+0x9e>
    204c:	90 93 bc 04 	sts	0x04BC, r25
    2050:	85 b1       	in	r24, 0x05	; 5
    2052:	88 7f       	andi	r24, 0xF8	; 248
    2054:	89 2b       	or	r24, r25
    2056:	85 b9       	out	0x05, r24	; 5
    2058:	93 30       	cpi	r25, 0x03	; 3
    205a:	11 f1       	breq	.+68     	; 0x20a0 <SPI_set_slave_addr+0x72>
    205c:	94 30       	cpi	r25, 0x04	; 4
    205e:	28 f4       	brcc	.+10     	; 0x206a <SPI_set_slave_addr+0x3c>
    2060:	91 30       	cpi	r25, 0x01	; 1
    2062:	51 f0       	breq	.+20     	; 0x2078 <SPI_set_slave_addr+0x4a>
    2064:	92 30       	cpi	r25, 0x02	; 2
    2066:	90 f4       	brcc	.+36     	; 0x208c <SPI_set_slave_addr+0x5e>
    2068:	0c c0       	rjmp	.+24     	; 0x2082 <SPI_set_slave_addr+0x54>
    206a:	95 30       	cpi	r25, 0x05	; 5
    206c:	19 f1       	breq	.+70     	; 0x20b4 <SPI_set_slave_addr+0x86>
    206e:	95 30       	cpi	r25, 0x05	; 5
    2070:	e0 f0       	brcs	.+56     	; 0x20aa <SPI_set_slave_addr+0x7c>
    2072:	96 30       	cpi	r25, 0x06	; 6
    2074:	21 f5       	brne	.+72     	; 0x20be <SPI_set_slave_addr+0x90>
    2076:	0f c0       	rjmp	.+30     	; 0x2096 <SPI_set_slave_addr+0x68>
    2078:	e0 91 60 02 	lds	r30, 0x0260
    207c:	f0 91 61 02 	lds	r31, 0x0261
    2080:	22 c0       	rjmp	.+68     	; 0x20c6 <SPI_set_slave_addr+0x98>
    2082:	e0 91 5e 02 	lds	r30, 0x025E
    2086:	f0 91 5f 02 	lds	r31, 0x025F
    208a:	1d c0       	rjmp	.+58     	; 0x20c6 <SPI_set_slave_addr+0x98>
    208c:	e0 91 62 02 	lds	r30, 0x0262
    2090:	f0 91 63 02 	lds	r31, 0x0263
    2094:	18 c0       	rjmp	.+48     	; 0x20c6 <SPI_set_slave_addr+0x98>
    2096:	e0 91 6a 02 	lds	r30, 0x026A
    209a:	f0 91 6b 02 	lds	r31, 0x026B
    209e:	13 c0       	rjmp	.+38     	; 0x20c6 <SPI_set_slave_addr+0x98>
    20a0:	e0 91 64 02 	lds	r30, 0x0264
    20a4:	f0 91 65 02 	lds	r31, 0x0265
    20a8:	0e c0       	rjmp	.+28     	; 0x20c6 <SPI_set_slave_addr+0x98>
    20aa:	e0 91 66 02 	lds	r30, 0x0266
    20ae:	f0 91 67 02 	lds	r31, 0x0267
    20b2:	09 c0       	rjmp	.+18     	; 0x20c6 <SPI_set_slave_addr+0x98>
    20b4:	e0 91 68 02 	lds	r30, 0x0268
    20b8:	f0 91 69 02 	lds	r31, 0x0269
    20bc:	04 c0       	rjmp	.+8      	; 0x20c6 <SPI_set_slave_addr+0x98>
    20be:	e0 91 6c 02 	lds	r30, 0x026C
    20c2:	f0 91 6d 02 	lds	r31, 0x026D
    20c6:	30 97       	sbiw	r30, 0x00	; 0
    20c8:	09 f0       	breq	.+2      	; 0x20cc <SPI_set_slave_addr+0x9e>
    20ca:	09 95       	icall
    20cc:	1f 91       	pop	r17
    20ce:	08 95       	ret

000020d0 <SPI_transmit>:
    20d0:	1f 93       	push	r17
    20d2:	16 2f       	mov	r17, r22
    20d4:	0e 94 17 10 	call	0x202e	; 0x202e <SPI_set_slave_addr>
    20d8:	82 e0       	ldi	r24, 0x02	; 2
    20da:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    20de:	81 30       	cpi	r24, 0x01	; 1
    20e0:	21 f4       	brne	.+8      	; 0x20ea <SPI_transmit+0x1a>
    20e2:	1e bd       	out	0x2e, r17	; 46
    20e4:	0d b4       	in	r0, 0x2d	; 45
    20e6:	07 fe       	sbrs	r0, 7
    20e8:	fd cf       	rjmp	.-6      	; 0x20e4 <SPI_transmit+0x14>
    20ea:	1f 91       	pop	r17
    20ec:	08 95       	ret

000020ee <__SPKR_set_up_freq_LUT>:
    20ee:	0f 93       	push	r16
    20f0:	1f 93       	push	r17
    20f2:	cf 93       	push	r28
    20f4:	df 93       	push	r29
    20f6:	80 e2       	ldi	r24, 0x20	; 32
    20f8:	91 e0       	ldi	r25, 0x01	; 1
    20fa:	0e 94 74 29 	call	0x52e8	; 0x52e8 <malloc>
    20fe:	9c 01       	movw	r18, r24
    2100:	90 93 7d 02 	sts	0x027D, r25
    2104:	80 93 7c 02 	sts	0x027C, r24
    2108:	89 2b       	or	r24, r25
    210a:	11 f4       	brne	.+4      	; 0x2110 <__SPKR_set_up_freq_LUT+0x22>
    210c:	80 e0       	ldi	r24, 0x00	; 0
    210e:	39 c0       	rjmp	.+114    	; 0x2182 <__SPKR_set_up_freq_LUT+0x94>
    2110:	89 01       	movw	r16, r18
    2112:	c0 e0       	ldi	r28, 0x00	; 0
    2114:	d0 e0       	ldi	r29, 0x00	; 0
    2116:	be 01       	movw	r22, r28
    2118:	80 e0       	ldi	r24, 0x00	; 0
    211a:	90 e0       	ldi	r25, 0x00	; 0
    211c:	0e 94 b5 22 	call	0x456a	; 0x456a <__floatunsisf>
    2120:	20 e0       	ldi	r18, 0x00	; 0
    2122:	30 e0       	ldi	r19, 0x00	; 0
    2124:	40 ea       	ldi	r20, 0xA0	; 160
    2126:	51 e4       	ldi	r21, 0x41	; 65
    2128:	0e 94 1c 22 	call	0x4438	; 0x4438 <__divsf3>
    212c:	27 ef       	ldi	r18, 0xF7	; 247
    212e:	35 e7       	ldi	r19, 0x75	; 117
    2130:	40 e0       	ldi	r20, 0x00	; 0
    2132:	5f e3       	ldi	r21, 0x3F	; 63
    2134:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    2138:	9b 01       	movw	r18, r22
    213a:	ac 01       	movw	r20, r24
    213c:	60 e0       	ldi	r22, 0x00	; 0
    213e:	70 e0       	ldi	r23, 0x00	; 0
    2140:	80 e2       	ldi	r24, 0x20	; 32
    2142:	91 e4       	ldi	r25, 0x41	; 65
    2144:	0e 94 08 24 	call	0x4810	; 0x4810 <pow>
    2148:	9b 01       	movw	r18, r22
    214a:	ac 01       	movw	r20, r24
    214c:	ca 01       	movw	r24, r20
    214e:	b9 01       	movw	r22, r18
    2150:	2d ec       	ldi	r18, 0xCD	; 205
    2152:	3c ec       	ldi	r19, 0xCC	; 204
    2154:	42 e8       	ldi	r20, 0x82	; 130
    2156:	51 e4       	ldi	r21, 0x41	; 65
    2158:	0e 94 a5 23 	call	0x474a	; 0x474a <__mulsf3>
    215c:	0e 94 6b 23 	call	0x46d6	; 0x46d6 <lrint>
    2160:	2a e0       	ldi	r18, 0x0A	; 10
    2162:	30 e0       	ldi	r19, 0x00	; 0
    2164:	40 e0       	ldi	r20, 0x00	; 0
    2166:	50 e0       	ldi	r21, 0x00	; 0
    2168:	0e 94 d5 28 	call	0x51aa	; 0x51aa <__mulsi3>
    216c:	f8 01       	movw	r30, r16
    216e:	61 93       	st	Z+, r22
    2170:	71 93       	st	Z+, r23
    2172:	81 93       	st	Z+, r24
    2174:	91 93       	st	Z+, r25
    2176:	8f 01       	movw	r16, r30
    2178:	21 96       	adiw	r28, 0x01	; 1
    217a:	c8 34       	cpi	r28, 0x48	; 72
    217c:	d1 05       	cpc	r29, r1
    217e:	59 f6       	brne	.-106    	; 0x2116 <__SPKR_set_up_freq_LUT+0x28>
    2180:	81 e0       	ldi	r24, 0x01	; 1
    2182:	df 91       	pop	r29
    2184:	cf 91       	pop	r28
    2186:	1f 91       	pop	r17
    2188:	0f 91       	pop	r16
    218a:	08 95       	ret

0000218c <__SPKR_open_beep_mode>:
    218c:	8a e0       	ldi	r24, 0x0A	; 10
    218e:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    2192:	88 23       	and	r24, r24
    2194:	71 f4       	brne	.+28     	; 0x21b2 <__SPKR_open_beep_mode+0x26>
    2196:	10 92 79 02 	sts	0x0279, r1
    219a:	10 92 78 02 	sts	0x0278, r1
    219e:	81 e0       	ldi	r24, 0x01	; 1
    21a0:	0e 94 f9 1a 	call	0x35f2	; 0x35f2 <__SPKR_init>
    21a4:	81 e0       	ldi	r24, 0x01	; 1
    21a6:	80 93 6f 02 	sts	0x026F, r24
    21aa:	8a e0       	ldi	r24, 0x0A	; 10
    21ac:	61 e0       	ldi	r22, 0x01	; 1
    21ae:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    21b2:	8a e0       	ldi	r24, 0x0A	; 10
    21b4:	91 e0       	ldi	r25, 0x01	; 1
    21b6:	08 95       	ret

000021b8 <__SPKR_open_tone_mode>:
    21b8:	1f 93       	push	r17
    21ba:	8b e0       	ldi	r24, 0x0B	; 11
    21bc:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    21c0:	88 23       	and	r24, r24
    21c2:	11 f0       	breq	.+4      	; 0x21c8 <__SPKR_open_tone_mode+0x10>
    21c4:	90 e0       	ldi	r25, 0x00	; 0
    21c6:	21 c0       	rjmp	.+66     	; 0x220a <__SPKR_open_tone_mode+0x52>
    21c8:	89 e0       	ldi	r24, 0x09	; 9
    21ca:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    21ce:	88 23       	and	r24, r24
    21d0:	d9 f4       	brne	.+54     	; 0x2208 <__SPKR_open_tone_mode+0x50>
    21d2:	0e 94 77 10 	call	0x20ee	; 0x20ee <__SPKR_set_up_freq_LUT>
    21d6:	18 2f       	mov	r17, r24
    21d8:	81 30       	cpi	r24, 0x01	; 1
    21da:	b1 f4       	brne	.+44     	; 0x2208 <__SPKR_open_tone_mode+0x50>
    21dc:	10 92 70 02 	sts	0x0270, r1
    21e0:	10 92 71 02 	sts	0x0271, r1
    21e4:	10 92 72 02 	sts	0x0272, r1
    21e8:	10 92 73 02 	sts	0x0273, r1
    21ec:	8d e0       	ldi	r24, 0x0D	; 13
    21ee:	6c e7       	ldi	r22, 0x7C	; 124
    21f0:	7a e1       	ldi	r23, 0x1A	; 26
    21f2:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <ISR_attach>
    21f6:	82 e0       	ldi	r24, 0x02	; 2
    21f8:	0e 94 f9 1a 	call	0x35f2	; 0x35f2 <__SPKR_init>
    21fc:	10 93 6e 02 	sts	0x026E, r17
    2200:	89 e0       	ldi	r24, 0x09	; 9
    2202:	61 e0       	ldi	r22, 0x01	; 1
    2204:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    2208:	91 e0       	ldi	r25, 0x01	; 1
    220a:	89 e0       	ldi	r24, 0x09	; 9
    220c:	1f 91       	pop	r17
    220e:	08 95       	ret

00002210 <SPKR_open>:
    2210:	81 30       	cpi	r24, 0x01	; 1
    2212:	29 f0       	breq	.+10     	; 0x221e <SPKR_open+0xe>
    2214:	82 30       	cpi	r24, 0x02	; 2
    2216:	31 f0       	breq	.+12     	; 0x2224 <SPKR_open+0x14>
    2218:	90 e0       	ldi	r25, 0x00	; 0
    221a:	89 e0       	ldi	r24, 0x09	; 9
    221c:	08 95       	ret
    221e:	0e 94 c6 10 	call	0x218c	; 0x218c <__SPKR_open_beep_mode>
    2222:	08 95       	ret
    2224:	0e 94 dc 10 	call	0x21b8	; 0x21b8 <__SPKR_open_tone_mode>
    2228:	08 95       	ret

0000222a <STEPPER_get_nSteps>:
    222a:	80 91 7d 04 	lds	r24, 0x047D
    222e:	90 91 7e 04 	lds	r25, 0x047E
    2232:	20 91 7f 04 	lds	r18, 0x047F
    2236:	30 91 80 04 	lds	r19, 0x0480
    223a:	bc 01       	movw	r22, r24
    223c:	c9 01       	movw	r24, r18
    223e:	08 95       	ret

00002240 <STEPPER_stepmode>:
    2240:	2f 92       	push	r2
    2242:	3f 92       	push	r3
    2244:	4f 92       	push	r4
    2246:	5f 92       	push	r5
    2248:	6f 92       	push	r6
    224a:	7f 92       	push	r7
    224c:	8f 92       	push	r8
    224e:	9f 92       	push	r9
    2250:	af 92       	push	r10
    2252:	bf 92       	push	r11
    2254:	cf 92       	push	r12
    2256:	df 92       	push	r13
    2258:	ef 92       	push	r14
    225a:	ff 92       	push	r15
    225c:	0f 93       	push	r16
    225e:	1f 93       	push	r17
    2260:	df 93       	push	r29
    2262:	cf 93       	push	r28
    2264:	cd b7       	in	r28, 0x3d	; 61
    2266:	de b7       	in	r29, 0x3e	; 62
    2268:	58 2e       	mov	r5, r24
    226a:	96 2e       	mov	r9, r22
    226c:	44 2e       	mov	r4, r20
    226e:	39 01       	movw	r6, r18
    2270:	3c 2c       	mov	r3, r12
    2272:	c9 8c       	ldd	r12, Y+25	; 0x19
    2274:	da 8c       	ldd	r13, Y+26	; 0x1a
    2276:	2b 8c       	ldd	r2, Y+27	; 0x1b
    2278:	81 e0       	ldi	r24, 0x01	; 1
    227a:	68 17       	cp	r22, r24
    227c:	39 f1       	breq	.+78     	; 0x22cc <STEPPER_stepmode+0x8c>
    227e:	68 17       	cp	r22, r24
    2280:	28 f0       	brcs	.+10     	; 0x228c <STEPPER_stepmode+0x4c>
    2282:	92 e0       	ldi	r25, 0x02	; 2
    2284:	69 17       	cp	r22, r25
    2286:	09 f0       	breq	.+2      	; 0x228a <STEPPER_stepmode+0x4a>
    2288:	85 c0       	rjmp	.+266    	; 0x2394 <STEPPER_stepmode+0x154>
    228a:	49 c0       	rjmp	.+146    	; 0x231e <STEPPER_stepmode+0xde>
    228c:	80 e0       	ldi	r24, 0x00	; 0
    228e:	61 e0       	ldi	r22, 0x01	; 1
    2290:	0e 94 29 13 	call	0x2652	; 0x2652 <STEPPER_set_mode>
    2294:	80 e0       	ldi	r24, 0x00	; 0
    2296:	b7 01       	movw	r22, r14
    2298:	0e 94 f2 12 	call	0x25e4	; 0x25e4 <STEPPER_set_accel>
    229c:	80 e0       	ldi	r24, 0x00	; 0
    229e:	64 2d       	mov	r22, r4
    22a0:	a3 01       	movw	r20, r6
    22a2:	98 01       	movw	r18, r16
    22a4:	03 2d       	mov	r16, r3
    22a6:	ee 24       	eor	r14, r14
    22a8:	e3 94       	inc	r14
    22aa:	e2 ea       	ldi	r30, 0xA2	; 162
    22ac:	ce 2e       	mov	r12, r30
    22ae:	e4 e0       	ldi	r30, 0x04	; 4
    22b0:	de 2e       	mov	r13, r30
    22b2:	0e 94 60 13 	call	0x26c0	; 0x26c0 <STEPPER_step>
    22b6:	55 20       	and	r5, r5
    22b8:	09 f0       	breq	.+2      	; 0x22bc <STEPPER_stepmode+0x7c>
    22ba:	6c c0       	rjmp	.+216    	; 0x2394 <STEPPER_stepmode+0x154>
    22bc:	00 d0       	rcall	.+0      	; 0x22be <STEPPER_stepmode+0x7e>
    22be:	0f 92       	push	r0
    22c0:	ed b7       	in	r30, 0x3d	; 61
    22c2:	fe b7       	in	r31, 0x3e	; 62
    22c4:	11 82       	std	Z+1, r1	; 0x01
    22c6:	b3 82       	std	Z+3, r11	; 0x03
    22c8:	a2 82       	std	Z+2, r10	; 0x02
    22ca:	23 c0       	rjmp	.+70     	; 0x2312 <STEPPER_stepmode+0xd2>
    22cc:	81 e0       	ldi	r24, 0x01	; 1
    22ce:	61 e0       	ldi	r22, 0x01	; 1
    22d0:	0e 94 29 13 	call	0x2652	; 0x2652 <STEPPER_set_mode>
    22d4:	81 e0       	ldi	r24, 0x01	; 1
    22d6:	b6 01       	movw	r22, r12
    22d8:	0e 94 f2 12 	call	0x25e4	; 0x25e4 <STEPPER_set_accel>
    22dc:	81 e0       	ldi	r24, 0x01	; 1
    22de:	68 2d       	mov	r22, r8
    22e0:	4d 89       	ldd	r20, Y+21	; 0x15
    22e2:	5e 89       	ldd	r21, Y+22	; 0x16
    22e4:	2f 89       	ldd	r18, Y+23	; 0x17
    22e6:	38 8d       	ldd	r19, Y+24	; 0x18
    22e8:	02 2d       	mov	r16, r2
    22ea:	ee 24       	eor	r14, r14
    22ec:	e3 94       	inc	r14
    22ee:	72 ea       	ldi	r23, 0xA2	; 162
    22f0:	c7 2e       	mov	r12, r23
    22f2:	74 e0       	ldi	r23, 0x04	; 4
    22f4:	d7 2e       	mov	r13, r23
    22f6:	0e 94 60 13 	call	0x26c0	; 0x26c0 <STEPPER_step>
    22fa:	55 20       	and	r5, r5
    22fc:	09 f0       	breq	.+2      	; 0x2300 <STEPPER_stepmode+0xc0>
    22fe:	4a c0       	rjmp	.+148    	; 0x2394 <STEPPER_stepmode+0x154>
    2300:	00 d0       	rcall	.+0      	; 0x2302 <STEPPER_stepmode+0xc2>
    2302:	0f 92       	push	r0
    2304:	ed b7       	in	r30, 0x3d	; 61
    2306:	fe b7       	in	r31, 0x3e	; 62
    2308:	91 82       	std	Z+1, r9	; 0x01
    230a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    230c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    230e:	93 83       	std	Z+3, r25	; 0x03
    2310:	82 83       	std	Z+2, r24	; 0x02
    2312:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <STEPPER_wait_and_then>
    2316:	0f 90       	pop	r0
    2318:	0f 90       	pop	r0
    231a:	0f 90       	pop	r0
    231c:	3b c0       	rjmp	.+118    	; 0x2394 <STEPPER_stepmode+0x154>
    231e:	82 e0       	ldi	r24, 0x02	; 2
    2320:	61 e0       	ldi	r22, 0x01	; 1
    2322:	0e 94 29 13 	call	0x2652	; 0x2652 <STEPPER_set_mode>
    2326:	80 e0       	ldi	r24, 0x00	; 0
    2328:	b7 01       	movw	r22, r14
    232a:	0e 94 f2 12 	call	0x25e4	; 0x25e4 <STEPPER_set_accel>
    232e:	81 e0       	ldi	r24, 0x01	; 1
    2330:	b6 01       	movw	r22, r12
    2332:	0e 94 f2 12 	call	0x25e4	; 0x25e4 <STEPPER_set_accel>
    2336:	80 e0       	ldi	r24, 0x00	; 0
    2338:	64 2d       	mov	r22, r4
    233a:	a3 01       	movw	r20, r6
    233c:	98 01       	movw	r18, r16
    233e:	03 2d       	mov	r16, r3
    2340:	ee 24       	eor	r14, r14
    2342:	e3 94       	inc	r14
    2344:	92 ea       	ldi	r25, 0xA2	; 162
    2346:	c9 2e       	mov	r12, r25
    2348:	94 e0       	ldi	r25, 0x04	; 4
    234a:	d9 2e       	mov	r13, r25
    234c:	0e 94 60 13 	call	0x26c0	; 0x26c0 <STEPPER_step>
    2350:	81 e0       	ldi	r24, 0x01	; 1
    2352:	68 2d       	mov	r22, r8
    2354:	4d 89       	ldd	r20, Y+21	; 0x15
    2356:	5e 89       	ldd	r21, Y+22	; 0x16
    2358:	2f 89       	ldd	r18, Y+23	; 0x17
    235a:	38 8d       	ldd	r19, Y+24	; 0x18
    235c:	02 2d       	mov	r16, r2
    235e:	0e 94 60 13 	call	0x26c0	; 0x26c0 <STEPPER_step>
    2362:	55 20       	and	r5, r5
    2364:	b9 f4       	brne	.+46     	; 0x2394 <STEPPER_stepmode+0x154>
    2366:	00 d0       	rcall	.+0      	; 0x2368 <STEPPER_stepmode+0x128>
    2368:	00 d0       	rcall	.+0      	; 0x236a <STEPPER_stepmode+0x12a>
    236a:	0f 92       	push	r0
    236c:	ad b7       	in	r26, 0x3d	; 61
    236e:	be b7       	in	r27, 0x3e	; 62
    2370:	11 96       	adiw	r26, 0x01	; 1
    2372:	ed b7       	in	r30, 0x3d	; 61
    2374:	fe b7       	in	r31, 0x3e	; 62
    2376:	91 82       	std	Z+1, r9	; 0x01
    2378:	fd 01       	movw	r30, r26
    237a:	b2 82       	std	Z+2, r11	; 0x02
    237c:	a1 82       	std	Z+1, r10	; 0x01
    237e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2380:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2382:	94 83       	std	Z+4, r25	; 0x04
    2384:	83 83       	std	Z+3, r24	; 0x03
    2386:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <STEPPER_wait_and_then>
    238a:	0f 90       	pop	r0
    238c:	0f 90       	pop	r0
    238e:	0f 90       	pop	r0
    2390:	0f 90       	pop	r0
    2392:	0f 90       	pop	r0
    2394:	cf 91       	pop	r28
    2396:	df 91       	pop	r29
    2398:	1f 91       	pop	r17
    239a:	0f 91       	pop	r16
    239c:	ff 90       	pop	r15
    239e:	ef 90       	pop	r14
    23a0:	df 90       	pop	r13
    23a2:	cf 90       	pop	r12
    23a4:	bf 90       	pop	r11
    23a6:	af 90       	pop	r10
    23a8:	9f 90       	pop	r9
    23aa:	8f 90       	pop	r8
    23ac:	7f 90       	pop	r7
    23ae:	6f 90       	pop	r6
    23b0:	5f 90       	pop	r5
    23b2:	4f 90       	pop	r4
    23b4:	3f 90       	pop	r3
    23b6:	2f 90       	pop	r2
    23b8:	08 95       	ret

000023ba <STEPPER_move>:
    23ba:	6f 92       	push	r6
    23bc:	7f 92       	push	r7
    23be:	8f 92       	push	r8
    23c0:	9f 92       	push	r9
    23c2:	af 92       	push	r10
    23c4:	bf 92       	push	r11
    23c6:	cf 92       	push	r12
    23c8:	df 92       	push	r13
    23ca:	ef 92       	push	r14
    23cc:	ff 92       	push	r15
    23ce:	0f 93       	push	r16
    23d0:	1f 93       	push	r17
    23d2:	df 93       	push	r29
    23d4:	cf 93       	push	r28
    23d6:	cd b7       	in	r28, 0x3d	; 61
    23d8:	de b7       	in	r29, 0x3e	; 62
    23da:	94 2e       	mov	r9, r20
    23dc:	7c 2d       	mov	r23, r12
    23de:	d5 01       	movw	r26, r10
    23e0:	49 89       	ldd	r20, Y+17	; 0x11
    23e2:	5a 89       	ldd	r21, Y+18	; 0x12
    23e4:	ab 88       	ldd	r10, Y+19	; 0x13
    23e6:	bc 88       	ldd	r11, Y+20	; 0x14
    23e8:	cd 88       	ldd	r12, Y+21	; 0x15
    23ea:	de 88       	ldd	r13, Y+22	; 0x16
    23ec:	9f 89       	ldd	r25, Y+23	; 0x17
    23ee:	81 30       	cpi	r24, 0x01	; 1
    23f0:	09 f4       	brne	.+2      	; 0x23f4 <STEPPER_move+0x3a>
    23f2:	57 c0       	rjmp	.+174    	; 0x24a2 <STEPPER_move+0xe8>
    23f4:	81 30       	cpi	r24, 0x01	; 1
    23f6:	b8 f1       	brcs	.+110    	; 0x2466 <STEPPER_move+0xac>
    23f8:	82 30       	cpi	r24, 0x02	; 2
    23fa:	09 f0       	breq	.+2      	; 0x23fe <STEPPER_move+0x44>
    23fc:	76 c0       	rjmp	.+236    	; 0x24ea <STEPPER_move+0x130>
    23fe:	61 30       	cpi	r22, 0x01	; 1
    2400:	91 f0       	breq	.+36     	; 0x2426 <STEPPER_move+0x6c>
    2402:	61 30       	cpi	r22, 0x01	; 1
    2404:	20 f0       	brcs	.+8      	; 0x240e <STEPPER_move+0x54>
    2406:	62 30       	cpi	r22, 0x02	; 2
    2408:	09 f0       	breq	.+2      	; 0x240c <STEPPER_move+0x52>
    240a:	6f c0       	rjmp	.+222    	; 0x24ea <STEPPER_move+0x130>
    240c:	15 c0       	rjmp	.+42     	; 0x2438 <STEPPER_move+0x7e>
    240e:	80 e0       	ldi	r24, 0x00	; 0
    2410:	60 e0       	ldi	r22, 0x00	; 0
    2412:	0e 94 29 13 	call	0x2652	; 0x2652 <STEPPER_set_mode>
    2416:	80 e0       	ldi	r24, 0x00	; 0
    2418:	b7 01       	movw	r22, r14
    241a:	0e 94 f2 12 	call	0x25e4	; 0x25e4 <STEPPER_set_accel>
    241e:	80 e0       	ldi	r24, 0x00	; 0
    2420:	69 2d       	mov	r22, r9
    2422:	a8 01       	movw	r20, r16
    2424:	1d c0       	rjmp	.+58     	; 0x2460 <STEPPER_move+0xa6>
    2426:	81 e0       	ldi	r24, 0x01	; 1
    2428:	60 e0       	ldi	r22, 0x00	; 0
    242a:	0e 94 29 13 	call	0x2652	; 0x2652 <STEPPER_set_mode>
    242e:	81 e0       	ldi	r24, 0x01	; 1
    2430:	b6 01       	movw	r22, r12
    2432:	0e 94 f2 12 	call	0x25e4	; 0x25e4 <STEPPER_set_accel>
    2436:	11 c0       	rjmp	.+34     	; 0x245a <STEPPER_move+0xa0>
    2438:	82 e0       	ldi	r24, 0x02	; 2
    243a:	60 e0       	ldi	r22, 0x00	; 0
    243c:	0e 94 29 13 	call	0x2652	; 0x2652 <STEPPER_set_mode>
    2440:	80 e0       	ldi	r24, 0x00	; 0
    2442:	b7 01       	movw	r22, r14
    2444:	0e 94 f2 12 	call	0x25e4	; 0x25e4 <STEPPER_set_accel>
    2448:	81 e0       	ldi	r24, 0x01	; 1
    244a:	b6 01       	movw	r22, r12
    244c:	0e 94 f2 12 	call	0x25e4	; 0x25e4 <STEPPER_set_accel>
    2450:	80 e0       	ldi	r24, 0x00	; 0
    2452:	69 2d       	mov	r22, r9
    2454:	a8 01       	movw	r20, r16
    2456:	0e 94 db 12 	call	0x25b6	; 0x25b6 <STEPPER_run>
    245a:	81 e0       	ldi	r24, 0x01	; 1
    245c:	68 2d       	mov	r22, r8
    245e:	a5 01       	movw	r20, r10
    2460:	0e 94 db 12 	call	0x25b6	; 0x25b6 <STEPPER_run>
    2464:	42 c0       	rjmp	.+132    	; 0x24ea <STEPPER_move+0x130>
    2466:	ed b7       	in	r30, 0x3d	; 61
    2468:	fe b7       	in	r31, 0x3e	; 62
    246a:	39 97       	sbiw	r30, 0x09	; 9
    246c:	0f b6       	in	r0, 0x3f	; 63
    246e:	f8 94       	cli
    2470:	fe bf       	out	0x3e, r31	; 62
    2472:	0f be       	out	0x3f, r0	; 63
    2474:	ed bf       	out	0x3d, r30	; 61
    2476:	6d b6       	in	r6, 0x3d	; 61
    2478:	7e b6       	in	r7, 0x3e	; 62
    247a:	08 94       	sec
    247c:	61 1c       	adc	r6, r1
    247e:	71 1c       	adc	r7, r1
    2480:	52 83       	std	Z+2, r21	; 0x02
    2482:	41 83       	std	Z+1, r20	; 0x01
    2484:	f3 01       	movw	r30, r6
    2486:	b3 82       	std	Z+3, r11	; 0x03
    2488:	a2 82       	std	Z+2, r10	; 0x02
    248a:	d5 82       	std	Z+5, r13	; 0x05
    248c:	c4 82       	std	Z+4, r12	; 0x04
    248e:	96 83       	std	Z+6, r25	; 0x06
    2490:	88 8d       	ldd	r24, Y+24	; 0x18
    2492:	99 8d       	ldd	r25, Y+25	; 0x19
    2494:	90 87       	std	Z+8, r25	; 0x08
    2496:	87 83       	std	Z+7, r24	; 0x07
    2498:	80 e0       	ldi	r24, 0x00	; 0
    249a:	49 2d       	mov	r20, r9
    249c:	c7 2e       	mov	r12, r23
    249e:	5d 01       	movw	r10, r26
    24a0:	1a c0       	rjmp	.+52     	; 0x24d6 <STEPPER_move+0x11c>
    24a2:	ed b7       	in	r30, 0x3d	; 61
    24a4:	fe b7       	in	r31, 0x3e	; 62
    24a6:	39 97       	sbiw	r30, 0x09	; 9
    24a8:	0f b6       	in	r0, 0x3f	; 63
    24aa:	f8 94       	cli
    24ac:	fe bf       	out	0x3e, r31	; 62
    24ae:	0f be       	out	0x3f, r0	; 63
    24b0:	ed bf       	out	0x3d, r30	; 61
    24b2:	ad b7       	in	r26, 0x3d	; 61
    24b4:	be b7       	in	r27, 0x3e	; 62
    24b6:	11 96       	adiw	r26, 0x01	; 1
    24b8:	52 83       	std	Z+2, r21	; 0x02
    24ba:	41 83       	std	Z+1, r20	; 0x01
    24bc:	fd 01       	movw	r30, r26
    24be:	b3 82       	std	Z+3, r11	; 0x03
    24c0:	a2 82       	std	Z+2, r10	; 0x02
    24c2:	d5 82       	std	Z+5, r13	; 0x05
    24c4:	c4 82       	std	Z+4, r12	; 0x04
    24c6:	96 83       	std	Z+6, r25	; 0x06
    24c8:	10 86       	std	Z+8, r1	; 0x08
    24ca:	17 82       	std	Z+7, r1	; 0x07
    24cc:	81 e0       	ldi	r24, 0x01	; 1
    24ce:	49 2d       	mov	r20, r9
    24d0:	c7 2e       	mov	r12, r23
    24d2:	aa 24       	eor	r10, r10
    24d4:	bb 24       	eor	r11, r11
    24d6:	0e 94 20 11 	call	0x2240	; 0x2240 <STEPPER_stepmode>
    24da:	8d b7       	in	r24, 0x3d	; 61
    24dc:	9e b7       	in	r25, 0x3e	; 62
    24de:	09 96       	adiw	r24, 0x09	; 9
    24e0:	0f b6       	in	r0, 0x3f	; 63
    24e2:	f8 94       	cli
    24e4:	9e bf       	out	0x3e, r25	; 62
    24e6:	0f be       	out	0x3f, r0	; 63
    24e8:	8d bf       	out	0x3d, r24	; 61
    24ea:	cf 91       	pop	r28
    24ec:	df 91       	pop	r29
    24ee:	1f 91       	pop	r17
    24f0:	0f 91       	pop	r16
    24f2:	ff 90       	pop	r15
    24f4:	ef 90       	pop	r14
    24f6:	df 90       	pop	r13
    24f8:	cf 90       	pop	r12
    24fa:	bf 90       	pop	r11
    24fc:	af 90       	pop	r10
    24fe:	9f 90       	pop	r9
    2500:	8f 90       	pop	r8
    2502:	7f 90       	pop	r7
    2504:	6f 90       	pop	r6
    2506:	08 95       	ret

00002508 <STEPPER_open>:
    2508:	0e 94 8b 1b 	call	0x3716	; 0x3716 <__STEPPER_init>
    250c:	81 e0       	ldi	r24, 0x01	; 1
    250e:	80 93 a1 04 	sts	0x04A1, r24
    2512:	eb e6       	ldi	r30, 0x6B	; 107
    2514:	f4 e0       	ldi	r31, 0x04	; 4
    2516:	11 92       	st	Z+, r1
    2518:	11 92       	st	Z+, r1
    251a:	11 82       	std	Z+1, r1	; 0x01
    251c:	10 82       	st	Z, r1
    251e:	32 96       	adiw	r30, 0x02	; 2
    2520:	11 82       	std	Z+1, r1	; 0x01
    2522:	10 82       	st	Z, r1
    2524:	32 96       	adiw	r30, 0x02	; 2
    2526:	11 82       	std	Z+1, r1	; 0x01
    2528:	10 82       	st	Z, r1
    252a:	32 96       	adiw	r30, 0x02	; 2
    252c:	11 82       	std	Z+1, r1	; 0x01
    252e:	10 82       	st	Z, r1
    2530:	32 96       	adiw	r30, 0x02	; 2
    2532:	11 82       	std	Z+1, r1	; 0x01
    2534:	10 82       	st	Z, r1
    2536:	32 96       	adiw	r30, 0x02	; 2
    2538:	11 82       	std	Z+1, r1	; 0x01
    253a:	10 82       	st	Z, r1
    253c:	32 96       	adiw	r30, 0x02	; 2
    253e:	11 82       	std	Z+1, r1	; 0x01
    2540:	10 82       	st	Z, r1
    2542:	32 96       	adiw	r30, 0x02	; 2
    2544:	11 82       	std	Z+1, r1	; 0x01
    2546:	10 82       	st	Z, r1
    2548:	32 96       	adiw	r30, 0x02	; 2
    254a:	11 82       	std	Z+1, r1	; 0x01
    254c:	10 82       	st	Z, r1
    254e:	32 96       	adiw	r30, 0x02	; 2
    2550:	11 82       	std	Z+1, r1	; 0x01
    2552:	10 82       	st	Z, r1
    2554:	32 96       	adiw	r30, 0x02	; 2
    2556:	11 82       	std	Z+1, r1	; 0x01
    2558:	10 82       	st	Z, r1
    255a:	32 96       	adiw	r30, 0x02	; 2
    255c:	11 82       	std	Z+1, r1	; 0x01
    255e:	10 82       	st	Z, r1
    2560:	36 96       	adiw	r30, 0x06	; 6
    2562:	11 92       	st	Z+, r1
    2564:	11 92       	st	Z+, r1
    2566:	11 92       	st	Z+, r1
    2568:	10 82       	st	Z, r1
    256a:	32 96       	adiw	r30, 0x02	; 2
    256c:	11 92       	st	Z+, r1
    256e:	11 92       	st	Z+, r1
    2570:	11 92       	st	Z+, r1
    2572:	11 92       	st	Z+, r1
    2574:	11 92       	st	Z+, r1
    2576:	11 92       	st	Z+, r1
    2578:	11 92       	st	Z+, r1
    257a:	11 82       	std	Z+1, r1	; 0x01
    257c:	10 82       	st	Z, r1
    257e:	32 96       	adiw	r30, 0x02	; 2
    2580:	11 82       	std	Z+1, r1	; 0x01
    2582:	10 82       	st	Z, r1
    2584:	32 96       	adiw	r30, 0x02	; 2
    2586:	11 82       	std	Z+1, r1	; 0x01
    2588:	10 82       	st	Z, r1
    258a:	32 96       	adiw	r30, 0x02	; 2
    258c:	11 82       	std	Z+1, r1	; 0x01
    258e:	10 82       	st	Z, r1
    2590:	76 97       	sbiw	r30, 0x16	; 22
    2592:	11 82       	std	Z+1, r1	; 0x01
    2594:	10 82       	st	Z, r1
    2596:	32 96       	adiw	r30, 0x02	; 2
    2598:	11 82       	std	Z+1, r1	; 0x01
    259a:	10 82       	st	Z, r1
    259c:	10 92 a0 04 	sts	0x04A0, r1
    25a0:	10 92 9f 04 	sts	0x049F, r1
    25a4:	10 92 a1 04 	sts	0x04A1, r1
    25a8:	87 e0       	ldi	r24, 0x07	; 7
    25aa:	61 e0       	ldi	r22, 0x01	; 1
    25ac:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    25b0:	87 e0       	ldi	r24, 0x07	; 7
    25b2:	91 e0       	ldi	r25, 0x01	; 1
    25b4:	08 95       	ret

000025b6 <STEPPER_run>:
    25b6:	ef 92       	push	r14
    25b8:	ff 92       	push	r15
    25ba:	0f 93       	push	r16
    25bc:	1f 93       	push	r17
    25be:	18 2f       	mov	r17, r24
    25c0:	06 2f       	mov	r16, r22
    25c2:	7a 01       	movw	r14, r20
    25c4:	60 e0       	ldi	r22, 0x00	; 0
    25c6:	0e 94 29 13 	call	0x2652	; 0x2652 <STEPPER_set_mode>
    25ca:	81 2f       	mov	r24, r17
    25cc:	60 2f       	mov	r22, r16
    25ce:	0e 94 14 13 	call	0x2628	; 0x2628 <STEPPER_set_dir>
    25d2:	81 2f       	mov	r24, r17
    25d4:	b7 01       	movw	r22, r14
    25d6:	0e 94 3e 13 	call	0x267c	; 0x267c <STEPPER_set_speed>
    25da:	1f 91       	pop	r17
    25dc:	0f 91       	pop	r16
    25de:	ff 90       	pop	r15
    25e0:	ef 90       	pop	r14
    25e2:	08 95       	ret

000025e4 <STEPPER_set_accel>:
    25e4:	48 2f       	mov	r20, r24
    25e6:	81 e0       	ldi	r24, 0x01	; 1
    25e8:	80 93 a1 04 	sts	0x04A1, r24
    25ec:	cb 01       	movw	r24, r22
    25ee:	23 e0       	ldi	r18, 0x03	; 3
    25f0:	69 3e       	cpi	r22, 0xE9	; 233
    25f2:	72 07       	cpc	r23, r18
    25f4:	10 f0       	brcs	.+4      	; 0x25fa <STEPPER_set_accel+0x16>
    25f6:	88 ee       	ldi	r24, 0xE8	; 232
    25f8:	93 e0       	ldi	r25, 0x03	; 3
    25fa:	41 30       	cpi	r20, 0x01	; 1
    25fc:	71 f0       	breq	.+28     	; 0x261a <STEPPER_set_accel+0x36>
    25fe:	41 30       	cpi	r20, 0x01	; 1
    2600:	18 f0       	brcs	.+6      	; 0x2608 <STEPPER_set_accel+0x24>
    2602:	42 30       	cpi	r20, 0x02	; 2
    2604:	71 f4       	brne	.+28     	; 0x2622 <STEPPER_set_accel+0x3e>
    2606:	05 c0       	rjmp	.+10     	; 0x2612 <STEPPER_set_accel+0x2e>
    2608:	90 93 76 04 	sts	0x0476, r25
    260c:	80 93 75 04 	sts	0x0475, r24
    2610:	08 c0       	rjmp	.+16     	; 0x2622 <STEPPER_set_accel+0x3e>
    2612:	90 93 76 04 	sts	0x0476, r25
    2616:	80 93 75 04 	sts	0x0475, r24
    261a:	90 93 78 04 	sts	0x0478, r25
    261e:	80 93 77 04 	sts	0x0477, r24
    2622:	10 92 a1 04 	sts	0x04A1, r1
    2626:	08 95       	ret

00002628 <STEPPER_set_dir>:
    2628:	98 2f       	mov	r25, r24
    262a:	81 e0       	ldi	r24, 0x01	; 1
    262c:	80 93 a1 04 	sts	0x04A1, r24
    2630:	91 30       	cpi	r25, 0x01	; 1
    2632:	51 f0       	breq	.+20     	; 0x2648 <STEPPER_set_dir+0x20>
    2634:	91 30       	cpi	r25, 0x01	; 1
    2636:	18 f0       	brcs	.+6      	; 0x263e <STEPPER_set_dir+0x16>
    2638:	92 30       	cpi	r25, 0x02	; 2
    263a:	41 f4       	brne	.+16     	; 0x264c <STEPPER_set_dir+0x24>
    263c:	03 c0       	rjmp	.+6      	; 0x2644 <STEPPER_set_dir+0x1c>
    263e:	60 93 8e 04 	sts	0x048E, r22
    2642:	04 c0       	rjmp	.+8      	; 0x264c <STEPPER_set_dir+0x24>
    2644:	60 93 8e 04 	sts	0x048E, r22
    2648:	60 93 8f 04 	sts	0x048F, r22
    264c:	10 92 a1 04 	sts	0x04A1, r1
    2650:	08 95       	ret

00002652 <STEPPER_set_mode>:
    2652:	98 2f       	mov	r25, r24
    2654:	81 e0       	ldi	r24, 0x01	; 1
    2656:	80 93 a1 04 	sts	0x04A1, r24
    265a:	91 30       	cpi	r25, 0x01	; 1
    265c:	51 f0       	breq	.+20     	; 0x2672 <STEPPER_set_mode+0x20>
    265e:	91 30       	cpi	r25, 0x01	; 1
    2660:	18 f0       	brcs	.+6      	; 0x2668 <STEPPER_set_mode+0x16>
    2662:	92 30       	cpi	r25, 0x02	; 2
    2664:	41 f4       	brne	.+16     	; 0x2676 <STEPPER_set_mode+0x24>
    2666:	03 c0       	rjmp	.+6      	; 0x266e <STEPPER_set_mode+0x1c>
    2668:	60 93 6b 04 	sts	0x046B, r22
    266c:	04 c0       	rjmp	.+8      	; 0x2676 <STEPPER_set_mode+0x24>
    266e:	60 93 6b 04 	sts	0x046B, r22
    2672:	60 93 6c 04 	sts	0x046C, r22
    2676:	10 92 a1 04 	sts	0x04A1, r1
    267a:	08 95       	ret

0000267c <STEPPER_set_speed>:
    267c:	48 2f       	mov	r20, r24
    267e:	81 e0       	ldi	r24, 0x01	; 1
    2680:	80 93 a1 04 	sts	0x04A1, r24
    2684:	cb 01       	movw	r24, r22
    2686:	21 e0       	ldi	r18, 0x01	; 1
    2688:	61 39       	cpi	r22, 0x91	; 145
    268a:	72 07       	cpc	r23, r18
    268c:	10 f0       	brcs	.+4      	; 0x2692 <STEPPER_set_speed+0x16>
    268e:	80 e9       	ldi	r24, 0x90	; 144
    2690:	91 e0       	ldi	r25, 0x01	; 1
    2692:	41 30       	cpi	r20, 0x01	; 1
    2694:	71 f0       	breq	.+28     	; 0x26b2 <STEPPER_set_speed+0x36>
    2696:	41 30       	cpi	r20, 0x01	; 1
    2698:	18 f0       	brcs	.+6      	; 0x26a0 <STEPPER_set_speed+0x24>
    269a:	42 30       	cpi	r20, 0x02	; 2
    269c:	71 f4       	brne	.+28     	; 0x26ba <STEPPER_set_speed+0x3e>
    269e:	05 c0       	rjmp	.+10     	; 0x26aa <STEPPER_set_speed+0x2e>
    26a0:	90 93 6e 04 	sts	0x046E, r25
    26a4:	80 93 6d 04 	sts	0x046D, r24
    26a8:	08 c0       	rjmp	.+16     	; 0x26ba <STEPPER_set_speed+0x3e>
    26aa:	90 93 6e 04 	sts	0x046E, r25
    26ae:	80 93 6d 04 	sts	0x046D, r24
    26b2:	90 93 70 04 	sts	0x0470, r25
    26b6:	80 93 6f 04 	sts	0x046F, r24
    26ba:	10 92 a1 04 	sts	0x04A1, r1
    26be:	08 95       	ret

000026c0 <STEPPER_step>:
    26c0:	8f 92       	push	r8
    26c2:	9f 92       	push	r9
    26c4:	af 92       	push	r10
    26c6:	bf 92       	push	r11
    26c8:	cf 92       	push	r12
    26ca:	df 92       	push	r13
    26cc:	ef 92       	push	r14
    26ce:	ff 92       	push	r15
    26d0:	0f 93       	push	r16
    26d2:	1f 93       	push	r17
    26d4:	cf 93       	push	r28
    26d6:	df 93       	push	r29
    26d8:	18 2f       	mov	r17, r24
    26da:	f6 2e       	mov	r15, r22
    26dc:	5a 01       	movw	r10, r20
    26de:	49 01       	movw	r8, r18
    26e0:	e6 01       	movw	r28, r12
    26e2:	61 e0       	ldi	r22, 0x01	; 1
    26e4:	0e 94 29 13 	call	0x2652	; 0x2652 <STEPPER_set_mode>
    26e8:	81 2f       	mov	r24, r17
    26ea:	b5 01       	movw	r22, r10
    26ec:	a4 01       	movw	r20, r8
    26ee:	0e 94 c5 1b 	call	0x378a	; 0x378a <STEPPER_setup_decels>
    26f2:	81 2f       	mov	r24, r17
    26f4:	6f 2d       	mov	r22, r15
    26f6:	0e 94 14 13 	call	0x2628	; 0x2628 <STEPPER_set_dir>
    26fa:	81 2f       	mov	r24, r17
    26fc:	60 2f       	mov	r22, r16
    26fe:	0e 94 b0 1b 	call	0x3760	; 0x3760 <STEPPER_set_stop_mode>
    2702:	81 2f       	mov	r24, r17
    2704:	b5 01       	movw	r22, r10
    2706:	0e 94 95 1b 	call	0x372a	; 0x372a <STEPPER_set_steps>
    270a:	c1 14       	cp	r12, r1
    270c:	d1 04       	cpc	r13, r1
    270e:	99 f0       	breq	.+38     	; 0x2736 <STEPPER_step+0x76>
    2710:	11 30       	cpi	r17, 0x01	; 1
    2712:	49 f0       	breq	.+18     	; 0x2726 <STEPPER_step+0x66>
    2714:	11 30       	cpi	r17, 0x01	; 1
    2716:	18 f0       	brcs	.+6      	; 0x271e <STEPPER_step+0x5e>
    2718:	12 30       	cpi	r17, 0x02	; 2
    271a:	69 f4       	brne	.+26     	; 0x2736 <STEPPER_step+0x76>
    271c:	06 c0       	rjmp	.+12     	; 0x272a <STEPPER_step+0x6a>
    271e:	18 82       	st	Y, r1
    2720:	10 92 9d 04 	sts	0x049D, r1
    2724:	08 c0       	rjmp	.+16     	; 0x2736 <STEPPER_step+0x76>
    2726:	19 82       	std	Y+1, r1	; 0x01
    2728:	04 c0       	rjmp	.+8      	; 0x2732 <STEPPER_step+0x72>
    272a:	18 82       	st	Y, r1
    272c:	19 82       	std	Y+1, r1	; 0x01
    272e:	10 92 9d 04 	sts	0x049D, r1
    2732:	10 92 9e 04 	sts	0x049E, r1
    2736:	d0 93 a0 04 	sts	0x04A0, r29
    273a:	c0 93 9f 04 	sts	0x049F, r28
    273e:	ee 20       	and	r14, r14
    2740:	b9 f5       	brne	.+110    	; 0x27b0 <STEPPER_step+0xf0>
    2742:	8e e0       	ldi	r24, 0x0E	; 14
    2744:	92 e0       	ldi	r25, 0x02	; 2
    2746:	90 93 a0 04 	sts	0x04A0, r25
    274a:	80 93 9f 04 	sts	0x049F, r24
    274e:	81 2f       	mov	r24, r17
    2750:	b4 01       	movw	r22, r8
    2752:	0e 94 3e 13 	call	0x267c	; 0x267c <STEPPER_set_speed>
    2756:	81 2f       	mov	r24, r17
    2758:	0e 94 76 1b 	call	0x36ec	; 0x36ec <STEPPER_go>
    275c:	11 30       	cpi	r17, 0x01	; 1
    275e:	71 f0       	breq	.+28     	; 0x277c <STEPPER_step+0xbc>
    2760:	11 30       	cpi	r17, 0x01	; 1
    2762:	18 f0       	brcs	.+6      	; 0x276a <STEPPER_step+0xaa>
    2764:	12 30       	cpi	r17, 0x02	; 2
    2766:	59 f5       	brne	.+86     	; 0x27be <STEPPER_step+0xfe>
    2768:	12 c0       	rjmp	.+36     	; 0x278e <STEPPER_step+0xce>
    276a:	10 92 0e 02 	sts	0x020E, r1
    276e:	10 92 9d 04 	sts	0x049D, r1
    2772:	80 91 0e 02 	lds	r24, 0x020E
    2776:	88 23       	and	r24, r24
    2778:	e1 f3       	breq	.-8      	; 0x2772 <STEPPER_step+0xb2>
    277a:	21 c0       	rjmp	.+66     	; 0x27be <STEPPER_step+0xfe>
    277c:	10 92 0f 02 	sts	0x020F, r1
    2780:	10 92 9e 04 	sts	0x049E, r1
    2784:	80 91 0f 02 	lds	r24, 0x020F
    2788:	88 23       	and	r24, r24
    278a:	e1 f3       	breq	.-8      	; 0x2784 <STEPPER_step+0xc4>
    278c:	18 c0       	rjmp	.+48     	; 0x27be <STEPPER_step+0xfe>
    278e:	10 92 0e 02 	sts	0x020E, r1
    2792:	10 92 0f 02 	sts	0x020F, r1
    2796:	10 92 9d 04 	sts	0x049D, r1
    279a:	10 92 9e 04 	sts	0x049E, r1
    279e:	80 91 0e 02 	lds	r24, 0x020E
    27a2:	88 23       	and	r24, r24
    27a4:	e1 f3       	breq	.-8      	; 0x279e <STEPPER_step+0xde>
    27a6:	80 91 0f 02 	lds	r24, 0x020F
    27aa:	88 23       	and	r24, r24
    27ac:	c1 f3       	breq	.-16     	; 0x279e <STEPPER_step+0xde>
    27ae:	07 c0       	rjmp	.+14     	; 0x27be <STEPPER_step+0xfe>
    27b0:	81 2f       	mov	r24, r17
    27b2:	b4 01       	movw	r22, r8
    27b4:	0e 94 3e 13 	call	0x267c	; 0x267c <STEPPER_set_speed>
    27b8:	81 2f       	mov	r24, r17
    27ba:	0e 94 76 1b 	call	0x36ec	; 0x36ec <STEPPER_go>
    27be:	df 91       	pop	r29
    27c0:	cf 91       	pop	r28
    27c2:	1f 91       	pop	r17
    27c4:	0f 91       	pop	r16
    27c6:	ff 90       	pop	r15
    27c8:	ef 90       	pop	r14
    27ca:	df 90       	pop	r13
    27cc:	cf 90       	pop	r12
    27ce:	bf 90       	pop	r11
    27d0:	af 90       	pop	r10
    27d2:	9f 90       	pop	r9
    27d4:	8f 90       	pop	r8
    27d6:	08 95       	ret

000027d8 <STEPPER_wait_and_then>:
    27d8:	cf 92       	push	r12
    27da:	df 92       	push	r13
    27dc:	ef 92       	push	r14
    27de:	ff 92       	push	r15
    27e0:	0f 93       	push	r16
    27e2:	1f 93       	push	r17
    27e4:	df 93       	push	r29
    27e6:	cf 93       	push	r28
    27e8:	cd b7       	in	r28, 0x3d	; 61
    27ea:	de b7       	in	r29, 0x3e	; 62
    27ec:	8b 85       	ldd	r24, Y+11	; 0x0b
    27ee:	81 30       	cpi	r24, 0x01	; 1
    27f0:	61 f0       	breq	.+24     	; 0x280a <STEPPER_wait_and_then+0x32>
    27f2:	81 30       	cpi	r24, 0x01	; 1
    27f4:	18 f0       	brcs	.+6      	; 0x27fc <STEPPER_wait_and_then+0x24>
    27f6:	82 30       	cpi	r24, 0x02	; 2
    27f8:	a1 f5       	brne	.+104    	; 0x2862 <STEPPER_wait_and_then+0x8a>
    27fa:	11 c0       	rjmp	.+34     	; 0x281e <STEPPER_wait_and_then+0x46>
    27fc:	ec 85       	ldd	r30, Y+12	; 0x0c
    27fe:	fd 85       	ldd	r31, Y+13	; 0x0d
    2800:	80 91 a2 04 	lds	r24, 0x04A2
    2804:	88 23       	and	r24, r24
    2806:	e1 f3       	breq	.-8      	; 0x2800 <STEPPER_wait_and_then+0x28>
    2808:	06 c0       	rjmp	.+12     	; 0x2816 <STEPPER_wait_and_then+0x3e>
    280a:	ec 85       	ldd	r30, Y+12	; 0x0c
    280c:	fd 85       	ldd	r31, Y+13	; 0x0d
    280e:	80 91 a3 04 	lds	r24, 0x04A3
    2812:	88 23       	and	r24, r24
    2814:	e1 f3       	breq	.-8      	; 0x280e <STEPPER_wait_and_then+0x36>
    2816:	30 97       	sbiw	r30, 0x00	; 0
    2818:	21 f1       	breq	.+72     	; 0x2862 <STEPPER_wait_and_then+0x8a>
    281a:	09 95       	icall
    281c:	22 c0       	rjmp	.+68     	; 0x2862 <STEPPER_wait_and_then+0x8a>
    281e:	cc 84       	ldd	r12, Y+12	; 0x0c
    2820:	dd 84       	ldd	r13, Y+13	; 0x0d
    2822:	ee 84       	ldd	r14, Y+14	; 0x0e
    2824:	ff 84       	ldd	r15, Y+15	; 0x0f
    2826:	00 e0       	ldi	r16, 0x00	; 0
    2828:	10 e0       	ldi	r17, 0x00	; 0
    282a:	00 23       	and	r16, r16
    282c:	51 f4       	brne	.+20     	; 0x2842 <STEPPER_wait_and_then+0x6a>
    282e:	80 91 a2 04 	lds	r24, 0x04A2
    2832:	88 23       	and	r24, r24
    2834:	31 f0       	breq	.+12     	; 0x2842 <STEPPER_wait_and_then+0x6a>
    2836:	c1 14       	cp	r12, r1
    2838:	d1 04       	cpc	r13, r1
    283a:	11 f0       	breq	.+4      	; 0x2840 <STEPPER_wait_and_then+0x68>
    283c:	f6 01       	movw	r30, r12
    283e:	09 95       	icall
    2840:	01 e0       	ldi	r16, 0x01	; 1
    2842:	11 23       	and	r17, r17
    2844:	51 f4       	brne	.+20     	; 0x285a <STEPPER_wait_and_then+0x82>
    2846:	80 91 a3 04 	lds	r24, 0x04A3
    284a:	88 23       	and	r24, r24
    284c:	31 f0       	breq	.+12     	; 0x285a <STEPPER_wait_and_then+0x82>
    284e:	e1 14       	cp	r14, r1
    2850:	f1 04       	cpc	r15, r1
    2852:	11 f0       	breq	.+4      	; 0x2858 <STEPPER_wait_and_then+0x80>
    2854:	f7 01       	movw	r30, r14
    2856:	09 95       	icall
    2858:	11 e0       	ldi	r17, 0x01	; 1
    285a:	00 23       	and	r16, r16
    285c:	31 f3       	breq	.-52     	; 0x282a <STEPPER_wait_and_then+0x52>
    285e:	11 23       	and	r17, r17
    2860:	21 f3       	breq	.-56     	; 0x282a <STEPPER_wait_and_then+0x52>
    2862:	cf 91       	pop	r28
    2864:	df 91       	pop	r29
    2866:	1f 91       	pop	r17
    2868:	0f 91       	pop	r16
    286a:	ff 90       	pop	r15
    286c:	ef 90       	pop	r14
    286e:	df 90       	pop	r13
    2870:	cf 90       	pop	r12
    2872:	08 95       	ret

00002874 <SYS_get_state>:
    2874:	e8 2f       	mov	r30, r24
    2876:	f0 e0       	ldi	r31, 0x00	; 0
    2878:	e3 31       	cpi	r30, 0x13	; 19
    287a:	f1 05       	cpc	r31, r1
    287c:	40 f4       	brcc	.+16     	; 0x288e <SYS_get_state+0x1a>
    287e:	e2 5c       	subi	r30, 0xC2	; 194
    2880:	ff 4f       	sbci	r31, 0xFF	; 255
    2882:	ee 0f       	add	r30, r30
    2884:	ff 1f       	adc	r31, r31
    2886:	05 90       	lpm	r0, Z+
    2888:	f4 91       	lpm	r31, Z+
    288a:	e0 2d       	mov	r30, r0
    288c:	09 94       	ijmp
    288e:	80 e0       	ldi	r24, 0x00	; 0
    2890:	08 95       	ret
    2892:	80 91 a4 04 	lds	r24, 0x04A4
    2896:	08 95       	ret
    2898:	80 91 a5 04 	lds	r24, 0x04A5
    289c:	08 95       	ret
    289e:	80 91 a6 04 	lds	r24, 0x04A6
    28a2:	08 95       	ret
    28a4:	80 91 a7 04 	lds	r24, 0x04A7
    28a8:	08 95       	ret
    28aa:	80 91 a8 04 	lds	r24, 0x04A8
    28ae:	08 95       	ret
    28b0:	80 91 aa 04 	lds	r24, 0x04AA
    28b4:	08 95       	ret
    28b6:	80 91 a9 04 	lds	r24, 0x04A9
    28ba:	08 95       	ret
    28bc:	80 91 ab 04 	lds	r24, 0x04AB
    28c0:	08 95       	ret
    28c2:	80 91 ac 04 	lds	r24, 0x04AC
    28c6:	08 95       	ret
    28c8:	80 91 ad 04 	lds	r24, 0x04AD
    28cc:	08 95       	ret
    28ce:	80 91 ae 04 	lds	r24, 0x04AE
    28d2:	08 95       	ret
    28d4:	80 91 af 04 	lds	r24, 0x04AF
    28d8:	08 95       	ret
    28da:	80 91 b0 04 	lds	r24, 0x04B0
    28de:	08 95       	ret
    28e0:	80 91 b1 04 	lds	r24, 0x04B1
    28e4:	08 95       	ret
    28e6:	80 91 b2 04 	lds	r24, 0x04B2
    28ea:	08 95       	ret
    28ec:	80 91 b3 04 	lds	r24, 0x04B3
    28f0:	08 95       	ret
    28f2:	80 91 b4 04 	lds	r24, 0x04B4
    28f6:	08 95       	ret
    28f8:	80 91 b5 04 	lds	r24, 0x04B5
    28fc:	08 95       	ret
    28fe:	80 91 b6 04 	lds	r24, 0x04B6
    2902:	08 95       	ret

00002904 <SYS_set_state>:
    2904:	e8 2f       	mov	r30, r24
    2906:	f0 e0       	ldi	r31, 0x00	; 0
    2908:	e3 31       	cpi	r30, 0x13	; 19
    290a:	f1 05       	cpc	r31, r1
    290c:	08 f0       	brcs	.+2      	; 0x2910 <SYS_set_state+0xc>
    290e:	40 c0       	rjmp	.+128    	; 0x2990 <SYS_set_state+0x8c>
    2910:	ef 5a       	subi	r30, 0xAF	; 175
    2912:	ff 4f       	sbci	r31, 0xFF	; 255
    2914:	ee 0f       	add	r30, r30
    2916:	ff 1f       	adc	r31, r31
    2918:	05 90       	lpm	r0, Z+
    291a:	f4 91       	lpm	r31, Z+
    291c:	e0 2d       	mov	r30, r0
    291e:	09 94       	ijmp
    2920:	60 93 a4 04 	sts	0x04A4, r22
    2924:	08 95       	ret
    2926:	60 93 a5 04 	sts	0x04A5, r22
    292a:	08 95       	ret
    292c:	60 93 a6 04 	sts	0x04A6, r22
    2930:	08 95       	ret
    2932:	60 93 a7 04 	sts	0x04A7, r22
    2936:	08 95       	ret
    2938:	60 93 a8 04 	sts	0x04A8, r22
    293c:	08 95       	ret
    293e:	60 93 aa 04 	sts	0x04AA, r22
    2942:	08 95       	ret
    2944:	60 93 a9 04 	sts	0x04A9, r22
    2948:	08 95       	ret
    294a:	60 93 ab 04 	sts	0x04AB, r22
    294e:	08 95       	ret
    2950:	60 93 ac 04 	sts	0x04AC, r22
    2954:	08 95       	ret
    2956:	60 93 ad 04 	sts	0x04AD, r22
    295a:	08 95       	ret
    295c:	60 93 ae 04 	sts	0x04AE, r22
    2960:	08 95       	ret
    2962:	60 93 af 04 	sts	0x04AF, r22
    2966:	08 95       	ret
    2968:	60 93 b0 04 	sts	0x04B0, r22
    296c:	08 95       	ret
    296e:	60 93 b1 04 	sts	0x04B1, r22
    2972:	08 95       	ret
    2974:	60 93 b2 04 	sts	0x04B2, r22
    2978:	08 95       	ret
    297a:	60 93 b3 04 	sts	0x04B3, r22
    297e:	08 95       	ret
    2980:	60 93 b4 04 	sts	0x04B4, r22
    2984:	08 95       	ret
    2986:	60 93 b5 04 	sts	0x04B5, r22
    298a:	08 95       	ret
    298c:	60 93 b4 04 	sts	0x04B4, r22
    2990:	08 95       	ret

00002992 <ATTINY_get_SW_state>:
    2992:	1f 93       	push	r17
    2994:	cf 93       	push	r28
    2996:	df 93       	push	r29
    2998:	18 2f       	mov	r17, r24
    299a:	80 91 11 02 	lds	r24, 0x0211
    299e:	88 23       	and	r24, r24
    29a0:	41 f0       	breq	.+16     	; 0x29b2 <ATTINY_get_SW_state+0x20>
    29a2:	80 91 1b 02 	lds	r24, 0x021B
    29a6:	88 23       	and	r24, r24
    29a8:	99 f0       	breq	.+38     	; 0x29d0 <ATTINY_get_SW_state+0x3e>
    29aa:	10 92 11 02 	sts	0x0211, r1
    29ae:	10 92 1b 02 	sts	0x021B, r1
    29b2:	0e 94 25 1c 	call	0x384a	; 0x384a <ATTINY_get_sensors>
    29b6:	80 93 10 02 	sts	0x0210, r24
    29ba:	85 e1       	ldi	r24, 0x15	; 21
    29bc:	92 e0       	ldi	r25, 0x02	; 2
    29be:	61 e0       	ldi	r22, 0x01	; 1
    29c0:	40 e0       	ldi	r20, 0x00	; 0
    29c2:	22 e3       	ldi	r18, 0x32	; 50
    29c4:	30 e0       	ldi	r19, 0x00	; 0
    29c6:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <TMRSRVC_new>
    29ca:	81 e0       	ldi	r24, 0x01	; 1
    29cc:	80 93 11 02 	sts	0x0211, r24
    29d0:	90 91 10 02 	lds	r25, 0x0210
    29d4:	a1 2f       	mov	r26, r17
    29d6:	b0 e0       	ldi	r27, 0x00	; 0
    29d8:	ed 01       	movw	r28, r26
    29da:	c9 56       	subi	r28, 0x69	; 105
    29dc:	de 4f       	sbci	r29, 0xFE	; 254
    29de:	88 81       	ld	r24, Y
    29e0:	88 23       	and	r24, r24
    29e2:	69 f0       	breq	.+26     	; 0x29fe <ATTINY_get_SW_state+0x6c>
    29e4:	fd 01       	movw	r30, r26
    29e6:	e6 56       	subi	r30, 0x66	; 102
    29e8:	fe 4f       	sbci	r31, 0xFE	; 254
    29ea:	80 81       	ld	r24, Z
    29ec:	98 23       	and	r25, r24
    29ee:	c1 f0       	breq	.+48     	; 0x2a20 <ATTINY_get_SW_state+0x8e>
    29f0:	fd 01       	movw	r30, r26
    29f2:	ee 5e       	subi	r30, 0xEE	; 238
    29f4:	fd 4f       	sbci	r31, 0xFD	; 253
    29f6:	81 e0       	ldi	r24, 0x01	; 1
    29f8:	80 83       	st	Z, r24
    29fa:	18 82       	st	Y, r1
    29fc:	11 c0       	rjmp	.+34     	; 0x2a20 <ATTINY_get_SW_state+0x8e>
    29fe:	fd 01       	movw	r30, r26
    2a00:	ee 5e       	subi	r30, 0xEE	; 238
    2a02:	fd 4f       	sbci	r31, 0xFD	; 253
    2a04:	80 81       	ld	r24, Z
    2a06:	81 11       	cpse	r24, r1
    2a08:	10 82       	st	Z, r1
    2a0a:	fd 01       	movw	r30, r26
    2a0c:	e6 56       	subi	r30, 0x66	; 102
    2a0e:	fe 4f       	sbci	r31, 0xFE	; 254
    2a10:	80 81       	ld	r24, Z
    2a12:	98 23       	and	r25, r24
    2a14:	29 f4       	brne	.+10     	; 0x2a20 <ATTINY_get_SW_state+0x8e>
    2a16:	fd 01       	movw	r30, r26
    2a18:	e9 56       	subi	r30, 0x69	; 105
    2a1a:	fe 4f       	sbci	r31, 0xFE	; 254
    2a1c:	81 e0       	ldi	r24, 0x01	; 1
    2a1e:	80 83       	st	Z, r24
    2a20:	ae 5e       	subi	r26, 0xEE	; 238
    2a22:	bd 4f       	sbci	r27, 0xFD	; 253
    2a24:	8c 91       	ld	r24, X
    2a26:	df 91       	pop	r29
    2a28:	cf 91       	pop	r28
    2a2a:	1f 91       	pop	r17
    2a2c:	08 95       	ret

00002a2e <ATTINY_open>:
    2a2e:	82 e0       	ldi	r24, 0x02	; 2
    2a30:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    2a34:	88 23       	and	r24, r24
    2a36:	19 f4       	brne	.+6      	; 0x2a3e <ATTINY_open+0x10>
    2a38:	90 e0       	ldi	r25, 0x00	; 0
    2a3a:	82 e0       	ldi	r24, 0x02	; 2
    2a3c:	08 95       	ret
    2a3e:	10 92 d2 04 	sts	0x04D2, r1
    2a42:	10 92 d1 04 	sts	0x04D1, r1
    2a46:	10 92 d4 04 	sts	0x04D4, r1
    2a4a:	10 92 d3 04 	sts	0x04D3, r1
    2a4e:	10 92 d6 04 	sts	0x04D6, r1
    2a52:	10 92 d5 04 	sts	0x04D5, r1
    2a56:	10 92 d8 04 	sts	0x04D8, r1
    2a5a:	10 92 d7 04 	sts	0x04D7, r1
    2a5e:	10 92 da 04 	sts	0x04DA, r1
    2a62:	10 92 d9 04 	sts	0x04D9, r1
    2a66:	80 e9       	ldi	r24, 0x90	; 144
    2a68:	91 e0       	ldi	r25, 0x01	; 1
    2a6a:	90 93 be 04 	sts	0x04BE, r25
    2a6e:	80 93 bd 04 	sts	0x04BD, r24
    2a72:	90 93 c0 04 	sts	0x04C0, r25
    2a76:	80 93 bf 04 	sts	0x04BF, r24
    2a7a:	90 93 c2 04 	sts	0x04C2, r25
    2a7e:	80 93 c1 04 	sts	0x04C1, r24
    2a82:	90 93 c4 04 	sts	0x04C4, r25
    2a86:	80 93 c3 04 	sts	0x04C3, r24
    2a8a:	90 93 c6 04 	sts	0x04C6, r25
    2a8e:	80 93 c5 04 	sts	0x04C5, r24
    2a92:	84 e3       	ldi	r24, 0x34	; 52
    2a94:	98 e0       	ldi	r25, 0x08	; 8
    2a96:	90 93 c8 04 	sts	0x04C8, r25
    2a9a:	80 93 c7 04 	sts	0x04C7, r24
    2a9e:	90 93 ca 04 	sts	0x04CA, r25
    2aa2:	80 93 c9 04 	sts	0x04C9, r24
    2aa6:	90 93 cc 04 	sts	0x04CC, r25
    2aaa:	80 93 cb 04 	sts	0x04CB, r24
    2aae:	90 93 ce 04 	sts	0x04CE, r25
    2ab2:	80 93 cd 04 	sts	0x04CD, r24
    2ab6:	90 93 d0 04 	sts	0x04D0, r25
    2aba:	80 93 cf 04 	sts	0x04CF, r24
    2abe:	81 e0       	ldi	r24, 0x01	; 1
    2ac0:	61 e0       	ldi	r22, 0x01	; 1
    2ac2:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    2ac6:	91 e0       	ldi	r25, 0x01	; 1
    2ac8:	81 e0       	ldi	r24, 0x01	; 1
    2aca:	08 95       	ret

00002acc <TMRSRVC_delay>:
    2acc:	df 93       	push	r29
    2ace:	cf 93       	push	r28
    2ad0:	cd b7       	in	r28, 0x3d	; 61
    2ad2:	de b7       	in	r29, 0x3e	; 62
    2ad4:	29 97       	sbiw	r28, 0x09	; 9
    2ad6:	0f b6       	in	r0, 0x3f	; 63
    2ad8:	f8 94       	cli
    2ada:	de bf       	out	0x3e, r29	; 62
    2adc:	0f be       	out	0x3f, r0	; 63
    2ade:	cd bf       	out	0x3d, r28	; 61
    2ae0:	9c 01       	movw	r18, r24
    2ae2:	ce 01       	movw	r24, r28
    2ae4:	01 96       	adiw	r24, 0x01	; 1
    2ae6:	61 e0       	ldi	r22, 0x01	; 1
    2ae8:	40 e0       	ldi	r20, 0x00	; 0
    2aea:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <TMRSRVC_new>
    2aee:	98 2f       	mov	r25, r24
    2af0:	88 23       	and	r24, r24
    2af2:	19 f4       	brne	.+6      	; 0x2afa <TMRSRVC_delay+0x2e>
    2af4:	8f 81       	ldd	r24, Y+7	; 0x07
    2af6:	88 23       	and	r24, r24
    2af8:	e9 f3       	breq	.-6      	; 0x2af4 <TMRSRVC_delay+0x28>
    2afa:	89 2f       	mov	r24, r25
    2afc:	29 96       	adiw	r28, 0x09	; 9
    2afe:	0f b6       	in	r0, 0x3f	; 63
    2b00:	f8 94       	cli
    2b02:	de bf       	out	0x3e, r29	; 62
    2b04:	0f be       	out	0x3f, r0	; 63
    2b06:	cd bf       	out	0x3d, r28	; 61
    2b08:	cf 91       	pop	r28
    2b0a:	df 91       	pop	r29
    2b0c:	08 95       	ret

00002b0e <TMRSRVC_new>:
    2b0e:	ef 92       	push	r14
    2b10:	ff 92       	push	r15
    2b12:	0f 93       	push	r16
    2b14:	1f 93       	push	r17
    2b16:	cf 93       	push	r28
    2b18:	df 93       	push	r29
    2b1a:	ec 01       	movw	r28, r24
    2b1c:	f6 2e       	mov	r15, r22
    2b1e:	e4 2e       	mov	r14, r20
    2b20:	89 01       	movw	r16, r18
    2b22:	88 e0       	ldi	r24, 0x08	; 8
    2b24:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    2b28:	81 30       	cpi	r24, 0x01	; 1
    2b2a:	11 f0       	breq	.+4      	; 0x2b30 <TMRSRVC_new+0x22>
    2b2c:	81 e0       	ldi	r24, 0x01	; 1
    2b2e:	26 c0       	rjmp	.+76     	; 0x2b7c <TMRSRVC_new+0x6e>
    2b30:	84 e0       	ldi	r24, 0x04	; 4
    2b32:	90 e0       	ldi	r25, 0x00	; 0
    2b34:	0e 94 74 29 	call	0x52e8	; 0x52e8 <malloc>
    2b38:	fc 01       	movw	r30, r24
    2b3a:	00 97       	sbiw	r24, 0x00	; 0
    2b3c:	11 f4       	brne	.+4      	; 0x2b42 <TMRSRVC_new+0x34>
    2b3e:	82 e0       	ldi	r24, 0x02	; 2
    2b40:	1d c0       	rjmp	.+58     	; 0x2b7c <TMRSRVC_new+0x6e>
    2b42:	f9 82       	std	Y+1, r15	; 0x01
    2b44:	f0 fc       	sbrc	r15, 0
    2b46:	1e 82       	std	Y+6, r1	; 0x06
    2b48:	81 e0       	ldi	r24, 0x01	; 1
    2b4a:	e8 16       	cp	r14, r24
    2b4c:	19 f4       	brne	.+6      	; 0x2b54 <TMRSRVC_new+0x46>
    2b4e:	89 81       	ldd	r24, Y+1	; 0x01
    2b50:	84 60       	ori	r24, 0x04	; 4
    2b52:	89 83       	std	Y+1, r24	; 0x01
    2b54:	89 81       	ldd	r24, Y+1	; 0x01
    2b56:	88 60       	ori	r24, 0x08	; 8
    2b58:	89 83       	std	Y+1, r24	; 0x01
    2b5a:	1b 83       	std	Y+3, r17	; 0x03
    2b5c:	0a 83       	std	Y+2, r16	; 0x02
    2b5e:	1d 83       	std	Y+5, r17	; 0x05
    2b60:	0c 83       	std	Y+4, r16	; 0x04
    2b62:	d1 83       	std	Z+1, r29	; 0x01
    2b64:	c0 83       	st	Z, r28
    2b66:	13 82       	std	Z+3, r1	; 0x03
    2b68:	12 82       	std	Z+2, r1	; 0x02
    2b6a:	81 e0       	ldi	r24, 0x01	; 1
    2b6c:	80 93 7e 02 	sts	0x027E, r24
    2b70:	cf 01       	movw	r24, r30
    2b72:	0e 94 56 1c 	call	0x38ac	; 0x38ac <TMRSRVC_insert>
    2b76:	10 92 7e 02 	sts	0x027E, r1
    2b7a:	80 e0       	ldi	r24, 0x00	; 0
    2b7c:	df 91       	pop	r29
    2b7e:	cf 91       	pop	r28
    2b80:	1f 91       	pop	r17
    2b82:	0f 91       	pop	r16
    2b84:	ff 90       	pop	r15
    2b86:	ef 90       	pop	r14
    2b88:	08 95       	ret

00002b8a <I2C_MSTR_get>:
    2b8a:	fc 01       	movw	r30, r24
    2b8c:	80 91 de 04 	lds	r24, 0x04DE
    2b90:	81 30       	cpi	r24, 0x01	; 1
    2b92:	11 f0       	breq	.+4      	; 0x2b98 <I2C_MSTR_get+0xe>
    2b94:	85 e0       	ldi	r24, 0x05	; 5
    2b96:	08 95       	ret
    2b98:	80 91 df 04 	lds	r24, 0x04DF
    2b9c:	81 30       	cpi	r24, 0x01	; 1
    2b9e:	11 f0       	breq	.+4      	; 0x2ba4 <I2C_MSTR_get+0x1a>
    2ba0:	8a e0       	ldi	r24, 0x0A	; 10
    2ba2:	08 95       	ret
    2ba4:	61 30       	cpi	r22, 0x01	; 1
    2ba6:	11 f4       	brne	.+4      	; 0x2bac <I2C_MSTR_get+0x22>
    2ba8:	84 ec       	ldi	r24, 0xC4	; 196
    2baa:	01 c0       	rjmp	.+2      	; 0x2bae <I2C_MSTR_get+0x24>
    2bac:	84 e8       	ldi	r24, 0x84	; 132
    2bae:	80 93 bc 00 	sts	0x00BC, r24
    2bb2:	80 91 bc 00 	lds	r24, 0x00BC
    2bb6:	87 ff       	sbrs	r24, 7
    2bb8:	fc cf       	rjmp	.-8      	; 0x2bb2 <I2C_MSTR_get+0x28>
    2bba:	61 30       	cpi	r22, 0x01	; 1
    2bbc:	31 f4       	brne	.+12     	; 0x2bca <I2C_MSTR_get+0x40>
    2bbe:	80 91 b9 00 	lds	r24, 0x00B9
    2bc2:	88 7f       	andi	r24, 0xF8	; 248
    2bc4:	80 35       	cpi	r24, 0x50	; 80
    2bc6:	59 f4       	brne	.+22     	; 0x2bde <I2C_MSTR_get+0x54>
    2bc8:	05 c0       	rjmp	.+10     	; 0x2bd4 <I2C_MSTR_get+0x4a>
    2bca:	80 91 b9 00 	lds	r24, 0x00B9
    2bce:	88 7f       	andi	r24, 0xF8	; 248
    2bd0:	88 35       	cpi	r24, 0x58	; 88
    2bd2:	29 f4       	brne	.+10     	; 0x2bde <I2C_MSTR_get+0x54>
    2bd4:	80 91 bb 00 	lds	r24, 0x00BB
    2bd8:	80 83       	st	Z, r24
    2bda:	80 e0       	ldi	r24, 0x00	; 0
    2bdc:	08 95       	ret
    2bde:	82 e0       	ldi	r24, 0x02	; 2
    2be0:	08 95       	ret

00002be2 <I2C_MSTR_send>:
    2be2:	98 2f       	mov	r25, r24
    2be4:	80 91 de 04 	lds	r24, 0x04DE
    2be8:	81 30       	cpi	r24, 0x01	; 1
    2bea:	11 f0       	breq	.+4      	; 0x2bf0 <I2C_MSTR_send+0xe>
    2bec:	85 e0       	ldi	r24, 0x05	; 5
    2bee:	08 95       	ret
    2bf0:	80 91 df 04 	lds	r24, 0x04DF
    2bf4:	81 30       	cpi	r24, 0x01	; 1
    2bf6:	11 f0       	breq	.+4      	; 0x2bfc <I2C_MSTR_send+0x1a>
    2bf8:	8a e0       	ldi	r24, 0x0A	; 10
    2bfa:	08 95       	ret
    2bfc:	90 93 bb 00 	sts	0x00BB, r25
    2c00:	84 e8       	ldi	r24, 0x84	; 132
    2c02:	80 93 bc 00 	sts	0x00BC, r24
    2c06:	80 91 bc 00 	lds	r24, 0x00BC
    2c0a:	87 ff       	sbrs	r24, 7
    2c0c:	fc cf       	rjmp	.-8      	; 0x2c06 <I2C_MSTR_send+0x24>
    2c0e:	80 91 b9 00 	lds	r24, 0x00B9
    2c12:	90 e0       	ldi	r25, 0x00	; 0
    2c14:	88 7f       	andi	r24, 0xF8	; 248
    2c16:	90 70       	andi	r25, 0x00	; 0
    2c18:	88 32       	cpi	r24, 0x28	; 40
    2c1a:	91 05       	cpc	r25, r1
    2c1c:	21 f0       	breq	.+8      	; 0x2c26 <I2C_MSTR_send+0x44>
    2c1e:	c0 97       	sbiw	r24, 0x30	; 48
    2c20:	21 f4       	brne	.+8      	; 0x2c2a <I2C_MSTR_send+0x48>
    2c22:	83 e0       	ldi	r24, 0x03	; 3
    2c24:	08 95       	ret
    2c26:	80 e0       	ldi	r24, 0x00	; 0
    2c28:	08 95       	ret
    2c2a:	8c e0       	ldi	r24, 0x0C	; 12
    2c2c:	08 95       	ret

00002c2e <I2C_MSTR_start>:
    2c2e:	98 2f       	mov	r25, r24
    2c30:	20 91 de 04 	lds	r18, 0x04DE
    2c34:	21 30       	cpi	r18, 0x01	; 1
    2c36:	11 f0       	breq	.+4      	; 0x2c3c <I2C_MSTR_start+0xe>
    2c38:	85 e0       	ldi	r24, 0x05	; 5
    2c3a:	08 95       	ret
    2c3c:	80 91 e0 04 	lds	r24, 0x04E0
    2c40:	81 30       	cpi	r24, 0x01	; 1
    2c42:	11 f4       	brne	.+4      	; 0x2c48 <I2C_MSTR_start+0x1a>
    2c44:	89 e0       	ldi	r24, 0x09	; 9
    2c46:	08 95       	ret
    2c48:	20 93 df 04 	sts	0x04DF, r18
    2c4c:	84 ea       	ldi	r24, 0xA4	; 164
    2c4e:	80 93 bc 00 	sts	0x00BC, r24
    2c52:	80 91 bc 00 	lds	r24, 0x00BC
    2c56:	87 ff       	sbrs	r24, 7
    2c58:	fc cf       	rjmp	.-8      	; 0x2c52 <I2C_MSTR_start+0x24>
    2c5a:	80 91 b9 00 	lds	r24, 0x00B9
    2c5e:	88 7f       	andi	r24, 0xF8	; 248
    2c60:	88 30       	cpi	r24, 0x08	; 8
    2c62:	39 f0       	breq	.+14     	; 0x2c72 <I2C_MSTR_start+0x44>
    2c64:	80 91 b9 00 	lds	r24, 0x00B9
    2c68:	88 7f       	andi	r24, 0xF8	; 248
    2c6a:	80 31       	cpi	r24, 0x10	; 16
    2c6c:	11 f0       	breq	.+4      	; 0x2c72 <I2C_MSTR_start+0x44>
    2c6e:	81 e0       	ldi	r24, 0x01	; 1
    2c70:	08 95       	ret
    2c72:	61 30       	cpi	r22, 0x01	; 1
    2c74:	19 f4       	brne	.+6      	; 0x2c7c <I2C_MSTR_start+0x4e>
    2c76:	99 0f       	add	r25, r25
    2c78:	91 60       	ori	r25, 0x01	; 1
    2c7a:	03 c0       	rjmp	.+6      	; 0x2c82 <I2C_MSTR_start+0x54>
    2c7c:	66 23       	and	r22, r22
    2c7e:	19 f4       	brne	.+6      	; 0x2c86 <I2C_MSTR_start+0x58>
    2c80:	99 0f       	add	r25, r25
    2c82:	90 93 bb 00 	sts	0x00BB, r25
    2c86:	84 e8       	ldi	r24, 0x84	; 132
    2c88:	80 93 bc 00 	sts	0x00BC, r24
    2c8c:	80 91 bc 00 	lds	r24, 0x00BC
    2c90:	87 ff       	sbrs	r24, 7
    2c92:	fc cf       	rjmp	.-8      	; 0x2c8c <I2C_MSTR_start+0x5e>
    2c94:	61 30       	cpi	r22, 0x01	; 1
    2c96:	31 f4       	brne	.+12     	; 0x2ca4 <I2C_MSTR_start+0x76>
    2c98:	80 91 b9 00 	lds	r24, 0x00B9
    2c9c:	88 7f       	andi	r24, 0xF8	; 248
    2c9e:	80 34       	cpi	r24, 0x40	; 64
    2ca0:	41 f4       	brne	.+16     	; 0x2cb2 <I2C_MSTR_start+0x84>
    2ca2:	09 c0       	rjmp	.+18     	; 0x2cb6 <I2C_MSTR_start+0x88>
    2ca4:	66 23       	and	r22, r22
    2ca6:	39 f4       	brne	.+14     	; 0x2cb6 <I2C_MSTR_start+0x88>
    2ca8:	80 91 b9 00 	lds	r24, 0x00B9
    2cac:	88 7f       	andi	r24, 0xF8	; 248
    2cae:	88 31       	cpi	r24, 0x18	; 24
    2cb0:	11 f0       	breq	.+4      	; 0x2cb6 <I2C_MSTR_start+0x88>
    2cb2:	82 e0       	ldi	r24, 0x02	; 2
    2cb4:	08 95       	ret
    2cb6:	80 e0       	ldi	r24, 0x00	; 0
    2cb8:	08 95       	ret

00002cba <I2C_MSTR_stop>:
    2cba:	80 91 df 04 	lds	r24, 0x04DF
    2cbe:	81 30       	cpi	r24, 0x01	; 1
    2cc0:	11 f0       	breq	.+4      	; 0x2cc6 <I2C_MSTR_stop+0xc>
    2cc2:	8a e0       	ldi	r24, 0x0A	; 10
    2cc4:	08 95       	ret
    2cc6:	80 91 e1 04 	lds	r24, 0x04E1
    2cca:	81 30       	cpi	r24, 0x01	; 1
    2ccc:	29 f4       	brne	.+10     	; 0x2cd8 <I2C_MSTR_stop+0x1e>
    2cce:	85 e9       	ldi	r24, 0x95	; 149
    2cd0:	80 93 bc 00 	sts	0x00BC, r24
    2cd4:	80 e0       	ldi	r24, 0x00	; 0
    2cd6:	08 95       	ret
    2cd8:	84 e9       	ldi	r24, 0x94	; 148
    2cda:	80 93 bc 00 	sts	0x00BC, r24
    2cde:	80 e0       	ldi	r24, 0x00	; 0
    2ce0:	08 95       	ret

00002ce2 <I2C_open>:
    2ce2:	82 e1       	ldi	r24, 0x12	; 18
    2ce4:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    2ce8:	88 23       	and	r24, r24
    2cea:	b1 f4       	brne	.+44     	; 0x2d18 <I2C_open+0x36>
    2cec:	10 92 de 04 	sts	0x04DE, r1
    2cf0:	10 92 df 04 	sts	0x04DF, r1
    2cf4:	10 92 e0 04 	sts	0x04E0, r1
    2cf8:	10 92 e1 04 	sts	0x04E1, r1
    2cfc:	10 92 e2 04 	sts	0x04E2, r1
    2d00:	0e 94 f2 1c 	call	0x39e4	; 0x39e4 <__I2C_init>
    2d04:	87 e1       	ldi	r24, 0x17	; 23
    2d06:	60 e0       	ldi	r22, 0x00	; 0
    2d08:	0e 94 8f 16 	call	0x2d1e	; 0x2d1e <I2C_set_BRG>
    2d0c:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <I2C_enable>
    2d10:	82 e1       	ldi	r24, 0x12	; 18
    2d12:	61 e0       	ldi	r22, 0x01	; 1
    2d14:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    2d18:	82 e1       	ldi	r24, 0x12	; 18
    2d1a:	90 e0       	ldi	r25, 0x00	; 0
    2d1c:	08 95       	ret

00002d1e <I2C_set_BRG>:
    2d1e:	63 70       	andi	r22, 0x03	; 3
    2d20:	60 93 b9 00 	sts	0x00B9, r22
    2d24:	80 93 b8 00 	sts	0x00B8, r24
    2d28:	81 e0       	ldi	r24, 0x01	; 1
    2d2a:	80 93 de 04 	sts	0x04DE, r24
    2d2e:	08 95       	ret

00002d30 <__ADC_init>:
    2d30:	8f e1       	ldi	r24, 0x1F	; 31
    2d32:	80 93 7c 00 	sts	0x007C, r24
    2d36:	ea e7       	ldi	r30, 0x7A	; 122
    2d38:	f0 e0       	ldi	r31, 0x00	; 0
    2d3a:	87 e0       	ldi	r24, 0x07	; 7
    2d3c:	80 83       	st	Z, r24
    2d3e:	80 81       	ld	r24, Z
    2d40:	80 68       	ori	r24, 0x80	; 128
    2d42:	80 83       	st	Z, r24
    2d44:	08 95       	ret

00002d46 <CBOT_init>:
    2d46:	0e 94 02 1c 	call	0x3804	; 0x3804 <SYS_init>
    2d4a:	0e 94 d5 19 	call	0x33aa	; 0x33aa <ATMEGA_open>
    2d4e:	0e 94 05 19 	call	0x320a	; 0x320a <ISR_open>
    2d52:	0e 94 bf 1c 	call	0x397e	; 0x397e <TMRSRVC_open>
    2d56:	0e 94 3a 1a 	call	0x3474	; 0x3474 <SPI_open>
    2d5a:	0e 94 17 15 	call	0x2a2e	; 0x2a2e <ATTINY_open>
    2d5e:	78 94       	sei
    2d60:	08 95       	ret

00002d62 <CBOT_ISR_init>:
    2d62:	00 00       	nop
    2d64:	08 95       	ret

00002d66 <__vector_16>:
    2d66:	1f 92       	push	r1
    2d68:	0f 92       	push	r0
    2d6a:	0f b6       	in	r0, 0x3f	; 63
    2d6c:	0f 92       	push	r0
    2d6e:	11 24       	eor	r1, r1
    2d70:	2f 93       	push	r18
    2d72:	3f 93       	push	r19
    2d74:	4f 93       	push	r20
    2d76:	5f 93       	push	r21
    2d78:	6f 93       	push	r22
    2d7a:	7f 93       	push	r23
    2d7c:	8f 93       	push	r24
    2d7e:	9f 93       	push	r25
    2d80:	af 93       	push	r26
    2d82:	bf 93       	push	r27
    2d84:	ef 93       	push	r30
    2d86:	ff 93       	push	r31
    2d88:	e0 91 3e 02 	lds	r30, 0x023E
    2d8c:	f0 91 3f 02 	lds	r31, 0x023F
    2d90:	30 97       	sbiw	r30, 0x00	; 0
    2d92:	09 f0       	breq	.+2      	; 0x2d96 <__vector_16+0x30>
    2d94:	09 95       	icall
    2d96:	ff 91       	pop	r31
    2d98:	ef 91       	pop	r30
    2d9a:	bf 91       	pop	r27
    2d9c:	af 91       	pop	r26
    2d9e:	9f 91       	pop	r25
    2da0:	8f 91       	pop	r24
    2da2:	7f 91       	pop	r23
    2da4:	6f 91       	pop	r22
    2da6:	5f 91       	pop	r21
    2da8:	4f 91       	pop	r20
    2daa:	3f 91       	pop	r19
    2dac:	2f 91       	pop	r18
    2dae:	0f 90       	pop	r0
    2db0:	0f be       	out	0x3f, r0	; 63
    2db2:	0f 90       	pop	r0
    2db4:	1f 90       	pop	r1
    2db6:	18 95       	reti

00002db8 <__vector_17>:
    2db8:	1f 92       	push	r1
    2dba:	0f 92       	push	r0
    2dbc:	0f b6       	in	r0, 0x3f	; 63
    2dbe:	0f 92       	push	r0
    2dc0:	11 24       	eor	r1, r1
    2dc2:	2f 93       	push	r18
    2dc4:	3f 93       	push	r19
    2dc6:	4f 93       	push	r20
    2dc8:	5f 93       	push	r21
    2dca:	6f 93       	push	r22
    2dcc:	7f 93       	push	r23
    2dce:	8f 93       	push	r24
    2dd0:	9f 93       	push	r25
    2dd2:	af 93       	push	r26
    2dd4:	bf 93       	push	r27
    2dd6:	ef 93       	push	r30
    2dd8:	ff 93       	push	r31
    2dda:	e0 91 40 02 	lds	r30, 0x0240
    2dde:	f0 91 41 02 	lds	r31, 0x0241
    2de2:	30 97       	sbiw	r30, 0x00	; 0
    2de4:	09 f0       	breq	.+2      	; 0x2de8 <__vector_17+0x30>
    2de6:	09 95       	icall
    2de8:	ff 91       	pop	r31
    2dea:	ef 91       	pop	r30
    2dec:	bf 91       	pop	r27
    2dee:	af 91       	pop	r26
    2df0:	9f 91       	pop	r25
    2df2:	8f 91       	pop	r24
    2df4:	7f 91       	pop	r23
    2df6:	6f 91       	pop	r22
    2df8:	5f 91       	pop	r21
    2dfa:	4f 91       	pop	r20
    2dfc:	3f 91       	pop	r19
    2dfe:	2f 91       	pop	r18
    2e00:	0f 90       	pop	r0
    2e02:	0f be       	out	0x3f, r0	; 63
    2e04:	0f 90       	pop	r0
    2e06:	1f 90       	pop	r1
    2e08:	18 95       	reti

00002e0a <__vector_18>:
    2e0a:	1f 92       	push	r1
    2e0c:	0f 92       	push	r0
    2e0e:	0f b6       	in	r0, 0x3f	; 63
    2e10:	0f 92       	push	r0
    2e12:	11 24       	eor	r1, r1
    2e14:	2f 93       	push	r18
    2e16:	3f 93       	push	r19
    2e18:	4f 93       	push	r20
    2e1a:	5f 93       	push	r21
    2e1c:	6f 93       	push	r22
    2e1e:	7f 93       	push	r23
    2e20:	8f 93       	push	r24
    2e22:	9f 93       	push	r25
    2e24:	af 93       	push	r26
    2e26:	bf 93       	push	r27
    2e28:	ef 93       	push	r30
    2e2a:	ff 93       	push	r31
    2e2c:	e0 91 42 02 	lds	r30, 0x0242
    2e30:	f0 91 43 02 	lds	r31, 0x0243
    2e34:	30 97       	sbiw	r30, 0x00	; 0
    2e36:	09 f0       	breq	.+2      	; 0x2e3a <__vector_18+0x30>
    2e38:	09 95       	icall
    2e3a:	ff 91       	pop	r31
    2e3c:	ef 91       	pop	r30
    2e3e:	bf 91       	pop	r27
    2e40:	af 91       	pop	r26
    2e42:	9f 91       	pop	r25
    2e44:	8f 91       	pop	r24
    2e46:	7f 91       	pop	r23
    2e48:	6f 91       	pop	r22
    2e4a:	5f 91       	pop	r21
    2e4c:	4f 91       	pop	r20
    2e4e:	3f 91       	pop	r19
    2e50:	2f 91       	pop	r18
    2e52:	0f 90       	pop	r0
    2e54:	0f be       	out	0x3f, r0	; 63
    2e56:	0f 90       	pop	r0
    2e58:	1f 90       	pop	r1
    2e5a:	18 95       	reti

00002e5c <__vector_9>:
    2e5c:	1f 92       	push	r1
    2e5e:	0f 92       	push	r0
    2e60:	0f b6       	in	r0, 0x3f	; 63
    2e62:	0f 92       	push	r0
    2e64:	11 24       	eor	r1, r1
    2e66:	2f 93       	push	r18
    2e68:	3f 93       	push	r19
    2e6a:	4f 93       	push	r20
    2e6c:	5f 93       	push	r21
    2e6e:	6f 93       	push	r22
    2e70:	7f 93       	push	r23
    2e72:	8f 93       	push	r24
    2e74:	9f 93       	push	r25
    2e76:	af 93       	push	r26
    2e78:	bf 93       	push	r27
    2e7a:	ef 93       	push	r30
    2e7c:	ff 93       	push	r31
    2e7e:	e0 91 30 02 	lds	r30, 0x0230
    2e82:	f0 91 31 02 	lds	r31, 0x0231
    2e86:	30 97       	sbiw	r30, 0x00	; 0
    2e88:	09 f0       	breq	.+2      	; 0x2e8c <__vector_9+0x30>
    2e8a:	09 95       	icall
    2e8c:	ff 91       	pop	r31
    2e8e:	ef 91       	pop	r30
    2e90:	bf 91       	pop	r27
    2e92:	af 91       	pop	r26
    2e94:	9f 91       	pop	r25
    2e96:	8f 91       	pop	r24
    2e98:	7f 91       	pop	r23
    2e9a:	6f 91       	pop	r22
    2e9c:	5f 91       	pop	r21
    2e9e:	4f 91       	pop	r20
    2ea0:	3f 91       	pop	r19
    2ea2:	2f 91       	pop	r18
    2ea4:	0f 90       	pop	r0
    2ea6:	0f be       	out	0x3f, r0	; 63
    2ea8:	0f 90       	pop	r0
    2eaa:	1f 90       	pop	r1
    2eac:	18 95       	reti

00002eae <__vector_10>:
    2eae:	1f 92       	push	r1
    2eb0:	0f 92       	push	r0
    2eb2:	0f b6       	in	r0, 0x3f	; 63
    2eb4:	0f 92       	push	r0
    2eb6:	11 24       	eor	r1, r1
    2eb8:	2f 93       	push	r18
    2eba:	3f 93       	push	r19
    2ebc:	4f 93       	push	r20
    2ebe:	5f 93       	push	r21
    2ec0:	6f 93       	push	r22
    2ec2:	7f 93       	push	r23
    2ec4:	8f 93       	push	r24
    2ec6:	9f 93       	push	r25
    2ec8:	af 93       	push	r26
    2eca:	bf 93       	push	r27
    2ecc:	ef 93       	push	r30
    2ece:	ff 93       	push	r31
    2ed0:	e0 91 32 02 	lds	r30, 0x0232
    2ed4:	f0 91 33 02 	lds	r31, 0x0233
    2ed8:	30 97       	sbiw	r30, 0x00	; 0
    2eda:	09 f0       	breq	.+2      	; 0x2ede <__vector_10+0x30>
    2edc:	09 95       	icall
    2ede:	ff 91       	pop	r31
    2ee0:	ef 91       	pop	r30
    2ee2:	bf 91       	pop	r27
    2ee4:	af 91       	pop	r26
    2ee6:	9f 91       	pop	r25
    2ee8:	8f 91       	pop	r24
    2eea:	7f 91       	pop	r23
    2eec:	6f 91       	pop	r22
    2eee:	5f 91       	pop	r21
    2ef0:	4f 91       	pop	r20
    2ef2:	3f 91       	pop	r19
    2ef4:	2f 91       	pop	r18
    2ef6:	0f 90       	pop	r0
    2ef8:	0f be       	out	0x3f, r0	; 63
    2efa:	0f 90       	pop	r0
    2efc:	1f 90       	pop	r1
    2efe:	18 95       	reti

00002f00 <__vector_11>:
    2f00:	1f 92       	push	r1
    2f02:	0f 92       	push	r0
    2f04:	0f b6       	in	r0, 0x3f	; 63
    2f06:	0f 92       	push	r0
    2f08:	11 24       	eor	r1, r1
    2f0a:	2f 93       	push	r18
    2f0c:	3f 93       	push	r19
    2f0e:	4f 93       	push	r20
    2f10:	5f 93       	push	r21
    2f12:	6f 93       	push	r22
    2f14:	7f 93       	push	r23
    2f16:	8f 93       	push	r24
    2f18:	9f 93       	push	r25
    2f1a:	af 93       	push	r26
    2f1c:	bf 93       	push	r27
    2f1e:	ef 93       	push	r30
    2f20:	ff 93       	push	r31
    2f22:	e0 91 34 02 	lds	r30, 0x0234
    2f26:	f0 91 35 02 	lds	r31, 0x0235
    2f2a:	30 97       	sbiw	r30, 0x00	; 0
    2f2c:	09 f0       	breq	.+2      	; 0x2f30 <__vector_11+0x30>
    2f2e:	09 95       	icall
    2f30:	ff 91       	pop	r31
    2f32:	ef 91       	pop	r30
    2f34:	bf 91       	pop	r27
    2f36:	af 91       	pop	r26
    2f38:	9f 91       	pop	r25
    2f3a:	8f 91       	pop	r24
    2f3c:	7f 91       	pop	r23
    2f3e:	6f 91       	pop	r22
    2f40:	5f 91       	pop	r21
    2f42:	4f 91       	pop	r20
    2f44:	3f 91       	pop	r19
    2f46:	2f 91       	pop	r18
    2f48:	0f 90       	pop	r0
    2f4a:	0f be       	out	0x3f, r0	; 63
    2f4c:	0f 90       	pop	r0
    2f4e:	1f 90       	pop	r1
    2f50:	18 95       	reti

00002f52 <__vector_13>:
    2f52:	1f 92       	push	r1
    2f54:	0f 92       	push	r0
    2f56:	0f b6       	in	r0, 0x3f	; 63
    2f58:	0f 92       	push	r0
    2f5a:	11 24       	eor	r1, r1
    2f5c:	2f 93       	push	r18
    2f5e:	3f 93       	push	r19
    2f60:	4f 93       	push	r20
    2f62:	5f 93       	push	r21
    2f64:	6f 93       	push	r22
    2f66:	7f 93       	push	r23
    2f68:	8f 93       	push	r24
    2f6a:	9f 93       	push	r25
    2f6c:	af 93       	push	r26
    2f6e:	bf 93       	push	r27
    2f70:	ef 93       	push	r30
    2f72:	ff 93       	push	r31
    2f74:	e0 91 38 02 	lds	r30, 0x0238
    2f78:	f0 91 39 02 	lds	r31, 0x0239
    2f7c:	30 97       	sbiw	r30, 0x00	; 0
    2f7e:	09 f0       	breq	.+2      	; 0x2f82 <__vector_13+0x30>
    2f80:	09 95       	icall
    2f82:	ff 91       	pop	r31
    2f84:	ef 91       	pop	r30
    2f86:	bf 91       	pop	r27
    2f88:	af 91       	pop	r26
    2f8a:	9f 91       	pop	r25
    2f8c:	8f 91       	pop	r24
    2f8e:	7f 91       	pop	r23
    2f90:	6f 91       	pop	r22
    2f92:	5f 91       	pop	r21
    2f94:	4f 91       	pop	r20
    2f96:	3f 91       	pop	r19
    2f98:	2f 91       	pop	r18
    2f9a:	0f 90       	pop	r0
    2f9c:	0f be       	out	0x3f, r0	; 63
    2f9e:	0f 90       	pop	r0
    2fa0:	1f 90       	pop	r1
    2fa2:	18 95       	reti

00002fa4 <__vector_14>:
    2fa4:	1f 92       	push	r1
    2fa6:	0f 92       	push	r0
    2fa8:	0f b6       	in	r0, 0x3f	; 63
    2faa:	0f 92       	push	r0
    2fac:	11 24       	eor	r1, r1
    2fae:	2f 93       	push	r18
    2fb0:	3f 93       	push	r19
    2fb2:	4f 93       	push	r20
    2fb4:	5f 93       	push	r21
    2fb6:	6f 93       	push	r22
    2fb8:	7f 93       	push	r23
    2fba:	8f 93       	push	r24
    2fbc:	9f 93       	push	r25
    2fbe:	af 93       	push	r26
    2fc0:	bf 93       	push	r27
    2fc2:	ef 93       	push	r30
    2fc4:	ff 93       	push	r31
    2fc6:	e0 91 3a 02 	lds	r30, 0x023A
    2fca:	f0 91 3b 02 	lds	r31, 0x023B
    2fce:	30 97       	sbiw	r30, 0x00	; 0
    2fd0:	09 f0       	breq	.+2      	; 0x2fd4 <__vector_14+0x30>
    2fd2:	09 95       	icall
    2fd4:	ff 91       	pop	r31
    2fd6:	ef 91       	pop	r30
    2fd8:	bf 91       	pop	r27
    2fda:	af 91       	pop	r26
    2fdc:	9f 91       	pop	r25
    2fde:	8f 91       	pop	r24
    2fe0:	7f 91       	pop	r23
    2fe2:	6f 91       	pop	r22
    2fe4:	5f 91       	pop	r21
    2fe6:	4f 91       	pop	r20
    2fe8:	3f 91       	pop	r19
    2fea:	2f 91       	pop	r18
    2fec:	0f 90       	pop	r0
    2fee:	0f be       	out	0x3f, r0	; 63
    2ff0:	0f 90       	pop	r0
    2ff2:	1f 90       	pop	r1
    2ff4:	18 95       	reti

00002ff6 <__vector_12>:
    2ff6:	1f 92       	push	r1
    2ff8:	0f 92       	push	r0
    2ffa:	0f b6       	in	r0, 0x3f	; 63
    2ffc:	0f 92       	push	r0
    2ffe:	11 24       	eor	r1, r1
    3000:	2f 93       	push	r18
    3002:	3f 93       	push	r19
    3004:	4f 93       	push	r20
    3006:	5f 93       	push	r21
    3008:	6f 93       	push	r22
    300a:	7f 93       	push	r23
    300c:	8f 93       	push	r24
    300e:	9f 93       	push	r25
    3010:	af 93       	push	r26
    3012:	bf 93       	push	r27
    3014:	ef 93       	push	r30
    3016:	ff 93       	push	r31
    3018:	e0 91 36 02 	lds	r30, 0x0236
    301c:	f0 91 37 02 	lds	r31, 0x0237
    3020:	30 97       	sbiw	r30, 0x00	; 0
    3022:	09 f0       	breq	.+2      	; 0x3026 <__vector_12+0x30>
    3024:	09 95       	icall
    3026:	ff 91       	pop	r31
    3028:	ef 91       	pop	r30
    302a:	bf 91       	pop	r27
    302c:	af 91       	pop	r26
    302e:	9f 91       	pop	r25
    3030:	8f 91       	pop	r24
    3032:	7f 91       	pop	r23
    3034:	6f 91       	pop	r22
    3036:	5f 91       	pop	r21
    3038:	4f 91       	pop	r20
    303a:	3f 91       	pop	r19
    303c:	2f 91       	pop	r18
    303e:	0f 90       	pop	r0
    3040:	0f be       	out	0x3f, r0	; 63
    3042:	0f 90       	pop	r0
    3044:	1f 90       	pop	r1
    3046:	18 95       	reti

00003048 <__vector_15>:
    3048:	1f 92       	push	r1
    304a:	0f 92       	push	r0
    304c:	0f b6       	in	r0, 0x3f	; 63
    304e:	0f 92       	push	r0
    3050:	11 24       	eor	r1, r1
    3052:	2f 93       	push	r18
    3054:	3f 93       	push	r19
    3056:	4f 93       	push	r20
    3058:	5f 93       	push	r21
    305a:	6f 93       	push	r22
    305c:	7f 93       	push	r23
    305e:	8f 93       	push	r24
    3060:	9f 93       	push	r25
    3062:	af 93       	push	r26
    3064:	bf 93       	push	r27
    3066:	ef 93       	push	r30
    3068:	ff 93       	push	r31
    306a:	e0 91 3c 02 	lds	r30, 0x023C
    306e:	f0 91 3d 02 	lds	r31, 0x023D
    3072:	30 97       	sbiw	r30, 0x00	; 0
    3074:	09 f0       	breq	.+2      	; 0x3078 <__vector_15+0x30>
    3076:	09 95       	icall
    3078:	ff 91       	pop	r31
    307a:	ef 91       	pop	r30
    307c:	bf 91       	pop	r27
    307e:	af 91       	pop	r26
    3080:	9f 91       	pop	r25
    3082:	8f 91       	pop	r24
    3084:	7f 91       	pop	r23
    3086:	6f 91       	pop	r22
    3088:	5f 91       	pop	r21
    308a:	4f 91       	pop	r20
    308c:	3f 91       	pop	r19
    308e:	2f 91       	pop	r18
    3090:	0f 90       	pop	r0
    3092:	0f be       	out	0x3f, r0	; 63
    3094:	0f 90       	pop	r0
    3096:	1f 90       	pop	r1
    3098:	18 95       	reti

0000309a <__vector_4>:
    309a:	1f 92       	push	r1
    309c:	0f 92       	push	r0
    309e:	0f b6       	in	r0, 0x3f	; 63
    30a0:	0f 92       	push	r0
    30a2:	11 24       	eor	r1, r1
    30a4:	2f 93       	push	r18
    30a6:	3f 93       	push	r19
    30a8:	4f 93       	push	r20
    30aa:	5f 93       	push	r21
    30ac:	6f 93       	push	r22
    30ae:	7f 93       	push	r23
    30b0:	8f 93       	push	r24
    30b2:	9f 93       	push	r25
    30b4:	af 93       	push	r26
    30b6:	bf 93       	push	r27
    30b8:	ef 93       	push	r30
    30ba:	ff 93       	push	r31
    30bc:	e0 91 26 02 	lds	r30, 0x0226
    30c0:	f0 91 27 02 	lds	r31, 0x0227
    30c4:	30 97       	sbiw	r30, 0x00	; 0
    30c6:	09 f0       	breq	.+2      	; 0x30ca <__vector_4+0x30>
    30c8:	09 95       	icall
    30ca:	ff 91       	pop	r31
    30cc:	ef 91       	pop	r30
    30ce:	bf 91       	pop	r27
    30d0:	af 91       	pop	r26
    30d2:	9f 91       	pop	r25
    30d4:	8f 91       	pop	r24
    30d6:	7f 91       	pop	r23
    30d8:	6f 91       	pop	r22
    30da:	5f 91       	pop	r21
    30dc:	4f 91       	pop	r20
    30de:	3f 91       	pop	r19
    30e0:	2f 91       	pop	r18
    30e2:	0f 90       	pop	r0
    30e4:	0f be       	out	0x3f, r0	; 63
    30e6:	0f 90       	pop	r0
    30e8:	1f 90       	pop	r1
    30ea:	18 95       	reti

000030ec <__vector_5>:
    30ec:	1f 92       	push	r1
    30ee:	0f 92       	push	r0
    30f0:	0f b6       	in	r0, 0x3f	; 63
    30f2:	0f 92       	push	r0
    30f4:	11 24       	eor	r1, r1
    30f6:	2f 93       	push	r18
    30f8:	3f 93       	push	r19
    30fa:	4f 93       	push	r20
    30fc:	5f 93       	push	r21
    30fe:	6f 93       	push	r22
    3100:	7f 93       	push	r23
    3102:	8f 93       	push	r24
    3104:	9f 93       	push	r25
    3106:	af 93       	push	r26
    3108:	bf 93       	push	r27
    310a:	ef 93       	push	r30
    310c:	ff 93       	push	r31
    310e:	e0 91 28 02 	lds	r30, 0x0228
    3112:	f0 91 29 02 	lds	r31, 0x0229
    3116:	30 97       	sbiw	r30, 0x00	; 0
    3118:	09 f0       	breq	.+2      	; 0x311c <__vector_5+0x30>
    311a:	09 95       	icall
    311c:	ff 91       	pop	r31
    311e:	ef 91       	pop	r30
    3120:	bf 91       	pop	r27
    3122:	af 91       	pop	r26
    3124:	9f 91       	pop	r25
    3126:	8f 91       	pop	r24
    3128:	7f 91       	pop	r23
    312a:	6f 91       	pop	r22
    312c:	5f 91       	pop	r21
    312e:	4f 91       	pop	r20
    3130:	3f 91       	pop	r19
    3132:	2f 91       	pop	r18
    3134:	0f 90       	pop	r0
    3136:	0f be       	out	0x3f, r0	; 63
    3138:	0f 90       	pop	r0
    313a:	1f 90       	pop	r1
    313c:	18 95       	reti

0000313e <__vector_6>:
    313e:	1f 92       	push	r1
    3140:	0f 92       	push	r0
    3142:	0f b6       	in	r0, 0x3f	; 63
    3144:	0f 92       	push	r0
    3146:	11 24       	eor	r1, r1
    3148:	2f 93       	push	r18
    314a:	3f 93       	push	r19
    314c:	4f 93       	push	r20
    314e:	5f 93       	push	r21
    3150:	6f 93       	push	r22
    3152:	7f 93       	push	r23
    3154:	8f 93       	push	r24
    3156:	9f 93       	push	r25
    3158:	af 93       	push	r26
    315a:	bf 93       	push	r27
    315c:	ef 93       	push	r30
    315e:	ff 93       	push	r31
    3160:	e0 91 2a 02 	lds	r30, 0x022A
    3164:	f0 91 2b 02 	lds	r31, 0x022B
    3168:	30 97       	sbiw	r30, 0x00	; 0
    316a:	09 f0       	breq	.+2      	; 0x316e <__vector_6+0x30>
    316c:	09 95       	icall
    316e:	ff 91       	pop	r31
    3170:	ef 91       	pop	r30
    3172:	bf 91       	pop	r27
    3174:	af 91       	pop	r26
    3176:	9f 91       	pop	r25
    3178:	8f 91       	pop	r24
    317a:	7f 91       	pop	r23
    317c:	6f 91       	pop	r22
    317e:	5f 91       	pop	r21
    3180:	4f 91       	pop	r20
    3182:	3f 91       	pop	r19
    3184:	2f 91       	pop	r18
    3186:	0f 90       	pop	r0
    3188:	0f be       	out	0x3f, r0	; 63
    318a:	0f 90       	pop	r0
    318c:	1f 90       	pop	r1
    318e:	18 95       	reti

00003190 <__vector_7>:
    3190:	1f 92       	push	r1
    3192:	0f 92       	push	r0
    3194:	0f b6       	in	r0, 0x3f	; 63
    3196:	0f 92       	push	r0
    3198:	11 24       	eor	r1, r1
    319a:	2f 93       	push	r18
    319c:	3f 93       	push	r19
    319e:	4f 93       	push	r20
    31a0:	5f 93       	push	r21
    31a2:	6f 93       	push	r22
    31a4:	7f 93       	push	r23
    31a6:	8f 93       	push	r24
    31a8:	9f 93       	push	r25
    31aa:	af 93       	push	r26
    31ac:	bf 93       	push	r27
    31ae:	ef 93       	push	r30
    31b0:	ff 93       	push	r31
    31b2:	e0 91 2c 02 	lds	r30, 0x022C
    31b6:	f0 91 2d 02 	lds	r31, 0x022D
    31ba:	30 97       	sbiw	r30, 0x00	; 0
    31bc:	09 f0       	breq	.+2      	; 0x31c0 <__vector_7+0x30>
    31be:	09 95       	icall
    31c0:	ff 91       	pop	r31
    31c2:	ef 91       	pop	r30
    31c4:	bf 91       	pop	r27
    31c6:	af 91       	pop	r26
    31c8:	9f 91       	pop	r25
    31ca:	8f 91       	pop	r24
    31cc:	7f 91       	pop	r23
    31ce:	6f 91       	pop	r22
    31d0:	5f 91       	pop	r21
    31d2:	4f 91       	pop	r20
    31d4:	3f 91       	pop	r19
    31d6:	2f 91       	pop	r18
    31d8:	0f 90       	pop	r0
    31da:	0f be       	out	0x3f, r0	; 63
    31dc:	0f 90       	pop	r0
    31de:	1f 90       	pop	r1
    31e0:	18 95       	reti

000031e2 <ISR_attach>:
    31e2:	e8 2f       	mov	r30, r24
    31e4:	80 32       	cpi	r24, 0x20	; 32
    31e6:	68 f4       	brcc	.+26     	; 0x3202 <ISR_attach+0x20>
    31e8:	80 51       	subi	r24, 0x10	; 16
    31ea:	83 30       	cpi	r24, 0x03	; 3
    31ec:	50 f0       	brcs	.+20     	; 0x3202 <ISR_attach+0x20>
    31ee:	f0 e0       	ldi	r31, 0x00	; 0
    31f0:	ee 0f       	add	r30, r30
    31f2:	ff 1f       	adc	r31, r31
    31f4:	e2 5e       	subi	r30, 0xE2	; 226
    31f6:	fd 4f       	sbci	r31, 0xFD	; 253
    31f8:	20 81       	ld	r18, Z
    31fa:	31 81       	ldd	r19, Z+1	; 0x01
    31fc:	71 83       	std	Z+1, r23	; 0x01
    31fe:	60 83       	st	Z, r22
    3200:	02 c0       	rjmp	.+4      	; 0x3206 <ISR_attach+0x24>
    3202:	20 e0       	ldi	r18, 0x00	; 0
    3204:	30 e0       	ldi	r19, 0x00	; 0
    3206:	c9 01       	movw	r24, r18
    3208:	08 95       	ret

0000320a <ISR_open>:
    320a:	80 e1       	ldi	r24, 0x10	; 16
    320c:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    3210:	88 23       	and	r24, r24
    3212:	61 f4       	brne	.+24     	; 0x322c <ISR_open+0x22>
    3214:	ee e1       	ldi	r30, 0x1E	; 30
    3216:	f2 e0       	ldi	r31, 0x02	; 2
    3218:	11 92       	st	Z+, r1
    321a:	11 92       	st	Z+, r1
    321c:	82 e0       	ldi	r24, 0x02	; 2
    321e:	ee 35       	cpi	r30, 0x5E	; 94
    3220:	f8 07       	cpc	r31, r24
    3222:	d1 f7       	brne	.-12     	; 0x3218 <ISR_open+0xe>
    3224:	80 e1       	ldi	r24, 0x10	; 16
    3226:	61 e0       	ldi	r22, 0x01	; 1
    3228:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    322c:	80 e1       	ldi	r24, 0x10	; 16
    322e:	91 e0       	ldi	r25, 0x01	; 1
    3230:	08 95       	ret

00003232 <__LCD_init>:
    3232:	23 9a       	sbi	0x04, 3	; 4
    3234:	08 95       	ret

00003236 <__LCD_putchar>:
    3236:	ff 92       	push	r15
    3238:	0f 93       	push	r16
    323a:	1f 93       	push	r17
    323c:	cf 93       	push	r28
    323e:	df 93       	push	r29
    3240:	f8 2e       	mov	r15, r24
    3242:	8a e0       	ldi	r24, 0x0A	; 10
    3244:	f8 16       	cp	r15, r24
    3246:	b1 f0       	breq	.+44     	; 0x3274 <__LCD_putchar+0x3e>
    3248:	8f 15       	cp	r24, r15
    324a:	48 f0       	brcs	.+18     	; 0x325e <__LCD_putchar+0x28>
    324c:	e8 e0       	ldi	r30, 0x08	; 8
    324e:	fe 16       	cp	r15, r30
    3250:	b9 f1       	breq	.+110    	; 0x32c0 <__LCD_putchar+0x8a>
    3252:	ef 15       	cp	r30, r15
    3254:	38 f1       	brcs	.+78     	; 0x32a4 <__LCD_putchar+0x6e>
    3256:	f7 e0       	ldi	r31, 0x07	; 7
    3258:	ff 16       	cp	r15, r31
    325a:	51 f4       	brne	.+20     	; 0x3270 <__LCD_putchar+0x3a>
    325c:	3b c0       	rjmp	.+118    	; 0x32d4 <__LCD_putchar+0x9e>
    325e:	8d e0       	ldi	r24, 0x0D	; 13
    3260:	f8 16       	cp	r15, r24
    3262:	59 f0       	breq	.+22     	; 0x327a <__LCD_putchar+0x44>
    3264:	eb e1       	ldi	r30, 0x1B	; 27
    3266:	fe 16       	cp	r15, r30
    3268:	89 f0       	breq	.+34     	; 0x328c <__LCD_putchar+0x56>
    326a:	fc e0       	ldi	r31, 0x0C	; 12
    326c:	ff 16       	cp	r15, r31
    326e:	41 f0       	breq	.+16     	; 0x3280 <__LCD_putchar+0x4a>
    3270:	01 e0       	ldi	r16, 0x01	; 1
    3272:	41 c0       	rjmp	.+130    	; 0x32f6 <__LCD_putchar+0xc0>
    3274:	10 92 b7 04 	sts	0x04B7, r1
    3278:	03 c0       	rjmp	.+6      	; 0x3280 <__LCD_putchar+0x4a>
    327a:	10 92 b7 04 	sts	0x04B7, r1
    327e:	3a c0       	rjmp	.+116    	; 0x32f4 <__LCD_putchar+0xbe>
    3280:	80 91 b8 04 	lds	r24, 0x04B8
    3284:	81 50       	subi	r24, 0x01	; 1
    3286:	80 93 b8 04 	sts	0x04B8, r24
    328a:	34 c0       	rjmp	.+104    	; 0x32f4 <__LCD_putchar+0xbe>
    328c:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <LCD_clear>
    3290:	14 c0       	rjmp	.+40     	; 0x32ba <__LCD_putchar+0x84>
    3292:	80 e0       	ldi	r24, 0x00	; 0
    3294:	61 e0       	ldi	r22, 0x01	; 1
    3296:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    329a:	80 91 b7 04 	lds	r24, 0x04B7
    329e:	8f 5f       	subi	r24, 0xFF	; 255
    32a0:	80 93 b7 04 	sts	0x04B7, r24
    32a4:	80 91 b7 04 	lds	r24, 0x04B7
    32a8:	87 ff       	sbrs	r24, 7
    32aa:	f3 cf       	rjmp	.-26     	; 0x3292 <__LCD_putchar+0x5c>
    32ac:	10 92 b7 04 	sts	0x04B7, r1
    32b0:	80 91 b8 04 	lds	r24, 0x04B8
    32b4:	81 50       	subi	r24, 0x01	; 1
    32b6:	80 93 b8 04 	sts	0x04B8, r24
    32ba:	00 e0       	ldi	r16, 0x00	; 0
    32bc:	11 e0       	ldi	r17, 0x01	; 1
    32be:	1c c0       	rjmp	.+56     	; 0x32f8 <__LCD_putchar+0xc2>
    32c0:	80 91 b7 04 	lds	r24, 0x04B7
    32c4:	88 23       	and	r24, r24
    32c6:	b1 f0       	breq	.+44     	; 0x32f4 <__LCD_putchar+0xbe>
    32c8:	80 91 b7 04 	lds	r24, 0x04B7
    32cc:	86 50       	subi	r24, 0x06	; 6
    32ce:	80 93 b7 04 	sts	0x04B7, r24
    32d2:	10 c0       	rjmp	.+32     	; 0x32f4 <__LCD_putchar+0xbe>
    32d4:	81 e0       	ldi	r24, 0x01	; 1
    32d6:	0e 94 08 11 	call	0x2210	; 0x2210 <SPKR_open>
    32da:	64 ef       	ldi	r22, 0xF4	; 244
    32dc:	71 e0       	ldi	r23, 0x01	; 1
    32de:	80 e0       	ldi	r24, 0x00	; 0
    32e0:	90 e0       	ldi	r25, 0x00	; 0
    32e2:	4d e7       	ldi	r20, 0x7D	; 125
    32e4:	50 e0       	ldi	r21, 0x00	; 0
    32e6:	24 e6       	ldi	r18, 0x64	; 100
    32e8:	30 e0       	ldi	r19, 0x00	; 0
    32ea:	0e 94 23 1b 	call	0x3646	; 0x3646 <SPKR_play_beep>
    32ee:	81 e0       	ldi	r24, 0x01	; 1
    32f0:	0e 94 ef 1a 	call	0x35de	; 0x35de <SPKR_close>
    32f4:	00 e0       	ldi	r16, 0x00	; 0
    32f6:	10 e0       	ldi	r17, 0x00	; 0
    32f8:	80 91 b8 04 	lds	r24, 0x04B8
    32fc:	60 91 b7 04 	lds	r22, 0x04B7
    3300:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <LCD_set_PGC_addr>
    3304:	00 23       	and	r16, r16
    3306:	51 f1       	breq	.+84     	; 0x335c <__LCD_putchar+0x126>
    3308:	85 e0       	ldi	r24, 0x05	; 5
    330a:	f8 9e       	mul	r15, r24
    330c:	c0 01       	movw	r24, r0
    330e:	11 24       	eor	r1, r1
    3310:	ec 01       	movw	r28, r24
    3312:	c3 55       	subi	r28, 0x53	; 83
    3314:	df 4f       	sbci	r29, 0xFF	; 255
    3316:	8c 01       	movw	r16, r24
    3318:	0e 54       	subi	r16, 0x4E	; 78
    331a:	1f 4f       	sbci	r17, 0xFF	; 255
    331c:	fe 01       	movw	r30, r28
    331e:	84 91       	lpm	r24, Z+
    3320:	61 e0       	ldi	r22, 0x01	; 1
    3322:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    3326:	21 96       	adiw	r28, 0x01	; 1
    3328:	c0 17       	cp	r28, r16
    332a:	d1 07       	cpc	r29, r17
    332c:	b9 f7       	brne	.-18     	; 0x331c <__LCD_putchar+0xe6>
    332e:	80 e0       	ldi	r24, 0x00	; 0
    3330:	61 e0       	ldi	r22, 0x01	; 1
    3332:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <LCD_write>
    3336:	80 91 b7 04 	lds	r24, 0x04B7
    333a:	8a 5f       	subi	r24, 0xFA	; 250
    333c:	80 93 b7 04 	sts	0x04B7, r24
    3340:	80 91 b7 04 	lds	r24, 0x04B7
    3344:	90 e0       	ldi	r25, 0x00	; 0
    3346:	8c 37       	cpi	r24, 0x7C	; 124
    3348:	91 05       	cpc	r25, r1
    334a:	3c f0       	brlt	.+14     	; 0x335a <__LCD_putchar+0x124>
    334c:	10 92 b7 04 	sts	0x04B7, r1
    3350:	80 91 b8 04 	lds	r24, 0x04B8
    3354:	81 50       	subi	r24, 0x01	; 1
    3356:	80 93 b8 04 	sts	0x04B8, r24
    335a:	11 e0       	ldi	r17, 0x01	; 1
    335c:	80 91 b8 04 	lds	r24, 0x04B8
    3360:	83 70       	andi	r24, 0x03	; 3
    3362:	80 93 b8 04 	sts	0x04B8, r24
    3366:	11 30       	cpi	r17, 0x01	; 1
    3368:	59 f4       	brne	.+22     	; 0x3380 <__LCD_putchar+0x14a>
    336a:	80 91 b9 04 	lds	r24, 0x04B9
    336e:	81 30       	cpi	r24, 0x01	; 1
    3370:	39 f4       	brne	.+14     	; 0x3380 <__LCD_putchar+0x14a>
    3372:	e0 91 ba 04 	lds	r30, 0x04BA
    3376:	f0 91 bb 04 	lds	r31, 0x04BB
    337a:	30 97       	sbiw	r30, 0x00	; 0
    337c:	09 f0       	breq	.+2      	; 0x3380 <__LCD_putchar+0x14a>
    337e:	09 95       	icall
    3380:	80 e0       	ldi	r24, 0x00	; 0
    3382:	90 e0       	ldi	r25, 0x00	; 0
    3384:	df 91       	pop	r29
    3386:	cf 91       	pop	r28
    3388:	1f 91       	pop	r17
    338a:	0f 91       	pop	r16
    338c:	ff 90       	pop	r15
    338e:	08 95       	ret

00003390 <__LED_clr_pattern>:
    3390:	85 fd       	sbrc	r24, 5
    3392:	5d 98       	cbi	0x0b, 5	; 11
    3394:	86 fd       	sbrc	r24, 6
    3396:	5e 98       	cbi	0x0b, 6	; 11
    3398:	08 95       	ret

0000339a <__LED_init>:
    339a:	55 9a       	sbi	0x0a, 5	; 10
    339c:	56 9a       	sbi	0x0a, 6	; 10
    339e:	08 95       	ret

000033a0 <__LED_set_pattern>:
    33a0:	85 fd       	sbrc	r24, 5
    33a2:	5d 9a       	sbi	0x0b, 5	; 11
    33a4:	86 fd       	sbrc	r24, 6
    33a6:	5e 9a       	sbi	0x0b, 6	; 11
    33a8:	08 95       	ret

000033aa <ATMEGA_open>:
    33aa:	80 e0       	ldi	r24, 0x00	; 0
    33ac:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    33b0:	88 23       	and	r24, r24
    33b2:	51 f4       	brne	.+20     	; 0x33c8 <ATMEGA_open+0x1e>
    33b4:	f8 94       	cli
    33b6:	0e 94 06 1d 	call	0x3a0c	; 0x3a0c <__ATMEGA_init>
    33ba:	81 e0       	ldi	r24, 0x01	; 1
    33bc:	0e 94 e7 19 	call	0x33ce	; 0x33ce <ATMEGA_set_clk_mode>
    33c0:	80 e0       	ldi	r24, 0x00	; 0
    33c2:	61 e0       	ldi	r22, 0x01	; 1
    33c4:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    33c8:	80 e0       	ldi	r24, 0x00	; 0
    33ca:	91 e0       	ldi	r25, 0x01	; 1
    33cc:	08 95       	ret

000033ce <ATMEGA_set_clk_mode>:
    33ce:	81 30       	cpi	r24, 0x01	; 1
    33d0:	49 f0       	breq	.+18     	; 0x33e4 <ATMEGA_set_clk_mode+0x16>
    33d2:	f8 94       	cli
    33d4:	81 30       	cpi	r24, 0x01	; 1
    33d6:	20 f1       	brcs	.+72     	; 0x3420 <ATMEGA_set_clk_mode+0x52>
    33d8:	82 30       	cpi	r24, 0x02	; 2
    33da:	b1 f0       	breq	.+44     	; 0x3408 <ATMEGA_set_clk_mode+0x3a>
    33dc:	83 30       	cpi	r24, 0x03	; 3
    33de:	09 f0       	breq	.+2      	; 0x33e2 <ATMEGA_set_clk_mode+0x14>
    33e0:	45 c0       	rjmp	.+138    	; 0x346c <ATMEGA_set_clk_mode+0x9e>
    33e2:	17 c0       	rjmp	.+46     	; 0x3412 <ATMEGA_set_clk_mode+0x44>
    33e4:	2c 9a       	sbi	0x05, 4	; 5
    33e6:	80 e8       	ldi	r24, 0x80	; 128
    33e8:	80 93 61 00 	sts	0x0061, r24
    33ec:	10 92 61 00 	sts	0x0061, r1
    33f0:	80 e0       	ldi	r24, 0x00	; 0
    33f2:	90 e0       	ldi	r25, 0x00	; 0
    33f4:	00 00       	nop
    33f6:	01 96       	adiw	r24, 0x01	; 1
    33f8:	88 32       	cpi	r24, 0x28	; 40
    33fa:	91 05       	cpc	r25, r1
    33fc:	d9 f7       	brne	.-10     	; 0x33f4 <ATMEGA_set_clk_mode+0x26>
    33fe:	10 92 68 00 	sts	0x0068, r1
    3402:	10 92 6b 00 	sts	0x006B, r1
    3406:	08 95       	ret
    3408:	80 e8       	ldi	r24, 0x80	; 128
    340a:	80 93 61 00 	sts	0x0061, r24
    340e:	83 e0       	ldi	r24, 0x03	; 3
    3410:	04 c0       	rjmp	.+8      	; 0x341a <ATMEGA_set_clk_mode+0x4c>
    3412:	80 e8       	ldi	r24, 0x80	; 128
    3414:	80 93 61 00 	sts	0x0061, r24
    3418:	88 e0       	ldi	r24, 0x08	; 8
    341a:	80 93 61 00 	sts	0x0061, r24
    341e:	28 c0       	rjmp	.+80     	; 0x3470 <ATMEGA_set_clk_mode+0xa2>
    3420:	80 e0       	ldi	r24, 0x00	; 0
    3422:	90 e0       	ldi	r25, 0x00	; 0
    3424:	00 00       	nop
    3426:	01 96       	adiw	r24, 0x01	; 1
    3428:	2d e6       	ldi	r18, 0x6D	; 109
    342a:	80 36       	cpi	r24, 0x60	; 96
    342c:	92 07       	cpc	r25, r18
    342e:	d1 f7       	brne	.-12     	; 0x3424 <ATMEGA_set_clk_mode+0x56>
    3430:	2c 98       	cbi	0x05, 4	; 5
    3432:	80 e0       	ldi	r24, 0x00	; 0
    3434:	90 e0       	ldi	r25, 0x00	; 0
    3436:	00 00       	nop
    3438:	01 96       	adiw	r24, 0x01	; 1
    343a:	2d e6       	ldi	r18, 0x6D	; 109
    343c:	80 36       	cpi	r24, 0x60	; 96
    343e:	92 07       	cpc	r25, r18
    3440:	d1 f7       	brne	.-12     	; 0x3436 <ATMEGA_set_clk_mode+0x68>
    3442:	10 92 7a 00 	sts	0x007A, r1
    3446:	8f ef       	ldi	r24, 0xFF	; 255
    3448:	80 93 64 00 	sts	0x0064, r24
    344c:	80 91 68 00 	lds	r24, 0x0068
    3450:	81 60       	ori	r24, 0x01	; 1
    3452:	80 93 68 00 	sts	0x0068, r24
    3456:	80 91 6b 00 	lds	r24, 0x006B
    345a:	84 60       	ori	r24, 0x04	; 4
    345c:	80 93 6b 00 	sts	0x006B, r24
    3460:	78 94       	sei
    3462:	83 b7       	in	r24, 0x33	; 51
    3464:	81 60       	ori	r24, 0x01	; 1
    3466:	83 bf       	out	0x33, r24	; 51
    3468:	88 95       	sleep
    346a:	08 95       	ret
    346c:	82 30       	cpi	r24, 0x02	; 2
    346e:	08 f0       	brcs	.+2      	; 0x3472 <ATMEGA_set_clk_mode+0xa4>
    3470:	78 94       	sei
    3472:	08 95       	ret

00003474 <SPI_open>:
    3474:	0f 93       	push	r16
    3476:	1f 93       	push	r17
    3478:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__SPI_init>
    347c:	80 e0       	ldi	r24, 0x00	; 0
    347e:	61 e2       	ldi	r22, 0x21	; 33
    3480:	7d e1       	ldi	r23, 0x1D	; 29
    3482:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <SPI_set_config_func>
    3486:	81 e0       	ldi	r24, 0x01	; 1
    3488:	69 e1       	ldi	r22, 0x19	; 25
    348a:	7d e1       	ldi	r23, 0x1D	; 29
    348c:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <SPI_set_config_func>
    3490:	82 e0       	ldi	r24, 0x02	; 2
    3492:	61 e1       	ldi	r22, 0x11	; 17
    3494:	7d e1       	ldi	r23, 0x1D	; 29
    3496:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <SPI_set_config_func>
    349a:	86 e0       	ldi	r24, 0x06	; 6
    349c:	69 e2       	ldi	r22, 0x29	; 41
    349e:	7d e1       	ldi	r23, 0x1D	; 29
    34a0:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <SPI_set_config_func>
    34a4:	09 e0       	ldi	r16, 0x09	; 9
    34a6:	1d e1       	ldi	r17, 0x1D	; 29
    34a8:	83 e0       	ldi	r24, 0x03	; 3
    34aa:	b8 01       	movw	r22, r16
    34ac:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <SPI_set_config_func>
    34b0:	84 e0       	ldi	r24, 0x04	; 4
    34b2:	b8 01       	movw	r22, r16
    34b4:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <SPI_set_config_func>
    34b8:	85 e0       	ldi	r24, 0x05	; 5
    34ba:	b8 01       	movw	r22, r16
    34bc:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <SPI_set_config_func>
    34c0:	87 e0       	ldi	r24, 0x07	; 7
    34c2:	b8 01       	movw	r22, r16
    34c4:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <SPI_set_config_func>
    34c8:	82 e0       	ldi	r24, 0x02	; 2
    34ca:	61 e0       	ldi	r22, 0x01	; 1
    34cc:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    34d0:	8f ef       	ldi	r24, 0xFF	; 255
    34d2:	80 93 bc 04 	sts	0x04BC, r24
    34d6:	87 e0       	ldi	r24, 0x07	; 7
    34d8:	0e 94 17 10 	call	0x202e	; 0x202e <SPI_set_slave_addr>
    34dc:	82 e0       	ldi	r24, 0x02	; 2
    34de:	91 e0       	ldi	r25, 0x01	; 1
    34e0:	1f 91       	pop	r17
    34e2:	0f 91       	pop	r16
    34e4:	08 95       	ret

000034e6 <SPI_set_config_func>:
    34e6:	e8 2f       	mov	r30, r24
    34e8:	f0 e0       	ldi	r31, 0x00	; 0
    34ea:	ee 0f       	add	r30, r30
    34ec:	ff 1f       	adc	r31, r31
    34ee:	e2 5a       	subi	r30, 0xA2	; 162
    34f0:	fd 4f       	sbci	r31, 0xFD	; 253
    34f2:	71 83       	std	Z+1, r23	; 0x01
    34f4:	60 83       	st	Z, r22
    34f6:	08 95       	ret

000034f8 <__SPKR_TIMER1_COMPA_vect>:
    34f8:	0e 94 7f 1a 	call	0x34fe	; 0x34fe <SPKR_clk>
    34fc:	08 95       	ret

000034fe <SPKR_clk>:
    34fe:	80 91 70 02 	lds	r24, 0x0270
    3502:	90 91 71 02 	lds	r25, 0x0271
    3506:	a0 91 72 02 	lds	r26, 0x0272
    350a:	b0 91 73 02 	lds	r27, 0x0273
    350e:	20 91 74 02 	lds	r18, 0x0274
    3512:	30 91 75 02 	lds	r19, 0x0275
    3516:	40 91 76 02 	lds	r20, 0x0276
    351a:	50 91 77 02 	lds	r21, 0x0277
    351e:	28 0f       	add	r18, r24
    3520:	39 1f       	adc	r19, r25
    3522:	4a 1f       	adc	r20, r26
    3524:	5b 1f       	adc	r21, r27
    3526:	20 93 70 02 	sts	0x0270, r18
    352a:	30 93 71 02 	sts	0x0271, r19
    352e:	40 93 72 02 	sts	0x0272, r20
    3532:	50 93 73 02 	sts	0x0273, r21
    3536:	80 91 70 02 	lds	r24, 0x0270
    353a:	90 91 71 02 	lds	r25, 0x0271
    353e:	a0 91 72 02 	lds	r26, 0x0272
    3542:	b0 91 73 02 	lds	r27, 0x0273
    3546:	88 51       	subi	r24, 0x18	; 24
    3548:	96 4f       	sbci	r25, 0xF6	; 246
    354a:	a0 40       	sbci	r26, 0x00	; 0
    354c:	b0 40       	sbci	r27, 0x00	; 0
    354e:	bc f0       	brlt	.+46     	; 0x357e <SPKR_clk+0x80>
    3550:	8b b1       	in	r24, 0x0b	; 11
    3552:	80 58       	subi	r24, 0x80	; 128
    3554:	8b b9       	out	0x0b, r24	; 11
    3556:	80 91 70 02 	lds	r24, 0x0270
    355a:	90 91 71 02 	lds	r25, 0x0271
    355e:	a0 91 72 02 	lds	r26, 0x0272
    3562:	b0 91 73 02 	lds	r27, 0x0273
    3566:	88 51       	subi	r24, 0x18	; 24
    3568:	96 4f       	sbci	r25, 0xF6	; 246
    356a:	a0 40       	sbci	r26, 0x00	; 0
    356c:	b0 40       	sbci	r27, 0x00	; 0
    356e:	80 93 70 02 	sts	0x0270, r24
    3572:	90 93 71 02 	sts	0x0271, r25
    3576:	a0 93 72 02 	sts	0x0272, r26
    357a:	b0 93 73 02 	sts	0x0273, r27
    357e:	08 95       	ret

00003580 <__SPKR_close_beep_mode>:
    3580:	8a e0       	ldi	r24, 0x0A	; 10
    3582:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    3586:	81 30       	cpi	r24, 0x01	; 1
    3588:	41 f4       	brne	.+16     	; 0x359a <__SPKR_close_beep_mode+0x1a>
    358a:	0e 94 62 1d 	call	0x3ac4	; 0x3ac4 <__SPKR_close>
    358e:	10 92 6f 02 	sts	0x026F, r1
    3592:	8a e0       	ldi	r24, 0x0A	; 10
    3594:	60 e0       	ldi	r22, 0x00	; 0
    3596:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    359a:	08 95       	ret

0000359c <__SPKR_close_tone_mode>:
    359c:	89 e0       	ldi	r24, 0x09	; 9
    359e:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    35a2:	81 30       	cpi	r24, 0x01	; 1
    35a4:	d9 f4       	brne	.+54     	; 0x35dc <__SPKR_close_tone_mode+0x40>
    35a6:	80 91 6e 02 	lds	r24, 0x026E
    35aa:	88 23       	and	r24, r24
    35ac:	11 f0       	breq	.+4      	; 0x35b2 <__SPKR_close_tone_mode+0x16>
    35ae:	0e 94 70 1b 	call	0x36e0	; 0x36e0 <__SPKR_stop>
    35b2:	82 e0       	ldi	r24, 0x02	; 2
    35b4:	0e 94 62 1d 	call	0x3ac4	; 0x3ac4 <__SPKR_close>
    35b8:	80 91 7c 02 	lds	r24, 0x027C
    35bc:	90 91 7d 02 	lds	r25, 0x027D
    35c0:	00 97       	sbiw	r24, 0x00	; 0
    35c2:	31 f0       	breq	.+12     	; 0x35d0 <__SPKR_close_tone_mode+0x34>
    35c4:	0e 94 21 2a 	call	0x5442	; 0x5442 <free>
    35c8:	10 92 7d 02 	sts	0x027D, r1
    35cc:	10 92 7c 02 	sts	0x027C, r1
    35d0:	10 92 6e 02 	sts	0x026E, r1
    35d4:	89 e0       	ldi	r24, 0x09	; 9
    35d6:	60 e0       	ldi	r22, 0x00	; 0
    35d8:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    35dc:	08 95       	ret

000035de <SPKR_close>:
    35de:	81 30       	cpi	r24, 0x01	; 1
    35e0:	29 f0       	breq	.+10     	; 0x35ec <SPKR_close+0xe>
    35e2:	82 30       	cpi	r24, 0x02	; 2
    35e4:	29 f4       	brne	.+10     	; 0x35f0 <SPKR_close+0x12>
    35e6:	0e 94 ce 1a 	call	0x359c	; 0x359c <__SPKR_close_tone_mode>
    35ea:	08 95       	ret
    35ec:	0e 94 c0 1a 	call	0x3580	; 0x3580 <__SPKR_close_beep_mode>
    35f0:	08 95       	ret

000035f2 <__SPKR_init>:
    35f2:	98 2f       	mov	r25, r24
    35f4:	80 91 6e 02 	lds	r24, 0x026E
    35f8:	88 23       	and	r24, r24
    35fa:	31 f4       	brne	.+12     	; 0x3608 <__SPKR_init+0x16>
    35fc:	80 91 6f 02 	lds	r24, 0x026F
    3600:	88 23       	and	r24, r24
    3602:	11 f4       	brne	.+4      	; 0x3608 <__SPKR_init+0x16>
    3604:	57 9a       	sbi	0x0a, 7	; 10
    3606:	5f 98       	cbi	0x0b, 7	; 11
    3608:	80 91 6e 02 	lds	r24, 0x026E
    360c:	88 23       	and	r24, r24
    360e:	d1 f4       	brne	.+52     	; 0x3644 <__SPKR_init+0x52>
    3610:	92 30       	cpi	r25, 0x02	; 2
    3612:	c1 f4       	brne	.+48     	; 0x3644 <__SPKR_init+0x52>
    3614:	10 92 80 00 	sts	0x0080, r1
    3618:	10 92 81 00 	sts	0x0081, r1
    361c:	80 91 81 00 	lds	r24, 0x0081
    3620:	88 60       	ori	r24, 0x08	; 8
    3622:	80 93 81 00 	sts	0x0081, r24
    3626:	80 91 81 00 	lds	r24, 0x0081
    362a:	81 60       	ori	r24, 0x01	; 1
    362c:	80 93 81 00 	sts	0x0081, r24
    3630:	10 92 85 00 	sts	0x0085, r1
    3634:	10 92 84 00 	sts	0x0084, r1
    3638:	81 e0       	ldi	r24, 0x01	; 1
    363a:	80 93 89 00 	sts	0x0089, r24
    363e:	80 e9       	ldi	r24, 0x90	; 144
    3640:	80 93 88 00 	sts	0x0088, r24
    3644:	08 95       	ret

00003646 <SPKR_play_beep>:
    3646:	8f 92       	push	r8
    3648:	9f 92       	push	r9
    364a:	af 92       	push	r10
    364c:	bf 92       	push	r11
    364e:	cf 92       	push	r12
    3650:	df 92       	push	r13
    3652:	ef 92       	push	r14
    3654:	ff 92       	push	r15
    3656:	0f 93       	push	r16
    3658:	1f 93       	push	r17
    365a:	cf 93       	push	r28
    365c:	df 93       	push	r29
    365e:	4b 01       	movw	r8, r22
    3660:	5c 01       	movw	r10, r24
    3662:	ea 01       	movw	r28, r20
    3664:	b9 01       	movw	r22, r18
    3666:	21 15       	cp	r18, r1
    3668:	31 05       	cpc	r19, r1
    366a:	39 f1       	breq	.+78     	; 0x36ba <SPKR_play_beep+0x74>
    366c:	9e 01       	movw	r18, r28
    366e:	44 27       	eor	r20, r20
    3670:	37 fd       	sbrc	r19, 7
    3672:	40 95       	com	r20
    3674:	54 2f       	mov	r21, r20
    3676:	65 36       	cpi	r22, 0x65	; 101
    3678:	71 05       	cpc	r23, r1
    367a:	10 f0       	brcs	.+4      	; 0x3680 <SPKR_play_beep+0x3a>
    367c:	64 e6       	ldi	r22, 0x64	; 100
    367e:	70 e0       	ldi	r23, 0x00	; 0
    3680:	80 e0       	ldi	r24, 0x00	; 0
    3682:	90 e0       	ldi	r25, 0x00	; 0
    3684:	0e 94 d5 28 	call	0x51aa	; 0x51aa <__mulsi3>
    3688:	24 e6       	ldi	r18, 0x64	; 100
    368a:	30 e0       	ldi	r19, 0x00	; 0
    368c:	40 e0       	ldi	r20, 0x00	; 0
    368e:	50 e0       	ldi	r21, 0x00	; 0
    3690:	0e 94 07 29 	call	0x520e	; 0x520e <__udivmodsi4>
    3694:	79 01       	movw	r14, r18
    3696:	8a 01       	movw	r16, r20
    3698:	c5 01       	movw	r24, r10
    369a:	b4 01       	movw	r22, r8
    369c:	0e 94 4b 1d 	call	0x3a96	; 0x3a96 <SPKR_beep>
    36a0:	c7 01       	movw	r24, r14
    36a2:	0e 94 66 15 	call	0x2acc	; 0x2acc <TMRSRVC_delay>
    36a6:	60 e0       	ldi	r22, 0x00	; 0
    36a8:	70 e0       	ldi	r23, 0x00	; 0
    36aa:	80 e0       	ldi	r24, 0x00	; 0
    36ac:	90 e0       	ldi	r25, 0x00	; 0
    36ae:	0e 94 4b 1d 	call	0x3a96	; 0x3a96 <SPKR_beep>
    36b2:	ce 01       	movw	r24, r28
    36b4:	8e 19       	sub	r24, r14
    36b6:	9f 09       	sbc	r25, r15
    36b8:	04 c0       	rjmp	.+8      	; 0x36c2 <SPKR_play_beep+0x7c>
    36ba:	41 15       	cp	r20, r1
    36bc:	51 05       	cpc	r21, r1
    36be:	19 f0       	breq	.+6      	; 0x36c6 <SPKR_play_beep+0x80>
    36c0:	ca 01       	movw	r24, r20
    36c2:	0e 94 66 15 	call	0x2acc	; 0x2acc <TMRSRVC_delay>
    36c6:	df 91       	pop	r29
    36c8:	cf 91       	pop	r28
    36ca:	1f 91       	pop	r17
    36cc:	0f 91       	pop	r16
    36ce:	ff 90       	pop	r15
    36d0:	ef 90       	pop	r14
    36d2:	df 90       	pop	r13
    36d4:	cf 90       	pop	r12
    36d6:	bf 90       	pop	r11
    36d8:	af 90       	pop	r10
    36da:	9f 90       	pop	r9
    36dc:	8f 90       	pop	r8
    36de:	08 95       	ret

000036e0 <__SPKR_stop>:
    36e0:	ef e6       	ldi	r30, 0x6F	; 111
    36e2:	f0 e0       	ldi	r31, 0x00	; 0
    36e4:	80 81       	ld	r24, Z
    36e6:	8d 7f       	andi	r24, 0xFD	; 253
    36e8:	80 83       	st	Z, r24
    36ea:	08 95       	ret

000036ec <STEPPER_go>:
    36ec:	98 2f       	mov	r25, r24
    36ee:	81 e0       	ldi	r24, 0x01	; 1
    36f0:	80 93 a1 04 	sts	0x04A1, r24
    36f4:	91 30       	cpi	r25, 0x01	; 1
    36f6:	51 f0       	breq	.+20     	; 0x370c <STEPPER_go+0x20>
    36f8:	91 30       	cpi	r25, 0x01	; 1
    36fa:	18 f0       	brcs	.+6      	; 0x3702 <STEPPER_go+0x16>
    36fc:	92 30       	cpi	r25, 0x02	; 2
    36fe:	41 f4       	brne	.+16     	; 0x3710 <STEPPER_go+0x24>
    3700:	03 c0       	rjmp	.+6      	; 0x3708 <STEPPER_go+0x1c>
    3702:	10 92 89 04 	sts	0x0489, r1
    3706:	04 c0       	rjmp	.+8      	; 0x3710 <STEPPER_go+0x24>
    3708:	10 92 89 04 	sts	0x0489, r1
    370c:	10 92 8a 04 	sts	0x048A, r1
    3710:	10 92 a1 04 	sts	0x04A1, r1
    3714:	08 95       	ret

00003716 <__STEPPER_init>:
    3716:	3a 9a       	sbi	0x07, 2	; 7
    3718:	3b 9a       	sbi	0x07, 3	; 7
    371a:	3c 9a       	sbi	0x07, 4	; 7
    371c:	3d 9a       	sbi	0x07, 5	; 7
    371e:	3e 9a       	sbi	0x07, 6	; 7
    3720:	3f 9a       	sbi	0x07, 7	; 7
    3722:	88 b1       	in	r24, 0x08	; 8
    3724:	83 70       	andi	r24, 0x03	; 3
    3726:	88 b9       	out	0x08, r24	; 8
    3728:	08 95       	ret

0000372a <STEPPER_set_steps>:
    372a:	98 2f       	mov	r25, r24
    372c:	81 e0       	ldi	r24, 0x01	; 1
    372e:	80 93 a1 04 	sts	0x04A1, r24
    3732:	91 30       	cpi	r25, 0x01	; 1
    3734:	71 f0       	breq	.+28     	; 0x3752 <STEPPER_set_steps+0x28>
    3736:	91 30       	cpi	r25, 0x01	; 1
    3738:	18 f0       	brcs	.+6      	; 0x3740 <STEPPER_set_steps+0x16>
    373a:	92 30       	cpi	r25, 0x02	; 2
    373c:	71 f4       	brne	.+28     	; 0x375a <STEPPER_set_steps+0x30>
    373e:	05 c0       	rjmp	.+10     	; 0x374a <STEPPER_set_steps+0x20>
    3740:	70 93 7e 04 	sts	0x047E, r23
    3744:	60 93 7d 04 	sts	0x047D, r22
    3748:	08 c0       	rjmp	.+16     	; 0x375a <STEPPER_set_steps+0x30>
    374a:	70 93 7e 04 	sts	0x047E, r23
    374e:	60 93 7d 04 	sts	0x047D, r22
    3752:	70 93 80 04 	sts	0x0480, r23
    3756:	60 93 7f 04 	sts	0x047F, r22
    375a:	10 92 a1 04 	sts	0x04A1, r1
    375e:	08 95       	ret

00003760 <STEPPER_set_stop_mode>:
    3760:	98 2f       	mov	r25, r24
    3762:	81 e0       	ldi	r24, 0x01	; 1
    3764:	80 93 a1 04 	sts	0x04A1, r24
    3768:	91 30       	cpi	r25, 0x01	; 1
    376a:	51 f0       	breq	.+20     	; 0x3780 <STEPPER_set_stop_mode+0x20>
    376c:	91 30       	cpi	r25, 0x01	; 1
    376e:	18 f0       	brcs	.+6      	; 0x3776 <STEPPER_set_stop_mode+0x16>
    3770:	92 30       	cpi	r25, 0x02	; 2
    3772:	41 f4       	brne	.+16     	; 0x3784 <STEPPER_set_stop_mode+0x24>
    3774:	03 c0       	rjmp	.+6      	; 0x377c <STEPPER_set_stop_mode+0x1c>
    3776:	60 93 8b 04 	sts	0x048B, r22
    377a:	04 c0       	rjmp	.+8      	; 0x3784 <STEPPER_set_stop_mode+0x24>
    377c:	60 93 8b 04 	sts	0x048B, r22
    3780:	60 93 8c 04 	sts	0x048C, r22
    3784:	10 92 a1 04 	sts	0x04A1, r1
    3788:	08 95       	ret

0000378a <STEPPER_setup_decels>:
    378a:	0f 93       	push	r16
    378c:	1f 93       	push	r17
    378e:	cf 93       	push	r28
    3790:	df 93       	push	r29
    3792:	eb 01       	movw	r28, r22
    3794:	8a 01       	movw	r16, r20
    3796:	81 30       	cpi	r24, 0x01	; 1
    3798:	01 f1       	breq	.+64     	; 0x37da <STEPPER_setup_decels+0x50>
    379a:	81 30       	cpi	r24, 0x01	; 1
    379c:	18 f0       	brcs	.+6      	; 0x37a4 <STEPPER_setup_decels+0x1a>
    379e:	82 30       	cpi	r24, 0x02	; 2
    37a0:	61 f5       	brne	.+88     	; 0x37fa <STEPPER_setup_decels+0x70>
    37a2:	0d c0       	rjmp	.+26     	; 0x37be <STEPPER_setup_decels+0x34>
    37a4:	80 91 75 04 	lds	r24, 0x0475
    37a8:	90 91 76 04 	lds	r25, 0x0476
    37ac:	89 2b       	or	r24, r25
    37ae:	11 f0       	breq	.+4      	; 0x37b4 <STEPPER_setup_decels+0x2a>
    37b0:	80 e0       	ldi	r24, 0x00	; 0
    37b2:	1a c0       	rjmp	.+52     	; 0x37e8 <STEPPER_setup_decels+0x5e>
    37b4:	10 92 82 04 	sts	0x0482, r1
    37b8:	10 92 81 04 	sts	0x0481, r1
    37bc:	1e c0       	rjmp	.+60     	; 0x37fa <STEPPER_setup_decels+0x70>
    37be:	80 91 75 04 	lds	r24, 0x0475
    37c2:	90 91 76 04 	lds	r25, 0x0476
    37c6:	89 2b       	or	r24, r25
    37c8:	21 f0       	breq	.+8      	; 0x37d2 <STEPPER_setup_decels+0x48>
    37ca:	80 e0       	ldi	r24, 0x00	; 0
    37cc:	0e 94 7e 1d 	call	0x3afc	; 0x3afc <STEPPER_set_decel_step_values>
    37d0:	04 c0       	rjmp	.+8      	; 0x37da <STEPPER_setup_decels+0x50>
    37d2:	10 92 82 04 	sts	0x0482, r1
    37d6:	10 92 81 04 	sts	0x0481, r1
    37da:	80 91 77 04 	lds	r24, 0x0477
    37de:	90 91 78 04 	lds	r25, 0x0478
    37e2:	89 2b       	or	r24, r25
    37e4:	31 f0       	breq	.+12     	; 0x37f2 <STEPPER_setup_decels+0x68>
    37e6:	81 e0       	ldi	r24, 0x01	; 1
    37e8:	be 01       	movw	r22, r28
    37ea:	a8 01       	movw	r20, r16
    37ec:	0e 94 7e 1d 	call	0x3afc	; 0x3afc <STEPPER_set_decel_step_values>
    37f0:	04 c0       	rjmp	.+8      	; 0x37fa <STEPPER_setup_decels+0x70>
    37f2:	10 92 84 04 	sts	0x0484, r1
    37f6:	10 92 83 04 	sts	0x0483, r1
    37fa:	df 91       	pop	r29
    37fc:	cf 91       	pop	r28
    37fe:	1f 91       	pop	r17
    3800:	0f 91       	pop	r16
    3802:	08 95       	ret

00003804 <SYS_init>:
    3804:	10 92 a4 04 	sts	0x04A4, r1
    3808:	10 92 a5 04 	sts	0x04A5, r1
    380c:	10 92 a9 04 	sts	0x04A9, r1
    3810:	10 92 a6 04 	sts	0x04A6, r1
    3814:	10 92 a8 04 	sts	0x04A8, r1
    3818:	10 92 aa 04 	sts	0x04AA, r1
    381c:	10 92 ab 04 	sts	0x04AB, r1
    3820:	10 92 ac 04 	sts	0x04AC, r1
    3824:	10 92 ad 04 	sts	0x04AD, r1
    3828:	10 92 ae 04 	sts	0x04AE, r1
    382c:	10 92 af 04 	sts	0x04AF, r1
    3830:	10 92 b0 04 	sts	0x04B0, r1
    3834:	10 92 b1 04 	sts	0x04B1, r1
    3838:	10 92 b2 04 	sts	0x04B2, r1
    383c:	10 92 b3 04 	sts	0x04B3, r1
    3840:	10 92 b4 04 	sts	0x04B4, r1
    3844:	10 92 b5 04 	sts	0x04B5, r1
    3848:	08 95       	ret

0000384a <ATTINY_get_sensors>:
    384a:	0f 93       	push	r16
    384c:	1f 93       	push	r17
    384e:	81 e0       	ldi	r24, 0x01	; 1
    3850:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    3854:	81 30       	cpi	r24, 0x01	; 1
    3856:	11 f0       	breq	.+4      	; 0x385c <ATTINY_get_sensors+0x12>
    3858:	00 e0       	ldi	r16, 0x00	; 0
    385a:	24 c0       	rjmp	.+72     	; 0x38a4 <ATTINY_get_sensors+0x5a>
    385c:	87 e0       	ldi	r24, 0x07	; 7
    385e:	0e 94 17 10 	call	0x202e	; 0x202e <SPI_set_slave_addr>
    3862:	82 e0       	ldi	r24, 0x02	; 2
    3864:	6a e0       	ldi	r22, 0x0A	; 10
    3866:	0e 94 68 10 	call	0x20d0	; 0x20d0 <SPI_transmit>
    386a:	82 e0       	ldi	r24, 0x02	; 2
    386c:	62 eb       	ldi	r22, 0xB2	; 178
    386e:	0e 94 68 10 	call	0x20d0	; 0x20d0 <SPI_transmit>
    3872:	18 ec       	ldi	r17, 0xC8	; 200
    3874:	81 2f       	mov	r24, r17
    3876:	8a 95       	dec	r24
    3878:	f1 f7       	brne	.-4      	; 0x3876 <ATTINY_get_sensors+0x2c>
    387a:	82 e0       	ldi	r24, 0x02	; 2
    387c:	60 e0       	ldi	r22, 0x00	; 0
    387e:	0e 94 39 1d 	call	0x3a72	; 0x3a72 <SPI_receive>
    3882:	08 2f       	mov	r16, r24
    3884:	81 2f       	mov	r24, r17
    3886:	8a 95       	dec	r24
    3888:	f1 f7       	brne	.-4      	; 0x3886 <ATTINY_get_sensors+0x3c>
    388a:	82 e0       	ldi	r24, 0x02	; 2
    388c:	60 e0       	ldi	r22, 0x00	; 0
    388e:	0e 94 39 1d 	call	0x3a72	; 0x3a72 <SPI_receive>
    3892:	1a 95       	dec	r17
    3894:	f1 f7       	brne	.-4      	; 0x3892 <ATTINY_get_sensors+0x48>
    3896:	87 e0       	ldi	r24, 0x07	; 7
    3898:	0e 94 17 10 	call	0x202e	; 0x202e <SPI_set_slave_addr>
    389c:	88 e8       	ldi	r24, 0x88	; 136
    389e:	93 e1       	ldi	r25, 0x13	; 19
    38a0:	01 97       	sbiw	r24, 0x01	; 1
    38a2:	f1 f7       	brne	.-4      	; 0x38a0 <ATTINY_get_sensors+0x56>
    38a4:	80 2f       	mov	r24, r16
    38a6:	1f 91       	pop	r17
    38a8:	0f 91       	pop	r16
    38aa:	08 95       	ret

000038ac <TMRSRVC_insert>:
    38ac:	cf 92       	push	r12
    38ae:	df 92       	push	r13
    38b0:	ef 92       	push	r14
    38b2:	ff 92       	push	r15
    38b4:	0f 93       	push	r16
    38b6:	1f 93       	push	r17
    38b8:	cf 93       	push	r28
    38ba:	df 93       	push	r29
    38bc:	ec 01       	movw	r28, r24
    38be:	80 91 db 04 	lds	r24, 0x04DB
    38c2:	88 23       	and	r24, r24
    38c4:	39 f4       	brne	.+14     	; 0x38d4 <TMRSRVC_insert+0x28>
    38c6:	d0 93 dd 04 	sts	0x04DD, r29
    38ca:	c0 93 dc 04 	sts	0x04DC, r28
    38ce:	0e 94 e4 1c 	call	0x39c8	; 0x39c8 <TMRSRVC_start>
    38d2:	47 c0       	rjmp	.+142    	; 0x3962 <TMRSRVC_insert+0xb6>
    38d4:	c0 90 dc 04 	lds	r12, 0x04DC
    38d8:	d0 90 dd 04 	lds	r13, 0x04DD
    38dc:	00 e0       	ldi	r16, 0x00	; 0
    38de:	10 e0       	ldi	r17, 0x00	; 0
    38e0:	ee 24       	eor	r14, r14
    38e2:	ff 24       	eor	r15, r15
    38e4:	37 c0       	rjmp	.+110    	; 0x3954 <TMRSRVC_insert+0xa8>
    38e6:	a8 81       	ld	r26, Y
    38e8:	b9 81       	ldd	r27, Y+1	; 0x01
    38ea:	fd 01       	movw	r30, r26
    38ec:	64 81       	ldd	r22, Z+4	; 0x04
    38ee:	75 81       	ldd	r23, Z+5	; 0x05
    38f0:	f6 01       	movw	r30, r12
    38f2:	40 81       	ld	r20, Z
    38f4:	51 81       	ldd	r21, Z+1	; 0x01
    38f6:	fa 01       	movw	r30, r20
    38f8:	84 81       	ldd	r24, Z+4	; 0x04
    38fa:	95 81       	ldd	r25, Z+5	; 0x05
    38fc:	9b 01       	movw	r18, r22
    38fe:	28 1b       	sub	r18, r24
    3900:	39 0b       	sbc	r19, r25
    3902:	37 ff       	sbrs	r19, 7
    3904:	0f c0       	rjmp	.+30     	; 0x3924 <TMRSRVC_insert+0x78>
    3906:	86 1b       	sub	r24, r22
    3908:	97 0b       	sbc	r25, r23
    390a:	95 83       	std	Z+5, r25	; 0x05
    390c:	84 83       	std	Z+4, r24	; 0x04
    390e:	db 82       	std	Y+3, r13	; 0x03
    3910:	ca 82       	std	Y+2, r12	; 0x02
    3912:	01 2b       	or	r16, r17
    3914:	29 f4       	brne	.+10     	; 0x3920 <TMRSRVC_insert+0x74>
    3916:	d0 93 dd 04 	sts	0x04DD, r29
    391a:	c0 93 dc 04 	sts	0x04DC, r28
    391e:	21 c0       	rjmp	.+66     	; 0x3962 <TMRSRVC_insert+0xb6>
    3920:	f7 01       	movw	r30, r14
    3922:	0c c0       	rjmp	.+24     	; 0x393c <TMRSRVC_insert+0x90>
    3924:	f6 01       	movw	r30, r12
    3926:	82 81       	ldd	r24, Z+2	; 0x02
    3928:	93 81       	ldd	r25, Z+3	; 0x03
    392a:	21 15       	cp	r18, r1
    392c:	31 05       	cpc	r19, r1
    392e:	49 f4       	brne	.+18     	; 0x3942 <TMRSRVC_insert+0x96>
    3930:	fd 01       	movw	r30, r26
    3932:	15 82       	std	Z+5, r1	; 0x05
    3934:	14 82       	std	Z+4, r1	; 0x04
    3936:	9b 83       	std	Y+3, r25	; 0x03
    3938:	8a 83       	std	Y+2, r24	; 0x02
    393a:	f6 01       	movw	r30, r12
    393c:	d3 83       	std	Z+3, r29	; 0x03
    393e:	c2 83       	std	Z+2, r28	; 0x02
    3940:	10 c0       	rjmp	.+32     	; 0x3962 <TMRSRVC_insert+0xb6>
    3942:	fd 01       	movw	r30, r26
    3944:	35 83       	std	Z+5, r19	; 0x05
    3946:	24 83       	std	Z+4, r18	; 0x04
    3948:	00 97       	sbiw	r24, 0x00	; 0
    394a:	b9 f3       	breq	.-18     	; 0x393a <TMRSRVC_insert+0x8e>
    394c:	0f 5f       	subi	r16, 0xFF	; 255
    394e:	1f 4f       	sbci	r17, 0xFF	; 255
    3950:	76 01       	movw	r14, r12
    3952:	6c 01       	movw	r12, r24
    3954:	80 91 db 04 	lds	r24, 0x04DB
    3958:	90 e0       	ldi	r25, 0x00	; 0
    395a:	08 17       	cp	r16, r24
    395c:	19 07       	cpc	r17, r25
    395e:	18 f2       	brcs	.-122    	; 0x38e6 <TMRSRVC_insert+0x3a>
    3960:	ec cf       	rjmp	.-40     	; 0x393a <TMRSRVC_insert+0x8e>
    3962:	80 91 db 04 	lds	r24, 0x04DB
    3966:	8f 5f       	subi	r24, 0xFF	; 255
    3968:	80 93 db 04 	sts	0x04DB, r24
    396c:	df 91       	pop	r29
    396e:	cf 91       	pop	r28
    3970:	1f 91       	pop	r17
    3972:	0f 91       	pop	r16
    3974:	ff 90       	pop	r15
    3976:	ef 90       	pop	r14
    3978:	df 90       	pop	r13
    397a:	cf 90       	pop	r12
    397c:	08 95       	ret

0000397e <TMRSRVC_open>:
    397e:	88 e0       	ldi	r24, 0x08	; 8
    3980:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    3984:	88 23       	and	r24, r24
    3986:	b9 f4       	brne	.+46     	; 0x39b6 <TMRSRVC_open+0x38>
    3988:	10 92 db 04 	sts	0x04DB, r1
    398c:	10 92 dd 04 	sts	0x04DD, r1
    3990:	10 92 dc 04 	sts	0x04DC, r1
    3994:	10 92 7e 02 	sts	0x027E, r1
    3998:	10 92 7f 02 	sts	0x027F, r1
    399c:	80 e1       	ldi	r24, 0x10	; 16
    399e:	6b ee       	ldi	r22, 0xEB	; 235
    39a0:	7d e1       	ldi	r23, 0x1D	; 29
    39a2:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__ISR_attach>
    39a6:	0e 94 f2 1d 	call	0x3be4	; 0x3be4 <__TMRSRVC_init>
    39aa:	0e 94 de 1c 	call	0x39bc	; 0x39bc <__TMRSRVC_start>
    39ae:	88 e0       	ldi	r24, 0x08	; 8
    39b0:	61 e0       	ldi	r22, 0x01	; 1
    39b2:	0e 94 82 14 	call	0x2904	; 0x2904 <SYS_set_state>
    39b6:	88 e0       	ldi	r24, 0x08	; 8
    39b8:	91 e0       	ldi	r25, 0x01	; 1
    39ba:	08 95       	ret

000039bc <__TMRSRVC_start>:
    39bc:	ee e6       	ldi	r30, 0x6E	; 110
    39be:	f0 e0       	ldi	r31, 0x00	; 0
    39c0:	80 81       	ld	r24, Z
    39c2:	82 60       	ori	r24, 0x02	; 2
    39c4:	80 83       	st	Z, r24
    39c6:	08 95       	ret

000039c8 <TMRSRVC_start>:
    39c8:	81 e0       	ldi	r24, 0x01	; 1
    39ca:	80 93 7f 02 	sts	0x027F, r24
    39ce:	08 95       	ret

000039d0 <I2C_enable>:
    39d0:	80 91 de 04 	lds	r24, 0x04DE
    39d4:	81 30       	cpi	r24, 0x01	; 1
    39d6:	29 f4       	brne	.+10     	; 0x39e2 <I2C_enable+0x12>
    39d8:	80 91 bc 00 	lds	r24, 0x00BC
    39dc:	84 60       	ori	r24, 0x04	; 4
    39de:	80 93 bc 00 	sts	0x00BC, r24
    39e2:	08 95       	ret

000039e4 <__I2C_init>:
    39e4:	38 98       	cbi	0x07, 0	; 7
    39e6:	39 98       	cbi	0x07, 1	; 7
    39e8:	08 95       	ret

000039ea <__ISR_attach>:
    39ea:	80 32       	cpi	r24, 0x20	; 32
    39ec:	18 f0       	brcs	.+6      	; 0x39f4 <__ISR_attach+0xa>
    39ee:	20 e0       	ldi	r18, 0x00	; 0
    39f0:	30 e0       	ldi	r19, 0x00	; 0
    39f2:	0a c0       	rjmp	.+20     	; 0x3a08 <__ISR_attach+0x1e>
    39f4:	e8 2f       	mov	r30, r24
    39f6:	f0 e0       	ldi	r31, 0x00	; 0
    39f8:	ee 0f       	add	r30, r30
    39fa:	ff 1f       	adc	r31, r31
    39fc:	e2 5e       	subi	r30, 0xE2	; 226
    39fe:	fd 4f       	sbci	r31, 0xFD	; 253
    3a00:	20 81       	ld	r18, Z
    3a02:	31 81       	ldd	r19, Z+1	; 0x01
    3a04:	71 83       	std	Z+1, r23	; 0x01
    3a06:	60 83       	st	Z, r22
    3a08:	c9 01       	movw	r24, r18
    3a0a:	08 95       	ret

00003a0c <__ATMEGA_init>:
    3a0c:	24 9a       	sbi	0x04, 4	; 4
    3a0e:	2c 9a       	sbi	0x05, 4	; 5
    3a10:	08 95       	ret

00003a12 <SPI_default_config>:
    3a12:	83 e5       	ldi	r24, 0x53	; 83
    3a14:	8c bd       	out	0x2c, r24	; 44
    3a16:	81 e0       	ldi	r24, 0x01	; 1
    3a18:	8d bd       	out	0x2d, r24	; 45
    3a1a:	8d e0       	ldi	r24, 0x0D	; 13
    3a1c:	8a 95       	dec	r24
    3a1e:	f1 f7       	brne	.-4      	; 0x3a1c <SPI_default_config+0xa>
    3a20:	08 95       	ret

00003a22 <SPI_ATtiny0_config>:
    3a22:	83 e5       	ldi	r24, 0x53	; 83
    3a24:	8c bd       	out	0x2c, r24	; 44
    3a26:	1d bc       	out	0x2d, r1	; 45
    3a28:	84 ef       	ldi	r24, 0xF4	; 244
    3a2a:	91 e0       	ldi	r25, 0x01	; 1
    3a2c:	01 97       	sbiw	r24, 0x01	; 1
    3a2e:	f1 f7       	brne	.-4      	; 0x3a2c <SPI_ATtiny0_config+0xa>
    3a30:	08 95       	ret

00003a32 <SPI_PSXC_config>:
    3a32:	8f e7       	ldi	r24, 0x7F	; 127
    3a34:	8c bd       	out	0x2c, r24	; 44
    3a36:	1d bc       	out	0x2d, r1	; 45
    3a38:	84 ef       	ldi	r24, 0xF4	; 244
    3a3a:	91 e0       	ldi	r25, 0x01	; 1
    3a3c:	01 97       	sbiw	r24, 0x01	; 1
    3a3e:	f1 f7       	brne	.-4      	; 0x3a3c <SPI_PSXC_config+0xa>
    3a40:	08 95       	ret

00003a42 <SPI_LCD_config>:
    3a42:	83 e5       	ldi	r24, 0x53	; 83
    3a44:	8c bd       	out	0x2c, r24	; 44
    3a46:	81 e0       	ldi	r24, 0x01	; 1
    3a48:	8d bd       	out	0x2d, r24	; 45
    3a4a:	8d e0       	ldi	r24, 0x0D	; 13
    3a4c:	8a 95       	dec	r24
    3a4e:	f1 f7       	brne	.-4      	; 0x3a4c <SPI_LCD_config+0xa>
    3a50:	08 95       	ret

00003a52 <SPI_FLASH_config>:
    3a52:	83 e5       	ldi	r24, 0x53	; 83
    3a54:	8c bd       	out	0x2c, r24	; 44
    3a56:	81 e0       	ldi	r24, 0x01	; 1
    3a58:	8d bd       	out	0x2d, r24	; 45
    3a5a:	84 ef       	ldi	r24, 0xF4	; 244
    3a5c:	91 e0       	ldi	r25, 0x01	; 1
    3a5e:	01 97       	sbiw	r24, 0x01	; 1
    3a60:	f1 f7       	brne	.-4      	; 0x3a5e <SPI_FLASH_config+0xc>
    3a62:	08 95       	ret

00003a64 <__SPI_init>:
    3a64:	25 9a       	sbi	0x04, 5	; 4
    3a66:	26 98       	cbi	0x04, 6	; 4
    3a68:	27 9a       	sbi	0x04, 7	; 4
    3a6a:	20 9a       	sbi	0x04, 0	; 4
    3a6c:	21 9a       	sbi	0x04, 1	; 4
    3a6e:	22 9a       	sbi	0x04, 2	; 4
    3a70:	08 95       	ret

00003a72 <SPI_receive>:
    3a72:	1f 93       	push	r17
    3a74:	16 2f       	mov	r17, r22
    3a76:	0e 94 17 10 	call	0x202e	; 0x202e <SPI_set_slave_addr>
    3a7a:	82 e0       	ldi	r24, 0x02	; 2
    3a7c:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    3a80:	81 30       	cpi	r24, 0x01	; 1
    3a82:	11 f0       	breq	.+4      	; 0x3a88 <SPI_receive+0x16>
    3a84:	80 e0       	ldi	r24, 0x00	; 0
    3a86:	05 c0       	rjmp	.+10     	; 0x3a92 <SPI_receive+0x20>
    3a88:	1e bd       	out	0x2e, r17	; 46
    3a8a:	0d b4       	in	r0, 0x2d	; 45
    3a8c:	07 fe       	sbrs	r0, 7
    3a8e:	fd cf       	rjmp	.-6      	; 0x3a8a <SPI_receive+0x18>
    3a90:	8e b5       	in	r24, 0x2e	; 46
    3a92:	1f 91       	pop	r17
    3a94:	08 95       	ret

00003a96 <SPKR_beep>:
    3a96:	9b 01       	movw	r18, r22
    3a98:	ac 01       	movw	r20, r24
    3a9a:	80 91 6f 02 	lds	r24, 0x026F
    3a9e:	88 23       	and	r24, r24
    3aa0:	81 f0       	breq	.+32     	; 0x3ac2 <SPKR_beep+0x2c>
    3aa2:	da 01       	movw	r26, r20
    3aa4:	c9 01       	movw	r24, r18
    3aa6:	88 0f       	add	r24, r24
    3aa8:	99 1f       	adc	r25, r25
    3aaa:	aa 1f       	adc	r26, r26
    3aac:	bb 1f       	adc	r27, r27
    3aae:	90 93 7b 02 	sts	0x027B, r25
    3ab2:	80 93 7a 02 	sts	0x027A, r24
    3ab6:	21 15       	cp	r18, r1
    3ab8:	31 05       	cpc	r19, r1
    3aba:	41 05       	cpc	r20, r1
    3abc:	51 05       	cpc	r21, r1
    3abe:	09 f4       	brne	.+2      	; 0x3ac2 <SPKR_beep+0x2c>
    3ac0:	5f 98       	cbi	0x0b, 7	; 11
    3ac2:	08 95       	ret

00003ac4 <__SPKR_close>:
    3ac4:	82 30       	cpi	r24, 0x02	; 2
    3ac6:	29 f4       	brne	.+10     	; 0x3ad2 <__SPKR_close+0xe>
    3ac8:	80 91 81 00 	lds	r24, 0x0081
    3acc:	8e 7f       	andi	r24, 0xFE	; 254
    3ace:	80 93 81 00 	sts	0x0081, r24
    3ad2:	80 91 6e 02 	lds	r24, 0x026E
    3ad6:	81 30       	cpi	r24, 0x01	; 1
    3ad8:	31 f4       	brne	.+12     	; 0x3ae6 <__SPKR_close+0x22>
    3ada:	80 91 6f 02 	lds	r24, 0x026F
    3ade:	81 30       	cpi	r24, 0x01	; 1
    3ae0:	11 f4       	brne	.+4      	; 0x3ae6 <__SPKR_close+0x22>
    3ae2:	00 00       	nop
    3ae4:	08 95       	ret
    3ae6:	80 91 6e 02 	lds	r24, 0x026E
    3aea:	81 30       	cpi	r24, 0x01	; 1
    3aec:	21 f0       	breq	.+8      	; 0x3af6 <__SPKR_close+0x32>
    3aee:	80 91 6f 02 	lds	r24, 0x026F
    3af2:	81 30       	cpi	r24, 0x01	; 1
    3af4:	11 f4       	brne	.+4      	; 0x3afa <__SPKR_close+0x36>
    3af6:	5f 98       	cbi	0x0b, 7	; 11
    3af8:	57 98       	cbi	0x0a, 7	; 10
    3afa:	08 95       	ret

00003afc <STEPPER_set_decel_step_values>:
    3afc:	ef 92       	push	r14
    3afe:	ff 92       	push	r15
    3b00:	0f 93       	push	r16
    3b02:	1f 93       	push	r17
    3b04:	cf 93       	push	r28
    3b06:	df 93       	push	r29
    3b08:	eb 01       	movw	r28, r22
    3b0a:	88 23       	and	r24, r24
    3b0c:	21 f0       	breq	.+8      	; 0x3b16 <STEPPER_set_decel_step_values+0x1a>
    3b0e:	81 30       	cpi	r24, 0x01	; 1
    3b10:	09 f0       	breq	.+2      	; 0x3b14 <STEPPER_set_decel_step_values+0x18>
    3b12:	5a c0       	rjmp	.+180    	; 0x3bc8 <STEPPER_set_decel_step_values+0xcc>
    3b14:	2d c0       	rjmp	.+90     	; 0x3b70 <STEPPER_set_decel_step_values+0x74>
    3b16:	9a 01       	movw	r18, r20
    3b18:	40 e0       	ldi	r20, 0x00	; 0
    3b1a:	50 e0       	ldi	r21, 0x00	; 0
    3b1c:	ca 01       	movw	r24, r20
    3b1e:	b9 01       	movw	r22, r18
    3b20:	0e 94 d5 28 	call	0x51aa	; 0x51aa <__mulsi3>
    3b24:	20 91 75 04 	lds	r18, 0x0475
    3b28:	30 91 76 04 	lds	r19, 0x0476
    3b2c:	22 0f       	add	r18, r18
    3b2e:	33 1f       	adc	r19, r19
    3b30:	40 e0       	ldi	r20, 0x00	; 0
    3b32:	50 e0       	ldi	r21, 0x00	; 0
    3b34:	0e 94 07 29 	call	0x520e	; 0x520e <__udivmodsi4>
    3b38:	79 01       	movw	r14, r18
    3b3a:	8a 01       	movw	r16, r20
    3b3c:	a8 01       	movw	r20, r16
    3b3e:	97 01       	movw	r18, r14
    3b40:	22 0f       	add	r18, r18
    3b42:	33 1f       	adc	r19, r19
    3b44:	44 1f       	adc	r20, r20
    3b46:	55 1f       	adc	r21, r21
    3b48:	ce 01       	movw	r24, r28
    3b4a:	a0 e0       	ldi	r26, 0x00	; 0
    3b4c:	b0 e0       	ldi	r27, 0x00	; 0
    3b4e:	82 17       	cp	r24, r18
    3b50:	93 07       	cpc	r25, r19
    3b52:	a4 07       	cpc	r26, r20
    3b54:	b5 07       	cpc	r27, r21
    3b56:	28 f0       	brcs	.+10     	; 0x3b62 <STEPPER_set_decel_step_values+0x66>
    3b58:	f0 92 82 04 	sts	0x0482, r15
    3b5c:	e0 92 81 04 	sts	0x0481, r14
    3b60:	33 c0       	rjmp	.+102    	; 0x3bc8 <STEPPER_set_decel_step_values+0xcc>
    3b62:	d6 95       	lsr	r29
    3b64:	c7 95       	ror	r28
    3b66:	d0 93 82 04 	sts	0x0482, r29
    3b6a:	c0 93 81 04 	sts	0x0481, r28
    3b6e:	2c c0       	rjmp	.+88     	; 0x3bc8 <STEPPER_set_decel_step_values+0xcc>
    3b70:	9a 01       	movw	r18, r20
    3b72:	40 e0       	ldi	r20, 0x00	; 0
    3b74:	50 e0       	ldi	r21, 0x00	; 0
    3b76:	ca 01       	movw	r24, r20
    3b78:	b9 01       	movw	r22, r18
    3b7a:	0e 94 d5 28 	call	0x51aa	; 0x51aa <__mulsi3>
    3b7e:	20 91 77 04 	lds	r18, 0x0477
    3b82:	30 91 78 04 	lds	r19, 0x0478
    3b86:	22 0f       	add	r18, r18
    3b88:	33 1f       	adc	r19, r19
    3b8a:	40 e0       	ldi	r20, 0x00	; 0
    3b8c:	50 e0       	ldi	r21, 0x00	; 0
    3b8e:	0e 94 07 29 	call	0x520e	; 0x520e <__udivmodsi4>
    3b92:	79 01       	movw	r14, r18
    3b94:	8a 01       	movw	r16, r20
    3b96:	a8 01       	movw	r20, r16
    3b98:	97 01       	movw	r18, r14
    3b9a:	22 0f       	add	r18, r18
    3b9c:	33 1f       	adc	r19, r19
    3b9e:	44 1f       	adc	r20, r20
    3ba0:	55 1f       	adc	r21, r21
    3ba2:	ce 01       	movw	r24, r28
    3ba4:	a0 e0       	ldi	r26, 0x00	; 0
    3ba6:	b0 e0       	ldi	r27, 0x00	; 0
    3ba8:	82 17       	cp	r24, r18
    3baa:	93 07       	cpc	r25, r19
    3bac:	a4 07       	cpc	r26, r20
    3bae:	b5 07       	cpc	r27, r21
    3bb0:	28 f0       	brcs	.+10     	; 0x3bbc <STEPPER_set_decel_step_values+0xc0>
    3bb2:	f0 92 84 04 	sts	0x0484, r15
    3bb6:	e0 92 83 04 	sts	0x0483, r14
    3bba:	06 c0       	rjmp	.+12     	; 0x3bc8 <STEPPER_set_decel_step_values+0xcc>
    3bbc:	d6 95       	lsr	r29
    3bbe:	c7 95       	ror	r28
    3bc0:	d0 93 84 04 	sts	0x0484, r29
    3bc4:	c0 93 83 04 	sts	0x0483, r28
    3bc8:	df 91       	pop	r29
    3bca:	cf 91       	pop	r28
    3bcc:	1f 91       	pop	r17
    3bce:	0f 91       	pop	r16
    3bd0:	ff 90       	pop	r15
    3bd2:	ef 90       	pop	r14
    3bd4:	08 95       	ret

00003bd6 <__TIMER0_COMPA_vect>:
    3bd6:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <TMRSRVC_tick>
    3bda:	0e 94 3b 1e 	call	0x3c76	; 0x3c76 <STEPPER_clk>
    3bde:	0e 94 14 1e 	call	0x3c28	; 0x3c28 <SPKR_beep_clk>
    3be2:	08 95       	ret

00003be4 <__TMRSRVC_init>:
    3be4:	84 b5       	in	r24, 0x24	; 36
    3be6:	82 60       	ori	r24, 0x02	; 2
    3be8:	84 bd       	out	0x24, r24	; 36
    3bea:	85 b5       	in	r24, 0x25	; 37
    3bec:	84 60       	ori	r24, 0x04	; 4
    3bee:	85 bd       	out	0x25, r24	; 37
    3bf0:	8e e4       	ldi	r24, 0x4E	; 78
    3bf2:	87 bd       	out	0x27, r24	; 39
    3bf4:	08 95       	ret

00003bf6 <TMRSRVC_tick>:
    3bf6:	88 e0       	ldi	r24, 0x08	; 8
    3bf8:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    3bfc:	88 23       	and	r24, r24
    3bfe:	11 f4       	brne	.+4      	; 0x3c04 <TMRSRVC_tick+0xe>
    3c00:	84 e0       	ldi	r24, 0x04	; 4
    3c02:	08 95       	ret
    3c04:	80 91 7f 02 	lds	r24, 0x027F
    3c08:	88 23       	and	r24, r24
    3c0a:	11 f4       	brne	.+4      	; 0x3c10 <TMRSRVC_tick+0x1a>
    3c0c:	83 e0       	ldi	r24, 0x03	; 3
    3c0e:	08 95       	ret
    3c10:	80 91 7e 02 	lds	r24, 0x027E
    3c14:	88 23       	and	r24, r24
    3c16:	11 f0       	breq	.+4      	; 0x3c1c <TMRSRVC_tick+0x26>
    3c18:	82 e0       	ldi	r24, 0x02	; 2
    3c1a:	08 95       	ret
    3c1c:	0e 94 ad 20 	call	0x415a	; 0x415a <TMRSRVC_process>
    3c20:	81 30       	cpi	r24, 0x01	; 1
    3c22:	e1 f3       	breq	.-8      	; 0x3c1c <TMRSRVC_tick+0x26>
    3c24:	80 e0       	ldi	r24, 0x00	; 0
    3c26:	08 95       	ret

00003c28 <SPKR_beep_clk>:
    3c28:	80 91 6f 02 	lds	r24, 0x026F
    3c2c:	81 30       	cpi	r24, 0x01	; 1
    3c2e:	11 f5       	brne	.+68     	; 0x3c74 <SPKR_beep_clk+0x4c>
    3c30:	80 91 78 02 	lds	r24, 0x0278
    3c34:	90 91 79 02 	lds	r25, 0x0279
    3c38:	20 91 7a 02 	lds	r18, 0x027A
    3c3c:	30 91 7b 02 	lds	r19, 0x027B
    3c40:	28 0f       	add	r18, r24
    3c42:	39 1f       	adc	r19, r25
    3c44:	30 93 79 02 	sts	0x0279, r19
    3c48:	20 93 78 02 	sts	0x0278, r18
    3c4c:	80 91 78 02 	lds	r24, 0x0278
    3c50:	90 91 79 02 	lds	r25, 0x0279
    3c54:	88 5e       	subi	r24, 0xE8	; 232
    3c56:	93 40       	sbci	r25, 0x03	; 3
    3c58:	6c f0       	brlt	.+26     	; 0x3c74 <SPKR_beep_clk+0x4c>
    3c5a:	8b b1       	in	r24, 0x0b	; 11
    3c5c:	80 58       	subi	r24, 0x80	; 128
    3c5e:	8b b9       	out	0x0b, r24	; 11
    3c60:	80 91 78 02 	lds	r24, 0x0278
    3c64:	90 91 79 02 	lds	r25, 0x0279
    3c68:	88 5e       	subi	r24, 0xE8	; 232
    3c6a:	93 40       	sbci	r25, 0x03	; 3
    3c6c:	90 93 79 02 	sts	0x0279, r25
    3c70:	80 93 78 02 	sts	0x0278, r24
    3c74:	08 95       	ret

00003c76 <STEPPER_clk>:
    3c76:	87 e0       	ldi	r24, 0x07	; 7
    3c78:	0e 94 3a 14 	call	0x2874	; 0x2874 <SYS_get_state>
    3c7c:	81 30       	cpi	r24, 0x01	; 1
    3c7e:	09 f0       	breq	.+2      	; 0x3c82 <STEPPER_clk+0xc>
    3c80:	aa c0       	rjmp	.+340    	; 0x3dd6 <STEPPER_clk+0x160>
    3c82:	80 91 75 04 	lds	r24, 0x0475
    3c86:	90 91 76 04 	lds	r25, 0x0476
    3c8a:	89 2b       	or	r24, r25
    3c8c:	09 f1       	breq	.+66     	; 0x3cd0 <STEPPER_clk+0x5a>
    3c8e:	80 91 99 04 	lds	r24, 0x0499
    3c92:	90 91 9a 04 	lds	r25, 0x049A
    3c96:	20 91 75 04 	lds	r18, 0x0475
    3c9a:	30 91 76 04 	lds	r19, 0x0476
    3c9e:	82 0f       	add	r24, r18
    3ca0:	93 1f       	adc	r25, r19
    3ca2:	90 93 9a 04 	sts	0x049A, r25
    3ca6:	80 93 99 04 	sts	0x0499, r24
    3caa:	80 91 99 04 	lds	r24, 0x0499
    3cae:	90 91 9a 04 	lds	r25, 0x049A
    3cb2:	88 5e       	subi	r24, 0xE8	; 232
    3cb4:	93 40       	sbci	r25, 0x03	; 3
    3cb6:	a4 f0       	brlt	.+40     	; 0x3ce0 <STEPPER_clk+0x6a>
    3cb8:	80 91 99 04 	lds	r24, 0x0499
    3cbc:	90 91 9a 04 	lds	r25, 0x049A
    3cc0:	88 5e       	subi	r24, 0xE8	; 232
    3cc2:	93 40       	sbci	r25, 0x03	; 3
    3cc4:	90 93 9a 04 	sts	0x049A, r25
    3cc8:	80 93 99 04 	sts	0x0499, r24
    3ccc:	41 e0       	ldi	r20, 0x01	; 1
    3cce:	09 c0       	rjmp	.+18     	; 0x3ce2 <STEPPER_clk+0x6c>
    3cd0:	80 91 6d 04 	lds	r24, 0x046D
    3cd4:	90 91 6e 04 	lds	r25, 0x046E
    3cd8:	90 93 72 04 	sts	0x0472, r25
    3cdc:	80 93 71 04 	sts	0x0471, r24
    3ce0:	40 e0       	ldi	r20, 0x00	; 0
    3ce2:	80 91 77 04 	lds	r24, 0x0477
    3ce6:	90 91 78 04 	lds	r25, 0x0478
    3cea:	89 2b       	or	r24, r25
    3cec:	09 f1       	breq	.+66     	; 0x3d30 <STEPPER_clk+0xba>
    3cee:	80 91 9b 04 	lds	r24, 0x049B
    3cf2:	90 91 9c 04 	lds	r25, 0x049C
    3cf6:	20 91 77 04 	lds	r18, 0x0477
    3cfa:	30 91 78 04 	lds	r19, 0x0478
    3cfe:	82 0f       	add	r24, r18
    3d00:	93 1f       	adc	r25, r19
    3d02:	90 93 9c 04 	sts	0x049C, r25
    3d06:	80 93 9b 04 	sts	0x049B, r24
    3d0a:	80 91 9b 04 	lds	r24, 0x049B
    3d0e:	90 91 9c 04 	lds	r25, 0x049C
    3d12:	88 5e       	subi	r24, 0xE8	; 232
    3d14:	93 40       	sbci	r25, 0x03	; 3
    3d16:	a4 f0       	brlt	.+40     	; 0x3d40 <STEPPER_clk+0xca>
    3d18:	80 91 9b 04 	lds	r24, 0x049B
    3d1c:	90 91 9c 04 	lds	r25, 0x049C
    3d20:	88 5e       	subi	r24, 0xE8	; 232
    3d22:	93 40       	sbci	r25, 0x03	; 3
    3d24:	90 93 9c 04 	sts	0x049C, r25
    3d28:	80 93 9b 04 	sts	0x049B, r24
    3d2c:	61 e0       	ldi	r22, 0x01	; 1
    3d2e:	09 c0       	rjmp	.+18     	; 0x3d42 <STEPPER_clk+0xcc>
    3d30:	80 91 6f 04 	lds	r24, 0x046F
    3d34:	90 91 70 04 	lds	r25, 0x0470
    3d38:	90 93 74 04 	sts	0x0474, r25
    3d3c:	80 93 73 04 	sts	0x0473, r24
    3d40:	60 e0       	ldi	r22, 0x00	; 0
    3d42:	84 2f       	mov	r24, r20
    3d44:	0e 94 ec 1e 	call	0x3dd8	; 0x3dd8 <STEPPER_process_accel>
    3d48:	80 91 95 04 	lds	r24, 0x0495
    3d4c:	90 91 96 04 	lds	r25, 0x0496
    3d50:	20 91 71 04 	lds	r18, 0x0471
    3d54:	30 91 72 04 	lds	r19, 0x0472
    3d58:	28 0f       	add	r18, r24
    3d5a:	39 1f       	adc	r19, r25
    3d5c:	30 93 96 04 	sts	0x0496, r19
    3d60:	20 93 95 04 	sts	0x0495, r18
    3d64:	80 91 95 04 	lds	r24, 0x0495
    3d68:	90 91 96 04 	lds	r25, 0x0496
    3d6c:	88 5e       	subi	r24, 0xE8	; 232
    3d6e:	93 40       	sbci	r25, 0x03	; 3
    3d70:	14 f4       	brge	.+4      	; 0x3d76 <STEPPER_clk+0x100>
    3d72:	40 e0       	ldi	r20, 0x00	; 0
    3d74:	0b c0       	rjmp	.+22     	; 0x3d8c <STEPPER_clk+0x116>
    3d76:	80 91 95 04 	lds	r24, 0x0495
    3d7a:	90 91 96 04 	lds	r25, 0x0496
    3d7e:	88 5e       	subi	r24, 0xE8	; 232
    3d80:	93 40       	sbci	r25, 0x03	; 3
    3d82:	90 93 96 04 	sts	0x0496, r25
    3d86:	80 93 95 04 	sts	0x0495, r24
    3d8a:	41 e0       	ldi	r20, 0x01	; 1
    3d8c:	80 91 97 04 	lds	r24, 0x0497
    3d90:	90 91 98 04 	lds	r25, 0x0498
    3d94:	20 91 73 04 	lds	r18, 0x0473
    3d98:	30 91 74 04 	lds	r19, 0x0474
    3d9c:	28 0f       	add	r18, r24
    3d9e:	39 1f       	adc	r19, r25
    3da0:	30 93 98 04 	sts	0x0498, r19
    3da4:	20 93 97 04 	sts	0x0497, r18
    3da8:	80 91 97 04 	lds	r24, 0x0497
    3dac:	90 91 98 04 	lds	r25, 0x0498
    3db0:	88 5e       	subi	r24, 0xE8	; 232
    3db2:	93 40       	sbci	r25, 0x03	; 3
    3db4:	14 f4       	brge	.+4      	; 0x3dba <STEPPER_clk+0x144>
    3db6:	60 e0       	ldi	r22, 0x00	; 0
    3db8:	0b c0       	rjmp	.+22     	; 0x3dd0 <STEPPER_clk+0x15a>
    3dba:	80 91 97 04 	lds	r24, 0x0497
    3dbe:	90 91 98 04 	lds	r25, 0x0498
    3dc2:	88 5e       	subi	r24, 0xE8	; 232
    3dc4:	93 40       	sbci	r25, 0x03	; 3
    3dc6:	90 93 98 04 	sts	0x0498, r25
    3dca:	80 93 97 04 	sts	0x0497, r24
    3dce:	61 e0       	ldi	r22, 0x01	; 1
    3dd0:	84 2f       	mov	r24, r20
    3dd2:	0e 94 31 1f 	call	0x3e62	; 0x3e62 <STEPPER_process_run_mode>
    3dd6:	08 95       	ret

00003dd8 <STEPPER_process_accel>:
    3dd8:	88 23       	and	r24, r24
    3dda:	f1 f0       	breq	.+60     	; 0x3e18 <STEPPER_process_accel+0x40>
    3ddc:	20 91 6d 04 	lds	r18, 0x046D
    3de0:	30 91 6e 04 	lds	r19, 0x046E
    3de4:	80 91 71 04 	lds	r24, 0x0471
    3de8:	90 91 72 04 	lds	r25, 0x0472
    3dec:	28 1b       	sub	r18, r24
    3dee:	39 0b       	sbc	r19, r25
    3df0:	12 16       	cp	r1, r18
    3df2:	13 06       	cpc	r1, r19
    3df4:	34 f4       	brge	.+12     	; 0x3e02 <STEPPER_process_accel+0x2a>
    3df6:	80 91 71 04 	lds	r24, 0x0471
    3dfa:	90 91 72 04 	lds	r25, 0x0472
    3dfe:	01 96       	adiw	r24, 0x01	; 1
    3e00:	07 c0       	rjmp	.+14     	; 0x3e10 <STEPPER_process_accel+0x38>
    3e02:	23 2b       	or	r18, r19
    3e04:	49 f0       	breq	.+18     	; 0x3e18 <STEPPER_process_accel+0x40>
    3e06:	80 91 71 04 	lds	r24, 0x0471
    3e0a:	90 91 72 04 	lds	r25, 0x0472
    3e0e:	01 97       	sbiw	r24, 0x01	; 1
    3e10:	90 93 72 04 	sts	0x0472, r25
    3e14:	80 93 71 04 	sts	0x0471, r24
    3e18:	66 23       	and	r22, r22
    3e1a:	11 f1       	breq	.+68     	; 0x3e60 <STEPPER_process_accel+0x88>
    3e1c:	20 91 6f 04 	lds	r18, 0x046F
    3e20:	30 91 70 04 	lds	r19, 0x0470
    3e24:	80 91 73 04 	lds	r24, 0x0473
    3e28:	90 91 74 04 	lds	r25, 0x0474
    3e2c:	28 1b       	sub	r18, r24
    3e2e:	39 0b       	sbc	r19, r25
    3e30:	12 16       	cp	r1, r18
    3e32:	13 06       	cpc	r1, r19
    3e34:	54 f4       	brge	.+20     	; 0x3e4a <STEPPER_process_accel+0x72>
    3e36:	80 91 73 04 	lds	r24, 0x0473
    3e3a:	90 91 74 04 	lds	r25, 0x0474
    3e3e:	01 96       	adiw	r24, 0x01	; 1
    3e40:	90 93 74 04 	sts	0x0474, r25
    3e44:	80 93 73 04 	sts	0x0473, r24
    3e48:	08 95       	ret
    3e4a:	23 2b       	or	r18, r19
    3e4c:	49 f0       	breq	.+18     	; 0x3e60 <STEPPER_process_accel+0x88>
    3e4e:	80 91 73 04 	lds	r24, 0x0473
    3e52:	90 91 74 04 	lds	r25, 0x0474
    3e56:	01 97       	sbiw	r24, 0x01	; 1
    3e58:	90 93 74 04 	sts	0x0474, r25
    3e5c:	80 93 73 04 	sts	0x0473, r24
    3e60:	08 95       	ret

00003e62 <STEPPER_process_run_mode>:
    3e62:	0f 93       	push	r16
    3e64:	1f 93       	push	r17
    3e66:	18 2f       	mov	r17, r24
    3e68:	06 2f       	mov	r16, r22
    3e6a:	80 91 a1 04 	lds	r24, 0x04A1
    3e6e:	88 23       	and	r24, r24
    3e70:	09 f0       	breq	.+2      	; 0x3e74 <STEPPER_process_run_mode+0x12>
    3e72:	e7 c0       	rjmp	.+462    	; 0x4042 <STEPPER_process_run_mode+0x1e0>
    3e74:	80 91 89 04 	lds	r24, 0x0489
    3e78:	88 23       	and	r24, r24
    3e7a:	09 f0       	breq	.+2      	; 0x3e7e <STEPPER_process_run_mode+0x1c>
    3e7c:	5a c0       	rjmp	.+180    	; 0x3f32 <STEPPER_process_run_mode+0xd0>
    3e7e:	80 91 71 04 	lds	r24, 0x0471
    3e82:	90 91 72 04 	lds	r25, 0x0472
    3e86:	89 2b       	or	r24, r25
    3e88:	e9 f4       	brne	.+58     	; 0x3ec4 <STEPPER_process_run_mode+0x62>
    3e8a:	80 91 80 02 	lds	r24, 0x0280
    3e8e:	83 7e       	andi	r24, 0xE3	; 227
    3e90:	80 93 80 02 	sts	0x0280, r24
    3e94:	10 92 92 04 	sts	0x0492, r1
    3e98:	80 91 9d 04 	lds	r24, 0x049D
    3e9c:	88 23       	and	r24, r24
    3e9e:	09 f4       	brne	.+2      	; 0x3ea2 <STEPPER_process_run_mode+0x40>
    3ea0:	5d c0       	rjmp	.+186    	; 0x3f5c <STEPPER_process_run_mode+0xfa>
    3ea2:	60 91 8b 04 	lds	r22, 0x048B
    3ea6:	80 e0       	ldi	r24, 0x00	; 0
    3ea8:	0e 94 88 20 	call	0x4110	; 0x4110 <STEPPER_stop>
    3eac:	e0 91 9f 04 	lds	r30, 0x049F
    3eb0:	f0 91 a0 04 	lds	r31, 0x04A0
    3eb4:	30 97       	sbiw	r30, 0x00	; 0
    3eb6:	09 f4       	brne	.+2      	; 0x3eba <STEPPER_process_run_mode+0x58>
    3eb8:	51 c0       	rjmp	.+162    	; 0x3f5c <STEPPER_process_run_mode+0xfa>
    3eba:	81 e0       	ldi	r24, 0x01	; 1
    3ebc:	80 83       	st	Z, r24
    3ebe:	10 92 9d 04 	sts	0x049D, r1
    3ec2:	4c c0       	rjmp	.+152    	; 0x3f5c <STEPPER_process_run_mode+0xfa>
    3ec4:	80 91 6b 04 	lds	r24, 0x046B
    3ec8:	81 30       	cpi	r24, 0x01	; 1
    3eca:	41 f4       	brne	.+16     	; 0x3edc <STEPPER_process_run_mode+0x7a>
    3ecc:	80 91 7d 04 	lds	r24, 0x047D
    3ed0:	90 91 7e 04 	lds	r25, 0x047E
    3ed4:	01 97       	sbiw	r24, 0x01	; 1
    3ed6:	11 f4       	brne	.+4      	; 0x3edc <STEPPER_process_run_mode+0x7a>
    3ed8:	11 e0       	ldi	r17, 0x01	; 1
    3eda:	02 c0       	rjmp	.+4      	; 0x3ee0 <STEPPER_process_run_mode+0x7e>
    3edc:	11 23       	and	r17, r17
    3ede:	f1 f1       	breq	.+124    	; 0x3f5c <STEPPER_process_run_mode+0xfa>
    3ee0:	e0 91 90 04 	lds	r30, 0x0490
    3ee4:	f0 e0       	ldi	r31, 0x00	; 0
    3ee6:	e1 57       	subi	r30, 0x71	; 113
    3ee8:	fe 4f       	sbci	r31, 0xFE	; 254
    3eea:	90 91 80 02 	lds	r25, 0x0280
    3eee:	93 7e       	andi	r25, 0xE3	; 227
    3ef0:	80 81       	ld	r24, Z
    3ef2:	89 2b       	or	r24, r25
    3ef4:	80 93 80 02 	sts	0x0280, r24
    3ef8:	80 91 8e 04 	lds	r24, 0x048E
    3efc:	88 23       	and	r24, r24
    3efe:	21 f4       	brne	.+8      	; 0x3f08 <STEPPER_process_run_mode+0xa6>
    3f00:	80 91 90 04 	lds	r24, 0x0490
    3f04:	8f 5f       	subi	r24, 0xFF	; 255
    3f06:	03 c0       	rjmp	.+6      	; 0x3f0e <STEPPER_process_run_mode+0xac>
    3f08:	80 91 90 04 	lds	r24, 0x0490
    3f0c:	81 50       	subi	r24, 0x01	; 1
    3f0e:	80 93 90 04 	sts	0x0490, r24
    3f12:	80 91 90 04 	lds	r24, 0x0490
    3f16:	83 70       	andi	r24, 0x03	; 3
    3f18:	80 93 90 04 	sts	0x0490, r24
    3f1c:	81 e0       	ldi	r24, 0x01	; 1
    3f1e:	80 93 92 04 	sts	0x0492, r24
    3f22:	80 91 6b 04 	lds	r24, 0x046B
    3f26:	81 30       	cpi	r24, 0x01	; 1
    3f28:	c9 f4       	brne	.+50     	; 0x3f5c <STEPPER_process_run_mode+0xfa>
    3f2a:	80 e0       	ldi	r24, 0x00	; 0
    3f2c:	0e 94 34 20 	call	0x4068	; 0x4068 <STEPPER_process_step_mode>
    3f30:	15 c0       	rjmp	.+42     	; 0x3f5c <STEPPER_process_run_mode+0xfa>
    3f32:	90 91 80 02 	lds	r25, 0x0280
    3f36:	93 7e       	andi	r25, 0xE3	; 227
    3f38:	90 93 80 02 	sts	0x0280, r25
    3f3c:	e0 91 90 04 	lds	r30, 0x0490
    3f40:	f0 e0       	ldi	r31, 0x00	; 0
    3f42:	e1 57       	subi	r30, 0x71	; 113
    3f44:	fe 4f       	sbci	r31, 0xFE	; 254
    3f46:	80 81       	ld	r24, Z
    3f48:	89 2b       	or	r24, r25
    3f4a:	80 93 80 02 	sts	0x0280, r24
    3f4e:	82 e0       	ldi	r24, 0x02	; 2
    3f50:	80 93 92 04 	sts	0x0492, r24
    3f54:	10 92 72 04 	sts	0x0472, r1
    3f58:	10 92 71 04 	sts	0x0471, r1
    3f5c:	80 91 8a 04 	lds	r24, 0x048A
    3f60:	88 23       	and	r24, r24
    3f62:	09 f0       	breq	.+2      	; 0x3f66 <STEPPER_process_run_mode+0x104>
    3f64:	59 c0       	rjmp	.+178    	; 0x4018 <STEPPER_process_run_mode+0x1b6>
    3f66:	80 91 73 04 	lds	r24, 0x0473
    3f6a:	90 91 74 04 	lds	r25, 0x0474
    3f6e:	89 2b       	or	r24, r25
    3f70:	e9 f4       	brne	.+58     	; 0x3fac <STEPPER_process_run_mode+0x14a>
    3f72:	80 91 80 02 	lds	r24, 0x0280
    3f76:	8f 71       	andi	r24, 0x1F	; 31
    3f78:	80 93 80 02 	sts	0x0280, r24
    3f7c:	10 92 93 04 	sts	0x0493, r1
    3f80:	80 91 9e 04 	lds	r24, 0x049E
    3f84:	88 23       	and	r24, r24
    3f86:	09 f4       	brne	.+2      	; 0x3f8a <STEPPER_process_run_mode+0x128>
    3f88:	5c c0       	rjmp	.+184    	; 0x4042 <STEPPER_process_run_mode+0x1e0>
    3f8a:	60 91 8c 04 	lds	r22, 0x048C
    3f8e:	81 e0       	ldi	r24, 0x01	; 1
    3f90:	0e 94 88 20 	call	0x4110	; 0x4110 <STEPPER_stop>
    3f94:	e0 91 9f 04 	lds	r30, 0x049F
    3f98:	f0 91 a0 04 	lds	r31, 0x04A0
    3f9c:	30 97       	sbiw	r30, 0x00	; 0
    3f9e:	09 f4       	brne	.+2      	; 0x3fa2 <STEPPER_process_run_mode+0x140>
    3fa0:	50 c0       	rjmp	.+160    	; 0x4042 <STEPPER_process_run_mode+0x1e0>
    3fa2:	81 e0       	ldi	r24, 0x01	; 1
    3fa4:	81 83       	std	Z+1, r24	; 0x01
    3fa6:	10 92 9e 04 	sts	0x049E, r1
    3faa:	4b c0       	rjmp	.+150    	; 0x4042 <STEPPER_process_run_mode+0x1e0>
    3fac:	80 91 6c 04 	lds	r24, 0x046C
    3fb0:	81 30       	cpi	r24, 0x01	; 1
    3fb2:	41 f4       	brne	.+16     	; 0x3fc4 <STEPPER_process_run_mode+0x162>
    3fb4:	80 91 7f 04 	lds	r24, 0x047F
    3fb8:	90 91 80 04 	lds	r25, 0x0480
    3fbc:	01 97       	sbiw	r24, 0x01	; 1
    3fbe:	11 f4       	brne	.+4      	; 0x3fc4 <STEPPER_process_run_mode+0x162>
    3fc0:	01 e0       	ldi	r16, 0x01	; 1
    3fc2:	02 c0       	rjmp	.+4      	; 0x3fc8 <STEPPER_process_run_mode+0x166>
    3fc4:	00 23       	and	r16, r16
    3fc6:	e9 f1       	breq	.+122    	; 0x4042 <STEPPER_process_run_mode+0x1e0>
    3fc8:	e0 91 91 04 	lds	r30, 0x0491
    3fcc:	f0 e0       	ldi	r31, 0x00	; 0
    3fce:	ed 56       	subi	r30, 0x6D	; 109
    3fd0:	fe 4f       	sbci	r31, 0xFE	; 254
    3fd2:	90 91 80 02 	lds	r25, 0x0280
    3fd6:	9f 71       	andi	r25, 0x1F	; 31
    3fd8:	80 81       	ld	r24, Z
    3fda:	89 2b       	or	r24, r25
    3fdc:	80 93 80 02 	sts	0x0280, r24
    3fe0:	80 91 8f 04 	lds	r24, 0x048F
    3fe4:	88 23       	and	r24, r24
    3fe6:	21 f4       	brne	.+8      	; 0x3ff0 <STEPPER_process_run_mode+0x18e>
    3fe8:	80 91 91 04 	lds	r24, 0x0491
    3fec:	8f 5f       	subi	r24, 0xFF	; 255
    3fee:	03 c0       	rjmp	.+6      	; 0x3ff6 <STEPPER_process_run_mode+0x194>
    3ff0:	80 91 91 04 	lds	r24, 0x0491
    3ff4:	81 50       	subi	r24, 0x01	; 1
    3ff6:	80 93 91 04 	sts	0x0491, r24
    3ffa:	80 91 91 04 	lds	r24, 0x0491
    3ffe:	83 70       	andi	r24, 0x03	; 3
    4000:	80 93 91 04 	sts	0x0491, r24
    4004:	81 e0       	ldi	r24, 0x01	; 1
    4006:	80 93 93 04 	sts	0x0493, r24
    400a:	80 91 6c 04 	lds	r24, 0x046C
    400e:	81 30       	cpi	r24, 0x01	; 1
    4010:	c1 f4       	brne	.+48     	; 0x4042 <STEPPER_process_run_mode+0x1e0>
    4012:	0e 94 34 20 	call	0x4068	; 0x4068 <STEPPER_process_step_mode>
    4016:	15 c0       	rjmp	.+42     	; 0x4042 <STEPPER_process_run_mode+0x1e0>
    4018:	90 91 80 02 	lds	r25, 0x0280
    401c:	9f 71       	andi	r25, 0x1F	; 31
    401e:	90 93 80 02 	sts	0x0280, r25
    4022:	e0 91 91 04 	lds	r30, 0x0491
    4026:	f0 e0       	ldi	r31, 0x00	; 0
    4028:	ed 56       	subi	r30, 0x6D	; 109
    402a:	fe 4f       	sbci	r31, 0xFE	; 254
    402c:	80 81       	ld	r24, Z
    402e:	89 2b       	or	r24, r25
    4030:	80 93 80 02 	sts	0x0280, r24
    4034:	82 e0       	ldi	r24, 0x02	; 2
    4036:	80 93 93 04 	sts	0x0493, r24
    403a:	10 92 74 04 	sts	0x0474, r1
    403e:	10 92 73 04 	sts	0x0473, r1
    4042:	80 91 94 04 	lds	r24, 0x0494
    4046:	88 23       	and	r24, r24
    4048:	31 f4       	brne	.+12     	; 0x4056 <STEPPER_process_run_mode+0x1f4>
    404a:	80 e8       	ldi	r24, 0x80	; 128
    404c:	92 e0       	ldi	r25, 0x02	; 2
    404e:	61 2f       	mov	r22, r17
    4050:	40 2f       	mov	r20, r16
    4052:	0e 94 1b 21 	call	0x4236	; 0x4236 <STEPPER_process_pwm>
    4056:	88 b1       	in	r24, 0x08	; 8
    4058:	83 70       	andi	r24, 0x03	; 3
    405a:	90 91 80 02 	lds	r25, 0x0280
    405e:	89 2b       	or	r24, r25
    4060:	88 b9       	out	0x08, r24	; 8
    4062:	1f 91       	pop	r17
    4064:	0f 91       	pop	r16
    4066:	08 95       	ret

00004068 <STEPPER_process_step_mode>:
    4068:	88 23       	and	r24, r24
    406a:	21 f0       	breq	.+8      	; 0x4074 <STEPPER_process_step_mode+0xc>
    406c:	81 30       	cpi	r24, 0x01	; 1
    406e:	09 f0       	breq	.+2      	; 0x4072 <STEPPER_process_step_mode+0xa>
    4070:	4e c0       	rjmp	.+156    	; 0x410e <STEPPER_process_step_mode+0xa6>
    4072:	27 c0       	rjmp	.+78     	; 0x40c2 <STEPPER_process_step_mode+0x5a>
    4074:	80 91 7d 04 	lds	r24, 0x047D
    4078:	90 91 7e 04 	lds	r25, 0x047E
    407c:	89 2b       	or	r24, r25
    407e:	49 f0       	breq	.+18     	; 0x4092 <STEPPER_process_step_mode+0x2a>
    4080:	80 91 7d 04 	lds	r24, 0x047D
    4084:	90 91 7e 04 	lds	r25, 0x047E
    4088:	01 97       	sbiw	r24, 0x01	; 1
    408a:	90 93 7e 04 	sts	0x047E, r25
    408e:	80 93 7d 04 	sts	0x047D, r24
    4092:	80 91 9d 04 	lds	r24, 0x049D
    4096:	88 23       	and	r24, r24
    4098:	d1 f5       	brne	.+116    	; 0x410e <STEPPER_process_step_mode+0xa6>
    409a:	20 91 7d 04 	lds	r18, 0x047D
    409e:	30 91 7e 04 	lds	r19, 0x047E
    40a2:	80 91 81 04 	lds	r24, 0x0481
    40a6:	90 91 82 04 	lds	r25, 0x0482
    40aa:	28 17       	cp	r18, r24
    40ac:	39 07       	cpc	r19, r25
    40ae:	79 f5       	brne	.+94     	; 0x410e <STEPPER_process_step_mode+0xa6>
    40b0:	80 e0       	ldi	r24, 0x00	; 0
    40b2:	60 e0       	ldi	r22, 0x00	; 0
    40b4:	70 e0       	ldi	r23, 0x00	; 0
    40b6:	0e 94 3e 13 	call	0x267c	; 0x267c <STEPPER_set_speed>
    40ba:	81 e0       	ldi	r24, 0x01	; 1
    40bc:	80 93 9d 04 	sts	0x049D, r24
    40c0:	08 95       	ret
    40c2:	80 91 7f 04 	lds	r24, 0x047F
    40c6:	90 91 80 04 	lds	r25, 0x0480
    40ca:	89 2b       	or	r24, r25
    40cc:	49 f0       	breq	.+18     	; 0x40e0 <STEPPER_process_step_mode+0x78>
    40ce:	80 91 7f 04 	lds	r24, 0x047F
    40d2:	90 91 80 04 	lds	r25, 0x0480
    40d6:	01 97       	sbiw	r24, 0x01	; 1
    40d8:	90 93 80 04 	sts	0x0480, r25
    40dc:	80 93 7f 04 	sts	0x047F, r24
    40e0:	80 91 9e 04 	lds	r24, 0x049E
    40e4:	88 23       	and	r24, r24
    40e6:	99 f4       	brne	.+38     	; 0x410e <STEPPER_process_step_mode+0xa6>
    40e8:	20 91 7f 04 	lds	r18, 0x047F
    40ec:	30 91 80 04 	lds	r19, 0x0480
    40f0:	80 91 83 04 	lds	r24, 0x0483
    40f4:	90 91 84 04 	lds	r25, 0x0484
    40f8:	28 17       	cp	r18, r24
    40fa:	39 07       	cpc	r19, r25
    40fc:	41 f4       	brne	.+16     	; 0x410e <STEPPER_process_step_mode+0xa6>
    40fe:	81 e0       	ldi	r24, 0x01	; 1
    4100:	60 e0       	ldi	r22, 0x00	; 0
    4102:	70 e0       	ldi	r23, 0x00	; 0
    4104:	0e 94 3e 13 	call	0x267c	; 0x267c <STEPPER_set_speed>
    4108:	81 e0       	ldi	r24, 0x01	; 1
    410a:	80 93 9e 04 	sts	0x049E, r24
    410e:	08 95       	ret

00004110 <STEPPER_stop>:
    4110:	0f 93       	push	r16
    4112:	1f 93       	push	r17
    4114:	18 2f       	mov	r17, r24
    4116:	06 2f       	mov	r16, r22
    4118:	66 23       	and	r22, r22
    411a:	49 f4       	brne	.+18     	; 0x412e <STEPPER_stop+0x1e>
    411c:	60 e0       	ldi	r22, 0x00	; 0
    411e:	70 e0       	ldi	r23, 0x00	; 0
    4120:	0e 94 3e 13 	call	0x267c	; 0x267c <STEPPER_set_speed>
    4124:	81 2f       	mov	r24, r17
    4126:	60 e0       	ldi	r22, 0x00	; 0
    4128:	70 e0       	ldi	r23, 0x00	; 0
    412a:	0e 94 95 1b 	call	0x372a	; 0x372a <STEPPER_set_steps>
    412e:	81 e0       	ldi	r24, 0x01	; 1
    4130:	80 93 a1 04 	sts	0x04A1, r24
    4134:	11 30       	cpi	r17, 0x01	; 1
    4136:	51 f0       	breq	.+20     	; 0x414c <STEPPER_stop+0x3c>
    4138:	11 30       	cpi	r17, 0x01	; 1
    413a:	18 f0       	brcs	.+6      	; 0x4142 <STEPPER_stop+0x32>
    413c:	12 30       	cpi	r17, 0x02	; 2
    413e:	41 f4       	brne	.+16     	; 0x4150 <STEPPER_stop+0x40>
    4140:	03 c0       	rjmp	.+6      	; 0x4148 <STEPPER_stop+0x38>
    4142:	00 93 89 04 	sts	0x0489, r16
    4146:	04 c0       	rjmp	.+8      	; 0x4150 <STEPPER_stop+0x40>
    4148:	00 93 89 04 	sts	0x0489, r16
    414c:	00 93 8a 04 	sts	0x048A, r16
    4150:	10 92 a1 04 	sts	0x04A1, r1
    4154:	1f 91       	pop	r17
    4156:	0f 91       	pop	r16
    4158:	08 95       	ret

0000415a <TMRSRVC_process>:
    415a:	ff 92       	push	r15
    415c:	0f 93       	push	r16
    415e:	1f 93       	push	r17
    4160:	cf 93       	push	r28
    4162:	df 93       	push	r29
    4164:	80 91 db 04 	lds	r24, 0x04DB
    4168:	88 23       	and	r24, r24
    416a:	09 f4       	brne	.+2      	; 0x416e <TMRSRVC_process+0x14>
    416c:	59 c0       	rjmp	.+178    	; 0x4220 <TMRSRVC_process+0xc6>
    416e:	00 91 dc 04 	lds	r16, 0x04DC
    4172:	10 91 dd 04 	lds	r17, 0x04DD
    4176:	f8 01       	movw	r30, r16
    4178:	c0 81       	ld	r28, Z
    417a:	d1 81       	ldd	r29, Z+1	; 0x01
    417c:	8c 81       	ldd	r24, Y+4	; 0x04
    417e:	9d 81       	ldd	r25, Y+5	; 0x05
    4180:	01 97       	sbiw	r24, 0x01	; 1
    4182:	9d 83       	std	Y+5, r25	; 0x05
    4184:	8c 83       	std	Y+4, r24	; 0x04
    4186:	18 16       	cp	r1, r24
    4188:	19 06       	cpc	r1, r25
    418a:	0c f4       	brge	.+2      	; 0x418e <TMRSRVC_process+0x34>
    418c:	49 c0       	rjmp	.+146    	; 0x4220 <TMRSRVC_process+0xc6>
    418e:	89 81       	ldd	r24, Y+1	; 0x01
    4190:	80 ff       	sbrs	r24, 0
    4192:	05 c0       	rjmp	.+10     	; 0x419e <TMRSRVC_process+0x44>
    4194:	8e 81       	ldd	r24, Y+6	; 0x06
    4196:	88 23       	and	r24, r24
    4198:	11 f4       	brne	.+4      	; 0x419e <TMRSRVC_process+0x44>
    419a:	81 e0       	ldi	r24, 0x01	; 1
    419c:	8e 83       	std	Y+6, r24	; 0x06
    419e:	89 81       	ldd	r24, Y+1	; 0x01
    41a0:	81 ff       	sbrs	r24, 1
    41a2:	03 c0       	rjmp	.+6      	; 0x41aa <TMRSRVC_process+0x50>
    41a4:	ef 81       	ldd	r30, Y+7	; 0x07
    41a6:	f8 85       	ldd	r31, Y+8	; 0x08
    41a8:	09 95       	icall
    41aa:	80 91 db 04 	lds	r24, 0x04DB
    41ae:	82 30       	cpi	r24, 0x02	; 2
    41b0:	a8 f0       	brcs	.+42     	; 0x41dc <TMRSRVC_process+0x82>
    41b2:	f8 01       	movw	r30, r16
    41b4:	82 81       	ldd	r24, Z+2	; 0x02
    41b6:	93 81       	ldd	r25, Z+3	; 0x03
    41b8:	90 93 dd 04 	sts	0x04DD, r25
    41bc:	80 93 dc 04 	sts	0x04DC, r24
    41c0:	13 82       	std	Z+3, r1	; 0x03
    41c2:	12 82       	std	Z+2, r1	; 0x02
    41c4:	e0 91 00 00 	lds	r30, 0x0000
    41c8:	f0 91 01 00 	lds	r31, 0x0001
    41cc:	84 81       	ldd	r24, Z+4	; 0x04
    41ce:	95 81       	ldd	r25, Z+5	; 0x05
    41d0:	18 16       	cp	r1, r24
    41d2:	19 06       	cpc	r1, r25
    41d4:	3c f0       	brlt	.+14     	; 0x41e4 <TMRSRVC_process+0x8a>
    41d6:	ff 24       	eor	r15, r15
    41d8:	f3 94       	inc	r15
    41da:	05 c0       	rjmp	.+10     	; 0x41e6 <TMRSRVC_process+0x8c>
    41dc:	10 92 dd 04 	sts	0x04DD, r1
    41e0:	10 92 dc 04 	sts	0x04DC, r1
    41e4:	ff 24       	eor	r15, r15
    41e6:	80 91 db 04 	lds	r24, 0x04DB
    41ea:	81 50       	subi	r24, 0x01	; 1
    41ec:	80 93 db 04 	sts	0x04DB, r24
    41f0:	80 91 db 04 	lds	r24, 0x04DB
    41f4:	88 23       	and	r24, r24
    41f6:	11 f4       	brne	.+4      	; 0x41fc <TMRSRVC_process+0xa2>
    41f8:	0e 94 18 21 	call	0x4230	; 0x4230 <TMRSRVC_stop>
    41fc:	89 81       	ldd	r24, Y+1	; 0x01
    41fe:	82 ff       	sbrs	r24, 2
    4200:	08 c0       	rjmp	.+16     	; 0x4212 <TMRSRVC_process+0xb8>
    4202:	8a 81       	ldd	r24, Y+2	; 0x02
    4204:	9b 81       	ldd	r25, Y+3	; 0x03
    4206:	9d 83       	std	Y+5, r25	; 0x05
    4208:	8c 83       	std	Y+4, r24	; 0x04
    420a:	c8 01       	movw	r24, r16
    420c:	0e 94 56 1c 	call	0x38ac	; 0x38ac <TMRSRVC_insert>
    4210:	08 c0       	rjmp	.+16     	; 0x4222 <TMRSRVC_process+0xc8>
    4212:	c8 01       	movw	r24, r16
    4214:	0e 94 21 2a 	call	0x5442	; 0x5442 <free>
    4218:	89 81       	ldd	r24, Y+1	; 0x01
    421a:	8f 7e       	andi	r24, 0xEF	; 239
    421c:	89 83       	std	Y+1, r24	; 0x01
    421e:	01 c0       	rjmp	.+2      	; 0x4222 <TMRSRVC_process+0xc8>
    4220:	ff 24       	eor	r15, r15
    4222:	8f 2d       	mov	r24, r15
    4224:	df 91       	pop	r29
    4226:	cf 91       	pop	r28
    4228:	1f 91       	pop	r17
    422a:	0f 91       	pop	r16
    422c:	ff 90       	pop	r15
    422e:	08 95       	ret

00004230 <TMRSRVC_stop>:
    4230:	10 92 7f 02 	sts	0x027F, r1
    4234:	08 95       	ret

00004236 <STEPPER_process_pwm>:
    4236:	fc 01       	movw	r30, r24
    4238:	80 91 92 04 	lds	r24, 0x0492
    423c:	82 30       	cpi	r24, 0x02	; 2
    423e:	69 f4       	brne	.+26     	; 0x425a <STEPPER_process_pwm+0x24>
    4240:	80 91 84 02 	lds	r24, 0x0284
    4244:	91 e0       	ldi	r25, 0x01	; 1
    4246:	89 27       	eor	r24, r25
    4248:	80 93 84 02 	sts	0x0284, r24
    424c:	88 23       	and	r24, r24
    424e:	09 f0       	breq	.+2      	; 0x4252 <STEPPER_process_pwm+0x1c>
    4250:	3e c0       	rjmp	.+124    	; 0x42ce <STEPPER_process_pwm+0x98>
    4252:	80 81       	ld	r24, Z
    4254:	83 7e       	andi	r24, 0xE3	; 227
    4256:	80 83       	st	Z, r24
    4258:	3a c0       	rjmp	.+116    	; 0x42ce <STEPPER_process_pwm+0x98>
    425a:	80 91 71 04 	lds	r24, 0x0471
    425e:	90 91 72 04 	lds	r25, 0x0472
    4262:	c3 97       	sbiw	r24, 0x33	; 51
    4264:	a4 f5       	brge	.+104    	; 0x42ce <STEPPER_process_pwm+0x98>
    4266:	66 23       	and	r22, r22
    4268:	d1 f0       	breq	.+52     	; 0x429e <STEPPER_process_pwm+0x68>
    426a:	20 91 71 04 	lds	r18, 0x0471
    426e:	30 91 72 04 	lds	r19, 0x0472
    4272:	80 e6       	ldi	r24, 0x60	; 96
    4274:	90 e0       	ldi	r25, 0x00	; 0
    4276:	bc 01       	movw	r22, r24
    4278:	26 9f       	mul	r18, r22
    427a:	c0 01       	movw	r24, r0
    427c:	27 9f       	mul	r18, r23
    427e:	90 0d       	add	r25, r0
    4280:	36 9f       	mul	r19, r22
    4282:	90 0d       	add	r25, r0
    4284:	11 24       	eor	r1, r1
    4286:	88 0f       	add	r24, r24
    4288:	89 2f       	mov	r24, r25
    428a:	88 1f       	adc	r24, r24
    428c:	99 0b       	sbc	r25, r25
    428e:	90 93 86 04 	sts	0x0486, r25
    4292:	80 93 85 04 	sts	0x0485, r24
    4296:	81 e0       	ldi	r24, 0x01	; 1
    4298:	80 93 82 02 	sts	0x0282, r24
    429c:	18 c0       	rjmp	.+48     	; 0x42ce <STEPPER_process_pwm+0x98>
    429e:	80 91 82 02 	lds	r24, 0x0282
    42a2:	88 23       	and	r24, r24
    42a4:	a1 f0       	breq	.+40     	; 0x42ce <STEPPER_process_pwm+0x98>
    42a6:	80 91 85 04 	lds	r24, 0x0485
    42aa:	90 91 86 04 	lds	r25, 0x0486
    42ae:	01 97       	sbiw	r24, 0x01	; 1
    42b0:	90 93 86 04 	sts	0x0486, r25
    42b4:	80 93 85 04 	sts	0x0485, r24
    42b8:	80 91 85 04 	lds	r24, 0x0485
    42bc:	90 91 86 04 	lds	r25, 0x0486
    42c0:	89 2b       	or	r24, r25
    42c2:	29 f4       	brne	.+10     	; 0x42ce <STEPPER_process_pwm+0x98>
    42c4:	80 81       	ld	r24, Z
    42c6:	83 7e       	andi	r24, 0xE3	; 227
    42c8:	80 83       	st	Z, r24
    42ca:	10 92 82 02 	sts	0x0282, r1
    42ce:	80 91 93 04 	lds	r24, 0x0493
    42d2:	82 30       	cpi	r24, 0x02	; 2
    42d4:	69 f4       	brne	.+26     	; 0x42f0 <STEPPER_process_pwm+0xba>
    42d6:	80 91 83 02 	lds	r24, 0x0283
    42da:	91 e0       	ldi	r25, 0x01	; 1
    42dc:	89 27       	eor	r24, r25
    42de:	80 93 83 02 	sts	0x0283, r24
    42e2:	88 23       	and	r24, r24
    42e4:	09 f0       	breq	.+2      	; 0x42e8 <STEPPER_process_pwm+0xb2>
    42e6:	3e c0       	rjmp	.+124    	; 0x4364 <STEPPER_process_pwm+0x12e>
    42e8:	80 81       	ld	r24, Z
    42ea:	8f 71       	andi	r24, 0x1F	; 31
    42ec:	80 83       	st	Z, r24
    42ee:	08 95       	ret
    42f0:	80 91 73 04 	lds	r24, 0x0473
    42f4:	90 91 74 04 	lds	r25, 0x0474
    42f8:	c3 97       	sbiw	r24, 0x33	; 51
    42fa:	a4 f5       	brge	.+104    	; 0x4364 <STEPPER_process_pwm+0x12e>
    42fc:	44 23       	and	r20, r20
    42fe:	d1 f0       	breq	.+52     	; 0x4334 <STEPPER_process_pwm+0xfe>
    4300:	20 91 73 04 	lds	r18, 0x0473
    4304:	30 91 74 04 	lds	r19, 0x0474
    4308:	80 e6       	ldi	r24, 0x60	; 96
    430a:	90 e0       	ldi	r25, 0x00	; 0
    430c:	ac 01       	movw	r20, r24
    430e:	24 9f       	mul	r18, r20
    4310:	c0 01       	movw	r24, r0
    4312:	25 9f       	mul	r18, r21
    4314:	90 0d       	add	r25, r0
    4316:	34 9f       	mul	r19, r20
    4318:	90 0d       	add	r25, r0
    431a:	11 24       	eor	r1, r1
    431c:	88 0f       	add	r24, r24
    431e:	89 2f       	mov	r24, r25
    4320:	88 1f       	adc	r24, r24
    4322:	99 0b       	sbc	r25, r25
    4324:	90 93 88 04 	sts	0x0488, r25
    4328:	80 93 87 04 	sts	0x0487, r24
    432c:	81 e0       	ldi	r24, 0x01	; 1
    432e:	80 93 81 02 	sts	0x0281, r24
    4332:	08 95       	ret
    4334:	80 91 81 02 	lds	r24, 0x0281
    4338:	88 23       	and	r24, r24
    433a:	a1 f0       	breq	.+40     	; 0x4364 <STEPPER_process_pwm+0x12e>
    433c:	80 91 87 04 	lds	r24, 0x0487
    4340:	90 91 88 04 	lds	r25, 0x0488
    4344:	01 97       	sbiw	r24, 0x01	; 1
    4346:	90 93 88 04 	sts	0x0488, r25
    434a:	80 93 87 04 	sts	0x0487, r24
    434e:	80 91 87 04 	lds	r24, 0x0487
    4352:	90 91 88 04 	lds	r25, 0x0488
    4356:	89 2b       	or	r24, r25
    4358:	29 f4       	brne	.+10     	; 0x4364 <STEPPER_process_pwm+0x12e>
    435a:	80 81       	ld	r24, Z
    435c:	8f 71       	andi	r24, 0x1F	; 31
    435e:	80 83       	st	Z, r24
    4360:	10 92 81 02 	sts	0x0281, r1
    4364:	08 95       	ret

00004366 <__subsf3>:
    4366:	50 58       	subi	r21, 0x80	; 128

00004368 <__addsf3>:
    4368:	bb 27       	eor	r27, r27
    436a:	aa 27       	eor	r26, r26
    436c:	0e d0       	rcall	.+28     	; 0x438a <__addsf3x>
    436e:	75 c1       	rjmp	.+746    	; 0x465a <__fp_round>
    4370:	66 d1       	rcall	.+716    	; 0x463e <__fp_pscA>
    4372:	30 f0       	brcs	.+12     	; 0x4380 <__addsf3+0x18>
    4374:	6b d1       	rcall	.+726    	; 0x464c <__fp_pscB>
    4376:	20 f0       	brcs	.+8      	; 0x4380 <__addsf3+0x18>
    4378:	31 f4       	brne	.+12     	; 0x4386 <__addsf3+0x1e>
    437a:	9f 3f       	cpi	r25, 0xFF	; 255
    437c:	11 f4       	brne	.+4      	; 0x4382 <__addsf3+0x1a>
    437e:	1e f4       	brtc	.+6      	; 0x4386 <__addsf3+0x1e>
    4380:	5b c1       	rjmp	.+694    	; 0x4638 <__fp_nan>
    4382:	0e f4       	brtc	.+2      	; 0x4386 <__addsf3+0x1e>
    4384:	e0 95       	com	r30
    4386:	e7 fb       	bst	r30, 7
    4388:	51 c1       	rjmp	.+674    	; 0x462c <__fp_inf>

0000438a <__addsf3x>:
    438a:	e9 2f       	mov	r30, r25
    438c:	77 d1       	rcall	.+750    	; 0x467c <__fp_split3>
    438e:	80 f3       	brcs	.-32     	; 0x4370 <__addsf3+0x8>
    4390:	ba 17       	cp	r27, r26
    4392:	62 07       	cpc	r22, r18
    4394:	73 07       	cpc	r23, r19
    4396:	84 07       	cpc	r24, r20
    4398:	95 07       	cpc	r25, r21
    439a:	18 f0       	brcs	.+6      	; 0x43a2 <__addsf3x+0x18>
    439c:	71 f4       	brne	.+28     	; 0x43ba <__addsf3x+0x30>
    439e:	9e f5       	brtc	.+102    	; 0x4406 <__addsf3x+0x7c>
    43a0:	8f c1       	rjmp	.+798    	; 0x46c0 <__fp_zero>
    43a2:	0e f4       	brtc	.+2      	; 0x43a6 <__addsf3x+0x1c>
    43a4:	e0 95       	com	r30
    43a6:	0b 2e       	mov	r0, r27
    43a8:	ba 2f       	mov	r27, r26
    43aa:	a0 2d       	mov	r26, r0
    43ac:	0b 01       	movw	r0, r22
    43ae:	b9 01       	movw	r22, r18
    43b0:	90 01       	movw	r18, r0
    43b2:	0c 01       	movw	r0, r24
    43b4:	ca 01       	movw	r24, r20
    43b6:	a0 01       	movw	r20, r0
    43b8:	11 24       	eor	r1, r1
    43ba:	ff 27       	eor	r31, r31
    43bc:	59 1b       	sub	r21, r25
    43be:	99 f0       	breq	.+38     	; 0x43e6 <__addsf3x+0x5c>
    43c0:	59 3f       	cpi	r21, 0xF9	; 249
    43c2:	50 f4       	brcc	.+20     	; 0x43d8 <__addsf3x+0x4e>
    43c4:	50 3e       	cpi	r21, 0xE0	; 224
    43c6:	68 f1       	brcs	.+90     	; 0x4422 <__addsf3x+0x98>
    43c8:	1a 16       	cp	r1, r26
    43ca:	f0 40       	sbci	r31, 0x00	; 0
    43cc:	a2 2f       	mov	r26, r18
    43ce:	23 2f       	mov	r18, r19
    43d0:	34 2f       	mov	r19, r20
    43d2:	44 27       	eor	r20, r20
    43d4:	58 5f       	subi	r21, 0xF8	; 248
    43d6:	f3 cf       	rjmp	.-26     	; 0x43be <__addsf3x+0x34>
    43d8:	46 95       	lsr	r20
    43da:	37 95       	ror	r19
    43dc:	27 95       	ror	r18
    43de:	a7 95       	ror	r26
    43e0:	f0 40       	sbci	r31, 0x00	; 0
    43e2:	53 95       	inc	r21
    43e4:	c9 f7       	brne	.-14     	; 0x43d8 <__addsf3x+0x4e>
    43e6:	7e f4       	brtc	.+30     	; 0x4406 <__addsf3x+0x7c>
    43e8:	1f 16       	cp	r1, r31
    43ea:	ba 0b       	sbc	r27, r26
    43ec:	62 0b       	sbc	r22, r18
    43ee:	73 0b       	sbc	r23, r19
    43f0:	84 0b       	sbc	r24, r20
    43f2:	ba f0       	brmi	.+46     	; 0x4422 <__addsf3x+0x98>
    43f4:	91 50       	subi	r25, 0x01	; 1
    43f6:	a1 f0       	breq	.+40     	; 0x4420 <__addsf3x+0x96>
    43f8:	ff 0f       	add	r31, r31
    43fa:	bb 1f       	adc	r27, r27
    43fc:	66 1f       	adc	r22, r22
    43fe:	77 1f       	adc	r23, r23
    4400:	88 1f       	adc	r24, r24
    4402:	c2 f7       	brpl	.-16     	; 0x43f4 <__addsf3x+0x6a>
    4404:	0e c0       	rjmp	.+28     	; 0x4422 <__addsf3x+0x98>
    4406:	ba 0f       	add	r27, r26
    4408:	62 1f       	adc	r22, r18
    440a:	73 1f       	adc	r23, r19
    440c:	84 1f       	adc	r24, r20
    440e:	48 f4       	brcc	.+18     	; 0x4422 <__addsf3x+0x98>
    4410:	87 95       	ror	r24
    4412:	77 95       	ror	r23
    4414:	67 95       	ror	r22
    4416:	b7 95       	ror	r27
    4418:	f7 95       	ror	r31
    441a:	9e 3f       	cpi	r25, 0xFE	; 254
    441c:	08 f0       	brcs	.+2      	; 0x4420 <__addsf3x+0x96>
    441e:	b3 cf       	rjmp	.-154    	; 0x4386 <__addsf3+0x1e>
    4420:	93 95       	inc	r25
    4422:	88 0f       	add	r24, r24
    4424:	08 f0       	brcs	.+2      	; 0x4428 <__addsf3x+0x9e>
    4426:	99 27       	eor	r25, r25
    4428:	ee 0f       	add	r30, r30
    442a:	97 95       	ror	r25
    442c:	87 95       	ror	r24
    442e:	08 95       	ret

00004430 <__cmpsf2>:
    4430:	d9 d0       	rcall	.+434    	; 0x45e4 <__fp_cmp>
    4432:	08 f4       	brcc	.+2      	; 0x4436 <__cmpsf2+0x6>
    4434:	81 e0       	ldi	r24, 0x01	; 1
    4436:	08 95       	ret

00004438 <__divsf3>:
    4438:	0c d0       	rcall	.+24     	; 0x4452 <__divsf3x>
    443a:	0f c1       	rjmp	.+542    	; 0x465a <__fp_round>
    443c:	07 d1       	rcall	.+526    	; 0x464c <__fp_pscB>
    443e:	40 f0       	brcs	.+16     	; 0x4450 <__divsf3+0x18>
    4440:	fe d0       	rcall	.+508    	; 0x463e <__fp_pscA>
    4442:	30 f0       	brcs	.+12     	; 0x4450 <__divsf3+0x18>
    4444:	21 f4       	brne	.+8      	; 0x444e <__divsf3+0x16>
    4446:	5f 3f       	cpi	r21, 0xFF	; 255
    4448:	19 f0       	breq	.+6      	; 0x4450 <__divsf3+0x18>
    444a:	f0 c0       	rjmp	.+480    	; 0x462c <__fp_inf>
    444c:	51 11       	cpse	r21, r1
    444e:	39 c1       	rjmp	.+626    	; 0x46c2 <__fp_szero>
    4450:	f3 c0       	rjmp	.+486    	; 0x4638 <__fp_nan>

00004452 <__divsf3x>:
    4452:	14 d1       	rcall	.+552    	; 0x467c <__fp_split3>
    4454:	98 f3       	brcs	.-26     	; 0x443c <__divsf3+0x4>

00004456 <__divsf3_pse>:
    4456:	99 23       	and	r25, r25
    4458:	c9 f3       	breq	.-14     	; 0x444c <__divsf3+0x14>
    445a:	55 23       	and	r21, r21
    445c:	b1 f3       	breq	.-20     	; 0x444a <__divsf3+0x12>
    445e:	95 1b       	sub	r25, r21
    4460:	55 0b       	sbc	r21, r21
    4462:	bb 27       	eor	r27, r27
    4464:	aa 27       	eor	r26, r26
    4466:	62 17       	cp	r22, r18
    4468:	73 07       	cpc	r23, r19
    446a:	84 07       	cpc	r24, r20
    446c:	38 f0       	brcs	.+14     	; 0x447c <__divsf3_pse+0x26>
    446e:	9f 5f       	subi	r25, 0xFF	; 255
    4470:	5f 4f       	sbci	r21, 0xFF	; 255
    4472:	22 0f       	add	r18, r18
    4474:	33 1f       	adc	r19, r19
    4476:	44 1f       	adc	r20, r20
    4478:	aa 1f       	adc	r26, r26
    447a:	a9 f3       	breq	.-22     	; 0x4466 <__divsf3_pse+0x10>
    447c:	33 d0       	rcall	.+102    	; 0x44e4 <__divsf3_pse+0x8e>
    447e:	0e 2e       	mov	r0, r30
    4480:	3a f0       	brmi	.+14     	; 0x4490 <__divsf3_pse+0x3a>
    4482:	e0 e8       	ldi	r30, 0x80	; 128
    4484:	30 d0       	rcall	.+96     	; 0x44e6 <__divsf3_pse+0x90>
    4486:	91 50       	subi	r25, 0x01	; 1
    4488:	50 40       	sbci	r21, 0x00	; 0
    448a:	e6 95       	lsr	r30
    448c:	00 1c       	adc	r0, r0
    448e:	ca f7       	brpl	.-14     	; 0x4482 <__divsf3_pse+0x2c>
    4490:	29 d0       	rcall	.+82     	; 0x44e4 <__divsf3_pse+0x8e>
    4492:	fe 2f       	mov	r31, r30
    4494:	27 d0       	rcall	.+78     	; 0x44e4 <__divsf3_pse+0x8e>
    4496:	66 0f       	add	r22, r22
    4498:	77 1f       	adc	r23, r23
    449a:	88 1f       	adc	r24, r24
    449c:	bb 1f       	adc	r27, r27
    449e:	26 17       	cp	r18, r22
    44a0:	37 07       	cpc	r19, r23
    44a2:	48 07       	cpc	r20, r24
    44a4:	ab 07       	cpc	r26, r27
    44a6:	b0 e8       	ldi	r27, 0x80	; 128
    44a8:	09 f0       	breq	.+2      	; 0x44ac <__divsf3_pse+0x56>
    44aa:	bb 0b       	sbc	r27, r27
    44ac:	80 2d       	mov	r24, r0
    44ae:	bf 01       	movw	r22, r30
    44b0:	ff 27       	eor	r31, r31
    44b2:	93 58       	subi	r25, 0x83	; 131
    44b4:	5f 4f       	sbci	r21, 0xFF	; 255
    44b6:	2a f0       	brmi	.+10     	; 0x44c2 <__divsf3_pse+0x6c>
    44b8:	9e 3f       	cpi	r25, 0xFE	; 254
    44ba:	51 05       	cpc	r21, r1
    44bc:	68 f0       	brcs	.+26     	; 0x44d8 <__divsf3_pse+0x82>
    44be:	b6 c0       	rjmp	.+364    	; 0x462c <__fp_inf>
    44c0:	00 c1       	rjmp	.+512    	; 0x46c2 <__fp_szero>
    44c2:	5f 3f       	cpi	r21, 0xFF	; 255
    44c4:	ec f3       	brlt	.-6      	; 0x44c0 <__divsf3_pse+0x6a>
    44c6:	98 3e       	cpi	r25, 0xE8	; 232
    44c8:	dc f3       	brlt	.-10     	; 0x44c0 <__divsf3_pse+0x6a>
    44ca:	86 95       	lsr	r24
    44cc:	77 95       	ror	r23
    44ce:	67 95       	ror	r22
    44d0:	b7 95       	ror	r27
    44d2:	f7 95       	ror	r31
    44d4:	9f 5f       	subi	r25, 0xFF	; 255
    44d6:	c9 f7       	brne	.-14     	; 0x44ca <__divsf3_pse+0x74>
    44d8:	88 0f       	add	r24, r24
    44da:	91 1d       	adc	r25, r1
    44dc:	96 95       	lsr	r25
    44de:	87 95       	ror	r24
    44e0:	97 f9       	bld	r25, 7
    44e2:	08 95       	ret
    44e4:	e1 e0       	ldi	r30, 0x01	; 1
    44e6:	66 0f       	add	r22, r22
    44e8:	77 1f       	adc	r23, r23
    44ea:	88 1f       	adc	r24, r24
    44ec:	bb 1f       	adc	r27, r27
    44ee:	62 17       	cp	r22, r18
    44f0:	73 07       	cpc	r23, r19
    44f2:	84 07       	cpc	r24, r20
    44f4:	ba 07       	cpc	r27, r26
    44f6:	20 f0       	brcs	.+8      	; 0x4500 <__divsf3_pse+0xaa>
    44f8:	62 1b       	sub	r22, r18
    44fa:	73 0b       	sbc	r23, r19
    44fc:	84 0b       	sbc	r24, r20
    44fe:	ba 0b       	sbc	r27, r26
    4500:	ee 1f       	adc	r30, r30
    4502:	88 f7       	brcc	.-30     	; 0x44e6 <__divsf3_pse+0x90>
    4504:	e0 95       	com	r30
    4506:	08 95       	ret

00004508 <__fixsfsi>:
    4508:	04 d0       	rcall	.+8      	; 0x4512 <__fixunssfsi>
    450a:	68 94       	set
    450c:	b1 11       	cpse	r27, r1
    450e:	d9 c0       	rjmp	.+434    	; 0x46c2 <__fp_szero>
    4510:	08 95       	ret

00004512 <__fixunssfsi>:
    4512:	bc d0       	rcall	.+376    	; 0x468c <__fp_splitA>
    4514:	88 f0       	brcs	.+34     	; 0x4538 <__fixunssfsi+0x26>
    4516:	9f 57       	subi	r25, 0x7F	; 127
    4518:	90 f0       	brcs	.+36     	; 0x453e <__fixunssfsi+0x2c>
    451a:	b9 2f       	mov	r27, r25
    451c:	99 27       	eor	r25, r25
    451e:	b7 51       	subi	r27, 0x17	; 23
    4520:	a0 f0       	brcs	.+40     	; 0x454a <__fixunssfsi+0x38>
    4522:	d1 f0       	breq	.+52     	; 0x4558 <__fixunssfsi+0x46>
    4524:	66 0f       	add	r22, r22
    4526:	77 1f       	adc	r23, r23
    4528:	88 1f       	adc	r24, r24
    452a:	99 1f       	adc	r25, r25
    452c:	1a f0       	brmi	.+6      	; 0x4534 <__fixunssfsi+0x22>
    452e:	ba 95       	dec	r27
    4530:	c9 f7       	brne	.-14     	; 0x4524 <__fixunssfsi+0x12>
    4532:	12 c0       	rjmp	.+36     	; 0x4558 <__fixunssfsi+0x46>
    4534:	b1 30       	cpi	r27, 0x01	; 1
    4536:	81 f0       	breq	.+32     	; 0x4558 <__fixunssfsi+0x46>
    4538:	c3 d0       	rcall	.+390    	; 0x46c0 <__fp_zero>
    453a:	b1 e0       	ldi	r27, 0x01	; 1
    453c:	08 95       	ret
    453e:	c0 c0       	rjmp	.+384    	; 0x46c0 <__fp_zero>
    4540:	67 2f       	mov	r22, r23
    4542:	78 2f       	mov	r23, r24
    4544:	88 27       	eor	r24, r24
    4546:	b8 5f       	subi	r27, 0xF8	; 248
    4548:	39 f0       	breq	.+14     	; 0x4558 <__fixunssfsi+0x46>
    454a:	b9 3f       	cpi	r27, 0xF9	; 249
    454c:	cc f3       	brlt	.-14     	; 0x4540 <__fixunssfsi+0x2e>
    454e:	86 95       	lsr	r24
    4550:	77 95       	ror	r23
    4552:	67 95       	ror	r22
    4554:	b3 95       	inc	r27
    4556:	d9 f7       	brne	.-10     	; 0x454e <__fixunssfsi+0x3c>
    4558:	3e f4       	brtc	.+14     	; 0x4568 <__fixunssfsi+0x56>
    455a:	90 95       	com	r25
    455c:	80 95       	com	r24
    455e:	70 95       	com	r23
    4560:	61 95       	neg	r22
    4562:	7f 4f       	sbci	r23, 0xFF	; 255
    4564:	8f 4f       	sbci	r24, 0xFF	; 255
    4566:	9f 4f       	sbci	r25, 0xFF	; 255
    4568:	08 95       	ret

0000456a <__floatunsisf>:
    456a:	e8 94       	clt
    456c:	09 c0       	rjmp	.+18     	; 0x4580 <__floatsisf+0x12>

0000456e <__floatsisf>:
    456e:	97 fb       	bst	r25, 7
    4570:	3e f4       	brtc	.+14     	; 0x4580 <__floatsisf+0x12>
    4572:	90 95       	com	r25
    4574:	80 95       	com	r24
    4576:	70 95       	com	r23
    4578:	61 95       	neg	r22
    457a:	7f 4f       	sbci	r23, 0xFF	; 255
    457c:	8f 4f       	sbci	r24, 0xFF	; 255
    457e:	9f 4f       	sbci	r25, 0xFF	; 255
    4580:	99 23       	and	r25, r25
    4582:	a9 f0       	breq	.+42     	; 0x45ae <__floatsisf+0x40>
    4584:	f9 2f       	mov	r31, r25
    4586:	96 e9       	ldi	r25, 0x96	; 150
    4588:	bb 27       	eor	r27, r27
    458a:	93 95       	inc	r25
    458c:	f6 95       	lsr	r31
    458e:	87 95       	ror	r24
    4590:	77 95       	ror	r23
    4592:	67 95       	ror	r22
    4594:	b7 95       	ror	r27
    4596:	f1 11       	cpse	r31, r1
    4598:	f8 cf       	rjmp	.-16     	; 0x458a <__floatsisf+0x1c>
    459a:	fa f4       	brpl	.+62     	; 0x45da <__floatsisf+0x6c>
    459c:	bb 0f       	add	r27, r27
    459e:	11 f4       	brne	.+4      	; 0x45a4 <__floatsisf+0x36>
    45a0:	60 ff       	sbrs	r22, 0
    45a2:	1b c0       	rjmp	.+54     	; 0x45da <__floatsisf+0x6c>
    45a4:	6f 5f       	subi	r22, 0xFF	; 255
    45a6:	7f 4f       	sbci	r23, 0xFF	; 255
    45a8:	8f 4f       	sbci	r24, 0xFF	; 255
    45aa:	9f 4f       	sbci	r25, 0xFF	; 255
    45ac:	16 c0       	rjmp	.+44     	; 0x45da <__floatsisf+0x6c>
    45ae:	88 23       	and	r24, r24
    45b0:	11 f0       	breq	.+4      	; 0x45b6 <__floatsisf+0x48>
    45b2:	96 e9       	ldi	r25, 0x96	; 150
    45b4:	11 c0       	rjmp	.+34     	; 0x45d8 <__floatsisf+0x6a>
    45b6:	77 23       	and	r23, r23
    45b8:	21 f0       	breq	.+8      	; 0x45c2 <__floatsisf+0x54>
    45ba:	9e e8       	ldi	r25, 0x8E	; 142
    45bc:	87 2f       	mov	r24, r23
    45be:	76 2f       	mov	r23, r22
    45c0:	05 c0       	rjmp	.+10     	; 0x45cc <__floatsisf+0x5e>
    45c2:	66 23       	and	r22, r22
    45c4:	71 f0       	breq	.+28     	; 0x45e2 <__floatsisf+0x74>
    45c6:	96 e8       	ldi	r25, 0x86	; 134
    45c8:	86 2f       	mov	r24, r22
    45ca:	70 e0       	ldi	r23, 0x00	; 0
    45cc:	60 e0       	ldi	r22, 0x00	; 0
    45ce:	2a f0       	brmi	.+10     	; 0x45da <__floatsisf+0x6c>
    45d0:	9a 95       	dec	r25
    45d2:	66 0f       	add	r22, r22
    45d4:	77 1f       	adc	r23, r23
    45d6:	88 1f       	adc	r24, r24
    45d8:	da f7       	brpl	.-10     	; 0x45d0 <__floatsisf+0x62>
    45da:	88 0f       	add	r24, r24
    45dc:	96 95       	lsr	r25
    45de:	87 95       	ror	r24
    45e0:	97 f9       	bld	r25, 7
    45e2:	08 95       	ret

000045e4 <__fp_cmp>:
    45e4:	99 0f       	add	r25, r25
    45e6:	00 08       	sbc	r0, r0
    45e8:	55 0f       	add	r21, r21
    45ea:	aa 0b       	sbc	r26, r26
    45ec:	e0 e8       	ldi	r30, 0x80	; 128
    45ee:	fe ef       	ldi	r31, 0xFE	; 254
    45f0:	16 16       	cp	r1, r22
    45f2:	17 06       	cpc	r1, r23
    45f4:	e8 07       	cpc	r30, r24
    45f6:	f9 07       	cpc	r31, r25
    45f8:	c0 f0       	brcs	.+48     	; 0x462a <__fp_cmp+0x46>
    45fa:	12 16       	cp	r1, r18
    45fc:	13 06       	cpc	r1, r19
    45fe:	e4 07       	cpc	r30, r20
    4600:	f5 07       	cpc	r31, r21
    4602:	98 f0       	brcs	.+38     	; 0x462a <__fp_cmp+0x46>
    4604:	62 1b       	sub	r22, r18
    4606:	73 0b       	sbc	r23, r19
    4608:	84 0b       	sbc	r24, r20
    460a:	95 0b       	sbc	r25, r21
    460c:	39 f4       	brne	.+14     	; 0x461c <__fp_cmp+0x38>
    460e:	0a 26       	eor	r0, r26
    4610:	61 f0       	breq	.+24     	; 0x462a <__fp_cmp+0x46>
    4612:	23 2b       	or	r18, r19
    4614:	24 2b       	or	r18, r20
    4616:	25 2b       	or	r18, r21
    4618:	21 f4       	brne	.+8      	; 0x4622 <__fp_cmp+0x3e>
    461a:	08 95       	ret
    461c:	0a 26       	eor	r0, r26
    461e:	09 f4       	brne	.+2      	; 0x4622 <__fp_cmp+0x3e>
    4620:	a1 40       	sbci	r26, 0x01	; 1
    4622:	a6 95       	lsr	r26
    4624:	8f ef       	ldi	r24, 0xFF	; 255
    4626:	81 1d       	adc	r24, r1
    4628:	81 1d       	adc	r24, r1
    462a:	08 95       	ret

0000462c <__fp_inf>:
    462c:	97 f9       	bld	r25, 7
    462e:	9f 67       	ori	r25, 0x7F	; 127
    4630:	80 e8       	ldi	r24, 0x80	; 128
    4632:	70 e0       	ldi	r23, 0x00	; 0
    4634:	60 e0       	ldi	r22, 0x00	; 0
    4636:	08 95       	ret

00004638 <__fp_nan>:
    4638:	9f ef       	ldi	r25, 0xFF	; 255
    463a:	80 ec       	ldi	r24, 0xC0	; 192
    463c:	08 95       	ret

0000463e <__fp_pscA>:
    463e:	00 24       	eor	r0, r0
    4640:	0a 94       	dec	r0
    4642:	16 16       	cp	r1, r22
    4644:	17 06       	cpc	r1, r23
    4646:	18 06       	cpc	r1, r24
    4648:	09 06       	cpc	r0, r25
    464a:	08 95       	ret

0000464c <__fp_pscB>:
    464c:	00 24       	eor	r0, r0
    464e:	0a 94       	dec	r0
    4650:	12 16       	cp	r1, r18
    4652:	13 06       	cpc	r1, r19
    4654:	14 06       	cpc	r1, r20
    4656:	05 06       	cpc	r0, r21
    4658:	08 95       	ret

0000465a <__fp_round>:
    465a:	09 2e       	mov	r0, r25
    465c:	03 94       	inc	r0
    465e:	00 0c       	add	r0, r0
    4660:	11 f4       	brne	.+4      	; 0x4666 <__fp_round+0xc>
    4662:	88 23       	and	r24, r24
    4664:	52 f0       	brmi	.+20     	; 0x467a <__fp_round+0x20>
    4666:	bb 0f       	add	r27, r27
    4668:	40 f4       	brcc	.+16     	; 0x467a <__fp_round+0x20>
    466a:	bf 2b       	or	r27, r31
    466c:	11 f4       	brne	.+4      	; 0x4672 <__fp_round+0x18>
    466e:	60 ff       	sbrs	r22, 0
    4670:	04 c0       	rjmp	.+8      	; 0x467a <__fp_round+0x20>
    4672:	6f 5f       	subi	r22, 0xFF	; 255
    4674:	7f 4f       	sbci	r23, 0xFF	; 255
    4676:	8f 4f       	sbci	r24, 0xFF	; 255
    4678:	9f 4f       	sbci	r25, 0xFF	; 255
    467a:	08 95       	ret

0000467c <__fp_split3>:
    467c:	57 fd       	sbrc	r21, 7
    467e:	90 58       	subi	r25, 0x80	; 128
    4680:	44 0f       	add	r20, r20
    4682:	55 1f       	adc	r21, r21
    4684:	59 f0       	breq	.+22     	; 0x469c <__fp_splitA+0x10>
    4686:	5f 3f       	cpi	r21, 0xFF	; 255
    4688:	71 f0       	breq	.+28     	; 0x46a6 <__fp_splitA+0x1a>
    468a:	47 95       	ror	r20

0000468c <__fp_splitA>:
    468c:	88 0f       	add	r24, r24
    468e:	97 fb       	bst	r25, 7
    4690:	99 1f       	adc	r25, r25
    4692:	61 f0       	breq	.+24     	; 0x46ac <__fp_splitA+0x20>
    4694:	9f 3f       	cpi	r25, 0xFF	; 255
    4696:	79 f0       	breq	.+30     	; 0x46b6 <__fp_splitA+0x2a>
    4698:	87 95       	ror	r24
    469a:	08 95       	ret
    469c:	12 16       	cp	r1, r18
    469e:	13 06       	cpc	r1, r19
    46a0:	14 06       	cpc	r1, r20
    46a2:	55 1f       	adc	r21, r21
    46a4:	f2 cf       	rjmp	.-28     	; 0x468a <__fp_split3+0xe>
    46a6:	46 95       	lsr	r20
    46a8:	f1 df       	rcall	.-30     	; 0x468c <__fp_splitA>
    46aa:	08 c0       	rjmp	.+16     	; 0x46bc <__fp_splitA+0x30>
    46ac:	16 16       	cp	r1, r22
    46ae:	17 06       	cpc	r1, r23
    46b0:	18 06       	cpc	r1, r24
    46b2:	99 1f       	adc	r25, r25
    46b4:	f1 cf       	rjmp	.-30     	; 0x4698 <__fp_splitA+0xc>
    46b6:	86 95       	lsr	r24
    46b8:	71 05       	cpc	r23, r1
    46ba:	61 05       	cpc	r22, r1
    46bc:	08 94       	sec
    46be:	08 95       	ret

000046c0 <__fp_zero>:
    46c0:	e8 94       	clt

000046c2 <__fp_szero>:
    46c2:	bb 27       	eor	r27, r27
    46c4:	66 27       	eor	r22, r22
    46c6:	77 27       	eor	r23, r23
    46c8:	cb 01       	movw	r24, r22
    46ca:	97 f9       	bld	r25, 7
    46cc:	08 95       	ret

000046ce <__gesf2>:
    46ce:	8a df       	rcall	.-236    	; 0x45e4 <__fp_cmp>
    46d0:	08 f4       	brcc	.+2      	; 0x46d4 <__gesf2+0x6>
    46d2:	8f ef       	ldi	r24, 0xFF	; 255
    46d4:	08 95       	ret

000046d6 <lrint>:
    46d6:	da df       	rcall	.-76     	; 0x468c <__fp_splitA>
    46d8:	a8 f1       	brcs	.+106    	; 0x4744 <lrint+0x6e>
    46da:	9e 57       	subi	r25, 0x7E	; 126
    46dc:	a8 f1       	brcs	.+106    	; 0x4748 <lrint+0x72>
    46de:	98 51       	subi	r25, 0x18	; 24
    46e0:	60 f0       	brcs	.+24     	; 0x46fa <lrint+0x24>
    46e2:	39 f1       	breq	.+78     	; 0x4732 <lrint+0x5c>
    46e4:	98 30       	cpi	r25, 0x08	; 8
    46e6:	70 f5       	brcc	.+92     	; 0x4744 <lrint+0x6e>
    46e8:	09 2e       	mov	r0, r25
    46ea:	99 27       	eor	r25, r25
    46ec:	66 0f       	add	r22, r22
    46ee:	77 1f       	adc	r23, r23
    46f0:	88 1f       	adc	r24, r24
    46f2:	99 1f       	adc	r25, r25
    46f4:	0a 94       	dec	r0
    46f6:	d1 f7       	brne	.-12     	; 0x46ec <lrint+0x16>
    46f8:	1c c0       	rjmp	.+56     	; 0x4732 <lrint+0x5c>
    46fa:	bb 27       	eor	r27, r27
    46fc:	99 3f       	cpi	r25, 0xF9	; 249
    46fe:	4c f4       	brge	.+18     	; 0x4712 <lrint+0x3c>
    4700:	b1 11       	cpse	r27, r1
    4702:	b1 e0       	ldi	r27, 0x01	; 1
    4704:	b6 2b       	or	r27, r22
    4706:	67 2f       	mov	r22, r23
    4708:	78 2f       	mov	r23, r24
    470a:	88 27       	eor	r24, r24
    470c:	98 5f       	subi	r25, 0xF8	; 248
    470e:	b1 f7       	brne	.-20     	; 0x46fc <lrint+0x26>
    4710:	08 c0       	rjmp	.+16     	; 0x4722 <lrint+0x4c>
    4712:	86 95       	lsr	r24
    4714:	77 95       	ror	r23
    4716:	67 95       	ror	r22
    4718:	b7 95       	ror	r27
    471a:	08 f4       	brcc	.+2      	; 0x471e <lrint+0x48>
    471c:	b1 60       	ori	r27, 0x01	; 1
    471e:	93 95       	inc	r25
    4720:	c1 f7       	brne	.-16     	; 0x4712 <lrint+0x3c>
    4722:	bb 0f       	add	r27, r27
    4724:	30 f4       	brcc	.+12     	; 0x4732 <lrint+0x5c>
    4726:	11 f4       	brne	.+4      	; 0x472c <lrint+0x56>
    4728:	60 ff       	sbrs	r22, 0
    472a:	03 c0       	rjmp	.+6      	; 0x4732 <lrint+0x5c>
    472c:	6f 5f       	subi	r22, 0xFF	; 255
    472e:	7f 4f       	sbci	r23, 0xFF	; 255
    4730:	8f 4f       	sbci	r24, 0xFF	; 255
    4732:	3e f4       	brtc	.+14     	; 0x4742 <lrint+0x6c>
    4734:	90 95       	com	r25
    4736:	80 95       	com	r24
    4738:	70 95       	com	r23
    473a:	61 95       	neg	r22
    473c:	7f 4f       	sbci	r23, 0xFF	; 255
    473e:	8f 4f       	sbci	r24, 0xFF	; 255
    4740:	9f 4f       	sbci	r25, 0xFF	; 255
    4742:	08 95       	ret
    4744:	68 94       	set
    4746:	bd cf       	rjmp	.-134    	; 0x46c2 <__fp_szero>
    4748:	bb cf       	rjmp	.-138    	; 0x46c0 <__fp_zero>

0000474a <__mulsf3>:
    474a:	0b d0       	rcall	.+22     	; 0x4762 <__mulsf3x>
    474c:	86 cf       	rjmp	.-244    	; 0x465a <__fp_round>
    474e:	77 df       	rcall	.-274    	; 0x463e <__fp_pscA>
    4750:	28 f0       	brcs	.+10     	; 0x475c <__mulsf3+0x12>
    4752:	7c df       	rcall	.-264    	; 0x464c <__fp_pscB>
    4754:	18 f0       	brcs	.+6      	; 0x475c <__mulsf3+0x12>
    4756:	95 23       	and	r25, r21
    4758:	09 f0       	breq	.+2      	; 0x475c <__mulsf3+0x12>
    475a:	68 cf       	rjmp	.-304    	; 0x462c <__fp_inf>
    475c:	6d cf       	rjmp	.-294    	; 0x4638 <__fp_nan>
    475e:	11 24       	eor	r1, r1
    4760:	b0 cf       	rjmp	.-160    	; 0x46c2 <__fp_szero>

00004762 <__mulsf3x>:
    4762:	8c df       	rcall	.-232    	; 0x467c <__fp_split3>
    4764:	a0 f3       	brcs	.-24     	; 0x474e <__mulsf3+0x4>

00004766 <__mulsf3_pse>:
    4766:	95 9f       	mul	r25, r21
    4768:	d1 f3       	breq	.-12     	; 0x475e <__mulsf3+0x14>
    476a:	95 0f       	add	r25, r21
    476c:	50 e0       	ldi	r21, 0x00	; 0
    476e:	55 1f       	adc	r21, r21
    4770:	62 9f       	mul	r22, r18
    4772:	f0 01       	movw	r30, r0
    4774:	72 9f       	mul	r23, r18
    4776:	bb 27       	eor	r27, r27
    4778:	f0 0d       	add	r31, r0
    477a:	b1 1d       	adc	r27, r1
    477c:	63 9f       	mul	r22, r19
    477e:	aa 27       	eor	r26, r26
    4780:	f0 0d       	add	r31, r0
    4782:	b1 1d       	adc	r27, r1
    4784:	aa 1f       	adc	r26, r26
    4786:	64 9f       	mul	r22, r20
    4788:	66 27       	eor	r22, r22
    478a:	b0 0d       	add	r27, r0
    478c:	a1 1d       	adc	r26, r1
    478e:	66 1f       	adc	r22, r22
    4790:	82 9f       	mul	r24, r18
    4792:	22 27       	eor	r18, r18
    4794:	b0 0d       	add	r27, r0
    4796:	a1 1d       	adc	r26, r1
    4798:	62 1f       	adc	r22, r18
    479a:	73 9f       	mul	r23, r19
    479c:	b0 0d       	add	r27, r0
    479e:	a1 1d       	adc	r26, r1
    47a0:	62 1f       	adc	r22, r18
    47a2:	83 9f       	mul	r24, r19
    47a4:	a0 0d       	add	r26, r0
    47a6:	61 1d       	adc	r22, r1
    47a8:	22 1f       	adc	r18, r18
    47aa:	74 9f       	mul	r23, r20
    47ac:	33 27       	eor	r19, r19
    47ae:	a0 0d       	add	r26, r0
    47b0:	61 1d       	adc	r22, r1
    47b2:	23 1f       	adc	r18, r19
    47b4:	84 9f       	mul	r24, r20
    47b6:	60 0d       	add	r22, r0
    47b8:	21 1d       	adc	r18, r1
    47ba:	82 2f       	mov	r24, r18
    47bc:	76 2f       	mov	r23, r22
    47be:	6a 2f       	mov	r22, r26
    47c0:	11 24       	eor	r1, r1
    47c2:	9f 57       	subi	r25, 0x7F	; 127
    47c4:	50 40       	sbci	r21, 0x00	; 0
    47c6:	8a f0       	brmi	.+34     	; 0x47ea <__mulsf3_pse+0x84>
    47c8:	e1 f0       	breq	.+56     	; 0x4802 <__mulsf3_pse+0x9c>
    47ca:	88 23       	and	r24, r24
    47cc:	4a f0       	brmi	.+18     	; 0x47e0 <__mulsf3_pse+0x7a>
    47ce:	ee 0f       	add	r30, r30
    47d0:	ff 1f       	adc	r31, r31
    47d2:	bb 1f       	adc	r27, r27
    47d4:	66 1f       	adc	r22, r22
    47d6:	77 1f       	adc	r23, r23
    47d8:	88 1f       	adc	r24, r24
    47da:	91 50       	subi	r25, 0x01	; 1
    47dc:	50 40       	sbci	r21, 0x00	; 0
    47de:	a9 f7       	brne	.-22     	; 0x47ca <__mulsf3_pse+0x64>
    47e0:	9e 3f       	cpi	r25, 0xFE	; 254
    47e2:	51 05       	cpc	r21, r1
    47e4:	70 f0       	brcs	.+28     	; 0x4802 <__mulsf3_pse+0x9c>
    47e6:	22 cf       	rjmp	.-444    	; 0x462c <__fp_inf>
    47e8:	6c cf       	rjmp	.-296    	; 0x46c2 <__fp_szero>
    47ea:	5f 3f       	cpi	r21, 0xFF	; 255
    47ec:	ec f3       	brlt	.-6      	; 0x47e8 <__mulsf3_pse+0x82>
    47ee:	98 3e       	cpi	r25, 0xE8	; 232
    47f0:	dc f3       	brlt	.-10     	; 0x47e8 <__mulsf3_pse+0x82>
    47f2:	86 95       	lsr	r24
    47f4:	77 95       	ror	r23
    47f6:	67 95       	ror	r22
    47f8:	b7 95       	ror	r27
    47fa:	f7 95       	ror	r31
    47fc:	e7 95       	ror	r30
    47fe:	9f 5f       	subi	r25, 0xFF	; 255
    4800:	c1 f7       	brne	.-16     	; 0x47f2 <__mulsf3_pse+0x8c>
    4802:	fe 2b       	or	r31, r30
    4804:	88 0f       	add	r24, r24
    4806:	91 1d       	adc	r25, r1
    4808:	96 95       	lsr	r25
    480a:	87 95       	ror	r24
    480c:	97 f9       	bld	r25, 7
    480e:	08 95       	ret

00004810 <pow>:
    4810:	fa 01       	movw	r30, r20
    4812:	ee 0f       	add	r30, r30
    4814:	ff 1f       	adc	r31, r31
    4816:	30 96       	adiw	r30, 0x00	; 0
    4818:	21 05       	cpc	r18, r1
    481a:	31 05       	cpc	r19, r1
    481c:	99 f1       	breq	.+102    	; 0x4884 <pow+0x74>
    481e:	61 15       	cp	r22, r1
    4820:	71 05       	cpc	r23, r1
    4822:	61 f4       	brne	.+24     	; 0x483c <pow+0x2c>
    4824:	80 38       	cpi	r24, 0x80	; 128
    4826:	bf e3       	ldi	r27, 0x3F	; 63
    4828:	9b 07       	cpc	r25, r27
    482a:	49 f1       	breq	.+82     	; 0x487e <pow+0x6e>
    482c:	68 94       	set
    482e:	90 38       	cpi	r25, 0x80	; 128
    4830:	81 05       	cpc	r24, r1
    4832:	61 f0       	breq	.+24     	; 0x484c <pow+0x3c>
    4834:	80 38       	cpi	r24, 0x80	; 128
    4836:	bf ef       	ldi	r27, 0xFF	; 255
    4838:	9b 07       	cpc	r25, r27
    483a:	41 f0       	breq	.+16     	; 0x484c <pow+0x3c>
    483c:	99 23       	and	r25, r25
    483e:	42 f5       	brpl	.+80     	; 0x4890 <pow+0x80>
    4840:	ff 3f       	cpi	r31, 0xFF	; 255
    4842:	e1 05       	cpc	r30, r1
    4844:	31 05       	cpc	r19, r1
    4846:	21 05       	cpc	r18, r1
    4848:	11 f1       	breq	.+68     	; 0x488e <pow+0x7e>
    484a:	e8 94       	clt
    484c:	08 94       	sec
    484e:	e7 95       	ror	r30
    4850:	d9 01       	movw	r26, r18
    4852:	aa 23       	and	r26, r26
    4854:	29 f4       	brne	.+10     	; 0x4860 <pow+0x50>
    4856:	ab 2f       	mov	r26, r27
    4858:	be 2f       	mov	r27, r30
    485a:	f8 5f       	subi	r31, 0xF8	; 248
    485c:	d0 f3       	brcs	.-12     	; 0x4852 <pow+0x42>
    485e:	10 c0       	rjmp	.+32     	; 0x4880 <pow+0x70>
    4860:	ff 5f       	subi	r31, 0xFF	; 255
    4862:	70 f4       	brcc	.+28     	; 0x4880 <pow+0x70>
    4864:	a6 95       	lsr	r26
    4866:	e0 f7       	brcc	.-8      	; 0x4860 <pow+0x50>
    4868:	f7 39       	cpi	r31, 0x97	; 151
    486a:	50 f0       	brcs	.+20     	; 0x4880 <pow+0x70>
    486c:	19 f0       	breq	.+6      	; 0x4874 <pow+0x64>
    486e:	ff 3a       	cpi	r31, 0xAF	; 175
    4870:	38 f4       	brcc	.+14     	; 0x4880 <pow+0x70>
    4872:	9f 77       	andi	r25, 0x7F	; 127
    4874:	9f 93       	push	r25
    4876:	0c d0       	rcall	.+24     	; 0x4890 <pow+0x80>
    4878:	0f 90       	pop	r0
    487a:	07 fc       	sbrc	r0, 7
    487c:	90 58       	subi	r25, 0x80	; 128
    487e:	08 95       	ret
    4880:	3e f0       	brts	.+14     	; 0x4890 <pow+0x80>
    4882:	da ce       	rjmp	.-588    	; 0x4638 <__fp_nan>
    4884:	60 e0       	ldi	r22, 0x00	; 0
    4886:	70 e0       	ldi	r23, 0x00	; 0
    4888:	80 e8       	ldi	r24, 0x80	; 128
    488a:	9f e3       	ldi	r25, 0x3F	; 63
    488c:	08 95       	ret
    488e:	4f e7       	ldi	r20, 0x7F	; 127
    4890:	9f 77       	andi	r25, 0x7F	; 127
    4892:	5f 93       	push	r21
    4894:	4f 93       	push	r20
    4896:	3f 93       	push	r19
    4898:	2f 93       	push	r18
    489a:	9e d0       	rcall	.+316    	; 0x49d8 <log>
    489c:	2f 91       	pop	r18
    489e:	3f 91       	pop	r19
    48a0:	4f 91       	pop	r20
    48a2:	5f 91       	pop	r21
    48a4:	52 df       	rcall	.-348    	; 0x474a <__mulsf3>
    48a6:	05 c0       	rjmp	.+10     	; 0x48b2 <exp>
    48a8:	19 f4       	brne	.+6      	; 0x48b0 <pow+0xa0>
    48aa:	0e f0       	brts	.+2      	; 0x48ae <pow+0x9e>
    48ac:	bf ce       	rjmp	.-642    	; 0x462c <__fp_inf>
    48ae:	08 cf       	rjmp	.-496    	; 0x46c0 <__fp_zero>
    48b0:	c3 ce       	rjmp	.-634    	; 0x4638 <__fp_nan>

000048b2 <exp>:
    48b2:	ec de       	rcall	.-552    	; 0x468c <__fp_splitA>
    48b4:	c8 f3       	brcs	.-14     	; 0x48a8 <pow+0x98>
    48b6:	96 38       	cpi	r25, 0x86	; 134
    48b8:	c0 f7       	brcc	.-16     	; 0x48aa <pow+0x9a>
    48ba:	07 f8       	bld	r0, 7
    48bc:	0f 92       	push	r0
    48be:	e8 94       	clt
    48c0:	2b e3       	ldi	r18, 0x3B	; 59
    48c2:	3a ea       	ldi	r19, 0xAA	; 170
    48c4:	48 eb       	ldi	r20, 0xB8	; 184
    48c6:	5f e7       	ldi	r21, 0x7F	; 127
    48c8:	4e df       	rcall	.-356    	; 0x4766 <__mulsf3_pse>
    48ca:	0f 92       	push	r0
    48cc:	0f 92       	push	r0
    48ce:	0f 92       	push	r0
    48d0:	4d b7       	in	r20, 0x3d	; 61
    48d2:	5e b7       	in	r21, 0x3e	; 62
    48d4:	0f 92       	push	r0
    48d6:	c0 d0       	rcall	.+384    	; 0x4a58 <modf>
    48d8:	e8 ec       	ldi	r30, 0xC8	; 200
    48da:	f0 e0       	ldi	r31, 0x00	; 0
    48dc:	16 d0       	rcall	.+44     	; 0x490a <__fp_powser>
    48de:	4f 91       	pop	r20
    48e0:	5f 91       	pop	r21
    48e2:	ef 91       	pop	r30
    48e4:	ff 91       	pop	r31
    48e6:	e5 95       	asr	r30
    48e8:	ee 1f       	adc	r30, r30
    48ea:	ff 1f       	adc	r31, r31
    48ec:	49 f0       	breq	.+18     	; 0x4900 <exp+0x4e>
    48ee:	fe 57       	subi	r31, 0x7E	; 126
    48f0:	e0 68       	ori	r30, 0x80	; 128
    48f2:	44 27       	eor	r20, r20
    48f4:	ee 0f       	add	r30, r30
    48f6:	44 1f       	adc	r20, r20
    48f8:	fa 95       	dec	r31
    48fa:	e1 f7       	brne	.-8      	; 0x48f4 <exp+0x42>
    48fc:	41 95       	neg	r20
    48fe:	55 0b       	sbc	r21, r21
    4900:	32 d0       	rcall	.+100    	; 0x4966 <ldexp>
    4902:	0f 90       	pop	r0
    4904:	07 fe       	sbrs	r0, 7
    4906:	26 c0       	rjmp	.+76     	; 0x4954 <inverse>
    4908:	08 95       	ret

0000490a <__fp_powser>:
    490a:	df 93       	push	r29
    490c:	cf 93       	push	r28
    490e:	1f 93       	push	r17
    4910:	0f 93       	push	r16
    4912:	ff 92       	push	r15
    4914:	ef 92       	push	r14
    4916:	df 92       	push	r13
    4918:	7b 01       	movw	r14, r22
    491a:	8c 01       	movw	r16, r24
    491c:	68 94       	set
    491e:	05 c0       	rjmp	.+10     	; 0x492a <__fp_powser+0x20>
    4920:	da 2e       	mov	r13, r26
    4922:	ef 01       	movw	r28, r30
    4924:	1e df       	rcall	.-452    	; 0x4762 <__mulsf3x>
    4926:	fe 01       	movw	r30, r28
    4928:	e8 94       	clt
    492a:	a5 91       	lpm	r26, Z+
    492c:	25 91       	lpm	r18, Z+
    492e:	35 91       	lpm	r19, Z+
    4930:	45 91       	lpm	r20, Z+
    4932:	55 91       	lpm	r21, Z+
    4934:	ae f3       	brts	.-22     	; 0x4920 <__fp_powser+0x16>
    4936:	ef 01       	movw	r28, r30
    4938:	28 dd       	rcall	.-1456   	; 0x438a <__addsf3x>
    493a:	fe 01       	movw	r30, r28
    493c:	97 01       	movw	r18, r14
    493e:	a8 01       	movw	r20, r16
    4940:	da 94       	dec	r13
    4942:	79 f7       	brne	.-34     	; 0x4922 <__fp_powser+0x18>
    4944:	df 90       	pop	r13
    4946:	ef 90       	pop	r14
    4948:	ff 90       	pop	r15
    494a:	0f 91       	pop	r16
    494c:	1f 91       	pop	r17
    494e:	cf 91       	pop	r28
    4950:	df 91       	pop	r29
    4952:	08 95       	ret

00004954 <inverse>:
    4954:	9b 01       	movw	r18, r22
    4956:	ac 01       	movw	r20, r24
    4958:	60 e0       	ldi	r22, 0x00	; 0
    495a:	70 e0       	ldi	r23, 0x00	; 0
    495c:	80 e8       	ldi	r24, 0x80	; 128
    495e:	9f e3       	ldi	r25, 0x3F	; 63
    4960:	6b cd       	rjmp	.-1322   	; 0x4438 <__divsf3>
    4962:	64 ce       	rjmp	.-824    	; 0x462c <__fp_inf>
    4964:	ac c0       	rjmp	.+344    	; 0x4abe <__fp_mpack>

00004966 <ldexp>:
    4966:	92 de       	rcall	.-732    	; 0x468c <__fp_splitA>
    4968:	e8 f3       	brcs	.-6      	; 0x4964 <inverse+0x10>
    496a:	99 23       	and	r25, r25
    496c:	d9 f3       	breq	.-10     	; 0x4964 <inverse+0x10>
    496e:	94 0f       	add	r25, r20
    4970:	51 1d       	adc	r21, r1
    4972:	bb f3       	brvs	.-18     	; 0x4962 <inverse+0xe>
    4974:	91 50       	subi	r25, 0x01	; 1
    4976:	50 40       	sbci	r21, 0x00	; 0
    4978:	94 f0       	brlt	.+36     	; 0x499e <ldexp+0x38>
    497a:	59 f0       	breq	.+22     	; 0x4992 <ldexp+0x2c>
    497c:	88 23       	and	r24, r24
    497e:	32 f0       	brmi	.+12     	; 0x498c <ldexp+0x26>
    4980:	66 0f       	add	r22, r22
    4982:	77 1f       	adc	r23, r23
    4984:	88 1f       	adc	r24, r24
    4986:	91 50       	subi	r25, 0x01	; 1
    4988:	50 40       	sbci	r21, 0x00	; 0
    498a:	c1 f7       	brne	.-16     	; 0x497c <ldexp+0x16>
    498c:	9e 3f       	cpi	r25, 0xFE	; 254
    498e:	51 05       	cpc	r21, r1
    4990:	44 f7       	brge	.-48     	; 0x4962 <inverse+0xe>
    4992:	88 0f       	add	r24, r24
    4994:	91 1d       	adc	r25, r1
    4996:	96 95       	lsr	r25
    4998:	87 95       	ror	r24
    499a:	97 f9       	bld	r25, 7
    499c:	08 95       	ret
    499e:	5f 3f       	cpi	r21, 0xFF	; 255
    49a0:	ac f0       	brlt	.+42     	; 0x49cc <ldexp+0x66>
    49a2:	98 3e       	cpi	r25, 0xE8	; 232
    49a4:	9c f0       	brlt	.+38     	; 0x49cc <ldexp+0x66>
    49a6:	bb 27       	eor	r27, r27
    49a8:	86 95       	lsr	r24
    49aa:	77 95       	ror	r23
    49ac:	67 95       	ror	r22
    49ae:	b7 95       	ror	r27
    49b0:	08 f4       	brcc	.+2      	; 0x49b4 <ldexp+0x4e>
    49b2:	b1 60       	ori	r27, 0x01	; 1
    49b4:	93 95       	inc	r25
    49b6:	c1 f7       	brne	.-16     	; 0x49a8 <ldexp+0x42>
    49b8:	bb 0f       	add	r27, r27
    49ba:	58 f7       	brcc	.-42     	; 0x4992 <ldexp+0x2c>
    49bc:	11 f4       	brne	.+4      	; 0x49c2 <ldexp+0x5c>
    49be:	60 ff       	sbrs	r22, 0
    49c0:	e8 cf       	rjmp	.-48     	; 0x4992 <ldexp+0x2c>
    49c2:	6f 5f       	subi	r22, 0xFF	; 255
    49c4:	7f 4f       	sbci	r23, 0xFF	; 255
    49c6:	8f 4f       	sbci	r24, 0xFF	; 255
    49c8:	9f 4f       	sbci	r25, 0xFF	; 255
    49ca:	e3 cf       	rjmp	.-58     	; 0x4992 <ldexp+0x2c>
    49cc:	7a ce       	rjmp	.-780    	; 0x46c2 <__fp_szero>
    49ce:	0e f0       	brts	.+2      	; 0x49d2 <ldexp+0x6c>
    49d0:	76 c0       	rjmp	.+236    	; 0x4abe <__fp_mpack>
    49d2:	32 ce       	rjmp	.-924    	; 0x4638 <__fp_nan>
    49d4:	68 94       	set
    49d6:	2a ce       	rjmp	.-940    	; 0x462c <__fp_inf>

000049d8 <log>:
    49d8:	59 de       	rcall	.-846    	; 0x468c <__fp_splitA>
    49da:	c8 f3       	brcs	.-14     	; 0x49ce <ldexp+0x68>
    49dc:	99 23       	and	r25, r25
    49de:	d1 f3       	breq	.-12     	; 0x49d4 <ldexp+0x6e>
    49e0:	c6 f3       	brts	.-16     	; 0x49d2 <ldexp+0x6c>
    49e2:	df 93       	push	r29
    49e4:	cf 93       	push	r28
    49e6:	1f 93       	push	r17
    49e8:	0f 93       	push	r16
    49ea:	ff 92       	push	r15
    49ec:	c9 2f       	mov	r28, r25
    49ee:	dd 27       	eor	r29, r29
    49f0:	88 23       	and	r24, r24
    49f2:	2a f0       	brmi	.+10     	; 0x49fe <log+0x26>
    49f4:	21 97       	sbiw	r28, 0x01	; 1
    49f6:	66 0f       	add	r22, r22
    49f8:	77 1f       	adc	r23, r23
    49fa:	88 1f       	adc	r24, r24
    49fc:	da f7       	brpl	.-10     	; 0x49f4 <log+0x1c>
    49fe:	20 e0       	ldi	r18, 0x00	; 0
    4a00:	30 e0       	ldi	r19, 0x00	; 0
    4a02:	40 e8       	ldi	r20, 0x80	; 128
    4a04:	5f eb       	ldi	r21, 0xBF	; 191
    4a06:	9f e3       	ldi	r25, 0x3F	; 63
    4a08:	88 39       	cpi	r24, 0x98	; 152
    4a0a:	20 f0       	brcs	.+8      	; 0x4a14 <log+0x3c>
    4a0c:	80 3e       	cpi	r24, 0xE0	; 224
    4a0e:	30 f0       	brcs	.+12     	; 0x4a1c <log+0x44>
    4a10:	21 96       	adiw	r28, 0x01	; 1
    4a12:	8f 77       	andi	r24, 0x7F	; 127
    4a14:	a9 dc       	rcall	.-1710   	; 0x4368 <__addsf3>
    4a16:	e0 ef       	ldi	r30, 0xF0	; 240
    4a18:	f0 e0       	ldi	r31, 0x00	; 0
    4a1a:	03 c0       	rjmp	.+6      	; 0x4a22 <log+0x4a>
    4a1c:	a5 dc       	rcall	.-1718   	; 0x4368 <__addsf3>
    4a1e:	ed e1       	ldi	r30, 0x1D	; 29
    4a20:	f1 e0       	ldi	r31, 0x01	; 1
    4a22:	73 df       	rcall	.-282    	; 0x490a <__fp_powser>
    4a24:	8b 01       	movw	r16, r22
    4a26:	be 01       	movw	r22, r28
    4a28:	ec 01       	movw	r28, r24
    4a2a:	fb 2e       	mov	r15, r27
    4a2c:	6f 57       	subi	r22, 0x7F	; 127
    4a2e:	71 09       	sbc	r23, r1
    4a30:	75 95       	asr	r23
    4a32:	77 1f       	adc	r23, r23
    4a34:	88 0b       	sbc	r24, r24
    4a36:	99 0b       	sbc	r25, r25
    4a38:	9a dd       	rcall	.-1228   	; 0x456e <__floatsisf>
    4a3a:	28 e1       	ldi	r18, 0x18	; 24
    4a3c:	32 e7       	ldi	r19, 0x72	; 114
    4a3e:	41 e3       	ldi	r20, 0x31	; 49
    4a40:	5f e3       	ldi	r21, 0x3F	; 63
    4a42:	8f de       	rcall	.-738    	; 0x4762 <__mulsf3x>
    4a44:	af 2d       	mov	r26, r15
    4a46:	98 01       	movw	r18, r16
    4a48:	ae 01       	movw	r20, r28
    4a4a:	ff 90       	pop	r15
    4a4c:	0f 91       	pop	r16
    4a4e:	1f 91       	pop	r17
    4a50:	cf 91       	pop	r28
    4a52:	df 91       	pop	r29
    4a54:	9a dc       	rcall	.-1740   	; 0x438a <__addsf3x>
    4a56:	01 ce       	rjmp	.-1022   	; 0x465a <__fp_round>

00004a58 <modf>:
    4a58:	fa 01       	movw	r30, r20
    4a5a:	dc 01       	movw	r26, r24
    4a5c:	aa 0f       	add	r26, r26
    4a5e:	bb 1f       	adc	r27, r27
    4a60:	9b 01       	movw	r18, r22
    4a62:	ac 01       	movw	r20, r24
    4a64:	bf 57       	subi	r27, 0x7F	; 127
    4a66:	28 f4       	brcc	.+10     	; 0x4a72 <modf+0x1a>
    4a68:	22 27       	eor	r18, r18
    4a6a:	33 27       	eor	r19, r19
    4a6c:	44 27       	eor	r20, r20
    4a6e:	50 78       	andi	r21, 0x80	; 128
    4a70:	1f c0       	rjmp	.+62     	; 0x4ab0 <modf+0x58>
    4a72:	b7 51       	subi	r27, 0x17	; 23
    4a74:	88 f4       	brcc	.+34     	; 0x4a98 <modf+0x40>
    4a76:	ab 2f       	mov	r26, r27
    4a78:	00 24       	eor	r0, r0
    4a7a:	46 95       	lsr	r20
    4a7c:	37 95       	ror	r19
    4a7e:	27 95       	ror	r18
    4a80:	01 1c       	adc	r0, r1
    4a82:	a3 95       	inc	r26
    4a84:	d2 f3       	brmi	.-12     	; 0x4a7a <modf+0x22>
    4a86:	00 20       	and	r0, r0
    4a88:	69 f0       	breq	.+26     	; 0x4aa4 <modf+0x4c>
    4a8a:	22 0f       	add	r18, r18
    4a8c:	33 1f       	adc	r19, r19
    4a8e:	44 1f       	adc	r20, r20
    4a90:	b3 95       	inc	r27
    4a92:	da f3       	brmi	.-10     	; 0x4a8a <modf+0x32>
    4a94:	0d d0       	rcall	.+26     	; 0x4ab0 <modf+0x58>
    4a96:	67 cc       	rjmp	.-1842   	; 0x4366 <__subsf3>
    4a98:	61 30       	cpi	r22, 0x01	; 1
    4a9a:	71 05       	cpc	r23, r1
    4a9c:	a0 e8       	ldi	r26, 0x80	; 128
    4a9e:	8a 07       	cpc	r24, r26
    4aa0:	b9 46       	sbci	r27, 0x69	; 105
    4aa2:	30 f4       	brcc	.+12     	; 0x4ab0 <modf+0x58>
    4aa4:	9b 01       	movw	r18, r22
    4aa6:	ac 01       	movw	r20, r24
    4aa8:	66 27       	eor	r22, r22
    4aaa:	77 27       	eor	r23, r23
    4aac:	88 27       	eor	r24, r24
    4aae:	90 78       	andi	r25, 0x80	; 128
    4ab0:	30 96       	adiw	r30, 0x00	; 0
    4ab2:	21 f0       	breq	.+8      	; 0x4abc <modf+0x64>
    4ab4:	20 83       	st	Z, r18
    4ab6:	31 83       	std	Z+1, r19	; 0x01
    4ab8:	42 83       	std	Z+2, r20	; 0x02
    4aba:	53 83       	std	Z+3, r21	; 0x03
    4abc:	08 95       	ret

00004abe <__fp_mpack>:
    4abe:	9f 3f       	cpi	r25, 0xFF	; 255
    4ac0:	31 f0       	breq	.+12     	; 0x4ace <__fp_mpack_finite+0xc>

00004ac2 <__fp_mpack_finite>:
    4ac2:	91 50       	subi	r25, 0x01	; 1
    4ac4:	20 f4       	brcc	.+8      	; 0x4ace <__fp_mpack_finite+0xc>
    4ac6:	87 95       	ror	r24
    4ac8:	77 95       	ror	r23
    4aca:	67 95       	ror	r22
    4acc:	b7 95       	ror	r27
    4ace:	88 0f       	add	r24, r24
    4ad0:	91 1d       	adc	r25, r1
    4ad2:	96 95       	lsr	r25
    4ad4:	87 95       	ror	r24
    4ad6:	97 f9       	bld	r25, 7
    4ad8:	08 95       	ret

00004ada <vfprintf>:
    4ada:	a1 e1       	ldi	r26, 0x11	; 17
    4adc:	b0 e0       	ldi	r27, 0x00	; 0
    4ade:	e2 e7       	ldi	r30, 0x72	; 114
    4ae0:	f5 e2       	ldi	r31, 0x25	; 37
    4ae2:	b7 c3       	rjmp	.+1902   	; 0x5252 <__prologue_saves__>
    4ae4:	3c 01       	movw	r6, r24
    4ae6:	7f 87       	std	Y+15, r23	; 0x0f
    4ae8:	6e 87       	std	Y+14, r22	; 0x0e
    4aea:	6a 01       	movw	r12, r20
    4aec:	fc 01       	movw	r30, r24
    4aee:	17 82       	std	Z+7, r1	; 0x07
    4af0:	16 82       	std	Z+6, r1	; 0x06
    4af2:	83 81       	ldd	r24, Z+3	; 0x03
    4af4:	81 fd       	sbrc	r24, 1
    4af6:	03 c0       	rjmp	.+6      	; 0x4afe <vfprintf+0x24>
    4af8:	6f ef       	ldi	r22, 0xFF	; 255
    4afa:	7f ef       	ldi	r23, 0xFF	; 255
    4afc:	52 c3       	rjmp	.+1700   	; 0x51a2 <vfprintf+0x6c8>
    4afe:	9e 01       	movw	r18, r28
    4b00:	2f 5f       	subi	r18, 0xFF	; 255
    4b02:	3f 4f       	sbci	r19, 0xFF	; 255
    4b04:	39 8b       	std	Y+17, r19	; 0x11
    4b06:	28 8b       	std	Y+16, r18	; 0x10
    4b08:	f3 01       	movw	r30, r6
    4b0a:	23 81       	ldd	r18, Z+3	; 0x03
    4b0c:	ee 85       	ldd	r30, Y+14	; 0x0e
    4b0e:	ff 85       	ldd	r31, Y+15	; 0x0f
    4b10:	23 fd       	sbrc	r18, 3
    4b12:	85 91       	lpm	r24, Z+
    4b14:	23 ff       	sbrs	r18, 3
    4b16:	81 91       	ld	r24, Z+
    4b18:	ff 87       	std	Y+15, r31	; 0x0f
    4b1a:	ee 87       	std	Y+14, r30	; 0x0e
    4b1c:	88 23       	and	r24, r24
    4b1e:	09 f4       	brne	.+2      	; 0x4b22 <vfprintf+0x48>
    4b20:	3d c3       	rjmp	.+1658   	; 0x519c <vfprintf+0x6c2>
    4b22:	85 32       	cpi	r24, 0x25	; 37
    4b24:	51 f4       	brne	.+20     	; 0x4b3a <vfprintf+0x60>
    4b26:	ee 85       	ldd	r30, Y+14	; 0x0e
    4b28:	ff 85       	ldd	r31, Y+15	; 0x0f
    4b2a:	23 fd       	sbrc	r18, 3
    4b2c:	85 91       	lpm	r24, Z+
    4b2e:	23 ff       	sbrs	r18, 3
    4b30:	81 91       	ld	r24, Z+
    4b32:	ff 87       	std	Y+15, r31	; 0x0f
    4b34:	ee 87       	std	Y+14, r30	; 0x0e
    4b36:	85 32       	cpi	r24, 0x25	; 37
    4b38:	21 f4       	brne	.+8      	; 0x4b42 <vfprintf+0x68>
    4b3a:	90 e0       	ldi	r25, 0x00	; 0
    4b3c:	b3 01       	movw	r22, r6
    4b3e:	20 d6       	rcall	.+3136   	; 0x5780 <fputc>
    4b40:	e3 cf       	rjmp	.-58     	; 0x4b08 <vfprintf+0x2e>
    4b42:	98 2f       	mov	r25, r24
    4b44:	10 e0       	ldi	r17, 0x00	; 0
    4b46:	88 24       	eor	r8, r8
    4b48:	99 24       	eor	r9, r9
    4b4a:	10 32       	cpi	r17, 0x20	; 32
    4b4c:	b0 f4       	brcc	.+44     	; 0x4b7a <vfprintf+0xa0>
    4b4e:	9b 32       	cpi	r25, 0x2B	; 43
    4b50:	69 f0       	breq	.+26     	; 0x4b6c <vfprintf+0x92>
    4b52:	9c 32       	cpi	r25, 0x2C	; 44
    4b54:	28 f4       	brcc	.+10     	; 0x4b60 <vfprintf+0x86>
    4b56:	90 32       	cpi	r25, 0x20	; 32
    4b58:	51 f0       	breq	.+20     	; 0x4b6e <vfprintf+0x94>
    4b5a:	93 32       	cpi	r25, 0x23	; 35
    4b5c:	71 f4       	brne	.+28     	; 0x4b7a <vfprintf+0xa0>
    4b5e:	0b c0       	rjmp	.+22     	; 0x4b76 <vfprintf+0x9c>
    4b60:	9d 32       	cpi	r25, 0x2D	; 45
    4b62:	39 f0       	breq	.+14     	; 0x4b72 <vfprintf+0x98>
    4b64:	90 33       	cpi	r25, 0x30	; 48
    4b66:	49 f4       	brne	.+18     	; 0x4b7a <vfprintf+0xa0>
    4b68:	11 60       	ori	r17, 0x01	; 1
    4b6a:	28 c0       	rjmp	.+80     	; 0x4bbc <vfprintf+0xe2>
    4b6c:	12 60       	ori	r17, 0x02	; 2
    4b6e:	14 60       	ori	r17, 0x04	; 4
    4b70:	25 c0       	rjmp	.+74     	; 0x4bbc <vfprintf+0xe2>
    4b72:	18 60       	ori	r17, 0x08	; 8
    4b74:	23 c0       	rjmp	.+70     	; 0x4bbc <vfprintf+0xe2>
    4b76:	10 61       	ori	r17, 0x10	; 16
    4b78:	21 c0       	rjmp	.+66     	; 0x4bbc <vfprintf+0xe2>
    4b7a:	17 fd       	sbrc	r17, 7
    4b7c:	2a c0       	rjmp	.+84     	; 0x4bd2 <vfprintf+0xf8>
    4b7e:	89 2f       	mov	r24, r25
    4b80:	80 53       	subi	r24, 0x30	; 48
    4b82:	8a 30       	cpi	r24, 0x0A	; 10
    4b84:	78 f4       	brcc	.+30     	; 0x4ba4 <vfprintf+0xca>
    4b86:	16 ff       	sbrs	r17, 6
    4b88:	06 c0       	rjmp	.+12     	; 0x4b96 <vfprintf+0xbc>
    4b8a:	fa e0       	ldi	r31, 0x0A	; 10
    4b8c:	9f 9e       	mul	r9, r31
    4b8e:	90 2c       	mov	r9, r0
    4b90:	11 24       	eor	r1, r1
    4b92:	98 0e       	add	r9, r24
    4b94:	13 c0       	rjmp	.+38     	; 0x4bbc <vfprintf+0xe2>
    4b96:	3a e0       	ldi	r19, 0x0A	; 10
    4b98:	83 9e       	mul	r8, r19
    4b9a:	80 2c       	mov	r8, r0
    4b9c:	11 24       	eor	r1, r1
    4b9e:	88 0e       	add	r8, r24
    4ba0:	10 62       	ori	r17, 0x20	; 32
    4ba2:	0c c0       	rjmp	.+24     	; 0x4bbc <vfprintf+0xe2>
    4ba4:	9e 32       	cpi	r25, 0x2E	; 46
    4ba6:	21 f4       	brne	.+8      	; 0x4bb0 <vfprintf+0xd6>
    4ba8:	16 fd       	sbrc	r17, 6
    4baa:	f8 c2       	rjmp	.+1520   	; 0x519c <vfprintf+0x6c2>
    4bac:	10 64       	ori	r17, 0x40	; 64
    4bae:	06 c0       	rjmp	.+12     	; 0x4bbc <vfprintf+0xe2>
    4bb0:	9c 36       	cpi	r25, 0x6C	; 108
    4bb2:	11 f4       	brne	.+4      	; 0x4bb8 <vfprintf+0xde>
    4bb4:	10 68       	ori	r17, 0x80	; 128
    4bb6:	02 c0       	rjmp	.+4      	; 0x4bbc <vfprintf+0xe2>
    4bb8:	98 36       	cpi	r25, 0x68	; 104
    4bba:	59 f4       	brne	.+22     	; 0x4bd2 <vfprintf+0xf8>
    4bbc:	ee 85       	ldd	r30, Y+14	; 0x0e
    4bbe:	ff 85       	ldd	r31, Y+15	; 0x0f
    4bc0:	23 fd       	sbrc	r18, 3
    4bc2:	95 91       	lpm	r25, Z+
    4bc4:	23 ff       	sbrs	r18, 3
    4bc6:	91 91       	ld	r25, Z+
    4bc8:	ff 87       	std	Y+15, r31	; 0x0f
    4bca:	ee 87       	std	Y+14, r30	; 0x0e
    4bcc:	99 23       	and	r25, r25
    4bce:	09 f0       	breq	.+2      	; 0x4bd2 <vfprintf+0xf8>
    4bd0:	bc cf       	rjmp	.-136    	; 0x4b4a <vfprintf+0x70>
    4bd2:	89 2f       	mov	r24, r25
    4bd4:	85 54       	subi	r24, 0x45	; 69
    4bd6:	83 30       	cpi	r24, 0x03	; 3
    4bd8:	20 f4       	brcc	.+8      	; 0x4be2 <vfprintf+0x108>
    4bda:	81 2f       	mov	r24, r17
    4bdc:	80 61       	ori	r24, 0x10	; 16
    4bde:	90 5e       	subi	r25, 0xE0	; 224
    4be0:	07 c0       	rjmp	.+14     	; 0x4bf0 <vfprintf+0x116>
    4be2:	89 2f       	mov	r24, r25
    4be4:	85 56       	subi	r24, 0x65	; 101
    4be6:	83 30       	cpi	r24, 0x03	; 3
    4be8:	08 f0       	brcs	.+2      	; 0x4bec <vfprintf+0x112>
    4bea:	8f c1       	rjmp	.+798    	; 0x4f0a <vfprintf+0x430>
    4bec:	81 2f       	mov	r24, r17
    4bee:	8f 7e       	andi	r24, 0xEF	; 239
    4bf0:	86 fd       	sbrc	r24, 6
    4bf2:	02 c0       	rjmp	.+4      	; 0x4bf8 <vfprintf+0x11e>
    4bf4:	76 e0       	ldi	r23, 0x06	; 6
    4bf6:	97 2e       	mov	r9, r23
    4bf8:	6f e3       	ldi	r22, 0x3F	; 63
    4bfa:	f6 2e       	mov	r15, r22
    4bfc:	f8 22       	and	r15, r24
    4bfe:	95 36       	cpi	r25, 0x65	; 101
    4c00:	19 f4       	brne	.+6      	; 0x4c08 <vfprintf+0x12e>
    4c02:	f0 e4       	ldi	r31, 0x40	; 64
    4c04:	ff 2a       	or	r15, r31
    4c06:	07 c0       	rjmp	.+14     	; 0x4c16 <vfprintf+0x13c>
    4c08:	96 36       	cpi	r25, 0x66	; 102
    4c0a:	19 f4       	brne	.+6      	; 0x4c12 <vfprintf+0x138>
    4c0c:	20 e8       	ldi	r18, 0x80	; 128
    4c0e:	f2 2a       	or	r15, r18
    4c10:	02 c0       	rjmp	.+4      	; 0x4c16 <vfprintf+0x13c>
    4c12:	91 10       	cpse	r9, r1
    4c14:	9a 94       	dec	r9
    4c16:	f7 fe       	sbrs	r15, 7
    4c18:	0a c0       	rjmp	.+20     	; 0x4c2e <vfprintf+0x154>
    4c1a:	3b e3       	ldi	r19, 0x3B	; 59
    4c1c:	39 15       	cp	r19, r9
    4c1e:	18 f4       	brcc	.+6      	; 0x4c26 <vfprintf+0x14c>
    4c20:	5c e3       	ldi	r21, 0x3C	; 60
    4c22:	b5 2e       	mov	r11, r21
    4c24:	02 c0       	rjmp	.+4      	; 0x4c2a <vfprintf+0x150>
    4c26:	b9 2c       	mov	r11, r9
    4c28:	b3 94       	inc	r11
    4c2a:	27 e0       	ldi	r18, 0x07	; 7
    4c2c:	09 c0       	rjmp	.+18     	; 0x4c40 <vfprintf+0x166>
    4c2e:	47 e0       	ldi	r20, 0x07	; 7
    4c30:	49 15       	cp	r20, r9
    4c32:	20 f4       	brcc	.+8      	; 0x4c3c <vfprintf+0x162>
    4c34:	bb 24       	eor	r11, r11
    4c36:	47 e0       	ldi	r20, 0x07	; 7
    4c38:	94 2e       	mov	r9, r20
    4c3a:	f7 cf       	rjmp	.-18     	; 0x4c2a <vfprintf+0x150>
    4c3c:	29 2d       	mov	r18, r9
    4c3e:	bb 24       	eor	r11, r11
    4c40:	c6 01       	movw	r24, r12
    4c42:	04 96       	adiw	r24, 0x04	; 4
    4c44:	9d 87       	std	Y+13, r25	; 0x0d
    4c46:	8c 87       	std	Y+12, r24	; 0x0c
    4c48:	f6 01       	movw	r30, r12
    4c4a:	60 81       	ld	r22, Z
    4c4c:	71 81       	ldd	r23, Z+1	; 0x01
    4c4e:	82 81       	ldd	r24, Z+2	; 0x02
    4c50:	93 81       	ldd	r25, Z+3	; 0x03
    4c52:	ae 01       	movw	r20, r28
    4c54:	4f 5f       	subi	r20, 0xFF	; 255
    4c56:	5f 4f       	sbci	r21, 0xFF	; 255
    4c58:	0b 2d       	mov	r16, r11
    4c5a:	a4 d4       	rcall	.+2376   	; 0x55a4 <__ftoa_engine>
    4c5c:	6c 01       	movw	r12, r24
    4c5e:	09 81       	ldd	r16, Y+1	; 0x01
    4c60:	20 2e       	mov	r2, r16
    4c62:	33 24       	eor	r3, r3
    4c64:	00 ff       	sbrs	r16, 0
    4c66:	04 c0       	rjmp	.+8      	; 0x4c70 <vfprintf+0x196>
    4c68:	03 fd       	sbrc	r16, 3
    4c6a:	02 c0       	rjmp	.+4      	; 0x4c70 <vfprintf+0x196>
    4c6c:	1d e2       	ldi	r17, 0x2D	; 45
    4c6e:	09 c0       	rjmp	.+18     	; 0x4c82 <vfprintf+0x1a8>
    4c70:	f1 fe       	sbrs	r15, 1
    4c72:	02 c0       	rjmp	.+4      	; 0x4c78 <vfprintf+0x19e>
    4c74:	1b e2       	ldi	r17, 0x2B	; 43
    4c76:	05 c0       	rjmp	.+10     	; 0x4c82 <vfprintf+0x1a8>
    4c78:	f2 fc       	sbrc	r15, 2
    4c7a:	02 c0       	rjmp	.+4      	; 0x4c80 <vfprintf+0x1a6>
    4c7c:	10 e0       	ldi	r17, 0x00	; 0
    4c7e:	01 c0       	rjmp	.+2      	; 0x4c82 <vfprintf+0x1a8>
    4c80:	10 e2       	ldi	r17, 0x20	; 32
    4c82:	c1 01       	movw	r24, r2
    4c84:	8c 70       	andi	r24, 0x0C	; 12
    4c86:	90 70       	andi	r25, 0x00	; 0
    4c88:	89 2b       	or	r24, r25
    4c8a:	a1 f1       	breq	.+104    	; 0x4cf4 <vfprintf+0x21a>
    4c8c:	11 23       	and	r17, r17
    4c8e:	11 f4       	brne	.+4      	; 0x4c94 <vfprintf+0x1ba>
    4c90:	83 e0       	ldi	r24, 0x03	; 3
    4c92:	01 c0       	rjmp	.+2      	; 0x4c96 <vfprintf+0x1bc>
    4c94:	84 e0       	ldi	r24, 0x04	; 4
    4c96:	88 15       	cp	r24, r8
    4c98:	10 f0       	brcs	.+4      	; 0x4c9e <vfprintf+0x1c4>
    4c9a:	88 24       	eor	r8, r8
    4c9c:	09 c0       	rjmp	.+18     	; 0x4cb0 <vfprintf+0x1d6>
    4c9e:	88 1a       	sub	r8, r24
    4ca0:	f3 fc       	sbrc	r15, 3
    4ca2:	06 c0       	rjmp	.+12     	; 0x4cb0 <vfprintf+0x1d6>
    4ca4:	80 e2       	ldi	r24, 0x20	; 32
    4ca6:	90 e0       	ldi	r25, 0x00	; 0
    4ca8:	b3 01       	movw	r22, r6
    4caa:	6a d5       	rcall	.+2772   	; 0x5780 <fputc>
    4cac:	8a 94       	dec	r8
    4cae:	d1 f7       	brne	.-12     	; 0x4ca4 <vfprintf+0x1ca>
    4cb0:	11 23       	and	r17, r17
    4cb2:	21 f0       	breq	.+8      	; 0x4cbc <vfprintf+0x1e2>
    4cb4:	81 2f       	mov	r24, r17
    4cb6:	90 e0       	ldi	r25, 0x00	; 0
    4cb8:	b3 01       	movw	r22, r6
    4cba:	62 d5       	rcall	.+2756   	; 0x5780 <fputc>
    4cbc:	23 fe       	sbrs	r2, 3
    4cbe:	03 c0       	rjmp	.+6      	; 0x4cc6 <vfprintf+0x1ec>
    4cc0:	0f e5       	ldi	r16, 0x5F	; 95
    4cc2:	15 e0       	ldi	r17, 0x05	; 5
    4cc4:	0d c0       	rjmp	.+26     	; 0x4ce0 <vfprintf+0x206>
    4cc6:	03 e6       	ldi	r16, 0x63	; 99
    4cc8:	15 e0       	ldi	r17, 0x05	; 5
    4cca:	0a c0       	rjmp	.+20     	; 0x4ce0 <vfprintf+0x206>
    4ccc:	e1 14       	cp	r14, r1
    4cce:	f1 04       	cpc	r15, r1
    4cd0:	09 f0       	breq	.+2      	; 0x4cd4 <vfprintf+0x1fa>
    4cd2:	80 52       	subi	r24, 0x20	; 32
    4cd4:	90 e0       	ldi	r25, 0x00	; 0
    4cd6:	b3 01       	movw	r22, r6
    4cd8:	53 d5       	rcall	.+2726   	; 0x5780 <fputc>
    4cda:	0f 5f       	subi	r16, 0xFF	; 255
    4cdc:	1f 4f       	sbci	r17, 0xFF	; 255
    4cde:	05 c0       	rjmp	.+10     	; 0x4cea <vfprintf+0x210>
    4ce0:	ef 2c       	mov	r14, r15
    4ce2:	ff 24       	eor	r15, r15
    4ce4:	f0 e1       	ldi	r31, 0x10	; 16
    4ce6:	ef 22       	and	r14, r31
    4ce8:	ff 24       	eor	r15, r15
    4cea:	f8 01       	movw	r30, r16
    4cec:	84 91       	lpm	r24, Z+
    4cee:	88 23       	and	r24, r24
    4cf0:	69 f7       	brne	.-38     	; 0x4ccc <vfprintf+0x1f2>
    4cf2:	08 c1       	rjmp	.+528    	; 0x4f04 <vfprintf+0x42a>
    4cf4:	f7 fe       	sbrs	r15, 7
    4cf6:	12 c0       	rjmp	.+36     	; 0x4d1c <vfprintf+0x242>
    4cf8:	bc 0c       	add	r11, r12
    4cfa:	24 fe       	sbrs	r2, 4
    4cfc:	04 c0       	rjmp	.+8      	; 0x4d06 <vfprintf+0x22c>
    4cfe:	8a 81       	ldd	r24, Y+2	; 0x02
    4d00:	81 33       	cpi	r24, 0x31	; 49
    4d02:	09 f4       	brne	.+2      	; 0x4d06 <vfprintf+0x22c>
    4d04:	ba 94       	dec	r11
    4d06:	1b 14       	cp	r1, r11
    4d08:	1c f0       	brlt	.+6      	; 0x4d10 <vfprintf+0x236>
    4d0a:	bb 24       	eor	r11, r11
    4d0c:	b3 94       	inc	r11
    4d0e:	2d c0       	rjmp	.+90     	; 0x4d6a <vfprintf+0x290>
    4d10:	f8 e0       	ldi	r31, 0x08	; 8
    4d12:	fb 15       	cp	r31, r11
    4d14:	50 f5       	brcc	.+84     	; 0x4d6a <vfprintf+0x290>
    4d16:	38 e0       	ldi	r19, 0x08	; 8
    4d18:	b3 2e       	mov	r11, r19
    4d1a:	27 c0       	rjmp	.+78     	; 0x4d6a <vfprintf+0x290>
    4d1c:	f6 fc       	sbrc	r15, 6
    4d1e:	25 c0       	rjmp	.+74     	; 0x4d6a <vfprintf+0x290>
    4d20:	89 2d       	mov	r24, r9
    4d22:	90 e0       	ldi	r25, 0x00	; 0
    4d24:	8c 15       	cp	r24, r12
    4d26:	9d 05       	cpc	r25, r13
    4d28:	4c f0       	brlt	.+18     	; 0x4d3c <vfprintf+0x262>
    4d2a:	2c ef       	ldi	r18, 0xFC	; 252
    4d2c:	c2 16       	cp	r12, r18
    4d2e:	2f ef       	ldi	r18, 0xFF	; 255
    4d30:	d2 06       	cpc	r13, r18
    4d32:	24 f0       	brlt	.+8      	; 0x4d3c <vfprintf+0x262>
    4d34:	30 e8       	ldi	r19, 0x80	; 128
    4d36:	f3 2a       	or	r15, r19
    4d38:	01 c0       	rjmp	.+2      	; 0x4d3c <vfprintf+0x262>
    4d3a:	9a 94       	dec	r9
    4d3c:	99 20       	and	r9, r9
    4d3e:	49 f0       	breq	.+18     	; 0x4d52 <vfprintf+0x278>
    4d40:	e2 e0       	ldi	r30, 0x02	; 2
    4d42:	f0 e0       	ldi	r31, 0x00	; 0
    4d44:	ec 0f       	add	r30, r28
    4d46:	fd 1f       	adc	r31, r29
    4d48:	e9 0d       	add	r30, r9
    4d4a:	f1 1d       	adc	r31, r1
    4d4c:	80 81       	ld	r24, Z
    4d4e:	80 33       	cpi	r24, 0x30	; 48
    4d50:	a1 f3       	breq	.-24     	; 0x4d3a <vfprintf+0x260>
    4d52:	f7 fe       	sbrs	r15, 7
    4d54:	0a c0       	rjmp	.+20     	; 0x4d6a <vfprintf+0x290>
    4d56:	b9 2c       	mov	r11, r9
    4d58:	b3 94       	inc	r11
    4d5a:	89 2d       	mov	r24, r9
    4d5c:	90 e0       	ldi	r25, 0x00	; 0
    4d5e:	c8 16       	cp	r12, r24
    4d60:	d9 06       	cpc	r13, r25
    4d62:	14 f0       	brlt	.+4      	; 0x4d68 <vfprintf+0x28e>
    4d64:	99 24       	eor	r9, r9
    4d66:	01 c0       	rjmp	.+2      	; 0x4d6a <vfprintf+0x290>
    4d68:	9c 18       	sub	r9, r12
    4d6a:	f7 fc       	sbrc	r15, 7
    4d6c:	03 c0       	rjmp	.+6      	; 0x4d74 <vfprintf+0x29a>
    4d6e:	25 e0       	ldi	r18, 0x05	; 5
    4d70:	30 e0       	ldi	r19, 0x00	; 0
    4d72:	09 c0       	rjmp	.+18     	; 0x4d86 <vfprintf+0x2ac>
    4d74:	1c 14       	cp	r1, r12
    4d76:	1d 04       	cpc	r1, r13
    4d78:	1c f0       	brlt	.+6      	; 0x4d80 <vfprintf+0x2a6>
    4d7a:	21 e0       	ldi	r18, 0x01	; 1
    4d7c:	30 e0       	ldi	r19, 0x00	; 0
    4d7e:	03 c0       	rjmp	.+6      	; 0x4d86 <vfprintf+0x2ac>
    4d80:	96 01       	movw	r18, r12
    4d82:	2f 5f       	subi	r18, 0xFF	; 255
    4d84:	3f 4f       	sbci	r19, 0xFF	; 255
    4d86:	11 23       	and	r17, r17
    4d88:	11 f0       	breq	.+4      	; 0x4d8e <vfprintf+0x2b4>
    4d8a:	2f 5f       	subi	r18, 0xFF	; 255
    4d8c:	3f 4f       	sbci	r19, 0xFF	; 255
    4d8e:	99 20       	and	r9, r9
    4d90:	29 f0       	breq	.+10     	; 0x4d9c <vfprintf+0x2c2>
    4d92:	89 2d       	mov	r24, r9
    4d94:	90 e0       	ldi	r25, 0x00	; 0
    4d96:	01 96       	adiw	r24, 0x01	; 1
    4d98:	28 0f       	add	r18, r24
    4d9a:	39 1f       	adc	r19, r25
    4d9c:	88 2d       	mov	r24, r8
    4d9e:	90 e0       	ldi	r25, 0x00	; 0
    4da0:	28 17       	cp	r18, r24
    4da2:	39 07       	cpc	r19, r25
    4da4:	14 f0       	brlt	.+4      	; 0x4daa <vfprintf+0x2d0>
    4da6:	88 24       	eor	r8, r8
    4da8:	01 c0       	rjmp	.+2      	; 0x4dac <vfprintf+0x2d2>
    4daa:	82 1a       	sub	r8, r18
    4dac:	4f 2c       	mov	r4, r15
    4dae:	55 24       	eor	r5, r5
    4db0:	c2 01       	movw	r24, r4
    4db2:	89 70       	andi	r24, 0x09	; 9
    4db4:	90 70       	andi	r25, 0x00	; 0
    4db6:	89 2b       	or	r24, r25
    4db8:	31 f0       	breq	.+12     	; 0x4dc6 <vfprintf+0x2ec>
    4dba:	07 c0       	rjmp	.+14     	; 0x4dca <vfprintf+0x2f0>
    4dbc:	80 e2       	ldi	r24, 0x20	; 32
    4dbe:	90 e0       	ldi	r25, 0x00	; 0
    4dc0:	b3 01       	movw	r22, r6
    4dc2:	de d4       	rcall	.+2492   	; 0x5780 <fputc>
    4dc4:	8a 94       	dec	r8
    4dc6:	88 20       	and	r8, r8
    4dc8:	c9 f7       	brne	.-14     	; 0x4dbc <vfprintf+0x2e2>
    4dca:	11 23       	and	r17, r17
    4dcc:	21 f0       	breq	.+8      	; 0x4dd6 <vfprintf+0x2fc>
    4dce:	81 2f       	mov	r24, r17
    4dd0:	90 e0       	ldi	r25, 0x00	; 0
    4dd2:	b3 01       	movw	r22, r6
    4dd4:	d5 d4       	rcall	.+2474   	; 0x5780 <fputc>
    4dd6:	43 fe       	sbrs	r4, 3
    4dd8:	06 c0       	rjmp	.+12     	; 0x4de6 <vfprintf+0x30c>
    4dda:	07 c0       	rjmp	.+14     	; 0x4dea <vfprintf+0x310>
    4ddc:	80 e3       	ldi	r24, 0x30	; 48
    4dde:	90 e0       	ldi	r25, 0x00	; 0
    4de0:	b3 01       	movw	r22, r6
    4de2:	ce d4       	rcall	.+2460   	; 0x5780 <fputc>
    4de4:	8a 94       	dec	r8
    4de6:	88 20       	and	r8, r8
    4de8:	c9 f7       	brne	.-14     	; 0x4ddc <vfprintf+0x302>
    4dea:	f7 fe       	sbrs	r15, 7
    4dec:	44 c0       	rjmp	.+136    	; 0x4e76 <vfprintf+0x39c>
    4dee:	86 01       	movw	r16, r12
    4df0:	d7 fe       	sbrs	r13, 7
    4df2:	02 c0       	rjmp	.+4      	; 0x4df8 <vfprintf+0x31e>
    4df4:	00 e0       	ldi	r16, 0x00	; 0
    4df6:	10 e0       	ldi	r17, 0x00	; 0
    4df8:	76 01       	movw	r14, r12
    4dfa:	08 94       	sec
    4dfc:	e1 1c       	adc	r14, r1
    4dfe:	f1 1c       	adc	r15, r1
    4e00:	e0 1a       	sub	r14, r16
    4e02:	f1 0a       	sbc	r15, r17
    4e04:	41 e0       	ldi	r20, 0x01	; 1
    4e06:	50 e0       	ldi	r21, 0x00	; 0
    4e08:	4c 0f       	add	r20, r28
    4e0a:	5d 1f       	adc	r21, r29
    4e0c:	e4 0e       	add	r14, r20
    4e0e:	f5 1e       	adc	r15, r21
    4e10:	26 01       	movw	r4, r12
    4e12:	4b 18       	sub	r4, r11
    4e14:	51 08       	sbc	r5, r1
    4e16:	89 2d       	mov	r24, r9
    4e18:	90 e0       	ldi	r25, 0x00	; 0
    4e1a:	aa 24       	eor	r10, r10
    4e1c:	bb 24       	eor	r11, r11
    4e1e:	a8 1a       	sub	r10, r24
    4e20:	b9 0a       	sbc	r11, r25
    4e22:	5f ef       	ldi	r21, 0xFF	; 255
    4e24:	0f 3f       	cpi	r16, 0xFF	; 255
    4e26:	15 07       	cpc	r17, r21
    4e28:	21 f4       	brne	.+8      	; 0x4e32 <vfprintf+0x358>
    4e2a:	8e e2       	ldi	r24, 0x2E	; 46
    4e2c:	90 e0       	ldi	r25, 0x00	; 0
    4e2e:	b3 01       	movw	r22, r6
    4e30:	a7 d4       	rcall	.+2382   	; 0x5780 <fputc>
    4e32:	c0 16       	cp	r12, r16
    4e34:	d1 06       	cpc	r13, r17
    4e36:	34 f0       	brlt	.+12     	; 0x4e44 <vfprintf+0x36a>
    4e38:	40 16       	cp	r4, r16
    4e3a:	51 06       	cpc	r5, r17
    4e3c:	1c f4       	brge	.+6      	; 0x4e44 <vfprintf+0x36a>
    4e3e:	f7 01       	movw	r30, r14
    4e40:	80 81       	ld	r24, Z
    4e42:	01 c0       	rjmp	.+2      	; 0x4e46 <vfprintf+0x36c>
    4e44:	80 e3       	ldi	r24, 0x30	; 48
    4e46:	01 50       	subi	r16, 0x01	; 1
    4e48:	10 40       	sbci	r17, 0x00	; 0
    4e4a:	08 94       	sec
    4e4c:	e1 1c       	adc	r14, r1
    4e4e:	f1 1c       	adc	r15, r1
    4e50:	0a 15       	cp	r16, r10
    4e52:	1b 05       	cpc	r17, r11
    4e54:	24 f0       	brlt	.+8      	; 0x4e5e <vfprintf+0x384>
    4e56:	90 e0       	ldi	r25, 0x00	; 0
    4e58:	b3 01       	movw	r22, r6
    4e5a:	92 d4       	rcall	.+2340   	; 0x5780 <fputc>
    4e5c:	e2 cf       	rjmp	.-60     	; 0x4e22 <vfprintf+0x348>
    4e5e:	0c 15       	cp	r16, r12
    4e60:	1d 05       	cpc	r17, r13
    4e62:	39 f4       	brne	.+14     	; 0x4e72 <vfprintf+0x398>
    4e64:	9a 81       	ldd	r25, Y+2	; 0x02
    4e66:	96 33       	cpi	r25, 0x36	; 54
    4e68:	18 f4       	brcc	.+6      	; 0x4e70 <vfprintf+0x396>
    4e6a:	95 33       	cpi	r25, 0x35	; 53
    4e6c:	11 f4       	brne	.+4      	; 0x4e72 <vfprintf+0x398>
    4e6e:	24 fe       	sbrs	r2, 4
    4e70:	81 e3       	ldi	r24, 0x31	; 49
    4e72:	90 e0       	ldi	r25, 0x00	; 0
    4e74:	45 c0       	rjmp	.+138    	; 0x4f00 <vfprintf+0x426>
    4e76:	8a 81       	ldd	r24, Y+2	; 0x02
    4e78:	81 33       	cpi	r24, 0x31	; 49
    4e7a:	09 f0       	breq	.+2      	; 0x4e7e <vfprintf+0x3a4>
    4e7c:	0f 7e       	andi	r16, 0xEF	; 239
    4e7e:	90 e0       	ldi	r25, 0x00	; 0
    4e80:	b3 01       	movw	r22, r6
    4e82:	7e d4       	rcall	.+2300   	; 0x5780 <fputc>
    4e84:	99 20       	and	r9, r9
    4e86:	91 f0       	breq	.+36     	; 0x4eac <vfprintf+0x3d2>
    4e88:	8e e2       	ldi	r24, 0x2E	; 46
    4e8a:	90 e0       	ldi	r25, 0x00	; 0
    4e8c:	b3 01       	movw	r22, r6
    4e8e:	78 d4       	rcall	.+2288   	; 0x5780 <fputc>
    4e90:	12 e0       	ldi	r17, 0x02	; 2
    4e92:	e1 e0       	ldi	r30, 0x01	; 1
    4e94:	f0 e0       	ldi	r31, 0x00	; 0
    4e96:	ec 0f       	add	r30, r28
    4e98:	fd 1f       	adc	r31, r29
    4e9a:	e1 0f       	add	r30, r17
    4e9c:	f1 1d       	adc	r31, r1
    4e9e:	1f 5f       	subi	r17, 0xFF	; 255
    4ea0:	80 81       	ld	r24, Z
    4ea2:	90 e0       	ldi	r25, 0x00	; 0
    4ea4:	b3 01       	movw	r22, r6
    4ea6:	6c d4       	rcall	.+2264   	; 0x5780 <fputc>
    4ea8:	9a 94       	dec	r9
    4eaa:	99 f7       	brne	.-26     	; 0x4e92 <vfprintf+0x3b8>
    4eac:	44 fc       	sbrc	r4, 4
    4eae:	03 c0       	rjmp	.+6      	; 0x4eb6 <vfprintf+0x3dc>
    4eb0:	85 e6       	ldi	r24, 0x65	; 101
    4eb2:	90 e0       	ldi	r25, 0x00	; 0
    4eb4:	02 c0       	rjmp	.+4      	; 0x4eba <vfprintf+0x3e0>
    4eb6:	85 e4       	ldi	r24, 0x45	; 69
    4eb8:	90 e0       	ldi	r25, 0x00	; 0
    4eba:	b3 01       	movw	r22, r6
    4ebc:	61 d4       	rcall	.+2242   	; 0x5780 <fputc>
    4ebe:	d7 fc       	sbrc	r13, 7
    4ec0:	05 c0       	rjmp	.+10     	; 0x4ecc <vfprintf+0x3f2>
    4ec2:	c1 14       	cp	r12, r1
    4ec4:	d1 04       	cpc	r13, r1
    4ec6:	41 f4       	brne	.+16     	; 0x4ed8 <vfprintf+0x3fe>
    4ec8:	04 ff       	sbrs	r16, 4
    4eca:	06 c0       	rjmp	.+12     	; 0x4ed8 <vfprintf+0x3fe>
    4ecc:	d0 94       	com	r13
    4ece:	c1 94       	neg	r12
    4ed0:	d1 08       	sbc	r13, r1
    4ed2:	d3 94       	inc	r13
    4ed4:	8d e2       	ldi	r24, 0x2D	; 45
    4ed6:	01 c0       	rjmp	.+2      	; 0x4eda <vfprintf+0x400>
    4ed8:	8b e2       	ldi	r24, 0x2B	; 43
    4eda:	90 e0       	ldi	r25, 0x00	; 0
    4edc:	b3 01       	movw	r22, r6
    4ede:	50 d4       	rcall	.+2208   	; 0x5780 <fputc>
    4ee0:	80 e3       	ldi	r24, 0x30	; 48
    4ee2:	05 c0       	rjmp	.+10     	; 0x4eee <vfprintf+0x414>
    4ee4:	8f 5f       	subi	r24, 0xFF	; 255
    4ee6:	26 ef       	ldi	r18, 0xF6	; 246
    4ee8:	3f ef       	ldi	r19, 0xFF	; 255
    4eea:	c2 0e       	add	r12, r18
    4eec:	d3 1e       	adc	r13, r19
    4eee:	3a e0       	ldi	r19, 0x0A	; 10
    4ef0:	c3 16       	cp	r12, r19
    4ef2:	d1 04       	cpc	r13, r1
    4ef4:	bc f7       	brge	.-18     	; 0x4ee4 <vfprintf+0x40a>
    4ef6:	90 e0       	ldi	r25, 0x00	; 0
    4ef8:	b3 01       	movw	r22, r6
    4efa:	42 d4       	rcall	.+2180   	; 0x5780 <fputc>
    4efc:	c6 01       	movw	r24, r12
    4efe:	c0 96       	adiw	r24, 0x30	; 48
    4f00:	b3 01       	movw	r22, r6
    4f02:	3e d4       	rcall	.+2172   	; 0x5780 <fputc>
    4f04:	cc 84       	ldd	r12, Y+12	; 0x0c
    4f06:	dd 84       	ldd	r13, Y+13	; 0x0d
    4f08:	46 c1       	rjmp	.+652    	; 0x5196 <vfprintf+0x6bc>
    4f0a:	93 36       	cpi	r25, 0x63	; 99
    4f0c:	31 f0       	breq	.+12     	; 0x4f1a <vfprintf+0x440>
    4f0e:	93 37       	cpi	r25, 0x73	; 115
    4f10:	99 f0       	breq	.+38     	; 0x4f38 <vfprintf+0x45e>
    4f12:	93 35       	cpi	r25, 0x53	; 83
    4f14:	09 f0       	breq	.+2      	; 0x4f18 <vfprintf+0x43e>
    4f16:	55 c0       	rjmp	.+170    	; 0x4fc2 <vfprintf+0x4e8>
    4f18:	22 c0       	rjmp	.+68     	; 0x4f5e <vfprintf+0x484>
    4f1a:	f6 01       	movw	r30, r12
    4f1c:	80 81       	ld	r24, Z
    4f1e:	89 83       	std	Y+1, r24	; 0x01
    4f20:	5e 01       	movw	r10, r28
    4f22:	08 94       	sec
    4f24:	a1 1c       	adc	r10, r1
    4f26:	b1 1c       	adc	r11, r1
    4f28:	22 e0       	ldi	r18, 0x02	; 2
    4f2a:	30 e0       	ldi	r19, 0x00	; 0
    4f2c:	c2 0e       	add	r12, r18
    4f2e:	d3 1e       	adc	r13, r19
    4f30:	21 e0       	ldi	r18, 0x01	; 1
    4f32:	e2 2e       	mov	r14, r18
    4f34:	f1 2c       	mov	r15, r1
    4f36:	11 c0       	rjmp	.+34     	; 0x4f5a <vfprintf+0x480>
    4f38:	f6 01       	movw	r30, r12
    4f3a:	a0 80       	ld	r10, Z
    4f3c:	b1 80       	ldd	r11, Z+1	; 0x01
    4f3e:	16 fd       	sbrc	r17, 6
    4f40:	03 c0       	rjmp	.+6      	; 0x4f48 <vfprintf+0x46e>
    4f42:	6f ef       	ldi	r22, 0xFF	; 255
    4f44:	7f ef       	ldi	r23, 0xFF	; 255
    4f46:	02 c0       	rjmp	.+4      	; 0x4f4c <vfprintf+0x472>
    4f48:	69 2d       	mov	r22, r9
    4f4a:	70 e0       	ldi	r23, 0x00	; 0
    4f4c:	22 e0       	ldi	r18, 0x02	; 2
    4f4e:	30 e0       	ldi	r19, 0x00	; 0
    4f50:	c2 0e       	add	r12, r18
    4f52:	d3 1e       	adc	r13, r19
    4f54:	c5 01       	movw	r24, r10
    4f56:	09 d4       	rcall	.+2066   	; 0x576a <strnlen>
    4f58:	7c 01       	movw	r14, r24
    4f5a:	1f 77       	andi	r17, 0x7F	; 127
    4f5c:	12 c0       	rjmp	.+36     	; 0x4f82 <vfprintf+0x4a8>
    4f5e:	f6 01       	movw	r30, r12
    4f60:	a0 80       	ld	r10, Z
    4f62:	b1 80       	ldd	r11, Z+1	; 0x01
    4f64:	16 fd       	sbrc	r17, 6
    4f66:	03 c0       	rjmp	.+6      	; 0x4f6e <vfprintf+0x494>
    4f68:	6f ef       	ldi	r22, 0xFF	; 255
    4f6a:	7f ef       	ldi	r23, 0xFF	; 255
    4f6c:	02 c0       	rjmp	.+4      	; 0x4f72 <vfprintf+0x498>
    4f6e:	69 2d       	mov	r22, r9
    4f70:	70 e0       	ldi	r23, 0x00	; 0
    4f72:	22 e0       	ldi	r18, 0x02	; 2
    4f74:	30 e0       	ldi	r19, 0x00	; 0
    4f76:	c2 0e       	add	r12, r18
    4f78:	d3 1e       	adc	r13, r19
    4f7a:	c5 01       	movw	r24, r10
    4f7c:	eb d3       	rcall	.+2006   	; 0x5754 <strnlen_P>
    4f7e:	7c 01       	movw	r14, r24
    4f80:	10 68       	ori	r17, 0x80	; 128
    4f82:	13 ff       	sbrs	r17, 3
    4f84:	06 c0       	rjmp	.+12     	; 0x4f92 <vfprintf+0x4b8>
    4f86:	19 c0       	rjmp	.+50     	; 0x4fba <vfprintf+0x4e0>
    4f88:	80 e2       	ldi	r24, 0x20	; 32
    4f8a:	90 e0       	ldi	r25, 0x00	; 0
    4f8c:	b3 01       	movw	r22, r6
    4f8e:	f8 d3       	rcall	.+2032   	; 0x5780 <fputc>
    4f90:	8a 94       	dec	r8
    4f92:	88 2d       	mov	r24, r8
    4f94:	90 e0       	ldi	r25, 0x00	; 0
    4f96:	e8 16       	cp	r14, r24
    4f98:	f9 06       	cpc	r15, r25
    4f9a:	b0 f3       	brcs	.-20     	; 0x4f88 <vfprintf+0x4ae>
    4f9c:	0e c0       	rjmp	.+28     	; 0x4fba <vfprintf+0x4e0>
    4f9e:	f5 01       	movw	r30, r10
    4fa0:	17 fd       	sbrc	r17, 7
    4fa2:	85 91       	lpm	r24, Z+
    4fa4:	17 ff       	sbrs	r17, 7
    4fa6:	81 91       	ld	r24, Z+
    4fa8:	5f 01       	movw	r10, r30
    4faa:	90 e0       	ldi	r25, 0x00	; 0
    4fac:	b3 01       	movw	r22, r6
    4fae:	e8 d3       	rcall	.+2000   	; 0x5780 <fputc>
    4fb0:	81 10       	cpse	r8, r1
    4fb2:	8a 94       	dec	r8
    4fb4:	08 94       	sec
    4fb6:	e1 08       	sbc	r14, r1
    4fb8:	f1 08       	sbc	r15, r1
    4fba:	e1 14       	cp	r14, r1
    4fbc:	f1 04       	cpc	r15, r1
    4fbe:	79 f7       	brne	.-34     	; 0x4f9e <vfprintf+0x4c4>
    4fc0:	ea c0       	rjmp	.+468    	; 0x5196 <vfprintf+0x6bc>
    4fc2:	94 36       	cpi	r25, 0x64	; 100
    4fc4:	11 f0       	breq	.+4      	; 0x4fca <vfprintf+0x4f0>
    4fc6:	99 36       	cpi	r25, 0x69	; 105
    4fc8:	81 f5       	brne	.+96     	; 0x502a <vfprintf+0x550>
    4fca:	17 ff       	sbrs	r17, 7
    4fcc:	08 c0       	rjmp	.+16     	; 0x4fde <vfprintf+0x504>
    4fce:	f6 01       	movw	r30, r12
    4fd0:	20 81       	ld	r18, Z
    4fd2:	31 81       	ldd	r19, Z+1	; 0x01
    4fd4:	42 81       	ldd	r20, Z+2	; 0x02
    4fd6:	53 81       	ldd	r21, Z+3	; 0x03
    4fd8:	84 e0       	ldi	r24, 0x04	; 4
    4fda:	90 e0       	ldi	r25, 0x00	; 0
    4fdc:	0a c0       	rjmp	.+20     	; 0x4ff2 <vfprintf+0x518>
    4fde:	f6 01       	movw	r30, r12
    4fe0:	80 81       	ld	r24, Z
    4fe2:	91 81       	ldd	r25, Z+1	; 0x01
    4fe4:	9c 01       	movw	r18, r24
    4fe6:	44 27       	eor	r20, r20
    4fe8:	37 fd       	sbrc	r19, 7
    4fea:	40 95       	com	r20
    4fec:	54 2f       	mov	r21, r20
    4fee:	82 e0       	ldi	r24, 0x02	; 2
    4ff0:	90 e0       	ldi	r25, 0x00	; 0
    4ff2:	c8 0e       	add	r12, r24
    4ff4:	d9 1e       	adc	r13, r25
    4ff6:	9f e6       	ldi	r25, 0x6F	; 111
    4ff8:	f9 2e       	mov	r15, r25
    4ffa:	f1 22       	and	r15, r17
    4ffc:	57 ff       	sbrs	r21, 7
    4ffe:	09 c0       	rjmp	.+18     	; 0x5012 <vfprintf+0x538>
    5000:	50 95       	com	r21
    5002:	40 95       	com	r20
    5004:	30 95       	com	r19
    5006:	21 95       	neg	r18
    5008:	3f 4f       	sbci	r19, 0xFF	; 255
    500a:	4f 4f       	sbci	r20, 0xFF	; 255
    500c:	5f 4f       	sbci	r21, 0xFF	; 255
    500e:	90 e8       	ldi	r25, 0x80	; 128
    5010:	f9 2a       	or	r15, r25
    5012:	ca 01       	movw	r24, r20
    5014:	b9 01       	movw	r22, r18
    5016:	ae 01       	movw	r20, r28
    5018:	4f 5f       	subi	r20, 0xFF	; 255
    501a:	5f 4f       	sbci	r21, 0xFF	; 255
    501c:	2a e0       	ldi	r18, 0x0A	; 10
    501e:	30 e0       	ldi	r19, 0x00	; 0
    5020:	22 d4       	rcall	.+2116   	; 0x5866 <__ultoa_invert>
    5022:	e8 2e       	mov	r14, r24
    5024:	e8 89       	ldd	r30, Y+16	; 0x10
    5026:	ee 1a       	sub	r14, r30
    5028:	40 c0       	rjmp	.+128    	; 0x50aa <vfprintf+0x5d0>
    502a:	95 37       	cpi	r25, 0x75	; 117
    502c:	21 f4       	brne	.+8      	; 0x5036 <vfprintf+0x55c>
    502e:	1f 7e       	andi	r17, 0xEF	; 239
    5030:	2a e0       	ldi	r18, 0x0A	; 10
    5032:	30 e0       	ldi	r19, 0x00	; 0
    5034:	1c c0       	rjmp	.+56     	; 0x506e <vfprintf+0x594>
    5036:	19 7f       	andi	r17, 0xF9	; 249
    5038:	9f 36       	cpi	r25, 0x6F	; 111
    503a:	61 f0       	breq	.+24     	; 0x5054 <vfprintf+0x57a>
    503c:	90 37       	cpi	r25, 0x70	; 112
    503e:	20 f4       	brcc	.+8      	; 0x5048 <vfprintf+0x56e>
    5040:	98 35       	cpi	r25, 0x58	; 88
    5042:	09 f0       	breq	.+2      	; 0x5046 <vfprintf+0x56c>
    5044:	ab c0       	rjmp	.+342    	; 0x519c <vfprintf+0x6c2>
    5046:	0f c0       	rjmp	.+30     	; 0x5066 <vfprintf+0x58c>
    5048:	90 37       	cpi	r25, 0x70	; 112
    504a:	39 f0       	breq	.+14     	; 0x505a <vfprintf+0x580>
    504c:	98 37       	cpi	r25, 0x78	; 120
    504e:	09 f0       	breq	.+2      	; 0x5052 <vfprintf+0x578>
    5050:	a5 c0       	rjmp	.+330    	; 0x519c <vfprintf+0x6c2>
    5052:	04 c0       	rjmp	.+8      	; 0x505c <vfprintf+0x582>
    5054:	28 e0       	ldi	r18, 0x08	; 8
    5056:	30 e0       	ldi	r19, 0x00	; 0
    5058:	0a c0       	rjmp	.+20     	; 0x506e <vfprintf+0x594>
    505a:	10 61       	ori	r17, 0x10	; 16
    505c:	14 fd       	sbrc	r17, 4
    505e:	14 60       	ori	r17, 0x04	; 4
    5060:	20 e1       	ldi	r18, 0x10	; 16
    5062:	30 e0       	ldi	r19, 0x00	; 0
    5064:	04 c0       	rjmp	.+8      	; 0x506e <vfprintf+0x594>
    5066:	14 fd       	sbrc	r17, 4
    5068:	16 60       	ori	r17, 0x06	; 6
    506a:	20 e1       	ldi	r18, 0x10	; 16
    506c:	32 e0       	ldi	r19, 0x02	; 2
    506e:	17 ff       	sbrs	r17, 7
    5070:	08 c0       	rjmp	.+16     	; 0x5082 <vfprintf+0x5a8>
    5072:	f6 01       	movw	r30, r12
    5074:	60 81       	ld	r22, Z
    5076:	71 81       	ldd	r23, Z+1	; 0x01
    5078:	82 81       	ldd	r24, Z+2	; 0x02
    507a:	93 81       	ldd	r25, Z+3	; 0x03
    507c:	44 e0       	ldi	r20, 0x04	; 4
    507e:	50 e0       	ldi	r21, 0x00	; 0
    5080:	08 c0       	rjmp	.+16     	; 0x5092 <vfprintf+0x5b8>
    5082:	f6 01       	movw	r30, r12
    5084:	80 81       	ld	r24, Z
    5086:	91 81       	ldd	r25, Z+1	; 0x01
    5088:	bc 01       	movw	r22, r24
    508a:	80 e0       	ldi	r24, 0x00	; 0
    508c:	90 e0       	ldi	r25, 0x00	; 0
    508e:	42 e0       	ldi	r20, 0x02	; 2
    5090:	50 e0       	ldi	r21, 0x00	; 0
    5092:	c4 0e       	add	r12, r20
    5094:	d5 1e       	adc	r13, r21
    5096:	ae 01       	movw	r20, r28
    5098:	4f 5f       	subi	r20, 0xFF	; 255
    509a:	5f 4f       	sbci	r21, 0xFF	; 255
    509c:	e4 d3       	rcall	.+1992   	; 0x5866 <__ultoa_invert>
    509e:	e8 2e       	mov	r14, r24
    50a0:	58 89       	ldd	r21, Y+16	; 0x10
    50a2:	e5 1a       	sub	r14, r21
    50a4:	8f e7       	ldi	r24, 0x7F	; 127
    50a6:	f8 2e       	mov	r15, r24
    50a8:	f1 22       	and	r15, r17
    50aa:	f6 fe       	sbrs	r15, 6
    50ac:	0b c0       	rjmp	.+22     	; 0x50c4 <vfprintf+0x5ea>
    50ae:	8e ef       	ldi	r24, 0xFE	; 254
    50b0:	f8 22       	and	r15, r24
    50b2:	e9 14       	cp	r14, r9
    50b4:	38 f4       	brcc	.+14     	; 0x50c4 <vfprintf+0x5ea>
    50b6:	f4 fe       	sbrs	r15, 4
    50b8:	07 c0       	rjmp	.+14     	; 0x50c8 <vfprintf+0x5ee>
    50ba:	f2 fc       	sbrc	r15, 2
    50bc:	05 c0       	rjmp	.+10     	; 0x50c8 <vfprintf+0x5ee>
    50be:	9f ee       	ldi	r25, 0xEF	; 239
    50c0:	f9 22       	and	r15, r25
    50c2:	02 c0       	rjmp	.+4      	; 0x50c8 <vfprintf+0x5ee>
    50c4:	1e 2d       	mov	r17, r14
    50c6:	01 c0       	rjmp	.+2      	; 0x50ca <vfprintf+0x5f0>
    50c8:	19 2d       	mov	r17, r9
    50ca:	f4 fe       	sbrs	r15, 4
    50cc:	0d c0       	rjmp	.+26     	; 0x50e8 <vfprintf+0x60e>
    50ce:	fe 01       	movw	r30, r28
    50d0:	ee 0d       	add	r30, r14
    50d2:	f1 1d       	adc	r31, r1
    50d4:	80 81       	ld	r24, Z
    50d6:	80 33       	cpi	r24, 0x30	; 48
    50d8:	19 f4       	brne	.+6      	; 0x50e0 <vfprintf+0x606>
    50da:	e9 ee       	ldi	r30, 0xE9	; 233
    50dc:	fe 22       	and	r15, r30
    50de:	08 c0       	rjmp	.+16     	; 0x50f0 <vfprintf+0x616>
    50e0:	1f 5f       	subi	r17, 0xFF	; 255
    50e2:	f2 fe       	sbrs	r15, 2
    50e4:	05 c0       	rjmp	.+10     	; 0x50f0 <vfprintf+0x616>
    50e6:	03 c0       	rjmp	.+6      	; 0x50ee <vfprintf+0x614>
    50e8:	8f 2d       	mov	r24, r15
    50ea:	86 78       	andi	r24, 0x86	; 134
    50ec:	09 f0       	breq	.+2      	; 0x50f0 <vfprintf+0x616>
    50ee:	1f 5f       	subi	r17, 0xFF	; 255
    50f0:	0f 2d       	mov	r16, r15
    50f2:	f3 fc       	sbrc	r15, 3
    50f4:	13 c0       	rjmp	.+38     	; 0x511c <vfprintf+0x642>
    50f6:	f0 fe       	sbrs	r15, 0
    50f8:	0e c0       	rjmp	.+28     	; 0x5116 <vfprintf+0x63c>
    50fa:	18 15       	cp	r17, r8
    50fc:	10 f0       	brcs	.+4      	; 0x5102 <vfprintf+0x628>
    50fe:	9e 2c       	mov	r9, r14
    5100:	0a c0       	rjmp	.+20     	; 0x5116 <vfprintf+0x63c>
    5102:	9e 2c       	mov	r9, r14
    5104:	98 0c       	add	r9, r8
    5106:	91 1a       	sub	r9, r17
    5108:	18 2d       	mov	r17, r8
    510a:	05 c0       	rjmp	.+10     	; 0x5116 <vfprintf+0x63c>
    510c:	80 e2       	ldi	r24, 0x20	; 32
    510e:	90 e0       	ldi	r25, 0x00	; 0
    5110:	b3 01       	movw	r22, r6
    5112:	36 d3       	rcall	.+1644   	; 0x5780 <fputc>
    5114:	1f 5f       	subi	r17, 0xFF	; 255
    5116:	18 15       	cp	r17, r8
    5118:	c8 f3       	brcs	.-14     	; 0x510c <vfprintf+0x632>
    511a:	04 c0       	rjmp	.+8      	; 0x5124 <vfprintf+0x64a>
    511c:	18 15       	cp	r17, r8
    511e:	10 f4       	brcc	.+4      	; 0x5124 <vfprintf+0x64a>
    5120:	81 1a       	sub	r8, r17
    5122:	01 c0       	rjmp	.+2      	; 0x5126 <vfprintf+0x64c>
    5124:	88 24       	eor	r8, r8
    5126:	04 ff       	sbrs	r16, 4
    5128:	0e c0       	rjmp	.+28     	; 0x5146 <vfprintf+0x66c>
    512a:	80 e3       	ldi	r24, 0x30	; 48
    512c:	90 e0       	ldi	r25, 0x00	; 0
    512e:	b3 01       	movw	r22, r6
    5130:	27 d3       	rcall	.+1614   	; 0x5780 <fputc>
    5132:	02 ff       	sbrs	r16, 2
    5134:	1b c0       	rjmp	.+54     	; 0x516c <vfprintf+0x692>
    5136:	01 fd       	sbrc	r16, 1
    5138:	03 c0       	rjmp	.+6      	; 0x5140 <vfprintf+0x666>
    513a:	88 e7       	ldi	r24, 0x78	; 120
    513c:	90 e0       	ldi	r25, 0x00	; 0
    513e:	0e c0       	rjmp	.+28     	; 0x515c <vfprintf+0x682>
    5140:	88 e5       	ldi	r24, 0x58	; 88
    5142:	90 e0       	ldi	r25, 0x00	; 0
    5144:	0b c0       	rjmp	.+22     	; 0x515c <vfprintf+0x682>
    5146:	80 2f       	mov	r24, r16
    5148:	86 78       	andi	r24, 0x86	; 134
    514a:	81 f0       	breq	.+32     	; 0x516c <vfprintf+0x692>
    514c:	01 ff       	sbrs	r16, 1
    514e:	02 c0       	rjmp	.+4      	; 0x5154 <vfprintf+0x67a>
    5150:	8b e2       	ldi	r24, 0x2B	; 43
    5152:	01 c0       	rjmp	.+2      	; 0x5156 <vfprintf+0x67c>
    5154:	80 e2       	ldi	r24, 0x20	; 32
    5156:	f7 fc       	sbrc	r15, 7
    5158:	8d e2       	ldi	r24, 0x2D	; 45
    515a:	90 e0       	ldi	r25, 0x00	; 0
    515c:	b3 01       	movw	r22, r6
    515e:	10 d3       	rcall	.+1568   	; 0x5780 <fputc>
    5160:	05 c0       	rjmp	.+10     	; 0x516c <vfprintf+0x692>
    5162:	80 e3       	ldi	r24, 0x30	; 48
    5164:	90 e0       	ldi	r25, 0x00	; 0
    5166:	b3 01       	movw	r22, r6
    5168:	0b d3       	rcall	.+1558   	; 0x5780 <fputc>
    516a:	9a 94       	dec	r9
    516c:	e9 14       	cp	r14, r9
    516e:	c8 f3       	brcs	.-14     	; 0x5162 <vfprintf+0x688>
    5170:	ea 94       	dec	r14
    5172:	e1 e0       	ldi	r30, 0x01	; 1
    5174:	f0 e0       	ldi	r31, 0x00	; 0
    5176:	ec 0f       	add	r30, r28
    5178:	fd 1f       	adc	r31, r29
    517a:	ee 0d       	add	r30, r14
    517c:	f1 1d       	adc	r31, r1
    517e:	80 81       	ld	r24, Z
    5180:	90 e0       	ldi	r25, 0x00	; 0
    5182:	b3 01       	movw	r22, r6
    5184:	fd d2       	rcall	.+1530   	; 0x5780 <fputc>
    5186:	ee 20       	and	r14, r14
    5188:	99 f7       	brne	.-26     	; 0x5170 <vfprintf+0x696>
    518a:	05 c0       	rjmp	.+10     	; 0x5196 <vfprintf+0x6bc>
    518c:	80 e2       	ldi	r24, 0x20	; 32
    518e:	90 e0       	ldi	r25, 0x00	; 0
    5190:	b3 01       	movw	r22, r6
    5192:	f6 d2       	rcall	.+1516   	; 0x5780 <fputc>
    5194:	8a 94       	dec	r8
    5196:	88 20       	and	r8, r8
    5198:	c9 f7       	brne	.-14     	; 0x518c <vfprintf+0x6b2>
    519a:	b6 cc       	rjmp	.-1684   	; 0x4b08 <vfprintf+0x2e>
    519c:	f3 01       	movw	r30, r6
    519e:	66 81       	ldd	r22, Z+6	; 0x06
    51a0:	77 81       	ldd	r23, Z+7	; 0x07
    51a2:	cb 01       	movw	r24, r22
    51a4:	61 96       	adiw	r28, 0x11	; 17
    51a6:	e2 e1       	ldi	r30, 0x12	; 18
    51a8:	70 c0       	rjmp	.+224    	; 0x528a <__epilogue_restores__>

000051aa <__mulsi3>:
    51aa:	62 9f       	mul	r22, r18
    51ac:	d0 01       	movw	r26, r0
    51ae:	73 9f       	mul	r23, r19
    51b0:	f0 01       	movw	r30, r0
    51b2:	82 9f       	mul	r24, r18
    51b4:	e0 0d       	add	r30, r0
    51b6:	f1 1d       	adc	r31, r1
    51b8:	64 9f       	mul	r22, r20
    51ba:	e0 0d       	add	r30, r0
    51bc:	f1 1d       	adc	r31, r1
    51be:	92 9f       	mul	r25, r18
    51c0:	f0 0d       	add	r31, r0
    51c2:	83 9f       	mul	r24, r19
    51c4:	f0 0d       	add	r31, r0
    51c6:	74 9f       	mul	r23, r20
    51c8:	f0 0d       	add	r31, r0
    51ca:	65 9f       	mul	r22, r21
    51cc:	f0 0d       	add	r31, r0
    51ce:	99 27       	eor	r25, r25
    51d0:	72 9f       	mul	r23, r18
    51d2:	b0 0d       	add	r27, r0
    51d4:	e1 1d       	adc	r30, r1
    51d6:	f9 1f       	adc	r31, r25
    51d8:	63 9f       	mul	r22, r19
    51da:	b0 0d       	add	r27, r0
    51dc:	e1 1d       	adc	r30, r1
    51de:	f9 1f       	adc	r31, r25
    51e0:	bd 01       	movw	r22, r26
    51e2:	cf 01       	movw	r24, r30
    51e4:	11 24       	eor	r1, r1
    51e6:	08 95       	ret

000051e8 <__divmodhi4>:
    51e8:	97 fb       	bst	r25, 7
    51ea:	09 2e       	mov	r0, r25
    51ec:	07 26       	eor	r0, r23
    51ee:	0a d0       	rcall	.+20     	; 0x5204 <__divmodhi4_neg1>
    51f0:	77 fd       	sbrc	r23, 7
    51f2:	04 d0       	rcall	.+8      	; 0x51fc <__divmodhi4_neg2>
    51f4:	65 d0       	rcall	.+202    	; 0x52c0 <__udivmodhi4>
    51f6:	06 d0       	rcall	.+12     	; 0x5204 <__divmodhi4_neg1>
    51f8:	00 20       	and	r0, r0
    51fa:	1a f4       	brpl	.+6      	; 0x5202 <__divmodhi4_exit>

000051fc <__divmodhi4_neg2>:
    51fc:	70 95       	com	r23
    51fe:	61 95       	neg	r22
    5200:	7f 4f       	sbci	r23, 0xFF	; 255

00005202 <__divmodhi4_exit>:
    5202:	08 95       	ret

00005204 <__divmodhi4_neg1>:
    5204:	f6 f7       	brtc	.-4      	; 0x5202 <__divmodhi4_exit>
    5206:	90 95       	com	r25
    5208:	81 95       	neg	r24
    520a:	9f 4f       	sbci	r25, 0xFF	; 255
    520c:	08 95       	ret

0000520e <__udivmodsi4>:
    520e:	a1 e2       	ldi	r26, 0x21	; 33
    5210:	1a 2e       	mov	r1, r26
    5212:	aa 1b       	sub	r26, r26
    5214:	bb 1b       	sub	r27, r27
    5216:	fd 01       	movw	r30, r26
    5218:	0d c0       	rjmp	.+26     	; 0x5234 <__udivmodsi4_ep>

0000521a <__udivmodsi4_loop>:
    521a:	aa 1f       	adc	r26, r26
    521c:	bb 1f       	adc	r27, r27
    521e:	ee 1f       	adc	r30, r30
    5220:	ff 1f       	adc	r31, r31
    5222:	a2 17       	cp	r26, r18
    5224:	b3 07       	cpc	r27, r19
    5226:	e4 07       	cpc	r30, r20
    5228:	f5 07       	cpc	r31, r21
    522a:	20 f0       	brcs	.+8      	; 0x5234 <__udivmodsi4_ep>
    522c:	a2 1b       	sub	r26, r18
    522e:	b3 0b       	sbc	r27, r19
    5230:	e4 0b       	sbc	r30, r20
    5232:	f5 0b       	sbc	r31, r21

00005234 <__udivmodsi4_ep>:
    5234:	66 1f       	adc	r22, r22
    5236:	77 1f       	adc	r23, r23
    5238:	88 1f       	adc	r24, r24
    523a:	99 1f       	adc	r25, r25
    523c:	1a 94       	dec	r1
    523e:	69 f7       	brne	.-38     	; 0x521a <__udivmodsi4_loop>
    5240:	60 95       	com	r22
    5242:	70 95       	com	r23
    5244:	80 95       	com	r24
    5246:	90 95       	com	r25
    5248:	9b 01       	movw	r18, r22
    524a:	ac 01       	movw	r20, r24
    524c:	bd 01       	movw	r22, r26
    524e:	cf 01       	movw	r24, r30
    5250:	08 95       	ret

00005252 <__prologue_saves__>:
    5252:	2f 92       	push	r2
    5254:	3f 92       	push	r3
    5256:	4f 92       	push	r4
    5258:	5f 92       	push	r5
    525a:	6f 92       	push	r6
    525c:	7f 92       	push	r7
    525e:	8f 92       	push	r8
    5260:	9f 92       	push	r9
    5262:	af 92       	push	r10
    5264:	bf 92       	push	r11
    5266:	cf 92       	push	r12
    5268:	df 92       	push	r13
    526a:	ef 92       	push	r14
    526c:	ff 92       	push	r15
    526e:	0f 93       	push	r16
    5270:	1f 93       	push	r17
    5272:	cf 93       	push	r28
    5274:	df 93       	push	r29
    5276:	cd b7       	in	r28, 0x3d	; 61
    5278:	de b7       	in	r29, 0x3e	; 62
    527a:	ca 1b       	sub	r28, r26
    527c:	db 0b       	sbc	r29, r27
    527e:	0f b6       	in	r0, 0x3f	; 63
    5280:	f8 94       	cli
    5282:	de bf       	out	0x3e, r29	; 62
    5284:	0f be       	out	0x3f, r0	; 63
    5286:	cd bf       	out	0x3d, r28	; 61
    5288:	09 94       	ijmp

0000528a <__epilogue_restores__>:
    528a:	2a 88       	ldd	r2, Y+18	; 0x12
    528c:	39 88       	ldd	r3, Y+17	; 0x11
    528e:	48 88       	ldd	r4, Y+16	; 0x10
    5290:	5f 84       	ldd	r5, Y+15	; 0x0f
    5292:	6e 84       	ldd	r6, Y+14	; 0x0e
    5294:	7d 84       	ldd	r7, Y+13	; 0x0d
    5296:	8c 84       	ldd	r8, Y+12	; 0x0c
    5298:	9b 84       	ldd	r9, Y+11	; 0x0b
    529a:	aa 84       	ldd	r10, Y+10	; 0x0a
    529c:	b9 84       	ldd	r11, Y+9	; 0x09
    529e:	c8 84       	ldd	r12, Y+8	; 0x08
    52a0:	df 80       	ldd	r13, Y+7	; 0x07
    52a2:	ee 80       	ldd	r14, Y+6	; 0x06
    52a4:	fd 80       	ldd	r15, Y+5	; 0x05
    52a6:	0c 81       	ldd	r16, Y+4	; 0x04
    52a8:	1b 81       	ldd	r17, Y+3	; 0x03
    52aa:	aa 81       	ldd	r26, Y+2	; 0x02
    52ac:	b9 81       	ldd	r27, Y+1	; 0x01
    52ae:	ce 0f       	add	r28, r30
    52b0:	d1 1d       	adc	r29, r1
    52b2:	0f b6       	in	r0, 0x3f	; 63
    52b4:	f8 94       	cli
    52b6:	de bf       	out	0x3e, r29	; 62
    52b8:	0f be       	out	0x3f, r0	; 63
    52ba:	cd bf       	out	0x3d, r28	; 61
    52bc:	ed 01       	movw	r28, r26
    52be:	08 95       	ret

000052c0 <__udivmodhi4>:
    52c0:	aa 1b       	sub	r26, r26
    52c2:	bb 1b       	sub	r27, r27
    52c4:	51 e1       	ldi	r21, 0x11	; 17
    52c6:	07 c0       	rjmp	.+14     	; 0x52d6 <__udivmodhi4_ep>

000052c8 <__udivmodhi4_loop>:
    52c8:	aa 1f       	adc	r26, r26
    52ca:	bb 1f       	adc	r27, r27
    52cc:	a6 17       	cp	r26, r22
    52ce:	b7 07       	cpc	r27, r23
    52d0:	10 f0       	brcs	.+4      	; 0x52d6 <__udivmodhi4_ep>
    52d2:	a6 1b       	sub	r26, r22
    52d4:	b7 0b       	sbc	r27, r23

000052d6 <__udivmodhi4_ep>:
    52d6:	88 1f       	adc	r24, r24
    52d8:	99 1f       	adc	r25, r25
    52da:	5a 95       	dec	r21
    52dc:	a9 f7       	brne	.-22     	; 0x52c8 <__udivmodhi4_loop>
    52de:	80 95       	com	r24
    52e0:	90 95       	com	r25
    52e2:	bc 01       	movw	r22, r24
    52e4:	cd 01       	movw	r24, r26
    52e6:	08 95       	ret

000052e8 <malloc>:
    52e8:	cf 93       	push	r28
    52ea:	df 93       	push	r29
    52ec:	bc 01       	movw	r22, r24
    52ee:	82 30       	cpi	r24, 0x02	; 2
    52f0:	91 05       	cpc	r25, r1
    52f2:	10 f4       	brcc	.+4      	; 0x52f8 <malloc+0x10>
    52f4:	62 e0       	ldi	r22, 0x02	; 2
    52f6:	70 e0       	ldi	r23, 0x00	; 0
    52f8:	a0 91 e5 04 	lds	r26, 0x04E5
    52fc:	b0 91 e6 04 	lds	r27, 0x04E6
    5300:	ed 01       	movw	r28, r26
    5302:	e0 e0       	ldi	r30, 0x00	; 0
    5304:	f0 e0       	ldi	r31, 0x00	; 0
    5306:	40 e0       	ldi	r20, 0x00	; 0
    5308:	50 e0       	ldi	r21, 0x00	; 0
    530a:	21 c0       	rjmp	.+66     	; 0x534e <malloc+0x66>
    530c:	88 81       	ld	r24, Y
    530e:	99 81       	ldd	r25, Y+1	; 0x01
    5310:	86 17       	cp	r24, r22
    5312:	97 07       	cpc	r25, r23
    5314:	69 f4       	brne	.+26     	; 0x5330 <malloc+0x48>
    5316:	8a 81       	ldd	r24, Y+2	; 0x02
    5318:	9b 81       	ldd	r25, Y+3	; 0x03
    531a:	30 97       	sbiw	r30, 0x00	; 0
    531c:	19 f0       	breq	.+6      	; 0x5324 <malloc+0x3c>
    531e:	93 83       	std	Z+3, r25	; 0x03
    5320:	82 83       	std	Z+2, r24	; 0x02
    5322:	04 c0       	rjmp	.+8      	; 0x532c <malloc+0x44>
    5324:	90 93 e6 04 	sts	0x04E6, r25
    5328:	80 93 e5 04 	sts	0x04E5, r24
    532c:	fe 01       	movw	r30, r28
    532e:	34 c0       	rjmp	.+104    	; 0x5398 <malloc+0xb0>
    5330:	68 17       	cp	r22, r24
    5332:	79 07       	cpc	r23, r25
    5334:	38 f4       	brcc	.+14     	; 0x5344 <malloc+0x5c>
    5336:	41 15       	cp	r20, r1
    5338:	51 05       	cpc	r21, r1
    533a:	19 f0       	breq	.+6      	; 0x5342 <malloc+0x5a>
    533c:	84 17       	cp	r24, r20
    533e:	95 07       	cpc	r25, r21
    5340:	08 f4       	brcc	.+2      	; 0x5344 <malloc+0x5c>
    5342:	ac 01       	movw	r20, r24
    5344:	fe 01       	movw	r30, r28
    5346:	8a 81       	ldd	r24, Y+2	; 0x02
    5348:	9b 81       	ldd	r25, Y+3	; 0x03
    534a:	9c 01       	movw	r18, r24
    534c:	e9 01       	movw	r28, r18
    534e:	20 97       	sbiw	r28, 0x00	; 0
    5350:	e9 f6       	brne	.-70     	; 0x530c <malloc+0x24>
    5352:	41 15       	cp	r20, r1
    5354:	51 05       	cpc	r21, r1
    5356:	a9 f1       	breq	.+106    	; 0x53c2 <malloc+0xda>
    5358:	ca 01       	movw	r24, r20
    535a:	86 1b       	sub	r24, r22
    535c:	97 0b       	sbc	r25, r23
    535e:	04 97       	sbiw	r24, 0x04	; 4
    5360:	08 f4       	brcc	.+2      	; 0x5364 <malloc+0x7c>
    5362:	ba 01       	movw	r22, r20
    5364:	e0 e0       	ldi	r30, 0x00	; 0
    5366:	f0 e0       	ldi	r31, 0x00	; 0
    5368:	2a c0       	rjmp	.+84     	; 0x53be <malloc+0xd6>
    536a:	8d 91       	ld	r24, X+
    536c:	9c 91       	ld	r25, X
    536e:	11 97       	sbiw	r26, 0x01	; 1
    5370:	84 17       	cp	r24, r20
    5372:	95 07       	cpc	r25, r21
    5374:	f9 f4       	brne	.+62     	; 0x53b4 <malloc+0xcc>
    5376:	64 17       	cp	r22, r20
    5378:	75 07       	cpc	r23, r21
    537a:	81 f4       	brne	.+32     	; 0x539c <malloc+0xb4>
    537c:	12 96       	adiw	r26, 0x02	; 2
    537e:	8d 91       	ld	r24, X+
    5380:	9c 91       	ld	r25, X
    5382:	13 97       	sbiw	r26, 0x03	; 3
    5384:	30 97       	sbiw	r30, 0x00	; 0
    5386:	19 f0       	breq	.+6      	; 0x538e <malloc+0xa6>
    5388:	93 83       	std	Z+3, r25	; 0x03
    538a:	82 83       	std	Z+2, r24	; 0x02
    538c:	04 c0       	rjmp	.+8      	; 0x5396 <malloc+0xae>
    538e:	90 93 e6 04 	sts	0x04E6, r25
    5392:	80 93 e5 04 	sts	0x04E5, r24
    5396:	fd 01       	movw	r30, r26
    5398:	32 96       	adiw	r30, 0x02	; 2
    539a:	4f c0       	rjmp	.+158    	; 0x543a <malloc+0x152>
    539c:	ca 01       	movw	r24, r20
    539e:	86 1b       	sub	r24, r22
    53a0:	97 0b       	sbc	r25, r23
    53a2:	fd 01       	movw	r30, r26
    53a4:	e8 0f       	add	r30, r24
    53a6:	f9 1f       	adc	r31, r25
    53a8:	61 93       	st	Z+, r22
    53aa:	71 93       	st	Z+, r23
    53ac:	02 97       	sbiw	r24, 0x02	; 2
    53ae:	8d 93       	st	X+, r24
    53b0:	9c 93       	st	X, r25
    53b2:	43 c0       	rjmp	.+134    	; 0x543a <malloc+0x152>
    53b4:	fd 01       	movw	r30, r26
    53b6:	82 81       	ldd	r24, Z+2	; 0x02
    53b8:	93 81       	ldd	r25, Z+3	; 0x03
    53ba:	9c 01       	movw	r18, r24
    53bc:	d9 01       	movw	r26, r18
    53be:	10 97       	sbiw	r26, 0x00	; 0
    53c0:	a1 f6       	brne	.-88     	; 0x536a <malloc+0x82>
    53c2:	80 91 e3 04 	lds	r24, 0x04E3
    53c6:	90 91 e4 04 	lds	r25, 0x04E4
    53ca:	89 2b       	or	r24, r25
    53cc:	41 f4       	brne	.+16     	; 0x53de <malloc+0xf6>
    53ce:	80 91 e5 01 	lds	r24, 0x01E5
    53d2:	90 91 e6 01 	lds	r25, 0x01E6
    53d6:	90 93 e4 04 	sts	0x04E4, r25
    53da:	80 93 e3 04 	sts	0x04E3, r24
    53de:	40 91 e7 01 	lds	r20, 0x01E7
    53e2:	50 91 e8 01 	lds	r21, 0x01E8
    53e6:	41 15       	cp	r20, r1
    53e8:	51 05       	cpc	r21, r1
    53ea:	41 f4       	brne	.+16     	; 0x53fc <malloc+0x114>
    53ec:	4d b7       	in	r20, 0x3d	; 61
    53ee:	5e b7       	in	r21, 0x3e	; 62
    53f0:	80 91 e3 01 	lds	r24, 0x01E3
    53f4:	90 91 e4 01 	lds	r25, 0x01E4
    53f8:	48 1b       	sub	r20, r24
    53fa:	59 0b       	sbc	r21, r25
    53fc:	20 91 e3 04 	lds	r18, 0x04E3
    5400:	30 91 e4 04 	lds	r19, 0x04E4
    5404:	24 17       	cp	r18, r20
    5406:	35 07       	cpc	r19, r21
    5408:	b0 f4       	brcc	.+44     	; 0x5436 <malloc+0x14e>
    540a:	ca 01       	movw	r24, r20
    540c:	82 1b       	sub	r24, r18
    540e:	93 0b       	sbc	r25, r19
    5410:	86 17       	cp	r24, r22
    5412:	97 07       	cpc	r25, r23
    5414:	80 f0       	brcs	.+32     	; 0x5436 <malloc+0x14e>
    5416:	ab 01       	movw	r20, r22
    5418:	4e 5f       	subi	r20, 0xFE	; 254
    541a:	5f 4f       	sbci	r21, 0xFF	; 255
    541c:	84 17       	cp	r24, r20
    541e:	95 07       	cpc	r25, r21
    5420:	50 f0       	brcs	.+20     	; 0x5436 <malloc+0x14e>
    5422:	42 0f       	add	r20, r18
    5424:	53 1f       	adc	r21, r19
    5426:	50 93 e4 04 	sts	0x04E4, r21
    542a:	40 93 e3 04 	sts	0x04E3, r20
    542e:	f9 01       	movw	r30, r18
    5430:	61 93       	st	Z+, r22
    5432:	71 93       	st	Z+, r23
    5434:	02 c0       	rjmp	.+4      	; 0x543a <malloc+0x152>
    5436:	e0 e0       	ldi	r30, 0x00	; 0
    5438:	f0 e0       	ldi	r31, 0x00	; 0
    543a:	cf 01       	movw	r24, r30
    543c:	df 91       	pop	r29
    543e:	cf 91       	pop	r28
    5440:	08 95       	ret

00005442 <free>:
    5442:	cf 93       	push	r28
    5444:	df 93       	push	r29
    5446:	00 97       	sbiw	r24, 0x00	; 0
    5448:	09 f4       	brne	.+2      	; 0x544c <free+0xa>
    544a:	50 c0       	rjmp	.+160    	; 0x54ec <free+0xaa>
    544c:	ec 01       	movw	r28, r24
    544e:	22 97       	sbiw	r28, 0x02	; 2
    5450:	1b 82       	std	Y+3, r1	; 0x03
    5452:	1a 82       	std	Y+2, r1	; 0x02
    5454:	a0 91 e5 04 	lds	r26, 0x04E5
    5458:	b0 91 e6 04 	lds	r27, 0x04E6
    545c:	10 97       	sbiw	r26, 0x00	; 0
    545e:	09 f1       	breq	.+66     	; 0x54a2 <free+0x60>
    5460:	40 e0       	ldi	r20, 0x00	; 0
    5462:	50 e0       	ldi	r21, 0x00	; 0
    5464:	ac 17       	cp	r26, r28
    5466:	bd 07       	cpc	r27, r29
    5468:	08 f1       	brcs	.+66     	; 0x54ac <free+0x6a>
    546a:	bb 83       	std	Y+3, r27	; 0x03
    546c:	aa 83       	std	Y+2, r26	; 0x02
    546e:	fe 01       	movw	r30, r28
    5470:	21 91       	ld	r18, Z+
    5472:	31 91       	ld	r19, Z+
    5474:	e2 0f       	add	r30, r18
    5476:	f3 1f       	adc	r31, r19
    5478:	ae 17       	cp	r26, r30
    547a:	bf 07       	cpc	r27, r31
    547c:	79 f4       	brne	.+30     	; 0x549c <free+0x5a>
    547e:	8d 91       	ld	r24, X+
    5480:	9c 91       	ld	r25, X
    5482:	11 97       	sbiw	r26, 0x01	; 1
    5484:	28 0f       	add	r18, r24
    5486:	39 1f       	adc	r19, r25
    5488:	2e 5f       	subi	r18, 0xFE	; 254
    548a:	3f 4f       	sbci	r19, 0xFF	; 255
    548c:	39 83       	std	Y+1, r19	; 0x01
    548e:	28 83       	st	Y, r18
    5490:	12 96       	adiw	r26, 0x02	; 2
    5492:	8d 91       	ld	r24, X+
    5494:	9c 91       	ld	r25, X
    5496:	13 97       	sbiw	r26, 0x03	; 3
    5498:	9b 83       	std	Y+3, r25	; 0x03
    549a:	8a 83       	std	Y+2, r24	; 0x02
    549c:	41 15       	cp	r20, r1
    549e:	51 05       	cpc	r21, r1
    54a0:	71 f4       	brne	.+28     	; 0x54be <free+0x7c>
    54a2:	d0 93 e6 04 	sts	0x04E6, r29
    54a6:	c0 93 e5 04 	sts	0x04E5, r28
    54aa:	20 c0       	rjmp	.+64     	; 0x54ec <free+0xaa>
    54ac:	12 96       	adiw	r26, 0x02	; 2
    54ae:	8d 91       	ld	r24, X+
    54b0:	9c 91       	ld	r25, X
    54b2:	13 97       	sbiw	r26, 0x03	; 3
    54b4:	ad 01       	movw	r20, r26
    54b6:	00 97       	sbiw	r24, 0x00	; 0
    54b8:	11 f0       	breq	.+4      	; 0x54be <free+0x7c>
    54ba:	dc 01       	movw	r26, r24
    54bc:	d3 cf       	rjmp	.-90     	; 0x5464 <free+0x22>
    54be:	fa 01       	movw	r30, r20
    54c0:	d3 83       	std	Z+3, r29	; 0x03
    54c2:	c2 83       	std	Z+2, r28	; 0x02
    54c4:	21 91       	ld	r18, Z+
    54c6:	31 91       	ld	r19, Z+
    54c8:	e2 0f       	add	r30, r18
    54ca:	f3 1f       	adc	r31, r19
    54cc:	ce 17       	cp	r28, r30
    54ce:	df 07       	cpc	r29, r31
    54d0:	69 f4       	brne	.+26     	; 0x54ec <free+0xaa>
    54d2:	88 81       	ld	r24, Y
    54d4:	99 81       	ldd	r25, Y+1	; 0x01
    54d6:	28 0f       	add	r18, r24
    54d8:	39 1f       	adc	r19, r25
    54da:	2e 5f       	subi	r18, 0xFE	; 254
    54dc:	3f 4f       	sbci	r19, 0xFF	; 255
    54de:	fa 01       	movw	r30, r20
    54e0:	31 83       	std	Z+1, r19	; 0x01
    54e2:	20 83       	st	Z, r18
    54e4:	8a 81       	ldd	r24, Y+2	; 0x02
    54e6:	9b 81       	ldd	r25, Y+3	; 0x03
    54e8:	93 83       	std	Z+3, r25	; 0x03
    54ea:	82 83       	std	Z+2, r24	; 0x02
    54ec:	df 91       	pop	r29
    54ee:	cf 91       	pop	r28
    54f0:	08 95       	ret

000054f2 <do_rand>:
    54f2:	a0 e0       	ldi	r26, 0x00	; 0
    54f4:	b0 e0       	ldi	r27, 0x00	; 0
    54f6:	ee e7       	ldi	r30, 0x7E	; 126
    54f8:	fa e2       	ldi	r31, 0x2A	; 42
    54fa:	b3 ce       	rjmp	.-666    	; 0x5262 <__prologue_saves__+0x10>
    54fc:	ec 01       	movw	r28, r24
    54fe:	a8 80       	ld	r10, Y
    5500:	b9 80       	ldd	r11, Y+1	; 0x01
    5502:	ca 80       	ldd	r12, Y+2	; 0x02
    5504:	db 80       	ldd	r13, Y+3	; 0x03
    5506:	a1 14       	cp	r10, r1
    5508:	b1 04       	cpc	r11, r1
    550a:	c1 04       	cpc	r12, r1
    550c:	d1 04       	cpc	r13, r1
    550e:	41 f4       	brne	.+16     	; 0x5520 <do_rand+0x2e>
    5510:	84 e2       	ldi	r24, 0x24	; 36
    5512:	a8 2e       	mov	r10, r24
    5514:	89 ed       	ldi	r24, 0xD9	; 217
    5516:	b8 2e       	mov	r11, r24
    5518:	8b e5       	ldi	r24, 0x5B	; 91
    551a:	c8 2e       	mov	r12, r24
    551c:	87 e0       	ldi	r24, 0x07	; 7
    551e:	d8 2e       	mov	r13, r24
    5520:	c6 01       	movw	r24, r12
    5522:	b5 01       	movw	r22, r10
    5524:	2d e1       	ldi	r18, 0x1D	; 29
    5526:	33 ef       	ldi	r19, 0xF3	; 243
    5528:	41 e0       	ldi	r20, 0x01	; 1
    552a:	50 e0       	ldi	r21, 0x00	; 0
    552c:	fa d1       	rcall	.+1012   	; 0x5922 <__divmodsi4>
    552e:	27 ea       	ldi	r18, 0xA7	; 167
    5530:	31 e4       	ldi	r19, 0x41	; 65
    5532:	40 e0       	ldi	r20, 0x00	; 0
    5534:	50 e0       	ldi	r21, 0x00	; 0
    5536:	39 de       	rcall	.-910    	; 0x51aa <__mulsi3>
    5538:	7b 01       	movw	r14, r22
    553a:	8c 01       	movw	r16, r24
    553c:	c6 01       	movw	r24, r12
    553e:	b5 01       	movw	r22, r10
    5540:	2d e1       	ldi	r18, 0x1D	; 29
    5542:	33 ef       	ldi	r19, 0xF3	; 243
    5544:	41 e0       	ldi	r20, 0x01	; 1
    5546:	50 e0       	ldi	r21, 0x00	; 0
    5548:	ec d1       	rcall	.+984    	; 0x5922 <__divmodsi4>
    554a:	ca 01       	movw	r24, r20
    554c:	b9 01       	movw	r22, r18
    554e:	2c ee       	ldi	r18, 0xEC	; 236
    5550:	34 ef       	ldi	r19, 0xF4	; 244
    5552:	4f ef       	ldi	r20, 0xFF	; 255
    5554:	5f ef       	ldi	r21, 0xFF	; 255
    5556:	29 de       	rcall	.-942    	; 0x51aa <__mulsi3>
    5558:	6e 0d       	add	r22, r14
    555a:	7f 1d       	adc	r23, r15
    555c:	80 1f       	adc	r24, r16
    555e:	91 1f       	adc	r25, r17
    5560:	97 ff       	sbrs	r25, 7
    5562:	04 c0       	rjmp	.+8      	; 0x556c <do_rand+0x7a>
    5564:	61 50       	subi	r22, 0x01	; 1
    5566:	70 40       	sbci	r23, 0x00	; 0
    5568:	80 40       	sbci	r24, 0x00	; 0
    556a:	90 48       	sbci	r25, 0x80	; 128
    556c:	68 83       	st	Y, r22
    556e:	79 83       	std	Y+1, r23	; 0x01
    5570:	8a 83       	std	Y+2, r24	; 0x02
    5572:	9b 83       	std	Y+3, r25	; 0x03
    5574:	9b 01       	movw	r18, r22
    5576:	3f 77       	andi	r19, 0x7F	; 127
    5578:	c9 01       	movw	r24, r18
    557a:	cd b7       	in	r28, 0x3d	; 61
    557c:	de b7       	in	r29, 0x3e	; 62
    557e:	ea e0       	ldi	r30, 0x0A	; 10
    5580:	8c ce       	rjmp	.-744    	; 0x529a <__epilogue_restores__+0x10>

00005582 <rand_r>:
    5582:	b7 df       	rcall	.-146    	; 0x54f2 <do_rand>
    5584:	08 95       	ret

00005586 <rand>:
    5586:	89 ee       	ldi	r24, 0xE9	; 233
    5588:	91 e0       	ldi	r25, 0x01	; 1
    558a:	b3 df       	rcall	.-154    	; 0x54f2 <do_rand>
    558c:	08 95       	ret

0000558e <srand>:
    558e:	a0 e0       	ldi	r26, 0x00	; 0
    5590:	b0 e0       	ldi	r27, 0x00	; 0
    5592:	80 93 e9 01 	sts	0x01E9, r24
    5596:	90 93 ea 01 	sts	0x01EA, r25
    559a:	a0 93 eb 01 	sts	0x01EB, r26
    559e:	b0 93 ec 01 	sts	0x01EC, r27
    55a2:	08 95       	ret

000055a4 <__ftoa_engine>:
    55a4:	28 30       	cpi	r18, 0x08	; 8
    55a6:	08 f0       	brcs	.+2      	; 0x55aa <__ftoa_engine+0x6>
    55a8:	27 e0       	ldi	r18, 0x07	; 7
    55aa:	33 27       	eor	r19, r19
    55ac:	da 01       	movw	r26, r20
    55ae:	99 0f       	add	r25, r25
    55b0:	31 1d       	adc	r19, r1
    55b2:	87 fd       	sbrc	r24, 7
    55b4:	91 60       	ori	r25, 0x01	; 1
    55b6:	00 96       	adiw	r24, 0x00	; 0
    55b8:	61 05       	cpc	r22, r1
    55ba:	71 05       	cpc	r23, r1
    55bc:	39 f4       	brne	.+14     	; 0x55cc <__ftoa_engine+0x28>
    55be:	32 60       	ori	r19, 0x02	; 2
    55c0:	2e 5f       	subi	r18, 0xFE	; 254
    55c2:	3d 93       	st	X+, r19
    55c4:	30 e3       	ldi	r19, 0x30	; 48
    55c6:	2a 95       	dec	r18
    55c8:	e1 f7       	brne	.-8      	; 0x55c2 <__ftoa_engine+0x1e>
    55ca:	08 95       	ret
    55cc:	9f 3f       	cpi	r25, 0xFF	; 255
    55ce:	30 f0       	brcs	.+12     	; 0x55dc <__ftoa_engine+0x38>
    55d0:	80 38       	cpi	r24, 0x80	; 128
    55d2:	71 05       	cpc	r23, r1
    55d4:	61 05       	cpc	r22, r1
    55d6:	09 f0       	breq	.+2      	; 0x55da <__ftoa_engine+0x36>
    55d8:	3c 5f       	subi	r19, 0xFC	; 252
    55da:	3c 5f       	subi	r19, 0xFC	; 252
    55dc:	3d 93       	st	X+, r19
    55de:	91 30       	cpi	r25, 0x01	; 1
    55e0:	08 f0       	brcs	.+2      	; 0x55e4 <__ftoa_engine+0x40>
    55e2:	80 68       	ori	r24, 0x80	; 128
    55e4:	91 1d       	adc	r25, r1
    55e6:	df 93       	push	r29
    55e8:	cf 93       	push	r28
    55ea:	1f 93       	push	r17
    55ec:	0f 93       	push	r16
    55ee:	ff 92       	push	r15
    55f0:	ef 92       	push	r14
    55f2:	19 2f       	mov	r17, r25
    55f4:	98 7f       	andi	r25, 0xF8	; 248
    55f6:	96 95       	lsr	r25
    55f8:	e9 2f       	mov	r30, r25
    55fa:	96 95       	lsr	r25
    55fc:	96 95       	lsr	r25
    55fe:	e9 0f       	add	r30, r25
    5600:	ff 27       	eor	r31, r31
    5602:	ef 53       	subi	r30, 0x3F	; 63
    5604:	fa 4f       	sbci	r31, 0xFA	; 250
    5606:	99 27       	eor	r25, r25
    5608:	33 27       	eor	r19, r19
    560a:	ee 24       	eor	r14, r14
    560c:	ff 24       	eor	r15, r15
    560e:	a7 01       	movw	r20, r14
    5610:	e7 01       	movw	r28, r14
    5612:	05 90       	lpm	r0, Z+
    5614:	08 94       	sec
    5616:	07 94       	ror	r0
    5618:	28 f4       	brcc	.+10     	; 0x5624 <__ftoa_engine+0x80>
    561a:	36 0f       	add	r19, r22
    561c:	e7 1e       	adc	r14, r23
    561e:	f8 1e       	adc	r15, r24
    5620:	49 1f       	adc	r20, r25
    5622:	51 1d       	adc	r21, r1
    5624:	66 0f       	add	r22, r22
    5626:	77 1f       	adc	r23, r23
    5628:	88 1f       	adc	r24, r24
    562a:	99 1f       	adc	r25, r25
    562c:	06 94       	lsr	r0
    562e:	a1 f7       	brne	.-24     	; 0x5618 <__ftoa_engine+0x74>
    5630:	05 90       	lpm	r0, Z+
    5632:	07 94       	ror	r0
    5634:	28 f4       	brcc	.+10     	; 0x5640 <__ftoa_engine+0x9c>
    5636:	e7 0e       	add	r14, r23
    5638:	f8 1e       	adc	r15, r24
    563a:	49 1f       	adc	r20, r25
    563c:	56 1f       	adc	r21, r22
    563e:	c1 1d       	adc	r28, r1
    5640:	77 0f       	add	r23, r23
    5642:	88 1f       	adc	r24, r24
    5644:	99 1f       	adc	r25, r25
    5646:	66 1f       	adc	r22, r22
    5648:	06 94       	lsr	r0
    564a:	a1 f7       	brne	.-24     	; 0x5634 <__ftoa_engine+0x90>
    564c:	05 90       	lpm	r0, Z+
    564e:	07 94       	ror	r0
    5650:	28 f4       	brcc	.+10     	; 0x565c <__ftoa_engine+0xb8>
    5652:	f8 0e       	add	r15, r24
    5654:	49 1f       	adc	r20, r25
    5656:	56 1f       	adc	r21, r22
    5658:	c7 1f       	adc	r28, r23
    565a:	d1 1d       	adc	r29, r1
    565c:	88 0f       	add	r24, r24
    565e:	99 1f       	adc	r25, r25
    5660:	66 1f       	adc	r22, r22
    5662:	77 1f       	adc	r23, r23
    5664:	06 94       	lsr	r0
    5666:	a1 f7       	brne	.-24     	; 0x5650 <__ftoa_engine+0xac>
    5668:	05 90       	lpm	r0, Z+
    566a:	07 94       	ror	r0
    566c:	20 f4       	brcc	.+8      	; 0x5676 <__ftoa_engine+0xd2>
    566e:	49 0f       	add	r20, r25
    5670:	56 1f       	adc	r21, r22
    5672:	c7 1f       	adc	r28, r23
    5674:	d8 1f       	adc	r29, r24
    5676:	99 0f       	add	r25, r25
    5678:	66 1f       	adc	r22, r22
    567a:	77 1f       	adc	r23, r23
    567c:	88 1f       	adc	r24, r24
    567e:	06 94       	lsr	r0
    5680:	a9 f7       	brne	.-22     	; 0x566c <__ftoa_engine+0xc8>
    5682:	84 91       	lpm	r24, Z+
    5684:	10 95       	com	r17
    5686:	17 70       	andi	r17, 0x07	; 7
    5688:	41 f0       	breq	.+16     	; 0x569a <__ftoa_engine+0xf6>
    568a:	d6 95       	lsr	r29
    568c:	c7 95       	ror	r28
    568e:	57 95       	ror	r21
    5690:	47 95       	ror	r20
    5692:	f7 94       	ror	r15
    5694:	e7 94       	ror	r14
    5696:	1a 95       	dec	r17
    5698:	c1 f7       	brne	.-16     	; 0x568a <__ftoa_engine+0xe6>
    569a:	e7 e6       	ldi	r30, 0x67	; 103
    569c:	f5 e0       	ldi	r31, 0x05	; 5
    569e:	68 94       	set
    56a0:	15 90       	lpm	r1, Z+
    56a2:	15 91       	lpm	r17, Z+
    56a4:	35 91       	lpm	r19, Z+
    56a6:	65 91       	lpm	r22, Z+
    56a8:	95 91       	lpm	r25, Z+
    56aa:	05 90       	lpm	r0, Z+
    56ac:	7f e2       	ldi	r23, 0x2F	; 47
    56ae:	73 95       	inc	r23
    56b0:	e1 18       	sub	r14, r1
    56b2:	f1 0a       	sbc	r15, r17
    56b4:	43 0b       	sbc	r20, r19
    56b6:	56 0b       	sbc	r21, r22
    56b8:	c9 0b       	sbc	r28, r25
    56ba:	d0 09       	sbc	r29, r0
    56bc:	c0 f7       	brcc	.-16     	; 0x56ae <__ftoa_engine+0x10a>
    56be:	e1 0c       	add	r14, r1
    56c0:	f1 1e       	adc	r15, r17
    56c2:	43 1f       	adc	r20, r19
    56c4:	56 1f       	adc	r21, r22
    56c6:	c9 1f       	adc	r28, r25
    56c8:	d0 1d       	adc	r29, r0
    56ca:	7e f4       	brtc	.+30     	; 0x56ea <__ftoa_engine+0x146>
    56cc:	70 33       	cpi	r23, 0x30	; 48
    56ce:	11 f4       	brne	.+4      	; 0x56d4 <__ftoa_engine+0x130>
    56d0:	8a 95       	dec	r24
    56d2:	e6 cf       	rjmp	.-52     	; 0x56a0 <__ftoa_engine+0xfc>
    56d4:	e8 94       	clt
    56d6:	01 50       	subi	r16, 0x01	; 1
    56d8:	30 f0       	brcs	.+12     	; 0x56e6 <__ftoa_engine+0x142>
    56da:	08 0f       	add	r16, r24
    56dc:	0a f4       	brpl	.+2      	; 0x56e0 <__ftoa_engine+0x13c>
    56de:	00 27       	eor	r16, r16
    56e0:	02 17       	cp	r16, r18
    56e2:	08 f4       	brcc	.+2      	; 0x56e6 <__ftoa_engine+0x142>
    56e4:	20 2f       	mov	r18, r16
    56e6:	23 95       	inc	r18
    56e8:	02 2f       	mov	r16, r18
    56ea:	7a 33       	cpi	r23, 0x3A	; 58
    56ec:	28 f0       	brcs	.+10     	; 0x56f8 <__ftoa_engine+0x154>
    56ee:	79 e3       	ldi	r23, 0x39	; 57
    56f0:	7d 93       	st	X+, r23
    56f2:	2a 95       	dec	r18
    56f4:	e9 f7       	brne	.-6      	; 0x56f0 <__ftoa_engine+0x14c>
    56f6:	10 c0       	rjmp	.+32     	; 0x5718 <__ftoa_engine+0x174>
    56f8:	7d 93       	st	X+, r23
    56fa:	2a 95       	dec	r18
    56fc:	89 f6       	brne	.-94     	; 0x56a0 <__ftoa_engine+0xfc>
    56fe:	06 94       	lsr	r0
    5700:	97 95       	ror	r25
    5702:	67 95       	ror	r22
    5704:	37 95       	ror	r19
    5706:	17 95       	ror	r17
    5708:	17 94       	ror	r1
    570a:	e1 18       	sub	r14, r1
    570c:	f1 0a       	sbc	r15, r17
    570e:	43 0b       	sbc	r20, r19
    5710:	56 0b       	sbc	r21, r22
    5712:	c9 0b       	sbc	r28, r25
    5714:	d0 09       	sbc	r29, r0
    5716:	98 f0       	brcs	.+38     	; 0x573e <__ftoa_engine+0x19a>
    5718:	23 95       	inc	r18
    571a:	7e 91       	ld	r23, -X
    571c:	73 95       	inc	r23
    571e:	7a 33       	cpi	r23, 0x3A	; 58
    5720:	08 f0       	brcs	.+2      	; 0x5724 <__ftoa_engine+0x180>
    5722:	70 e3       	ldi	r23, 0x30	; 48
    5724:	7c 93       	st	X, r23
    5726:	20 13       	cpse	r18, r16
    5728:	b8 f7       	brcc	.-18     	; 0x5718 <__ftoa_engine+0x174>
    572a:	7e 91       	ld	r23, -X
    572c:	70 61       	ori	r23, 0x10	; 16
    572e:	7d 93       	st	X+, r23
    5730:	30 f0       	brcs	.+12     	; 0x573e <__ftoa_engine+0x19a>
    5732:	83 95       	inc	r24
    5734:	71 e3       	ldi	r23, 0x31	; 49
    5736:	7d 93       	st	X+, r23
    5738:	70 e3       	ldi	r23, 0x30	; 48
    573a:	2a 95       	dec	r18
    573c:	e1 f7       	brne	.-8      	; 0x5736 <__ftoa_engine+0x192>
    573e:	11 24       	eor	r1, r1
    5740:	ef 90       	pop	r14
    5742:	ff 90       	pop	r15
    5744:	0f 91       	pop	r16
    5746:	1f 91       	pop	r17
    5748:	cf 91       	pop	r28
    574a:	df 91       	pop	r29
    574c:	99 27       	eor	r25, r25
    574e:	87 fd       	sbrc	r24, 7
    5750:	90 95       	com	r25
    5752:	08 95       	ret

00005754 <strnlen_P>:
    5754:	fc 01       	movw	r30, r24
    5756:	05 90       	lpm	r0, Z+
    5758:	61 50       	subi	r22, 0x01	; 1
    575a:	70 40       	sbci	r23, 0x00	; 0
    575c:	01 10       	cpse	r0, r1
    575e:	d8 f7       	brcc	.-10     	; 0x5756 <strnlen_P+0x2>
    5760:	80 95       	com	r24
    5762:	90 95       	com	r25
    5764:	8e 0f       	add	r24, r30
    5766:	9f 1f       	adc	r25, r31
    5768:	08 95       	ret

0000576a <strnlen>:
    576a:	fc 01       	movw	r30, r24
    576c:	61 50       	subi	r22, 0x01	; 1
    576e:	70 40       	sbci	r23, 0x00	; 0
    5770:	01 90       	ld	r0, Z+
    5772:	01 10       	cpse	r0, r1
    5774:	d8 f7       	brcc	.-10     	; 0x576c <strnlen+0x2>
    5776:	80 95       	com	r24
    5778:	90 95       	com	r25
    577a:	8e 0f       	add	r24, r30
    577c:	9f 1f       	adc	r25, r31
    577e:	08 95       	ret

00005780 <fputc>:
    5780:	0f 93       	push	r16
    5782:	1f 93       	push	r17
    5784:	cf 93       	push	r28
    5786:	df 93       	push	r29
    5788:	8c 01       	movw	r16, r24
    578a:	eb 01       	movw	r28, r22
    578c:	8b 81       	ldd	r24, Y+3	; 0x03
    578e:	81 ff       	sbrs	r24, 1
    5790:	1b c0       	rjmp	.+54     	; 0x57c8 <fputc+0x48>
    5792:	82 ff       	sbrs	r24, 2
    5794:	0d c0       	rjmp	.+26     	; 0x57b0 <fputc+0x30>
    5796:	2e 81       	ldd	r18, Y+6	; 0x06
    5798:	3f 81       	ldd	r19, Y+7	; 0x07
    579a:	8c 81       	ldd	r24, Y+4	; 0x04
    579c:	9d 81       	ldd	r25, Y+5	; 0x05
    579e:	28 17       	cp	r18, r24
    57a0:	39 07       	cpc	r19, r25
    57a2:	64 f4       	brge	.+24     	; 0x57bc <fputc+0x3c>
    57a4:	e8 81       	ld	r30, Y
    57a6:	f9 81       	ldd	r31, Y+1	; 0x01
    57a8:	01 93       	st	Z+, r16
    57aa:	f9 83       	std	Y+1, r31	; 0x01
    57ac:	e8 83       	st	Y, r30
    57ae:	06 c0       	rjmp	.+12     	; 0x57bc <fputc+0x3c>
    57b0:	e8 85       	ldd	r30, Y+8	; 0x08
    57b2:	f9 85       	ldd	r31, Y+9	; 0x09
    57b4:	80 2f       	mov	r24, r16
    57b6:	09 95       	icall
    57b8:	89 2b       	or	r24, r25
    57ba:	31 f4       	brne	.+12     	; 0x57c8 <fputc+0x48>
    57bc:	8e 81       	ldd	r24, Y+6	; 0x06
    57be:	9f 81       	ldd	r25, Y+7	; 0x07
    57c0:	01 96       	adiw	r24, 0x01	; 1
    57c2:	9f 83       	std	Y+7, r25	; 0x07
    57c4:	8e 83       	std	Y+6, r24	; 0x06
    57c6:	02 c0       	rjmp	.+4      	; 0x57cc <fputc+0x4c>
    57c8:	0f ef       	ldi	r16, 0xFF	; 255
    57ca:	1f ef       	ldi	r17, 0xFF	; 255
    57cc:	c8 01       	movw	r24, r16
    57ce:	df 91       	pop	r29
    57d0:	cf 91       	pop	r28
    57d2:	1f 91       	pop	r17
    57d4:	0f 91       	pop	r16
    57d6:	08 95       	ret

000057d8 <printf>:
    57d8:	a0 e0       	ldi	r26, 0x00	; 0
    57da:	b0 e0       	ldi	r27, 0x00	; 0
    57dc:	e1 ef       	ldi	r30, 0xF1	; 241
    57de:	fb e2       	ldi	r31, 0x2B	; 43
    57e0:	48 cd       	rjmp	.-1392   	; 0x5272 <__prologue_saves__+0x20>
    57e2:	fe 01       	movw	r30, r28
    57e4:	35 96       	adiw	r30, 0x05	; 5
    57e6:	61 91       	ld	r22, Z+
    57e8:	71 91       	ld	r23, Z+
    57ea:	80 91 e9 04 	lds	r24, 0x04E9
    57ee:	90 91 ea 04 	lds	r25, 0x04EA
    57f2:	af 01       	movw	r20, r30
    57f4:	72 d9       	rcall	.-3356   	; 0x4ada <vfprintf>
    57f6:	20 96       	adiw	r28, 0x00	; 0
    57f8:	e2 e0       	ldi	r30, 0x02	; 2
    57fa:	57 cd       	rjmp	.-1362   	; 0x52aa <__epilogue_restores__+0x20>

000057fc <puts>:
    57fc:	0f 93       	push	r16
    57fe:	1f 93       	push	r17
    5800:	cf 93       	push	r28
    5802:	df 93       	push	r29
    5804:	8c 01       	movw	r16, r24
    5806:	e0 91 e9 04 	lds	r30, 0x04E9
    580a:	f0 91 ea 04 	lds	r31, 0x04EA
    580e:	83 81       	ldd	r24, Z+3	; 0x03
    5810:	81 ff       	sbrs	r24, 1
    5812:	21 c0       	rjmp	.+66     	; 0x5856 <puts+0x5a>
    5814:	c0 e0       	ldi	r28, 0x00	; 0
    5816:	d0 e0       	ldi	r29, 0x00	; 0
    5818:	0d c0       	rjmp	.+26     	; 0x5834 <puts+0x38>
    581a:	e0 91 e9 04 	lds	r30, 0x04E9
    581e:	f0 91 ea 04 	lds	r31, 0x04EA
    5822:	20 85       	ldd	r18, Z+8	; 0x08
    5824:	31 85       	ldd	r19, Z+9	; 0x09
    5826:	bf 01       	movw	r22, r30
    5828:	f9 01       	movw	r30, r18
    582a:	09 95       	icall
    582c:	89 2b       	or	r24, r25
    582e:	11 f0       	breq	.+4      	; 0x5834 <puts+0x38>
    5830:	cf ef       	ldi	r28, 0xFF	; 255
    5832:	df ef       	ldi	r29, 0xFF	; 255
    5834:	f8 01       	movw	r30, r16
    5836:	81 91       	ld	r24, Z+
    5838:	8f 01       	movw	r16, r30
    583a:	88 23       	and	r24, r24
    583c:	71 f7       	brne	.-36     	; 0x581a <puts+0x1e>
    583e:	e0 91 e9 04 	lds	r30, 0x04E9
    5842:	f0 91 ea 04 	lds	r31, 0x04EA
    5846:	20 85       	ldd	r18, Z+8	; 0x08
    5848:	31 85       	ldd	r19, Z+9	; 0x09
    584a:	8a e0       	ldi	r24, 0x0A	; 10
    584c:	bf 01       	movw	r22, r30
    584e:	f9 01       	movw	r30, r18
    5850:	09 95       	icall
    5852:	89 2b       	or	r24, r25
    5854:	11 f0       	breq	.+4      	; 0x585a <puts+0x5e>
    5856:	cf ef       	ldi	r28, 0xFF	; 255
    5858:	df ef       	ldi	r29, 0xFF	; 255
    585a:	ce 01       	movw	r24, r28
    585c:	df 91       	pop	r29
    585e:	cf 91       	pop	r28
    5860:	1f 91       	pop	r17
    5862:	0f 91       	pop	r16
    5864:	08 95       	ret

00005866 <__ultoa_invert>:
    5866:	fa 01       	movw	r30, r20
    5868:	aa 27       	eor	r26, r26
    586a:	28 30       	cpi	r18, 0x08	; 8
    586c:	51 f1       	breq	.+84     	; 0x58c2 <__ultoa_invert+0x5c>
    586e:	20 31       	cpi	r18, 0x10	; 16
    5870:	81 f1       	breq	.+96     	; 0x58d2 <__ultoa_invert+0x6c>
    5872:	e8 94       	clt
    5874:	6f 93       	push	r22
    5876:	6e 7f       	andi	r22, 0xFE	; 254
    5878:	6e 5f       	subi	r22, 0xFE	; 254
    587a:	7f 4f       	sbci	r23, 0xFF	; 255
    587c:	8f 4f       	sbci	r24, 0xFF	; 255
    587e:	9f 4f       	sbci	r25, 0xFF	; 255
    5880:	af 4f       	sbci	r26, 0xFF	; 255
    5882:	b1 e0       	ldi	r27, 0x01	; 1
    5884:	3e d0       	rcall	.+124    	; 0x5902 <__ultoa_invert+0x9c>
    5886:	b4 e0       	ldi	r27, 0x04	; 4
    5888:	3c d0       	rcall	.+120    	; 0x5902 <__ultoa_invert+0x9c>
    588a:	67 0f       	add	r22, r23
    588c:	78 1f       	adc	r23, r24
    588e:	89 1f       	adc	r24, r25
    5890:	9a 1f       	adc	r25, r26
    5892:	a1 1d       	adc	r26, r1
    5894:	68 0f       	add	r22, r24
    5896:	79 1f       	adc	r23, r25
    5898:	8a 1f       	adc	r24, r26
    589a:	91 1d       	adc	r25, r1
    589c:	a1 1d       	adc	r26, r1
    589e:	6a 0f       	add	r22, r26
    58a0:	71 1d       	adc	r23, r1
    58a2:	81 1d       	adc	r24, r1
    58a4:	91 1d       	adc	r25, r1
    58a6:	a1 1d       	adc	r26, r1
    58a8:	20 d0       	rcall	.+64     	; 0x58ea <__ultoa_invert+0x84>
    58aa:	09 f4       	brne	.+2      	; 0x58ae <__ultoa_invert+0x48>
    58ac:	68 94       	set
    58ae:	3f 91       	pop	r19
    58b0:	2a e0       	ldi	r18, 0x0A	; 10
    58b2:	26 9f       	mul	r18, r22
    58b4:	11 24       	eor	r1, r1
    58b6:	30 19       	sub	r19, r0
    58b8:	30 5d       	subi	r19, 0xD0	; 208
    58ba:	31 93       	st	Z+, r19
    58bc:	de f6       	brtc	.-74     	; 0x5874 <__ultoa_invert+0xe>
    58be:	cf 01       	movw	r24, r30
    58c0:	08 95       	ret
    58c2:	46 2f       	mov	r20, r22
    58c4:	47 70       	andi	r20, 0x07	; 7
    58c6:	40 5d       	subi	r20, 0xD0	; 208
    58c8:	41 93       	st	Z+, r20
    58ca:	b3 e0       	ldi	r27, 0x03	; 3
    58cc:	0f d0       	rcall	.+30     	; 0x58ec <__ultoa_invert+0x86>
    58ce:	c9 f7       	brne	.-14     	; 0x58c2 <__ultoa_invert+0x5c>
    58d0:	f6 cf       	rjmp	.-20     	; 0x58be <__ultoa_invert+0x58>
    58d2:	46 2f       	mov	r20, r22
    58d4:	4f 70       	andi	r20, 0x0F	; 15
    58d6:	40 5d       	subi	r20, 0xD0	; 208
    58d8:	4a 33       	cpi	r20, 0x3A	; 58
    58da:	18 f0       	brcs	.+6      	; 0x58e2 <__ultoa_invert+0x7c>
    58dc:	49 5d       	subi	r20, 0xD9	; 217
    58de:	31 fd       	sbrc	r19, 1
    58e0:	40 52       	subi	r20, 0x20	; 32
    58e2:	41 93       	st	Z+, r20
    58e4:	02 d0       	rcall	.+4      	; 0x58ea <__ultoa_invert+0x84>
    58e6:	a9 f7       	brne	.-22     	; 0x58d2 <__ultoa_invert+0x6c>
    58e8:	ea cf       	rjmp	.-44     	; 0x58be <__ultoa_invert+0x58>
    58ea:	b4 e0       	ldi	r27, 0x04	; 4
    58ec:	a6 95       	lsr	r26
    58ee:	97 95       	ror	r25
    58f0:	87 95       	ror	r24
    58f2:	77 95       	ror	r23
    58f4:	67 95       	ror	r22
    58f6:	ba 95       	dec	r27
    58f8:	c9 f7       	brne	.-14     	; 0x58ec <__ultoa_invert+0x86>
    58fa:	00 97       	sbiw	r24, 0x00	; 0
    58fc:	61 05       	cpc	r22, r1
    58fe:	71 05       	cpc	r23, r1
    5900:	08 95       	ret
    5902:	9b 01       	movw	r18, r22
    5904:	ac 01       	movw	r20, r24
    5906:	0a 2e       	mov	r0, r26
    5908:	06 94       	lsr	r0
    590a:	57 95       	ror	r21
    590c:	47 95       	ror	r20
    590e:	37 95       	ror	r19
    5910:	27 95       	ror	r18
    5912:	ba 95       	dec	r27
    5914:	c9 f7       	brne	.-14     	; 0x5908 <__ultoa_invert+0xa2>
    5916:	62 0f       	add	r22, r18
    5918:	73 1f       	adc	r23, r19
    591a:	84 1f       	adc	r24, r20
    591c:	95 1f       	adc	r25, r21
    591e:	a0 1d       	adc	r26, r0
    5920:	08 95       	ret

00005922 <__divmodsi4>:
    5922:	97 fb       	bst	r25, 7
    5924:	09 2e       	mov	r0, r25
    5926:	05 26       	eor	r0, r21
    5928:	0e d0       	rcall	.+28     	; 0x5946 <__divmodsi4_neg1>
    592a:	57 fd       	sbrc	r21, 7
    592c:	04 d0       	rcall	.+8      	; 0x5936 <__divmodsi4_neg2>
    592e:	6f dc       	rcall	.-1826   	; 0x520e <__udivmodsi4>
    5930:	0a d0       	rcall	.+20     	; 0x5946 <__divmodsi4_neg1>
    5932:	00 1c       	adc	r0, r0
    5934:	38 f4       	brcc	.+14     	; 0x5944 <__divmodsi4_exit>

00005936 <__divmodsi4_neg2>:
    5936:	50 95       	com	r21
    5938:	40 95       	com	r20
    593a:	30 95       	com	r19
    593c:	21 95       	neg	r18
    593e:	3f 4f       	sbci	r19, 0xFF	; 255
    5940:	4f 4f       	sbci	r20, 0xFF	; 255
    5942:	5f 4f       	sbci	r21, 0xFF	; 255

00005944 <__divmodsi4_exit>:
    5944:	08 95       	ret

00005946 <__divmodsi4_neg1>:
    5946:	f6 f7       	brtc	.-4      	; 0x5944 <__divmodsi4_exit>
    5948:	90 95       	com	r25
    594a:	80 95       	com	r24
    594c:	70 95       	com	r23
    594e:	61 95       	neg	r22
    5950:	7f 4f       	sbci	r23, 0xFF	; 255
    5952:	8f 4f       	sbci	r24, 0xFF	; 255
    5954:	9f 4f       	sbci	r25, 0xFF	; 255
    5956:	08 95       	ret

00005958 <_exit>:
    5958:	f8 94       	cli

0000595a <__stop_program>:
    595a:	ff cf       	rjmp	.-2      	; 0x595a <__stop_program>
