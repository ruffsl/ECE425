
WallFollowing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000128  00800100  000056aa  0000573e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000056aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002f7  00800228  00800228  00005866  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  00005866  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000287  00000000  00000000  000058a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ea7  00000000  00000000  00005b2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002bd  00000000  00000000  000069d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000bf7  00000000  00000000  00006c91  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c0  00000000  00000000  00007888  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000009d9  00000000  00000000  00007a48  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a0f  00000000  00000000  00008421  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 31 03 	jmp	0x662	; 0x662 <__ctors_end>
       4:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       8:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      10:	0c 94 f4 16 	jmp	0x2de8	; 0x2de8 <__vector_4>
      14:	0c 94 1d 17 	jmp	0x2e3a	; 0x2e3a <__vector_5>
      18:	0c 94 46 17 	jmp	0x2e8c	; 0x2e8c <__vector_6>
      1c:	0c 94 6f 17 	jmp	0x2ede	; 0x2ede <__vector_7>
      20:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      24:	0c 94 d5 15 	jmp	0x2baa	; 0x2baa <__vector_9>
      28:	0c 94 fe 15 	jmp	0x2bfc	; 0x2bfc <__vector_10>
      2c:	0c 94 27 16 	jmp	0x2c4e	; 0x2c4e <__vector_11>
      30:	0c 94 a2 16 	jmp	0x2d44	; 0x2d44 <__vector_12>
      34:	0c 94 50 16 	jmp	0x2ca0	; 0x2ca0 <__vector_13>
      38:	0c 94 79 16 	jmp	0x2cf2	; 0x2cf2 <__vector_14>
      3c:	0c 94 cb 16 	jmp	0x2d96	; 0x2d96 <__vector_15>
      40:	0c 94 5a 15 	jmp	0x2ab4	; 0x2ab4 <__vector_16>
      44:	0c 94 83 15 	jmp	0x2b06	; 0x2b06 <__vector_17>
      48:	0c 94 ac 15 	jmp	0x2b58	; 0x2b58 <__vector_18>
      4c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      50:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      54:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      58:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      5c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      60:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      64:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      68:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      6c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      70:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      74:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      78:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      7c:	f0 12       	cpse	r15, r16
      7e:	f3 12       	cpse	r15, r19
      80:	f6 12       	cpse	r15, r22
      82:	f9 12       	cpse	r15, r25
      84:	02 13       	cpse	r16, r18
      86:	fc 12       	cpse	r15, r28
      88:	ff 12       	cpse	r15, r31
      8a:	05 13       	cpse	r16, r21
      8c:	08 13       	cpse	r16, r24
      8e:	0b 13       	cpse	r16, r27
      90:	0e 13       	cpse	r16, r30
      92:	11 13       	cpse	r17, r17
      94:	14 13       	cpse	r17, r20
      96:	17 13       	cpse	r17, r23
      98:	1a 13       	cpse	r17, r26
      9a:	1d 13       	cpse	r17, r29
      9c:	20 13       	cpse	r18, r16
      9e:	23 13       	cpse	r18, r19
      a0:	26 13       	cpse	r18, r22
      a2:	37 13       	cpse	r19, r23
      a4:	3a 13       	cpse	r19, r26
      a6:	3d 13       	cpse	r19, r29
      a8:	40 13       	cpse	r20, r16
      aa:	49 13       	cpse	r20, r25
      ac:	43 13       	cpse	r20, r19
      ae:	46 13       	cpse	r20, r22
      b0:	4c 13       	cpse	r20, r28
      b2:	4f 13       	cpse	r20, r31
      b4:	52 13       	cpse	r21, r18
      b6:	55 13       	cpse	r21, r21
      b8:	58 13       	cpse	r21, r24
      ba:	5b 13       	cpse	r21, r27
      bc:	5e 13       	cpse	r21, r30
      be:	61 13       	cpse	r22, r17
      c0:	64 13       	cpse	r22, r20
      c2:	67 13       	cpse	r22, r23
      c4:	6a 13       	cpse	r22, r26
      c6:	6d 13       	cpse	r22, r29
      c8:	07 63       	ori	r16, 0x37	; 55
      ca:	42 36       	cpi	r20, 0x62	; 98
      cc:	b7 9b       	sbis	0x16, 7	; 22
      ce:	d8 a7       	std	Y+40, r29	; 0x28
      d0:	1a 39       	cpi	r17, 0x9A	; 154
      d2:	68 56       	subi	r22, 0x68	; 104
      d4:	18 ae       	std	Y+56, r1	; 0x38
      d6:	ba ab       	std	Y+50, r27	; 0x32
      d8:	55 8c       	ldd	r5, Z+29	; 0x1d
      da:	1d 3c       	cpi	r17, 0xCD	; 205
      dc:	b7 cc       	rjmp	.-1682   	; 0xfffffa4c <__eeprom_end+0xff7efa4c>
      de:	57 63       	ori	r21, 0x37	; 55
      e0:	bd 6d       	ori	r27, 0xDD	; 221
      e2:	ed fd       	.word	0xfded	; ????
      e4:	75 3e       	cpi	r23, 0xE5	; 229
      e6:	f6 17       	cp	r31, r22
      e8:	72 31       	cpi	r23, 0x12	; 18
      ea:	bf 00       	.word	0x00bf	; ????
      ec:	00 00       	nop
      ee:	80 3f       	cpi	r24, 0xF0	; 240
      f0:	08 00       	.word	0x0008	; ????
      f2:	00 00       	nop
      f4:	be 92       	st	-X, r11
      f6:	24 49       	sbci	r18, 0x94	; 148
      f8:	12 3e       	cpi	r17, 0xE2	; 226
      fa:	ab aa       	std	Y+51, r10	; 0x33
      fc:	aa 2a       	or	r10, r26
      fe:	be cd       	rjmp	.-1156   	; 0xfffffc7c <__eeprom_end+0xff7efc7c>
     100:	cc cc       	rjmp	.-1640   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     102:	4c 3e       	cpi	r20, 0xEC	; 236
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	be ab       	std	Y+54, r27	; 0x36
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	aa 3e       	cpi	r26, 0xEA	; 234
     10e:	00 00       	nop
     110:	00 00       	nop
     112:	bf 00       	.word	0x00bf	; ????
     114:	00 00       	nop
     116:	80 3f       	cpi	r24, 0xF0	; 240
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	00 08       	sbc	r0, r0
     11e:	41 78       	andi	r20, 0x81	; 129
     120:	d3 bb       	out	0x13, r29	; 19
     122:	43 87       	std	Z+11, r20	; 0x0b
     124:	d1 13       	cpse	r29, r17
     126:	3d 19       	sub	r19, r13
     128:	0e 3c       	cpi	r16, 0xCE	; 206
     12a:	c3 bd       	out	0x23, r28	; 35
     12c:	42 82       	std	Z+2, r4	; 0x02
     12e:	ad 2b       	or	r26, r29
     130:	3e 68       	ori	r19, 0x8E	; 142
     132:	ec 82       	std	Y+4, r14	; 0x04
     134:	76 be       	out	0x36, r7	; 54
     136:	d9 8f       	std	Y+25, r29	; 0x19
     138:	e1 a9       	ldd	r30, Z+49	; 0x31
     13a:	3e 4c       	sbci	r19, 0xCE	; 206
     13c:	80 ef       	ldi	r24, 0xF0	; 240
     13e:	ff be       	out	0x3f, r15	; 63
     140:	01 c4       	rjmp	.+2050   	; 0x944 <read_pixel_1+0x44>
     142:	ff 7f       	andi	r31, 0xFF	; 255
     144:	3f 00       	.word	0x003f	; ????
     146:	00 00       	nop
	...

0000014a <char_bitmap>:
     14a:	16 05 01 00 00 00 00 00 00 00 fa 00 00 00 e0 00     ................
     15a:	e0 00 28 fe 28 fe 28 24 54 fe 54 48 c4 c8 10 26     ..(.(.($T.TH...&
     16a:	46 6c 92 aa 44 a0 00 a0 c0 00 00 00 38 44 82 00     Fl..D.......8D..
     17a:	00 82 44 38 00 28 10 7c 10 28 10 10 7c 10 10 00     ..D8.(.|.(..|...
     18a:	0a 0c 00 00 10 10 10 10 10 00 06 06 00 00 04 08     ................
     19a:	10 20 40 7c 8a 92 a2 7c 00 42 fe 02 00 42 86 8a     . @|...|.B...B..
     1aa:	92 62 84 82 a2 d2 8c 18 28 48 fe 08 e4 a2 a2 a2     .b......(H......
     1ba:	9c 3c 52 92 92 0c 80 8e 90 a0 c0 6c 92 92 92 6c     .<R........l...l
     1ca:	60 92 92 94 78 00 6c 6c 00 00 00 6a 6c 00 00 10     `...x.ll...jl...
     1da:	28 44 82 00 28 28 28 28 28 00 82 44 28 10 40 80     (D..(((((..D(.@.
     1ea:	8a 90 60 4c 92 9e 82 7c 7e 88 88 88 7e fe 92 92     ..`L...|~...~...
     1fa:	92 6c 7c 82 82 82 44 fe 82 82 44 38 fe 92 92 92     .l|...D...D8....
     20a:	82 fe 90 90 90 80 7c 82 92 92 5e fe 10 10 10 fe     ......|...^.....
     21a:	00 82 fe 82 00 04 02 82 fc 80 fe 10 28 44 82 fe     ............(D..
     22a:	02 02 02 02 fe 40 30 40 fe fe 20 10 08 fe 7c 82     .....@0@.. ...|.
     23a:	82 82 7c fe 90 90 90 60 7c 82 8a 84 7a fe 90 98     ..|....`|...z...
     24a:	94 62 62 92 92 92 8c 80 80 fe 80 80 fc 02 02 02     .bb.............
     25a:	fc f8 04 02 04 f8 fc 02 1c 02 fc c6 28 10 28 c6     ............(.(.
     26a:	e0 10 0e 10 e0 86 8a 92 a2 c2 00 fe 82 82 00 40     ...............@
     27a:	20 10 08 04 00 82 82 fe 00 20 40 80 40 20 02 02      ........ @.@ ..
     28a:	02 02 02 00 80 40 20 00 04 2a 2a 2a 1e fe 12 22     .....@ ..***..."
     29a:	22 1c 1c 22 22 22 04 1c 22 22 12 fe 1c 2a 2a 2a     ".."""..""...***
     2aa:	18 10 7e 90 80 40 30 4a 4a 4a 7c fe 10 20 20 1e     ..~..@0JJJ|..  .
     2ba:	00 22 be 02 00 04 02 22 bc 00 fe 08 14 22 00 00     ."....."....."..
     2ca:	82 fe 02 00 3e 20 18 20 1e 3e 10 20 20 1e 1c 22     ....> . .>.  .."
     2da:	22 22 1c 3e 28 28 28 10 10 28 28 18 3e 3e 10 20     "".>(((..((.>>. 
     2ea:	20 10 12 2a 2a 2a 04 20 fc 22 02 04 3c 02 02 04      ..***. ."..<...
     2fa:	3e 38 04 02 04 38 3c 02 0c 02 3c 22 14 08 14 22     >8...8<...<"..."
     30a:	30 0a 0a 0a 3c 22 26 2a 32 22 00 10 6c 82 00 00     0...<"&*2"..l...
     31a:	00 fe 00 00 00 82 6c 10 00 08 10 10 08 10 00 00     ......l.........
     32a:	00 00 00 7f 81 81 81 7f 7f 83 83 83 7f 7f 87 87     ................
     33a:	87 7f 7f 8f 8f 8f 7f 7f 9f 9f 9f 7f 7f bf bf bf     ................
     34a:	7f 7f ff ff ff 7f 20 40 ff 40 20 62 15 17 15 65     ...... @.@ b...e
     35a:	00 fb fb 00 00                                      .....

0000035f <CEENBoT_Inc_logo_bitmap>:
     35f:	00 00 00 00 00 c0 ff 03 00 e0 ff 07 00 f0 ff 0f     ................
     36f:	00 f8 ff 1f 00 78 00 1e 00 78 00 1e 00 78 00 1e     .....x...x...x..
     37f:	00 78 00 1e 00 78 00 1e 00 78 00 1e 00 78 00 1e     .x...x...x...x..
     38f:	00 78 00 1e 00 78 00 1e 00 00 00 00 00 00 00 00     .x...x..........
     39f:	00 80 ff 03 00 e0 ff 07 00 f0 ff 0f 00 f8 ff 1f     ................
     3af:	00 f8 3c 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     ..<..x<..x<..x<.
     3bf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     3cf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     3df:	00 00 00 00 00 e0 ff 03 00 f0 ff 07 00 f8 ff 0f     ................
     3ef:	00 f8 ff 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .....x<..x<..x<.
     3ff:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     40f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     41f:	00 00 00 00 00 f8 ff 03 00 f8 ff 0f 00 f8 ff 1f     ................
     42f:	00 f8 ff 1f 00 00 00 1e 00 00 00 1e 00 00 80 1f     ................
     43f:	00 00 f0 1f 00 00 ff 0f 00 e0 ff 07 00 f0 ff 00     ................
     44f:	00 f8 0f 00 00 f8 00 00 00 78 00 00 00 78 00 00     .........x...x..
     45f:	00 f8 ff 1f 00 f8 ff 1f 00 f0 ff 1f 00 e0 ff 1f     ................
	...
     477:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     487:	00 78 00 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x...x<..x<..x<.
     497:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 f8 7e 1f     .x<..x<..x<...~.
     4a7:	00 f8 ff 1f 00 f0 ff 0f 00 e0 e7 03 00 00 00 00     ................
     4b7:	00 00 00 38 00 ee ff 6c 00 2a 80 45 00 3a 00 47     ...8...l.*.E.:.G
     4c7:	fc 03 ff 6c fc 83 ff 39 00 de ff 0b 7c d0 81 0b     ...l...9....|...
     4d7:	fc d0 81 0b c0 d0 81 0b fc d0 81 0b 7c de ff 0b     ............|...
     4e7:	00 82 ff 39 70 02 ff 6c f8 3a 00 47 dc 2a 80 45     ...9p..l.:.G.*.E
     4f7:	cc ee ff 6c cc 00 00 38 00 00 00 00 0c 00 00 1e     ...l...8........
     507:	0c 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     517:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     527:	00 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     537:	00 00 00 5e 00 00 00 40 00 00 00 7c 00 00 00 40     ...^...@...|...@
     547:	00 00 00 40 00 00 00 7c 00 00 00 30 00 00 00 10     ...@...|...0....
     557:	00 00 00 30 00 00 00 7c                             ...0...|

0000055f <__c.1790>:
     55f:	6e 61 6e 00                                         nan.

00000563 <__c.1788>:
     563:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     573:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     583:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     593:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     5a3:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     5b3:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     5c3:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     5d3:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     5e3:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     5f3:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     603:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     613:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     623:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     633:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     643:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     653:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

00000662 <__ctors_end>:
     662:	11 24       	eor	r1, r1
     664:	1f be       	out	0x3f, r1	; 63
     666:	cf ef       	ldi	r28, 0xFF	; 255
     668:	d8 e0       	ldi	r29, 0x08	; 8
     66a:	de bf       	out	0x3e, r29	; 62
     66c:	cd bf       	out	0x3d, r28	; 61

0000066e <__do_copy_data>:
     66e:	12 e0       	ldi	r17, 0x02	; 2
     670:	a0 e0       	ldi	r26, 0x00	; 0
     672:	b1 e0       	ldi	r27, 0x01	; 1
     674:	ea ea       	ldi	r30, 0xAA	; 170
     676:	f6 e5       	ldi	r31, 0x56	; 86
     678:	02 c0       	rjmp	.+4      	; 0x67e <.do_copy_data_start>

0000067a <.do_copy_data_loop>:
     67a:	05 90       	lpm	r0, Z+
     67c:	0d 92       	st	X+, r0

0000067e <.do_copy_data_start>:
     67e:	a8 32       	cpi	r26, 0x28	; 40
     680:	b1 07       	cpc	r27, r17
     682:	d9 f7       	brne	.-10     	; 0x67a <.do_copy_data_loop>

00000684 <__do_clear_bss>:
     684:	15 e0       	ldi	r17, 0x05	; 5
     686:	a8 e2       	ldi	r26, 0x28	; 40
     688:	b2 e0       	ldi	r27, 0x02	; 2
     68a:	01 c0       	rjmp	.+2      	; 0x68e <.do_clear_bss_start>

0000068c <.do_clear_bss_loop>:
     68c:	1d 92       	st	X+, r1

0000068e <.do_clear_bss_start>:
     68e:	af 31       	cpi	r26, 0x1F	; 31
     690:	b1 07       	cpc	r27, r17
     692:	e1 f7       	brne	.-8      	; 0x68c <.do_clear_bss_loop>
     694:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <main>
     698:	0c 94 53 2b 	jmp	0x56a6	; 0x56a6 <_exit>

0000069c <__bad_interrupt>:
     69c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006a0 <get_ambient_temp>:
* Output Return:	I2C_STATUS
* Overview:			Reads the ambient temperature
********************************************************************/

I2C_STATUS get_ambient_temp( unsigned char *ambient_temp )
{
     6a0:	1f 93       	push	r17
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6a8:	88 e6       	ldi	r24, 0x68	; 104
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     6b0:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     6b2:	88 23       	and	r24, r24
     6b4:	a1 f4       	brne	.+40     	; 0x6de <get_ambient_temp+0x3e>
	{

		// Send the register value (being 1).  This is
		// the register that contains the ambient temperature.
		i2c_stat = I2C_MSTR_send( __TPA81_AMBIENT );
     6b6:	81 e0       	ldi	r24, 0x01	; 1
     6b8:	0e 94 98 14 	call	0x2930	; 0x2930 <I2C_MSTR_send>
     6bc:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     6be:	88 23       	and	r24, r24
     6c0:	71 f4       	brne	.+28     	; 0x6de <get_ambient_temp+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     6c2:	88 e6       	ldi	r24, 0x68	; 104
     6c4:	61 e0       	ldi	r22, 0x01	; 1
     6c6:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     6ca:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     6cc:	88 23       	and	r24, r24
     6ce:	39 f4       	brne	.+14     	; 0x6de <get_ambient_temp+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( ambient_temp, FALSE );
     6d0:	ce 01       	movw	r24, r28
     6d2:	60 e0       	ldi	r22, 0x00	; 0
     6d4:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <I2C_MSTR_get>
     6d8:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     6da:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*ambient_temp = 0;
     6dc:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     6de:	0e 94 04 15 	call	0x2a08	; 0x2a08 <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_ambient_temp()
     6e2:	81 2f       	mov	r24, r17
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	1f 91       	pop	r17
     6ea:	08 95       	ret

000006ec <read_pixel_8>:
	return i2c_stat;
}

// get pixel eight
I2C_STATUS read_pixel_8( unsigned char *pixel_8)
{
     6ec:	1f 93       	push	r17
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6f4:	88 e6       	ldi	r24, 0x68	; 104
     6f6:	60 e0       	ldi	r22, 0x00	; 0
     6f8:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     6fc:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     6fe:	88 23       	and	r24, r24
     700:	a1 f4       	brne	.+40     	; 0x72a <read_pixel_8+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX8 );
     702:	89 e0       	ldi	r24, 0x09	; 9
     704:	0e 94 98 14 	call	0x2930	; 0x2930 <I2C_MSTR_send>
     708:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     70a:	88 23       	and	r24, r24
     70c:	71 f4       	brne	.+28     	; 0x72a <read_pixel_8+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     70e:	88 e6       	ldi	r24, 0x68	; 104
     710:	61 e0       	ldi	r22, 0x01	; 1
     712:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     716:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     718:	88 23       	and	r24, r24
     71a:	39 f4       	brne	.+14     	; 0x72a <read_pixel_8+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_8, FALSE );
     71c:	ce 01       	movw	r24, r28
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <I2C_MSTR_get>
     724:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     726:	81 11       	cpse	r24, r1
					*pixel_8 = 0;
     728:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     72a:	0e 94 04 15 	call	0x2a08	; 0x2a08 <I2C_MSTR_stop>
	return i2c_stat;
}
     72e:	81 2f       	mov	r24, r17
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	1f 91       	pop	r17
     736:	08 95       	ret

00000738 <read_pixel_7>:
	return i2c_stat;
}

// get pixel seven
I2C_STATUS read_pixel_7( unsigned char *pixel_7)
{
     738:	1f 93       	push	r17
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     740:	88 e6       	ldi	r24, 0x68	; 104
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     748:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     74a:	88 23       	and	r24, r24
     74c:	a1 f4       	brne	.+40     	; 0x776 <read_pixel_7+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX7 );
     74e:	88 e0       	ldi	r24, 0x08	; 8
     750:	0e 94 98 14 	call	0x2930	; 0x2930 <I2C_MSTR_send>
     754:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     756:	88 23       	and	r24, r24
     758:	71 f4       	brne	.+28     	; 0x776 <read_pixel_7+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     75a:	88 e6       	ldi	r24, 0x68	; 104
     75c:	61 e0       	ldi	r22, 0x01	; 1
     75e:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     762:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     764:	88 23       	and	r24, r24
     766:	39 f4       	brne	.+14     	; 0x776 <read_pixel_7+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_7, FALSE );
     768:	ce 01       	movw	r24, r28
     76a:	60 e0       	ldi	r22, 0x00	; 0
     76c:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <I2C_MSTR_get>
     770:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     772:	81 11       	cpse	r24, r1
					*pixel_7 = 0;
     774:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     776:	0e 94 04 15 	call	0x2a08	; 0x2a08 <I2C_MSTR_stop>
	return i2c_stat;
}
     77a:	81 2f       	mov	r24, r17
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	1f 91       	pop	r17
     782:	08 95       	ret

00000784 <read_pixel_6>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel six
I2C_STATUS read_pixel_6( unsigned char *pixel_6)
{
     784:	1f 93       	push	r17
     786:	cf 93       	push	r28
     788:	df 93       	push	r29
     78a:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     78c:	88 e6       	ldi	r24, 0x68	; 104
     78e:	60 e0       	ldi	r22, 0x00	; 0
     790:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     794:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     796:	88 23       	and	r24, r24
     798:	a1 f4       	brne	.+40     	; 0x7c2 <read_pixel_6+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX6 );
     79a:	87 e0       	ldi	r24, 0x07	; 7
     79c:	0e 94 98 14 	call	0x2930	; 0x2930 <I2C_MSTR_send>
     7a0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7a2:	88 23       	and	r24, r24
     7a4:	71 f4       	brne	.+28     	; 0x7c2 <read_pixel_6+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7a6:	88 e6       	ldi	r24, 0x68	; 104
     7a8:	61 e0       	ldi	r22, 0x01	; 1
     7aa:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     7ae:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7b0:	88 23       	and	r24, r24
     7b2:	39 f4       	brne	.+14     	; 0x7c2 <read_pixel_6+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_6, FALSE );
     7b4:	ce 01       	movw	r24, r28
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <I2C_MSTR_get>
     7bc:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     7be:	81 11       	cpse	r24, r1
					*pixel_6 = 0;
     7c0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     7c2:	0e 94 04 15 	call	0x2a08	; 0x2a08 <I2C_MSTR_stop>
	return i2c_stat;
}
     7c6:	81 2f       	mov	r24, r17
     7c8:	df 91       	pop	r29
     7ca:	cf 91       	pop	r28
     7cc:	1f 91       	pop	r17
     7ce:	08 95       	ret

000007d0 <read_pixel_5>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel five
I2C_STATUS read_pixel_5( unsigned char *pixel_5)
{
     7d0:	1f 93       	push	r17
     7d2:	cf 93       	push	r28
     7d4:	df 93       	push	r29
     7d6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     7d8:	88 e6       	ldi	r24, 0x68	; 104
     7da:	60 e0       	ldi	r22, 0x00	; 0
     7dc:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     7e0:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     7e2:	88 23       	and	r24, r24
     7e4:	a1 f4       	brne	.+40     	; 0x80e <read_pixel_5+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX5 );
     7e6:	86 e0       	ldi	r24, 0x06	; 6
     7e8:	0e 94 98 14 	call	0x2930	; 0x2930 <I2C_MSTR_send>
     7ec:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7ee:	88 23       	and	r24, r24
     7f0:	71 f4       	brne	.+28     	; 0x80e <read_pixel_5+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7f2:	88 e6       	ldi	r24, 0x68	; 104
     7f4:	61 e0       	ldi	r22, 0x01	; 1
     7f6:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     7fa:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7fc:	88 23       	and	r24, r24
     7fe:	39 f4       	brne	.+14     	; 0x80e <read_pixel_5+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_5, FALSE );
     800:	ce 01       	movw	r24, r28
     802:	60 e0       	ldi	r22, 0x00	; 0
     804:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <I2C_MSTR_get>
     808:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     80a:	81 11       	cpse	r24, r1
					*pixel_5 = 0;
     80c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     80e:	0e 94 04 15 	call	0x2a08	; 0x2a08 <I2C_MSTR_stop>
	return i2c_stat;
}
     812:	81 2f       	mov	r24, r17
     814:	df 91       	pop	r29
     816:	cf 91       	pop	r28
     818:	1f 91       	pop	r17
     81a:	08 95       	ret

0000081c <read_pixel_4>:
	return i2c_stat;
}

// get pixel four
I2C_STATUS read_pixel_4( unsigned char *pixel_4)
{
     81c:	1f 93       	push	r17
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     824:	88 e6       	ldi	r24, 0x68	; 104
     826:	60 e0       	ldi	r22, 0x00	; 0
     828:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     82c:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     82e:	88 23       	and	r24, r24
     830:	a1 f4       	brne	.+40     	; 0x85a <read_pixel_4+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX4 );
     832:	85 e0       	ldi	r24, 0x05	; 5
     834:	0e 94 98 14 	call	0x2930	; 0x2930 <I2C_MSTR_send>
     838:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     83a:	88 23       	and	r24, r24
     83c:	71 f4       	brne	.+28     	; 0x85a <read_pixel_4+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     83e:	88 e6       	ldi	r24, 0x68	; 104
     840:	61 e0       	ldi	r22, 0x01	; 1
     842:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     846:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     848:	88 23       	and	r24, r24
     84a:	39 f4       	brne	.+14     	; 0x85a <read_pixel_4+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_4, FALSE );
     84c:	ce 01       	movw	r24, r28
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <I2C_MSTR_get>
     854:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     856:	81 11       	cpse	r24, r1
					*pixel_4 = 0;
     858:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     85a:	0e 94 04 15 	call	0x2a08	; 0x2a08 <I2C_MSTR_stop>
	return i2c_stat;
}
     85e:	81 2f       	mov	r24, r17
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	1f 91       	pop	r17
     866:	08 95       	ret

00000868 <read_pixel_3>:
	return i2c_stat;
}

// get pixel three
I2C_STATUS read_pixel_3( unsigned char *pixel_3)
{
     868:	1f 93       	push	r17
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     870:	88 e6       	ldi	r24, 0x68	; 104
     872:	60 e0       	ldi	r22, 0x00	; 0
     874:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     878:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     87a:	88 23       	and	r24, r24
     87c:	a1 f4       	brne	.+40     	; 0x8a6 <read_pixel_3+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX3 );
     87e:	84 e0       	ldi	r24, 0x04	; 4
     880:	0e 94 98 14 	call	0x2930	; 0x2930 <I2C_MSTR_send>
     884:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     886:	88 23       	and	r24, r24
     888:	71 f4       	brne	.+28     	; 0x8a6 <read_pixel_3+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     88a:	88 e6       	ldi	r24, 0x68	; 104
     88c:	61 e0       	ldi	r22, 0x01	; 1
     88e:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     892:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     894:	88 23       	and	r24, r24
     896:	39 f4       	brne	.+14     	; 0x8a6 <read_pixel_3+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_3, FALSE );
     898:	ce 01       	movw	r24, r28
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <I2C_MSTR_get>
     8a0:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8a2:	81 11       	cpse	r24, r1
					*pixel_3 = 0;
     8a4:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     8a6:	0e 94 04 15 	call	0x2a08	; 0x2a08 <I2C_MSTR_stop>
	return i2c_stat;
}
     8aa:	81 2f       	mov	r24, r17
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	1f 91       	pop	r17
     8b2:	08 95       	ret

000008b4 <read_pixel_2>:
}


// get pixel two
I2C_STATUS read_pixel_2( unsigned char *pixel_2)
{
     8b4:	1f 93       	push	r17
     8b6:	cf 93       	push	r28
     8b8:	df 93       	push	r29
     8ba:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     8bc:	88 e6       	ldi	r24, 0x68	; 104
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     8c4:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     8c6:	88 23       	and	r24, r24
     8c8:	a1 f4       	brne	.+40     	; 0x8f2 <read_pixel_2+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX2 );
     8ca:	83 e0       	ldi	r24, 0x03	; 3
     8cc:	0e 94 98 14 	call	0x2930	; 0x2930 <I2C_MSTR_send>
     8d0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     8d2:	88 23       	and	r24, r24
     8d4:	71 f4       	brne	.+28     	; 0x8f2 <read_pixel_2+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     8d6:	88 e6       	ldi	r24, 0x68	; 104
     8d8:	61 e0       	ldi	r22, 0x01	; 1
     8da:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     8de:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     8e0:	88 23       	and	r24, r24
     8e2:	39 f4       	brne	.+14     	; 0x8f2 <read_pixel_2+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_2, FALSE );
     8e4:	ce 01       	movw	r24, r28
     8e6:	60 e0       	ldi	r22, 0x00	; 0
     8e8:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <I2C_MSTR_get>
     8ec:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8ee:	81 11       	cpse	r24, r1
					*pixel_2 = 0;
     8f0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     8f2:	0e 94 04 15 	call	0x2a08	; 0x2a08 <I2C_MSTR_stop>
	return i2c_stat;
}
     8f6:	81 2f       	mov	r24, r17
     8f8:	df 91       	pop	r29
     8fa:	cf 91       	pop	r28
     8fc:	1f 91       	pop	r17
     8fe:	08 95       	ret

00000900 <read_pixel_1>:
* Output Return:	I2C_STATUS
* Overview:			These are several pixel read values for each of the pixels
********************************************************************/
// get pixel one
I2C_STATUS read_pixel_1( unsigned char *pixel_1)
{
     900:	1f 93       	push	r17
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     908:	88 e6       	ldi	r24, 0x68	; 104
     90a:	60 e0       	ldi	r22, 0x00	; 0
     90c:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     910:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     912:	88 23       	and	r24, r24
     914:	a1 f4       	brne	.+40     	; 0x93e <read_pixel_1+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX1 );
     916:	82 e0       	ldi	r24, 0x02	; 2
     918:	0e 94 98 14 	call	0x2930	; 0x2930 <I2C_MSTR_send>
     91c:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     91e:	88 23       	and	r24, r24
     920:	71 f4       	brne	.+28     	; 0x93e <read_pixel_1+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     922:	88 e6       	ldi	r24, 0x68	; 104
     924:	61 e0       	ldi	r22, 0x01	; 1
     926:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     92a:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     92c:	88 23       	and	r24, r24
     92e:	39 f4       	brne	.+14     	; 0x93e <read_pixel_1+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_1, FALSE );
     930:	ce 01       	movw	r24, r28
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <I2C_MSTR_get>
     938:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     93a:	81 11       	cpse	r24, r1
					*pixel_1 = 0;
     93c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     93e:	0e 94 04 15 	call	0x2a08	; 0x2a08 <I2C_MSTR_stop>
	return i2c_stat;
}
     942:	81 2f       	mov	r24, r17
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	1f 91       	pop	r17
     94a:	08 95       	ret

0000094c <get_revision>:
* Input Variables:	unsigned char revision
* Output Return:	I2C_STATUS
* Overview:			
********************************************************************/
I2C_STATUS get_revision( unsigned char *revision )
{
     94c:	1f 93       	push	r17
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
     952:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     954:	88 e6       	ldi	r24, 0x68	; 104
     956:	60 e0       	ldi	r22, 0x00	; 0
     958:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     95c:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     95e:	88 23       	and	r24, r24
     960:	a1 f4       	brne	.+40     	; 0x98a <get_revision+0x3e>
	{

		// Send the register value (being 0).  This is
		// the register that contains the software revision.
		i2c_stat = I2C_MSTR_send( __TPA81_REVISION );
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	0e 94 98 14 	call	0x2930	; 0x2930 <I2C_MSTR_send>
     968:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     96a:	88 23       	and	r24, r24
     96c:	71 f4       	brne	.+28     	; 0x98a <get_revision+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     96e:	88 e6       	ldi	r24, 0x68	; 104
     970:	61 e0       	ldi	r22, 0x01	; 1
     972:	0e 94 be 14 	call	0x297c	; 0x297c <I2C_MSTR_start>
     976:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     978:	88 23       	and	r24, r24
     97a:	39 f4       	brne	.+14     	; 0x98a <get_revision+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( revision, FALSE );
     97c:	ce 01       	movw	r24, r28
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <I2C_MSTR_get>
     984:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     986:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*revision = 0;
     988:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     98a:	0e 94 04 15 	call	0x2a08	; 0x2a08 <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_revision()
     98e:	81 2f       	mov	r24, r17
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	1f 91       	pop	r17
     996:	08 95       	ret

00000998 <getBackIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel(IRBACK_CHAN);
     99e:	85 e0       	ldi	r24, 0x05	; 5
     9a0:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9a4:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <ADC_sample>
     9a8:	a0 e0       	ldi	r26, 0x00	; 0
     9aa:	b0 e0       	ldi	r27, 0x00	; 0
     9ac:	bc 01       	movw	r22, r24
     9ae:	cd 01       	movw	r24, r26
     9b0:	0e 94 5c 21 	call	0x42b8	; 0x42b8 <__floatunsisf>
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	40 ea       	ldi	r20, 0xA0	; 160
     9ba:	50 e4       	ldi	r21, 0x40	; 64
     9bc:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
     9c0:	9b 01       	movw	r18, r22
     9c2:	ac 01       	movw	r20, r24
     9c4:	60 e0       	ldi	r22, 0x00	; 0
     9c6:	70 e2       	ldi	r23, 0x20	; 32
     9c8:	86 e3       	ldi	r24, 0x36	; 54
     9ca:	95 e4       	ldi	r25, 0x45	; 69
     9cc:	0e 94 c3 20 	call	0x4186	; 0x4186 <__divsf3>
     9d0:	20 e0       	ldi	r18, 0x00	; 0
     9d2:	30 e0       	ldi	r19, 0x00	; 0
     9d4:	40 e8       	ldi	r20, 0x80	; 128
     9d6:	5f e3       	ldi	r21, 0x3F	; 63
     9d8:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     9dc:	08 95       	ret

000009de <getFrontIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     9de:	81 e0       	ldi	r24, 0x01	; 1
     9e0:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel(IRFRONT_CHAN);
     9e4:	87 e0       	ldi	r24, 0x07	; 7
     9e6:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9ea:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <ADC_sample>
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	bc 01       	movw	r22, r24
     9f4:	cd 01       	movw	r24, r26
     9f6:	0e 94 5c 21 	call	0x42b8	; 0x42b8 <__floatunsisf>
     9fa:	20 e0       	ldi	r18, 0x00	; 0
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	40 ea       	ldi	r20, 0xA0	; 160
     a00:	50 e4       	ldi	r21, 0x40	; 64
     a02:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
     a06:	9b 01       	movw	r18, r22
     a08:	ac 01       	movw	r20, r24
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	70 e2       	ldi	r23, 0x20	; 32
     a0e:	86 e3       	ldi	r24, 0x36	; 54
     a10:	95 e4       	ldi	r25, 0x45	; 69
     a12:	0e 94 c3 20 	call	0x4186	; 0x4186 <__divsf3>
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	40 e8       	ldi	r20, 0x80	; 128
     a1c:	5f e3       	ldi	r21, 0x3F	; 63
     a1e:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a22:	08 95       	ret

00000a24 <getRightIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
     a2a:	83 e0       	ldi	r24, 0x03	; 3
     a2c:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a30:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <ADC_sample>
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	bc 01       	movw	r22, r24
     a3a:	cd 01       	movw	r24, r26
     a3c:	0e 94 5c 21 	call	0x42b8	; 0x42b8 <__floatunsisf>
     a40:	20 e0       	ldi	r18, 0x00	; 0
     a42:	30 e0       	ldi	r19, 0x00	; 0
     a44:	40 ea       	ldi	r20, 0xA0	; 160
     a46:	50 e4       	ldi	r21, 0x40	; 64
     a48:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
     a4c:	9b 01       	movw	r18, r22
     a4e:	ac 01       	movw	r20, r24
     a50:	60 e0       	ldi	r22, 0x00	; 0
     a52:	70 e2       	ldi	r23, 0x20	; 32
     a54:	86 e3       	ldi	r24, 0x36	; 54
     a56:	95 e4       	ldi	r25, 0x45	; 69
     a58:	0e 94 c3 20 	call	0x4186	; 0x4186 <__divsf3>
     a5c:	20 e0       	ldi	r18, 0x00	; 0
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	40 e8       	ldi	r20, 0x80	; 128
     a62:	5f e3       	ldi	r21, 0x3F	; 63
     a64:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a68:	08 95       	ret

00000a6a <getLeftIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
 	ADC_set_VREF( ADC_VREF_AVCC );
     a6a:	81 e0       	ldi	r24, 0x01	; 1
     a6c:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
     a70:	84 e0       	ldi	r24, 0x04	; 4
     a72:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a76:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <ADC_sample>
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	b0 e0       	ldi	r27, 0x00	; 0
     a7e:	bc 01       	movw	r22, r24
     a80:	cd 01       	movw	r24, r26
     a82:	0e 94 5c 21 	call	0x42b8	; 0x42b8 <__floatunsisf>
     a86:	20 e0       	ldi	r18, 0x00	; 0
     a88:	30 e0       	ldi	r19, 0x00	; 0
     a8a:	40 ea       	ldi	r20, 0xA0	; 160
     a8c:	50 e4       	ldi	r21, 0x40	; 64
     a8e:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
     a92:	9b 01       	movw	r18, r22
     a94:	ac 01       	movw	r20, r24
     a96:	60 e0       	ldi	r22, 0x00	; 0
     a98:	70 e2       	ldi	r23, 0x20	; 32
     a9a:	86 e3       	ldi	r24, 0x36	; 54
     a9c:	95 e4       	ldi	r25, 0x45	; 69
     a9e:	0e 94 c3 20 	call	0x4186	; 0x4186 <__divsf3>
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	30 e0       	ldi	r19, 0x00	; 0
     aa6:	40 e8       	ldi	r20, 0x80	; 128
     aa8:	5f e3       	ldi	r21, 0x3F	; 63
     aaa:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     aae:	08 95       	ret

00000ab0 <getRightLight>:
********************************************************************/
float getRightLight( void )
{
	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <ADC_set_VREF>
	ADC_set_channel( RIGHT_LIGHT_CHAN );
     ab6:	85 e0       	ldi	r24, 0x05	; 5
     ab8:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <ADC_set_channel>
	adcsample = ADC_sample();
     abc:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <ADC_sample>
     ac0:	a0 e0       	ldi	r26, 0x00	; 0
     ac2:	b0 e0       	ldi	r27, 0x00	; 0
     ac4:	bc 01       	movw	r22, r24
     ac6:	cd 01       	movw	r24, r26
     ac8:	0e 94 5c 21 	call	0x42b8	; 0x42b8 <__floatunsisf>
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	40 ea       	ldi	r20, 0xA0	; 160
     ad2:	5b e3       	ldi	r21, 0x3B	; 59
     ad4:	0e 94 4c 22 	call	0x4498	; 0x4498 <__mulsf3>
	// LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * ( 5.0 / 1024 );
	// LCD_printf( "right: %f\n",voltage);
	return voltage;
}
     ad8:	08 95       	ret

00000ada <getLeftLight>:
float getLeftLight( void )
{

	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ada:	81 e0       	ldi	r24, 0x01	; 1
     adc:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <ADC_set_VREF>
	ADC_set_channel( LEFT_LIGHT_CHAN );
     ae0:	86 e0       	ldi	r24, 0x06	; 6
     ae2:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <ADC_set_channel>
	adcsample = ADC_sample();
     ae6:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <ADC_sample>
     aea:	a0 e0       	ldi	r26, 0x00	; 0
     aec:	b0 e0       	ldi	r27, 0x00	; 0
     aee:	bc 01       	movw	r22, r24
     af0:	cd 01       	movw	r24, r26
     af2:	0e 94 5c 21 	call	0x42b8	; 0x42b8 <__floatunsisf>
     af6:	20 e0       	ldi	r18, 0x00	; 0
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	40 ea       	ldi	r20, 0xA0	; 160
     afc:	5b e3       	ldi	r21, 0x3B	; 59
     afe:	0e 94 4c 22 	call	0x4498	; 0x4498 <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * (5.0/ 1024.0 );
	// LCD_printf( "voltage: %f\n",voltage);
	return voltage;
}
     b02:	08 95       	ret

00000b04 <WaitButton>:
* Input Variables:	none
* Output Return:	int
* Overview:			Use a comment block like this before functions
********************************************************************/
int WaitButton( void ) 
{
     b04:	ff 92       	push	r15
     b06:	0f 93       	push	r16
     b08:	1f 93       	push	r17
     b0a:	cf 93       	push	r28
     b0c:	df 93       	push	r29
    BOOL btnState1, btnState2, btnState3;//local variables - button states
	//int rtnValue=0;//return the button value
	int rtnValue=0;

	LCD_clear();
     b0e:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <LCD_clear>

	if((ATopstat.state=SUBSYS_OPEN))
     b12:	81 e0       	ldi	r24, 0x01	; 1
     b14:	80 93 bc 02 	sts	0x02BC, r24
	{
       		// Get switch states.
		btnState1 = ATTINY_get_SW_state( ATTINY_SW3 );
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	0e 94 70 13 	call	0x26e0	; 0x26e0 <ATTINY_get_SW_state>
     b1e:	18 2f       	mov	r17, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
     b20:	81 e0       	ldi	r24, 0x01	; 1
     b22:	0e 94 70 13 	call	0x26e0	; 0x26e0 <ATTINY_get_SW_state>
     b26:	08 2f       	mov	r16, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
     b28:	82 e0       	ldi	r24, 0x02	; 2
     b2a:	0e 94 70 13 	call	0x26e0	; 0x26e0 <ATTINY_get_SW_state>
     b2e:	f8 2e       	mov	r15, r24
		//LCD_printf("btnStates: %d %d %d \n", btnState1, btnState2, btnState3);

		if( btnState1 == TRUE ) 
     b30:	11 30       	cpi	r17, 0x01	; 1
     b32:	19 f0       	breq	.+6      	; 0xb3a <WaitButton+0x36>
     b34:	c0 e0       	ldi	r28, 0x00	; 0
     b36:	d0 e0       	ldi	r29, 0x00	; 0
     b38:	17 c0       	rjmp	.+46     	; 0xb68 <WaitButton+0x64>
		{
			LCD_printf( "SW1: Pushed\n");
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	91 e0       	ldi	r25, 0x01	; 1
     b3e:	0e 94 a5 2a 	call	0x554a	; 0x554a <puts>
			TMRSRVC_delay(1000);//wait 1 s
     b42:	88 ee       	ldi	r24, 0xE8	; 232
     b44:	93 e0       	ldi	r25, 0x03	; 3
     b46:	0e 94 0d 14 	call	0x281a	; 0x281a <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b00100000 );//turn the red LED on
     b4a:	80 e2       	ldi	r24, 0x20	; 32
     b4c:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     b50:	80 ed       	ldi	r24, 0xD0	; 208
     b52:	97 e0       	ldi	r25, 0x07	; 7
     b54:	0e 94 0d 14 	call	0x281a	; 0x281a <TMRSRVC_delay>
               		LED_clr_pattern( 0b01000000 );//turn the green LED off
     b58:	80 e4       	ldi	r24, 0x40	; 64
     b5a:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b5e:	80 e2       	ldi	r24, 0x20	; 32
     b60:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <LED_clr_pattern>
     b64:	c1 e0       	ldi	r28, 0x01	; 1
     b66:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=1;
			}//end if button 1 state open

		if( btnState2 == TRUE ) 
     b68:	01 30       	cpi	r16, 0x01	; 1
     b6a:	b9 f4       	brne	.+46     	; 0xb9a <WaitButton+0x96>
		{
			LCD_printf( "SW2: Pushed\n");
     b6c:	8c e0       	ldi	r24, 0x0C	; 12
     b6e:	91 e0       	ldi	r25, 0x01	; 1
     b70:	0e 94 a5 2a 	call	0x554a	; 0x554a <puts>
			TMRSRVC_delay(1000);//wait 1 s
     b74:	88 ee       	ldi	r24, 0xE8	; 232
     b76:	93 e0       	ldi	r25, 0x03	; 3
     b78:	0e 94 0d 14 	call	0x281a	; 0x281a <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     b7c:	80 e4       	ldi	r24, 0x40	; 64
     b7e:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     b82:	80 ed       	ldi	r24, 0xD0	; 208
     b84:	97 e0       	ldi	r25, 0x07	; 7
     b86:	0e 94 0d 14 	call	0x281a	; 0x281a <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     b8a:	80 e4       	ldi	r24, 0x40	; 64
     b8c:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b90:	80 e2       	ldi	r24, 0x20	; 32
     b92:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <LED_clr_pattern>
     b96:	c2 e0       	ldi	r28, 0x02	; 2
     b98:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=2;
		}//end if btn 2 open

		if ( btnState3 == TRUE ) 
     b9a:	81 e0       	ldi	r24, 0x01	; 1
     b9c:	f8 16       	cp	r15, r24
     b9e:	d1 f4       	brne	.+52     	; 0xbd4 <WaitButton+0xd0>
		{
			LCD_printf( "SW3: Pushed\n");
     ba0:	88 e1       	ldi	r24, 0x18	; 24
     ba2:	91 e0       	ldi	r25, 0x01	; 1
     ba4:	0e 94 a5 2a 	call	0x554a	; 0x554a <puts>
			TMRSRVC_delay(1000);//wait 1 s
     ba8:	88 ee       	ldi	r24, 0xE8	; 232
     baa:	93 e0       	ldi	r25, 0x03	; 3
     bac:	0e 94 0d 14 	call	0x281a	; 0x281a <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     bb0:	80 e4       	ldi	r24, 0x40	; 64
     bb2:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <LED_set_pattern>
                	LED_set_pattern( 0b00100000 );//turn the red LED on
     bb6:	80 e2       	ldi	r24, 0x20	; 32
     bb8:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     bbc:	80 ed       	ldi	r24, 0xD0	; 208
     bbe:	97 e0       	ldi	r25, 0x07	; 7
     bc0:	0e 94 0d 14 	call	0x281a	; 0x281a <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     bc4:	80 e4       	ldi	r24, 0x40	; 64
     bc6:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     bca:	80 e2       	ldi	r24, 0x20	; 32
     bcc:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <LED_clr_pattern>
     bd0:	c3 e0       	ldi	r28, 0x03	; 3
     bd2:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=3;
		}//end if btn 3 open
            	LCD_clear();
     bd4:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <LCD_clear>
		return rtnValue;
	}//end AT while

}//end the WaitButton() function
     bd8:	ce 01       	movw	r24, r28
     bda:	df 91       	pop	r29
     bdc:	cf 91       	pop	r28
     bde:	1f 91       	pop	r17
     be0:	0f 91       	pop	r16
     be2:	ff 90       	pop	r15
     be4:	08 95       	ret

00000be6 <prefilter>:
* Overview:			This appies a prefilter to the IR data by
*					storing the history of measurements within the
*					an arrayand calculating a running average
********************************************************************/
void prefilter(char reset)
{	
     be6:	2f 92       	push	r2
     be8:	3f 92       	push	r3
     bea:	4f 92       	push	r4
     bec:	5f 92       	push	r5
     bee:	6f 92       	push	r6
     bf0:	7f 92       	push	r7
     bf2:	8f 92       	push	r8
     bf4:	9f 92       	push	r9
     bf6:	af 92       	push	r10
     bf8:	bf 92       	push	r11
     bfa:	cf 92       	push	r12
     bfc:	df 92       	push	r13
     bfe:	ef 92       	push	r14
     c00:	ff 92       	push	r15
     c02:	0f 93       	push	r16
     c04:	1f 93       	push	r17
     c06:	df 93       	push	r29
     c08:	cf 93       	push	r28
     c0a:	cd b7       	in	r28, 0x3d	; 61
     c0c:	de b7       	in	r29, 0x3e	; 62
     c0e:	64 97       	sbiw	r28, 0x14	; 20
     c10:	0f b6       	in	r0, 0x3f	; 63
     c12:	f8 94       	cli
     c14:	de bf       	out	0x3e, r29	; 62
     c16:	0f be       	out	0x3f, r0	; 63
     c18:	cd bf       	out	0x3d, r28	; 61
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
     c1a:	88 23       	and	r24, r24
     c1c:	39 f5       	brne	.+78     	; 0xc6c <prefilter+0x86>
     c1e:	8d e2       	ldi	r24, 0x2D	; 45
     c20:	93 e0       	ldi	r25, 0x03	; 3
     c22:	9c 8b       	std	Y+20, r25	; 0x14
     c24:	8b 8b       	std	Y+19, r24	; 0x13
     c26:	a5 e9       	ldi	r26, 0x95	; 149
     c28:	b4 e0       	ldi	r27, 0x04	; 4
     c2a:	be 83       	std	Y+6, r27	; 0x06
     c2c:	ad 83       	std	Y+5, r26	; 0x05
     c2e:	ed e1       	ldi	r30, 0x1D	; 29
     c30:	f4 e0       	ldi	r31, 0x04	; 4
     c32:	fc 83       	std	Y+4, r31	; 0x04
     c34:	eb 83       	std	Y+3, r30	; 0x03
     c36:	85 ea       	ldi	r24, 0xA5	; 165
     c38:	93 e0       	ldi	r25, 0x03	; 3
     c3a:	9a 83       	std	Y+2, r25	; 0x02
     c3c:	89 83       	std	Y+1, r24	; 0x01
     c3e:	0f 2e       	mov	r0, r31
     c40:	f0 e0       	ldi	r31, 0x00	; 0
     c42:	2f 2e       	mov	r2, r31
     c44:	f0 e0       	ldi	r31, 0x00	; 0
     c46:	3f 2e       	mov	r3, r31
     c48:	f0 e0       	ldi	r31, 0x00	; 0
     c4a:	4f 2e       	mov	r4, r31
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	5f 2e       	mov	r5, r31
     c50:	f0 2d       	mov	r31, r0
     c52:	2f 86       	std	Y+15, r2	; 0x0f
     c54:	38 8a       	std	Y+16, r3	; 0x10
     c56:	49 8a       	std	Y+17, r4	; 0x11
     c58:	5a 8a       	std	Y+18, r5	; 0x12
     c5a:	2b 86       	std	Y+11, r2	; 0x0b
     c5c:	3c 86       	std	Y+12, r3	; 0x0c
     c5e:	4d 86       	std	Y+13, r4	; 0x0d
     c60:	5e 86       	std	Y+14, r5	; 0x0e
     c62:	2f 82       	std	Y+7, r2	; 0x07
     c64:	38 86       	std	Y+8, r3	; 0x08
     c66:	49 86       	std	Y+9, r4	; 0x09
     c68:	5a 86       	std	Y+10, r5	; 0x0a
     c6a:	43 c0       	rjmp	.+134    	; 0xcf2 <prefilter+0x10c>
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     c6c:	a0 90 30 02 	lds	r10, 0x0230
     c70:	b0 90 31 02 	lds	r11, 0x0231
     c74:	c0 90 32 02 	lds	r12, 0x0232
     c78:	d0 90 33 02 	lds	r13, 0x0233
			rtIR_old[i] = rtIR;
     c7c:	e0 90 34 02 	lds	r14, 0x0234
     c80:	f0 90 35 02 	lds	r15, 0x0235
     c84:	00 91 36 02 	lds	r16, 0x0236
     c88:	10 91 37 02 	lds	r17, 0x0237
			ftIR_old[i] = ftIR;
     c8c:	20 90 38 02 	lds	r2, 0x0238
     c90:	30 90 39 02 	lds	r3, 0x0239
     c94:	40 90 3a 02 	lds	r4, 0x023A
     c98:	50 90 3b 02 	lds	r5, 0x023B
			bkIR_old[i] = bkIR;
     c9c:	20 91 3c 02 	lds	r18, 0x023C
     ca0:	30 91 3d 02 	lds	r19, 0x023D
     ca4:	40 91 3e 02 	lds	r20, 0x023E
     ca8:	50 91 3f 02 	lds	r21, 0x023F
     cac:	80 e0       	ldi	r24, 0x00	; 0
     cae:	90 e0       	ldi	r25, 0x00	; 0
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     cb0:	fc 01       	movw	r30, r24
     cb2:	e3 54       	subi	r30, 0x43	; 67
     cb4:	fd 4f       	sbci	r31, 0xFD	; 253
     cb6:	a0 82       	st	Z, r10
     cb8:	b1 82       	std	Z+1, r11	; 0x01
     cba:	c2 82       	std	Z+2, r12	; 0x02
     cbc:	d3 82       	std	Z+3, r13	; 0x03
			rtIR_old[i] = rtIR;
     cbe:	fc 01       	movw	r30, r24
     cc0:	eb 5d       	subi	r30, 0xDB	; 219
     cc2:	fb 4f       	sbci	r31, 0xFB	; 251
     cc4:	e0 82       	st	Z, r14
     cc6:	f1 82       	std	Z+1, r15	; 0x01
     cc8:	02 83       	std	Z+2, r16	; 0x02
     cca:	13 83       	std	Z+3, r17	; 0x03
			ftIR_old[i] = ftIR;
     ccc:	fc 01       	movw	r30, r24
     cce:	e3 55       	subi	r30, 0x53	; 83
     cd0:	fc 4f       	sbci	r31, 0xFC	; 252
     cd2:	20 82       	st	Z, r2
     cd4:	31 82       	std	Z+1, r3	; 0x01
     cd6:	42 82       	std	Z+2, r4	; 0x02
     cd8:	53 82       	std	Z+3, r5	; 0x03
			bkIR_old[i] = bkIR;
     cda:	fc 01       	movw	r30, r24
     cdc:	eb 5c       	subi	r30, 0xCB	; 203
     cde:	fc 4f       	sbci	r31, 0xFC	; 252
     ce0:	20 83       	st	Z, r18
     ce2:	31 83       	std	Z+1, r19	; 0x01
     ce4:	42 83       	std	Z+2, r20	; 0x02
     ce6:	53 83       	std	Z+3, r21	; 0x03
     ce8:	04 96       	adiw	r24, 0x04	; 4
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
     cea:	88 37       	cpi	r24, 0x78	; 120
     cec:	91 05       	cpc	r25, r1
     cee:	01 f7       	brne	.-64     	; 0xcb0 <prefilter+0xca>
     cf0:	96 cf       	rjmp	.-212    	; 0xc1e <prefilter+0x38>
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
	{
		j = i - 1;
		ltIR_old[i] = ltIR_old[j];
     cf2:	ab 89       	ldd	r26, Y+19	; 0x13
     cf4:	bc 89       	ldd	r27, Y+20	; 0x14
     cf6:	2d 91       	ld	r18, X+
     cf8:	3d 91       	ld	r19, X+
     cfa:	4d 91       	ld	r20, X+
     cfc:	5c 91       	ld	r21, X
     cfe:	13 97       	sbiw	r26, 0x03	; 3
     d00:	fd 01       	movw	r30, r26
     d02:	24 83       	std	Z+4, r18	; 0x04
     d04:	35 83       	std	Z+5, r19	; 0x05
     d06:	46 83       	std	Z+6, r20	; 0x06
     d08:	57 83       	std	Z+7, r21	; 0x07
		rtIR_old[i] = rtIR_old[j];
     d0a:	ad 81       	ldd	r26, Y+5	; 0x05
     d0c:	be 81       	ldd	r27, Y+6	; 0x06
     d0e:	ed 90       	ld	r14, X+
     d10:	fd 90       	ld	r15, X+
     d12:	0d 91       	ld	r16, X+
     d14:	1c 91       	ld	r17, X
     d16:	13 97       	sbiw	r26, 0x03	; 3
     d18:	fd 01       	movw	r30, r26
     d1a:	e4 82       	std	Z+4, r14	; 0x04
     d1c:	f5 82       	std	Z+5, r15	; 0x05
     d1e:	06 83       	std	Z+6, r16	; 0x06
     d20:	17 83       	std	Z+7, r17	; 0x07
		ftIR_old[i] = ftIR_old[j];
     d22:	ab 81       	ldd	r26, Y+3	; 0x03
     d24:	bc 81       	ldd	r27, Y+4	; 0x04
     d26:	ad 90       	ld	r10, X+
     d28:	bd 90       	ld	r11, X+
     d2a:	cd 90       	ld	r12, X+
     d2c:	dc 90       	ld	r13, X
     d2e:	13 97       	sbiw	r26, 0x03	; 3
     d30:	fd 01       	movw	r30, r26
     d32:	a4 82       	std	Z+4, r10	; 0x04
     d34:	b5 82       	std	Z+5, r11	; 0x05
     d36:	c6 82       	std	Z+6, r12	; 0x06
     d38:	d7 82       	std	Z+7, r13	; 0x07
		bkIR_old[i] = bkIR_old[j];
     d3a:	a9 81       	ldd	r26, Y+1	; 0x01
     d3c:	ba 81       	ldd	r27, Y+2	; 0x02
     d3e:	6d 90       	ld	r6, X+
     d40:	7d 90       	ld	r7, X+
     d42:	8d 90       	ld	r8, X+
     d44:	9c 90       	ld	r9, X
     d46:	13 97       	sbiw	r26, 0x03	; 3
     d48:	fd 01       	movw	r30, r26
     d4a:	64 82       	std	Z+4, r6	; 0x04
     d4c:	75 82       	std	Z+5, r7	; 0x05
     d4e:	86 82       	std	Z+6, r8	; 0x06
     d50:	97 82       	std	Z+7, r9	; 0x07
		ltIR_new += ltIR_old[i];
     d52:	c2 01       	movw	r24, r4
     d54:	b1 01       	movw	r22, r2
     d56:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
     d5a:	1b 01       	movw	r2, r22
     d5c:	2c 01       	movw	r4, r24
		rtIR_new += rtIR_old[i];
     d5e:	6f 85       	ldd	r22, Y+15	; 0x0f
     d60:	78 89       	ldd	r23, Y+16	; 0x10
     d62:	89 89       	ldd	r24, Y+17	; 0x11
     d64:	9a 89       	ldd	r25, Y+18	; 0x12
     d66:	a8 01       	movw	r20, r16
     d68:	97 01       	movw	r18, r14
     d6a:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
     d6e:	6f 87       	std	Y+15, r22	; 0x0f
     d70:	78 8b       	std	Y+16, r23	; 0x10
     d72:	89 8b       	std	Y+17, r24	; 0x11
     d74:	9a 8b       	std	Y+18, r25	; 0x12
		ftIR_new += ftIR_old[i];
     d76:	6b 85       	ldd	r22, Y+11	; 0x0b
     d78:	7c 85       	ldd	r23, Y+12	; 0x0c
     d7a:	8d 85       	ldd	r24, Y+13	; 0x0d
     d7c:	9e 85       	ldd	r25, Y+14	; 0x0e
     d7e:	a6 01       	movw	r20, r12
     d80:	95 01       	movw	r18, r10
     d82:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
     d86:	6b 87       	std	Y+11, r22	; 0x0b
     d88:	7c 87       	std	Y+12, r23	; 0x0c
     d8a:	8d 87       	std	Y+13, r24	; 0x0d
     d8c:	9e 87       	std	Y+14, r25	; 0x0e
		bkIR_new += bkIR_old[i];
     d8e:	6f 81       	ldd	r22, Y+7	; 0x07
     d90:	78 85       	ldd	r23, Y+8	; 0x08
     d92:	89 85       	ldd	r24, Y+9	; 0x09
     d94:	9a 85       	ldd	r25, Y+10	; 0x0a
     d96:	a4 01       	movw	r20, r8
     d98:	93 01       	movw	r18, r6
     d9a:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
     d9e:	6f 83       	std	Y+7, r22	; 0x07
     da0:	78 87       	std	Y+8, r23	; 0x08
     da2:	89 87       	std	Y+9, r24	; 0x09
     da4:	9a 87       	std	Y+10, r25	; 0x0a
     da6:	8b 89       	ldd	r24, Y+19	; 0x13
     da8:	9c 89       	ldd	r25, Y+20	; 0x14
     daa:	04 97       	sbiw	r24, 0x04	; 4
     dac:	9c 8b       	std	Y+20, r25	; 0x14
     dae:	8b 8b       	std	Y+19, r24	; 0x13
     db0:	ad 81       	ldd	r26, Y+5	; 0x05
     db2:	be 81       	ldd	r27, Y+6	; 0x06
     db4:	14 97       	sbiw	r26, 0x04	; 4
     db6:	be 83       	std	Y+6, r27	; 0x06
     db8:	ad 83       	std	Y+5, r26	; 0x05
     dba:	eb 81       	ldd	r30, Y+3	; 0x03
     dbc:	fc 81       	ldd	r31, Y+4	; 0x04
     dbe:	34 97       	sbiw	r30, 0x04	; 4
     dc0:	fc 83       	std	Y+4, r31	; 0x04
     dc2:	eb 83       	std	Y+3, r30	; 0x03
     dc4:	89 81       	ldd	r24, Y+1	; 0x01
     dc6:	9a 81       	ldd	r25, Y+2	; 0x02
     dc8:	04 97       	sbiw	r24, 0x04	; 4
     dca:	9a 83       	std	Y+2, r25	; 0x02
     dcc:	89 83       	std	Y+1, r24	; 0x01
	float ftIR_new = 0;
	float bkIR_new = 0;
	
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
     dce:	ab 89       	ldd	r26, Y+19	; 0x13
     dd0:	bc 89       	ldd	r27, Y+20	; 0x14
     dd2:	a5 5b       	subi	r26, 0xB5	; 181
     dd4:	b2 40       	sbci	r27, 0x02	; 2
     dd6:	09 f0       	breq	.+2      	; 0xdda <prefilter+0x1f4>
     dd8:	8c cf       	rjmp	.-232    	; 0xcf2 <prefilter+0x10c>
		bkIR_new += bkIR_old[i];
	}
	
	// Set the current reading to the first element 
	// within the historical array
	ltIR_old[0] = ltIR;
     dda:	80 91 30 02 	lds	r24, 0x0230
     dde:	90 91 31 02 	lds	r25, 0x0231
     de2:	a0 91 32 02 	lds	r26, 0x0232
     de6:	b0 91 33 02 	lds	r27, 0x0233
     dea:	eb 89       	ldd	r30, Y+19	; 0x13
     dec:	fc 89       	ldd	r31, Y+20	; 0x14
     dee:	80 87       	std	Z+8, r24	; 0x08
     df0:	91 87       	std	Z+9, r25	; 0x09
     df2:	a2 87       	std	Z+10, r26	; 0x0a
     df4:	b3 87       	std	Z+11, r27	; 0x0b
	rtIR_old[0] = rtIR;
     df6:	80 91 34 02 	lds	r24, 0x0234
     dfa:	90 91 35 02 	lds	r25, 0x0235
     dfe:	a0 91 36 02 	lds	r26, 0x0236
     e02:	b0 91 37 02 	lds	r27, 0x0237
     e06:	80 93 25 04 	sts	0x0425, r24
     e0a:	90 93 26 04 	sts	0x0426, r25
     e0e:	a0 93 27 04 	sts	0x0427, r26
     e12:	b0 93 28 04 	sts	0x0428, r27
	ftIR_old[0] = ftIR;
     e16:	80 91 38 02 	lds	r24, 0x0238
     e1a:	90 91 39 02 	lds	r25, 0x0239
     e1e:	a0 91 3a 02 	lds	r26, 0x023A
     e22:	b0 91 3b 02 	lds	r27, 0x023B
     e26:	80 93 ad 03 	sts	0x03AD, r24
     e2a:	90 93 ae 03 	sts	0x03AE, r25
     e2e:	a0 93 af 03 	sts	0x03AF, r26
     e32:	b0 93 b0 03 	sts	0x03B0, r27
	bkIR_old[0] = bkIR;
     e36:	80 91 3c 02 	lds	r24, 0x023C
     e3a:	90 91 3d 02 	lds	r25, 0x023D
     e3e:	a0 91 3e 02 	lds	r26, 0x023E
     e42:	b0 91 3f 02 	lds	r27, 0x023F
     e46:	80 93 35 03 	sts	0x0335, r24
     e4a:	90 93 36 03 	sts	0x0336, r25
     e4e:	a0 93 37 03 	sts	0x0337, r26
     e52:	b0 93 38 03 	sts	0x0338, r27
	
	// Calculate the average value within the array
	// and said that as the new current measurement
	ltIR = ltIR_new/PREFILTER_SIZE;
     e56:	c2 01       	movw	r24, r4
     e58:	b1 01       	movw	r22, r2
     e5a:	20 e0       	ldi	r18, 0x00	; 0
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	40 ef       	ldi	r20, 0xF0	; 240
     e60:	51 e4       	ldi	r21, 0x41	; 65
     e62:	0e 94 c3 20 	call	0x4186	; 0x4186 <__divsf3>
     e66:	60 93 30 02 	sts	0x0230, r22
     e6a:	70 93 31 02 	sts	0x0231, r23
     e6e:	80 93 32 02 	sts	0x0232, r24
     e72:	90 93 33 02 	sts	0x0233, r25
	rtIR = rtIR_new/PREFILTER_SIZE;
     e76:	6f 85       	ldd	r22, Y+15	; 0x0f
     e78:	78 89       	ldd	r23, Y+16	; 0x10
     e7a:	89 89       	ldd	r24, Y+17	; 0x11
     e7c:	9a 89       	ldd	r25, Y+18	; 0x12
     e7e:	20 e0       	ldi	r18, 0x00	; 0
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	40 ef       	ldi	r20, 0xF0	; 240
     e84:	51 e4       	ldi	r21, 0x41	; 65
     e86:	0e 94 c3 20 	call	0x4186	; 0x4186 <__divsf3>
     e8a:	60 93 34 02 	sts	0x0234, r22
     e8e:	70 93 35 02 	sts	0x0235, r23
     e92:	80 93 36 02 	sts	0x0236, r24
     e96:	90 93 37 02 	sts	0x0237, r25
	ftIR = ftIR_new/PREFILTER_SIZE;
     e9a:	6b 85       	ldd	r22, Y+11	; 0x0b
     e9c:	7c 85       	ldd	r23, Y+12	; 0x0c
     e9e:	8d 85       	ldd	r24, Y+13	; 0x0d
     ea0:	9e 85       	ldd	r25, Y+14	; 0x0e
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	40 ef       	ldi	r20, 0xF0	; 240
     ea8:	51 e4       	ldi	r21, 0x41	; 65
     eaa:	0e 94 c3 20 	call	0x4186	; 0x4186 <__divsf3>
     eae:	60 93 38 02 	sts	0x0238, r22
     eb2:	70 93 39 02 	sts	0x0239, r23
     eb6:	80 93 3a 02 	sts	0x023A, r24
     eba:	90 93 3b 02 	sts	0x023B, r25
	bkIR = bkIR_new/PREFILTER_SIZE;
     ebe:	6f 81       	ldd	r22, Y+7	; 0x07
     ec0:	78 85       	ldd	r23, Y+8	; 0x08
     ec2:	89 85       	ldd	r24, Y+9	; 0x09
     ec4:	9a 85       	ldd	r25, Y+10	; 0x0a
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	40 ef       	ldi	r20, 0xF0	; 240
     ecc:	51 e4       	ldi	r21, 0x41	; 65
     ece:	0e 94 c3 20 	call	0x4186	; 0x4186 <__divsf3>
     ed2:	60 93 3c 02 	sts	0x023C, r22
     ed6:	70 93 3d 02 	sts	0x023D, r23
     eda:	80 93 3e 02 	sts	0x023E, r24
     ede:	90 93 3f 02 	sts	0x023F, r25
}
     ee2:	64 96       	adiw	r28, 0x14	; 20
     ee4:	0f b6       	in	r0, 0x3f	; 63
     ee6:	f8 94       	cli
     ee8:	de bf       	out	0x3e, r29	; 62
     eea:	0f be       	out	0x3f, r0	; 63
     eec:	cd bf       	out	0x3d, r28	; 61
     eee:	cf 91       	pop	r28
     ef0:	df 91       	pop	r29
     ef2:	1f 91       	pop	r17
     ef4:	0f 91       	pop	r16
     ef6:	ff 90       	pop	r15
     ef8:	ef 90       	pop	r14
     efa:	df 90       	pop	r13
     efc:	cf 90       	pop	r12
     efe:	bf 90       	pop	r11
     f00:	af 90       	pop	r10
     f02:	9f 90       	pop	r9
     f04:	8f 90       	pop	r8
     f06:	7f 90       	pop	r7
     f08:	6f 90       	pop	r6
     f0a:	5f 90       	pop	r5
     f0c:	4f 90       	pop	r4
     f0e:	3f 90       	pop	r3
     f10:	2f 90       	pop	r2
     f12:	08 95       	ret

00000f14 <pidController>:
* Output Return:	float
* Overview:			This computes the control effort using a PID 
*					controller approach
********************************************************************/
float pidController(float error, char reset )
{	
     f14:	6f 92       	push	r6
     f16:	7f 92       	push	r7
     f18:	8f 92       	push	r8
     f1a:	9f 92       	push	r9
     f1c:	af 92       	push	r10
     f1e:	bf 92       	push	r11
     f20:	cf 92       	push	r12
     f22:	df 92       	push	r13
     f24:	ef 92       	push	r14
     f26:	ff 92       	push	r15
     f28:	0f 93       	push	r16
     f2a:	1f 93       	push	r17
     f2c:	3b 01       	movw	r6, r22
     f2e:	4c 01       	movw	r8, r24
	// Reset the integrator error if specified
	if(reset){
     f30:	44 23       	and	r20, r20
     f32:	61 f0       	breq	.+24     	; 0xf4c <pidController+0x38>
		Ierror = 0;
     f34:	80 e0       	ldi	r24, 0x00	; 0
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	a0 e0       	ldi	r26, 0x00	; 0
     f3a:	b0 e0       	ldi	r27, 0x00	; 0
     f3c:	80 93 28 02 	sts	0x0228, r24
     f40:	90 93 29 02 	sts	0x0229, r25
     f44:	a0 93 2a 02 	sts	0x022A, r26
     f48:	b0 93 2b 02 	sts	0x022B, r27
	}
	// At the current error to the running sum
	Ierror += error;
     f4c:	c4 01       	movw	r24, r8
     f4e:	b3 01       	movw	r22, r6
     f50:	20 91 28 02 	lds	r18, 0x0228
     f54:	30 91 29 02 	lds	r19, 0x0229
     f58:	40 91 2a 02 	lds	r20, 0x022A
     f5c:	50 91 2b 02 	lds	r21, 0x022B
     f60:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
     f64:	5b 01       	movw	r10, r22
     f66:	6c 01       	movw	r12, r24
     f68:	60 93 28 02 	sts	0x0228, r22
     f6c:	70 93 29 02 	sts	0x0229, r23
     f70:	80 93 2a 02 	sts	0x022A, r24
     f74:	90 93 2b 02 	sts	0x022B, r25
     f78:	c4 01       	movw	r24, r8
     f7a:	b3 01       	movw	r22, r6
     f7c:	a4 01       	movw	r20, r8
     f7e:	93 01       	movw	r18, r6
     f80:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
     f84:	7b 01       	movw	r14, r22
     f86:	8c 01       	movw	r16, r24
     f88:	c4 01       	movw	r24, r8
     f8a:	b3 01       	movw	r22, r6
     f8c:	20 91 2c 02 	lds	r18, 0x022C
     f90:	30 91 2d 02 	lds	r19, 0x022D
     f94:	40 91 2e 02 	lds	r20, 0x022E
     f98:	50 91 2f 02 	lds	r21, 0x022F
     f9c:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <__subsf3>
     fa0:	20 e0       	ldi	r18, 0x00	; 0
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	40 ea       	ldi	r20, 0xA0	; 160
     fa6:	50 e4       	ldi	r21, 0x40	; 64
     fa8:	0e 94 4c 22 	call	0x4498	; 0x4498 <__mulsf3>
     fac:	9b 01       	movw	r18, r22
     fae:	ac 01       	movw	r20, r24
     fb0:	c8 01       	movw	r24, r16
     fb2:	b7 01       	movw	r22, r14
     fb4:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
     fb8:	7b 01       	movw	r14, r22
     fba:	8c 01       	movw	r16, r24
     fbc:	c6 01       	movw	r24, r12
     fbe:	b5 01       	movw	r22, r10
     fc0:	2f e6       	ldi	r18, 0x6F	; 111
     fc2:	32 e1       	ldi	r19, 0x12	; 18
     fc4:	43 e8       	ldi	r20, 0x83	; 131
     fc6:	5a e3       	ldi	r21, 0x3A	; 58
     fc8:	0e 94 4c 22 	call	0x4498	; 0x4498 <__mulsf3>
     fcc:	9b 01       	movw	r18, r22
     fce:	ac 01       	movw	r20, r24
     fd0:	c8 01       	movw	r24, r16
     fd2:	b7 01       	movw	r22, r14
     fd4:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
	
	// Use the PID controller approach to calculate the effort
	float effort = (KP*error) + (KD*(error-error_old)) + (KI*Ierror);
	
	return effort;	
}
     fd8:	1f 91       	pop	r17
     fda:	0f 91       	pop	r16
     fdc:	ff 90       	pop	r15
     fde:	ef 90       	pop	r14
     fe0:	df 90       	pop	r13
     fe2:	cf 90       	pop	r12
     fe4:	bf 90       	pop	r11
     fe6:	af 90       	pop	r10
     fe8:	9f 90       	pop	r9
     fea:	8f 90       	pop	r8
     fec:	7f 90       	pop	r7
     fee:	6f 90       	pop	r6
     ff0:	08 95       	ret

00000ff2 <check_threshhold>:
* Output Return:	char
* Overview:			This check the IR values to thresholds
********************************************************************/

char check_threshhold(float F, float B, float L, float R)
{
     ff2:	2f 92       	push	r2
     ff4:	6f 92       	push	r6
     ff6:	7f 92       	push	r7
     ff8:	8f 92       	push	r8
     ffa:	9f 92       	push	r9
     ffc:	af 92       	push	r10
     ffe:	bf 92       	push	r11
    1000:	cf 92       	push	r12
    1002:	df 92       	push	r13
    1004:	ef 92       	push	r14
    1006:	ff 92       	push	r15
    1008:	0f 93       	push	r16
    100a:	1f 93       	push	r17
    100c:	df 93       	push	r29
    100e:	cf 93       	push	r28
    1010:	00 d0       	rcall	.+0      	; 0x1012 <check_threshhold+0x20>
    1012:	00 d0       	rcall	.+0      	; 0x1014 <check_threshhold+0x22>
    1014:	cd b7       	in	r28, 0x3d	; 61
    1016:	de b7       	in	r29, 0x3e	; 62
    1018:	69 83       	std	Y+1, r22	; 0x01
    101a:	7a 83       	std	Y+2, r23	; 0x02
    101c:	8b 83       	std	Y+3, r24	; 0x03
    101e:	9c 83       	std	Y+4, r25	; 0x04
	char check = 0;
	check += 0b00000001*(ftIR < F);
    1020:	60 90 38 02 	lds	r6, 0x0238
    1024:	70 90 39 02 	lds	r7, 0x0239
    1028:	80 90 3a 02 	lds	r8, 0x023A
    102c:	90 90 3b 02 	lds	r9, 0x023B
	check += 0b00000010*(bkIR < B);
    1030:	60 91 3c 02 	lds	r22, 0x023C
    1034:	70 91 3d 02 	lds	r23, 0x023D
    1038:	80 91 3e 02 	lds	r24, 0x023E
    103c:	90 91 3f 02 	lds	r25, 0x023F
    1040:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    1044:	28 2e       	mov	r2, r24
    1046:	22 1c       	adc	r2, r2
    1048:	22 24       	eor	r2, r2
    104a:	22 1c       	adc	r2, r2
    104c:	22 0c       	add	r2, r2
	check += 0b00000100*(ltIR < L);
    104e:	60 91 30 02 	lds	r22, 0x0230
    1052:	70 91 31 02 	lds	r23, 0x0231
    1056:	80 91 32 02 	lds	r24, 0x0232
    105a:	90 91 33 02 	lds	r25, 0x0233
    105e:	a8 01       	movw	r20, r16
    1060:	97 01       	movw	r18, r14
    1062:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    1066:	08 2f       	mov	r16, r24
    1068:	00 1f       	adc	r16, r16
    106a:	00 27       	eor	r16, r16
    106c:	00 1f       	adc	r16, r16
    106e:	00 0f       	add	r16, r16
    1070:	00 0f       	add	r16, r16
	check += 0b00001000*(rtIR < R);
    1072:	60 91 34 02 	lds	r22, 0x0234
    1076:	70 91 35 02 	lds	r23, 0x0235
    107a:	80 91 36 02 	lds	r24, 0x0236
    107e:	90 91 37 02 	lds	r25, 0x0237
    1082:	a6 01       	movw	r20, r12
    1084:	95 01       	movw	r18, r10
    1086:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    108a:	18 2f       	mov	r17, r24
    108c:	11 1f       	adc	r17, r17
    108e:	11 27       	eor	r17, r17
    1090:	11 1f       	adc	r17, r17
    1092:	11 0f       	add	r17, r17
    1094:	11 0f       	add	r17, r17
    1096:	11 0f       	add	r17, r17

char check_threshhold(float F, float B, float L, float R)
{
	char check = 0;
	check += 0b00000001*(ftIR < F);
	check += 0b00000010*(bkIR < B);
    1098:	ff 24       	eor	r15, r15
    109a:	c4 01       	movw	r24, r8
    109c:	b3 01       	movw	r22, r6
    109e:	29 81       	ldd	r18, Y+1	; 0x01
    10a0:	3a 81       	ldd	r19, Y+2	; 0x02
    10a2:	4b 81       	ldd	r20, Y+3	; 0x03
    10a4:	5c 81       	ldd	r21, Y+4	; 0x04
    10a6:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    10aa:	88 23       	and	r24, r24
    10ac:	14 f4       	brge	.+4      	; 0x10b2 <check_threshhold+0xc0>
    10ae:	ff 24       	eor	r15, r15
    10b0:	f3 94       	inc	r15
    10b2:	2f 0c       	add	r2, r15
	check += 0b00000100*(ltIR < L);
    10b4:	20 0e       	add	r2, r16
	check += 0b00001000*(rtIR < R);
	return check;	
}
    10b6:	82 2d       	mov	r24, r2
    10b8:	81 0f       	add	r24, r17
    10ba:	0f 90       	pop	r0
    10bc:	0f 90       	pop	r0
    10be:	0f 90       	pop	r0
    10c0:	0f 90       	pop	r0
    10c2:	cf 91       	pop	r28
    10c4:	df 91       	pop	r29
    10c6:	1f 91       	pop	r17
    10c8:	0f 91       	pop	r16
    10ca:	ff 90       	pop	r15
    10cc:	ef 90       	pop	r14
    10ce:	df 90       	pop	r13
    10d0:	cf 90       	pop	r12
    10d2:	bf 90       	pop	r11
    10d4:	af 90       	pop	r10
    10d6:	9f 90       	pop	r9
    10d8:	8f 90       	pop	r8
    10da:	7f 90       	pop	r7
    10dc:	6f 90       	pop	r6
    10de:	2f 90       	pop	r2
    10e0:	08 95       	ret

000010e2 <move_arc_stwt>:
		// bool stepper_FWD = arcLength >= 0;
		// STEPPER_move_stwt( STEPPER_BOTH, 
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk, // Left
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk); // Right
	// }
}
    10e2:	08 95       	ret

000010e4 <checkIR>:
*					finding sensor values sequentially
********************************************************************/
void checkIR( void )
{
	// Update all IR values
	ftIR = getFrontIR();
    10e4:	0e 94 ef 04 	call	0x9de	; 0x9de <getFrontIR>
    10e8:	60 93 38 02 	sts	0x0238, r22
    10ec:	70 93 39 02 	sts	0x0239, r23
    10f0:	80 93 3a 02 	sts	0x023A, r24
    10f4:	90 93 3b 02 	sts	0x023B, r25
	bkIR = getBackIR();
    10f8:	0e 94 cc 04 	call	0x998	; 0x998 <getBackIR>
    10fc:	60 93 3c 02 	sts	0x023C, r22
    1100:	70 93 3d 02 	sts	0x023D, r23
    1104:	80 93 3e 02 	sts	0x023E, r24
    1108:	90 93 3f 02 	sts	0x023F, r25
	ltIR = getLeftIR();
    110c:	0e 94 35 05 	call	0xa6a	; 0xa6a <getLeftIR>
    1110:	60 93 30 02 	sts	0x0230, r22
    1114:	70 93 31 02 	sts	0x0231, r23
    1118:	80 93 32 02 	sts	0x0232, r24
    111c:	90 93 33 02 	sts	0x0233, r25
	rtIR = getRightIR();
    1120:	0e 94 12 05 	call	0xa24	; 0xa24 <getRightIR>
    1124:	60 93 34 02 	sts	0x0234, r22
    1128:	70 93 35 02 	sts	0x0235, r23
    112c:	80 93 36 02 	sts	0x0236, r24
    1130:	90 93 37 02 	sts	0x0237, r25
}
    1134:	08 95       	ret

00001136 <moveAway>:
* Input Variables:	none
* Output Return:	char
* Overview:			Use a comment block like this before functions
********************************************************************/
char moveAway ( void )
{	
    1136:	2f 92       	push	r2
    1138:	3f 92       	push	r3
    113a:	4f 92       	push	r4
    113c:	5f 92       	push	r5
    113e:	6f 92       	push	r6
    1140:	7f 92       	push	r7
    1142:	8f 92       	push	r8
    1144:	9f 92       	push	r9
    1146:	af 92       	push	r10
    1148:	bf 92       	push	r11
    114a:	cf 92       	push	r12
    114c:	df 92       	push	r13
    114e:	ef 92       	push	r14
    1150:	ff 92       	push	r15
    1152:	0f 93       	push	r16
    1154:	1f 93       	push	r17
    1156:	df 93       	push	r29
    1158:	cf 93       	push	r28
    115a:	00 d0       	rcall	.+0      	; 0x115c <moveAway+0x26>
    115c:	00 d0       	rcall	.+0      	; 0x115e <moveAway+0x28>
    115e:	cd b7       	in	r28, 0x3d	; 61
    1160:	de b7       	in	r29, 0x3e	; 62
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
    1162:	60 90 38 02 	lds	r6, 0x0238
    1166:	70 90 39 02 	lds	r7, 0x0239
    116a:	80 90 3a 02 	lds	r8, 0x023A
    116e:	90 90 3b 02 	lds	r9, 0x023B
    1172:	a0 90 3c 02 	lds	r10, 0x023C
    1176:	b0 90 3d 02 	lds	r11, 0x023D
    117a:	c0 90 3e 02 	lds	r12, 0x023E
    117e:	d0 90 3f 02 	lds	r13, 0x023F
	float moveX = rtIR - ltIR;
    1182:	e0 90 34 02 	lds	r14, 0x0234
    1186:	f0 90 35 02 	lds	r15, 0x0235
    118a:	00 91 36 02 	lds	r16, 0x0236
    118e:	10 91 37 02 	lds	r17, 0x0237
    1192:	20 90 30 02 	lds	r2, 0x0230
    1196:	30 90 31 02 	lds	r3, 0x0231
    119a:	40 90 32 02 	lds	r4, 0x0232
    119e:	50 90 33 02 	lds	r5, 0x0233
    11a2:	c8 01       	movw	r24, r16
    11a4:	b7 01       	movw	r22, r14
    11a6:	a2 01       	movw	r20, r4
    11a8:	91 01       	movw	r18, r2
    11aa:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <__subsf3>
    11ae:	69 83       	std	Y+1, r22	; 0x01
    11b0:	7a 83       	std	Y+2, r23	; 0x02
    11b2:	8b 83       	std	Y+3, r24	; 0x03
    11b4:	9c 83       	std	Y+4, r25	; 0x04
	
	// if the object is in front of us are behind us
	// move appropriately in the Y direction
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
    11b6:	c4 01       	movw	r24, r8
    11b8:	b3 01       	movw	r22, r6
    11ba:	20 e0       	ldi	r18, 0x00	; 0
    11bc:	30 e0       	ldi	r19, 0x00	; 0
    11be:	40 e8       	ldi	r20, 0x80	; 128
    11c0:	5f e3       	ldi	r21, 0x3F	; 63
    11c2:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    11c6:	87 fd       	sbrc	r24, 7
    11c8:	0b c0       	rjmp	.+22     	; 0x11e0 <moveAway+0xaa>
    11ca:	c6 01       	movw	r24, r12
    11cc:	b5 01       	movw	r22, r10
    11ce:	20 e0       	ldi	r18, 0x00	; 0
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	40 e8       	ldi	r20, 0x80	; 128
    11d4:	5f e3       	ldi	r21, 0x3F	; 63
    11d6:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    11da:	88 23       	and	r24, r24
    11dc:	0c f0       	brlt	.+2      	; 0x11e0 <moveAway+0xaa>
    11de:	76 c0       	rjmp	.+236    	; 0x12cc <moveAway+0x196>
{	
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
    11e0:	c4 01       	movw	r24, r8
    11e2:	b3 01       	movw	r22, r6
    11e4:	a6 01       	movw	r20, r12
    11e6:	95 01       	movw	r18, r10
    11e8:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <__subsf3>
    11ec:	7b 01       	movw	r14, r22
    11ee:	8c 01       	movw	r16, r24
	
	// if the object is in front of us are behind us
	// move appropriately in the Y direction
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
	{
			BOOL moveForward = ~(moveY <= 0);
    11f0:	dd 24       	eor	r13, r13
    11f2:	20 e0       	ldi	r18, 0x00	; 0
    11f4:	30 e0       	ldi	r19, 0x00	; 0
    11f6:	40 e0       	ldi	r20, 0x00	; 0
    11f8:	50 e0       	ldi	r21, 0x00	; 0
    11fa:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    11fe:	18 16       	cp	r1, r24
    1200:	14 f0       	brlt	.+4      	; 0x1206 <moveAway+0xd0>
    1202:	dd 24       	eor	r13, r13
    1204:	d3 94       	inc	r13
    1206:	7d 2c       	mov	r7, r13
    1208:	70 94       	com	r7
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    120a:	c8 01       	movw	r24, r16
    120c:	b7 01       	movw	r22, r14
    120e:	0e 94 2b 21 	call	0x4256	; 0x4256 <__fixsfsi>
    1212:	9b 01       	movw	r18, r22
    1214:	77 ff       	sbrs	r23, 7
    1216:	03 c0       	rjmp	.+6      	; 0x121e <moveAway+0xe8>
    1218:	30 95       	com	r19
    121a:	21 95       	neg	r18
    121c:	3f 4f       	sbci	r19, 0xFF	; 255
    121e:	b9 01       	movw	r22, r18
    1220:	88 27       	eor	r24, r24
    1222:	77 fd       	sbrc	r23, 7
    1224:	80 95       	com	r24
    1226:	98 2f       	mov	r25, r24
    1228:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__floatsisf>
    122c:	6b 01       	movw	r12, r22
    122e:	7c 01       	movw	r14, r24
    1230:	8d b7       	in	r24, 0x3d	; 61
    1232:	9e b7       	in	r25, 0x3e	; 62
    1234:	09 97       	sbiw	r24, 0x09	; 9
    1236:	0f b6       	in	r0, 0x3f	; 63
    1238:	f8 94       	cli
    123a:	9e bf       	out	0x3e, r25	; 62
    123c:	0f be       	out	0x3f, r0	; 63
    123e:	8d bf       	out	0x3d, r24	; 61
    1240:	0d b7       	in	r16, 0x3d	; 61
    1242:	1e b7       	in	r17, 0x3e	; 62
    1244:	0f 5f       	subi	r16, 0xFF	; 255
    1246:	1f 4f       	sbci	r17, 0xFF	; 255
    1248:	c7 01       	movw	r24, r14
    124a:	b6 01       	movw	r22, r12
    124c:	29 81       	ldd	r18, Y+1	; 0x01
    124e:	3a 81       	ldd	r19, Y+2	; 0x02
    1250:	4b 81       	ldd	r20, Y+3	; 0x03
    1252:	5c 81       	ldd	r21, Y+4	; 0x04
    1254:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
    1258:	0e 94 30 21 	call	0x4260	; 0x4260 <__fixunssfsi>
    125c:	4b 01       	movw	r8, r22
    125e:	5c 01       	movw	r10, r24
    1260:	82 e3       	ldi	r24, 0x32	; 50
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	f8 01       	movw	r30, r16
    1266:	91 83       	std	Z+1, r25	; 0x01
    1268:	80 83       	st	Z, r24
    126a:	c7 01       	movw	r24, r14
    126c:	b6 01       	movw	r22, r12
    126e:	29 81       	ldd	r18, Y+1	; 0x01
    1270:	3a 81       	ldd	r19, Y+2	; 0x02
    1272:	4b 81       	ldd	r20, Y+3	; 0x03
    1274:	5c 81       	ldd	r21, Y+4	; 0x04
    1276:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <__subsf3>
    127a:	0e 94 30 21 	call	0x4260	; 0x4260 <__fixunssfsi>
    127e:	f8 01       	movw	r30, r16
    1280:	73 83       	std	Z+3, r23	; 0x03
    1282:	62 83       	std	Z+2, r22	; 0x02
    1284:	82 ec       	ldi	r24, 0xC2	; 194
    1286:	91 e0       	ldi	r25, 0x01	; 1
    1288:	95 83       	std	Z+5, r25	; 0x05
    128a:	84 83       	std	Z+4, r24	; 0x04
    128c:	16 82       	std	Z+6, r1	; 0x06
    128e:	10 86       	std	Z+8, r1	; 0x08
    1290:	17 82       	std	Z+7, r1	; 0x07
    1292:	81 e0       	ldi	r24, 0x01	; 1
    1294:	62 e0       	ldi	r22, 0x02	; 2
    1296:	47 2d       	mov	r20, r7
    1298:	22 e3       	ldi	r18, 0x32	; 50
    129a:	30 e0       	ldi	r19, 0x00	; 0
    129c:	84 01       	movw	r16, r8
    129e:	52 ec       	ldi	r21, 0xC2	; 194
    12a0:	e5 2e       	mov	r14, r21
    12a2:	51 e0       	ldi	r21, 0x01	; 1
    12a4:	f5 2e       	mov	r15, r21
    12a6:	cc 24       	eor	r12, r12
    12a8:	aa 24       	eor	r10, r10
    12aa:	bb 24       	eor	r11, r11
    12ac:	87 2c       	mov	r8, r7
    12ae:	0e 94 84 10 	call	0x2108	; 0x2108 <STEPPER_move>
			moveForward, 50, abs(moveY)+moveX, 450, STEPPER_BRK_OFF, // Left
			moveForward, 50, abs(moveY)-moveX, 450, STEPPER_BRK_OFF ); // Right
			
			// debug LCP print statement
			LCD_clear();
    12b2:	8d b7       	in	r24, 0x3d	; 61
    12b4:	9e b7       	in	r25, 0x3e	; 62
    12b6:	09 96       	adiw	r24, 0x09	; 9
    12b8:	0f b6       	in	r0, 0x3f	; 63
    12ba:	f8 94       	cli
    12bc:	9e bf       	out	0x3e, r25	; 62
    12be:	0f be       	out	0x3f, r0	; 63
    12c0:	8d bf       	out	0x3d, r24	; 61
    12c2:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <LCD_clear>
			LCD_printf("moveAwayF\n\n\n\n");
    12c6:	84 e2       	ldi	r24, 0x24	; 36
    12c8:	91 e0       	ldi	r25, 0x01	; 1
    12ca:	78 c0       	rjmp	.+240    	; 0x13bc <moveAway+0x286>
			shyRobot = 1;
	}
	
	// if the object is on either side of the robot
	// rotate the robot appropriately
	else if ((rtIR < IR_OBST_R_THRESH)|(ltIR < IR_OBST_L_THRESH))
    12cc:	c8 01       	movw	r24, r16
    12ce:	b7 01       	movw	r22, r14
    12d0:	20 e0       	ldi	r18, 0x00	; 0
    12d2:	30 e0       	ldi	r19, 0x00	; 0
    12d4:	40 e8       	ldi	r20, 0x80	; 128
    12d6:	5f e3       	ldi	r21, 0x3F	; 63
    12d8:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    12dc:	87 fd       	sbrc	r24, 7
    12de:	0c c0       	rjmp	.+24     	; 0x12f8 <moveAway+0x1c2>
    12e0:	c2 01       	movw	r24, r4
    12e2:	b1 01       	movw	r22, r2
    12e4:	20 e0       	ldi	r18, 0x00	; 0
    12e6:	30 e0       	ldi	r19, 0x00	; 0
    12e8:	40 e8       	ldi	r20, 0x80	; 128
    12ea:	5f e3       	ldi	r21, 0x3F	; 63
    12ec:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    12f0:	87 fd       	sbrc	r24, 7
    12f2:	02 c0       	rjmp	.+4      	; 0x12f8 <moveAway+0x1c2>
    12f4:	80 e0       	ldi	r24, 0x00	; 0
    12f6:	65 c0       	rjmp	.+202    	; 0x13c2 <moveAway+0x28c>
	{
			BOOL moveForwardR = ~(moveX <= 0);
			BOOL moveForwardL = ~(moveX > 0);
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    12f8:	69 81       	ldd	r22, Y+1	; 0x01
    12fa:	7a 81       	ldd	r23, Y+2	; 0x02
    12fc:	8b 81       	ldd	r24, Y+3	; 0x03
    12fe:	9c 81       	ldd	r25, Y+4	; 0x04
    1300:	0e 94 2b 21 	call	0x4256	; 0x4256 <__fixsfsi>
    1304:	8b 01       	movw	r16, r22
    1306:	77 ff       	sbrs	r23, 7
    1308:	03 c0       	rjmp	.+6      	; 0x1310 <moveAway+0x1da>
    130a:	10 95       	com	r17
    130c:	01 95       	neg	r16
    130e:	1f 4f       	sbci	r17, 0xFF	; 255
    1310:	ed b7       	in	r30, 0x3d	; 61
    1312:	fe b7       	in	r31, 0x3e	; 62
    1314:	39 97       	sbiw	r30, 0x09	; 9
    1316:	0f b6       	in	r0, 0x3f	; 63
    1318:	f8 94       	cli
    131a:	fe bf       	out	0x3e, r31	; 62
    131c:	0f be       	out	0x3f, r0	; 63
    131e:	ed bf       	out	0x3d, r30	; 61
    1320:	ad b6       	in	r10, 0x3d	; 61
    1322:	be b6       	in	r11, 0x3e	; 62
    1324:	08 94       	sec
    1326:	a1 1c       	adc	r10, r1
    1328:	b1 1c       	adc	r11, r1
    132a:	ff 24       	eor	r15, r15
    132c:	69 81       	ldd	r22, Y+1	; 0x01
    132e:	7a 81       	ldd	r23, Y+2	; 0x02
    1330:	8b 81       	ldd	r24, Y+3	; 0x03
    1332:	9c 81       	ldd	r25, Y+4	; 0x04
    1334:	20 e0       	ldi	r18, 0x00	; 0
    1336:	30 e0       	ldi	r19, 0x00	; 0
    1338:	40 e0       	ldi	r20, 0x00	; 0
    133a:	50 e0       	ldi	r21, 0x00	; 0
    133c:	0e 94 0e 22 	call	0x441c	; 0x441c <__gesf2>
    1340:	18 16       	cp	r1, r24
    1342:	14 f4       	brge	.+4      	; 0x1348 <moveAway+0x212>
    1344:	ff 24       	eor	r15, r15
    1346:	f3 94       	inc	r15
    1348:	f0 94       	com	r15
    134a:	dd 24       	eor	r13, r13
    134c:	69 81       	ldd	r22, Y+1	; 0x01
    134e:	7a 81       	ldd	r23, Y+2	; 0x02
    1350:	8b 81       	ldd	r24, Y+3	; 0x03
    1352:	9c 81       	ldd	r25, Y+4	; 0x04
    1354:	20 e0       	ldi	r18, 0x00	; 0
    1356:	30 e0       	ldi	r19, 0x00	; 0
    1358:	40 e0       	ldi	r20, 0x00	; 0
    135a:	50 e0       	ldi	r21, 0x00	; 0
    135c:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    1360:	18 16       	cp	r1, r24
    1362:	14 f0       	brlt	.+4      	; 0x1368 <moveAway+0x232>
    1364:	dd 24       	eor	r13, r13
    1366:	d3 94       	inc	r13
    1368:	d0 94       	com	r13
    136a:	88 ec       	ldi	r24, 0xC8	; 200
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	f5 01       	movw	r30, r10
    1370:	91 83       	std	Z+1, r25	; 0x01
    1372:	80 83       	st	Z, r24
    1374:	13 83       	std	Z+3, r17	; 0x03
    1376:	02 83       	std	Z+2, r16	; 0x02
    1378:	82 ec       	ldi	r24, 0xC2	; 194
    137a:	91 e0       	ldi	r25, 0x01	; 1
    137c:	95 83       	std	Z+5, r25	; 0x05
    137e:	84 83       	std	Z+4, r24	; 0x04
    1380:	16 82       	std	Z+6, r1	; 0x06
    1382:	10 86       	std	Z+8, r1	; 0x08
    1384:	17 82       	std	Z+7, r1	; 0x07
    1386:	81 e0       	ldi	r24, 0x01	; 1
    1388:	62 e0       	ldi	r22, 0x02	; 2
    138a:	4f 2d       	mov	r20, r15
    138c:	28 ec       	ldi	r18, 0xC8	; 200
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	92 ec       	ldi	r25, 0xC2	; 194
    1392:	e9 2e       	mov	r14, r25
    1394:	91 e0       	ldi	r25, 0x01	; 1
    1396:	f9 2e       	mov	r15, r25
    1398:	cc 24       	eor	r12, r12
    139a:	aa 24       	eor	r10, r10
    139c:	bb 24       	eor	r11, r11
    139e:	8d 2c       	mov	r8, r13
    13a0:	0e 94 84 10 	call	0x2108	; 0x2108 <STEPPER_move>
			moveForwardL, 200, abs(moveX), 450, STEPPER_BRK_OFF, // Left
			moveForwardR, 200, abs(moveX), 450, STEPPER_BRK_OFF ); // Right
			
			// debug LCP print statement
			LCD_clear();
    13a4:	8d b7       	in	r24, 0x3d	; 61
    13a6:	9e b7       	in	r25, 0x3e	; 62
    13a8:	09 96       	adiw	r24, 0x09	; 9
    13aa:	0f b6       	in	r0, 0x3f	; 63
    13ac:	f8 94       	cli
    13ae:	9e bf       	out	0x3e, r25	; 62
    13b0:	0f be       	out	0x3f, r0	; 63
    13b2:	8d bf       	out	0x3d, r24	; 61
    13b4:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <LCD_clear>
			LCD_printf("moveAwayS\n\n\n\n");
    13b8:	81 e3       	ldi	r24, 0x31	; 49
    13ba:	91 e0       	ldi	r25, 0x01	; 1
    13bc:	0e 94 a5 2a 	call	0x554a	; 0x554a <puts>
    13c0:	81 e0       	ldi	r24, 0x01	; 1
			// state that fact
			shyRobot = 1;
	}
	
	return shyRobot;
}
    13c2:	0f 90       	pop	r0
    13c4:	0f 90       	pop	r0
    13c6:	0f 90       	pop	r0
    13c8:	0f 90       	pop	r0
    13ca:	cf 91       	pop	r28
    13cc:	df 91       	pop	r29
    13ce:	1f 91       	pop	r17
    13d0:	0f 91       	pop	r16
    13d2:	ff 90       	pop	r15
    13d4:	ef 90       	pop	r14
    13d6:	df 90       	pop	r13
    13d8:	cf 90       	pop	r12
    13da:	bf 90       	pop	r11
    13dc:	af 90       	pop	r10
    13de:	9f 90       	pop	r9
    13e0:	8f 90       	pop	r8
    13e2:	7f 90       	pop	r7
    13e4:	6f 90       	pop	r6
    13e6:	5f 90       	pop	r5
    13e8:	4f 90       	pop	r4
    13ea:	3f 90       	pop	r3
    13ec:	2f 90       	pop	r2
    13ee:	08 95       	ret

000013f0 <moveWander>:
* Output Return:	none
* Overview:			This function checks for walls and moves the 
*					robot randomly if walls are not detected
********************************************************************/
char moveWander ( void )
{
    13f0:	2f 92       	push	r2
    13f2:	3f 92       	push	r3
    13f4:	4f 92       	push	r4
    13f6:	5f 92       	push	r5
    13f8:	6f 92       	push	r6
    13fa:	7f 92       	push	r7
    13fc:	8f 92       	push	r8
    13fe:	af 92       	push	r10
    1400:	bf 92       	push	r11
    1402:	cf 92       	push	r12
    1404:	df 92       	push	r13
    1406:	ef 92       	push	r14
    1408:	ff 92       	push	r15
    140a:	0f 93       	push	r16
    140c:	1f 93       	push	r17
    140e:	df 93       	push	r29
    1410:	cf 93       	push	r28
    1412:	00 d0       	rcall	.+0      	; 0x1414 <moveWander+0x24>
    1414:	00 d0       	rcall	.+0      	; 0x1416 <moveWander+0x26>
    1416:	cd b7       	in	r28, 0x3d	; 61
    1418:	de b7       	in	r29, 0x3e	; 62
	// Check to see if a object has encountered the object thresholds
	// or that any other lower-level function requires execution
	char isShy = moveAway();
    141a:	0e 94 9b 08 	call	0x1136	; 0x1136 <moveAway>
    141e:	c8 2e       	mov	r12, r24
	if (isShy)
    1420:	88 23       	and	r24, r24
    1422:	09 f0       	breq	.+2      	; 0x1426 <moveWander+0x36>
    1424:	15 c1       	rjmp	.+554    	; 0x1650 <moveWander+0x260>
	
	char isWander = 0;
	
	// Check for walls before attempting to wonder
	// if the wall is detected return without wandering
	if ((ftIR < IR_WALL_F_THRESH)|(bkIR < IR_WALL_B_THRESH)|(rtIR < IR_WALL_R_THRESH)|(ltIR < IR_WALL_L_THRESH))
    1426:	ee 24       	eor	r14, r14
    1428:	ff 24       	eor	r15, r15
    142a:	60 91 30 02 	lds	r22, 0x0230
    142e:	70 91 31 02 	lds	r23, 0x0231
    1432:	80 91 32 02 	lds	r24, 0x0232
    1436:	90 91 33 02 	lds	r25, 0x0233
    143a:	20 e0       	ldi	r18, 0x00	; 0
    143c:	30 e0       	ldi	r19, 0x00	; 0
    143e:	40 ea       	ldi	r20, 0xA0	; 160
    1440:	51 e4       	ldi	r21, 0x41	; 65
    1442:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    1446:	88 23       	and	r24, r24
    1448:	1c f4       	brge	.+6      	; 0x1450 <moveWander+0x60>
    144a:	f1 e0       	ldi	r31, 0x01	; 1
    144c:	ef 2e       	mov	r14, r31
    144e:	f1 2c       	mov	r15, r1
    1450:	00 e0       	ldi	r16, 0x00	; 0
    1452:	10 e0       	ldi	r17, 0x00	; 0
    1454:	60 91 34 02 	lds	r22, 0x0234
    1458:	70 91 35 02 	lds	r23, 0x0235
    145c:	80 91 36 02 	lds	r24, 0x0236
    1460:	90 91 37 02 	lds	r25, 0x0237
    1464:	20 e0       	ldi	r18, 0x00	; 0
    1466:	30 e0       	ldi	r19, 0x00	; 0
    1468:	40 ea       	ldi	r20, 0xA0	; 160
    146a:	51 e4       	ldi	r21, 0x41	; 65
    146c:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    1470:	88 23       	and	r24, r24
    1472:	14 f4       	brge	.+4      	; 0x1478 <moveWander+0x88>
    1474:	01 e0       	ldi	r16, 0x01	; 1
    1476:	10 e0       	ldi	r17, 0x00	; 0
    1478:	0e 29       	or	r16, r14
    147a:	1f 29       	or	r17, r15
    147c:	ff 24       	eor	r15, r15
    147e:	60 91 38 02 	lds	r22, 0x0238
    1482:	70 91 39 02 	lds	r23, 0x0239
    1486:	80 91 3a 02 	lds	r24, 0x023A
    148a:	90 91 3b 02 	lds	r25, 0x023B
    148e:	20 e0       	ldi	r18, 0x00	; 0
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	40 ea       	ldi	r20, 0xA0	; 160
    1494:	51 e4       	ldi	r21, 0x41	; 65
    1496:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    149a:	88 23       	and	r24, r24
    149c:	14 f4       	brge	.+4      	; 0x14a2 <moveWander+0xb2>
    149e:	ff 24       	eor	r15, r15
    14a0:	f3 94       	inc	r15
    14a2:	ee 24       	eor	r14, r14
    14a4:	60 91 3c 02 	lds	r22, 0x023C
    14a8:	70 91 3d 02 	lds	r23, 0x023D
    14ac:	80 91 3e 02 	lds	r24, 0x023E
    14b0:	90 91 3f 02 	lds	r25, 0x023F
    14b4:	20 e0       	ldi	r18, 0x00	; 0
    14b6:	30 e0       	ldi	r19, 0x00	; 0
    14b8:	48 ec       	ldi	r20, 0xC8	; 200
    14ba:	51 e4       	ldi	r21, 0x41	; 65
    14bc:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    14c0:	88 23       	and	r24, r24
    14c2:	14 f4       	brge	.+4      	; 0x14c8 <moveWander+0xd8>
    14c4:	ee 24       	eor	r14, r14
    14c6:	e3 94       	inc	r14
    14c8:	fe 28       	or	r15, r14
    14ca:	8f 2d       	mov	r24, r15
    14cc:	90 e0       	ldi	r25, 0x00	; 0
    14ce:	08 2b       	or	r16, r24
    14d0:	19 2b       	or	r17, r25
    14d2:	01 2b       	or	r16, r17
    14d4:	09 f0       	breq	.+2      	; 0x14d8 <moveWander+0xe8>
    14d6:	bc c0       	rjmp	.+376    	; 0x1650 <moveWander+0x260>
	}
	
	else
	{
		// reset Ierror if we are now wandering
		Ierror = 0;
    14d8:	80 e0       	ldi	r24, 0x00	; 0
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	a0 e0       	ldi	r26, 0x00	; 0
    14de:	b0 e0       	ldi	r27, 0x00	; 0
    14e0:	80 93 28 02 	sts	0x0228, r24
    14e4:	90 93 29 02 	sts	0x0229, r25
    14e8:	a0 93 2a 02 	sts	0x022A, r26
    14ec:	b0 93 2b 02 	sts	0x022B, r27
		
		// if we are wondering
		// first check the current progress of our wondering
		STEPPER_STEPS curr_steps = STEPPER_get_nSteps();
    14f0:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <STEPPER_get_nSteps>
		
		
		// IF my motion is complete do another random motion
		if ((curr_steps.left == 0)&(curr_steps.right == 0))
    14f4:	67 2b       	or	r22, r23
    14f6:	11 f4       	brne	.+4      	; 0x14fc <moveWander+0x10c>
    14f8:	89 2b       	or	r24, r25
    14fa:	19 f0       	breq	.+6      	; 0x1502 <moveWander+0x112>
    14fc:	cc 24       	eor	r12, r12
    14fe:	c3 94       	inc	r12
    1500:	a7 c0       	rjmp	.+334    	; 0x1650 <moveWander+0x260>
		{
			// create random values for wheel position and wheel speed
			int moveRand = rand()%400+400;
    1502:	0e 94 6a 29 	call	0x52d4	; 0x52d4 <rand>
    1506:	60 e9       	ldi	r22, 0x90	; 144
    1508:	71 e0       	ldi	r23, 0x01	; 1
    150a:	0e 94 9b 27 	call	0x4f36	; 0x4f36 <__divmodhi4>
    150e:	e0 e9       	ldi	r30, 0x90	; 144
    1510:	2e 2e       	mov	r2, r30
    1512:	e1 e0       	ldi	r30, 0x01	; 1
    1514:	3e 2e       	mov	r3, r30
    1516:	28 0e       	add	r2, r24
    1518:	39 1e       	adc	r3, r25
			float turnRandR = rand()%200+200;
    151a:	0e 94 6a 29 	call	0x52d4	; 0x52d4 <rand>
    151e:	68 ec       	ldi	r22, 0xC8	; 200
    1520:	70 e0       	ldi	r23, 0x00	; 0
    1522:	0e 94 9b 27 	call	0x4f36	; 0x4f36 <__divmodhi4>
    1526:	88 53       	subi	r24, 0x38	; 56
    1528:	9f 4f       	sbci	r25, 0xFF	; 255
    152a:	aa 27       	eor	r26, r26
    152c:	97 fd       	sbrc	r25, 7
    152e:	a0 95       	com	r26
    1530:	ba 2f       	mov	r27, r26
    1532:	bc 01       	movw	r22, r24
    1534:	cd 01       	movw	r24, r26
    1536:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__floatsisf>
    153a:	69 83       	std	Y+1, r22	; 0x01
    153c:	7a 83       	std	Y+2, r23	; 0x02
    153e:	8b 83       	std	Y+3, r24	; 0x03
    1540:	9c 83       	std	Y+4, r25	; 0x04
			float turnRandL = rand()%200+200;
    1542:	0e 94 6a 29 	call	0x52d4	; 0x52d4 <rand>
    1546:	68 ec       	ldi	r22, 0xC8	; 200
    1548:	70 e0       	ldi	r23, 0x00	; 0
    154a:	0e 94 9b 27 	call	0x4f36	; 0x4f36 <__divmodhi4>
    154e:	88 53       	subi	r24, 0x38	; 56
    1550:	9f 4f       	sbci	r25, 0xFF	; 255
    1552:	aa 27       	eor	r26, r26
    1554:	97 fd       	sbrc	r25, 7
    1556:	a0 95       	com	r26
    1558:	ba 2f       	mov	r27, r26
    155a:	bc 01       	movw	r22, r24
    155c:	cd 01       	movw	r24, r26
    155e:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__floatsisf>
    1562:	2b 01       	movw	r4, r22
    1564:	3c 01       	movw	r6, r24
			
			// Weight the chance that we will go forward slightly more
			// so that the robot may possibly traverse farther
			BOOL direction = ~((rand()%10)>7);
    1566:	0e 94 6a 29 	call	0x52d4	; 0x52d4 <rand>
    156a:	20 e0       	ldi	r18, 0x00	; 0
    156c:	6a e0       	ldi	r22, 0x0A	; 10
    156e:	70 e0       	ldi	r23, 0x00	; 0
    1570:	0e 94 9b 27 	call	0x4f36	; 0x4f36 <__divmodhi4>
    1574:	08 97       	sbiw	r24, 0x08	; 8
    1576:	0c f0       	brlt	.+2      	; 0x157a <moveWander+0x18a>
    1578:	21 e0       	ldi	r18, 0x01	; 1
    157a:	82 2e       	mov	r8, r18
    157c:	80 94       	com	r8
					
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    157e:	8d b7       	in	r24, 0x3d	; 61
    1580:	9e b7       	in	r25, 0x3e	; 62
    1582:	09 97       	sbiw	r24, 0x09	; 9
    1584:	0f b6       	in	r0, 0x3f	; 63
    1586:	f8 94       	cli
    1588:	9e bf       	out	0x3e, r25	; 62
    158a:	0f be       	out	0x3f, r0	; 63
    158c:	8d bf       	out	0x3d, r24	; 61
    158e:	0d b7       	in	r16, 0x3d	; 61
    1590:	1e b7       	in	r17, 0x3e	; 62
    1592:	0f 5f       	subi	r16, 0xFF	; 255
    1594:	1f 4f       	sbci	r17, 0xFF	; 255
    1596:	c3 01       	movw	r24, r6
    1598:	b2 01       	movw	r22, r4
    159a:	0e 94 30 21 	call	0x4260	; 0x4260 <__fixunssfsi>
    159e:	6b 01       	movw	r12, r22
    15a0:	7c 01       	movw	r14, r24
    15a2:	d8 01       	movw	r26, r16
    15a4:	2c 92       	st	X, r2
    15a6:	11 96       	adiw	r26, 0x01	; 1
    15a8:	3c 92       	st	X, r3
    15aa:	69 81       	ldd	r22, Y+1	; 0x01
    15ac:	7a 81       	ldd	r23, Y+2	; 0x02
    15ae:	8b 81       	ldd	r24, Y+3	; 0x03
    15b0:	9c 81       	ldd	r25, Y+4	; 0x04
    15b2:	0e 94 30 21 	call	0x4260	; 0x4260 <__fixunssfsi>
    15b6:	f8 01       	movw	r30, r16
    15b8:	73 83       	std	Z+3, r23	; 0x03
    15ba:	62 83       	std	Z+2, r22	; 0x02
    15bc:	82 ec       	ldi	r24, 0xC2	; 194
    15be:	91 e0       	ldi	r25, 0x01	; 1
    15c0:	95 83       	std	Z+5, r25	; 0x05
    15c2:	84 83       	std	Z+4, r24	; 0x04
    15c4:	16 82       	std	Z+6, r1	; 0x06
    15c6:	10 86       	std	Z+8, r1	; 0x08
    15c8:	17 82       	std	Z+7, r1	; 0x07
    15ca:	81 e0       	ldi	r24, 0x01	; 1
    15cc:	62 e0       	ldi	r22, 0x02	; 2
    15ce:	48 2d       	mov	r20, r8
    15d0:	91 01       	movw	r18, r2
    15d2:	86 01       	movw	r16, r12
    15d4:	72 ec       	ldi	r23, 0xC2	; 194
    15d6:	e7 2e       	mov	r14, r23
    15d8:	71 e0       	ldi	r23, 0x01	; 1
    15da:	f7 2e       	mov	r15, r23
    15dc:	cc 24       	eor	r12, r12
    15de:	aa 24       	eor	r10, r10
    15e0:	bb 24       	eor	r11, r11
    15e2:	0e 94 84 10 	call	0x2108	; 0x2108 <STEPPER_move>
			direction, moveRand, turnRandL, 450, STEPPER_BRK_OFF, // Left
			direction, moveRand, turnRandR, 450, STEPPER_BRK_OFF ); // Right
			
			// debug LCP print statement
			LCD_clear();
    15e6:	8d b7       	in	r24, 0x3d	; 61
    15e8:	9e b7       	in	r25, 0x3e	; 62
    15ea:	09 96       	adiw	r24, 0x09	; 9
    15ec:	0f b6       	in	r0, 0x3f	; 63
    15ee:	f8 94       	cli
    15f0:	9e bf       	out	0x3e, r25	; 62
    15f2:	0f be       	out	0x3f, r0	; 63
    15f4:	8d bf       	out	0x3d, r24	; 61
    15f6:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <LCD_clear>
			LCD_printf("moveWander\nmoveRand: %3d\nturnRandR: %3d\nturnRandL: %3d\n",moveRand,turnRandR,turnRandL);
    15fa:	ad b7       	in	r26, 0x3d	; 61
    15fc:	be b7       	in	r27, 0x3e	; 62
    15fe:	1c 97       	sbiw	r26, 0x0c	; 12
    1600:	0f b6       	in	r0, 0x3f	; 63
    1602:	f8 94       	cli
    1604:	be bf       	out	0x3e, r27	; 62
    1606:	0f be       	out	0x3f, r0	; 63
    1608:	ad bf       	out	0x3d, r26	; 61
    160a:	ed b7       	in	r30, 0x3d	; 61
    160c:	fe b7       	in	r31, 0x3e	; 62
    160e:	31 96       	adiw	r30, 0x01	; 1
    1610:	8e e3       	ldi	r24, 0x3E	; 62
    1612:	91 e0       	ldi	r25, 0x01	; 1
    1614:	12 96       	adiw	r26, 0x02	; 2
    1616:	9c 93       	st	X, r25
    1618:	8e 93       	st	-X, r24
    161a:	11 97       	sbiw	r26, 0x01	; 1
    161c:	33 82       	std	Z+3, r3	; 0x03
    161e:	22 82       	std	Z+2, r2	; 0x02
    1620:	89 81       	ldd	r24, Y+1	; 0x01
    1622:	9a 81       	ldd	r25, Y+2	; 0x02
    1624:	ab 81       	ldd	r26, Y+3	; 0x03
    1626:	bc 81       	ldd	r27, Y+4	; 0x04
    1628:	84 83       	std	Z+4, r24	; 0x04
    162a:	95 83       	std	Z+5, r25	; 0x05
    162c:	a6 83       	std	Z+6, r26	; 0x06
    162e:	b7 83       	std	Z+7, r27	; 0x07
    1630:	40 86       	std	Z+8, r4	; 0x08
    1632:	51 86       	std	Z+9, r5	; 0x09
    1634:	62 86       	std	Z+10, r6	; 0x0a
    1636:	73 86       	std	Z+11, r7	; 0x0b
    1638:	0e 94 93 2a 	call	0x5526	; 0x5526 <printf>
    163c:	cc 24       	eor	r12, r12
    163e:	c3 94       	inc	r12
    1640:	ad b7       	in	r26, 0x3d	; 61
    1642:	be b7       	in	r27, 0x3e	; 62
    1644:	1c 96       	adiw	r26, 0x0c	; 12
    1646:	0f b6       	in	r0, 0x3f	; 63
    1648:	f8 94       	cli
    164a:	be bf       	out	0x3e, r27	; 62
    164c:	0f be       	out	0x3f, r0	; 63
    164e:	ad bf       	out	0x3d, r26	; 61
		// If we have wondered
		// notify that we have
		isWander = 1;
	}
	return isWander;
}
    1650:	8c 2d       	mov	r24, r12
    1652:	0f 90       	pop	r0
    1654:	0f 90       	pop	r0
    1656:	0f 90       	pop	r0
    1658:	0f 90       	pop	r0
    165a:	cf 91       	pop	r28
    165c:	df 91       	pop	r29
    165e:	1f 91       	pop	r17
    1660:	0f 91       	pop	r16
    1662:	ff 90       	pop	r15
    1664:	ef 90       	pop	r14
    1666:	df 90       	pop	r13
    1668:	cf 90       	pop	r12
    166a:	bf 90       	pop	r11
    166c:	af 90       	pop	r10
    166e:	8f 90       	pop	r8
    1670:	7f 90       	pop	r7
    1672:	6f 90       	pop	r6
    1674:	5f 90       	pop	r5
    1676:	4f 90       	pop	r4
    1678:	3f 90       	pop	r3
    167a:	2f 90       	pop	r2
    167c:	08 95       	ret

0000167e <moveWall>:
* Overview:			This function searches for walls and adjust the 
*					robots differential steering to attempts to
*					follow them
********************************************************************/
char moveWall( void )
{	
    167e:	2f 92       	push	r2
    1680:	3f 92       	push	r3
    1682:	4f 92       	push	r4
    1684:	5f 92       	push	r5
    1686:	6f 92       	push	r6
    1688:	7f 92       	push	r7
    168a:	8f 92       	push	r8
    168c:	9f 92       	push	r9
    168e:	af 92       	push	r10
    1690:	bf 92       	push	r11
    1692:	cf 92       	push	r12
    1694:	df 92       	push	r13
    1696:	ef 92       	push	r14
    1698:	ff 92       	push	r15
    169a:	0f 93       	push	r16
    169c:	1f 93       	push	r17
    169e:	df 93       	push	r29
    16a0:	cf 93       	push	r28
    16a2:	00 d0       	rcall	.+0      	; 0x16a4 <moveWall+0x26>
    16a4:	00 d0       	rcall	.+0      	; 0x16a6 <moveWall+0x28>
    16a6:	0f 92       	push	r0
    16a8:	cd b7       	in	r28, 0x3d	; 61
    16aa:	de b7       	in	r29, 0x3e	; 62
	// Check to see if a wall has encountered the wall thresholds
	// or that any other lower-level function requires execution
	char isWander = moveWander();
    16ac:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <moveWander>
	if(isWander){
    16b0:	88 23       	and	r24, r24
    16b2:	09 f0       	breq	.+2      	; 0x16b6 <moveWall+0x38>
    16b4:	5d c1       	rjmp	.+698    	; 0x1970 <moveWall+0x2f2>
	// A variable that contains the logic of which wall is imaginary
	BOOL isLEFT;
	
	// If there is no wall on our right side
	// place an imaginary wall just within the threshold
	if(rtIR>IR_WALL_R_THRESH){
    16b6:	60 91 34 02 	lds	r22, 0x0234
    16ba:	70 91 35 02 	lds	r23, 0x0235
    16be:	80 91 36 02 	lds	r24, 0x0236
    16c2:	90 91 37 02 	lds	r25, 0x0237
    16c6:	20 e0       	ldi	r18, 0x00	; 0
    16c8:	30 e0       	ldi	r19, 0x00	; 0
    16ca:	40 ea       	ldi	r20, 0xA0	; 160
    16cc:	51 e4       	ldi	r21, 0x41	; 65
    16ce:	0e 94 0e 22 	call	0x441c	; 0x441c <__gesf2>
    16d2:	18 16       	cp	r1, r24
    16d4:	64 f4       	brge	.+24     	; 0x16ee <moveWall+0x70>
		rtIR = IR_WALL_R_THRESH-15;
    16d6:	80 e0       	ldi	r24, 0x00	; 0
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	a0 ea       	ldi	r26, 0xA0	; 160
    16dc:	b0 e4       	ldi	r27, 0x40	; 64
    16de:	80 93 34 02 	sts	0x0234, r24
    16e2:	90 93 35 02 	sts	0x0235, r25
    16e6:	a0 93 36 02 	sts	0x0236, r26
    16ea:	b0 93 37 02 	sts	0x0237, r27
		isLEFT = 0;
	}
	// If there is no wall on our left side
	// place an imaginary wall just within the threshold
	if(ltIR>IR_WALL_L_THRESH){
    16ee:	60 91 30 02 	lds	r22, 0x0230
    16f2:	70 91 31 02 	lds	r23, 0x0231
    16f6:	80 91 32 02 	lds	r24, 0x0232
    16fa:	90 91 33 02 	lds	r25, 0x0233
    16fe:	20 e0       	ldi	r18, 0x00	; 0
    1700:	30 e0       	ldi	r19, 0x00	; 0
    1702:	40 ea       	ldi	r20, 0xA0	; 160
    1704:	51 e4       	ldi	r21, 0x41	; 65
    1706:	0e 94 0e 22 	call	0x441c	; 0x441c <__gesf2>
    170a:	18 16       	cp	r1, r24
    170c:	14 f0       	brlt	.+4      	; 0x1712 <moveWall+0x94>
    170e:	cc 24       	eor	r12, r12
    1710:	0e c0       	rjmp	.+28     	; 0x172e <moveWall+0xb0>
		ltIR = IR_WALL_L_THRESH-15;
    1712:	80 e0       	ldi	r24, 0x00	; 0
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	a0 ea       	ldi	r26, 0xA0	; 160
    1718:	b0 e4       	ldi	r27, 0x40	; 64
    171a:	80 93 30 02 	sts	0x0230, r24
    171e:	90 93 31 02 	sts	0x0231, r25
    1722:	a0 93 32 02 	sts	0x0232, r26
    1726:	b0 93 33 02 	sts	0x0233, r27
    172a:	cc 24       	eor	r12, r12
    172c:	c3 94       	inc	r12
	}
	
	float error;
	
	// Check to see if the wall exists in front of the robot
	if(bkIR < IR_WALL_B_THRESH)
    172e:	e0 90 3c 02 	lds	r14, 0x023C
    1732:	f0 90 3d 02 	lds	r15, 0x023D
    1736:	00 91 3e 02 	lds	r16, 0x023E
    173a:	10 91 3f 02 	lds	r17, 0x023F
    173e:	c8 01       	movw	r24, r16
    1740:	b7 01       	movw	r22, r14
    1742:	20 e0       	ldi	r18, 0x00	; 0
    1744:	30 e0       	ldi	r19, 0x00	; 0
    1746:	48 ec       	ldi	r20, 0xC8	; 200
    1748:	51 e4       	ldi	r21, 0x41	; 65
    174a:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    174e:	88 23       	and	r24, r24
    1750:	84 f5       	brge	.+96     	; 0x17b2 <moveWall+0x134>
	{
		// if the imaginary wall was on the left side
		// then biased the error so that when the robot encounters
		// an upcoming corner, the robot will turn away from both walls
		if (isLEFT)
    1752:	cc 20       	and	r12, r12
    1754:	89 f0       	breq	.+34     	; 0x1778 <moveWall+0xfa>
		{
			error = rtIR - (ltIR + bkIR*bkIR);
    1756:	c8 01       	movw	r24, r16
    1758:	b7 01       	movw	r22, r14
    175a:	a8 01       	movw	r20, r16
    175c:	97 01       	movw	r18, r14
    175e:	0e 94 4c 22 	call	0x4498	; 0x4498 <__mulsf3>
    1762:	20 91 30 02 	lds	r18, 0x0230
    1766:	30 91 31 02 	lds	r19, 0x0231
    176a:	40 91 32 02 	lds	r20, 0x0232
    176e:	50 91 33 02 	lds	r21, 0x0233
    1772:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
    1776:	12 c0       	rjmp	.+36     	; 0x179c <moveWall+0x11e>
		}
		// biased the error appropriately for the inverse situation
		else 
		{
			error = rtIR - (ltIR - bkIR*bkIR);
    1778:	c8 01       	movw	r24, r16
    177a:	b7 01       	movw	r22, r14
    177c:	a8 01       	movw	r20, r16
    177e:	97 01       	movw	r18, r14
    1780:	0e 94 4c 22 	call	0x4498	; 0x4498 <__mulsf3>
    1784:	9b 01       	movw	r18, r22
    1786:	ac 01       	movw	r20, r24
    1788:	60 91 30 02 	lds	r22, 0x0230
    178c:	70 91 31 02 	lds	r23, 0x0231
    1790:	80 91 32 02 	lds	r24, 0x0232
    1794:	90 91 33 02 	lds	r25, 0x0233
    1798:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <__subsf3>
    179c:	9b 01       	movw	r18, r22
    179e:	ac 01       	movw	r20, r24
    17a0:	60 91 34 02 	lds	r22, 0x0234
    17a4:	70 91 35 02 	lds	r23, 0x0235
    17a8:	80 91 36 02 	lds	r24, 0x0236
    17ac:	90 91 37 02 	lds	r25, 0x0237
    17b0:	10 c0       	rjmp	.+32     	; 0x17d2 <moveWall+0x154>
	// the air is simply the right distance minus the left left distance
	// this ensures symmetry that the robot will follow in between the two walls
	// either one real and one imaginary, or both real
	else 
	{
		error = rtIR - ltIR;
    17b2:	60 91 34 02 	lds	r22, 0x0234
    17b6:	70 91 35 02 	lds	r23, 0x0235
    17ba:	80 91 36 02 	lds	r24, 0x0236
    17be:	90 91 37 02 	lds	r25, 0x0237
    17c2:	20 91 30 02 	lds	r18, 0x0230
    17c6:	30 91 31 02 	lds	r19, 0x0231
    17ca:	40 91 32 02 	lds	r20, 0x0232
    17ce:	50 91 33 02 	lds	r21, 0x0233
    17d2:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <__subsf3>
    17d6:	6d 83       	std	Y+5, r22	; 0x05
    17d8:	97 2e       	mov	r9, r23
    17da:	1c 01       	movw	r2, r24
	}

	// Use the PID controller function to calculate error
	float effort = pidController(error, 0);
    17dc:	2d 81       	ldd	r18, Y+5	; 0x05
    17de:	37 2f       	mov	r19, r23
    17e0:	b9 01       	movw	r22, r18
    17e2:	40 e0       	ldi	r20, 0x00	; 0
    17e4:	0e 94 8a 07 	call	0xf14	; 0xf14 <pidController>
    17e8:	2b 01       	movw	r4, r22
    17ea:	3c 01       	movw	r6, r24
	
	// Limit the control effort to the max allowable effort
	if((abs(effort) > MAX_EFFORT)&(effort!=0)){
    17ec:	0e 94 2b 21 	call	0x4256	; 0x4256 <__fixsfsi>
    17f0:	8b 01       	movw	r16, r22
    17f2:	77 ff       	sbrs	r23, 7
    17f4:	03 c0       	rjmp	.+6      	; 0x17fc <moveWall+0x17e>
    17f6:	10 95       	com	r17
    17f8:	01 95       	neg	r16
    17fa:	1f 4f       	sbci	r17, 0xFF	; 255
    17fc:	05 36       	cpi	r16, 0x65	; 101
    17fe:	11 05       	cpc	r17, r1
    1800:	fc f0       	brlt	.+62     	; 0x1840 <moveWall+0x1c2>
    1802:	c3 01       	movw	r24, r6
    1804:	b2 01       	movw	r22, r4
    1806:	20 e0       	ldi	r18, 0x00	; 0
    1808:	30 e0       	ldi	r19, 0x00	; 0
    180a:	40 e0       	ldi	r20, 0x00	; 0
    180c:	50 e0       	ldi	r21, 0x00	; 0
    180e:	0e 94 bf 20 	call	0x417e	; 0x417e <__cmpsf2>
    1812:	88 23       	and	r24, r24
    1814:	a9 f0       	breq	.+42     	; 0x1840 <moveWall+0x1c2>
		effort = MAX_EFFORT*(effort/abs(effort));
    1816:	b8 01       	movw	r22, r16
    1818:	88 27       	eor	r24, r24
    181a:	77 fd       	sbrc	r23, 7
    181c:	80 95       	com	r24
    181e:	98 2f       	mov	r25, r24
    1820:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__floatsisf>
    1824:	9b 01       	movw	r18, r22
    1826:	ac 01       	movw	r20, r24
    1828:	c3 01       	movw	r24, r6
    182a:	b2 01       	movw	r22, r4
    182c:	0e 94 c3 20 	call	0x4186	; 0x4186 <__divsf3>
    1830:	20 e0       	ldi	r18, 0x00	; 0
    1832:	30 e0       	ldi	r19, 0x00	; 0
    1834:	48 ec       	ldi	r20, 0xC8	; 200
    1836:	52 e4       	ldi	r21, 0x42	; 66
    1838:	0e 94 4c 22 	call	0x4498	; 0x4498 <__mulsf3>
    183c:	2b 01       	movw	r4, r22
    183e:	3c 01       	movw	r6, r24
	}
	
	// Calculate the stepper speeds for each wheel using a ratio
	float stepper_speed_L = MAX_SPEED/2 + (MAX_SPEED/2)*(effort/MAX_EFFORT);
    1840:	c3 01       	movw	r24, r6
    1842:	b2 01       	movw	r22, r4
    1844:	20 e0       	ldi	r18, 0x00	; 0
    1846:	30 e0       	ldi	r19, 0x00	; 0
    1848:	48 ec       	ldi	r20, 0xC8	; 200
    184a:	52 e4       	ldi	r21, 0x42	; 66
    184c:	0e 94 c3 20 	call	0x4186	; 0x4186 <__divsf3>
    1850:	6b 01       	movw	r12, r22
    1852:	7c 01       	movw	r14, r24
	float stepper_speed_R = MAX_SPEED/2 - (MAX_SPEED/2)*(effort/MAX_EFFORT);
	
	// Move with wall
	STEPPER_move_stnb( STEPPER_BOTH, 
    1854:	8d b7       	in	r24, 0x3d	; 61
    1856:	9e b7       	in	r25, 0x3e	; 62
    1858:	09 97       	sbiw	r24, 0x09	; 9
    185a:	0f b6       	in	r0, 0x3f	; 63
    185c:	f8 94       	cli
    185e:	9e bf       	out	0x3e, r25	; 62
    1860:	0f be       	out	0x3f, r0	; 63
    1862:	8d bf       	out	0x3d, r24	; 61
    1864:	0d b7       	in	r16, 0x3d	; 61
    1866:	1e b7       	in	r17, 0x3e	; 62
    1868:	0f 5f       	subi	r16, 0xFF	; 255
    186a:	1f 4f       	sbci	r17, 0xFF	; 255
    186c:	c7 01       	movw	r24, r14
    186e:	b6 01       	movw	r22, r12
    1870:	20 e0       	ldi	r18, 0x00	; 0
    1872:	30 e0       	ldi	r19, 0x00	; 0
    1874:	48 ec       	ldi	r20, 0xC8	; 200
    1876:	52 e4       	ldi	r21, 0x42	; 66
    1878:	0e 94 4c 22 	call	0x4498	; 0x4498 <__mulsf3>
    187c:	20 e0       	ldi	r18, 0x00	; 0
    187e:	30 e0       	ldi	r19, 0x00	; 0
    1880:	48 ec       	ldi	r20, 0xC8	; 200
    1882:	52 e4       	ldi	r21, 0x42	; 66
    1884:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
    1888:	0e 94 30 21 	call	0x4260	; 0x4260 <__fixunssfsi>
    188c:	69 83       	std	Y+1, r22	; 0x01
    188e:	7a 83       	std	Y+2, r23	; 0x02
    1890:	8b 83       	std	Y+3, r24	; 0x03
    1892:	9c 83       	std	Y+4, r25	; 0x04
    1894:	82 e3       	ldi	r24, 0x32	; 50
    1896:	90 e0       	ldi	r25, 0x00	; 0
    1898:	d8 01       	movw	r26, r16
    189a:	8d 93       	st	X+, r24
    189c:	9c 93       	st	X, r25
    189e:	c7 01       	movw	r24, r14
    18a0:	b6 01       	movw	r22, r12
    18a2:	20 e0       	ldi	r18, 0x00	; 0
    18a4:	30 e0       	ldi	r19, 0x00	; 0
    18a6:	48 ec       	ldi	r20, 0xC8	; 200
    18a8:	52 ec       	ldi	r21, 0xC2	; 194
    18aa:	0e 94 4c 22 	call	0x4498	; 0x4498 <__mulsf3>
    18ae:	20 e0       	ldi	r18, 0x00	; 0
    18b0:	30 e0       	ldi	r19, 0x00	; 0
    18b2:	48 ec       	ldi	r20, 0xC8	; 200
    18b4:	52 e4       	ldi	r21, 0x42	; 66
    18b6:	0e 94 5b 20 	call	0x40b6	; 0x40b6 <__addsf3>
    18ba:	0e 94 30 21 	call	0x4260	; 0x4260 <__fixunssfsi>
    18be:	f8 01       	movw	r30, r16
    18c0:	73 83       	std	Z+3, r23	; 0x03
    18c2:	62 83       	std	Z+2, r22	; 0x02
    18c4:	82 ec       	ldi	r24, 0xC2	; 194
    18c6:	91 e0       	ldi	r25, 0x01	; 1
    18c8:	95 83       	std	Z+5, r25	; 0x05
    18ca:	84 83       	std	Z+4, r24	; 0x04
    18cc:	16 82       	std	Z+6, r1	; 0x06
    18ce:	10 86       	std	Z+8, r1	; 0x08
    18d0:	17 82       	std	Z+7, r1	; 0x07
    18d2:	81 e0       	ldi	r24, 0x01	; 1
    18d4:	62 e0       	ldi	r22, 0x02	; 2
    18d6:	41 e0       	ldi	r20, 0x01	; 1
    18d8:	22 e3       	ldi	r18, 0x32	; 50
    18da:	30 e0       	ldi	r19, 0x00	; 0
    18dc:	09 81       	ldd	r16, Y+1	; 0x01
    18de:	1a 81       	ldd	r17, Y+2	; 0x02
    18e0:	a2 ec       	ldi	r26, 0xC2	; 194
    18e2:	ea 2e       	mov	r14, r26
    18e4:	a1 e0       	ldi	r26, 0x01	; 1
    18e6:	fa 2e       	mov	r15, r26
    18e8:	cc 24       	eor	r12, r12
    18ea:	aa 24       	eor	r10, r10
    18ec:	bb 24       	eor	r11, r11
    18ee:	88 24       	eor	r8, r8
    18f0:	83 94       	inc	r8
    18f2:	0e 94 84 10 	call	0x2108	; 0x2108 <STEPPER_move>
	STEPPER_REV, 50, stepper_speed_L, 450, STEPPER_BRK_OFF, // Left
	STEPPER_REV, 50, stepper_speed_R, 450, STEPPER_BRK_OFF ); // Right
	
	// debug LCP print statement
	LCD_clear();
    18f6:	8d b7       	in	r24, 0x3d	; 61
    18f8:	9e b7       	in	r25, 0x3e	; 62
    18fa:	09 96       	adiw	r24, 0x09	; 9
    18fc:	0f b6       	in	r0, 0x3f	; 63
    18fe:	f8 94       	cli
    1900:	9e bf       	out	0x3e, r25	; 62
    1902:	0f be       	out	0x3f, r0	; 63
    1904:	8d bf       	out	0x3d, r24	; 61
    1906:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <LCD_clear>
	LCD_printf("bkIR: %3.2f\nmoveWall\nError: %3f\nEffort: %3f\n", bkIR, error, effort);
    190a:	ad b7       	in	r26, 0x3d	; 61
    190c:	be b7       	in	r27, 0x3e	; 62
    190e:	1e 97       	sbiw	r26, 0x0e	; 14
    1910:	0f b6       	in	r0, 0x3f	; 63
    1912:	f8 94       	cli
    1914:	be bf       	out	0x3e, r27	; 62
    1916:	0f be       	out	0x3f, r0	; 63
    1918:	ad bf       	out	0x3d, r26	; 61
    191a:	ed b7       	in	r30, 0x3d	; 61
    191c:	fe b7       	in	r31, 0x3e	; 62
    191e:	31 96       	adiw	r30, 0x01	; 1
    1920:	86 e7       	ldi	r24, 0x76	; 118
    1922:	91 e0       	ldi	r25, 0x01	; 1
    1924:	12 96       	adiw	r26, 0x02	; 2
    1926:	9c 93       	st	X, r25
    1928:	8e 93       	st	-X, r24
    192a:	11 97       	sbiw	r26, 0x01	; 1
    192c:	80 91 3c 02 	lds	r24, 0x023C
    1930:	90 91 3d 02 	lds	r25, 0x023D
    1934:	a0 91 3e 02 	lds	r26, 0x023E
    1938:	b0 91 3f 02 	lds	r27, 0x023F
    193c:	82 83       	std	Z+2, r24	; 0x02
    193e:	93 83       	std	Z+3, r25	; 0x03
    1940:	a4 83       	std	Z+4, r26	; 0x04
    1942:	b5 83       	std	Z+5, r27	; 0x05
    1944:	2d 81       	ldd	r18, Y+5	; 0x05
    1946:	39 2d       	mov	r19, r9
    1948:	c9 01       	movw	r24, r18
    194a:	d1 01       	movw	r26, r2
    194c:	86 83       	std	Z+6, r24	; 0x06
    194e:	97 83       	std	Z+7, r25	; 0x07
    1950:	a0 87       	std	Z+8, r26	; 0x08
    1952:	b1 87       	std	Z+9, r27	; 0x09
    1954:	42 86       	std	Z+10, r4	; 0x0a
    1956:	53 86       	std	Z+11, r5	; 0x0b
    1958:	64 86       	std	Z+12, r6	; 0x0c
    195a:	75 86       	std	Z+13, r7	; 0x0d
    195c:	0e 94 93 2a 	call	0x5526	; 0x5526 <printf>
    1960:	ed b7       	in	r30, 0x3d	; 61
    1962:	fe b7       	in	r31, 0x3e	; 62
    1964:	3e 96       	adiw	r30, 0x0e	; 14
    1966:	0f b6       	in	r0, 0x3f	; 63
    1968:	f8 94       	cli
    196a:	fe bf       	out	0x3e, r31	; 62
    196c:	0f be       	out	0x3f, r0	; 63
    196e:	ed bf       	out	0x3d, r30	; 61
	
}
    1970:	0f 90       	pop	r0
    1972:	0f 90       	pop	r0
    1974:	0f 90       	pop	r0
    1976:	0f 90       	pop	r0
    1978:	0f 90       	pop	r0
    197a:	cf 91       	pop	r28
    197c:	df 91       	pop	r29
    197e:	1f 91       	pop	r17
    1980:	0f 91       	pop	r16
    1982:	ff 90       	pop	r15
    1984:	ef 90       	pop	r14
    1986:	df 90       	pop	r13
    1988:	cf 90       	pop	r12
    198a:	bf 90       	pop	r11
    198c:	af 90       	pop	r10
    198e:	9f 90       	pop	r9
    1990:	8f 90       	pop	r8
    1992:	7f 90       	pop	r7
    1994:	6f 90       	pop	r6
    1996:	5f 90       	pop	r5
    1998:	4f 90       	pop	r4
    199a:	3f 90       	pop	r3
    199c:	2f 90       	pop	r2
    199e:	08 95       	ret

000019a0 <CBOT_main>:
/*******************************************************************
* Function:        void CBOT_main( void )
********************************************************************/

void CBOT_main( void )
{
    19a0:	ef 92       	push	r14
    19a2:	ff 92       	push	r15
    19a4:	0f 93       	push	r16
    19a6:	1f 93       	push	r17
    19a8:	cf 93       	push	r28
    19aa:	df 93       	push	r29
	// Initialize variables
	int btnValue=0;//value of button pushed

	ATopstat = ATTINY_open();//open the tiny microcontroller
    19ac:	0e 94 be 13 	call	0x277c	; 0x277c <ATTINY_open>
    19b0:	90 93 bc 02 	sts	0x02BC, r25
    19b4:	80 93 bb 02 	sts	0x02BB, r24
	LEopstat = LED_open(); //open the LED module
    19b8:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <LED_open>
    19bc:	90 93 ba 02 	sts	0x02BA, r25
    19c0:	80 93 b9 02 	sts	0x02B9, r24
	LCopstat = LCD_open(); //open the LCD module
    19c4:	0e 94 c0 0d 	call	0x1b80	; 0x1b80 <LCD_open>
    19c8:	90 93 b8 02 	sts	0x02B8, r25
    19cc:	80 93 b7 02 	sts	0x02B7, r24
	STEPPER_open(); // Open STEPPER module for use
    19d0:	0e 94 2b 11 	call	0x2256	; 0x2256 <STEPPER_open>
	SPKR_open(SPKR_BEEP_MODE);//open the speaker in beep mode
    19d4:	81 e0       	ldi	r24, 0x01	; 1
    19d6:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <SPKR_open>
	
	LED_open();
    19da:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <LED_open>
	I2C_open();
    19de:	0e 94 18 15 	call	0x2a30	; 0x2a30 <I2C_open>
	ADC_open();//open the ADC module
    19e2:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <ADC_open>
 	ADC_set_VREF( ADC_VREF_AVCC );// Set the Voltage Reference first so VREF=5V.
    19e6:	81 e0       	ldi	r24, 0x01	; 1
    19e8:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <ADC_set_VREF>

	// Initialize IR Values and Reset Prefilter
	checkIR();
    19ec:	0e 94 72 08 	call	0x10e4	; 0x10e4 <checkIR>
	prefilter(1);
    19f0:	81 e0       	ldi	r24, 0x01	; 1
    19f2:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <prefilter>
	// Infinite loop
	while (1)
    {
		float voltageR = getRightLight();
		float voltageL = getLeftLight();
		LCD_printf("R Voltage: %3.2f\nL Voltage: %3.2f\n\n\n", voltageR, voltageL);
    19f6:	c3 ea       	ldi	r28, 0xA3	; 163
    19f8:	d1 e0       	ldi	r29, 0x01	; 1
	prefilter(1);

	// Infinite loop
	while (1)
    {
		float voltageR = getRightLight();
    19fa:	0e 94 58 05 	call	0xab0	; 0xab0 <getRightLight>
    19fe:	7b 01       	movw	r14, r22
    1a00:	8c 01       	movw	r16, r24
		float voltageL = getLeftLight();
    1a02:	0e 94 6d 05 	call	0xada	; 0xada <getLeftLight>
		LCD_printf("R Voltage: %3.2f\nL Voltage: %3.2f\n\n\n", voltageR, voltageL);
    1a06:	2d b7       	in	r18, 0x3d	; 61
    1a08:	3e b7       	in	r19, 0x3e	; 62
    1a0a:	2a 50       	subi	r18, 0x0A	; 10
    1a0c:	30 40       	sbci	r19, 0x00	; 0
    1a0e:	0f b6       	in	r0, 0x3f	; 63
    1a10:	f8 94       	cli
    1a12:	3e bf       	out	0x3e, r19	; 62
    1a14:	0f be       	out	0x3f, r0	; 63
    1a16:	2d bf       	out	0x3d, r18	; 61
    1a18:	ed b7       	in	r30, 0x3d	; 61
    1a1a:	fe b7       	in	r31, 0x3e	; 62
    1a1c:	31 96       	adiw	r30, 0x01	; 1
    1a1e:	ad b7       	in	r26, 0x3d	; 61
    1a20:	be b7       	in	r27, 0x3e	; 62
    1a22:	12 96       	adiw	r26, 0x02	; 2
    1a24:	dc 93       	st	X, r29
    1a26:	ce 93       	st	-X, r28
    1a28:	11 97       	sbiw	r26, 0x01	; 1
    1a2a:	e2 82       	std	Z+2, r14	; 0x02
    1a2c:	f3 82       	std	Z+3, r15	; 0x03
    1a2e:	04 83       	std	Z+4, r16	; 0x04
    1a30:	15 83       	std	Z+5, r17	; 0x05
    1a32:	66 83       	std	Z+6, r22	; 0x06
    1a34:	77 83       	std	Z+7, r23	; 0x07
    1a36:	80 87       	std	Z+8, r24	; 0x08
    1a38:	91 87       	std	Z+9, r25	; 0x09
    1a3a:	0e 94 93 2a 	call	0x5526	; 0x5526 <printf>
		TMRSRVC_delay(2000);//wait 2 seconds
    1a3e:	2d b7       	in	r18, 0x3d	; 61
    1a40:	3e b7       	in	r19, 0x3e	; 62
    1a42:	26 5f       	subi	r18, 0xF6	; 246
    1a44:	3f 4f       	sbci	r19, 0xFF	; 255
    1a46:	0f b6       	in	r0, 0x3f	; 63
    1a48:	f8 94       	cli
    1a4a:	3e bf       	out	0x3e, r19	; 62
    1a4c:	0f be       	out	0x3f, r0	; 63
    1a4e:	2d bf       	out	0x3d, r18	; 61
    1a50:	80 ed       	ldi	r24, 0xD0	; 208
    1a52:	97 e0       	ldi	r25, 0x07	; 7
    1a54:	0e 94 0d 14 	call	0x281a	; 0x281a <TMRSRVC_delay>
    1a58:	d0 cf       	rjmp	.-96     	; 0x19fa <CBOT_main+0x5a>

00001a5a <ADC_open>:
    1a5a:	8f e0       	ldi	r24, 0x0F	; 15
    1a5c:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    1a60:	88 23       	and	r24, r24
    1a62:	31 f4       	brne	.+12     	; 0x1a70 <ADC_open+0x16>
    1a64:	0e 94 3f 15 	call	0x2a7e	; 0x2a7e <__ADC_init>
    1a68:	8f e0       	ldi	r24, 0x0F	; 15
    1a6a:	61 e0       	ldi	r22, 0x01	; 1
    1a6c:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    1a70:	8f e0       	ldi	r24, 0x0F	; 15
    1a72:	91 e0       	ldi	r25, 0x01	; 1
    1a74:	08 95       	ret

00001a76 <ADC_sample>:
    1a76:	8f e0       	ldi	r24, 0x0F	; 15
    1a78:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    1a7c:	81 30       	cpi	r24, 0x01	; 1
    1a7e:	19 f0       	breq	.+6      	; 0x1a86 <ADC_sample+0x10>
    1a80:	20 e0       	ldi	r18, 0x00	; 0
    1a82:	30 e0       	ldi	r19, 0x00	; 0
    1a84:	13 c0       	rjmp	.+38     	; 0x1aac <ADC_sample+0x36>
    1a86:	80 91 7a 00 	lds	r24, 0x007A
    1a8a:	80 64       	ori	r24, 0x40	; 64
    1a8c:	80 93 7a 00 	sts	0x007A, r24
    1a90:	80 91 7a 00 	lds	r24, 0x007A
    1a94:	86 fd       	sbrc	r24, 6
    1a96:	fc cf       	rjmp	.-8      	; 0x1a90 <ADC_sample+0x1a>
    1a98:	30 91 78 00 	lds	r19, 0x0078
    1a9c:	20 91 79 00 	lds	r18, 0x0079
    1aa0:	92 2f       	mov	r25, r18
    1aa2:	80 e0       	ldi	r24, 0x00	; 0
    1aa4:	23 2f       	mov	r18, r19
    1aa6:	30 e0       	ldi	r19, 0x00	; 0
    1aa8:	28 2b       	or	r18, r24
    1aaa:	39 2b       	or	r19, r25
    1aac:	c9 01       	movw	r24, r18
    1aae:	08 95       	ret

00001ab0 <ADC_set_channel>:
    1ab0:	58 2f       	mov	r21, r24
    1ab2:	80 91 c8 01 	lds	r24, 0x01C8
    1ab6:	88 30       	cpi	r24, 0x08	; 8
    1ab8:	d8 f4       	brcc	.+54     	; 0x1af0 <ADC_set_channel+0x40>
    1aba:	40 91 7e 00 	lds	r20, 0x007E
    1abe:	21 e0       	ldi	r18, 0x01	; 1
    1ac0:	30 e0       	ldi	r19, 0x00	; 0
    1ac2:	b9 01       	movw	r22, r18
    1ac4:	02 c0       	rjmp	.+4      	; 0x1aca <ADC_set_channel+0x1a>
    1ac6:	66 0f       	add	r22, r22
    1ac8:	77 1f       	adc	r23, r23
    1aca:	8a 95       	dec	r24
    1acc:	e2 f7       	brpl	.-8      	; 0x1ac6 <ADC_set_channel+0x16>
    1ace:	cb 01       	movw	r24, r22
    1ad0:	80 95       	com	r24
    1ad2:	84 23       	and	r24, r20
    1ad4:	80 93 7e 00 	sts	0x007E, r24
    1ad8:	80 91 7e 00 	lds	r24, 0x007E
    1adc:	05 2e       	mov	r0, r21
    1ade:	02 c0       	rjmp	.+4      	; 0x1ae4 <ADC_set_channel+0x34>
    1ae0:	22 0f       	add	r18, r18
    1ae2:	33 1f       	adc	r19, r19
    1ae4:	0a 94       	dec	r0
    1ae6:	e2 f7       	brpl	.-8      	; 0x1ae0 <ADC_set_channel+0x30>
    1ae8:	82 2b       	or	r24, r18
    1aea:	80 93 7e 00 	sts	0x007E, r24
    1aee:	0d c0       	rjmp	.+26     	; 0x1b0a <ADC_set_channel+0x5a>
    1af0:	20 91 7e 00 	lds	r18, 0x007E
    1af4:	81 e0       	ldi	r24, 0x01	; 1
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	05 2e       	mov	r0, r21
    1afa:	02 c0       	rjmp	.+4      	; 0x1b00 <ADC_set_channel+0x50>
    1afc:	88 0f       	add	r24, r24
    1afe:	99 1f       	adc	r25, r25
    1b00:	0a 94       	dec	r0
    1b02:	e2 f7       	brpl	.-8      	; 0x1afc <ADC_set_channel+0x4c>
    1b04:	28 2b       	or	r18, r24
    1b06:	20 93 7e 00 	sts	0x007E, r18
    1b0a:	50 93 c8 01 	sts	0x01C8, r21
    1b0e:	80 91 7c 00 	lds	r24, 0x007C
    1b12:	5f 71       	andi	r21, 0x1F	; 31
    1b14:	80 7e       	andi	r24, 0xE0	; 224
    1b16:	85 2b       	or	r24, r21
    1b18:	80 93 7c 00 	sts	0x007C, r24
    1b1c:	08 95       	ret

00001b1e <ADC_set_VREF>:
    1b1e:	ec e7       	ldi	r30, 0x7C	; 124
    1b20:	f0 e0       	ldi	r31, 0x00	; 0
    1b22:	90 81       	ld	r25, Z
    1b24:	82 95       	swap	r24
    1b26:	88 0f       	add	r24, r24
    1b28:	88 0f       	add	r24, r24
    1b2a:	80 7c       	andi	r24, 0xC0	; 192
    1b2c:	9f 73       	andi	r25, 0x3F	; 63
    1b2e:	98 2b       	or	r25, r24
    1b30:	90 83       	st	Z, r25
    1b32:	08 95       	ret

00001b34 <main>:
    1b34:	0e 94 58 15 	call	0x2ab0	; 0x2ab0 <CBOT_ISR_init>
    1b38:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <CBOT_init>
    1b3c:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <CBOT_main>
    1b40:	80 e0       	ldi	r24, 0x00	; 0
    1b42:	90 e0       	ldi	r25, 0x00	; 0
    1b44:	08 95       	ret

00001b46 <LCD_clear>:
    1b46:	0f 93       	push	r16
    1b48:	1f 93       	push	r17
    1b4a:	80 e4       	ldi	r24, 0x40	; 64
    1b4c:	60 e0       	ldi	r22, 0x00	; 0
    1b4e:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1b52:	00 e0       	ldi	r16, 0x00	; 0
    1b54:	80 2f       	mov	r24, r16
    1b56:	60 e0       	ldi	r22, 0x00	; 0
    1b58:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <LCD_set_PGC_addr>
    1b5c:	10 e0       	ldi	r17, 0x00	; 0
    1b5e:	80 e0       	ldi	r24, 0x00	; 0
    1b60:	61 e0       	ldi	r22, 0x01	; 1
    1b62:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1b66:	1f 5f       	subi	r17, 0xFF	; 255
    1b68:	10 38       	cpi	r17, 0x80	; 128
    1b6a:	c9 f7       	brne	.-14     	; 0x1b5e <LCD_clear+0x18>
    1b6c:	0f 5f       	subi	r16, 0xFF	; 255
    1b6e:	04 30       	cpi	r16, 0x04	; 4
    1b70:	89 f7       	brne	.-30     	; 0x1b54 <LCD_clear+0xe>
    1b72:	83 e0       	ldi	r24, 0x03	; 3
    1b74:	60 e0       	ldi	r22, 0x00	; 0
    1b76:	0e 94 62 0e 	call	0x1cc4	; 0x1cc4 <LCD_set_next_PGC>
    1b7a:	1f 91       	pop	r17
    1b7c:	0f 91       	pop	r16
    1b7e:	08 95       	ret

00001b80 <LCD_open>:
    1b80:	0f 93       	push	r16
    1b82:	1f 93       	push	r17
    1b84:	82 e0       	ldi	r24, 0x02	; 2
    1b86:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    1b8a:	88 23       	and	r24, r24
    1b8c:	11 f4       	brne	.+4      	; 0x1b92 <LCD_open+0x12>
    1b8e:	82 e0       	ldi	r24, 0x02	; 2
    1b90:	06 c0       	rjmp	.+12     	; 0x1b9e <LCD_open+0x1e>
    1b92:	81 e0       	ldi	r24, 0x01	; 1
    1b94:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    1b98:	88 23       	and	r24, r24
    1b9a:	19 f4       	brne	.+6      	; 0x1ba2 <LCD_open+0x22>
    1b9c:	81 e0       	ldi	r24, 0x01	; 1
    1b9e:	90 e0       	ldi	r25, 0x00	; 0
    1ba0:	6d c0       	rjmp	.+218    	; 0x1c7c <LCD_open+0xfc>
    1ba2:	0e 94 c0 17 	call	0x2f80	; 0x2f80 <__LCD_init>
    1ba6:	85 e0       	ldi	r24, 0x05	; 5
    1ba8:	61 e0       	ldi	r22, 0x01	; 1
    1baa:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    1bae:	8e ea       	ldi	r24, 0xAE	; 174
    1bb0:	60 e0       	ldi	r22, 0x00	; 0
    1bb2:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1bb6:	82 ea       	ldi	r24, 0xA2	; 162
    1bb8:	60 e0       	ldi	r22, 0x00	; 0
    1bba:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1bbe:	80 ea       	ldi	r24, 0xA0	; 160
    1bc0:	60 e0       	ldi	r22, 0x00	; 0
    1bc2:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1bc6:	00 e5       	ldi	r16, 0x50	; 80
    1bc8:	13 ec       	ldi	r17, 0xC3	; 195
    1bca:	c8 01       	movw	r24, r16
    1bcc:	01 97       	sbiw	r24, 0x01	; 1
    1bce:	f1 f7       	brne	.-4      	; 0x1bcc <LCD_open+0x4c>
    1bd0:	80 ec       	ldi	r24, 0xC0	; 192
    1bd2:	60 e0       	ldi	r22, 0x00	; 0
    1bd4:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1bd8:	8f e2       	ldi	r24, 0x2F	; 47
    1bda:	60 e0       	ldi	r22, 0x00	; 0
    1bdc:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1be0:	81 e8       	ldi	r24, 0x81	; 129
    1be2:	60 e0       	ldi	r22, 0x00	; 0
    1be4:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1be8:	86 e1       	ldi	r24, 0x16	; 22
    1bea:	60 e0       	ldi	r22, 0x00	; 0
    1bec:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1bf0:	82 e2       	ldi	r24, 0x22	; 34
    1bf2:	60 e0       	ldi	r22, 0x00	; 0
    1bf4:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1bf8:	c8 01       	movw	r24, r16
    1bfa:	01 97       	sbiw	r24, 0x01	; 1
    1bfc:	f1 f7       	brne	.-4      	; 0x1bfa <LCD_open+0x7a>
    1bfe:	8f ea       	ldi	r24, 0xAF	; 175
    1c00:	60 e0       	ldi	r22, 0x00	; 0
    1c02:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1c06:	86 ea       	ldi	r24, 0xA6	; 166
    1c08:	60 e0       	ldi	r22, 0x00	; 0
    1c0a:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1c0e:	85 ea       	ldi	r24, 0xA5	; 165
    1c10:	60 e0       	ldi	r22, 0x00	; 0
    1c12:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1c16:	80 e0       	ldi	r24, 0x00	; 0
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	28 e8       	ldi	r18, 0x88	; 136
    1c1c:	33 e1       	ldi	r19, 0x13	; 19
    1c1e:	f9 01       	movw	r30, r18
    1c20:	31 97       	sbiw	r30, 0x01	; 1
    1c22:	f1 f7       	brne	.-4      	; 0x1c20 <LCD_open+0xa0>
    1c24:	01 96       	adiw	r24, 0x01	; 1
    1c26:	43 e0       	ldi	r20, 0x03	; 3
    1c28:	88 3e       	cpi	r24, 0xE8	; 232
    1c2a:	94 07       	cpc	r25, r20
    1c2c:	c1 f7       	brne	.-16     	; 0x1c1e <LCD_open+0x9e>
    1c2e:	83 eb       	ldi	r24, 0xB3	; 179
    1c30:	60 e0       	ldi	r22, 0x00	; 0
    1c32:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1c36:	80 e4       	ldi	r24, 0x40	; 64
    1c38:	60 e0       	ldi	r22, 0x00	; 0
    1c3a:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1c3e:	83 e0       	ldi	r24, 0x03	; 3
    1c40:	60 e0       	ldi	r22, 0x00	; 0
    1c42:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <LCD_set_PGC_addr>
    1c46:	83 e0       	ldi	r24, 0x03	; 3
    1c48:	60 e0       	ldi	r22, 0x00	; 0
    1c4a:	0e 94 62 0e 	call	0x1cc4	; 0x1cc4 <LCD_set_next_PGC>
    1c4e:	10 92 eb 04 	sts	0x04EB, r1
    1c52:	10 92 ed 04 	sts	0x04ED, r1
    1c56:	10 92 ec 04 	sts	0x04EC, r1
    1c5a:	87 ed       	ldi	r24, 0xD7	; 215
    1c5c:	91 e0       	ldi	r25, 0x01	; 1
    1c5e:	90 93 1c 05 	sts	0x051C, r25
    1c62:	80 93 1b 05 	sts	0x051B, r24
    1c66:	88 e1       	ldi	r24, 0x18	; 24
    1c68:	0e 94 41 0e 	call	0x1c82	; 0x1c82 <LCD_set_backlight>
    1c6c:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <LCD_clear>
    1c70:	84 ea       	ldi	r24, 0xA4	; 164
    1c72:	60 e0       	ldi	r22, 0x00	; 0
    1c74:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1c78:	85 e0       	ldi	r24, 0x05	; 5
    1c7a:	91 e0       	ldi	r25, 0x01	; 1
    1c7c:	1f 91       	pop	r17
    1c7e:	0f 91       	pop	r16
    1c80:	08 95       	ret

00001c82 <LCD_set_backlight>:
    1c82:	1f 93       	push	r17
    1c84:	18 2f       	mov	r17, r24
    1c86:	85 e0       	ldi	r24, 0x05	; 5
    1c88:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    1c8c:	81 30       	cpi	r24, 0x01	; 1
    1c8e:	c1 f4       	brne	.+48     	; 0x1cc0 <LCD_set_backlight+0x3e>
    1c90:	87 e0       	ldi	r24, 0x07	; 7
    1c92:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <SPI_set_slave_addr>
    1c96:	82 e0       	ldi	r24, 0x02	; 2
    1c98:	6a e0       	ldi	r22, 0x0A	; 10
    1c9a:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <SPI_transmit>
    1c9e:	82 e0       	ldi	r24, 0x02	; 2
    1ca0:	61 eb       	ldi	r22, 0xB1	; 177
    1ca2:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <SPI_transmit>
    1ca6:	61 2f       	mov	r22, r17
    1ca8:	11 32       	cpi	r17, 0x21	; 33
    1caa:	08 f0       	brcs	.+2      	; 0x1cae <LCD_set_backlight+0x2c>
    1cac:	60 e2       	ldi	r22, 0x20	; 32
    1cae:	82 e0       	ldi	r24, 0x02	; 2
    1cb0:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <SPI_transmit>
    1cb4:	89 ee       	ldi	r24, 0xE9	; 233
    1cb6:	8a 95       	dec	r24
    1cb8:	f1 f7       	brne	.-4      	; 0x1cb6 <LCD_set_backlight+0x34>
    1cba:	87 e0       	ldi	r24, 0x07	; 7
    1cbc:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <SPI_set_slave_addr>
    1cc0:	1f 91       	pop	r17
    1cc2:	08 95       	ret

00001cc4 <LCD_set_next_PGC>:
    1cc4:	83 70       	andi	r24, 0x03	; 3
    1cc6:	6f 77       	andi	r22, 0x7F	; 127
    1cc8:	60 93 e9 04 	sts	0x04E9, r22
    1ccc:	80 93 ea 04 	sts	0x04EA, r24
    1cd0:	08 95       	ret

00001cd2 <LCD_set_PGC_addr>:
    1cd2:	0f 93       	push	r16
    1cd4:	1f 93       	push	r17
    1cd6:	06 2f       	mov	r16, r22
    1cd8:	16 2f       	mov	r17, r22
    1cda:	1f 77       	andi	r17, 0x7F	; 127
    1cdc:	83 70       	andi	r24, 0x03	; 3
    1cde:	80 6b       	ori	r24, 0xB0	; 176
    1ce0:	60 e0       	ldi	r22, 0x00	; 0
    1ce2:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1ce6:	12 95       	swap	r17
    1ce8:	1f 70       	andi	r17, 0x0F	; 15
    1cea:	81 2f       	mov	r24, r17
    1cec:	80 61       	ori	r24, 0x10	; 16
    1cee:	60 e0       	ldi	r22, 0x00	; 0
    1cf0:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1cf4:	80 2f       	mov	r24, r16
    1cf6:	8f 70       	andi	r24, 0x0F	; 15
    1cf8:	60 e0       	ldi	r22, 0x00	; 0
    1cfa:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    1cfe:	1f 91       	pop	r17
    1d00:	0f 91       	pop	r16
    1d02:	08 95       	ret

00001d04 <LCD_write>:
    1d04:	0f 93       	push	r16
    1d06:	1f 93       	push	r17
    1d08:	08 2f       	mov	r16, r24
    1d0a:	16 2f       	mov	r17, r22
    1d0c:	85 e0       	ldi	r24, 0x05	; 5
    1d0e:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    1d12:	81 30       	cpi	r24, 0x01	; 1
    1d14:	79 f4       	brne	.+30     	; 0x1d34 <LCD_write+0x30>
    1d16:	11 23       	and	r17, r17
    1d18:	19 f0       	breq	.+6      	; 0x1d20 <LCD_write+0x1c>
    1d1a:	11 30       	cpi	r17, 0x01	; 1
    1d1c:	21 f4       	brne	.+8      	; 0x1d26 <LCD_write+0x22>
    1d1e:	02 c0       	rjmp	.+4      	; 0x1d24 <LCD_write+0x20>
    1d20:	2b 98       	cbi	0x05, 3	; 5
    1d22:	01 c0       	rjmp	.+2      	; 0x1d26 <LCD_write+0x22>
    1d24:	2b 9a       	sbi	0x05, 3	; 5
    1d26:	86 e0       	ldi	r24, 0x06	; 6
    1d28:	8a 95       	dec	r24
    1d2a:	f1 f7       	brne	.-4      	; 0x1d28 <LCD_write+0x24>
    1d2c:	80 e0       	ldi	r24, 0x00	; 0
    1d2e:	60 2f       	mov	r22, r16
    1d30:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <SPI_transmit>
    1d34:	1f 91       	pop	r17
    1d36:	0f 91       	pop	r16
    1d38:	08 95       	ret

00001d3a <LED_clr_pattern>:
    1d3a:	1f 93       	push	r17
    1d3c:	18 2f       	mov	r17, r24
    1d3e:	86 e0       	ldi	r24, 0x06	; 6
    1d40:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    1d44:	81 30       	cpi	r24, 0x01	; 1
    1d46:	19 f4       	brne	.+6      	; 0x1d4e <LED_clr_pattern+0x14>
    1d48:	81 2f       	mov	r24, r17
    1d4a:	0e 94 6f 18 	call	0x30de	; 0x30de <__LED_clr_pattern>
    1d4e:	1f 91       	pop	r17
    1d50:	08 95       	ret

00001d52 <LED_open>:
    1d52:	0e 94 74 18 	call	0x30e8	; 0x30e8 <__LED_init>
    1d56:	86 e0       	ldi	r24, 0x06	; 6
    1d58:	61 e0       	ldi	r22, 0x01	; 1
    1d5a:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    1d5e:	86 e0       	ldi	r24, 0x06	; 6
    1d60:	91 e0       	ldi	r25, 0x01	; 1
    1d62:	08 95       	ret

00001d64 <LED_set_pattern>:
    1d64:	1f 93       	push	r17
    1d66:	18 2f       	mov	r17, r24
    1d68:	86 e0       	ldi	r24, 0x06	; 6
    1d6a:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    1d6e:	81 30       	cpi	r24, 0x01	; 1
    1d70:	19 f4       	brne	.+6      	; 0x1d78 <LED_set_pattern+0x14>
    1d72:	81 2f       	mov	r24, r17
    1d74:	0e 94 77 18 	call	0x30ee	; 0x30ee <__LED_set_pattern>
    1d78:	1f 91       	pop	r17
    1d7a:	08 95       	ret

00001d7c <SPI_set_slave_addr>:
    1d7c:	1f 93       	push	r17
    1d7e:	18 2f       	mov	r17, r24
    1d80:	82 e0       	ldi	r24, 0x02	; 2
    1d82:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    1d86:	81 30       	cpi	r24, 0x01	; 1
    1d88:	09 f0       	breq	.+2      	; 0x1d8c <SPI_set_slave_addr+0x10>
    1d8a:	47 c0       	rjmp	.+142    	; 0x1e1a <SPI_set_slave_addr+0x9e>
    1d8c:	91 2f       	mov	r25, r17
    1d8e:	97 70       	andi	r25, 0x07	; 7
    1d90:	80 91 ee 04 	lds	r24, 0x04EE
    1d94:	98 17       	cp	r25, r24
    1d96:	09 f4       	brne	.+2      	; 0x1d9a <SPI_set_slave_addr+0x1e>
    1d98:	40 c0       	rjmp	.+128    	; 0x1e1a <SPI_set_slave_addr+0x9e>
    1d9a:	90 93 ee 04 	sts	0x04EE, r25
    1d9e:	85 b1       	in	r24, 0x05	; 5
    1da0:	88 7f       	andi	r24, 0xF8	; 248
    1da2:	89 2b       	or	r24, r25
    1da4:	85 b9       	out	0x05, r24	; 5
    1da6:	93 30       	cpi	r25, 0x03	; 3
    1da8:	11 f1       	breq	.+68     	; 0x1dee <SPI_set_slave_addr+0x72>
    1daa:	94 30       	cpi	r25, 0x04	; 4
    1dac:	28 f4       	brcc	.+10     	; 0x1db8 <SPI_set_slave_addr+0x3c>
    1dae:	91 30       	cpi	r25, 0x01	; 1
    1db0:	51 f0       	breq	.+20     	; 0x1dc6 <SPI_set_slave_addr+0x4a>
    1db2:	92 30       	cpi	r25, 0x02	; 2
    1db4:	90 f4       	brcc	.+36     	; 0x1dda <SPI_set_slave_addr+0x5e>
    1db6:	0c c0       	rjmp	.+24     	; 0x1dd0 <SPI_set_slave_addr+0x54>
    1db8:	95 30       	cpi	r25, 0x05	; 5
    1dba:	19 f1       	breq	.+70     	; 0x1e02 <SPI_set_slave_addr+0x86>
    1dbc:	95 30       	cpi	r25, 0x05	; 5
    1dbe:	e0 f0       	brcs	.+56     	; 0x1df8 <SPI_set_slave_addr+0x7c>
    1dc0:	96 30       	cpi	r25, 0x06	; 6
    1dc2:	21 f5       	brne	.+72     	; 0x1e0c <SPI_set_slave_addr+0x90>
    1dc4:	0f c0       	rjmp	.+30     	; 0x1de4 <SPI_set_slave_addr+0x68>
    1dc6:	e0 91 92 02 	lds	r30, 0x0292
    1dca:	f0 91 93 02 	lds	r31, 0x0293
    1dce:	22 c0       	rjmp	.+68     	; 0x1e14 <SPI_set_slave_addr+0x98>
    1dd0:	e0 91 90 02 	lds	r30, 0x0290
    1dd4:	f0 91 91 02 	lds	r31, 0x0291
    1dd8:	1d c0       	rjmp	.+58     	; 0x1e14 <SPI_set_slave_addr+0x98>
    1dda:	e0 91 94 02 	lds	r30, 0x0294
    1dde:	f0 91 95 02 	lds	r31, 0x0295
    1de2:	18 c0       	rjmp	.+48     	; 0x1e14 <SPI_set_slave_addr+0x98>
    1de4:	e0 91 9c 02 	lds	r30, 0x029C
    1de8:	f0 91 9d 02 	lds	r31, 0x029D
    1dec:	13 c0       	rjmp	.+38     	; 0x1e14 <SPI_set_slave_addr+0x98>
    1dee:	e0 91 96 02 	lds	r30, 0x0296
    1df2:	f0 91 97 02 	lds	r31, 0x0297
    1df6:	0e c0       	rjmp	.+28     	; 0x1e14 <SPI_set_slave_addr+0x98>
    1df8:	e0 91 98 02 	lds	r30, 0x0298
    1dfc:	f0 91 99 02 	lds	r31, 0x0299
    1e00:	09 c0       	rjmp	.+18     	; 0x1e14 <SPI_set_slave_addr+0x98>
    1e02:	e0 91 9a 02 	lds	r30, 0x029A
    1e06:	f0 91 9b 02 	lds	r31, 0x029B
    1e0a:	04 c0       	rjmp	.+8      	; 0x1e14 <SPI_set_slave_addr+0x98>
    1e0c:	e0 91 9e 02 	lds	r30, 0x029E
    1e10:	f0 91 9f 02 	lds	r31, 0x029F
    1e14:	30 97       	sbiw	r30, 0x00	; 0
    1e16:	09 f0       	breq	.+2      	; 0x1e1a <SPI_set_slave_addr+0x9e>
    1e18:	09 95       	icall
    1e1a:	1f 91       	pop	r17
    1e1c:	08 95       	ret

00001e1e <SPI_transmit>:
    1e1e:	1f 93       	push	r17
    1e20:	16 2f       	mov	r17, r22
    1e22:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <SPI_set_slave_addr>
    1e26:	82 e0       	ldi	r24, 0x02	; 2
    1e28:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    1e2c:	81 30       	cpi	r24, 0x01	; 1
    1e2e:	21 f4       	brne	.+8      	; 0x1e38 <SPI_transmit+0x1a>
    1e30:	1e bd       	out	0x2e, r17	; 46
    1e32:	0d b4       	in	r0, 0x2d	; 45
    1e34:	07 fe       	sbrs	r0, 7
    1e36:	fd cf       	rjmp	.-6      	; 0x1e32 <SPI_transmit+0x14>
    1e38:	1f 91       	pop	r17
    1e3a:	08 95       	ret

00001e3c <__SPKR_set_up_freq_LUT>:
    1e3c:	0f 93       	push	r16
    1e3e:	1f 93       	push	r17
    1e40:	cf 93       	push	r28
    1e42:	df 93       	push	r29
    1e44:	80 e2       	ldi	r24, 0x20	; 32
    1e46:	91 e0       	ldi	r25, 0x01	; 1
    1e48:	0e 94 1b 28 	call	0x5036	; 0x5036 <malloc>
    1e4c:	9c 01       	movw	r18, r24
    1e4e:	90 93 af 02 	sts	0x02AF, r25
    1e52:	80 93 ae 02 	sts	0x02AE, r24
    1e56:	89 2b       	or	r24, r25
    1e58:	11 f4       	brne	.+4      	; 0x1e5e <__SPKR_set_up_freq_LUT+0x22>
    1e5a:	80 e0       	ldi	r24, 0x00	; 0
    1e5c:	39 c0       	rjmp	.+114    	; 0x1ed0 <__SPKR_set_up_freq_LUT+0x94>
    1e5e:	89 01       	movw	r16, r18
    1e60:	c0 e0       	ldi	r28, 0x00	; 0
    1e62:	d0 e0       	ldi	r29, 0x00	; 0
    1e64:	be 01       	movw	r22, r28
    1e66:	80 e0       	ldi	r24, 0x00	; 0
    1e68:	90 e0       	ldi	r25, 0x00	; 0
    1e6a:	0e 94 5c 21 	call	0x42b8	; 0x42b8 <__floatunsisf>
    1e6e:	20 e0       	ldi	r18, 0x00	; 0
    1e70:	30 e0       	ldi	r19, 0x00	; 0
    1e72:	40 ea       	ldi	r20, 0xA0	; 160
    1e74:	51 e4       	ldi	r21, 0x41	; 65
    1e76:	0e 94 c3 20 	call	0x4186	; 0x4186 <__divsf3>
    1e7a:	27 ef       	ldi	r18, 0xF7	; 247
    1e7c:	35 e7       	ldi	r19, 0x75	; 117
    1e7e:	40 e0       	ldi	r20, 0x00	; 0
    1e80:	5f e3       	ldi	r21, 0x3F	; 63
    1e82:	0e 94 4c 22 	call	0x4498	; 0x4498 <__mulsf3>
    1e86:	9b 01       	movw	r18, r22
    1e88:	ac 01       	movw	r20, r24
    1e8a:	60 e0       	ldi	r22, 0x00	; 0
    1e8c:	70 e0       	ldi	r23, 0x00	; 0
    1e8e:	80 e2       	ldi	r24, 0x20	; 32
    1e90:	91 e4       	ldi	r25, 0x41	; 65
    1e92:	0e 94 af 22 	call	0x455e	; 0x455e <pow>
    1e96:	9b 01       	movw	r18, r22
    1e98:	ac 01       	movw	r20, r24
    1e9a:	ca 01       	movw	r24, r20
    1e9c:	b9 01       	movw	r22, r18
    1e9e:	2d ec       	ldi	r18, 0xCD	; 205
    1ea0:	3c ec       	ldi	r19, 0xCC	; 204
    1ea2:	42 e8       	ldi	r20, 0x82	; 130
    1ea4:	51 e4       	ldi	r21, 0x41	; 65
    1ea6:	0e 94 4c 22 	call	0x4498	; 0x4498 <__mulsf3>
    1eaa:	0e 94 12 22 	call	0x4424	; 0x4424 <lrint>
    1eae:	2a e0       	ldi	r18, 0x0A	; 10
    1eb0:	30 e0       	ldi	r19, 0x00	; 0
    1eb2:	40 e0       	ldi	r20, 0x00	; 0
    1eb4:	50 e0       	ldi	r21, 0x00	; 0
    1eb6:	0e 94 7c 27 	call	0x4ef8	; 0x4ef8 <__mulsi3>
    1eba:	f8 01       	movw	r30, r16
    1ebc:	61 93       	st	Z+, r22
    1ebe:	71 93       	st	Z+, r23
    1ec0:	81 93       	st	Z+, r24
    1ec2:	91 93       	st	Z+, r25
    1ec4:	8f 01       	movw	r16, r30
    1ec6:	21 96       	adiw	r28, 0x01	; 1
    1ec8:	c8 34       	cpi	r28, 0x48	; 72
    1eca:	d1 05       	cpc	r29, r1
    1ecc:	59 f6       	brne	.-106    	; 0x1e64 <__SPKR_set_up_freq_LUT+0x28>
    1ece:	81 e0       	ldi	r24, 0x01	; 1
    1ed0:	df 91       	pop	r29
    1ed2:	cf 91       	pop	r28
    1ed4:	1f 91       	pop	r17
    1ed6:	0f 91       	pop	r16
    1ed8:	08 95       	ret

00001eda <__SPKR_open_beep_mode>:
    1eda:	8a e0       	ldi	r24, 0x0A	; 10
    1edc:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    1ee0:	88 23       	and	r24, r24
    1ee2:	71 f4       	brne	.+28     	; 0x1f00 <__SPKR_open_beep_mode+0x26>
    1ee4:	10 92 ab 02 	sts	0x02AB, r1
    1ee8:	10 92 aa 02 	sts	0x02AA, r1
    1eec:	81 e0       	ldi	r24, 0x01	; 1
    1eee:	0e 94 a0 19 	call	0x3340	; 0x3340 <__SPKR_init>
    1ef2:	81 e0       	ldi	r24, 0x01	; 1
    1ef4:	80 93 a1 02 	sts	0x02A1, r24
    1ef8:	8a e0       	ldi	r24, 0x0A	; 10
    1efa:	61 e0       	ldi	r22, 0x01	; 1
    1efc:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    1f00:	8a e0       	ldi	r24, 0x0A	; 10
    1f02:	91 e0       	ldi	r25, 0x01	; 1
    1f04:	08 95       	ret

00001f06 <__SPKR_open_tone_mode>:
    1f06:	1f 93       	push	r17
    1f08:	8b e0       	ldi	r24, 0x0B	; 11
    1f0a:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    1f0e:	88 23       	and	r24, r24
    1f10:	11 f0       	breq	.+4      	; 0x1f16 <__SPKR_open_tone_mode+0x10>
    1f12:	90 e0       	ldi	r25, 0x00	; 0
    1f14:	21 c0       	rjmp	.+66     	; 0x1f58 <__SPKR_open_tone_mode+0x52>
    1f16:	89 e0       	ldi	r24, 0x09	; 9
    1f18:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    1f1c:	88 23       	and	r24, r24
    1f1e:	d9 f4       	brne	.+54     	; 0x1f56 <__SPKR_open_tone_mode+0x50>
    1f20:	0e 94 1e 0f 	call	0x1e3c	; 0x1e3c <__SPKR_set_up_freq_LUT>
    1f24:	18 2f       	mov	r17, r24
    1f26:	81 30       	cpi	r24, 0x01	; 1
    1f28:	b1 f4       	brne	.+44     	; 0x1f56 <__SPKR_open_tone_mode+0x50>
    1f2a:	10 92 a2 02 	sts	0x02A2, r1
    1f2e:	10 92 a3 02 	sts	0x02A3, r1
    1f32:	10 92 a4 02 	sts	0x02A4, r1
    1f36:	10 92 a5 02 	sts	0x02A5, r1
    1f3a:	8d e0       	ldi	r24, 0x0D	; 13
    1f3c:	63 e2       	ldi	r22, 0x23	; 35
    1f3e:	79 e1       	ldi	r23, 0x19	; 25
    1f40:	0e 94 98 17 	call	0x2f30	; 0x2f30 <ISR_attach>
    1f44:	82 e0       	ldi	r24, 0x02	; 2
    1f46:	0e 94 a0 19 	call	0x3340	; 0x3340 <__SPKR_init>
    1f4a:	10 93 a0 02 	sts	0x02A0, r17
    1f4e:	89 e0       	ldi	r24, 0x09	; 9
    1f50:	61 e0       	ldi	r22, 0x01	; 1
    1f52:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    1f56:	91 e0       	ldi	r25, 0x01	; 1
    1f58:	89 e0       	ldi	r24, 0x09	; 9
    1f5a:	1f 91       	pop	r17
    1f5c:	08 95       	ret

00001f5e <SPKR_open>:
    1f5e:	81 30       	cpi	r24, 0x01	; 1
    1f60:	29 f0       	breq	.+10     	; 0x1f6c <SPKR_open+0xe>
    1f62:	82 30       	cpi	r24, 0x02	; 2
    1f64:	31 f0       	breq	.+12     	; 0x1f72 <SPKR_open+0x14>
    1f66:	90 e0       	ldi	r25, 0x00	; 0
    1f68:	89 e0       	ldi	r24, 0x09	; 9
    1f6a:	08 95       	ret
    1f6c:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <__SPKR_open_beep_mode>
    1f70:	08 95       	ret
    1f72:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__SPKR_open_tone_mode>
    1f76:	08 95       	ret

00001f78 <STEPPER_get_nSteps>:
    1f78:	80 91 af 04 	lds	r24, 0x04AF
    1f7c:	90 91 b0 04 	lds	r25, 0x04B0
    1f80:	20 91 b1 04 	lds	r18, 0x04B1
    1f84:	30 91 b2 04 	lds	r19, 0x04B2
    1f88:	bc 01       	movw	r22, r24
    1f8a:	c9 01       	movw	r24, r18
    1f8c:	08 95       	ret

00001f8e <STEPPER_stepmode>:
    1f8e:	2f 92       	push	r2
    1f90:	3f 92       	push	r3
    1f92:	4f 92       	push	r4
    1f94:	5f 92       	push	r5
    1f96:	6f 92       	push	r6
    1f98:	7f 92       	push	r7
    1f9a:	8f 92       	push	r8
    1f9c:	9f 92       	push	r9
    1f9e:	af 92       	push	r10
    1fa0:	bf 92       	push	r11
    1fa2:	cf 92       	push	r12
    1fa4:	df 92       	push	r13
    1fa6:	ef 92       	push	r14
    1fa8:	ff 92       	push	r15
    1faa:	0f 93       	push	r16
    1fac:	1f 93       	push	r17
    1fae:	df 93       	push	r29
    1fb0:	cf 93       	push	r28
    1fb2:	cd b7       	in	r28, 0x3d	; 61
    1fb4:	de b7       	in	r29, 0x3e	; 62
    1fb6:	58 2e       	mov	r5, r24
    1fb8:	96 2e       	mov	r9, r22
    1fba:	44 2e       	mov	r4, r20
    1fbc:	39 01       	movw	r6, r18
    1fbe:	3c 2c       	mov	r3, r12
    1fc0:	c9 8c       	ldd	r12, Y+25	; 0x19
    1fc2:	da 8c       	ldd	r13, Y+26	; 0x1a
    1fc4:	2b 8c       	ldd	r2, Y+27	; 0x1b
    1fc6:	81 e0       	ldi	r24, 0x01	; 1
    1fc8:	68 17       	cp	r22, r24
    1fca:	39 f1       	breq	.+78     	; 0x201a <STEPPER_stepmode+0x8c>
    1fcc:	68 17       	cp	r22, r24
    1fce:	28 f0       	brcs	.+10     	; 0x1fda <STEPPER_stepmode+0x4c>
    1fd0:	92 e0       	ldi	r25, 0x02	; 2
    1fd2:	69 17       	cp	r22, r25
    1fd4:	09 f0       	breq	.+2      	; 0x1fd8 <STEPPER_stepmode+0x4a>
    1fd6:	85 c0       	rjmp	.+266    	; 0x20e2 <STEPPER_stepmode+0x154>
    1fd8:	49 c0       	rjmp	.+146    	; 0x206c <STEPPER_stepmode+0xde>
    1fda:	80 e0       	ldi	r24, 0x00	; 0
    1fdc:	61 e0       	ldi	r22, 0x01	; 1
    1fde:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <STEPPER_set_mode>
    1fe2:	80 e0       	ldi	r24, 0x00	; 0
    1fe4:	b7 01       	movw	r22, r14
    1fe6:	0e 94 99 11 	call	0x2332	; 0x2332 <STEPPER_set_accel>
    1fea:	80 e0       	ldi	r24, 0x00	; 0
    1fec:	64 2d       	mov	r22, r4
    1fee:	a3 01       	movw	r20, r6
    1ff0:	98 01       	movw	r18, r16
    1ff2:	03 2d       	mov	r16, r3
    1ff4:	ee 24       	eor	r14, r14
    1ff6:	e3 94       	inc	r14
    1ff8:	e4 ed       	ldi	r30, 0xD4	; 212
    1ffa:	ce 2e       	mov	r12, r30
    1ffc:	e4 e0       	ldi	r30, 0x04	; 4
    1ffe:	de 2e       	mov	r13, r30
    2000:	0e 94 07 12 	call	0x240e	; 0x240e <STEPPER_step>
    2004:	55 20       	and	r5, r5
    2006:	09 f0       	breq	.+2      	; 0x200a <STEPPER_stepmode+0x7c>
    2008:	6c c0       	rjmp	.+216    	; 0x20e2 <STEPPER_stepmode+0x154>
    200a:	00 d0       	rcall	.+0      	; 0x200c <STEPPER_stepmode+0x7e>
    200c:	0f 92       	push	r0
    200e:	ed b7       	in	r30, 0x3d	; 61
    2010:	fe b7       	in	r31, 0x3e	; 62
    2012:	11 82       	std	Z+1, r1	; 0x01
    2014:	b3 82       	std	Z+3, r11	; 0x03
    2016:	a2 82       	std	Z+2, r10	; 0x02
    2018:	23 c0       	rjmp	.+70     	; 0x2060 <STEPPER_stepmode+0xd2>
    201a:	81 e0       	ldi	r24, 0x01	; 1
    201c:	61 e0       	ldi	r22, 0x01	; 1
    201e:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <STEPPER_set_mode>
    2022:	81 e0       	ldi	r24, 0x01	; 1
    2024:	b6 01       	movw	r22, r12
    2026:	0e 94 99 11 	call	0x2332	; 0x2332 <STEPPER_set_accel>
    202a:	81 e0       	ldi	r24, 0x01	; 1
    202c:	68 2d       	mov	r22, r8
    202e:	4d 89       	ldd	r20, Y+21	; 0x15
    2030:	5e 89       	ldd	r21, Y+22	; 0x16
    2032:	2f 89       	ldd	r18, Y+23	; 0x17
    2034:	38 8d       	ldd	r19, Y+24	; 0x18
    2036:	02 2d       	mov	r16, r2
    2038:	ee 24       	eor	r14, r14
    203a:	e3 94       	inc	r14
    203c:	74 ed       	ldi	r23, 0xD4	; 212
    203e:	c7 2e       	mov	r12, r23
    2040:	74 e0       	ldi	r23, 0x04	; 4
    2042:	d7 2e       	mov	r13, r23
    2044:	0e 94 07 12 	call	0x240e	; 0x240e <STEPPER_step>
    2048:	55 20       	and	r5, r5
    204a:	09 f0       	breq	.+2      	; 0x204e <STEPPER_stepmode+0xc0>
    204c:	4a c0       	rjmp	.+148    	; 0x20e2 <STEPPER_stepmode+0x154>
    204e:	00 d0       	rcall	.+0      	; 0x2050 <STEPPER_stepmode+0xc2>
    2050:	0f 92       	push	r0
    2052:	ed b7       	in	r30, 0x3d	; 61
    2054:	fe b7       	in	r31, 0x3e	; 62
    2056:	91 82       	std	Z+1, r9	; 0x01
    2058:	8c 8d       	ldd	r24, Y+28	; 0x1c
    205a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    205c:	93 83       	std	Z+3, r25	; 0x03
    205e:	82 83       	std	Z+2, r24	; 0x02
    2060:	0e 94 93 12 	call	0x2526	; 0x2526 <STEPPER_wait_and_then>
    2064:	0f 90       	pop	r0
    2066:	0f 90       	pop	r0
    2068:	0f 90       	pop	r0
    206a:	3b c0       	rjmp	.+118    	; 0x20e2 <STEPPER_stepmode+0x154>
    206c:	82 e0       	ldi	r24, 0x02	; 2
    206e:	61 e0       	ldi	r22, 0x01	; 1
    2070:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <STEPPER_set_mode>
    2074:	80 e0       	ldi	r24, 0x00	; 0
    2076:	b7 01       	movw	r22, r14
    2078:	0e 94 99 11 	call	0x2332	; 0x2332 <STEPPER_set_accel>
    207c:	81 e0       	ldi	r24, 0x01	; 1
    207e:	b6 01       	movw	r22, r12
    2080:	0e 94 99 11 	call	0x2332	; 0x2332 <STEPPER_set_accel>
    2084:	80 e0       	ldi	r24, 0x00	; 0
    2086:	64 2d       	mov	r22, r4
    2088:	a3 01       	movw	r20, r6
    208a:	98 01       	movw	r18, r16
    208c:	03 2d       	mov	r16, r3
    208e:	ee 24       	eor	r14, r14
    2090:	e3 94       	inc	r14
    2092:	94 ed       	ldi	r25, 0xD4	; 212
    2094:	c9 2e       	mov	r12, r25
    2096:	94 e0       	ldi	r25, 0x04	; 4
    2098:	d9 2e       	mov	r13, r25
    209a:	0e 94 07 12 	call	0x240e	; 0x240e <STEPPER_step>
    209e:	81 e0       	ldi	r24, 0x01	; 1
    20a0:	68 2d       	mov	r22, r8
    20a2:	4d 89       	ldd	r20, Y+21	; 0x15
    20a4:	5e 89       	ldd	r21, Y+22	; 0x16
    20a6:	2f 89       	ldd	r18, Y+23	; 0x17
    20a8:	38 8d       	ldd	r19, Y+24	; 0x18
    20aa:	02 2d       	mov	r16, r2
    20ac:	0e 94 07 12 	call	0x240e	; 0x240e <STEPPER_step>
    20b0:	55 20       	and	r5, r5
    20b2:	b9 f4       	brne	.+46     	; 0x20e2 <STEPPER_stepmode+0x154>
    20b4:	00 d0       	rcall	.+0      	; 0x20b6 <STEPPER_stepmode+0x128>
    20b6:	00 d0       	rcall	.+0      	; 0x20b8 <STEPPER_stepmode+0x12a>
    20b8:	0f 92       	push	r0
    20ba:	ad b7       	in	r26, 0x3d	; 61
    20bc:	be b7       	in	r27, 0x3e	; 62
    20be:	11 96       	adiw	r26, 0x01	; 1
    20c0:	ed b7       	in	r30, 0x3d	; 61
    20c2:	fe b7       	in	r31, 0x3e	; 62
    20c4:	91 82       	std	Z+1, r9	; 0x01
    20c6:	fd 01       	movw	r30, r26
    20c8:	b2 82       	std	Z+2, r11	; 0x02
    20ca:	a1 82       	std	Z+1, r10	; 0x01
    20cc:	8c 8d       	ldd	r24, Y+28	; 0x1c
    20ce:	9d 8d       	ldd	r25, Y+29	; 0x1d
    20d0:	94 83       	std	Z+4, r25	; 0x04
    20d2:	83 83       	std	Z+3, r24	; 0x03
    20d4:	0e 94 93 12 	call	0x2526	; 0x2526 <STEPPER_wait_and_then>
    20d8:	0f 90       	pop	r0
    20da:	0f 90       	pop	r0
    20dc:	0f 90       	pop	r0
    20de:	0f 90       	pop	r0
    20e0:	0f 90       	pop	r0
    20e2:	cf 91       	pop	r28
    20e4:	df 91       	pop	r29
    20e6:	1f 91       	pop	r17
    20e8:	0f 91       	pop	r16
    20ea:	ff 90       	pop	r15
    20ec:	ef 90       	pop	r14
    20ee:	df 90       	pop	r13
    20f0:	cf 90       	pop	r12
    20f2:	bf 90       	pop	r11
    20f4:	af 90       	pop	r10
    20f6:	9f 90       	pop	r9
    20f8:	8f 90       	pop	r8
    20fa:	7f 90       	pop	r7
    20fc:	6f 90       	pop	r6
    20fe:	5f 90       	pop	r5
    2100:	4f 90       	pop	r4
    2102:	3f 90       	pop	r3
    2104:	2f 90       	pop	r2
    2106:	08 95       	ret

00002108 <STEPPER_move>:
    2108:	6f 92       	push	r6
    210a:	7f 92       	push	r7
    210c:	8f 92       	push	r8
    210e:	9f 92       	push	r9
    2110:	af 92       	push	r10
    2112:	bf 92       	push	r11
    2114:	cf 92       	push	r12
    2116:	df 92       	push	r13
    2118:	ef 92       	push	r14
    211a:	ff 92       	push	r15
    211c:	0f 93       	push	r16
    211e:	1f 93       	push	r17
    2120:	df 93       	push	r29
    2122:	cf 93       	push	r28
    2124:	cd b7       	in	r28, 0x3d	; 61
    2126:	de b7       	in	r29, 0x3e	; 62
    2128:	94 2e       	mov	r9, r20
    212a:	7c 2d       	mov	r23, r12
    212c:	d5 01       	movw	r26, r10
    212e:	49 89       	ldd	r20, Y+17	; 0x11
    2130:	5a 89       	ldd	r21, Y+18	; 0x12
    2132:	ab 88       	ldd	r10, Y+19	; 0x13
    2134:	bc 88       	ldd	r11, Y+20	; 0x14
    2136:	cd 88       	ldd	r12, Y+21	; 0x15
    2138:	de 88       	ldd	r13, Y+22	; 0x16
    213a:	9f 89       	ldd	r25, Y+23	; 0x17
    213c:	81 30       	cpi	r24, 0x01	; 1
    213e:	09 f4       	brne	.+2      	; 0x2142 <STEPPER_move+0x3a>
    2140:	57 c0       	rjmp	.+174    	; 0x21f0 <STEPPER_move+0xe8>
    2142:	81 30       	cpi	r24, 0x01	; 1
    2144:	b8 f1       	brcs	.+110    	; 0x21b4 <STEPPER_move+0xac>
    2146:	82 30       	cpi	r24, 0x02	; 2
    2148:	09 f0       	breq	.+2      	; 0x214c <STEPPER_move+0x44>
    214a:	76 c0       	rjmp	.+236    	; 0x2238 <STEPPER_move+0x130>
    214c:	61 30       	cpi	r22, 0x01	; 1
    214e:	91 f0       	breq	.+36     	; 0x2174 <STEPPER_move+0x6c>
    2150:	61 30       	cpi	r22, 0x01	; 1
    2152:	20 f0       	brcs	.+8      	; 0x215c <STEPPER_move+0x54>
    2154:	62 30       	cpi	r22, 0x02	; 2
    2156:	09 f0       	breq	.+2      	; 0x215a <STEPPER_move+0x52>
    2158:	6f c0       	rjmp	.+222    	; 0x2238 <STEPPER_move+0x130>
    215a:	15 c0       	rjmp	.+42     	; 0x2186 <STEPPER_move+0x7e>
    215c:	80 e0       	ldi	r24, 0x00	; 0
    215e:	60 e0       	ldi	r22, 0x00	; 0
    2160:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <STEPPER_set_mode>
    2164:	80 e0       	ldi	r24, 0x00	; 0
    2166:	b7 01       	movw	r22, r14
    2168:	0e 94 99 11 	call	0x2332	; 0x2332 <STEPPER_set_accel>
    216c:	80 e0       	ldi	r24, 0x00	; 0
    216e:	69 2d       	mov	r22, r9
    2170:	a8 01       	movw	r20, r16
    2172:	1d c0       	rjmp	.+58     	; 0x21ae <STEPPER_move+0xa6>
    2174:	81 e0       	ldi	r24, 0x01	; 1
    2176:	60 e0       	ldi	r22, 0x00	; 0
    2178:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <STEPPER_set_mode>
    217c:	81 e0       	ldi	r24, 0x01	; 1
    217e:	b6 01       	movw	r22, r12
    2180:	0e 94 99 11 	call	0x2332	; 0x2332 <STEPPER_set_accel>
    2184:	11 c0       	rjmp	.+34     	; 0x21a8 <STEPPER_move+0xa0>
    2186:	82 e0       	ldi	r24, 0x02	; 2
    2188:	60 e0       	ldi	r22, 0x00	; 0
    218a:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <STEPPER_set_mode>
    218e:	80 e0       	ldi	r24, 0x00	; 0
    2190:	b7 01       	movw	r22, r14
    2192:	0e 94 99 11 	call	0x2332	; 0x2332 <STEPPER_set_accel>
    2196:	81 e0       	ldi	r24, 0x01	; 1
    2198:	b6 01       	movw	r22, r12
    219a:	0e 94 99 11 	call	0x2332	; 0x2332 <STEPPER_set_accel>
    219e:	80 e0       	ldi	r24, 0x00	; 0
    21a0:	69 2d       	mov	r22, r9
    21a2:	a8 01       	movw	r20, r16
    21a4:	0e 94 82 11 	call	0x2304	; 0x2304 <STEPPER_run>
    21a8:	81 e0       	ldi	r24, 0x01	; 1
    21aa:	68 2d       	mov	r22, r8
    21ac:	a5 01       	movw	r20, r10
    21ae:	0e 94 82 11 	call	0x2304	; 0x2304 <STEPPER_run>
    21b2:	42 c0       	rjmp	.+132    	; 0x2238 <STEPPER_move+0x130>
    21b4:	ed b7       	in	r30, 0x3d	; 61
    21b6:	fe b7       	in	r31, 0x3e	; 62
    21b8:	39 97       	sbiw	r30, 0x09	; 9
    21ba:	0f b6       	in	r0, 0x3f	; 63
    21bc:	f8 94       	cli
    21be:	fe bf       	out	0x3e, r31	; 62
    21c0:	0f be       	out	0x3f, r0	; 63
    21c2:	ed bf       	out	0x3d, r30	; 61
    21c4:	6d b6       	in	r6, 0x3d	; 61
    21c6:	7e b6       	in	r7, 0x3e	; 62
    21c8:	08 94       	sec
    21ca:	61 1c       	adc	r6, r1
    21cc:	71 1c       	adc	r7, r1
    21ce:	52 83       	std	Z+2, r21	; 0x02
    21d0:	41 83       	std	Z+1, r20	; 0x01
    21d2:	f3 01       	movw	r30, r6
    21d4:	b3 82       	std	Z+3, r11	; 0x03
    21d6:	a2 82       	std	Z+2, r10	; 0x02
    21d8:	d5 82       	std	Z+5, r13	; 0x05
    21da:	c4 82       	std	Z+4, r12	; 0x04
    21dc:	96 83       	std	Z+6, r25	; 0x06
    21de:	88 8d       	ldd	r24, Y+24	; 0x18
    21e0:	99 8d       	ldd	r25, Y+25	; 0x19
    21e2:	90 87       	std	Z+8, r25	; 0x08
    21e4:	87 83       	std	Z+7, r24	; 0x07
    21e6:	80 e0       	ldi	r24, 0x00	; 0
    21e8:	49 2d       	mov	r20, r9
    21ea:	c7 2e       	mov	r12, r23
    21ec:	5d 01       	movw	r10, r26
    21ee:	1a c0       	rjmp	.+52     	; 0x2224 <STEPPER_move+0x11c>
    21f0:	ed b7       	in	r30, 0x3d	; 61
    21f2:	fe b7       	in	r31, 0x3e	; 62
    21f4:	39 97       	sbiw	r30, 0x09	; 9
    21f6:	0f b6       	in	r0, 0x3f	; 63
    21f8:	f8 94       	cli
    21fa:	fe bf       	out	0x3e, r31	; 62
    21fc:	0f be       	out	0x3f, r0	; 63
    21fe:	ed bf       	out	0x3d, r30	; 61
    2200:	ad b7       	in	r26, 0x3d	; 61
    2202:	be b7       	in	r27, 0x3e	; 62
    2204:	11 96       	adiw	r26, 0x01	; 1
    2206:	52 83       	std	Z+2, r21	; 0x02
    2208:	41 83       	std	Z+1, r20	; 0x01
    220a:	fd 01       	movw	r30, r26
    220c:	b3 82       	std	Z+3, r11	; 0x03
    220e:	a2 82       	std	Z+2, r10	; 0x02
    2210:	d5 82       	std	Z+5, r13	; 0x05
    2212:	c4 82       	std	Z+4, r12	; 0x04
    2214:	96 83       	std	Z+6, r25	; 0x06
    2216:	10 86       	std	Z+8, r1	; 0x08
    2218:	17 82       	std	Z+7, r1	; 0x07
    221a:	81 e0       	ldi	r24, 0x01	; 1
    221c:	49 2d       	mov	r20, r9
    221e:	c7 2e       	mov	r12, r23
    2220:	aa 24       	eor	r10, r10
    2222:	bb 24       	eor	r11, r11
    2224:	0e 94 c7 0f 	call	0x1f8e	; 0x1f8e <STEPPER_stepmode>
    2228:	8d b7       	in	r24, 0x3d	; 61
    222a:	9e b7       	in	r25, 0x3e	; 62
    222c:	09 96       	adiw	r24, 0x09	; 9
    222e:	0f b6       	in	r0, 0x3f	; 63
    2230:	f8 94       	cli
    2232:	9e bf       	out	0x3e, r25	; 62
    2234:	0f be       	out	0x3f, r0	; 63
    2236:	8d bf       	out	0x3d, r24	; 61
    2238:	cf 91       	pop	r28
    223a:	df 91       	pop	r29
    223c:	1f 91       	pop	r17
    223e:	0f 91       	pop	r16
    2240:	ff 90       	pop	r15
    2242:	ef 90       	pop	r14
    2244:	df 90       	pop	r13
    2246:	cf 90       	pop	r12
    2248:	bf 90       	pop	r11
    224a:	af 90       	pop	r10
    224c:	9f 90       	pop	r9
    224e:	8f 90       	pop	r8
    2250:	7f 90       	pop	r7
    2252:	6f 90       	pop	r6
    2254:	08 95       	ret

00002256 <STEPPER_open>:
    2256:	0e 94 32 1a 	call	0x3464	; 0x3464 <__STEPPER_init>
    225a:	81 e0       	ldi	r24, 0x01	; 1
    225c:	80 93 d3 04 	sts	0x04D3, r24
    2260:	ed e9       	ldi	r30, 0x9D	; 157
    2262:	f4 e0       	ldi	r31, 0x04	; 4
    2264:	11 92       	st	Z+, r1
    2266:	11 92       	st	Z+, r1
    2268:	11 82       	std	Z+1, r1	; 0x01
    226a:	10 82       	st	Z, r1
    226c:	32 96       	adiw	r30, 0x02	; 2
    226e:	11 82       	std	Z+1, r1	; 0x01
    2270:	10 82       	st	Z, r1
    2272:	32 96       	adiw	r30, 0x02	; 2
    2274:	11 82       	std	Z+1, r1	; 0x01
    2276:	10 82       	st	Z, r1
    2278:	32 96       	adiw	r30, 0x02	; 2
    227a:	11 82       	std	Z+1, r1	; 0x01
    227c:	10 82       	st	Z, r1
    227e:	32 96       	adiw	r30, 0x02	; 2
    2280:	11 82       	std	Z+1, r1	; 0x01
    2282:	10 82       	st	Z, r1
    2284:	32 96       	adiw	r30, 0x02	; 2
    2286:	11 82       	std	Z+1, r1	; 0x01
    2288:	10 82       	st	Z, r1
    228a:	32 96       	adiw	r30, 0x02	; 2
    228c:	11 82       	std	Z+1, r1	; 0x01
    228e:	10 82       	st	Z, r1
    2290:	32 96       	adiw	r30, 0x02	; 2
    2292:	11 82       	std	Z+1, r1	; 0x01
    2294:	10 82       	st	Z, r1
    2296:	32 96       	adiw	r30, 0x02	; 2
    2298:	11 82       	std	Z+1, r1	; 0x01
    229a:	10 82       	st	Z, r1
    229c:	32 96       	adiw	r30, 0x02	; 2
    229e:	11 82       	std	Z+1, r1	; 0x01
    22a0:	10 82       	st	Z, r1
    22a2:	32 96       	adiw	r30, 0x02	; 2
    22a4:	11 82       	std	Z+1, r1	; 0x01
    22a6:	10 82       	st	Z, r1
    22a8:	32 96       	adiw	r30, 0x02	; 2
    22aa:	11 82       	std	Z+1, r1	; 0x01
    22ac:	10 82       	st	Z, r1
    22ae:	36 96       	adiw	r30, 0x06	; 6
    22b0:	11 92       	st	Z+, r1
    22b2:	11 92       	st	Z+, r1
    22b4:	11 92       	st	Z+, r1
    22b6:	10 82       	st	Z, r1
    22b8:	32 96       	adiw	r30, 0x02	; 2
    22ba:	11 92       	st	Z+, r1
    22bc:	11 92       	st	Z+, r1
    22be:	11 92       	st	Z+, r1
    22c0:	11 92       	st	Z+, r1
    22c2:	11 92       	st	Z+, r1
    22c4:	11 92       	st	Z+, r1
    22c6:	11 92       	st	Z+, r1
    22c8:	11 82       	std	Z+1, r1	; 0x01
    22ca:	10 82       	st	Z, r1
    22cc:	32 96       	adiw	r30, 0x02	; 2
    22ce:	11 82       	std	Z+1, r1	; 0x01
    22d0:	10 82       	st	Z, r1
    22d2:	32 96       	adiw	r30, 0x02	; 2
    22d4:	11 82       	std	Z+1, r1	; 0x01
    22d6:	10 82       	st	Z, r1
    22d8:	32 96       	adiw	r30, 0x02	; 2
    22da:	11 82       	std	Z+1, r1	; 0x01
    22dc:	10 82       	st	Z, r1
    22de:	76 97       	sbiw	r30, 0x16	; 22
    22e0:	11 82       	std	Z+1, r1	; 0x01
    22e2:	10 82       	st	Z, r1
    22e4:	32 96       	adiw	r30, 0x02	; 2
    22e6:	11 82       	std	Z+1, r1	; 0x01
    22e8:	10 82       	st	Z, r1
    22ea:	10 92 d2 04 	sts	0x04D2, r1
    22ee:	10 92 d1 04 	sts	0x04D1, r1
    22f2:	10 92 d3 04 	sts	0x04D3, r1
    22f6:	87 e0       	ldi	r24, 0x07	; 7
    22f8:	61 e0       	ldi	r22, 0x01	; 1
    22fa:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    22fe:	87 e0       	ldi	r24, 0x07	; 7
    2300:	91 e0       	ldi	r25, 0x01	; 1
    2302:	08 95       	ret

00002304 <STEPPER_run>:
    2304:	ef 92       	push	r14
    2306:	ff 92       	push	r15
    2308:	0f 93       	push	r16
    230a:	1f 93       	push	r17
    230c:	18 2f       	mov	r17, r24
    230e:	06 2f       	mov	r16, r22
    2310:	7a 01       	movw	r14, r20
    2312:	60 e0       	ldi	r22, 0x00	; 0
    2314:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <STEPPER_set_mode>
    2318:	81 2f       	mov	r24, r17
    231a:	60 2f       	mov	r22, r16
    231c:	0e 94 bb 11 	call	0x2376	; 0x2376 <STEPPER_set_dir>
    2320:	81 2f       	mov	r24, r17
    2322:	b7 01       	movw	r22, r14
    2324:	0e 94 e5 11 	call	0x23ca	; 0x23ca <STEPPER_set_speed>
    2328:	1f 91       	pop	r17
    232a:	0f 91       	pop	r16
    232c:	ff 90       	pop	r15
    232e:	ef 90       	pop	r14
    2330:	08 95       	ret

00002332 <STEPPER_set_accel>:
    2332:	48 2f       	mov	r20, r24
    2334:	81 e0       	ldi	r24, 0x01	; 1
    2336:	80 93 d3 04 	sts	0x04D3, r24
    233a:	cb 01       	movw	r24, r22
    233c:	23 e0       	ldi	r18, 0x03	; 3
    233e:	69 3e       	cpi	r22, 0xE9	; 233
    2340:	72 07       	cpc	r23, r18
    2342:	10 f0       	brcs	.+4      	; 0x2348 <STEPPER_set_accel+0x16>
    2344:	88 ee       	ldi	r24, 0xE8	; 232
    2346:	93 e0       	ldi	r25, 0x03	; 3
    2348:	41 30       	cpi	r20, 0x01	; 1
    234a:	71 f0       	breq	.+28     	; 0x2368 <STEPPER_set_accel+0x36>
    234c:	41 30       	cpi	r20, 0x01	; 1
    234e:	18 f0       	brcs	.+6      	; 0x2356 <STEPPER_set_accel+0x24>
    2350:	42 30       	cpi	r20, 0x02	; 2
    2352:	71 f4       	brne	.+28     	; 0x2370 <STEPPER_set_accel+0x3e>
    2354:	05 c0       	rjmp	.+10     	; 0x2360 <STEPPER_set_accel+0x2e>
    2356:	90 93 a8 04 	sts	0x04A8, r25
    235a:	80 93 a7 04 	sts	0x04A7, r24
    235e:	08 c0       	rjmp	.+16     	; 0x2370 <STEPPER_set_accel+0x3e>
    2360:	90 93 a8 04 	sts	0x04A8, r25
    2364:	80 93 a7 04 	sts	0x04A7, r24
    2368:	90 93 aa 04 	sts	0x04AA, r25
    236c:	80 93 a9 04 	sts	0x04A9, r24
    2370:	10 92 d3 04 	sts	0x04D3, r1
    2374:	08 95       	ret

00002376 <STEPPER_set_dir>:
    2376:	98 2f       	mov	r25, r24
    2378:	81 e0       	ldi	r24, 0x01	; 1
    237a:	80 93 d3 04 	sts	0x04D3, r24
    237e:	91 30       	cpi	r25, 0x01	; 1
    2380:	51 f0       	breq	.+20     	; 0x2396 <STEPPER_set_dir+0x20>
    2382:	91 30       	cpi	r25, 0x01	; 1
    2384:	18 f0       	brcs	.+6      	; 0x238c <STEPPER_set_dir+0x16>
    2386:	92 30       	cpi	r25, 0x02	; 2
    2388:	41 f4       	brne	.+16     	; 0x239a <STEPPER_set_dir+0x24>
    238a:	03 c0       	rjmp	.+6      	; 0x2392 <STEPPER_set_dir+0x1c>
    238c:	60 93 c0 04 	sts	0x04C0, r22
    2390:	04 c0       	rjmp	.+8      	; 0x239a <STEPPER_set_dir+0x24>
    2392:	60 93 c0 04 	sts	0x04C0, r22
    2396:	60 93 c1 04 	sts	0x04C1, r22
    239a:	10 92 d3 04 	sts	0x04D3, r1
    239e:	08 95       	ret

000023a0 <STEPPER_set_mode>:
    23a0:	98 2f       	mov	r25, r24
    23a2:	81 e0       	ldi	r24, 0x01	; 1
    23a4:	80 93 d3 04 	sts	0x04D3, r24
    23a8:	91 30       	cpi	r25, 0x01	; 1
    23aa:	51 f0       	breq	.+20     	; 0x23c0 <STEPPER_set_mode+0x20>
    23ac:	91 30       	cpi	r25, 0x01	; 1
    23ae:	18 f0       	brcs	.+6      	; 0x23b6 <STEPPER_set_mode+0x16>
    23b0:	92 30       	cpi	r25, 0x02	; 2
    23b2:	41 f4       	brne	.+16     	; 0x23c4 <STEPPER_set_mode+0x24>
    23b4:	03 c0       	rjmp	.+6      	; 0x23bc <STEPPER_set_mode+0x1c>
    23b6:	60 93 9d 04 	sts	0x049D, r22
    23ba:	04 c0       	rjmp	.+8      	; 0x23c4 <STEPPER_set_mode+0x24>
    23bc:	60 93 9d 04 	sts	0x049D, r22
    23c0:	60 93 9e 04 	sts	0x049E, r22
    23c4:	10 92 d3 04 	sts	0x04D3, r1
    23c8:	08 95       	ret

000023ca <STEPPER_set_speed>:
    23ca:	48 2f       	mov	r20, r24
    23cc:	81 e0       	ldi	r24, 0x01	; 1
    23ce:	80 93 d3 04 	sts	0x04D3, r24
    23d2:	cb 01       	movw	r24, r22
    23d4:	21 e0       	ldi	r18, 0x01	; 1
    23d6:	61 39       	cpi	r22, 0x91	; 145
    23d8:	72 07       	cpc	r23, r18
    23da:	10 f0       	brcs	.+4      	; 0x23e0 <STEPPER_set_speed+0x16>
    23dc:	80 e9       	ldi	r24, 0x90	; 144
    23de:	91 e0       	ldi	r25, 0x01	; 1
    23e0:	41 30       	cpi	r20, 0x01	; 1
    23e2:	71 f0       	breq	.+28     	; 0x2400 <STEPPER_set_speed+0x36>
    23e4:	41 30       	cpi	r20, 0x01	; 1
    23e6:	18 f0       	brcs	.+6      	; 0x23ee <STEPPER_set_speed+0x24>
    23e8:	42 30       	cpi	r20, 0x02	; 2
    23ea:	71 f4       	brne	.+28     	; 0x2408 <STEPPER_set_speed+0x3e>
    23ec:	05 c0       	rjmp	.+10     	; 0x23f8 <STEPPER_set_speed+0x2e>
    23ee:	90 93 a0 04 	sts	0x04A0, r25
    23f2:	80 93 9f 04 	sts	0x049F, r24
    23f6:	08 c0       	rjmp	.+16     	; 0x2408 <STEPPER_set_speed+0x3e>
    23f8:	90 93 a0 04 	sts	0x04A0, r25
    23fc:	80 93 9f 04 	sts	0x049F, r24
    2400:	90 93 a2 04 	sts	0x04A2, r25
    2404:	80 93 a1 04 	sts	0x04A1, r24
    2408:	10 92 d3 04 	sts	0x04D3, r1
    240c:	08 95       	ret

0000240e <STEPPER_step>:
    240e:	8f 92       	push	r8
    2410:	9f 92       	push	r9
    2412:	af 92       	push	r10
    2414:	bf 92       	push	r11
    2416:	cf 92       	push	r12
    2418:	df 92       	push	r13
    241a:	ef 92       	push	r14
    241c:	ff 92       	push	r15
    241e:	0f 93       	push	r16
    2420:	1f 93       	push	r17
    2422:	cf 93       	push	r28
    2424:	df 93       	push	r29
    2426:	18 2f       	mov	r17, r24
    2428:	f6 2e       	mov	r15, r22
    242a:	5a 01       	movw	r10, r20
    242c:	49 01       	movw	r8, r18
    242e:	e6 01       	movw	r28, r12
    2430:	61 e0       	ldi	r22, 0x01	; 1
    2432:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <STEPPER_set_mode>
    2436:	81 2f       	mov	r24, r17
    2438:	b5 01       	movw	r22, r10
    243a:	a4 01       	movw	r20, r8
    243c:	0e 94 6c 1a 	call	0x34d8	; 0x34d8 <STEPPER_setup_decels>
    2440:	81 2f       	mov	r24, r17
    2442:	6f 2d       	mov	r22, r15
    2444:	0e 94 bb 11 	call	0x2376	; 0x2376 <STEPPER_set_dir>
    2448:	81 2f       	mov	r24, r17
    244a:	60 2f       	mov	r22, r16
    244c:	0e 94 57 1a 	call	0x34ae	; 0x34ae <STEPPER_set_stop_mode>
    2450:	81 2f       	mov	r24, r17
    2452:	b5 01       	movw	r22, r10
    2454:	0e 94 3c 1a 	call	0x3478	; 0x3478 <STEPPER_set_steps>
    2458:	c1 14       	cp	r12, r1
    245a:	d1 04       	cpc	r13, r1
    245c:	99 f0       	breq	.+38     	; 0x2484 <STEPPER_step+0x76>
    245e:	11 30       	cpi	r17, 0x01	; 1
    2460:	49 f0       	breq	.+18     	; 0x2474 <STEPPER_step+0x66>
    2462:	11 30       	cpi	r17, 0x01	; 1
    2464:	18 f0       	brcs	.+6      	; 0x246c <STEPPER_step+0x5e>
    2466:	12 30       	cpi	r17, 0x02	; 2
    2468:	69 f4       	brne	.+26     	; 0x2484 <STEPPER_step+0x76>
    246a:	06 c0       	rjmp	.+12     	; 0x2478 <STEPPER_step+0x6a>
    246c:	18 82       	st	Y, r1
    246e:	10 92 cf 04 	sts	0x04CF, r1
    2472:	08 c0       	rjmp	.+16     	; 0x2484 <STEPPER_step+0x76>
    2474:	19 82       	std	Y+1, r1	; 0x01
    2476:	04 c0       	rjmp	.+8      	; 0x2480 <STEPPER_step+0x72>
    2478:	18 82       	st	Y, r1
    247a:	19 82       	std	Y+1, r1	; 0x01
    247c:	10 92 cf 04 	sts	0x04CF, r1
    2480:	10 92 d0 04 	sts	0x04D0, r1
    2484:	d0 93 d2 04 	sts	0x04D2, r29
    2488:	c0 93 d1 04 	sts	0x04D1, r28
    248c:	ee 20       	and	r14, r14
    248e:	b9 f5       	brne	.+110    	; 0x24fe <STEPPER_step+0xf0>
    2490:	80 e4       	ldi	r24, 0x40	; 64
    2492:	92 e0       	ldi	r25, 0x02	; 2
    2494:	90 93 d2 04 	sts	0x04D2, r25
    2498:	80 93 d1 04 	sts	0x04D1, r24
    249c:	81 2f       	mov	r24, r17
    249e:	b4 01       	movw	r22, r8
    24a0:	0e 94 e5 11 	call	0x23ca	; 0x23ca <STEPPER_set_speed>
    24a4:	81 2f       	mov	r24, r17
    24a6:	0e 94 1d 1a 	call	0x343a	; 0x343a <STEPPER_go>
    24aa:	11 30       	cpi	r17, 0x01	; 1
    24ac:	71 f0       	breq	.+28     	; 0x24ca <STEPPER_step+0xbc>
    24ae:	11 30       	cpi	r17, 0x01	; 1
    24b0:	18 f0       	brcs	.+6      	; 0x24b8 <STEPPER_step+0xaa>
    24b2:	12 30       	cpi	r17, 0x02	; 2
    24b4:	59 f5       	brne	.+86     	; 0x250c <STEPPER_step+0xfe>
    24b6:	12 c0       	rjmp	.+36     	; 0x24dc <STEPPER_step+0xce>
    24b8:	10 92 40 02 	sts	0x0240, r1
    24bc:	10 92 cf 04 	sts	0x04CF, r1
    24c0:	80 91 40 02 	lds	r24, 0x0240
    24c4:	88 23       	and	r24, r24
    24c6:	e1 f3       	breq	.-8      	; 0x24c0 <STEPPER_step+0xb2>
    24c8:	21 c0       	rjmp	.+66     	; 0x250c <STEPPER_step+0xfe>
    24ca:	10 92 41 02 	sts	0x0241, r1
    24ce:	10 92 d0 04 	sts	0x04D0, r1
    24d2:	80 91 41 02 	lds	r24, 0x0241
    24d6:	88 23       	and	r24, r24
    24d8:	e1 f3       	breq	.-8      	; 0x24d2 <STEPPER_step+0xc4>
    24da:	18 c0       	rjmp	.+48     	; 0x250c <STEPPER_step+0xfe>
    24dc:	10 92 40 02 	sts	0x0240, r1
    24e0:	10 92 41 02 	sts	0x0241, r1
    24e4:	10 92 cf 04 	sts	0x04CF, r1
    24e8:	10 92 d0 04 	sts	0x04D0, r1
    24ec:	80 91 40 02 	lds	r24, 0x0240
    24f0:	88 23       	and	r24, r24
    24f2:	e1 f3       	breq	.-8      	; 0x24ec <STEPPER_step+0xde>
    24f4:	80 91 41 02 	lds	r24, 0x0241
    24f8:	88 23       	and	r24, r24
    24fa:	c1 f3       	breq	.-16     	; 0x24ec <STEPPER_step+0xde>
    24fc:	07 c0       	rjmp	.+14     	; 0x250c <STEPPER_step+0xfe>
    24fe:	81 2f       	mov	r24, r17
    2500:	b4 01       	movw	r22, r8
    2502:	0e 94 e5 11 	call	0x23ca	; 0x23ca <STEPPER_set_speed>
    2506:	81 2f       	mov	r24, r17
    2508:	0e 94 1d 1a 	call	0x343a	; 0x343a <STEPPER_go>
    250c:	df 91       	pop	r29
    250e:	cf 91       	pop	r28
    2510:	1f 91       	pop	r17
    2512:	0f 91       	pop	r16
    2514:	ff 90       	pop	r15
    2516:	ef 90       	pop	r14
    2518:	df 90       	pop	r13
    251a:	cf 90       	pop	r12
    251c:	bf 90       	pop	r11
    251e:	af 90       	pop	r10
    2520:	9f 90       	pop	r9
    2522:	8f 90       	pop	r8
    2524:	08 95       	ret

00002526 <STEPPER_wait_and_then>:
    2526:	cf 92       	push	r12
    2528:	df 92       	push	r13
    252a:	ef 92       	push	r14
    252c:	ff 92       	push	r15
    252e:	0f 93       	push	r16
    2530:	1f 93       	push	r17
    2532:	df 93       	push	r29
    2534:	cf 93       	push	r28
    2536:	cd b7       	in	r28, 0x3d	; 61
    2538:	de b7       	in	r29, 0x3e	; 62
    253a:	8b 85       	ldd	r24, Y+11	; 0x0b
    253c:	81 30       	cpi	r24, 0x01	; 1
    253e:	61 f0       	breq	.+24     	; 0x2558 <STEPPER_wait_and_then+0x32>
    2540:	81 30       	cpi	r24, 0x01	; 1
    2542:	18 f0       	brcs	.+6      	; 0x254a <STEPPER_wait_and_then+0x24>
    2544:	82 30       	cpi	r24, 0x02	; 2
    2546:	a1 f5       	brne	.+104    	; 0x25b0 <STEPPER_wait_and_then+0x8a>
    2548:	11 c0       	rjmp	.+34     	; 0x256c <STEPPER_wait_and_then+0x46>
    254a:	ec 85       	ldd	r30, Y+12	; 0x0c
    254c:	fd 85       	ldd	r31, Y+13	; 0x0d
    254e:	80 91 d4 04 	lds	r24, 0x04D4
    2552:	88 23       	and	r24, r24
    2554:	e1 f3       	breq	.-8      	; 0x254e <STEPPER_wait_and_then+0x28>
    2556:	06 c0       	rjmp	.+12     	; 0x2564 <STEPPER_wait_and_then+0x3e>
    2558:	ec 85       	ldd	r30, Y+12	; 0x0c
    255a:	fd 85       	ldd	r31, Y+13	; 0x0d
    255c:	80 91 d5 04 	lds	r24, 0x04D5
    2560:	88 23       	and	r24, r24
    2562:	e1 f3       	breq	.-8      	; 0x255c <STEPPER_wait_and_then+0x36>
    2564:	30 97       	sbiw	r30, 0x00	; 0
    2566:	21 f1       	breq	.+72     	; 0x25b0 <STEPPER_wait_and_then+0x8a>
    2568:	09 95       	icall
    256a:	22 c0       	rjmp	.+68     	; 0x25b0 <STEPPER_wait_and_then+0x8a>
    256c:	cc 84       	ldd	r12, Y+12	; 0x0c
    256e:	dd 84       	ldd	r13, Y+13	; 0x0d
    2570:	ee 84       	ldd	r14, Y+14	; 0x0e
    2572:	ff 84       	ldd	r15, Y+15	; 0x0f
    2574:	00 e0       	ldi	r16, 0x00	; 0
    2576:	10 e0       	ldi	r17, 0x00	; 0
    2578:	00 23       	and	r16, r16
    257a:	51 f4       	brne	.+20     	; 0x2590 <STEPPER_wait_and_then+0x6a>
    257c:	80 91 d4 04 	lds	r24, 0x04D4
    2580:	88 23       	and	r24, r24
    2582:	31 f0       	breq	.+12     	; 0x2590 <STEPPER_wait_and_then+0x6a>
    2584:	c1 14       	cp	r12, r1
    2586:	d1 04       	cpc	r13, r1
    2588:	11 f0       	breq	.+4      	; 0x258e <STEPPER_wait_and_then+0x68>
    258a:	f6 01       	movw	r30, r12
    258c:	09 95       	icall
    258e:	01 e0       	ldi	r16, 0x01	; 1
    2590:	11 23       	and	r17, r17
    2592:	51 f4       	brne	.+20     	; 0x25a8 <STEPPER_wait_and_then+0x82>
    2594:	80 91 d5 04 	lds	r24, 0x04D5
    2598:	88 23       	and	r24, r24
    259a:	31 f0       	breq	.+12     	; 0x25a8 <STEPPER_wait_and_then+0x82>
    259c:	e1 14       	cp	r14, r1
    259e:	f1 04       	cpc	r15, r1
    25a0:	11 f0       	breq	.+4      	; 0x25a6 <STEPPER_wait_and_then+0x80>
    25a2:	f7 01       	movw	r30, r14
    25a4:	09 95       	icall
    25a6:	11 e0       	ldi	r17, 0x01	; 1
    25a8:	00 23       	and	r16, r16
    25aa:	31 f3       	breq	.-52     	; 0x2578 <STEPPER_wait_and_then+0x52>
    25ac:	11 23       	and	r17, r17
    25ae:	21 f3       	breq	.-56     	; 0x2578 <STEPPER_wait_and_then+0x52>
    25b0:	cf 91       	pop	r28
    25b2:	df 91       	pop	r29
    25b4:	1f 91       	pop	r17
    25b6:	0f 91       	pop	r16
    25b8:	ff 90       	pop	r15
    25ba:	ef 90       	pop	r14
    25bc:	df 90       	pop	r13
    25be:	cf 90       	pop	r12
    25c0:	08 95       	ret

000025c2 <SYS_get_state>:
    25c2:	e8 2f       	mov	r30, r24
    25c4:	f0 e0       	ldi	r31, 0x00	; 0
    25c6:	e3 31       	cpi	r30, 0x13	; 19
    25c8:	f1 05       	cpc	r31, r1
    25ca:	40 f4       	brcc	.+16     	; 0x25dc <SYS_get_state+0x1a>
    25cc:	e2 5c       	subi	r30, 0xC2	; 194
    25ce:	ff 4f       	sbci	r31, 0xFF	; 255
    25d0:	ee 0f       	add	r30, r30
    25d2:	ff 1f       	adc	r31, r31
    25d4:	05 90       	lpm	r0, Z+
    25d6:	f4 91       	lpm	r31, Z+
    25d8:	e0 2d       	mov	r30, r0
    25da:	09 94       	ijmp
    25dc:	80 e0       	ldi	r24, 0x00	; 0
    25de:	08 95       	ret
    25e0:	80 91 d6 04 	lds	r24, 0x04D6
    25e4:	08 95       	ret
    25e6:	80 91 d7 04 	lds	r24, 0x04D7
    25ea:	08 95       	ret
    25ec:	80 91 d8 04 	lds	r24, 0x04D8
    25f0:	08 95       	ret
    25f2:	80 91 d9 04 	lds	r24, 0x04D9
    25f6:	08 95       	ret
    25f8:	80 91 da 04 	lds	r24, 0x04DA
    25fc:	08 95       	ret
    25fe:	80 91 dc 04 	lds	r24, 0x04DC
    2602:	08 95       	ret
    2604:	80 91 db 04 	lds	r24, 0x04DB
    2608:	08 95       	ret
    260a:	80 91 dd 04 	lds	r24, 0x04DD
    260e:	08 95       	ret
    2610:	80 91 de 04 	lds	r24, 0x04DE
    2614:	08 95       	ret
    2616:	80 91 df 04 	lds	r24, 0x04DF
    261a:	08 95       	ret
    261c:	80 91 e0 04 	lds	r24, 0x04E0
    2620:	08 95       	ret
    2622:	80 91 e1 04 	lds	r24, 0x04E1
    2626:	08 95       	ret
    2628:	80 91 e2 04 	lds	r24, 0x04E2
    262c:	08 95       	ret
    262e:	80 91 e3 04 	lds	r24, 0x04E3
    2632:	08 95       	ret
    2634:	80 91 e4 04 	lds	r24, 0x04E4
    2638:	08 95       	ret
    263a:	80 91 e5 04 	lds	r24, 0x04E5
    263e:	08 95       	ret
    2640:	80 91 e6 04 	lds	r24, 0x04E6
    2644:	08 95       	ret
    2646:	80 91 e7 04 	lds	r24, 0x04E7
    264a:	08 95       	ret
    264c:	80 91 e8 04 	lds	r24, 0x04E8
    2650:	08 95       	ret

00002652 <SYS_set_state>:
    2652:	e8 2f       	mov	r30, r24
    2654:	f0 e0       	ldi	r31, 0x00	; 0
    2656:	e3 31       	cpi	r30, 0x13	; 19
    2658:	f1 05       	cpc	r31, r1
    265a:	08 f0       	brcs	.+2      	; 0x265e <SYS_set_state+0xc>
    265c:	40 c0       	rjmp	.+128    	; 0x26de <SYS_set_state+0x8c>
    265e:	ef 5a       	subi	r30, 0xAF	; 175
    2660:	ff 4f       	sbci	r31, 0xFF	; 255
    2662:	ee 0f       	add	r30, r30
    2664:	ff 1f       	adc	r31, r31
    2666:	05 90       	lpm	r0, Z+
    2668:	f4 91       	lpm	r31, Z+
    266a:	e0 2d       	mov	r30, r0
    266c:	09 94       	ijmp
    266e:	60 93 d6 04 	sts	0x04D6, r22
    2672:	08 95       	ret
    2674:	60 93 d7 04 	sts	0x04D7, r22
    2678:	08 95       	ret
    267a:	60 93 d8 04 	sts	0x04D8, r22
    267e:	08 95       	ret
    2680:	60 93 d9 04 	sts	0x04D9, r22
    2684:	08 95       	ret
    2686:	60 93 da 04 	sts	0x04DA, r22
    268a:	08 95       	ret
    268c:	60 93 dc 04 	sts	0x04DC, r22
    2690:	08 95       	ret
    2692:	60 93 db 04 	sts	0x04DB, r22
    2696:	08 95       	ret
    2698:	60 93 dd 04 	sts	0x04DD, r22
    269c:	08 95       	ret
    269e:	60 93 de 04 	sts	0x04DE, r22
    26a2:	08 95       	ret
    26a4:	60 93 df 04 	sts	0x04DF, r22
    26a8:	08 95       	ret
    26aa:	60 93 e0 04 	sts	0x04E0, r22
    26ae:	08 95       	ret
    26b0:	60 93 e1 04 	sts	0x04E1, r22
    26b4:	08 95       	ret
    26b6:	60 93 e2 04 	sts	0x04E2, r22
    26ba:	08 95       	ret
    26bc:	60 93 e3 04 	sts	0x04E3, r22
    26c0:	08 95       	ret
    26c2:	60 93 e4 04 	sts	0x04E4, r22
    26c6:	08 95       	ret
    26c8:	60 93 e5 04 	sts	0x04E5, r22
    26cc:	08 95       	ret
    26ce:	60 93 e6 04 	sts	0x04E6, r22
    26d2:	08 95       	ret
    26d4:	60 93 e7 04 	sts	0x04E7, r22
    26d8:	08 95       	ret
    26da:	60 93 e6 04 	sts	0x04E6, r22
    26de:	08 95       	ret

000026e0 <ATTINY_get_SW_state>:
    26e0:	1f 93       	push	r17
    26e2:	cf 93       	push	r28
    26e4:	df 93       	push	r29
    26e6:	18 2f       	mov	r17, r24
    26e8:	80 91 43 02 	lds	r24, 0x0243
    26ec:	88 23       	and	r24, r24
    26ee:	41 f0       	breq	.+16     	; 0x2700 <ATTINY_get_SW_state+0x20>
    26f0:	80 91 4d 02 	lds	r24, 0x024D
    26f4:	88 23       	and	r24, r24
    26f6:	99 f0       	breq	.+38     	; 0x271e <ATTINY_get_SW_state+0x3e>
    26f8:	10 92 43 02 	sts	0x0243, r1
    26fc:	10 92 4d 02 	sts	0x024D, r1
    2700:	0e 94 cc 1a 	call	0x3598	; 0x3598 <ATTINY_get_sensors>
    2704:	80 93 42 02 	sts	0x0242, r24
    2708:	87 e4       	ldi	r24, 0x47	; 71
    270a:	92 e0       	ldi	r25, 0x02	; 2
    270c:	61 e0       	ldi	r22, 0x01	; 1
    270e:	40 e0       	ldi	r20, 0x00	; 0
    2710:	22 e3       	ldi	r18, 0x32	; 50
    2712:	30 e0       	ldi	r19, 0x00	; 0
    2714:	0e 94 2e 14 	call	0x285c	; 0x285c <TMRSRVC_new>
    2718:	81 e0       	ldi	r24, 0x01	; 1
    271a:	80 93 43 02 	sts	0x0243, r24
    271e:	90 91 42 02 	lds	r25, 0x0242
    2722:	a1 2f       	mov	r26, r17
    2724:	b0 e0       	ldi	r27, 0x00	; 0
    2726:	ed 01       	movw	r28, r26
    2728:	cf 52       	subi	r28, 0x2F	; 47
    272a:	de 4f       	sbci	r29, 0xFE	; 254
    272c:	88 81       	ld	r24, Y
    272e:	88 23       	and	r24, r24
    2730:	69 f0       	breq	.+26     	; 0x274c <ATTINY_get_SW_state+0x6c>
    2732:	fd 01       	movw	r30, r26
    2734:	ec 52       	subi	r30, 0x2C	; 44
    2736:	fe 4f       	sbci	r31, 0xFE	; 254
    2738:	80 81       	ld	r24, Z
    273a:	98 23       	and	r25, r24
    273c:	c1 f0       	breq	.+48     	; 0x276e <ATTINY_get_SW_state+0x8e>
    273e:	fd 01       	movw	r30, r26
    2740:	ec 5b       	subi	r30, 0xBC	; 188
    2742:	fd 4f       	sbci	r31, 0xFD	; 253
    2744:	81 e0       	ldi	r24, 0x01	; 1
    2746:	80 83       	st	Z, r24
    2748:	18 82       	st	Y, r1
    274a:	11 c0       	rjmp	.+34     	; 0x276e <ATTINY_get_SW_state+0x8e>
    274c:	fd 01       	movw	r30, r26
    274e:	ec 5b       	subi	r30, 0xBC	; 188
    2750:	fd 4f       	sbci	r31, 0xFD	; 253
    2752:	80 81       	ld	r24, Z
    2754:	81 11       	cpse	r24, r1
    2756:	10 82       	st	Z, r1
    2758:	fd 01       	movw	r30, r26
    275a:	ec 52       	subi	r30, 0x2C	; 44
    275c:	fe 4f       	sbci	r31, 0xFE	; 254
    275e:	80 81       	ld	r24, Z
    2760:	98 23       	and	r25, r24
    2762:	29 f4       	brne	.+10     	; 0x276e <ATTINY_get_SW_state+0x8e>
    2764:	fd 01       	movw	r30, r26
    2766:	ef 52       	subi	r30, 0x2F	; 47
    2768:	fe 4f       	sbci	r31, 0xFE	; 254
    276a:	81 e0       	ldi	r24, 0x01	; 1
    276c:	80 83       	st	Z, r24
    276e:	ac 5b       	subi	r26, 0xBC	; 188
    2770:	bd 4f       	sbci	r27, 0xFD	; 253
    2772:	8c 91       	ld	r24, X
    2774:	df 91       	pop	r29
    2776:	cf 91       	pop	r28
    2778:	1f 91       	pop	r17
    277a:	08 95       	ret

0000277c <ATTINY_open>:
    277c:	82 e0       	ldi	r24, 0x02	; 2
    277e:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    2782:	88 23       	and	r24, r24
    2784:	19 f4       	brne	.+6      	; 0x278c <ATTINY_open+0x10>
    2786:	90 e0       	ldi	r25, 0x00	; 0
    2788:	82 e0       	ldi	r24, 0x02	; 2
    278a:	08 95       	ret
    278c:	10 92 04 05 	sts	0x0504, r1
    2790:	10 92 03 05 	sts	0x0503, r1
    2794:	10 92 06 05 	sts	0x0506, r1
    2798:	10 92 05 05 	sts	0x0505, r1
    279c:	10 92 08 05 	sts	0x0508, r1
    27a0:	10 92 07 05 	sts	0x0507, r1
    27a4:	10 92 0a 05 	sts	0x050A, r1
    27a8:	10 92 09 05 	sts	0x0509, r1
    27ac:	10 92 0c 05 	sts	0x050C, r1
    27b0:	10 92 0b 05 	sts	0x050B, r1
    27b4:	80 e9       	ldi	r24, 0x90	; 144
    27b6:	91 e0       	ldi	r25, 0x01	; 1
    27b8:	90 93 f0 04 	sts	0x04F0, r25
    27bc:	80 93 ef 04 	sts	0x04EF, r24
    27c0:	90 93 f2 04 	sts	0x04F2, r25
    27c4:	80 93 f1 04 	sts	0x04F1, r24
    27c8:	90 93 f4 04 	sts	0x04F4, r25
    27cc:	80 93 f3 04 	sts	0x04F3, r24
    27d0:	90 93 f6 04 	sts	0x04F6, r25
    27d4:	80 93 f5 04 	sts	0x04F5, r24
    27d8:	90 93 f8 04 	sts	0x04F8, r25
    27dc:	80 93 f7 04 	sts	0x04F7, r24
    27e0:	84 e3       	ldi	r24, 0x34	; 52
    27e2:	98 e0       	ldi	r25, 0x08	; 8
    27e4:	90 93 fa 04 	sts	0x04FA, r25
    27e8:	80 93 f9 04 	sts	0x04F9, r24
    27ec:	90 93 fc 04 	sts	0x04FC, r25
    27f0:	80 93 fb 04 	sts	0x04FB, r24
    27f4:	90 93 fe 04 	sts	0x04FE, r25
    27f8:	80 93 fd 04 	sts	0x04FD, r24
    27fc:	90 93 00 05 	sts	0x0500, r25
    2800:	80 93 ff 04 	sts	0x04FF, r24
    2804:	90 93 02 05 	sts	0x0502, r25
    2808:	80 93 01 05 	sts	0x0501, r24
    280c:	81 e0       	ldi	r24, 0x01	; 1
    280e:	61 e0       	ldi	r22, 0x01	; 1
    2810:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    2814:	91 e0       	ldi	r25, 0x01	; 1
    2816:	81 e0       	ldi	r24, 0x01	; 1
    2818:	08 95       	ret

0000281a <TMRSRVC_delay>:
    281a:	df 93       	push	r29
    281c:	cf 93       	push	r28
    281e:	cd b7       	in	r28, 0x3d	; 61
    2820:	de b7       	in	r29, 0x3e	; 62
    2822:	29 97       	sbiw	r28, 0x09	; 9
    2824:	0f b6       	in	r0, 0x3f	; 63
    2826:	f8 94       	cli
    2828:	de bf       	out	0x3e, r29	; 62
    282a:	0f be       	out	0x3f, r0	; 63
    282c:	cd bf       	out	0x3d, r28	; 61
    282e:	9c 01       	movw	r18, r24
    2830:	ce 01       	movw	r24, r28
    2832:	01 96       	adiw	r24, 0x01	; 1
    2834:	61 e0       	ldi	r22, 0x01	; 1
    2836:	40 e0       	ldi	r20, 0x00	; 0
    2838:	0e 94 2e 14 	call	0x285c	; 0x285c <TMRSRVC_new>
    283c:	98 2f       	mov	r25, r24
    283e:	88 23       	and	r24, r24
    2840:	19 f4       	brne	.+6      	; 0x2848 <TMRSRVC_delay+0x2e>
    2842:	8f 81       	ldd	r24, Y+7	; 0x07
    2844:	88 23       	and	r24, r24
    2846:	e9 f3       	breq	.-6      	; 0x2842 <TMRSRVC_delay+0x28>
    2848:	89 2f       	mov	r24, r25
    284a:	29 96       	adiw	r28, 0x09	; 9
    284c:	0f b6       	in	r0, 0x3f	; 63
    284e:	f8 94       	cli
    2850:	de bf       	out	0x3e, r29	; 62
    2852:	0f be       	out	0x3f, r0	; 63
    2854:	cd bf       	out	0x3d, r28	; 61
    2856:	cf 91       	pop	r28
    2858:	df 91       	pop	r29
    285a:	08 95       	ret

0000285c <TMRSRVC_new>:
    285c:	ef 92       	push	r14
    285e:	ff 92       	push	r15
    2860:	0f 93       	push	r16
    2862:	1f 93       	push	r17
    2864:	cf 93       	push	r28
    2866:	df 93       	push	r29
    2868:	ec 01       	movw	r28, r24
    286a:	f6 2e       	mov	r15, r22
    286c:	e4 2e       	mov	r14, r20
    286e:	89 01       	movw	r16, r18
    2870:	88 e0       	ldi	r24, 0x08	; 8
    2872:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    2876:	81 30       	cpi	r24, 0x01	; 1
    2878:	11 f0       	breq	.+4      	; 0x287e <TMRSRVC_new+0x22>
    287a:	81 e0       	ldi	r24, 0x01	; 1
    287c:	26 c0       	rjmp	.+76     	; 0x28ca <TMRSRVC_new+0x6e>
    287e:	84 e0       	ldi	r24, 0x04	; 4
    2880:	90 e0       	ldi	r25, 0x00	; 0
    2882:	0e 94 1b 28 	call	0x5036	; 0x5036 <malloc>
    2886:	fc 01       	movw	r30, r24
    2888:	00 97       	sbiw	r24, 0x00	; 0
    288a:	11 f4       	brne	.+4      	; 0x2890 <TMRSRVC_new+0x34>
    288c:	82 e0       	ldi	r24, 0x02	; 2
    288e:	1d c0       	rjmp	.+58     	; 0x28ca <TMRSRVC_new+0x6e>
    2890:	f9 82       	std	Y+1, r15	; 0x01
    2892:	f0 fc       	sbrc	r15, 0
    2894:	1e 82       	std	Y+6, r1	; 0x06
    2896:	81 e0       	ldi	r24, 0x01	; 1
    2898:	e8 16       	cp	r14, r24
    289a:	19 f4       	brne	.+6      	; 0x28a2 <TMRSRVC_new+0x46>
    289c:	89 81       	ldd	r24, Y+1	; 0x01
    289e:	84 60       	ori	r24, 0x04	; 4
    28a0:	89 83       	std	Y+1, r24	; 0x01
    28a2:	89 81       	ldd	r24, Y+1	; 0x01
    28a4:	88 60       	ori	r24, 0x08	; 8
    28a6:	89 83       	std	Y+1, r24	; 0x01
    28a8:	1b 83       	std	Y+3, r17	; 0x03
    28aa:	0a 83       	std	Y+2, r16	; 0x02
    28ac:	1d 83       	std	Y+5, r17	; 0x05
    28ae:	0c 83       	std	Y+4, r16	; 0x04
    28b0:	d1 83       	std	Z+1, r29	; 0x01
    28b2:	c0 83       	st	Z, r28
    28b4:	13 82       	std	Z+3, r1	; 0x03
    28b6:	12 82       	std	Z+2, r1	; 0x02
    28b8:	81 e0       	ldi	r24, 0x01	; 1
    28ba:	80 93 b0 02 	sts	0x02B0, r24
    28be:	cf 01       	movw	r24, r30
    28c0:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <TMRSRVC_insert>
    28c4:	10 92 b0 02 	sts	0x02B0, r1
    28c8:	80 e0       	ldi	r24, 0x00	; 0
    28ca:	df 91       	pop	r29
    28cc:	cf 91       	pop	r28
    28ce:	1f 91       	pop	r17
    28d0:	0f 91       	pop	r16
    28d2:	ff 90       	pop	r15
    28d4:	ef 90       	pop	r14
    28d6:	08 95       	ret

000028d8 <I2C_MSTR_get>:
    28d8:	fc 01       	movw	r30, r24
    28da:	80 91 10 05 	lds	r24, 0x0510
    28de:	81 30       	cpi	r24, 0x01	; 1
    28e0:	11 f0       	breq	.+4      	; 0x28e6 <I2C_MSTR_get+0xe>
    28e2:	85 e0       	ldi	r24, 0x05	; 5
    28e4:	08 95       	ret
    28e6:	80 91 11 05 	lds	r24, 0x0511
    28ea:	81 30       	cpi	r24, 0x01	; 1
    28ec:	11 f0       	breq	.+4      	; 0x28f2 <I2C_MSTR_get+0x1a>
    28ee:	8a e0       	ldi	r24, 0x0A	; 10
    28f0:	08 95       	ret
    28f2:	61 30       	cpi	r22, 0x01	; 1
    28f4:	11 f4       	brne	.+4      	; 0x28fa <I2C_MSTR_get+0x22>
    28f6:	84 ec       	ldi	r24, 0xC4	; 196
    28f8:	01 c0       	rjmp	.+2      	; 0x28fc <I2C_MSTR_get+0x24>
    28fa:	84 e8       	ldi	r24, 0x84	; 132
    28fc:	80 93 bc 00 	sts	0x00BC, r24
    2900:	80 91 bc 00 	lds	r24, 0x00BC
    2904:	87 ff       	sbrs	r24, 7
    2906:	fc cf       	rjmp	.-8      	; 0x2900 <I2C_MSTR_get+0x28>
    2908:	61 30       	cpi	r22, 0x01	; 1
    290a:	31 f4       	brne	.+12     	; 0x2918 <I2C_MSTR_get+0x40>
    290c:	80 91 b9 00 	lds	r24, 0x00B9
    2910:	88 7f       	andi	r24, 0xF8	; 248
    2912:	80 35       	cpi	r24, 0x50	; 80
    2914:	59 f4       	brne	.+22     	; 0x292c <I2C_MSTR_get+0x54>
    2916:	05 c0       	rjmp	.+10     	; 0x2922 <I2C_MSTR_get+0x4a>
    2918:	80 91 b9 00 	lds	r24, 0x00B9
    291c:	88 7f       	andi	r24, 0xF8	; 248
    291e:	88 35       	cpi	r24, 0x58	; 88
    2920:	29 f4       	brne	.+10     	; 0x292c <I2C_MSTR_get+0x54>
    2922:	80 91 bb 00 	lds	r24, 0x00BB
    2926:	80 83       	st	Z, r24
    2928:	80 e0       	ldi	r24, 0x00	; 0
    292a:	08 95       	ret
    292c:	82 e0       	ldi	r24, 0x02	; 2
    292e:	08 95       	ret

00002930 <I2C_MSTR_send>:
    2930:	98 2f       	mov	r25, r24
    2932:	80 91 10 05 	lds	r24, 0x0510
    2936:	81 30       	cpi	r24, 0x01	; 1
    2938:	11 f0       	breq	.+4      	; 0x293e <I2C_MSTR_send+0xe>
    293a:	85 e0       	ldi	r24, 0x05	; 5
    293c:	08 95       	ret
    293e:	80 91 11 05 	lds	r24, 0x0511
    2942:	81 30       	cpi	r24, 0x01	; 1
    2944:	11 f0       	breq	.+4      	; 0x294a <I2C_MSTR_send+0x1a>
    2946:	8a e0       	ldi	r24, 0x0A	; 10
    2948:	08 95       	ret
    294a:	90 93 bb 00 	sts	0x00BB, r25
    294e:	84 e8       	ldi	r24, 0x84	; 132
    2950:	80 93 bc 00 	sts	0x00BC, r24
    2954:	80 91 bc 00 	lds	r24, 0x00BC
    2958:	87 ff       	sbrs	r24, 7
    295a:	fc cf       	rjmp	.-8      	; 0x2954 <I2C_MSTR_send+0x24>
    295c:	80 91 b9 00 	lds	r24, 0x00B9
    2960:	90 e0       	ldi	r25, 0x00	; 0
    2962:	88 7f       	andi	r24, 0xF8	; 248
    2964:	90 70       	andi	r25, 0x00	; 0
    2966:	88 32       	cpi	r24, 0x28	; 40
    2968:	91 05       	cpc	r25, r1
    296a:	21 f0       	breq	.+8      	; 0x2974 <I2C_MSTR_send+0x44>
    296c:	c0 97       	sbiw	r24, 0x30	; 48
    296e:	21 f4       	brne	.+8      	; 0x2978 <I2C_MSTR_send+0x48>
    2970:	83 e0       	ldi	r24, 0x03	; 3
    2972:	08 95       	ret
    2974:	80 e0       	ldi	r24, 0x00	; 0
    2976:	08 95       	ret
    2978:	8c e0       	ldi	r24, 0x0C	; 12
    297a:	08 95       	ret

0000297c <I2C_MSTR_start>:
    297c:	98 2f       	mov	r25, r24
    297e:	20 91 10 05 	lds	r18, 0x0510
    2982:	21 30       	cpi	r18, 0x01	; 1
    2984:	11 f0       	breq	.+4      	; 0x298a <I2C_MSTR_start+0xe>
    2986:	85 e0       	ldi	r24, 0x05	; 5
    2988:	08 95       	ret
    298a:	80 91 12 05 	lds	r24, 0x0512
    298e:	81 30       	cpi	r24, 0x01	; 1
    2990:	11 f4       	brne	.+4      	; 0x2996 <I2C_MSTR_start+0x1a>
    2992:	89 e0       	ldi	r24, 0x09	; 9
    2994:	08 95       	ret
    2996:	20 93 11 05 	sts	0x0511, r18
    299a:	84 ea       	ldi	r24, 0xA4	; 164
    299c:	80 93 bc 00 	sts	0x00BC, r24
    29a0:	80 91 bc 00 	lds	r24, 0x00BC
    29a4:	87 ff       	sbrs	r24, 7
    29a6:	fc cf       	rjmp	.-8      	; 0x29a0 <I2C_MSTR_start+0x24>
    29a8:	80 91 b9 00 	lds	r24, 0x00B9
    29ac:	88 7f       	andi	r24, 0xF8	; 248
    29ae:	88 30       	cpi	r24, 0x08	; 8
    29b0:	39 f0       	breq	.+14     	; 0x29c0 <I2C_MSTR_start+0x44>
    29b2:	80 91 b9 00 	lds	r24, 0x00B9
    29b6:	88 7f       	andi	r24, 0xF8	; 248
    29b8:	80 31       	cpi	r24, 0x10	; 16
    29ba:	11 f0       	breq	.+4      	; 0x29c0 <I2C_MSTR_start+0x44>
    29bc:	81 e0       	ldi	r24, 0x01	; 1
    29be:	08 95       	ret
    29c0:	61 30       	cpi	r22, 0x01	; 1
    29c2:	19 f4       	brne	.+6      	; 0x29ca <I2C_MSTR_start+0x4e>
    29c4:	99 0f       	add	r25, r25
    29c6:	91 60       	ori	r25, 0x01	; 1
    29c8:	03 c0       	rjmp	.+6      	; 0x29d0 <I2C_MSTR_start+0x54>
    29ca:	66 23       	and	r22, r22
    29cc:	19 f4       	brne	.+6      	; 0x29d4 <I2C_MSTR_start+0x58>
    29ce:	99 0f       	add	r25, r25
    29d0:	90 93 bb 00 	sts	0x00BB, r25
    29d4:	84 e8       	ldi	r24, 0x84	; 132
    29d6:	80 93 bc 00 	sts	0x00BC, r24
    29da:	80 91 bc 00 	lds	r24, 0x00BC
    29de:	87 ff       	sbrs	r24, 7
    29e0:	fc cf       	rjmp	.-8      	; 0x29da <I2C_MSTR_start+0x5e>
    29e2:	61 30       	cpi	r22, 0x01	; 1
    29e4:	31 f4       	brne	.+12     	; 0x29f2 <I2C_MSTR_start+0x76>
    29e6:	80 91 b9 00 	lds	r24, 0x00B9
    29ea:	88 7f       	andi	r24, 0xF8	; 248
    29ec:	80 34       	cpi	r24, 0x40	; 64
    29ee:	41 f4       	brne	.+16     	; 0x2a00 <I2C_MSTR_start+0x84>
    29f0:	09 c0       	rjmp	.+18     	; 0x2a04 <I2C_MSTR_start+0x88>
    29f2:	66 23       	and	r22, r22
    29f4:	39 f4       	brne	.+14     	; 0x2a04 <I2C_MSTR_start+0x88>
    29f6:	80 91 b9 00 	lds	r24, 0x00B9
    29fa:	88 7f       	andi	r24, 0xF8	; 248
    29fc:	88 31       	cpi	r24, 0x18	; 24
    29fe:	11 f0       	breq	.+4      	; 0x2a04 <I2C_MSTR_start+0x88>
    2a00:	82 e0       	ldi	r24, 0x02	; 2
    2a02:	08 95       	ret
    2a04:	80 e0       	ldi	r24, 0x00	; 0
    2a06:	08 95       	ret

00002a08 <I2C_MSTR_stop>:
    2a08:	80 91 11 05 	lds	r24, 0x0511
    2a0c:	81 30       	cpi	r24, 0x01	; 1
    2a0e:	11 f0       	breq	.+4      	; 0x2a14 <I2C_MSTR_stop+0xc>
    2a10:	8a e0       	ldi	r24, 0x0A	; 10
    2a12:	08 95       	ret
    2a14:	80 91 13 05 	lds	r24, 0x0513
    2a18:	81 30       	cpi	r24, 0x01	; 1
    2a1a:	29 f4       	brne	.+10     	; 0x2a26 <I2C_MSTR_stop+0x1e>
    2a1c:	85 e9       	ldi	r24, 0x95	; 149
    2a1e:	80 93 bc 00 	sts	0x00BC, r24
    2a22:	80 e0       	ldi	r24, 0x00	; 0
    2a24:	08 95       	ret
    2a26:	84 e9       	ldi	r24, 0x94	; 148
    2a28:	80 93 bc 00 	sts	0x00BC, r24
    2a2c:	80 e0       	ldi	r24, 0x00	; 0
    2a2e:	08 95       	ret

00002a30 <I2C_open>:
    2a30:	82 e1       	ldi	r24, 0x12	; 18
    2a32:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    2a36:	88 23       	and	r24, r24
    2a38:	b1 f4       	brne	.+44     	; 0x2a66 <I2C_open+0x36>
    2a3a:	10 92 10 05 	sts	0x0510, r1
    2a3e:	10 92 11 05 	sts	0x0511, r1
    2a42:	10 92 12 05 	sts	0x0512, r1
    2a46:	10 92 13 05 	sts	0x0513, r1
    2a4a:	10 92 14 05 	sts	0x0514, r1
    2a4e:	0e 94 99 1b 	call	0x3732	; 0x3732 <__I2C_init>
    2a52:	87 e1       	ldi	r24, 0x17	; 23
    2a54:	60 e0       	ldi	r22, 0x00	; 0
    2a56:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <I2C_set_BRG>
    2a5a:	0e 94 8f 1b 	call	0x371e	; 0x371e <I2C_enable>
    2a5e:	82 e1       	ldi	r24, 0x12	; 18
    2a60:	61 e0       	ldi	r22, 0x01	; 1
    2a62:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    2a66:	82 e1       	ldi	r24, 0x12	; 18
    2a68:	90 e0       	ldi	r25, 0x00	; 0
    2a6a:	08 95       	ret

00002a6c <I2C_set_BRG>:
    2a6c:	63 70       	andi	r22, 0x03	; 3
    2a6e:	60 93 b9 00 	sts	0x00B9, r22
    2a72:	80 93 b8 00 	sts	0x00B8, r24
    2a76:	81 e0       	ldi	r24, 0x01	; 1
    2a78:	80 93 10 05 	sts	0x0510, r24
    2a7c:	08 95       	ret

00002a7e <__ADC_init>:
    2a7e:	8f e1       	ldi	r24, 0x1F	; 31
    2a80:	80 93 7c 00 	sts	0x007C, r24
    2a84:	ea e7       	ldi	r30, 0x7A	; 122
    2a86:	f0 e0       	ldi	r31, 0x00	; 0
    2a88:	87 e0       	ldi	r24, 0x07	; 7
    2a8a:	80 83       	st	Z, r24
    2a8c:	80 81       	ld	r24, Z
    2a8e:	80 68       	ori	r24, 0x80	; 128
    2a90:	80 83       	st	Z, r24
    2a92:	08 95       	ret

00002a94 <CBOT_init>:
    2a94:	0e 94 a9 1a 	call	0x3552	; 0x3552 <SYS_init>
    2a98:	0e 94 7c 18 	call	0x30f8	; 0x30f8 <ATMEGA_open>
    2a9c:	0e 94 ac 17 	call	0x2f58	; 0x2f58 <ISR_open>
    2aa0:	0e 94 66 1b 	call	0x36cc	; 0x36cc <TMRSRVC_open>
    2aa4:	0e 94 e1 18 	call	0x31c2	; 0x31c2 <SPI_open>
    2aa8:	0e 94 be 13 	call	0x277c	; 0x277c <ATTINY_open>
    2aac:	78 94       	sei
    2aae:	08 95       	ret

00002ab0 <CBOT_ISR_init>:
    2ab0:	00 00       	nop
    2ab2:	08 95       	ret

00002ab4 <__vector_16>:
    2ab4:	1f 92       	push	r1
    2ab6:	0f 92       	push	r0
    2ab8:	0f b6       	in	r0, 0x3f	; 63
    2aba:	0f 92       	push	r0
    2abc:	11 24       	eor	r1, r1
    2abe:	2f 93       	push	r18
    2ac0:	3f 93       	push	r19
    2ac2:	4f 93       	push	r20
    2ac4:	5f 93       	push	r21
    2ac6:	6f 93       	push	r22
    2ac8:	7f 93       	push	r23
    2aca:	8f 93       	push	r24
    2acc:	9f 93       	push	r25
    2ace:	af 93       	push	r26
    2ad0:	bf 93       	push	r27
    2ad2:	ef 93       	push	r30
    2ad4:	ff 93       	push	r31
    2ad6:	e0 91 70 02 	lds	r30, 0x0270
    2ada:	f0 91 71 02 	lds	r31, 0x0271
    2ade:	30 97       	sbiw	r30, 0x00	; 0
    2ae0:	09 f0       	breq	.+2      	; 0x2ae4 <__vector_16+0x30>
    2ae2:	09 95       	icall
    2ae4:	ff 91       	pop	r31
    2ae6:	ef 91       	pop	r30
    2ae8:	bf 91       	pop	r27
    2aea:	af 91       	pop	r26
    2aec:	9f 91       	pop	r25
    2aee:	8f 91       	pop	r24
    2af0:	7f 91       	pop	r23
    2af2:	6f 91       	pop	r22
    2af4:	5f 91       	pop	r21
    2af6:	4f 91       	pop	r20
    2af8:	3f 91       	pop	r19
    2afa:	2f 91       	pop	r18
    2afc:	0f 90       	pop	r0
    2afe:	0f be       	out	0x3f, r0	; 63
    2b00:	0f 90       	pop	r0
    2b02:	1f 90       	pop	r1
    2b04:	18 95       	reti

00002b06 <__vector_17>:
    2b06:	1f 92       	push	r1
    2b08:	0f 92       	push	r0
    2b0a:	0f b6       	in	r0, 0x3f	; 63
    2b0c:	0f 92       	push	r0
    2b0e:	11 24       	eor	r1, r1
    2b10:	2f 93       	push	r18
    2b12:	3f 93       	push	r19
    2b14:	4f 93       	push	r20
    2b16:	5f 93       	push	r21
    2b18:	6f 93       	push	r22
    2b1a:	7f 93       	push	r23
    2b1c:	8f 93       	push	r24
    2b1e:	9f 93       	push	r25
    2b20:	af 93       	push	r26
    2b22:	bf 93       	push	r27
    2b24:	ef 93       	push	r30
    2b26:	ff 93       	push	r31
    2b28:	e0 91 72 02 	lds	r30, 0x0272
    2b2c:	f0 91 73 02 	lds	r31, 0x0273
    2b30:	30 97       	sbiw	r30, 0x00	; 0
    2b32:	09 f0       	breq	.+2      	; 0x2b36 <__vector_17+0x30>
    2b34:	09 95       	icall
    2b36:	ff 91       	pop	r31
    2b38:	ef 91       	pop	r30
    2b3a:	bf 91       	pop	r27
    2b3c:	af 91       	pop	r26
    2b3e:	9f 91       	pop	r25
    2b40:	8f 91       	pop	r24
    2b42:	7f 91       	pop	r23
    2b44:	6f 91       	pop	r22
    2b46:	5f 91       	pop	r21
    2b48:	4f 91       	pop	r20
    2b4a:	3f 91       	pop	r19
    2b4c:	2f 91       	pop	r18
    2b4e:	0f 90       	pop	r0
    2b50:	0f be       	out	0x3f, r0	; 63
    2b52:	0f 90       	pop	r0
    2b54:	1f 90       	pop	r1
    2b56:	18 95       	reti

00002b58 <__vector_18>:
    2b58:	1f 92       	push	r1
    2b5a:	0f 92       	push	r0
    2b5c:	0f b6       	in	r0, 0x3f	; 63
    2b5e:	0f 92       	push	r0
    2b60:	11 24       	eor	r1, r1
    2b62:	2f 93       	push	r18
    2b64:	3f 93       	push	r19
    2b66:	4f 93       	push	r20
    2b68:	5f 93       	push	r21
    2b6a:	6f 93       	push	r22
    2b6c:	7f 93       	push	r23
    2b6e:	8f 93       	push	r24
    2b70:	9f 93       	push	r25
    2b72:	af 93       	push	r26
    2b74:	bf 93       	push	r27
    2b76:	ef 93       	push	r30
    2b78:	ff 93       	push	r31
    2b7a:	e0 91 74 02 	lds	r30, 0x0274
    2b7e:	f0 91 75 02 	lds	r31, 0x0275
    2b82:	30 97       	sbiw	r30, 0x00	; 0
    2b84:	09 f0       	breq	.+2      	; 0x2b88 <__vector_18+0x30>
    2b86:	09 95       	icall
    2b88:	ff 91       	pop	r31
    2b8a:	ef 91       	pop	r30
    2b8c:	bf 91       	pop	r27
    2b8e:	af 91       	pop	r26
    2b90:	9f 91       	pop	r25
    2b92:	8f 91       	pop	r24
    2b94:	7f 91       	pop	r23
    2b96:	6f 91       	pop	r22
    2b98:	5f 91       	pop	r21
    2b9a:	4f 91       	pop	r20
    2b9c:	3f 91       	pop	r19
    2b9e:	2f 91       	pop	r18
    2ba0:	0f 90       	pop	r0
    2ba2:	0f be       	out	0x3f, r0	; 63
    2ba4:	0f 90       	pop	r0
    2ba6:	1f 90       	pop	r1
    2ba8:	18 95       	reti

00002baa <__vector_9>:
    2baa:	1f 92       	push	r1
    2bac:	0f 92       	push	r0
    2bae:	0f b6       	in	r0, 0x3f	; 63
    2bb0:	0f 92       	push	r0
    2bb2:	11 24       	eor	r1, r1
    2bb4:	2f 93       	push	r18
    2bb6:	3f 93       	push	r19
    2bb8:	4f 93       	push	r20
    2bba:	5f 93       	push	r21
    2bbc:	6f 93       	push	r22
    2bbe:	7f 93       	push	r23
    2bc0:	8f 93       	push	r24
    2bc2:	9f 93       	push	r25
    2bc4:	af 93       	push	r26
    2bc6:	bf 93       	push	r27
    2bc8:	ef 93       	push	r30
    2bca:	ff 93       	push	r31
    2bcc:	e0 91 62 02 	lds	r30, 0x0262
    2bd0:	f0 91 63 02 	lds	r31, 0x0263
    2bd4:	30 97       	sbiw	r30, 0x00	; 0
    2bd6:	09 f0       	breq	.+2      	; 0x2bda <__vector_9+0x30>
    2bd8:	09 95       	icall
    2bda:	ff 91       	pop	r31
    2bdc:	ef 91       	pop	r30
    2bde:	bf 91       	pop	r27
    2be0:	af 91       	pop	r26
    2be2:	9f 91       	pop	r25
    2be4:	8f 91       	pop	r24
    2be6:	7f 91       	pop	r23
    2be8:	6f 91       	pop	r22
    2bea:	5f 91       	pop	r21
    2bec:	4f 91       	pop	r20
    2bee:	3f 91       	pop	r19
    2bf0:	2f 91       	pop	r18
    2bf2:	0f 90       	pop	r0
    2bf4:	0f be       	out	0x3f, r0	; 63
    2bf6:	0f 90       	pop	r0
    2bf8:	1f 90       	pop	r1
    2bfa:	18 95       	reti

00002bfc <__vector_10>:
    2bfc:	1f 92       	push	r1
    2bfe:	0f 92       	push	r0
    2c00:	0f b6       	in	r0, 0x3f	; 63
    2c02:	0f 92       	push	r0
    2c04:	11 24       	eor	r1, r1
    2c06:	2f 93       	push	r18
    2c08:	3f 93       	push	r19
    2c0a:	4f 93       	push	r20
    2c0c:	5f 93       	push	r21
    2c0e:	6f 93       	push	r22
    2c10:	7f 93       	push	r23
    2c12:	8f 93       	push	r24
    2c14:	9f 93       	push	r25
    2c16:	af 93       	push	r26
    2c18:	bf 93       	push	r27
    2c1a:	ef 93       	push	r30
    2c1c:	ff 93       	push	r31
    2c1e:	e0 91 64 02 	lds	r30, 0x0264
    2c22:	f0 91 65 02 	lds	r31, 0x0265
    2c26:	30 97       	sbiw	r30, 0x00	; 0
    2c28:	09 f0       	breq	.+2      	; 0x2c2c <__vector_10+0x30>
    2c2a:	09 95       	icall
    2c2c:	ff 91       	pop	r31
    2c2e:	ef 91       	pop	r30
    2c30:	bf 91       	pop	r27
    2c32:	af 91       	pop	r26
    2c34:	9f 91       	pop	r25
    2c36:	8f 91       	pop	r24
    2c38:	7f 91       	pop	r23
    2c3a:	6f 91       	pop	r22
    2c3c:	5f 91       	pop	r21
    2c3e:	4f 91       	pop	r20
    2c40:	3f 91       	pop	r19
    2c42:	2f 91       	pop	r18
    2c44:	0f 90       	pop	r0
    2c46:	0f be       	out	0x3f, r0	; 63
    2c48:	0f 90       	pop	r0
    2c4a:	1f 90       	pop	r1
    2c4c:	18 95       	reti

00002c4e <__vector_11>:
    2c4e:	1f 92       	push	r1
    2c50:	0f 92       	push	r0
    2c52:	0f b6       	in	r0, 0x3f	; 63
    2c54:	0f 92       	push	r0
    2c56:	11 24       	eor	r1, r1
    2c58:	2f 93       	push	r18
    2c5a:	3f 93       	push	r19
    2c5c:	4f 93       	push	r20
    2c5e:	5f 93       	push	r21
    2c60:	6f 93       	push	r22
    2c62:	7f 93       	push	r23
    2c64:	8f 93       	push	r24
    2c66:	9f 93       	push	r25
    2c68:	af 93       	push	r26
    2c6a:	bf 93       	push	r27
    2c6c:	ef 93       	push	r30
    2c6e:	ff 93       	push	r31
    2c70:	e0 91 66 02 	lds	r30, 0x0266
    2c74:	f0 91 67 02 	lds	r31, 0x0267
    2c78:	30 97       	sbiw	r30, 0x00	; 0
    2c7a:	09 f0       	breq	.+2      	; 0x2c7e <__vector_11+0x30>
    2c7c:	09 95       	icall
    2c7e:	ff 91       	pop	r31
    2c80:	ef 91       	pop	r30
    2c82:	bf 91       	pop	r27
    2c84:	af 91       	pop	r26
    2c86:	9f 91       	pop	r25
    2c88:	8f 91       	pop	r24
    2c8a:	7f 91       	pop	r23
    2c8c:	6f 91       	pop	r22
    2c8e:	5f 91       	pop	r21
    2c90:	4f 91       	pop	r20
    2c92:	3f 91       	pop	r19
    2c94:	2f 91       	pop	r18
    2c96:	0f 90       	pop	r0
    2c98:	0f be       	out	0x3f, r0	; 63
    2c9a:	0f 90       	pop	r0
    2c9c:	1f 90       	pop	r1
    2c9e:	18 95       	reti

00002ca0 <__vector_13>:
    2ca0:	1f 92       	push	r1
    2ca2:	0f 92       	push	r0
    2ca4:	0f b6       	in	r0, 0x3f	; 63
    2ca6:	0f 92       	push	r0
    2ca8:	11 24       	eor	r1, r1
    2caa:	2f 93       	push	r18
    2cac:	3f 93       	push	r19
    2cae:	4f 93       	push	r20
    2cb0:	5f 93       	push	r21
    2cb2:	6f 93       	push	r22
    2cb4:	7f 93       	push	r23
    2cb6:	8f 93       	push	r24
    2cb8:	9f 93       	push	r25
    2cba:	af 93       	push	r26
    2cbc:	bf 93       	push	r27
    2cbe:	ef 93       	push	r30
    2cc0:	ff 93       	push	r31
    2cc2:	e0 91 6a 02 	lds	r30, 0x026A
    2cc6:	f0 91 6b 02 	lds	r31, 0x026B
    2cca:	30 97       	sbiw	r30, 0x00	; 0
    2ccc:	09 f0       	breq	.+2      	; 0x2cd0 <__vector_13+0x30>
    2cce:	09 95       	icall
    2cd0:	ff 91       	pop	r31
    2cd2:	ef 91       	pop	r30
    2cd4:	bf 91       	pop	r27
    2cd6:	af 91       	pop	r26
    2cd8:	9f 91       	pop	r25
    2cda:	8f 91       	pop	r24
    2cdc:	7f 91       	pop	r23
    2cde:	6f 91       	pop	r22
    2ce0:	5f 91       	pop	r21
    2ce2:	4f 91       	pop	r20
    2ce4:	3f 91       	pop	r19
    2ce6:	2f 91       	pop	r18
    2ce8:	0f 90       	pop	r0
    2cea:	0f be       	out	0x3f, r0	; 63
    2cec:	0f 90       	pop	r0
    2cee:	1f 90       	pop	r1
    2cf0:	18 95       	reti

00002cf2 <__vector_14>:
    2cf2:	1f 92       	push	r1
    2cf4:	0f 92       	push	r0
    2cf6:	0f b6       	in	r0, 0x3f	; 63
    2cf8:	0f 92       	push	r0
    2cfa:	11 24       	eor	r1, r1
    2cfc:	2f 93       	push	r18
    2cfe:	3f 93       	push	r19
    2d00:	4f 93       	push	r20
    2d02:	5f 93       	push	r21
    2d04:	6f 93       	push	r22
    2d06:	7f 93       	push	r23
    2d08:	8f 93       	push	r24
    2d0a:	9f 93       	push	r25
    2d0c:	af 93       	push	r26
    2d0e:	bf 93       	push	r27
    2d10:	ef 93       	push	r30
    2d12:	ff 93       	push	r31
    2d14:	e0 91 6c 02 	lds	r30, 0x026C
    2d18:	f0 91 6d 02 	lds	r31, 0x026D
    2d1c:	30 97       	sbiw	r30, 0x00	; 0
    2d1e:	09 f0       	breq	.+2      	; 0x2d22 <__vector_14+0x30>
    2d20:	09 95       	icall
    2d22:	ff 91       	pop	r31
    2d24:	ef 91       	pop	r30
    2d26:	bf 91       	pop	r27
    2d28:	af 91       	pop	r26
    2d2a:	9f 91       	pop	r25
    2d2c:	8f 91       	pop	r24
    2d2e:	7f 91       	pop	r23
    2d30:	6f 91       	pop	r22
    2d32:	5f 91       	pop	r21
    2d34:	4f 91       	pop	r20
    2d36:	3f 91       	pop	r19
    2d38:	2f 91       	pop	r18
    2d3a:	0f 90       	pop	r0
    2d3c:	0f be       	out	0x3f, r0	; 63
    2d3e:	0f 90       	pop	r0
    2d40:	1f 90       	pop	r1
    2d42:	18 95       	reti

00002d44 <__vector_12>:
    2d44:	1f 92       	push	r1
    2d46:	0f 92       	push	r0
    2d48:	0f b6       	in	r0, 0x3f	; 63
    2d4a:	0f 92       	push	r0
    2d4c:	11 24       	eor	r1, r1
    2d4e:	2f 93       	push	r18
    2d50:	3f 93       	push	r19
    2d52:	4f 93       	push	r20
    2d54:	5f 93       	push	r21
    2d56:	6f 93       	push	r22
    2d58:	7f 93       	push	r23
    2d5a:	8f 93       	push	r24
    2d5c:	9f 93       	push	r25
    2d5e:	af 93       	push	r26
    2d60:	bf 93       	push	r27
    2d62:	ef 93       	push	r30
    2d64:	ff 93       	push	r31
    2d66:	e0 91 68 02 	lds	r30, 0x0268
    2d6a:	f0 91 69 02 	lds	r31, 0x0269
    2d6e:	30 97       	sbiw	r30, 0x00	; 0
    2d70:	09 f0       	breq	.+2      	; 0x2d74 <__vector_12+0x30>
    2d72:	09 95       	icall
    2d74:	ff 91       	pop	r31
    2d76:	ef 91       	pop	r30
    2d78:	bf 91       	pop	r27
    2d7a:	af 91       	pop	r26
    2d7c:	9f 91       	pop	r25
    2d7e:	8f 91       	pop	r24
    2d80:	7f 91       	pop	r23
    2d82:	6f 91       	pop	r22
    2d84:	5f 91       	pop	r21
    2d86:	4f 91       	pop	r20
    2d88:	3f 91       	pop	r19
    2d8a:	2f 91       	pop	r18
    2d8c:	0f 90       	pop	r0
    2d8e:	0f be       	out	0x3f, r0	; 63
    2d90:	0f 90       	pop	r0
    2d92:	1f 90       	pop	r1
    2d94:	18 95       	reti

00002d96 <__vector_15>:
    2d96:	1f 92       	push	r1
    2d98:	0f 92       	push	r0
    2d9a:	0f b6       	in	r0, 0x3f	; 63
    2d9c:	0f 92       	push	r0
    2d9e:	11 24       	eor	r1, r1
    2da0:	2f 93       	push	r18
    2da2:	3f 93       	push	r19
    2da4:	4f 93       	push	r20
    2da6:	5f 93       	push	r21
    2da8:	6f 93       	push	r22
    2daa:	7f 93       	push	r23
    2dac:	8f 93       	push	r24
    2dae:	9f 93       	push	r25
    2db0:	af 93       	push	r26
    2db2:	bf 93       	push	r27
    2db4:	ef 93       	push	r30
    2db6:	ff 93       	push	r31
    2db8:	e0 91 6e 02 	lds	r30, 0x026E
    2dbc:	f0 91 6f 02 	lds	r31, 0x026F
    2dc0:	30 97       	sbiw	r30, 0x00	; 0
    2dc2:	09 f0       	breq	.+2      	; 0x2dc6 <__vector_15+0x30>
    2dc4:	09 95       	icall
    2dc6:	ff 91       	pop	r31
    2dc8:	ef 91       	pop	r30
    2dca:	bf 91       	pop	r27
    2dcc:	af 91       	pop	r26
    2dce:	9f 91       	pop	r25
    2dd0:	8f 91       	pop	r24
    2dd2:	7f 91       	pop	r23
    2dd4:	6f 91       	pop	r22
    2dd6:	5f 91       	pop	r21
    2dd8:	4f 91       	pop	r20
    2dda:	3f 91       	pop	r19
    2ddc:	2f 91       	pop	r18
    2dde:	0f 90       	pop	r0
    2de0:	0f be       	out	0x3f, r0	; 63
    2de2:	0f 90       	pop	r0
    2de4:	1f 90       	pop	r1
    2de6:	18 95       	reti

00002de8 <__vector_4>:
    2de8:	1f 92       	push	r1
    2dea:	0f 92       	push	r0
    2dec:	0f b6       	in	r0, 0x3f	; 63
    2dee:	0f 92       	push	r0
    2df0:	11 24       	eor	r1, r1
    2df2:	2f 93       	push	r18
    2df4:	3f 93       	push	r19
    2df6:	4f 93       	push	r20
    2df8:	5f 93       	push	r21
    2dfa:	6f 93       	push	r22
    2dfc:	7f 93       	push	r23
    2dfe:	8f 93       	push	r24
    2e00:	9f 93       	push	r25
    2e02:	af 93       	push	r26
    2e04:	bf 93       	push	r27
    2e06:	ef 93       	push	r30
    2e08:	ff 93       	push	r31
    2e0a:	e0 91 58 02 	lds	r30, 0x0258
    2e0e:	f0 91 59 02 	lds	r31, 0x0259
    2e12:	30 97       	sbiw	r30, 0x00	; 0
    2e14:	09 f0       	breq	.+2      	; 0x2e18 <__vector_4+0x30>
    2e16:	09 95       	icall
    2e18:	ff 91       	pop	r31
    2e1a:	ef 91       	pop	r30
    2e1c:	bf 91       	pop	r27
    2e1e:	af 91       	pop	r26
    2e20:	9f 91       	pop	r25
    2e22:	8f 91       	pop	r24
    2e24:	7f 91       	pop	r23
    2e26:	6f 91       	pop	r22
    2e28:	5f 91       	pop	r21
    2e2a:	4f 91       	pop	r20
    2e2c:	3f 91       	pop	r19
    2e2e:	2f 91       	pop	r18
    2e30:	0f 90       	pop	r0
    2e32:	0f be       	out	0x3f, r0	; 63
    2e34:	0f 90       	pop	r0
    2e36:	1f 90       	pop	r1
    2e38:	18 95       	reti

00002e3a <__vector_5>:
    2e3a:	1f 92       	push	r1
    2e3c:	0f 92       	push	r0
    2e3e:	0f b6       	in	r0, 0x3f	; 63
    2e40:	0f 92       	push	r0
    2e42:	11 24       	eor	r1, r1
    2e44:	2f 93       	push	r18
    2e46:	3f 93       	push	r19
    2e48:	4f 93       	push	r20
    2e4a:	5f 93       	push	r21
    2e4c:	6f 93       	push	r22
    2e4e:	7f 93       	push	r23
    2e50:	8f 93       	push	r24
    2e52:	9f 93       	push	r25
    2e54:	af 93       	push	r26
    2e56:	bf 93       	push	r27
    2e58:	ef 93       	push	r30
    2e5a:	ff 93       	push	r31
    2e5c:	e0 91 5a 02 	lds	r30, 0x025A
    2e60:	f0 91 5b 02 	lds	r31, 0x025B
    2e64:	30 97       	sbiw	r30, 0x00	; 0
    2e66:	09 f0       	breq	.+2      	; 0x2e6a <__vector_5+0x30>
    2e68:	09 95       	icall
    2e6a:	ff 91       	pop	r31
    2e6c:	ef 91       	pop	r30
    2e6e:	bf 91       	pop	r27
    2e70:	af 91       	pop	r26
    2e72:	9f 91       	pop	r25
    2e74:	8f 91       	pop	r24
    2e76:	7f 91       	pop	r23
    2e78:	6f 91       	pop	r22
    2e7a:	5f 91       	pop	r21
    2e7c:	4f 91       	pop	r20
    2e7e:	3f 91       	pop	r19
    2e80:	2f 91       	pop	r18
    2e82:	0f 90       	pop	r0
    2e84:	0f be       	out	0x3f, r0	; 63
    2e86:	0f 90       	pop	r0
    2e88:	1f 90       	pop	r1
    2e8a:	18 95       	reti

00002e8c <__vector_6>:
    2e8c:	1f 92       	push	r1
    2e8e:	0f 92       	push	r0
    2e90:	0f b6       	in	r0, 0x3f	; 63
    2e92:	0f 92       	push	r0
    2e94:	11 24       	eor	r1, r1
    2e96:	2f 93       	push	r18
    2e98:	3f 93       	push	r19
    2e9a:	4f 93       	push	r20
    2e9c:	5f 93       	push	r21
    2e9e:	6f 93       	push	r22
    2ea0:	7f 93       	push	r23
    2ea2:	8f 93       	push	r24
    2ea4:	9f 93       	push	r25
    2ea6:	af 93       	push	r26
    2ea8:	bf 93       	push	r27
    2eaa:	ef 93       	push	r30
    2eac:	ff 93       	push	r31
    2eae:	e0 91 5c 02 	lds	r30, 0x025C
    2eb2:	f0 91 5d 02 	lds	r31, 0x025D
    2eb6:	30 97       	sbiw	r30, 0x00	; 0
    2eb8:	09 f0       	breq	.+2      	; 0x2ebc <__vector_6+0x30>
    2eba:	09 95       	icall
    2ebc:	ff 91       	pop	r31
    2ebe:	ef 91       	pop	r30
    2ec0:	bf 91       	pop	r27
    2ec2:	af 91       	pop	r26
    2ec4:	9f 91       	pop	r25
    2ec6:	8f 91       	pop	r24
    2ec8:	7f 91       	pop	r23
    2eca:	6f 91       	pop	r22
    2ecc:	5f 91       	pop	r21
    2ece:	4f 91       	pop	r20
    2ed0:	3f 91       	pop	r19
    2ed2:	2f 91       	pop	r18
    2ed4:	0f 90       	pop	r0
    2ed6:	0f be       	out	0x3f, r0	; 63
    2ed8:	0f 90       	pop	r0
    2eda:	1f 90       	pop	r1
    2edc:	18 95       	reti

00002ede <__vector_7>:
    2ede:	1f 92       	push	r1
    2ee0:	0f 92       	push	r0
    2ee2:	0f b6       	in	r0, 0x3f	; 63
    2ee4:	0f 92       	push	r0
    2ee6:	11 24       	eor	r1, r1
    2ee8:	2f 93       	push	r18
    2eea:	3f 93       	push	r19
    2eec:	4f 93       	push	r20
    2eee:	5f 93       	push	r21
    2ef0:	6f 93       	push	r22
    2ef2:	7f 93       	push	r23
    2ef4:	8f 93       	push	r24
    2ef6:	9f 93       	push	r25
    2ef8:	af 93       	push	r26
    2efa:	bf 93       	push	r27
    2efc:	ef 93       	push	r30
    2efe:	ff 93       	push	r31
    2f00:	e0 91 5e 02 	lds	r30, 0x025E
    2f04:	f0 91 5f 02 	lds	r31, 0x025F
    2f08:	30 97       	sbiw	r30, 0x00	; 0
    2f0a:	09 f0       	breq	.+2      	; 0x2f0e <__vector_7+0x30>
    2f0c:	09 95       	icall
    2f0e:	ff 91       	pop	r31
    2f10:	ef 91       	pop	r30
    2f12:	bf 91       	pop	r27
    2f14:	af 91       	pop	r26
    2f16:	9f 91       	pop	r25
    2f18:	8f 91       	pop	r24
    2f1a:	7f 91       	pop	r23
    2f1c:	6f 91       	pop	r22
    2f1e:	5f 91       	pop	r21
    2f20:	4f 91       	pop	r20
    2f22:	3f 91       	pop	r19
    2f24:	2f 91       	pop	r18
    2f26:	0f 90       	pop	r0
    2f28:	0f be       	out	0x3f, r0	; 63
    2f2a:	0f 90       	pop	r0
    2f2c:	1f 90       	pop	r1
    2f2e:	18 95       	reti

00002f30 <ISR_attach>:
    2f30:	e8 2f       	mov	r30, r24
    2f32:	80 32       	cpi	r24, 0x20	; 32
    2f34:	68 f4       	brcc	.+26     	; 0x2f50 <ISR_attach+0x20>
    2f36:	80 51       	subi	r24, 0x10	; 16
    2f38:	83 30       	cpi	r24, 0x03	; 3
    2f3a:	50 f0       	brcs	.+20     	; 0x2f50 <ISR_attach+0x20>
    2f3c:	f0 e0       	ldi	r31, 0x00	; 0
    2f3e:	ee 0f       	add	r30, r30
    2f40:	ff 1f       	adc	r31, r31
    2f42:	e0 5b       	subi	r30, 0xB0	; 176
    2f44:	fd 4f       	sbci	r31, 0xFD	; 253
    2f46:	20 81       	ld	r18, Z
    2f48:	31 81       	ldd	r19, Z+1	; 0x01
    2f4a:	71 83       	std	Z+1, r23	; 0x01
    2f4c:	60 83       	st	Z, r22
    2f4e:	02 c0       	rjmp	.+4      	; 0x2f54 <ISR_attach+0x24>
    2f50:	20 e0       	ldi	r18, 0x00	; 0
    2f52:	30 e0       	ldi	r19, 0x00	; 0
    2f54:	c9 01       	movw	r24, r18
    2f56:	08 95       	ret

00002f58 <ISR_open>:
    2f58:	80 e1       	ldi	r24, 0x10	; 16
    2f5a:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    2f5e:	88 23       	and	r24, r24
    2f60:	61 f4       	brne	.+24     	; 0x2f7a <ISR_open+0x22>
    2f62:	e0 e5       	ldi	r30, 0x50	; 80
    2f64:	f2 e0       	ldi	r31, 0x02	; 2
    2f66:	11 92       	st	Z+, r1
    2f68:	11 92       	st	Z+, r1
    2f6a:	82 e0       	ldi	r24, 0x02	; 2
    2f6c:	e0 39       	cpi	r30, 0x90	; 144
    2f6e:	f8 07       	cpc	r31, r24
    2f70:	d1 f7       	brne	.-12     	; 0x2f66 <ISR_open+0xe>
    2f72:	80 e1       	ldi	r24, 0x10	; 16
    2f74:	61 e0       	ldi	r22, 0x01	; 1
    2f76:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    2f7a:	80 e1       	ldi	r24, 0x10	; 16
    2f7c:	91 e0       	ldi	r25, 0x01	; 1
    2f7e:	08 95       	ret

00002f80 <__LCD_init>:
    2f80:	23 9a       	sbi	0x04, 3	; 4
    2f82:	08 95       	ret

00002f84 <__LCD_putchar>:
    2f84:	ff 92       	push	r15
    2f86:	0f 93       	push	r16
    2f88:	1f 93       	push	r17
    2f8a:	cf 93       	push	r28
    2f8c:	df 93       	push	r29
    2f8e:	f8 2e       	mov	r15, r24
    2f90:	8a e0       	ldi	r24, 0x0A	; 10
    2f92:	f8 16       	cp	r15, r24
    2f94:	b1 f0       	breq	.+44     	; 0x2fc2 <__LCD_putchar+0x3e>
    2f96:	8f 15       	cp	r24, r15
    2f98:	48 f0       	brcs	.+18     	; 0x2fac <__LCD_putchar+0x28>
    2f9a:	e8 e0       	ldi	r30, 0x08	; 8
    2f9c:	fe 16       	cp	r15, r30
    2f9e:	b9 f1       	breq	.+110    	; 0x300e <__LCD_putchar+0x8a>
    2fa0:	ef 15       	cp	r30, r15
    2fa2:	38 f1       	brcs	.+78     	; 0x2ff2 <__LCD_putchar+0x6e>
    2fa4:	f7 e0       	ldi	r31, 0x07	; 7
    2fa6:	ff 16       	cp	r15, r31
    2fa8:	51 f4       	brne	.+20     	; 0x2fbe <__LCD_putchar+0x3a>
    2faa:	3b c0       	rjmp	.+118    	; 0x3022 <__LCD_putchar+0x9e>
    2fac:	8d e0       	ldi	r24, 0x0D	; 13
    2fae:	f8 16       	cp	r15, r24
    2fb0:	59 f0       	breq	.+22     	; 0x2fc8 <__LCD_putchar+0x44>
    2fb2:	eb e1       	ldi	r30, 0x1B	; 27
    2fb4:	fe 16       	cp	r15, r30
    2fb6:	89 f0       	breq	.+34     	; 0x2fda <__LCD_putchar+0x56>
    2fb8:	fc e0       	ldi	r31, 0x0C	; 12
    2fba:	ff 16       	cp	r15, r31
    2fbc:	41 f0       	breq	.+16     	; 0x2fce <__LCD_putchar+0x4a>
    2fbe:	01 e0       	ldi	r16, 0x01	; 1
    2fc0:	41 c0       	rjmp	.+130    	; 0x3044 <__LCD_putchar+0xc0>
    2fc2:	10 92 e9 04 	sts	0x04E9, r1
    2fc6:	03 c0       	rjmp	.+6      	; 0x2fce <__LCD_putchar+0x4a>
    2fc8:	10 92 e9 04 	sts	0x04E9, r1
    2fcc:	3a c0       	rjmp	.+116    	; 0x3042 <__LCD_putchar+0xbe>
    2fce:	80 91 ea 04 	lds	r24, 0x04EA
    2fd2:	81 50       	subi	r24, 0x01	; 1
    2fd4:	80 93 ea 04 	sts	0x04EA, r24
    2fd8:	34 c0       	rjmp	.+104    	; 0x3042 <__LCD_putchar+0xbe>
    2fda:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <LCD_clear>
    2fde:	14 c0       	rjmp	.+40     	; 0x3008 <__LCD_putchar+0x84>
    2fe0:	80 e0       	ldi	r24, 0x00	; 0
    2fe2:	61 e0       	ldi	r22, 0x01	; 1
    2fe4:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    2fe8:	80 91 e9 04 	lds	r24, 0x04E9
    2fec:	8f 5f       	subi	r24, 0xFF	; 255
    2fee:	80 93 e9 04 	sts	0x04E9, r24
    2ff2:	80 91 e9 04 	lds	r24, 0x04E9
    2ff6:	87 ff       	sbrs	r24, 7
    2ff8:	f3 cf       	rjmp	.-26     	; 0x2fe0 <__LCD_putchar+0x5c>
    2ffa:	10 92 e9 04 	sts	0x04E9, r1
    2ffe:	80 91 ea 04 	lds	r24, 0x04EA
    3002:	81 50       	subi	r24, 0x01	; 1
    3004:	80 93 ea 04 	sts	0x04EA, r24
    3008:	00 e0       	ldi	r16, 0x00	; 0
    300a:	11 e0       	ldi	r17, 0x01	; 1
    300c:	1c c0       	rjmp	.+56     	; 0x3046 <__LCD_putchar+0xc2>
    300e:	80 91 e9 04 	lds	r24, 0x04E9
    3012:	88 23       	and	r24, r24
    3014:	b1 f0       	breq	.+44     	; 0x3042 <__LCD_putchar+0xbe>
    3016:	80 91 e9 04 	lds	r24, 0x04E9
    301a:	86 50       	subi	r24, 0x06	; 6
    301c:	80 93 e9 04 	sts	0x04E9, r24
    3020:	10 c0       	rjmp	.+32     	; 0x3042 <__LCD_putchar+0xbe>
    3022:	81 e0       	ldi	r24, 0x01	; 1
    3024:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <SPKR_open>
    3028:	64 ef       	ldi	r22, 0xF4	; 244
    302a:	71 e0       	ldi	r23, 0x01	; 1
    302c:	80 e0       	ldi	r24, 0x00	; 0
    302e:	90 e0       	ldi	r25, 0x00	; 0
    3030:	4d e7       	ldi	r20, 0x7D	; 125
    3032:	50 e0       	ldi	r21, 0x00	; 0
    3034:	24 e6       	ldi	r18, 0x64	; 100
    3036:	30 e0       	ldi	r19, 0x00	; 0
    3038:	0e 94 ca 19 	call	0x3394	; 0x3394 <SPKR_play_beep>
    303c:	81 e0       	ldi	r24, 0x01	; 1
    303e:	0e 94 96 19 	call	0x332c	; 0x332c <SPKR_close>
    3042:	00 e0       	ldi	r16, 0x00	; 0
    3044:	10 e0       	ldi	r17, 0x00	; 0
    3046:	80 91 ea 04 	lds	r24, 0x04EA
    304a:	60 91 e9 04 	lds	r22, 0x04E9
    304e:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <LCD_set_PGC_addr>
    3052:	00 23       	and	r16, r16
    3054:	51 f1       	breq	.+84     	; 0x30aa <__LCD_putchar+0x126>
    3056:	85 e0       	ldi	r24, 0x05	; 5
    3058:	f8 9e       	mul	r15, r24
    305a:	c0 01       	movw	r24, r0
    305c:	11 24       	eor	r1, r1
    305e:	ec 01       	movw	r28, r24
    3060:	c3 55       	subi	r28, 0x53	; 83
    3062:	df 4f       	sbci	r29, 0xFF	; 255
    3064:	8c 01       	movw	r16, r24
    3066:	0e 54       	subi	r16, 0x4E	; 78
    3068:	1f 4f       	sbci	r17, 0xFF	; 255
    306a:	fe 01       	movw	r30, r28
    306c:	84 91       	lpm	r24, Z+
    306e:	61 e0       	ldi	r22, 0x01	; 1
    3070:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    3074:	21 96       	adiw	r28, 0x01	; 1
    3076:	c0 17       	cp	r28, r16
    3078:	d1 07       	cpc	r29, r17
    307a:	b9 f7       	brne	.-18     	; 0x306a <__LCD_putchar+0xe6>
    307c:	80 e0       	ldi	r24, 0x00	; 0
    307e:	61 e0       	ldi	r22, 0x01	; 1
    3080:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_write>
    3084:	80 91 e9 04 	lds	r24, 0x04E9
    3088:	8a 5f       	subi	r24, 0xFA	; 250
    308a:	80 93 e9 04 	sts	0x04E9, r24
    308e:	80 91 e9 04 	lds	r24, 0x04E9
    3092:	90 e0       	ldi	r25, 0x00	; 0
    3094:	8c 37       	cpi	r24, 0x7C	; 124
    3096:	91 05       	cpc	r25, r1
    3098:	3c f0       	brlt	.+14     	; 0x30a8 <__LCD_putchar+0x124>
    309a:	10 92 e9 04 	sts	0x04E9, r1
    309e:	80 91 ea 04 	lds	r24, 0x04EA
    30a2:	81 50       	subi	r24, 0x01	; 1
    30a4:	80 93 ea 04 	sts	0x04EA, r24
    30a8:	11 e0       	ldi	r17, 0x01	; 1
    30aa:	80 91 ea 04 	lds	r24, 0x04EA
    30ae:	83 70       	andi	r24, 0x03	; 3
    30b0:	80 93 ea 04 	sts	0x04EA, r24
    30b4:	11 30       	cpi	r17, 0x01	; 1
    30b6:	59 f4       	brne	.+22     	; 0x30ce <__LCD_putchar+0x14a>
    30b8:	80 91 eb 04 	lds	r24, 0x04EB
    30bc:	81 30       	cpi	r24, 0x01	; 1
    30be:	39 f4       	brne	.+14     	; 0x30ce <__LCD_putchar+0x14a>
    30c0:	e0 91 ec 04 	lds	r30, 0x04EC
    30c4:	f0 91 ed 04 	lds	r31, 0x04ED
    30c8:	30 97       	sbiw	r30, 0x00	; 0
    30ca:	09 f0       	breq	.+2      	; 0x30ce <__LCD_putchar+0x14a>
    30cc:	09 95       	icall
    30ce:	80 e0       	ldi	r24, 0x00	; 0
    30d0:	90 e0       	ldi	r25, 0x00	; 0
    30d2:	df 91       	pop	r29
    30d4:	cf 91       	pop	r28
    30d6:	1f 91       	pop	r17
    30d8:	0f 91       	pop	r16
    30da:	ff 90       	pop	r15
    30dc:	08 95       	ret

000030de <__LED_clr_pattern>:
    30de:	85 fd       	sbrc	r24, 5
    30e0:	5d 98       	cbi	0x0b, 5	; 11
    30e2:	86 fd       	sbrc	r24, 6
    30e4:	5e 98       	cbi	0x0b, 6	; 11
    30e6:	08 95       	ret

000030e8 <__LED_init>:
    30e8:	55 9a       	sbi	0x0a, 5	; 10
    30ea:	56 9a       	sbi	0x0a, 6	; 10
    30ec:	08 95       	ret

000030ee <__LED_set_pattern>:
    30ee:	85 fd       	sbrc	r24, 5
    30f0:	5d 9a       	sbi	0x0b, 5	; 11
    30f2:	86 fd       	sbrc	r24, 6
    30f4:	5e 9a       	sbi	0x0b, 6	; 11
    30f6:	08 95       	ret

000030f8 <ATMEGA_open>:
    30f8:	80 e0       	ldi	r24, 0x00	; 0
    30fa:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    30fe:	88 23       	and	r24, r24
    3100:	51 f4       	brne	.+20     	; 0x3116 <ATMEGA_open+0x1e>
    3102:	f8 94       	cli
    3104:	0e 94 ad 1b 	call	0x375a	; 0x375a <__ATMEGA_init>
    3108:	81 e0       	ldi	r24, 0x01	; 1
    310a:	0e 94 8e 18 	call	0x311c	; 0x311c <ATMEGA_set_clk_mode>
    310e:	80 e0       	ldi	r24, 0x00	; 0
    3110:	61 e0       	ldi	r22, 0x01	; 1
    3112:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    3116:	80 e0       	ldi	r24, 0x00	; 0
    3118:	91 e0       	ldi	r25, 0x01	; 1
    311a:	08 95       	ret

0000311c <ATMEGA_set_clk_mode>:
    311c:	81 30       	cpi	r24, 0x01	; 1
    311e:	49 f0       	breq	.+18     	; 0x3132 <ATMEGA_set_clk_mode+0x16>
    3120:	f8 94       	cli
    3122:	81 30       	cpi	r24, 0x01	; 1
    3124:	20 f1       	brcs	.+72     	; 0x316e <ATMEGA_set_clk_mode+0x52>
    3126:	82 30       	cpi	r24, 0x02	; 2
    3128:	b1 f0       	breq	.+44     	; 0x3156 <ATMEGA_set_clk_mode+0x3a>
    312a:	83 30       	cpi	r24, 0x03	; 3
    312c:	09 f0       	breq	.+2      	; 0x3130 <ATMEGA_set_clk_mode+0x14>
    312e:	45 c0       	rjmp	.+138    	; 0x31ba <ATMEGA_set_clk_mode+0x9e>
    3130:	17 c0       	rjmp	.+46     	; 0x3160 <ATMEGA_set_clk_mode+0x44>
    3132:	2c 9a       	sbi	0x05, 4	; 5
    3134:	80 e8       	ldi	r24, 0x80	; 128
    3136:	80 93 61 00 	sts	0x0061, r24
    313a:	10 92 61 00 	sts	0x0061, r1
    313e:	80 e0       	ldi	r24, 0x00	; 0
    3140:	90 e0       	ldi	r25, 0x00	; 0
    3142:	00 00       	nop
    3144:	01 96       	adiw	r24, 0x01	; 1
    3146:	88 32       	cpi	r24, 0x28	; 40
    3148:	91 05       	cpc	r25, r1
    314a:	d9 f7       	brne	.-10     	; 0x3142 <ATMEGA_set_clk_mode+0x26>
    314c:	10 92 68 00 	sts	0x0068, r1
    3150:	10 92 6b 00 	sts	0x006B, r1
    3154:	08 95       	ret
    3156:	80 e8       	ldi	r24, 0x80	; 128
    3158:	80 93 61 00 	sts	0x0061, r24
    315c:	83 e0       	ldi	r24, 0x03	; 3
    315e:	04 c0       	rjmp	.+8      	; 0x3168 <ATMEGA_set_clk_mode+0x4c>
    3160:	80 e8       	ldi	r24, 0x80	; 128
    3162:	80 93 61 00 	sts	0x0061, r24
    3166:	88 e0       	ldi	r24, 0x08	; 8
    3168:	80 93 61 00 	sts	0x0061, r24
    316c:	28 c0       	rjmp	.+80     	; 0x31be <ATMEGA_set_clk_mode+0xa2>
    316e:	80 e0       	ldi	r24, 0x00	; 0
    3170:	90 e0       	ldi	r25, 0x00	; 0
    3172:	00 00       	nop
    3174:	01 96       	adiw	r24, 0x01	; 1
    3176:	2d e6       	ldi	r18, 0x6D	; 109
    3178:	80 36       	cpi	r24, 0x60	; 96
    317a:	92 07       	cpc	r25, r18
    317c:	d1 f7       	brne	.-12     	; 0x3172 <ATMEGA_set_clk_mode+0x56>
    317e:	2c 98       	cbi	0x05, 4	; 5
    3180:	80 e0       	ldi	r24, 0x00	; 0
    3182:	90 e0       	ldi	r25, 0x00	; 0
    3184:	00 00       	nop
    3186:	01 96       	adiw	r24, 0x01	; 1
    3188:	2d e6       	ldi	r18, 0x6D	; 109
    318a:	80 36       	cpi	r24, 0x60	; 96
    318c:	92 07       	cpc	r25, r18
    318e:	d1 f7       	brne	.-12     	; 0x3184 <ATMEGA_set_clk_mode+0x68>
    3190:	10 92 7a 00 	sts	0x007A, r1
    3194:	8f ef       	ldi	r24, 0xFF	; 255
    3196:	80 93 64 00 	sts	0x0064, r24
    319a:	80 91 68 00 	lds	r24, 0x0068
    319e:	81 60       	ori	r24, 0x01	; 1
    31a0:	80 93 68 00 	sts	0x0068, r24
    31a4:	80 91 6b 00 	lds	r24, 0x006B
    31a8:	84 60       	ori	r24, 0x04	; 4
    31aa:	80 93 6b 00 	sts	0x006B, r24
    31ae:	78 94       	sei
    31b0:	83 b7       	in	r24, 0x33	; 51
    31b2:	81 60       	ori	r24, 0x01	; 1
    31b4:	83 bf       	out	0x33, r24	; 51
    31b6:	88 95       	sleep
    31b8:	08 95       	ret
    31ba:	82 30       	cpi	r24, 0x02	; 2
    31bc:	08 f0       	brcs	.+2      	; 0x31c0 <ATMEGA_set_clk_mode+0xa4>
    31be:	78 94       	sei
    31c0:	08 95       	ret

000031c2 <SPI_open>:
    31c2:	0f 93       	push	r16
    31c4:	1f 93       	push	r17
    31c6:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <__SPI_init>
    31ca:	80 e0       	ldi	r24, 0x00	; 0
    31cc:	68 ec       	ldi	r22, 0xC8	; 200
    31ce:	7b e1       	ldi	r23, 0x1B	; 27
    31d0:	0e 94 1a 19 	call	0x3234	; 0x3234 <SPI_set_config_func>
    31d4:	81 e0       	ldi	r24, 0x01	; 1
    31d6:	60 ec       	ldi	r22, 0xC0	; 192
    31d8:	7b e1       	ldi	r23, 0x1B	; 27
    31da:	0e 94 1a 19 	call	0x3234	; 0x3234 <SPI_set_config_func>
    31de:	82 e0       	ldi	r24, 0x02	; 2
    31e0:	68 eb       	ldi	r22, 0xB8	; 184
    31e2:	7b e1       	ldi	r23, 0x1B	; 27
    31e4:	0e 94 1a 19 	call	0x3234	; 0x3234 <SPI_set_config_func>
    31e8:	86 e0       	ldi	r24, 0x06	; 6
    31ea:	60 ed       	ldi	r22, 0xD0	; 208
    31ec:	7b e1       	ldi	r23, 0x1B	; 27
    31ee:	0e 94 1a 19 	call	0x3234	; 0x3234 <SPI_set_config_func>
    31f2:	00 eb       	ldi	r16, 0xB0	; 176
    31f4:	1b e1       	ldi	r17, 0x1B	; 27
    31f6:	83 e0       	ldi	r24, 0x03	; 3
    31f8:	b8 01       	movw	r22, r16
    31fa:	0e 94 1a 19 	call	0x3234	; 0x3234 <SPI_set_config_func>
    31fe:	84 e0       	ldi	r24, 0x04	; 4
    3200:	b8 01       	movw	r22, r16
    3202:	0e 94 1a 19 	call	0x3234	; 0x3234 <SPI_set_config_func>
    3206:	85 e0       	ldi	r24, 0x05	; 5
    3208:	b8 01       	movw	r22, r16
    320a:	0e 94 1a 19 	call	0x3234	; 0x3234 <SPI_set_config_func>
    320e:	87 e0       	ldi	r24, 0x07	; 7
    3210:	b8 01       	movw	r22, r16
    3212:	0e 94 1a 19 	call	0x3234	; 0x3234 <SPI_set_config_func>
    3216:	82 e0       	ldi	r24, 0x02	; 2
    3218:	61 e0       	ldi	r22, 0x01	; 1
    321a:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    321e:	8f ef       	ldi	r24, 0xFF	; 255
    3220:	80 93 ee 04 	sts	0x04EE, r24
    3224:	87 e0       	ldi	r24, 0x07	; 7
    3226:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <SPI_set_slave_addr>
    322a:	82 e0       	ldi	r24, 0x02	; 2
    322c:	91 e0       	ldi	r25, 0x01	; 1
    322e:	1f 91       	pop	r17
    3230:	0f 91       	pop	r16
    3232:	08 95       	ret

00003234 <SPI_set_config_func>:
    3234:	e8 2f       	mov	r30, r24
    3236:	f0 e0       	ldi	r31, 0x00	; 0
    3238:	ee 0f       	add	r30, r30
    323a:	ff 1f       	adc	r31, r31
    323c:	e0 57       	subi	r30, 0x70	; 112
    323e:	fd 4f       	sbci	r31, 0xFD	; 253
    3240:	71 83       	std	Z+1, r23	; 0x01
    3242:	60 83       	st	Z, r22
    3244:	08 95       	ret

00003246 <__SPKR_TIMER1_COMPA_vect>:
    3246:	0e 94 26 19 	call	0x324c	; 0x324c <SPKR_clk>
    324a:	08 95       	ret

0000324c <SPKR_clk>:
    324c:	80 91 a2 02 	lds	r24, 0x02A2
    3250:	90 91 a3 02 	lds	r25, 0x02A3
    3254:	a0 91 a4 02 	lds	r26, 0x02A4
    3258:	b0 91 a5 02 	lds	r27, 0x02A5
    325c:	20 91 a6 02 	lds	r18, 0x02A6
    3260:	30 91 a7 02 	lds	r19, 0x02A7
    3264:	40 91 a8 02 	lds	r20, 0x02A8
    3268:	50 91 a9 02 	lds	r21, 0x02A9
    326c:	28 0f       	add	r18, r24
    326e:	39 1f       	adc	r19, r25
    3270:	4a 1f       	adc	r20, r26
    3272:	5b 1f       	adc	r21, r27
    3274:	20 93 a2 02 	sts	0x02A2, r18
    3278:	30 93 a3 02 	sts	0x02A3, r19
    327c:	40 93 a4 02 	sts	0x02A4, r20
    3280:	50 93 a5 02 	sts	0x02A5, r21
    3284:	80 91 a2 02 	lds	r24, 0x02A2
    3288:	90 91 a3 02 	lds	r25, 0x02A3
    328c:	a0 91 a4 02 	lds	r26, 0x02A4
    3290:	b0 91 a5 02 	lds	r27, 0x02A5
    3294:	88 51       	subi	r24, 0x18	; 24
    3296:	96 4f       	sbci	r25, 0xF6	; 246
    3298:	a0 40       	sbci	r26, 0x00	; 0
    329a:	b0 40       	sbci	r27, 0x00	; 0
    329c:	bc f0       	brlt	.+46     	; 0x32cc <SPKR_clk+0x80>
    329e:	8b b1       	in	r24, 0x0b	; 11
    32a0:	80 58       	subi	r24, 0x80	; 128
    32a2:	8b b9       	out	0x0b, r24	; 11
    32a4:	80 91 a2 02 	lds	r24, 0x02A2
    32a8:	90 91 a3 02 	lds	r25, 0x02A3
    32ac:	a0 91 a4 02 	lds	r26, 0x02A4
    32b0:	b0 91 a5 02 	lds	r27, 0x02A5
    32b4:	88 51       	subi	r24, 0x18	; 24
    32b6:	96 4f       	sbci	r25, 0xF6	; 246
    32b8:	a0 40       	sbci	r26, 0x00	; 0
    32ba:	b0 40       	sbci	r27, 0x00	; 0
    32bc:	80 93 a2 02 	sts	0x02A2, r24
    32c0:	90 93 a3 02 	sts	0x02A3, r25
    32c4:	a0 93 a4 02 	sts	0x02A4, r26
    32c8:	b0 93 a5 02 	sts	0x02A5, r27
    32cc:	08 95       	ret

000032ce <__SPKR_close_beep_mode>:
    32ce:	8a e0       	ldi	r24, 0x0A	; 10
    32d0:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    32d4:	81 30       	cpi	r24, 0x01	; 1
    32d6:	41 f4       	brne	.+16     	; 0x32e8 <__SPKR_close_beep_mode+0x1a>
    32d8:	0e 94 09 1c 	call	0x3812	; 0x3812 <__SPKR_close>
    32dc:	10 92 a1 02 	sts	0x02A1, r1
    32e0:	8a e0       	ldi	r24, 0x0A	; 10
    32e2:	60 e0       	ldi	r22, 0x00	; 0
    32e4:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    32e8:	08 95       	ret

000032ea <__SPKR_close_tone_mode>:
    32ea:	89 e0       	ldi	r24, 0x09	; 9
    32ec:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    32f0:	81 30       	cpi	r24, 0x01	; 1
    32f2:	d9 f4       	brne	.+54     	; 0x332a <__SPKR_close_tone_mode+0x40>
    32f4:	80 91 a0 02 	lds	r24, 0x02A0
    32f8:	88 23       	and	r24, r24
    32fa:	11 f0       	breq	.+4      	; 0x3300 <__SPKR_close_tone_mode+0x16>
    32fc:	0e 94 17 1a 	call	0x342e	; 0x342e <__SPKR_stop>
    3300:	82 e0       	ldi	r24, 0x02	; 2
    3302:	0e 94 09 1c 	call	0x3812	; 0x3812 <__SPKR_close>
    3306:	80 91 ae 02 	lds	r24, 0x02AE
    330a:	90 91 af 02 	lds	r25, 0x02AF
    330e:	00 97       	sbiw	r24, 0x00	; 0
    3310:	31 f0       	breq	.+12     	; 0x331e <__SPKR_close_tone_mode+0x34>
    3312:	0e 94 c8 28 	call	0x5190	; 0x5190 <free>
    3316:	10 92 af 02 	sts	0x02AF, r1
    331a:	10 92 ae 02 	sts	0x02AE, r1
    331e:	10 92 a0 02 	sts	0x02A0, r1
    3322:	89 e0       	ldi	r24, 0x09	; 9
    3324:	60 e0       	ldi	r22, 0x00	; 0
    3326:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    332a:	08 95       	ret

0000332c <SPKR_close>:
    332c:	81 30       	cpi	r24, 0x01	; 1
    332e:	29 f0       	breq	.+10     	; 0x333a <SPKR_close+0xe>
    3330:	82 30       	cpi	r24, 0x02	; 2
    3332:	29 f4       	brne	.+10     	; 0x333e <SPKR_close+0x12>
    3334:	0e 94 75 19 	call	0x32ea	; 0x32ea <__SPKR_close_tone_mode>
    3338:	08 95       	ret
    333a:	0e 94 67 19 	call	0x32ce	; 0x32ce <__SPKR_close_beep_mode>
    333e:	08 95       	ret

00003340 <__SPKR_init>:
    3340:	98 2f       	mov	r25, r24
    3342:	80 91 a0 02 	lds	r24, 0x02A0
    3346:	88 23       	and	r24, r24
    3348:	31 f4       	brne	.+12     	; 0x3356 <__SPKR_init+0x16>
    334a:	80 91 a1 02 	lds	r24, 0x02A1
    334e:	88 23       	and	r24, r24
    3350:	11 f4       	brne	.+4      	; 0x3356 <__SPKR_init+0x16>
    3352:	57 9a       	sbi	0x0a, 7	; 10
    3354:	5f 98       	cbi	0x0b, 7	; 11
    3356:	80 91 a0 02 	lds	r24, 0x02A0
    335a:	88 23       	and	r24, r24
    335c:	d1 f4       	brne	.+52     	; 0x3392 <__SPKR_init+0x52>
    335e:	92 30       	cpi	r25, 0x02	; 2
    3360:	c1 f4       	brne	.+48     	; 0x3392 <__SPKR_init+0x52>
    3362:	10 92 80 00 	sts	0x0080, r1
    3366:	10 92 81 00 	sts	0x0081, r1
    336a:	80 91 81 00 	lds	r24, 0x0081
    336e:	88 60       	ori	r24, 0x08	; 8
    3370:	80 93 81 00 	sts	0x0081, r24
    3374:	80 91 81 00 	lds	r24, 0x0081
    3378:	81 60       	ori	r24, 0x01	; 1
    337a:	80 93 81 00 	sts	0x0081, r24
    337e:	10 92 85 00 	sts	0x0085, r1
    3382:	10 92 84 00 	sts	0x0084, r1
    3386:	81 e0       	ldi	r24, 0x01	; 1
    3388:	80 93 89 00 	sts	0x0089, r24
    338c:	80 e9       	ldi	r24, 0x90	; 144
    338e:	80 93 88 00 	sts	0x0088, r24
    3392:	08 95       	ret

00003394 <SPKR_play_beep>:
    3394:	8f 92       	push	r8
    3396:	9f 92       	push	r9
    3398:	af 92       	push	r10
    339a:	bf 92       	push	r11
    339c:	cf 92       	push	r12
    339e:	df 92       	push	r13
    33a0:	ef 92       	push	r14
    33a2:	ff 92       	push	r15
    33a4:	0f 93       	push	r16
    33a6:	1f 93       	push	r17
    33a8:	cf 93       	push	r28
    33aa:	df 93       	push	r29
    33ac:	4b 01       	movw	r8, r22
    33ae:	5c 01       	movw	r10, r24
    33b0:	ea 01       	movw	r28, r20
    33b2:	b9 01       	movw	r22, r18
    33b4:	21 15       	cp	r18, r1
    33b6:	31 05       	cpc	r19, r1
    33b8:	39 f1       	breq	.+78     	; 0x3408 <SPKR_play_beep+0x74>
    33ba:	9e 01       	movw	r18, r28
    33bc:	44 27       	eor	r20, r20
    33be:	37 fd       	sbrc	r19, 7
    33c0:	40 95       	com	r20
    33c2:	54 2f       	mov	r21, r20
    33c4:	65 36       	cpi	r22, 0x65	; 101
    33c6:	71 05       	cpc	r23, r1
    33c8:	10 f0       	brcs	.+4      	; 0x33ce <SPKR_play_beep+0x3a>
    33ca:	64 e6       	ldi	r22, 0x64	; 100
    33cc:	70 e0       	ldi	r23, 0x00	; 0
    33ce:	80 e0       	ldi	r24, 0x00	; 0
    33d0:	90 e0       	ldi	r25, 0x00	; 0
    33d2:	0e 94 7c 27 	call	0x4ef8	; 0x4ef8 <__mulsi3>
    33d6:	24 e6       	ldi	r18, 0x64	; 100
    33d8:	30 e0       	ldi	r19, 0x00	; 0
    33da:	40 e0       	ldi	r20, 0x00	; 0
    33dc:	50 e0       	ldi	r21, 0x00	; 0
    33de:	0e 94 ae 27 	call	0x4f5c	; 0x4f5c <__udivmodsi4>
    33e2:	79 01       	movw	r14, r18
    33e4:	8a 01       	movw	r16, r20
    33e6:	c5 01       	movw	r24, r10
    33e8:	b4 01       	movw	r22, r8
    33ea:	0e 94 f2 1b 	call	0x37e4	; 0x37e4 <SPKR_beep>
    33ee:	c7 01       	movw	r24, r14
    33f0:	0e 94 0d 14 	call	0x281a	; 0x281a <TMRSRVC_delay>
    33f4:	60 e0       	ldi	r22, 0x00	; 0
    33f6:	70 e0       	ldi	r23, 0x00	; 0
    33f8:	80 e0       	ldi	r24, 0x00	; 0
    33fa:	90 e0       	ldi	r25, 0x00	; 0
    33fc:	0e 94 f2 1b 	call	0x37e4	; 0x37e4 <SPKR_beep>
    3400:	ce 01       	movw	r24, r28
    3402:	8e 19       	sub	r24, r14
    3404:	9f 09       	sbc	r25, r15
    3406:	04 c0       	rjmp	.+8      	; 0x3410 <SPKR_play_beep+0x7c>
    3408:	41 15       	cp	r20, r1
    340a:	51 05       	cpc	r21, r1
    340c:	19 f0       	breq	.+6      	; 0x3414 <SPKR_play_beep+0x80>
    340e:	ca 01       	movw	r24, r20
    3410:	0e 94 0d 14 	call	0x281a	; 0x281a <TMRSRVC_delay>
    3414:	df 91       	pop	r29
    3416:	cf 91       	pop	r28
    3418:	1f 91       	pop	r17
    341a:	0f 91       	pop	r16
    341c:	ff 90       	pop	r15
    341e:	ef 90       	pop	r14
    3420:	df 90       	pop	r13
    3422:	cf 90       	pop	r12
    3424:	bf 90       	pop	r11
    3426:	af 90       	pop	r10
    3428:	9f 90       	pop	r9
    342a:	8f 90       	pop	r8
    342c:	08 95       	ret

0000342e <__SPKR_stop>:
    342e:	ef e6       	ldi	r30, 0x6F	; 111
    3430:	f0 e0       	ldi	r31, 0x00	; 0
    3432:	80 81       	ld	r24, Z
    3434:	8d 7f       	andi	r24, 0xFD	; 253
    3436:	80 83       	st	Z, r24
    3438:	08 95       	ret

0000343a <STEPPER_go>:
    343a:	98 2f       	mov	r25, r24
    343c:	81 e0       	ldi	r24, 0x01	; 1
    343e:	80 93 d3 04 	sts	0x04D3, r24
    3442:	91 30       	cpi	r25, 0x01	; 1
    3444:	51 f0       	breq	.+20     	; 0x345a <STEPPER_go+0x20>
    3446:	91 30       	cpi	r25, 0x01	; 1
    3448:	18 f0       	brcs	.+6      	; 0x3450 <STEPPER_go+0x16>
    344a:	92 30       	cpi	r25, 0x02	; 2
    344c:	41 f4       	brne	.+16     	; 0x345e <STEPPER_go+0x24>
    344e:	03 c0       	rjmp	.+6      	; 0x3456 <STEPPER_go+0x1c>
    3450:	10 92 bb 04 	sts	0x04BB, r1
    3454:	04 c0       	rjmp	.+8      	; 0x345e <STEPPER_go+0x24>
    3456:	10 92 bb 04 	sts	0x04BB, r1
    345a:	10 92 bc 04 	sts	0x04BC, r1
    345e:	10 92 d3 04 	sts	0x04D3, r1
    3462:	08 95       	ret

00003464 <__STEPPER_init>:
    3464:	3a 9a       	sbi	0x07, 2	; 7
    3466:	3b 9a       	sbi	0x07, 3	; 7
    3468:	3c 9a       	sbi	0x07, 4	; 7
    346a:	3d 9a       	sbi	0x07, 5	; 7
    346c:	3e 9a       	sbi	0x07, 6	; 7
    346e:	3f 9a       	sbi	0x07, 7	; 7
    3470:	88 b1       	in	r24, 0x08	; 8
    3472:	83 70       	andi	r24, 0x03	; 3
    3474:	88 b9       	out	0x08, r24	; 8
    3476:	08 95       	ret

00003478 <STEPPER_set_steps>:
    3478:	98 2f       	mov	r25, r24
    347a:	81 e0       	ldi	r24, 0x01	; 1
    347c:	80 93 d3 04 	sts	0x04D3, r24
    3480:	91 30       	cpi	r25, 0x01	; 1
    3482:	71 f0       	breq	.+28     	; 0x34a0 <STEPPER_set_steps+0x28>
    3484:	91 30       	cpi	r25, 0x01	; 1
    3486:	18 f0       	brcs	.+6      	; 0x348e <STEPPER_set_steps+0x16>
    3488:	92 30       	cpi	r25, 0x02	; 2
    348a:	71 f4       	brne	.+28     	; 0x34a8 <STEPPER_set_steps+0x30>
    348c:	05 c0       	rjmp	.+10     	; 0x3498 <STEPPER_set_steps+0x20>
    348e:	70 93 b0 04 	sts	0x04B0, r23
    3492:	60 93 af 04 	sts	0x04AF, r22
    3496:	08 c0       	rjmp	.+16     	; 0x34a8 <STEPPER_set_steps+0x30>
    3498:	70 93 b0 04 	sts	0x04B0, r23
    349c:	60 93 af 04 	sts	0x04AF, r22
    34a0:	70 93 b2 04 	sts	0x04B2, r23
    34a4:	60 93 b1 04 	sts	0x04B1, r22
    34a8:	10 92 d3 04 	sts	0x04D3, r1
    34ac:	08 95       	ret

000034ae <STEPPER_set_stop_mode>:
    34ae:	98 2f       	mov	r25, r24
    34b0:	81 e0       	ldi	r24, 0x01	; 1
    34b2:	80 93 d3 04 	sts	0x04D3, r24
    34b6:	91 30       	cpi	r25, 0x01	; 1
    34b8:	51 f0       	breq	.+20     	; 0x34ce <STEPPER_set_stop_mode+0x20>
    34ba:	91 30       	cpi	r25, 0x01	; 1
    34bc:	18 f0       	brcs	.+6      	; 0x34c4 <STEPPER_set_stop_mode+0x16>
    34be:	92 30       	cpi	r25, 0x02	; 2
    34c0:	41 f4       	brne	.+16     	; 0x34d2 <STEPPER_set_stop_mode+0x24>
    34c2:	03 c0       	rjmp	.+6      	; 0x34ca <STEPPER_set_stop_mode+0x1c>
    34c4:	60 93 bd 04 	sts	0x04BD, r22
    34c8:	04 c0       	rjmp	.+8      	; 0x34d2 <STEPPER_set_stop_mode+0x24>
    34ca:	60 93 bd 04 	sts	0x04BD, r22
    34ce:	60 93 be 04 	sts	0x04BE, r22
    34d2:	10 92 d3 04 	sts	0x04D3, r1
    34d6:	08 95       	ret

000034d8 <STEPPER_setup_decels>:
    34d8:	0f 93       	push	r16
    34da:	1f 93       	push	r17
    34dc:	cf 93       	push	r28
    34de:	df 93       	push	r29
    34e0:	eb 01       	movw	r28, r22
    34e2:	8a 01       	movw	r16, r20
    34e4:	81 30       	cpi	r24, 0x01	; 1
    34e6:	01 f1       	breq	.+64     	; 0x3528 <STEPPER_setup_decels+0x50>
    34e8:	81 30       	cpi	r24, 0x01	; 1
    34ea:	18 f0       	brcs	.+6      	; 0x34f2 <STEPPER_setup_decels+0x1a>
    34ec:	82 30       	cpi	r24, 0x02	; 2
    34ee:	61 f5       	brne	.+88     	; 0x3548 <STEPPER_setup_decels+0x70>
    34f0:	0d c0       	rjmp	.+26     	; 0x350c <STEPPER_setup_decels+0x34>
    34f2:	80 91 a7 04 	lds	r24, 0x04A7
    34f6:	90 91 a8 04 	lds	r25, 0x04A8
    34fa:	89 2b       	or	r24, r25
    34fc:	11 f0       	breq	.+4      	; 0x3502 <STEPPER_setup_decels+0x2a>
    34fe:	80 e0       	ldi	r24, 0x00	; 0
    3500:	1a c0       	rjmp	.+52     	; 0x3536 <STEPPER_setup_decels+0x5e>
    3502:	10 92 b4 04 	sts	0x04B4, r1
    3506:	10 92 b3 04 	sts	0x04B3, r1
    350a:	1e c0       	rjmp	.+60     	; 0x3548 <STEPPER_setup_decels+0x70>
    350c:	80 91 a7 04 	lds	r24, 0x04A7
    3510:	90 91 a8 04 	lds	r25, 0x04A8
    3514:	89 2b       	or	r24, r25
    3516:	21 f0       	breq	.+8      	; 0x3520 <STEPPER_setup_decels+0x48>
    3518:	80 e0       	ldi	r24, 0x00	; 0
    351a:	0e 94 25 1c 	call	0x384a	; 0x384a <STEPPER_set_decel_step_values>
    351e:	04 c0       	rjmp	.+8      	; 0x3528 <STEPPER_setup_decels+0x50>
    3520:	10 92 b4 04 	sts	0x04B4, r1
    3524:	10 92 b3 04 	sts	0x04B3, r1
    3528:	80 91 a9 04 	lds	r24, 0x04A9
    352c:	90 91 aa 04 	lds	r25, 0x04AA
    3530:	89 2b       	or	r24, r25
    3532:	31 f0       	breq	.+12     	; 0x3540 <STEPPER_setup_decels+0x68>
    3534:	81 e0       	ldi	r24, 0x01	; 1
    3536:	be 01       	movw	r22, r28
    3538:	a8 01       	movw	r20, r16
    353a:	0e 94 25 1c 	call	0x384a	; 0x384a <STEPPER_set_decel_step_values>
    353e:	04 c0       	rjmp	.+8      	; 0x3548 <STEPPER_setup_decels+0x70>
    3540:	10 92 b6 04 	sts	0x04B6, r1
    3544:	10 92 b5 04 	sts	0x04B5, r1
    3548:	df 91       	pop	r29
    354a:	cf 91       	pop	r28
    354c:	1f 91       	pop	r17
    354e:	0f 91       	pop	r16
    3550:	08 95       	ret

00003552 <SYS_init>:
    3552:	10 92 d6 04 	sts	0x04D6, r1
    3556:	10 92 d7 04 	sts	0x04D7, r1
    355a:	10 92 db 04 	sts	0x04DB, r1
    355e:	10 92 d8 04 	sts	0x04D8, r1
    3562:	10 92 da 04 	sts	0x04DA, r1
    3566:	10 92 dc 04 	sts	0x04DC, r1
    356a:	10 92 dd 04 	sts	0x04DD, r1
    356e:	10 92 de 04 	sts	0x04DE, r1
    3572:	10 92 df 04 	sts	0x04DF, r1
    3576:	10 92 e0 04 	sts	0x04E0, r1
    357a:	10 92 e1 04 	sts	0x04E1, r1
    357e:	10 92 e2 04 	sts	0x04E2, r1
    3582:	10 92 e3 04 	sts	0x04E3, r1
    3586:	10 92 e4 04 	sts	0x04E4, r1
    358a:	10 92 e5 04 	sts	0x04E5, r1
    358e:	10 92 e6 04 	sts	0x04E6, r1
    3592:	10 92 e7 04 	sts	0x04E7, r1
    3596:	08 95       	ret

00003598 <ATTINY_get_sensors>:
    3598:	0f 93       	push	r16
    359a:	1f 93       	push	r17
    359c:	81 e0       	ldi	r24, 0x01	; 1
    359e:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    35a2:	81 30       	cpi	r24, 0x01	; 1
    35a4:	11 f0       	breq	.+4      	; 0x35aa <ATTINY_get_sensors+0x12>
    35a6:	00 e0       	ldi	r16, 0x00	; 0
    35a8:	24 c0       	rjmp	.+72     	; 0x35f2 <ATTINY_get_sensors+0x5a>
    35aa:	87 e0       	ldi	r24, 0x07	; 7
    35ac:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <SPI_set_slave_addr>
    35b0:	82 e0       	ldi	r24, 0x02	; 2
    35b2:	6a e0       	ldi	r22, 0x0A	; 10
    35b4:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <SPI_transmit>
    35b8:	82 e0       	ldi	r24, 0x02	; 2
    35ba:	62 eb       	ldi	r22, 0xB2	; 178
    35bc:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <SPI_transmit>
    35c0:	18 ec       	ldi	r17, 0xC8	; 200
    35c2:	81 2f       	mov	r24, r17
    35c4:	8a 95       	dec	r24
    35c6:	f1 f7       	brne	.-4      	; 0x35c4 <ATTINY_get_sensors+0x2c>
    35c8:	82 e0       	ldi	r24, 0x02	; 2
    35ca:	60 e0       	ldi	r22, 0x00	; 0
    35cc:	0e 94 e0 1b 	call	0x37c0	; 0x37c0 <SPI_receive>
    35d0:	08 2f       	mov	r16, r24
    35d2:	81 2f       	mov	r24, r17
    35d4:	8a 95       	dec	r24
    35d6:	f1 f7       	brne	.-4      	; 0x35d4 <ATTINY_get_sensors+0x3c>
    35d8:	82 e0       	ldi	r24, 0x02	; 2
    35da:	60 e0       	ldi	r22, 0x00	; 0
    35dc:	0e 94 e0 1b 	call	0x37c0	; 0x37c0 <SPI_receive>
    35e0:	1a 95       	dec	r17
    35e2:	f1 f7       	brne	.-4      	; 0x35e0 <ATTINY_get_sensors+0x48>
    35e4:	87 e0       	ldi	r24, 0x07	; 7
    35e6:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <SPI_set_slave_addr>
    35ea:	88 e8       	ldi	r24, 0x88	; 136
    35ec:	93 e1       	ldi	r25, 0x13	; 19
    35ee:	01 97       	sbiw	r24, 0x01	; 1
    35f0:	f1 f7       	brne	.-4      	; 0x35ee <ATTINY_get_sensors+0x56>
    35f2:	80 2f       	mov	r24, r16
    35f4:	1f 91       	pop	r17
    35f6:	0f 91       	pop	r16
    35f8:	08 95       	ret

000035fa <TMRSRVC_insert>:
    35fa:	cf 92       	push	r12
    35fc:	df 92       	push	r13
    35fe:	ef 92       	push	r14
    3600:	ff 92       	push	r15
    3602:	0f 93       	push	r16
    3604:	1f 93       	push	r17
    3606:	cf 93       	push	r28
    3608:	df 93       	push	r29
    360a:	ec 01       	movw	r28, r24
    360c:	80 91 0d 05 	lds	r24, 0x050D
    3610:	88 23       	and	r24, r24
    3612:	39 f4       	brne	.+14     	; 0x3622 <TMRSRVC_insert+0x28>
    3614:	d0 93 0f 05 	sts	0x050F, r29
    3618:	c0 93 0e 05 	sts	0x050E, r28
    361c:	0e 94 8b 1b 	call	0x3716	; 0x3716 <TMRSRVC_start>
    3620:	47 c0       	rjmp	.+142    	; 0x36b0 <TMRSRVC_insert+0xb6>
    3622:	c0 90 0e 05 	lds	r12, 0x050E
    3626:	d0 90 0f 05 	lds	r13, 0x050F
    362a:	00 e0       	ldi	r16, 0x00	; 0
    362c:	10 e0       	ldi	r17, 0x00	; 0
    362e:	ee 24       	eor	r14, r14
    3630:	ff 24       	eor	r15, r15
    3632:	37 c0       	rjmp	.+110    	; 0x36a2 <TMRSRVC_insert+0xa8>
    3634:	a8 81       	ld	r26, Y
    3636:	b9 81       	ldd	r27, Y+1	; 0x01
    3638:	fd 01       	movw	r30, r26
    363a:	64 81       	ldd	r22, Z+4	; 0x04
    363c:	75 81       	ldd	r23, Z+5	; 0x05
    363e:	f6 01       	movw	r30, r12
    3640:	40 81       	ld	r20, Z
    3642:	51 81       	ldd	r21, Z+1	; 0x01
    3644:	fa 01       	movw	r30, r20
    3646:	84 81       	ldd	r24, Z+4	; 0x04
    3648:	95 81       	ldd	r25, Z+5	; 0x05
    364a:	9b 01       	movw	r18, r22
    364c:	28 1b       	sub	r18, r24
    364e:	39 0b       	sbc	r19, r25
    3650:	37 ff       	sbrs	r19, 7
    3652:	0f c0       	rjmp	.+30     	; 0x3672 <TMRSRVC_insert+0x78>
    3654:	86 1b       	sub	r24, r22
    3656:	97 0b       	sbc	r25, r23
    3658:	95 83       	std	Z+5, r25	; 0x05
    365a:	84 83       	std	Z+4, r24	; 0x04
    365c:	db 82       	std	Y+3, r13	; 0x03
    365e:	ca 82       	std	Y+2, r12	; 0x02
    3660:	01 2b       	or	r16, r17
    3662:	29 f4       	brne	.+10     	; 0x366e <TMRSRVC_insert+0x74>
    3664:	d0 93 0f 05 	sts	0x050F, r29
    3668:	c0 93 0e 05 	sts	0x050E, r28
    366c:	21 c0       	rjmp	.+66     	; 0x36b0 <TMRSRVC_insert+0xb6>
    366e:	f7 01       	movw	r30, r14
    3670:	0c c0       	rjmp	.+24     	; 0x368a <TMRSRVC_insert+0x90>
    3672:	f6 01       	movw	r30, r12
    3674:	82 81       	ldd	r24, Z+2	; 0x02
    3676:	93 81       	ldd	r25, Z+3	; 0x03
    3678:	21 15       	cp	r18, r1
    367a:	31 05       	cpc	r19, r1
    367c:	49 f4       	brne	.+18     	; 0x3690 <TMRSRVC_insert+0x96>
    367e:	fd 01       	movw	r30, r26
    3680:	15 82       	std	Z+5, r1	; 0x05
    3682:	14 82       	std	Z+4, r1	; 0x04
    3684:	9b 83       	std	Y+3, r25	; 0x03
    3686:	8a 83       	std	Y+2, r24	; 0x02
    3688:	f6 01       	movw	r30, r12
    368a:	d3 83       	std	Z+3, r29	; 0x03
    368c:	c2 83       	std	Z+2, r28	; 0x02
    368e:	10 c0       	rjmp	.+32     	; 0x36b0 <TMRSRVC_insert+0xb6>
    3690:	fd 01       	movw	r30, r26
    3692:	35 83       	std	Z+5, r19	; 0x05
    3694:	24 83       	std	Z+4, r18	; 0x04
    3696:	00 97       	sbiw	r24, 0x00	; 0
    3698:	b9 f3       	breq	.-18     	; 0x3688 <TMRSRVC_insert+0x8e>
    369a:	0f 5f       	subi	r16, 0xFF	; 255
    369c:	1f 4f       	sbci	r17, 0xFF	; 255
    369e:	76 01       	movw	r14, r12
    36a0:	6c 01       	movw	r12, r24
    36a2:	80 91 0d 05 	lds	r24, 0x050D
    36a6:	90 e0       	ldi	r25, 0x00	; 0
    36a8:	08 17       	cp	r16, r24
    36aa:	19 07       	cpc	r17, r25
    36ac:	18 f2       	brcs	.-122    	; 0x3634 <TMRSRVC_insert+0x3a>
    36ae:	ec cf       	rjmp	.-40     	; 0x3688 <TMRSRVC_insert+0x8e>
    36b0:	80 91 0d 05 	lds	r24, 0x050D
    36b4:	8f 5f       	subi	r24, 0xFF	; 255
    36b6:	80 93 0d 05 	sts	0x050D, r24
    36ba:	df 91       	pop	r29
    36bc:	cf 91       	pop	r28
    36be:	1f 91       	pop	r17
    36c0:	0f 91       	pop	r16
    36c2:	ff 90       	pop	r15
    36c4:	ef 90       	pop	r14
    36c6:	df 90       	pop	r13
    36c8:	cf 90       	pop	r12
    36ca:	08 95       	ret

000036cc <TMRSRVC_open>:
    36cc:	88 e0       	ldi	r24, 0x08	; 8
    36ce:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    36d2:	88 23       	and	r24, r24
    36d4:	b9 f4       	brne	.+46     	; 0x3704 <TMRSRVC_open+0x38>
    36d6:	10 92 0d 05 	sts	0x050D, r1
    36da:	10 92 0f 05 	sts	0x050F, r1
    36de:	10 92 0e 05 	sts	0x050E, r1
    36e2:	10 92 b0 02 	sts	0x02B0, r1
    36e6:	10 92 b1 02 	sts	0x02B1, r1
    36ea:	80 e1       	ldi	r24, 0x10	; 16
    36ec:	62 e9       	ldi	r22, 0x92	; 146
    36ee:	7c e1       	ldi	r23, 0x1C	; 28
    36f0:	0e 94 9c 1b 	call	0x3738	; 0x3738 <__ISR_attach>
    36f4:	0e 94 99 1c 	call	0x3932	; 0x3932 <__TMRSRVC_init>
    36f8:	0e 94 85 1b 	call	0x370a	; 0x370a <__TMRSRVC_start>
    36fc:	88 e0       	ldi	r24, 0x08	; 8
    36fe:	61 e0       	ldi	r22, 0x01	; 1
    3700:	0e 94 29 13 	call	0x2652	; 0x2652 <SYS_set_state>
    3704:	88 e0       	ldi	r24, 0x08	; 8
    3706:	91 e0       	ldi	r25, 0x01	; 1
    3708:	08 95       	ret

0000370a <__TMRSRVC_start>:
    370a:	ee e6       	ldi	r30, 0x6E	; 110
    370c:	f0 e0       	ldi	r31, 0x00	; 0
    370e:	80 81       	ld	r24, Z
    3710:	82 60       	ori	r24, 0x02	; 2
    3712:	80 83       	st	Z, r24
    3714:	08 95       	ret

00003716 <TMRSRVC_start>:
    3716:	81 e0       	ldi	r24, 0x01	; 1
    3718:	80 93 b1 02 	sts	0x02B1, r24
    371c:	08 95       	ret

0000371e <I2C_enable>:
    371e:	80 91 10 05 	lds	r24, 0x0510
    3722:	81 30       	cpi	r24, 0x01	; 1
    3724:	29 f4       	brne	.+10     	; 0x3730 <I2C_enable+0x12>
    3726:	80 91 bc 00 	lds	r24, 0x00BC
    372a:	84 60       	ori	r24, 0x04	; 4
    372c:	80 93 bc 00 	sts	0x00BC, r24
    3730:	08 95       	ret

00003732 <__I2C_init>:
    3732:	38 98       	cbi	0x07, 0	; 7
    3734:	39 98       	cbi	0x07, 1	; 7
    3736:	08 95       	ret

00003738 <__ISR_attach>:
    3738:	80 32       	cpi	r24, 0x20	; 32
    373a:	18 f0       	brcs	.+6      	; 0x3742 <__ISR_attach+0xa>
    373c:	20 e0       	ldi	r18, 0x00	; 0
    373e:	30 e0       	ldi	r19, 0x00	; 0
    3740:	0a c0       	rjmp	.+20     	; 0x3756 <__ISR_attach+0x1e>
    3742:	e8 2f       	mov	r30, r24
    3744:	f0 e0       	ldi	r31, 0x00	; 0
    3746:	ee 0f       	add	r30, r30
    3748:	ff 1f       	adc	r31, r31
    374a:	e0 5b       	subi	r30, 0xB0	; 176
    374c:	fd 4f       	sbci	r31, 0xFD	; 253
    374e:	20 81       	ld	r18, Z
    3750:	31 81       	ldd	r19, Z+1	; 0x01
    3752:	71 83       	std	Z+1, r23	; 0x01
    3754:	60 83       	st	Z, r22
    3756:	c9 01       	movw	r24, r18
    3758:	08 95       	ret

0000375a <__ATMEGA_init>:
    375a:	24 9a       	sbi	0x04, 4	; 4
    375c:	2c 9a       	sbi	0x05, 4	; 5
    375e:	08 95       	ret

00003760 <SPI_default_config>:
    3760:	83 e5       	ldi	r24, 0x53	; 83
    3762:	8c bd       	out	0x2c, r24	; 44
    3764:	81 e0       	ldi	r24, 0x01	; 1
    3766:	8d bd       	out	0x2d, r24	; 45
    3768:	8d e0       	ldi	r24, 0x0D	; 13
    376a:	8a 95       	dec	r24
    376c:	f1 f7       	brne	.-4      	; 0x376a <SPI_default_config+0xa>
    376e:	08 95       	ret

00003770 <SPI_ATtiny0_config>:
    3770:	83 e5       	ldi	r24, 0x53	; 83
    3772:	8c bd       	out	0x2c, r24	; 44
    3774:	1d bc       	out	0x2d, r1	; 45
    3776:	84 ef       	ldi	r24, 0xF4	; 244
    3778:	91 e0       	ldi	r25, 0x01	; 1
    377a:	01 97       	sbiw	r24, 0x01	; 1
    377c:	f1 f7       	brne	.-4      	; 0x377a <SPI_ATtiny0_config+0xa>
    377e:	08 95       	ret

00003780 <SPI_PSXC_config>:
    3780:	8f e7       	ldi	r24, 0x7F	; 127
    3782:	8c bd       	out	0x2c, r24	; 44
    3784:	1d bc       	out	0x2d, r1	; 45
    3786:	84 ef       	ldi	r24, 0xF4	; 244
    3788:	91 e0       	ldi	r25, 0x01	; 1
    378a:	01 97       	sbiw	r24, 0x01	; 1
    378c:	f1 f7       	brne	.-4      	; 0x378a <SPI_PSXC_config+0xa>
    378e:	08 95       	ret

00003790 <SPI_LCD_config>:
    3790:	83 e5       	ldi	r24, 0x53	; 83
    3792:	8c bd       	out	0x2c, r24	; 44
    3794:	81 e0       	ldi	r24, 0x01	; 1
    3796:	8d bd       	out	0x2d, r24	; 45
    3798:	8d e0       	ldi	r24, 0x0D	; 13
    379a:	8a 95       	dec	r24
    379c:	f1 f7       	brne	.-4      	; 0x379a <SPI_LCD_config+0xa>
    379e:	08 95       	ret

000037a0 <SPI_FLASH_config>:
    37a0:	83 e5       	ldi	r24, 0x53	; 83
    37a2:	8c bd       	out	0x2c, r24	; 44
    37a4:	81 e0       	ldi	r24, 0x01	; 1
    37a6:	8d bd       	out	0x2d, r24	; 45
    37a8:	84 ef       	ldi	r24, 0xF4	; 244
    37aa:	91 e0       	ldi	r25, 0x01	; 1
    37ac:	01 97       	sbiw	r24, 0x01	; 1
    37ae:	f1 f7       	brne	.-4      	; 0x37ac <SPI_FLASH_config+0xc>
    37b0:	08 95       	ret

000037b2 <__SPI_init>:
    37b2:	25 9a       	sbi	0x04, 5	; 4
    37b4:	26 98       	cbi	0x04, 6	; 4
    37b6:	27 9a       	sbi	0x04, 7	; 4
    37b8:	20 9a       	sbi	0x04, 0	; 4
    37ba:	21 9a       	sbi	0x04, 1	; 4
    37bc:	22 9a       	sbi	0x04, 2	; 4
    37be:	08 95       	ret

000037c0 <SPI_receive>:
    37c0:	1f 93       	push	r17
    37c2:	16 2f       	mov	r17, r22
    37c4:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <SPI_set_slave_addr>
    37c8:	82 e0       	ldi	r24, 0x02	; 2
    37ca:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    37ce:	81 30       	cpi	r24, 0x01	; 1
    37d0:	11 f0       	breq	.+4      	; 0x37d6 <SPI_receive+0x16>
    37d2:	80 e0       	ldi	r24, 0x00	; 0
    37d4:	05 c0       	rjmp	.+10     	; 0x37e0 <SPI_receive+0x20>
    37d6:	1e bd       	out	0x2e, r17	; 46
    37d8:	0d b4       	in	r0, 0x2d	; 45
    37da:	07 fe       	sbrs	r0, 7
    37dc:	fd cf       	rjmp	.-6      	; 0x37d8 <SPI_receive+0x18>
    37de:	8e b5       	in	r24, 0x2e	; 46
    37e0:	1f 91       	pop	r17
    37e2:	08 95       	ret

000037e4 <SPKR_beep>:
    37e4:	9b 01       	movw	r18, r22
    37e6:	ac 01       	movw	r20, r24
    37e8:	80 91 a1 02 	lds	r24, 0x02A1
    37ec:	88 23       	and	r24, r24
    37ee:	81 f0       	breq	.+32     	; 0x3810 <SPKR_beep+0x2c>
    37f0:	da 01       	movw	r26, r20
    37f2:	c9 01       	movw	r24, r18
    37f4:	88 0f       	add	r24, r24
    37f6:	99 1f       	adc	r25, r25
    37f8:	aa 1f       	adc	r26, r26
    37fa:	bb 1f       	adc	r27, r27
    37fc:	90 93 ad 02 	sts	0x02AD, r25
    3800:	80 93 ac 02 	sts	0x02AC, r24
    3804:	21 15       	cp	r18, r1
    3806:	31 05       	cpc	r19, r1
    3808:	41 05       	cpc	r20, r1
    380a:	51 05       	cpc	r21, r1
    380c:	09 f4       	brne	.+2      	; 0x3810 <SPKR_beep+0x2c>
    380e:	5f 98       	cbi	0x0b, 7	; 11
    3810:	08 95       	ret

00003812 <__SPKR_close>:
    3812:	82 30       	cpi	r24, 0x02	; 2
    3814:	29 f4       	brne	.+10     	; 0x3820 <__SPKR_close+0xe>
    3816:	80 91 81 00 	lds	r24, 0x0081
    381a:	8e 7f       	andi	r24, 0xFE	; 254
    381c:	80 93 81 00 	sts	0x0081, r24
    3820:	80 91 a0 02 	lds	r24, 0x02A0
    3824:	81 30       	cpi	r24, 0x01	; 1
    3826:	31 f4       	brne	.+12     	; 0x3834 <__SPKR_close+0x22>
    3828:	80 91 a1 02 	lds	r24, 0x02A1
    382c:	81 30       	cpi	r24, 0x01	; 1
    382e:	11 f4       	brne	.+4      	; 0x3834 <__SPKR_close+0x22>
    3830:	00 00       	nop
    3832:	08 95       	ret
    3834:	80 91 a0 02 	lds	r24, 0x02A0
    3838:	81 30       	cpi	r24, 0x01	; 1
    383a:	21 f0       	breq	.+8      	; 0x3844 <__SPKR_close+0x32>
    383c:	80 91 a1 02 	lds	r24, 0x02A1
    3840:	81 30       	cpi	r24, 0x01	; 1
    3842:	11 f4       	brne	.+4      	; 0x3848 <__SPKR_close+0x36>
    3844:	5f 98       	cbi	0x0b, 7	; 11
    3846:	57 98       	cbi	0x0a, 7	; 10
    3848:	08 95       	ret

0000384a <STEPPER_set_decel_step_values>:
    384a:	ef 92       	push	r14
    384c:	ff 92       	push	r15
    384e:	0f 93       	push	r16
    3850:	1f 93       	push	r17
    3852:	cf 93       	push	r28
    3854:	df 93       	push	r29
    3856:	eb 01       	movw	r28, r22
    3858:	88 23       	and	r24, r24
    385a:	21 f0       	breq	.+8      	; 0x3864 <STEPPER_set_decel_step_values+0x1a>
    385c:	81 30       	cpi	r24, 0x01	; 1
    385e:	09 f0       	breq	.+2      	; 0x3862 <STEPPER_set_decel_step_values+0x18>
    3860:	5a c0       	rjmp	.+180    	; 0x3916 <STEPPER_set_decel_step_values+0xcc>
    3862:	2d c0       	rjmp	.+90     	; 0x38be <STEPPER_set_decel_step_values+0x74>
    3864:	9a 01       	movw	r18, r20
    3866:	40 e0       	ldi	r20, 0x00	; 0
    3868:	50 e0       	ldi	r21, 0x00	; 0
    386a:	ca 01       	movw	r24, r20
    386c:	b9 01       	movw	r22, r18
    386e:	0e 94 7c 27 	call	0x4ef8	; 0x4ef8 <__mulsi3>
    3872:	20 91 a7 04 	lds	r18, 0x04A7
    3876:	30 91 a8 04 	lds	r19, 0x04A8
    387a:	22 0f       	add	r18, r18
    387c:	33 1f       	adc	r19, r19
    387e:	40 e0       	ldi	r20, 0x00	; 0
    3880:	50 e0       	ldi	r21, 0x00	; 0
    3882:	0e 94 ae 27 	call	0x4f5c	; 0x4f5c <__udivmodsi4>
    3886:	79 01       	movw	r14, r18
    3888:	8a 01       	movw	r16, r20
    388a:	a8 01       	movw	r20, r16
    388c:	97 01       	movw	r18, r14
    388e:	22 0f       	add	r18, r18
    3890:	33 1f       	adc	r19, r19
    3892:	44 1f       	adc	r20, r20
    3894:	55 1f       	adc	r21, r21
    3896:	ce 01       	movw	r24, r28
    3898:	a0 e0       	ldi	r26, 0x00	; 0
    389a:	b0 e0       	ldi	r27, 0x00	; 0
    389c:	82 17       	cp	r24, r18
    389e:	93 07       	cpc	r25, r19
    38a0:	a4 07       	cpc	r26, r20
    38a2:	b5 07       	cpc	r27, r21
    38a4:	28 f0       	brcs	.+10     	; 0x38b0 <STEPPER_set_decel_step_values+0x66>
    38a6:	f0 92 b4 04 	sts	0x04B4, r15
    38aa:	e0 92 b3 04 	sts	0x04B3, r14
    38ae:	33 c0       	rjmp	.+102    	; 0x3916 <STEPPER_set_decel_step_values+0xcc>
    38b0:	d6 95       	lsr	r29
    38b2:	c7 95       	ror	r28
    38b4:	d0 93 b4 04 	sts	0x04B4, r29
    38b8:	c0 93 b3 04 	sts	0x04B3, r28
    38bc:	2c c0       	rjmp	.+88     	; 0x3916 <STEPPER_set_decel_step_values+0xcc>
    38be:	9a 01       	movw	r18, r20
    38c0:	40 e0       	ldi	r20, 0x00	; 0
    38c2:	50 e0       	ldi	r21, 0x00	; 0
    38c4:	ca 01       	movw	r24, r20
    38c6:	b9 01       	movw	r22, r18
    38c8:	0e 94 7c 27 	call	0x4ef8	; 0x4ef8 <__mulsi3>
    38cc:	20 91 a9 04 	lds	r18, 0x04A9
    38d0:	30 91 aa 04 	lds	r19, 0x04AA
    38d4:	22 0f       	add	r18, r18
    38d6:	33 1f       	adc	r19, r19
    38d8:	40 e0       	ldi	r20, 0x00	; 0
    38da:	50 e0       	ldi	r21, 0x00	; 0
    38dc:	0e 94 ae 27 	call	0x4f5c	; 0x4f5c <__udivmodsi4>
    38e0:	79 01       	movw	r14, r18
    38e2:	8a 01       	movw	r16, r20
    38e4:	a8 01       	movw	r20, r16
    38e6:	97 01       	movw	r18, r14
    38e8:	22 0f       	add	r18, r18
    38ea:	33 1f       	adc	r19, r19
    38ec:	44 1f       	adc	r20, r20
    38ee:	55 1f       	adc	r21, r21
    38f0:	ce 01       	movw	r24, r28
    38f2:	a0 e0       	ldi	r26, 0x00	; 0
    38f4:	b0 e0       	ldi	r27, 0x00	; 0
    38f6:	82 17       	cp	r24, r18
    38f8:	93 07       	cpc	r25, r19
    38fa:	a4 07       	cpc	r26, r20
    38fc:	b5 07       	cpc	r27, r21
    38fe:	28 f0       	brcs	.+10     	; 0x390a <STEPPER_set_decel_step_values+0xc0>
    3900:	f0 92 b6 04 	sts	0x04B6, r15
    3904:	e0 92 b5 04 	sts	0x04B5, r14
    3908:	06 c0       	rjmp	.+12     	; 0x3916 <STEPPER_set_decel_step_values+0xcc>
    390a:	d6 95       	lsr	r29
    390c:	c7 95       	ror	r28
    390e:	d0 93 b6 04 	sts	0x04B6, r29
    3912:	c0 93 b5 04 	sts	0x04B5, r28
    3916:	df 91       	pop	r29
    3918:	cf 91       	pop	r28
    391a:	1f 91       	pop	r17
    391c:	0f 91       	pop	r16
    391e:	ff 90       	pop	r15
    3920:	ef 90       	pop	r14
    3922:	08 95       	ret

00003924 <__TIMER0_COMPA_vect>:
    3924:	0e 94 a2 1c 	call	0x3944	; 0x3944 <TMRSRVC_tick>
    3928:	0e 94 e2 1c 	call	0x39c4	; 0x39c4 <STEPPER_clk>
    392c:	0e 94 bb 1c 	call	0x3976	; 0x3976 <SPKR_beep_clk>
    3930:	08 95       	ret

00003932 <__TMRSRVC_init>:
    3932:	84 b5       	in	r24, 0x24	; 36
    3934:	82 60       	ori	r24, 0x02	; 2
    3936:	84 bd       	out	0x24, r24	; 36
    3938:	85 b5       	in	r24, 0x25	; 37
    393a:	84 60       	ori	r24, 0x04	; 4
    393c:	85 bd       	out	0x25, r24	; 37
    393e:	8e e4       	ldi	r24, 0x4E	; 78
    3940:	87 bd       	out	0x27, r24	; 39
    3942:	08 95       	ret

00003944 <TMRSRVC_tick>:
    3944:	88 e0       	ldi	r24, 0x08	; 8
    3946:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    394a:	88 23       	and	r24, r24
    394c:	11 f4       	brne	.+4      	; 0x3952 <TMRSRVC_tick+0xe>
    394e:	84 e0       	ldi	r24, 0x04	; 4
    3950:	08 95       	ret
    3952:	80 91 b1 02 	lds	r24, 0x02B1
    3956:	88 23       	and	r24, r24
    3958:	11 f4       	brne	.+4      	; 0x395e <TMRSRVC_tick+0x1a>
    395a:	83 e0       	ldi	r24, 0x03	; 3
    395c:	08 95       	ret
    395e:	80 91 b0 02 	lds	r24, 0x02B0
    3962:	88 23       	and	r24, r24
    3964:	11 f0       	breq	.+4      	; 0x396a <TMRSRVC_tick+0x26>
    3966:	82 e0       	ldi	r24, 0x02	; 2
    3968:	08 95       	ret
    396a:	0e 94 54 1f 	call	0x3ea8	; 0x3ea8 <TMRSRVC_process>
    396e:	81 30       	cpi	r24, 0x01	; 1
    3970:	e1 f3       	breq	.-8      	; 0x396a <TMRSRVC_tick+0x26>
    3972:	80 e0       	ldi	r24, 0x00	; 0
    3974:	08 95       	ret

00003976 <SPKR_beep_clk>:
    3976:	80 91 a1 02 	lds	r24, 0x02A1
    397a:	81 30       	cpi	r24, 0x01	; 1
    397c:	11 f5       	brne	.+68     	; 0x39c2 <SPKR_beep_clk+0x4c>
    397e:	80 91 aa 02 	lds	r24, 0x02AA
    3982:	90 91 ab 02 	lds	r25, 0x02AB
    3986:	20 91 ac 02 	lds	r18, 0x02AC
    398a:	30 91 ad 02 	lds	r19, 0x02AD
    398e:	28 0f       	add	r18, r24
    3990:	39 1f       	adc	r19, r25
    3992:	30 93 ab 02 	sts	0x02AB, r19
    3996:	20 93 aa 02 	sts	0x02AA, r18
    399a:	80 91 aa 02 	lds	r24, 0x02AA
    399e:	90 91 ab 02 	lds	r25, 0x02AB
    39a2:	88 5e       	subi	r24, 0xE8	; 232
    39a4:	93 40       	sbci	r25, 0x03	; 3
    39a6:	6c f0       	brlt	.+26     	; 0x39c2 <SPKR_beep_clk+0x4c>
    39a8:	8b b1       	in	r24, 0x0b	; 11
    39aa:	80 58       	subi	r24, 0x80	; 128
    39ac:	8b b9       	out	0x0b, r24	; 11
    39ae:	80 91 aa 02 	lds	r24, 0x02AA
    39b2:	90 91 ab 02 	lds	r25, 0x02AB
    39b6:	88 5e       	subi	r24, 0xE8	; 232
    39b8:	93 40       	sbci	r25, 0x03	; 3
    39ba:	90 93 ab 02 	sts	0x02AB, r25
    39be:	80 93 aa 02 	sts	0x02AA, r24
    39c2:	08 95       	ret

000039c4 <STEPPER_clk>:
    39c4:	87 e0       	ldi	r24, 0x07	; 7
    39c6:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <SYS_get_state>
    39ca:	81 30       	cpi	r24, 0x01	; 1
    39cc:	09 f0       	breq	.+2      	; 0x39d0 <STEPPER_clk+0xc>
    39ce:	aa c0       	rjmp	.+340    	; 0x3b24 <STEPPER_clk+0x160>
    39d0:	80 91 a7 04 	lds	r24, 0x04A7
    39d4:	90 91 a8 04 	lds	r25, 0x04A8
    39d8:	89 2b       	or	r24, r25
    39da:	09 f1       	breq	.+66     	; 0x3a1e <STEPPER_clk+0x5a>
    39dc:	80 91 cb 04 	lds	r24, 0x04CB
    39e0:	90 91 cc 04 	lds	r25, 0x04CC
    39e4:	20 91 a7 04 	lds	r18, 0x04A7
    39e8:	30 91 a8 04 	lds	r19, 0x04A8
    39ec:	82 0f       	add	r24, r18
    39ee:	93 1f       	adc	r25, r19
    39f0:	90 93 cc 04 	sts	0x04CC, r25
    39f4:	80 93 cb 04 	sts	0x04CB, r24
    39f8:	80 91 cb 04 	lds	r24, 0x04CB
    39fc:	90 91 cc 04 	lds	r25, 0x04CC
    3a00:	88 5e       	subi	r24, 0xE8	; 232
    3a02:	93 40       	sbci	r25, 0x03	; 3
    3a04:	a4 f0       	brlt	.+40     	; 0x3a2e <STEPPER_clk+0x6a>
    3a06:	80 91 cb 04 	lds	r24, 0x04CB
    3a0a:	90 91 cc 04 	lds	r25, 0x04CC
    3a0e:	88 5e       	subi	r24, 0xE8	; 232
    3a10:	93 40       	sbci	r25, 0x03	; 3
    3a12:	90 93 cc 04 	sts	0x04CC, r25
    3a16:	80 93 cb 04 	sts	0x04CB, r24
    3a1a:	41 e0       	ldi	r20, 0x01	; 1
    3a1c:	09 c0       	rjmp	.+18     	; 0x3a30 <STEPPER_clk+0x6c>
    3a1e:	80 91 9f 04 	lds	r24, 0x049F
    3a22:	90 91 a0 04 	lds	r25, 0x04A0
    3a26:	90 93 a4 04 	sts	0x04A4, r25
    3a2a:	80 93 a3 04 	sts	0x04A3, r24
    3a2e:	40 e0       	ldi	r20, 0x00	; 0
    3a30:	80 91 a9 04 	lds	r24, 0x04A9
    3a34:	90 91 aa 04 	lds	r25, 0x04AA
    3a38:	89 2b       	or	r24, r25
    3a3a:	09 f1       	breq	.+66     	; 0x3a7e <STEPPER_clk+0xba>
    3a3c:	80 91 cd 04 	lds	r24, 0x04CD
    3a40:	90 91 ce 04 	lds	r25, 0x04CE
    3a44:	20 91 a9 04 	lds	r18, 0x04A9
    3a48:	30 91 aa 04 	lds	r19, 0x04AA
    3a4c:	82 0f       	add	r24, r18
    3a4e:	93 1f       	adc	r25, r19
    3a50:	90 93 ce 04 	sts	0x04CE, r25
    3a54:	80 93 cd 04 	sts	0x04CD, r24
    3a58:	80 91 cd 04 	lds	r24, 0x04CD
    3a5c:	90 91 ce 04 	lds	r25, 0x04CE
    3a60:	88 5e       	subi	r24, 0xE8	; 232
    3a62:	93 40       	sbci	r25, 0x03	; 3
    3a64:	a4 f0       	brlt	.+40     	; 0x3a8e <STEPPER_clk+0xca>
    3a66:	80 91 cd 04 	lds	r24, 0x04CD
    3a6a:	90 91 ce 04 	lds	r25, 0x04CE
    3a6e:	88 5e       	subi	r24, 0xE8	; 232
    3a70:	93 40       	sbci	r25, 0x03	; 3
    3a72:	90 93 ce 04 	sts	0x04CE, r25
    3a76:	80 93 cd 04 	sts	0x04CD, r24
    3a7a:	61 e0       	ldi	r22, 0x01	; 1
    3a7c:	09 c0       	rjmp	.+18     	; 0x3a90 <STEPPER_clk+0xcc>
    3a7e:	80 91 a1 04 	lds	r24, 0x04A1
    3a82:	90 91 a2 04 	lds	r25, 0x04A2
    3a86:	90 93 a6 04 	sts	0x04A6, r25
    3a8a:	80 93 a5 04 	sts	0x04A5, r24
    3a8e:	60 e0       	ldi	r22, 0x00	; 0
    3a90:	84 2f       	mov	r24, r20
    3a92:	0e 94 93 1d 	call	0x3b26	; 0x3b26 <STEPPER_process_accel>
    3a96:	80 91 c7 04 	lds	r24, 0x04C7
    3a9a:	90 91 c8 04 	lds	r25, 0x04C8
    3a9e:	20 91 a3 04 	lds	r18, 0x04A3
    3aa2:	30 91 a4 04 	lds	r19, 0x04A4
    3aa6:	28 0f       	add	r18, r24
    3aa8:	39 1f       	adc	r19, r25
    3aaa:	30 93 c8 04 	sts	0x04C8, r19
    3aae:	20 93 c7 04 	sts	0x04C7, r18
    3ab2:	80 91 c7 04 	lds	r24, 0x04C7
    3ab6:	90 91 c8 04 	lds	r25, 0x04C8
    3aba:	88 5e       	subi	r24, 0xE8	; 232
    3abc:	93 40       	sbci	r25, 0x03	; 3
    3abe:	14 f4       	brge	.+4      	; 0x3ac4 <STEPPER_clk+0x100>
    3ac0:	40 e0       	ldi	r20, 0x00	; 0
    3ac2:	0b c0       	rjmp	.+22     	; 0x3ada <STEPPER_clk+0x116>
    3ac4:	80 91 c7 04 	lds	r24, 0x04C7
    3ac8:	90 91 c8 04 	lds	r25, 0x04C8
    3acc:	88 5e       	subi	r24, 0xE8	; 232
    3ace:	93 40       	sbci	r25, 0x03	; 3
    3ad0:	90 93 c8 04 	sts	0x04C8, r25
    3ad4:	80 93 c7 04 	sts	0x04C7, r24
    3ad8:	41 e0       	ldi	r20, 0x01	; 1
    3ada:	80 91 c9 04 	lds	r24, 0x04C9
    3ade:	90 91 ca 04 	lds	r25, 0x04CA
    3ae2:	20 91 a5 04 	lds	r18, 0x04A5
    3ae6:	30 91 a6 04 	lds	r19, 0x04A6
    3aea:	28 0f       	add	r18, r24
    3aec:	39 1f       	adc	r19, r25
    3aee:	30 93 ca 04 	sts	0x04CA, r19
    3af2:	20 93 c9 04 	sts	0x04C9, r18
    3af6:	80 91 c9 04 	lds	r24, 0x04C9
    3afa:	90 91 ca 04 	lds	r25, 0x04CA
    3afe:	88 5e       	subi	r24, 0xE8	; 232
    3b00:	93 40       	sbci	r25, 0x03	; 3
    3b02:	14 f4       	brge	.+4      	; 0x3b08 <STEPPER_clk+0x144>
    3b04:	60 e0       	ldi	r22, 0x00	; 0
    3b06:	0b c0       	rjmp	.+22     	; 0x3b1e <STEPPER_clk+0x15a>
    3b08:	80 91 c9 04 	lds	r24, 0x04C9
    3b0c:	90 91 ca 04 	lds	r25, 0x04CA
    3b10:	88 5e       	subi	r24, 0xE8	; 232
    3b12:	93 40       	sbci	r25, 0x03	; 3
    3b14:	90 93 ca 04 	sts	0x04CA, r25
    3b18:	80 93 c9 04 	sts	0x04C9, r24
    3b1c:	61 e0       	ldi	r22, 0x01	; 1
    3b1e:	84 2f       	mov	r24, r20
    3b20:	0e 94 d8 1d 	call	0x3bb0	; 0x3bb0 <STEPPER_process_run_mode>
    3b24:	08 95       	ret

00003b26 <STEPPER_process_accel>:
    3b26:	88 23       	and	r24, r24
    3b28:	f1 f0       	breq	.+60     	; 0x3b66 <STEPPER_process_accel+0x40>
    3b2a:	20 91 9f 04 	lds	r18, 0x049F
    3b2e:	30 91 a0 04 	lds	r19, 0x04A0
    3b32:	80 91 a3 04 	lds	r24, 0x04A3
    3b36:	90 91 a4 04 	lds	r25, 0x04A4
    3b3a:	28 1b       	sub	r18, r24
    3b3c:	39 0b       	sbc	r19, r25
    3b3e:	12 16       	cp	r1, r18
    3b40:	13 06       	cpc	r1, r19
    3b42:	34 f4       	brge	.+12     	; 0x3b50 <STEPPER_process_accel+0x2a>
    3b44:	80 91 a3 04 	lds	r24, 0x04A3
    3b48:	90 91 a4 04 	lds	r25, 0x04A4
    3b4c:	01 96       	adiw	r24, 0x01	; 1
    3b4e:	07 c0       	rjmp	.+14     	; 0x3b5e <STEPPER_process_accel+0x38>
    3b50:	23 2b       	or	r18, r19
    3b52:	49 f0       	breq	.+18     	; 0x3b66 <STEPPER_process_accel+0x40>
    3b54:	80 91 a3 04 	lds	r24, 0x04A3
    3b58:	90 91 a4 04 	lds	r25, 0x04A4
    3b5c:	01 97       	sbiw	r24, 0x01	; 1
    3b5e:	90 93 a4 04 	sts	0x04A4, r25
    3b62:	80 93 a3 04 	sts	0x04A3, r24
    3b66:	66 23       	and	r22, r22
    3b68:	11 f1       	breq	.+68     	; 0x3bae <STEPPER_process_accel+0x88>
    3b6a:	20 91 a1 04 	lds	r18, 0x04A1
    3b6e:	30 91 a2 04 	lds	r19, 0x04A2
    3b72:	80 91 a5 04 	lds	r24, 0x04A5
    3b76:	90 91 a6 04 	lds	r25, 0x04A6
    3b7a:	28 1b       	sub	r18, r24
    3b7c:	39 0b       	sbc	r19, r25
    3b7e:	12 16       	cp	r1, r18
    3b80:	13 06       	cpc	r1, r19
    3b82:	54 f4       	brge	.+20     	; 0x3b98 <STEPPER_process_accel+0x72>
    3b84:	80 91 a5 04 	lds	r24, 0x04A5
    3b88:	90 91 a6 04 	lds	r25, 0x04A6
    3b8c:	01 96       	adiw	r24, 0x01	; 1
    3b8e:	90 93 a6 04 	sts	0x04A6, r25
    3b92:	80 93 a5 04 	sts	0x04A5, r24
    3b96:	08 95       	ret
    3b98:	23 2b       	or	r18, r19
    3b9a:	49 f0       	breq	.+18     	; 0x3bae <STEPPER_process_accel+0x88>
    3b9c:	80 91 a5 04 	lds	r24, 0x04A5
    3ba0:	90 91 a6 04 	lds	r25, 0x04A6
    3ba4:	01 97       	sbiw	r24, 0x01	; 1
    3ba6:	90 93 a6 04 	sts	0x04A6, r25
    3baa:	80 93 a5 04 	sts	0x04A5, r24
    3bae:	08 95       	ret

00003bb0 <STEPPER_process_run_mode>:
    3bb0:	0f 93       	push	r16
    3bb2:	1f 93       	push	r17
    3bb4:	18 2f       	mov	r17, r24
    3bb6:	06 2f       	mov	r16, r22
    3bb8:	80 91 d3 04 	lds	r24, 0x04D3
    3bbc:	88 23       	and	r24, r24
    3bbe:	09 f0       	breq	.+2      	; 0x3bc2 <STEPPER_process_run_mode+0x12>
    3bc0:	e7 c0       	rjmp	.+462    	; 0x3d90 <STEPPER_process_run_mode+0x1e0>
    3bc2:	80 91 bb 04 	lds	r24, 0x04BB
    3bc6:	88 23       	and	r24, r24
    3bc8:	09 f0       	breq	.+2      	; 0x3bcc <STEPPER_process_run_mode+0x1c>
    3bca:	5a c0       	rjmp	.+180    	; 0x3c80 <STEPPER_process_run_mode+0xd0>
    3bcc:	80 91 a3 04 	lds	r24, 0x04A3
    3bd0:	90 91 a4 04 	lds	r25, 0x04A4
    3bd4:	89 2b       	or	r24, r25
    3bd6:	e9 f4       	brne	.+58     	; 0x3c12 <STEPPER_process_run_mode+0x62>
    3bd8:	80 91 b2 02 	lds	r24, 0x02B2
    3bdc:	83 7e       	andi	r24, 0xE3	; 227
    3bde:	80 93 b2 02 	sts	0x02B2, r24
    3be2:	10 92 c4 04 	sts	0x04C4, r1
    3be6:	80 91 cf 04 	lds	r24, 0x04CF
    3bea:	88 23       	and	r24, r24
    3bec:	09 f4       	brne	.+2      	; 0x3bf0 <STEPPER_process_run_mode+0x40>
    3bee:	5d c0       	rjmp	.+186    	; 0x3caa <STEPPER_process_run_mode+0xfa>
    3bf0:	60 91 bd 04 	lds	r22, 0x04BD
    3bf4:	80 e0       	ldi	r24, 0x00	; 0
    3bf6:	0e 94 2f 1f 	call	0x3e5e	; 0x3e5e <STEPPER_stop>
    3bfa:	e0 91 d1 04 	lds	r30, 0x04D1
    3bfe:	f0 91 d2 04 	lds	r31, 0x04D2
    3c02:	30 97       	sbiw	r30, 0x00	; 0
    3c04:	09 f4       	brne	.+2      	; 0x3c08 <STEPPER_process_run_mode+0x58>
    3c06:	51 c0       	rjmp	.+162    	; 0x3caa <STEPPER_process_run_mode+0xfa>
    3c08:	81 e0       	ldi	r24, 0x01	; 1
    3c0a:	80 83       	st	Z, r24
    3c0c:	10 92 cf 04 	sts	0x04CF, r1
    3c10:	4c c0       	rjmp	.+152    	; 0x3caa <STEPPER_process_run_mode+0xfa>
    3c12:	80 91 9d 04 	lds	r24, 0x049D
    3c16:	81 30       	cpi	r24, 0x01	; 1
    3c18:	41 f4       	brne	.+16     	; 0x3c2a <STEPPER_process_run_mode+0x7a>
    3c1a:	80 91 af 04 	lds	r24, 0x04AF
    3c1e:	90 91 b0 04 	lds	r25, 0x04B0
    3c22:	01 97       	sbiw	r24, 0x01	; 1
    3c24:	11 f4       	brne	.+4      	; 0x3c2a <STEPPER_process_run_mode+0x7a>
    3c26:	11 e0       	ldi	r17, 0x01	; 1
    3c28:	02 c0       	rjmp	.+4      	; 0x3c2e <STEPPER_process_run_mode+0x7e>
    3c2a:	11 23       	and	r17, r17
    3c2c:	f1 f1       	breq	.+124    	; 0x3caa <STEPPER_process_run_mode+0xfa>
    3c2e:	e0 91 c2 04 	lds	r30, 0x04C2
    3c32:	f0 e0       	ldi	r31, 0x00	; 0
    3c34:	e7 53       	subi	r30, 0x37	; 55
    3c36:	fe 4f       	sbci	r31, 0xFE	; 254
    3c38:	90 91 b2 02 	lds	r25, 0x02B2
    3c3c:	93 7e       	andi	r25, 0xE3	; 227
    3c3e:	80 81       	ld	r24, Z
    3c40:	89 2b       	or	r24, r25
    3c42:	80 93 b2 02 	sts	0x02B2, r24
    3c46:	80 91 c0 04 	lds	r24, 0x04C0
    3c4a:	88 23       	and	r24, r24
    3c4c:	21 f4       	brne	.+8      	; 0x3c56 <STEPPER_process_run_mode+0xa6>
    3c4e:	80 91 c2 04 	lds	r24, 0x04C2
    3c52:	8f 5f       	subi	r24, 0xFF	; 255
    3c54:	03 c0       	rjmp	.+6      	; 0x3c5c <STEPPER_process_run_mode+0xac>
    3c56:	80 91 c2 04 	lds	r24, 0x04C2
    3c5a:	81 50       	subi	r24, 0x01	; 1
    3c5c:	80 93 c2 04 	sts	0x04C2, r24
    3c60:	80 91 c2 04 	lds	r24, 0x04C2
    3c64:	83 70       	andi	r24, 0x03	; 3
    3c66:	80 93 c2 04 	sts	0x04C2, r24
    3c6a:	81 e0       	ldi	r24, 0x01	; 1
    3c6c:	80 93 c4 04 	sts	0x04C4, r24
    3c70:	80 91 9d 04 	lds	r24, 0x049D
    3c74:	81 30       	cpi	r24, 0x01	; 1
    3c76:	c9 f4       	brne	.+50     	; 0x3caa <STEPPER_process_run_mode+0xfa>
    3c78:	80 e0       	ldi	r24, 0x00	; 0
    3c7a:	0e 94 db 1e 	call	0x3db6	; 0x3db6 <STEPPER_process_step_mode>
    3c7e:	15 c0       	rjmp	.+42     	; 0x3caa <STEPPER_process_run_mode+0xfa>
    3c80:	90 91 b2 02 	lds	r25, 0x02B2
    3c84:	93 7e       	andi	r25, 0xE3	; 227
    3c86:	90 93 b2 02 	sts	0x02B2, r25
    3c8a:	e0 91 c2 04 	lds	r30, 0x04C2
    3c8e:	f0 e0       	ldi	r31, 0x00	; 0
    3c90:	e7 53       	subi	r30, 0x37	; 55
    3c92:	fe 4f       	sbci	r31, 0xFE	; 254
    3c94:	80 81       	ld	r24, Z
    3c96:	89 2b       	or	r24, r25
    3c98:	80 93 b2 02 	sts	0x02B2, r24
    3c9c:	82 e0       	ldi	r24, 0x02	; 2
    3c9e:	80 93 c4 04 	sts	0x04C4, r24
    3ca2:	10 92 a4 04 	sts	0x04A4, r1
    3ca6:	10 92 a3 04 	sts	0x04A3, r1
    3caa:	80 91 bc 04 	lds	r24, 0x04BC
    3cae:	88 23       	and	r24, r24
    3cb0:	09 f0       	breq	.+2      	; 0x3cb4 <STEPPER_process_run_mode+0x104>
    3cb2:	59 c0       	rjmp	.+178    	; 0x3d66 <STEPPER_process_run_mode+0x1b6>
    3cb4:	80 91 a5 04 	lds	r24, 0x04A5
    3cb8:	90 91 a6 04 	lds	r25, 0x04A6
    3cbc:	89 2b       	or	r24, r25
    3cbe:	e9 f4       	brne	.+58     	; 0x3cfa <STEPPER_process_run_mode+0x14a>
    3cc0:	80 91 b2 02 	lds	r24, 0x02B2
    3cc4:	8f 71       	andi	r24, 0x1F	; 31
    3cc6:	80 93 b2 02 	sts	0x02B2, r24
    3cca:	10 92 c5 04 	sts	0x04C5, r1
    3cce:	80 91 d0 04 	lds	r24, 0x04D0
    3cd2:	88 23       	and	r24, r24
    3cd4:	09 f4       	brne	.+2      	; 0x3cd8 <STEPPER_process_run_mode+0x128>
    3cd6:	5c c0       	rjmp	.+184    	; 0x3d90 <STEPPER_process_run_mode+0x1e0>
    3cd8:	60 91 be 04 	lds	r22, 0x04BE
    3cdc:	81 e0       	ldi	r24, 0x01	; 1
    3cde:	0e 94 2f 1f 	call	0x3e5e	; 0x3e5e <STEPPER_stop>
    3ce2:	e0 91 d1 04 	lds	r30, 0x04D1
    3ce6:	f0 91 d2 04 	lds	r31, 0x04D2
    3cea:	30 97       	sbiw	r30, 0x00	; 0
    3cec:	09 f4       	brne	.+2      	; 0x3cf0 <STEPPER_process_run_mode+0x140>
    3cee:	50 c0       	rjmp	.+160    	; 0x3d90 <STEPPER_process_run_mode+0x1e0>
    3cf0:	81 e0       	ldi	r24, 0x01	; 1
    3cf2:	81 83       	std	Z+1, r24	; 0x01
    3cf4:	10 92 d0 04 	sts	0x04D0, r1
    3cf8:	4b c0       	rjmp	.+150    	; 0x3d90 <STEPPER_process_run_mode+0x1e0>
    3cfa:	80 91 9e 04 	lds	r24, 0x049E
    3cfe:	81 30       	cpi	r24, 0x01	; 1
    3d00:	41 f4       	brne	.+16     	; 0x3d12 <STEPPER_process_run_mode+0x162>
    3d02:	80 91 b1 04 	lds	r24, 0x04B1
    3d06:	90 91 b2 04 	lds	r25, 0x04B2
    3d0a:	01 97       	sbiw	r24, 0x01	; 1
    3d0c:	11 f4       	brne	.+4      	; 0x3d12 <STEPPER_process_run_mode+0x162>
    3d0e:	01 e0       	ldi	r16, 0x01	; 1
    3d10:	02 c0       	rjmp	.+4      	; 0x3d16 <STEPPER_process_run_mode+0x166>
    3d12:	00 23       	and	r16, r16
    3d14:	e9 f1       	breq	.+122    	; 0x3d90 <STEPPER_process_run_mode+0x1e0>
    3d16:	e0 91 c3 04 	lds	r30, 0x04C3
    3d1a:	f0 e0       	ldi	r31, 0x00	; 0
    3d1c:	e3 53       	subi	r30, 0x33	; 51
    3d1e:	fe 4f       	sbci	r31, 0xFE	; 254
    3d20:	90 91 b2 02 	lds	r25, 0x02B2
    3d24:	9f 71       	andi	r25, 0x1F	; 31
    3d26:	80 81       	ld	r24, Z
    3d28:	89 2b       	or	r24, r25
    3d2a:	80 93 b2 02 	sts	0x02B2, r24
    3d2e:	80 91 c1 04 	lds	r24, 0x04C1
    3d32:	88 23       	and	r24, r24
    3d34:	21 f4       	brne	.+8      	; 0x3d3e <STEPPER_process_run_mode+0x18e>
    3d36:	80 91 c3 04 	lds	r24, 0x04C3
    3d3a:	8f 5f       	subi	r24, 0xFF	; 255
    3d3c:	03 c0       	rjmp	.+6      	; 0x3d44 <STEPPER_process_run_mode+0x194>
    3d3e:	80 91 c3 04 	lds	r24, 0x04C3
    3d42:	81 50       	subi	r24, 0x01	; 1
    3d44:	80 93 c3 04 	sts	0x04C3, r24
    3d48:	80 91 c3 04 	lds	r24, 0x04C3
    3d4c:	83 70       	andi	r24, 0x03	; 3
    3d4e:	80 93 c3 04 	sts	0x04C3, r24
    3d52:	81 e0       	ldi	r24, 0x01	; 1
    3d54:	80 93 c5 04 	sts	0x04C5, r24
    3d58:	80 91 9e 04 	lds	r24, 0x049E
    3d5c:	81 30       	cpi	r24, 0x01	; 1
    3d5e:	c1 f4       	brne	.+48     	; 0x3d90 <STEPPER_process_run_mode+0x1e0>
    3d60:	0e 94 db 1e 	call	0x3db6	; 0x3db6 <STEPPER_process_step_mode>
    3d64:	15 c0       	rjmp	.+42     	; 0x3d90 <STEPPER_process_run_mode+0x1e0>
    3d66:	90 91 b2 02 	lds	r25, 0x02B2
    3d6a:	9f 71       	andi	r25, 0x1F	; 31
    3d6c:	90 93 b2 02 	sts	0x02B2, r25
    3d70:	e0 91 c3 04 	lds	r30, 0x04C3
    3d74:	f0 e0       	ldi	r31, 0x00	; 0
    3d76:	e3 53       	subi	r30, 0x33	; 51
    3d78:	fe 4f       	sbci	r31, 0xFE	; 254
    3d7a:	80 81       	ld	r24, Z
    3d7c:	89 2b       	or	r24, r25
    3d7e:	80 93 b2 02 	sts	0x02B2, r24
    3d82:	82 e0       	ldi	r24, 0x02	; 2
    3d84:	80 93 c5 04 	sts	0x04C5, r24
    3d88:	10 92 a6 04 	sts	0x04A6, r1
    3d8c:	10 92 a5 04 	sts	0x04A5, r1
    3d90:	80 91 c6 04 	lds	r24, 0x04C6
    3d94:	88 23       	and	r24, r24
    3d96:	31 f4       	brne	.+12     	; 0x3da4 <STEPPER_process_run_mode+0x1f4>
    3d98:	82 eb       	ldi	r24, 0xB2	; 178
    3d9a:	92 e0       	ldi	r25, 0x02	; 2
    3d9c:	61 2f       	mov	r22, r17
    3d9e:	40 2f       	mov	r20, r16
    3da0:	0e 94 c2 1f 	call	0x3f84	; 0x3f84 <STEPPER_process_pwm>
    3da4:	88 b1       	in	r24, 0x08	; 8
    3da6:	83 70       	andi	r24, 0x03	; 3
    3da8:	90 91 b2 02 	lds	r25, 0x02B2
    3dac:	89 2b       	or	r24, r25
    3dae:	88 b9       	out	0x08, r24	; 8
    3db0:	1f 91       	pop	r17
    3db2:	0f 91       	pop	r16
    3db4:	08 95       	ret

00003db6 <STEPPER_process_step_mode>:
    3db6:	88 23       	and	r24, r24
    3db8:	21 f0       	breq	.+8      	; 0x3dc2 <STEPPER_process_step_mode+0xc>
    3dba:	81 30       	cpi	r24, 0x01	; 1
    3dbc:	09 f0       	breq	.+2      	; 0x3dc0 <STEPPER_process_step_mode+0xa>
    3dbe:	4e c0       	rjmp	.+156    	; 0x3e5c <STEPPER_process_step_mode+0xa6>
    3dc0:	27 c0       	rjmp	.+78     	; 0x3e10 <STEPPER_process_step_mode+0x5a>
    3dc2:	80 91 af 04 	lds	r24, 0x04AF
    3dc6:	90 91 b0 04 	lds	r25, 0x04B0
    3dca:	89 2b       	or	r24, r25
    3dcc:	49 f0       	breq	.+18     	; 0x3de0 <STEPPER_process_step_mode+0x2a>
    3dce:	80 91 af 04 	lds	r24, 0x04AF
    3dd2:	90 91 b0 04 	lds	r25, 0x04B0
    3dd6:	01 97       	sbiw	r24, 0x01	; 1
    3dd8:	90 93 b0 04 	sts	0x04B0, r25
    3ddc:	80 93 af 04 	sts	0x04AF, r24
    3de0:	80 91 cf 04 	lds	r24, 0x04CF
    3de4:	88 23       	and	r24, r24
    3de6:	d1 f5       	brne	.+116    	; 0x3e5c <STEPPER_process_step_mode+0xa6>
    3de8:	20 91 af 04 	lds	r18, 0x04AF
    3dec:	30 91 b0 04 	lds	r19, 0x04B0
    3df0:	80 91 b3 04 	lds	r24, 0x04B3
    3df4:	90 91 b4 04 	lds	r25, 0x04B4
    3df8:	28 17       	cp	r18, r24
    3dfa:	39 07       	cpc	r19, r25
    3dfc:	79 f5       	brne	.+94     	; 0x3e5c <STEPPER_process_step_mode+0xa6>
    3dfe:	80 e0       	ldi	r24, 0x00	; 0
    3e00:	60 e0       	ldi	r22, 0x00	; 0
    3e02:	70 e0       	ldi	r23, 0x00	; 0
    3e04:	0e 94 e5 11 	call	0x23ca	; 0x23ca <STEPPER_set_speed>
    3e08:	81 e0       	ldi	r24, 0x01	; 1
    3e0a:	80 93 cf 04 	sts	0x04CF, r24
    3e0e:	08 95       	ret
    3e10:	80 91 b1 04 	lds	r24, 0x04B1
    3e14:	90 91 b2 04 	lds	r25, 0x04B2
    3e18:	89 2b       	or	r24, r25
    3e1a:	49 f0       	breq	.+18     	; 0x3e2e <STEPPER_process_step_mode+0x78>
    3e1c:	80 91 b1 04 	lds	r24, 0x04B1
    3e20:	90 91 b2 04 	lds	r25, 0x04B2
    3e24:	01 97       	sbiw	r24, 0x01	; 1
    3e26:	90 93 b2 04 	sts	0x04B2, r25
    3e2a:	80 93 b1 04 	sts	0x04B1, r24
    3e2e:	80 91 d0 04 	lds	r24, 0x04D0
    3e32:	88 23       	and	r24, r24
    3e34:	99 f4       	brne	.+38     	; 0x3e5c <STEPPER_process_step_mode+0xa6>
    3e36:	20 91 b1 04 	lds	r18, 0x04B1
    3e3a:	30 91 b2 04 	lds	r19, 0x04B2
    3e3e:	80 91 b5 04 	lds	r24, 0x04B5
    3e42:	90 91 b6 04 	lds	r25, 0x04B6
    3e46:	28 17       	cp	r18, r24
    3e48:	39 07       	cpc	r19, r25
    3e4a:	41 f4       	brne	.+16     	; 0x3e5c <STEPPER_process_step_mode+0xa6>
    3e4c:	81 e0       	ldi	r24, 0x01	; 1
    3e4e:	60 e0       	ldi	r22, 0x00	; 0
    3e50:	70 e0       	ldi	r23, 0x00	; 0
    3e52:	0e 94 e5 11 	call	0x23ca	; 0x23ca <STEPPER_set_speed>
    3e56:	81 e0       	ldi	r24, 0x01	; 1
    3e58:	80 93 d0 04 	sts	0x04D0, r24
    3e5c:	08 95       	ret

00003e5e <STEPPER_stop>:
    3e5e:	0f 93       	push	r16
    3e60:	1f 93       	push	r17
    3e62:	18 2f       	mov	r17, r24
    3e64:	06 2f       	mov	r16, r22
    3e66:	66 23       	and	r22, r22
    3e68:	49 f4       	brne	.+18     	; 0x3e7c <STEPPER_stop+0x1e>
    3e6a:	60 e0       	ldi	r22, 0x00	; 0
    3e6c:	70 e0       	ldi	r23, 0x00	; 0
    3e6e:	0e 94 e5 11 	call	0x23ca	; 0x23ca <STEPPER_set_speed>
    3e72:	81 2f       	mov	r24, r17
    3e74:	60 e0       	ldi	r22, 0x00	; 0
    3e76:	70 e0       	ldi	r23, 0x00	; 0
    3e78:	0e 94 3c 1a 	call	0x3478	; 0x3478 <STEPPER_set_steps>
    3e7c:	81 e0       	ldi	r24, 0x01	; 1
    3e7e:	80 93 d3 04 	sts	0x04D3, r24
    3e82:	11 30       	cpi	r17, 0x01	; 1
    3e84:	51 f0       	breq	.+20     	; 0x3e9a <STEPPER_stop+0x3c>
    3e86:	11 30       	cpi	r17, 0x01	; 1
    3e88:	18 f0       	brcs	.+6      	; 0x3e90 <STEPPER_stop+0x32>
    3e8a:	12 30       	cpi	r17, 0x02	; 2
    3e8c:	41 f4       	brne	.+16     	; 0x3e9e <STEPPER_stop+0x40>
    3e8e:	03 c0       	rjmp	.+6      	; 0x3e96 <STEPPER_stop+0x38>
    3e90:	00 93 bb 04 	sts	0x04BB, r16
    3e94:	04 c0       	rjmp	.+8      	; 0x3e9e <STEPPER_stop+0x40>
    3e96:	00 93 bb 04 	sts	0x04BB, r16
    3e9a:	00 93 bc 04 	sts	0x04BC, r16
    3e9e:	10 92 d3 04 	sts	0x04D3, r1
    3ea2:	1f 91       	pop	r17
    3ea4:	0f 91       	pop	r16
    3ea6:	08 95       	ret

00003ea8 <TMRSRVC_process>:
    3ea8:	ff 92       	push	r15
    3eaa:	0f 93       	push	r16
    3eac:	1f 93       	push	r17
    3eae:	cf 93       	push	r28
    3eb0:	df 93       	push	r29
    3eb2:	80 91 0d 05 	lds	r24, 0x050D
    3eb6:	88 23       	and	r24, r24
    3eb8:	09 f4       	brne	.+2      	; 0x3ebc <TMRSRVC_process+0x14>
    3eba:	59 c0       	rjmp	.+178    	; 0x3f6e <TMRSRVC_process+0xc6>
    3ebc:	00 91 0e 05 	lds	r16, 0x050E
    3ec0:	10 91 0f 05 	lds	r17, 0x050F
    3ec4:	f8 01       	movw	r30, r16
    3ec6:	c0 81       	ld	r28, Z
    3ec8:	d1 81       	ldd	r29, Z+1	; 0x01
    3eca:	8c 81       	ldd	r24, Y+4	; 0x04
    3ecc:	9d 81       	ldd	r25, Y+5	; 0x05
    3ece:	01 97       	sbiw	r24, 0x01	; 1
    3ed0:	9d 83       	std	Y+5, r25	; 0x05
    3ed2:	8c 83       	std	Y+4, r24	; 0x04
    3ed4:	18 16       	cp	r1, r24
    3ed6:	19 06       	cpc	r1, r25
    3ed8:	0c f4       	brge	.+2      	; 0x3edc <TMRSRVC_process+0x34>
    3eda:	49 c0       	rjmp	.+146    	; 0x3f6e <TMRSRVC_process+0xc6>
    3edc:	89 81       	ldd	r24, Y+1	; 0x01
    3ede:	80 ff       	sbrs	r24, 0
    3ee0:	05 c0       	rjmp	.+10     	; 0x3eec <TMRSRVC_process+0x44>
    3ee2:	8e 81       	ldd	r24, Y+6	; 0x06
    3ee4:	88 23       	and	r24, r24
    3ee6:	11 f4       	brne	.+4      	; 0x3eec <TMRSRVC_process+0x44>
    3ee8:	81 e0       	ldi	r24, 0x01	; 1
    3eea:	8e 83       	std	Y+6, r24	; 0x06
    3eec:	89 81       	ldd	r24, Y+1	; 0x01
    3eee:	81 ff       	sbrs	r24, 1
    3ef0:	03 c0       	rjmp	.+6      	; 0x3ef8 <TMRSRVC_process+0x50>
    3ef2:	ef 81       	ldd	r30, Y+7	; 0x07
    3ef4:	f8 85       	ldd	r31, Y+8	; 0x08
    3ef6:	09 95       	icall
    3ef8:	80 91 0d 05 	lds	r24, 0x050D
    3efc:	82 30       	cpi	r24, 0x02	; 2
    3efe:	a8 f0       	brcs	.+42     	; 0x3f2a <TMRSRVC_process+0x82>
    3f00:	f8 01       	movw	r30, r16
    3f02:	82 81       	ldd	r24, Z+2	; 0x02
    3f04:	93 81       	ldd	r25, Z+3	; 0x03
    3f06:	90 93 0f 05 	sts	0x050F, r25
    3f0a:	80 93 0e 05 	sts	0x050E, r24
    3f0e:	13 82       	std	Z+3, r1	; 0x03
    3f10:	12 82       	std	Z+2, r1	; 0x02
    3f12:	e0 91 00 00 	lds	r30, 0x0000
    3f16:	f0 91 01 00 	lds	r31, 0x0001
    3f1a:	84 81       	ldd	r24, Z+4	; 0x04
    3f1c:	95 81       	ldd	r25, Z+5	; 0x05
    3f1e:	18 16       	cp	r1, r24
    3f20:	19 06       	cpc	r1, r25
    3f22:	3c f0       	brlt	.+14     	; 0x3f32 <TMRSRVC_process+0x8a>
    3f24:	ff 24       	eor	r15, r15
    3f26:	f3 94       	inc	r15
    3f28:	05 c0       	rjmp	.+10     	; 0x3f34 <TMRSRVC_process+0x8c>
    3f2a:	10 92 0f 05 	sts	0x050F, r1
    3f2e:	10 92 0e 05 	sts	0x050E, r1
    3f32:	ff 24       	eor	r15, r15
    3f34:	80 91 0d 05 	lds	r24, 0x050D
    3f38:	81 50       	subi	r24, 0x01	; 1
    3f3a:	80 93 0d 05 	sts	0x050D, r24
    3f3e:	80 91 0d 05 	lds	r24, 0x050D
    3f42:	88 23       	and	r24, r24
    3f44:	11 f4       	brne	.+4      	; 0x3f4a <TMRSRVC_process+0xa2>
    3f46:	0e 94 bf 1f 	call	0x3f7e	; 0x3f7e <TMRSRVC_stop>
    3f4a:	89 81       	ldd	r24, Y+1	; 0x01
    3f4c:	82 ff       	sbrs	r24, 2
    3f4e:	08 c0       	rjmp	.+16     	; 0x3f60 <TMRSRVC_process+0xb8>
    3f50:	8a 81       	ldd	r24, Y+2	; 0x02
    3f52:	9b 81       	ldd	r25, Y+3	; 0x03
    3f54:	9d 83       	std	Y+5, r25	; 0x05
    3f56:	8c 83       	std	Y+4, r24	; 0x04
    3f58:	c8 01       	movw	r24, r16
    3f5a:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <TMRSRVC_insert>
    3f5e:	08 c0       	rjmp	.+16     	; 0x3f70 <TMRSRVC_process+0xc8>
    3f60:	c8 01       	movw	r24, r16
    3f62:	0e 94 c8 28 	call	0x5190	; 0x5190 <free>
    3f66:	89 81       	ldd	r24, Y+1	; 0x01
    3f68:	8f 7e       	andi	r24, 0xEF	; 239
    3f6a:	89 83       	std	Y+1, r24	; 0x01
    3f6c:	01 c0       	rjmp	.+2      	; 0x3f70 <TMRSRVC_process+0xc8>
    3f6e:	ff 24       	eor	r15, r15
    3f70:	8f 2d       	mov	r24, r15
    3f72:	df 91       	pop	r29
    3f74:	cf 91       	pop	r28
    3f76:	1f 91       	pop	r17
    3f78:	0f 91       	pop	r16
    3f7a:	ff 90       	pop	r15
    3f7c:	08 95       	ret

00003f7e <TMRSRVC_stop>:
    3f7e:	10 92 b1 02 	sts	0x02B1, r1
    3f82:	08 95       	ret

00003f84 <STEPPER_process_pwm>:
    3f84:	fc 01       	movw	r30, r24
    3f86:	80 91 c4 04 	lds	r24, 0x04C4
    3f8a:	82 30       	cpi	r24, 0x02	; 2
    3f8c:	69 f4       	brne	.+26     	; 0x3fa8 <STEPPER_process_pwm+0x24>
    3f8e:	80 91 b6 02 	lds	r24, 0x02B6
    3f92:	91 e0       	ldi	r25, 0x01	; 1
    3f94:	89 27       	eor	r24, r25
    3f96:	80 93 b6 02 	sts	0x02B6, r24
    3f9a:	88 23       	and	r24, r24
    3f9c:	09 f0       	breq	.+2      	; 0x3fa0 <STEPPER_process_pwm+0x1c>
    3f9e:	3e c0       	rjmp	.+124    	; 0x401c <STEPPER_process_pwm+0x98>
    3fa0:	80 81       	ld	r24, Z
    3fa2:	83 7e       	andi	r24, 0xE3	; 227
    3fa4:	80 83       	st	Z, r24
    3fa6:	3a c0       	rjmp	.+116    	; 0x401c <STEPPER_process_pwm+0x98>
    3fa8:	80 91 a3 04 	lds	r24, 0x04A3
    3fac:	90 91 a4 04 	lds	r25, 0x04A4
    3fb0:	c3 97       	sbiw	r24, 0x33	; 51
    3fb2:	a4 f5       	brge	.+104    	; 0x401c <STEPPER_process_pwm+0x98>
    3fb4:	66 23       	and	r22, r22
    3fb6:	d1 f0       	breq	.+52     	; 0x3fec <STEPPER_process_pwm+0x68>
    3fb8:	20 91 a3 04 	lds	r18, 0x04A3
    3fbc:	30 91 a4 04 	lds	r19, 0x04A4
    3fc0:	80 e6       	ldi	r24, 0x60	; 96
    3fc2:	90 e0       	ldi	r25, 0x00	; 0
    3fc4:	bc 01       	movw	r22, r24
    3fc6:	26 9f       	mul	r18, r22
    3fc8:	c0 01       	movw	r24, r0
    3fca:	27 9f       	mul	r18, r23
    3fcc:	90 0d       	add	r25, r0
    3fce:	36 9f       	mul	r19, r22
    3fd0:	90 0d       	add	r25, r0
    3fd2:	11 24       	eor	r1, r1
    3fd4:	88 0f       	add	r24, r24
    3fd6:	89 2f       	mov	r24, r25
    3fd8:	88 1f       	adc	r24, r24
    3fda:	99 0b       	sbc	r25, r25
    3fdc:	90 93 b8 04 	sts	0x04B8, r25
    3fe0:	80 93 b7 04 	sts	0x04B7, r24
    3fe4:	81 e0       	ldi	r24, 0x01	; 1
    3fe6:	80 93 b4 02 	sts	0x02B4, r24
    3fea:	18 c0       	rjmp	.+48     	; 0x401c <STEPPER_process_pwm+0x98>
    3fec:	80 91 b4 02 	lds	r24, 0x02B4
    3ff0:	88 23       	and	r24, r24
    3ff2:	a1 f0       	breq	.+40     	; 0x401c <STEPPER_process_pwm+0x98>
    3ff4:	80 91 b7 04 	lds	r24, 0x04B7
    3ff8:	90 91 b8 04 	lds	r25, 0x04B8
    3ffc:	01 97       	sbiw	r24, 0x01	; 1
    3ffe:	90 93 b8 04 	sts	0x04B8, r25
    4002:	80 93 b7 04 	sts	0x04B7, r24
    4006:	80 91 b7 04 	lds	r24, 0x04B7
    400a:	90 91 b8 04 	lds	r25, 0x04B8
    400e:	89 2b       	or	r24, r25
    4010:	29 f4       	brne	.+10     	; 0x401c <STEPPER_process_pwm+0x98>
    4012:	80 81       	ld	r24, Z
    4014:	83 7e       	andi	r24, 0xE3	; 227
    4016:	80 83       	st	Z, r24
    4018:	10 92 b4 02 	sts	0x02B4, r1
    401c:	80 91 c5 04 	lds	r24, 0x04C5
    4020:	82 30       	cpi	r24, 0x02	; 2
    4022:	69 f4       	brne	.+26     	; 0x403e <STEPPER_process_pwm+0xba>
    4024:	80 91 b5 02 	lds	r24, 0x02B5
    4028:	91 e0       	ldi	r25, 0x01	; 1
    402a:	89 27       	eor	r24, r25
    402c:	80 93 b5 02 	sts	0x02B5, r24
    4030:	88 23       	and	r24, r24
    4032:	09 f0       	breq	.+2      	; 0x4036 <STEPPER_process_pwm+0xb2>
    4034:	3e c0       	rjmp	.+124    	; 0x40b2 <STEPPER_process_pwm+0x12e>
    4036:	80 81       	ld	r24, Z
    4038:	8f 71       	andi	r24, 0x1F	; 31
    403a:	80 83       	st	Z, r24
    403c:	08 95       	ret
    403e:	80 91 a5 04 	lds	r24, 0x04A5
    4042:	90 91 a6 04 	lds	r25, 0x04A6
    4046:	c3 97       	sbiw	r24, 0x33	; 51
    4048:	a4 f5       	brge	.+104    	; 0x40b2 <STEPPER_process_pwm+0x12e>
    404a:	44 23       	and	r20, r20
    404c:	d1 f0       	breq	.+52     	; 0x4082 <STEPPER_process_pwm+0xfe>
    404e:	20 91 a5 04 	lds	r18, 0x04A5
    4052:	30 91 a6 04 	lds	r19, 0x04A6
    4056:	80 e6       	ldi	r24, 0x60	; 96
    4058:	90 e0       	ldi	r25, 0x00	; 0
    405a:	ac 01       	movw	r20, r24
    405c:	24 9f       	mul	r18, r20
    405e:	c0 01       	movw	r24, r0
    4060:	25 9f       	mul	r18, r21
    4062:	90 0d       	add	r25, r0
    4064:	34 9f       	mul	r19, r20
    4066:	90 0d       	add	r25, r0
    4068:	11 24       	eor	r1, r1
    406a:	88 0f       	add	r24, r24
    406c:	89 2f       	mov	r24, r25
    406e:	88 1f       	adc	r24, r24
    4070:	99 0b       	sbc	r25, r25
    4072:	90 93 ba 04 	sts	0x04BA, r25
    4076:	80 93 b9 04 	sts	0x04B9, r24
    407a:	81 e0       	ldi	r24, 0x01	; 1
    407c:	80 93 b3 02 	sts	0x02B3, r24
    4080:	08 95       	ret
    4082:	80 91 b3 02 	lds	r24, 0x02B3
    4086:	88 23       	and	r24, r24
    4088:	a1 f0       	breq	.+40     	; 0x40b2 <STEPPER_process_pwm+0x12e>
    408a:	80 91 b9 04 	lds	r24, 0x04B9
    408e:	90 91 ba 04 	lds	r25, 0x04BA
    4092:	01 97       	sbiw	r24, 0x01	; 1
    4094:	90 93 ba 04 	sts	0x04BA, r25
    4098:	80 93 b9 04 	sts	0x04B9, r24
    409c:	80 91 b9 04 	lds	r24, 0x04B9
    40a0:	90 91 ba 04 	lds	r25, 0x04BA
    40a4:	89 2b       	or	r24, r25
    40a6:	29 f4       	brne	.+10     	; 0x40b2 <STEPPER_process_pwm+0x12e>
    40a8:	80 81       	ld	r24, Z
    40aa:	8f 71       	andi	r24, 0x1F	; 31
    40ac:	80 83       	st	Z, r24
    40ae:	10 92 b3 02 	sts	0x02B3, r1
    40b2:	08 95       	ret

000040b4 <__subsf3>:
    40b4:	50 58       	subi	r21, 0x80	; 128

000040b6 <__addsf3>:
    40b6:	bb 27       	eor	r27, r27
    40b8:	aa 27       	eor	r26, r26
    40ba:	0e d0       	rcall	.+28     	; 0x40d8 <__addsf3x>
    40bc:	75 c1       	rjmp	.+746    	; 0x43a8 <__fp_round>
    40be:	66 d1       	rcall	.+716    	; 0x438c <__fp_pscA>
    40c0:	30 f0       	brcs	.+12     	; 0x40ce <__addsf3+0x18>
    40c2:	6b d1       	rcall	.+726    	; 0x439a <__fp_pscB>
    40c4:	20 f0       	brcs	.+8      	; 0x40ce <__addsf3+0x18>
    40c6:	31 f4       	brne	.+12     	; 0x40d4 <__addsf3+0x1e>
    40c8:	9f 3f       	cpi	r25, 0xFF	; 255
    40ca:	11 f4       	brne	.+4      	; 0x40d0 <__addsf3+0x1a>
    40cc:	1e f4       	brtc	.+6      	; 0x40d4 <__addsf3+0x1e>
    40ce:	5b c1       	rjmp	.+694    	; 0x4386 <__fp_nan>
    40d0:	0e f4       	brtc	.+2      	; 0x40d4 <__addsf3+0x1e>
    40d2:	e0 95       	com	r30
    40d4:	e7 fb       	bst	r30, 7
    40d6:	51 c1       	rjmp	.+674    	; 0x437a <__fp_inf>

000040d8 <__addsf3x>:
    40d8:	e9 2f       	mov	r30, r25
    40da:	77 d1       	rcall	.+750    	; 0x43ca <__fp_split3>
    40dc:	80 f3       	brcs	.-32     	; 0x40be <__addsf3+0x8>
    40de:	ba 17       	cp	r27, r26
    40e0:	62 07       	cpc	r22, r18
    40e2:	73 07       	cpc	r23, r19
    40e4:	84 07       	cpc	r24, r20
    40e6:	95 07       	cpc	r25, r21
    40e8:	18 f0       	brcs	.+6      	; 0x40f0 <__addsf3x+0x18>
    40ea:	71 f4       	brne	.+28     	; 0x4108 <__addsf3x+0x30>
    40ec:	9e f5       	brtc	.+102    	; 0x4154 <__addsf3x+0x7c>
    40ee:	8f c1       	rjmp	.+798    	; 0x440e <__fp_zero>
    40f0:	0e f4       	brtc	.+2      	; 0x40f4 <__addsf3x+0x1c>
    40f2:	e0 95       	com	r30
    40f4:	0b 2e       	mov	r0, r27
    40f6:	ba 2f       	mov	r27, r26
    40f8:	a0 2d       	mov	r26, r0
    40fa:	0b 01       	movw	r0, r22
    40fc:	b9 01       	movw	r22, r18
    40fe:	90 01       	movw	r18, r0
    4100:	0c 01       	movw	r0, r24
    4102:	ca 01       	movw	r24, r20
    4104:	a0 01       	movw	r20, r0
    4106:	11 24       	eor	r1, r1
    4108:	ff 27       	eor	r31, r31
    410a:	59 1b       	sub	r21, r25
    410c:	99 f0       	breq	.+38     	; 0x4134 <__addsf3x+0x5c>
    410e:	59 3f       	cpi	r21, 0xF9	; 249
    4110:	50 f4       	brcc	.+20     	; 0x4126 <__addsf3x+0x4e>
    4112:	50 3e       	cpi	r21, 0xE0	; 224
    4114:	68 f1       	brcs	.+90     	; 0x4170 <__addsf3x+0x98>
    4116:	1a 16       	cp	r1, r26
    4118:	f0 40       	sbci	r31, 0x00	; 0
    411a:	a2 2f       	mov	r26, r18
    411c:	23 2f       	mov	r18, r19
    411e:	34 2f       	mov	r19, r20
    4120:	44 27       	eor	r20, r20
    4122:	58 5f       	subi	r21, 0xF8	; 248
    4124:	f3 cf       	rjmp	.-26     	; 0x410c <__addsf3x+0x34>
    4126:	46 95       	lsr	r20
    4128:	37 95       	ror	r19
    412a:	27 95       	ror	r18
    412c:	a7 95       	ror	r26
    412e:	f0 40       	sbci	r31, 0x00	; 0
    4130:	53 95       	inc	r21
    4132:	c9 f7       	brne	.-14     	; 0x4126 <__addsf3x+0x4e>
    4134:	7e f4       	brtc	.+30     	; 0x4154 <__addsf3x+0x7c>
    4136:	1f 16       	cp	r1, r31
    4138:	ba 0b       	sbc	r27, r26
    413a:	62 0b       	sbc	r22, r18
    413c:	73 0b       	sbc	r23, r19
    413e:	84 0b       	sbc	r24, r20
    4140:	ba f0       	brmi	.+46     	; 0x4170 <__addsf3x+0x98>
    4142:	91 50       	subi	r25, 0x01	; 1
    4144:	a1 f0       	breq	.+40     	; 0x416e <__addsf3x+0x96>
    4146:	ff 0f       	add	r31, r31
    4148:	bb 1f       	adc	r27, r27
    414a:	66 1f       	adc	r22, r22
    414c:	77 1f       	adc	r23, r23
    414e:	88 1f       	adc	r24, r24
    4150:	c2 f7       	brpl	.-16     	; 0x4142 <__addsf3x+0x6a>
    4152:	0e c0       	rjmp	.+28     	; 0x4170 <__addsf3x+0x98>
    4154:	ba 0f       	add	r27, r26
    4156:	62 1f       	adc	r22, r18
    4158:	73 1f       	adc	r23, r19
    415a:	84 1f       	adc	r24, r20
    415c:	48 f4       	brcc	.+18     	; 0x4170 <__addsf3x+0x98>
    415e:	87 95       	ror	r24
    4160:	77 95       	ror	r23
    4162:	67 95       	ror	r22
    4164:	b7 95       	ror	r27
    4166:	f7 95       	ror	r31
    4168:	9e 3f       	cpi	r25, 0xFE	; 254
    416a:	08 f0       	brcs	.+2      	; 0x416e <__addsf3x+0x96>
    416c:	b3 cf       	rjmp	.-154    	; 0x40d4 <__addsf3+0x1e>
    416e:	93 95       	inc	r25
    4170:	88 0f       	add	r24, r24
    4172:	08 f0       	brcs	.+2      	; 0x4176 <__addsf3x+0x9e>
    4174:	99 27       	eor	r25, r25
    4176:	ee 0f       	add	r30, r30
    4178:	97 95       	ror	r25
    417a:	87 95       	ror	r24
    417c:	08 95       	ret

0000417e <__cmpsf2>:
    417e:	d9 d0       	rcall	.+434    	; 0x4332 <__fp_cmp>
    4180:	08 f4       	brcc	.+2      	; 0x4184 <__cmpsf2+0x6>
    4182:	81 e0       	ldi	r24, 0x01	; 1
    4184:	08 95       	ret

00004186 <__divsf3>:
    4186:	0c d0       	rcall	.+24     	; 0x41a0 <__divsf3x>
    4188:	0f c1       	rjmp	.+542    	; 0x43a8 <__fp_round>
    418a:	07 d1       	rcall	.+526    	; 0x439a <__fp_pscB>
    418c:	40 f0       	brcs	.+16     	; 0x419e <__divsf3+0x18>
    418e:	fe d0       	rcall	.+508    	; 0x438c <__fp_pscA>
    4190:	30 f0       	brcs	.+12     	; 0x419e <__divsf3+0x18>
    4192:	21 f4       	brne	.+8      	; 0x419c <__divsf3+0x16>
    4194:	5f 3f       	cpi	r21, 0xFF	; 255
    4196:	19 f0       	breq	.+6      	; 0x419e <__divsf3+0x18>
    4198:	f0 c0       	rjmp	.+480    	; 0x437a <__fp_inf>
    419a:	51 11       	cpse	r21, r1
    419c:	39 c1       	rjmp	.+626    	; 0x4410 <__fp_szero>
    419e:	f3 c0       	rjmp	.+486    	; 0x4386 <__fp_nan>

000041a0 <__divsf3x>:
    41a0:	14 d1       	rcall	.+552    	; 0x43ca <__fp_split3>
    41a2:	98 f3       	brcs	.-26     	; 0x418a <__divsf3+0x4>

000041a4 <__divsf3_pse>:
    41a4:	99 23       	and	r25, r25
    41a6:	c9 f3       	breq	.-14     	; 0x419a <__divsf3+0x14>
    41a8:	55 23       	and	r21, r21
    41aa:	b1 f3       	breq	.-20     	; 0x4198 <__divsf3+0x12>
    41ac:	95 1b       	sub	r25, r21
    41ae:	55 0b       	sbc	r21, r21
    41b0:	bb 27       	eor	r27, r27
    41b2:	aa 27       	eor	r26, r26
    41b4:	62 17       	cp	r22, r18
    41b6:	73 07       	cpc	r23, r19
    41b8:	84 07       	cpc	r24, r20
    41ba:	38 f0       	brcs	.+14     	; 0x41ca <__divsf3_pse+0x26>
    41bc:	9f 5f       	subi	r25, 0xFF	; 255
    41be:	5f 4f       	sbci	r21, 0xFF	; 255
    41c0:	22 0f       	add	r18, r18
    41c2:	33 1f       	adc	r19, r19
    41c4:	44 1f       	adc	r20, r20
    41c6:	aa 1f       	adc	r26, r26
    41c8:	a9 f3       	breq	.-22     	; 0x41b4 <__divsf3_pse+0x10>
    41ca:	33 d0       	rcall	.+102    	; 0x4232 <__divsf3_pse+0x8e>
    41cc:	0e 2e       	mov	r0, r30
    41ce:	3a f0       	brmi	.+14     	; 0x41de <__divsf3_pse+0x3a>
    41d0:	e0 e8       	ldi	r30, 0x80	; 128
    41d2:	30 d0       	rcall	.+96     	; 0x4234 <__divsf3_pse+0x90>
    41d4:	91 50       	subi	r25, 0x01	; 1
    41d6:	50 40       	sbci	r21, 0x00	; 0
    41d8:	e6 95       	lsr	r30
    41da:	00 1c       	adc	r0, r0
    41dc:	ca f7       	brpl	.-14     	; 0x41d0 <__divsf3_pse+0x2c>
    41de:	29 d0       	rcall	.+82     	; 0x4232 <__divsf3_pse+0x8e>
    41e0:	fe 2f       	mov	r31, r30
    41e2:	27 d0       	rcall	.+78     	; 0x4232 <__divsf3_pse+0x8e>
    41e4:	66 0f       	add	r22, r22
    41e6:	77 1f       	adc	r23, r23
    41e8:	88 1f       	adc	r24, r24
    41ea:	bb 1f       	adc	r27, r27
    41ec:	26 17       	cp	r18, r22
    41ee:	37 07       	cpc	r19, r23
    41f0:	48 07       	cpc	r20, r24
    41f2:	ab 07       	cpc	r26, r27
    41f4:	b0 e8       	ldi	r27, 0x80	; 128
    41f6:	09 f0       	breq	.+2      	; 0x41fa <__divsf3_pse+0x56>
    41f8:	bb 0b       	sbc	r27, r27
    41fa:	80 2d       	mov	r24, r0
    41fc:	bf 01       	movw	r22, r30
    41fe:	ff 27       	eor	r31, r31
    4200:	93 58       	subi	r25, 0x83	; 131
    4202:	5f 4f       	sbci	r21, 0xFF	; 255
    4204:	2a f0       	brmi	.+10     	; 0x4210 <__divsf3_pse+0x6c>
    4206:	9e 3f       	cpi	r25, 0xFE	; 254
    4208:	51 05       	cpc	r21, r1
    420a:	68 f0       	brcs	.+26     	; 0x4226 <__divsf3_pse+0x82>
    420c:	b6 c0       	rjmp	.+364    	; 0x437a <__fp_inf>
    420e:	00 c1       	rjmp	.+512    	; 0x4410 <__fp_szero>
    4210:	5f 3f       	cpi	r21, 0xFF	; 255
    4212:	ec f3       	brlt	.-6      	; 0x420e <__divsf3_pse+0x6a>
    4214:	98 3e       	cpi	r25, 0xE8	; 232
    4216:	dc f3       	brlt	.-10     	; 0x420e <__divsf3_pse+0x6a>
    4218:	86 95       	lsr	r24
    421a:	77 95       	ror	r23
    421c:	67 95       	ror	r22
    421e:	b7 95       	ror	r27
    4220:	f7 95       	ror	r31
    4222:	9f 5f       	subi	r25, 0xFF	; 255
    4224:	c9 f7       	brne	.-14     	; 0x4218 <__divsf3_pse+0x74>
    4226:	88 0f       	add	r24, r24
    4228:	91 1d       	adc	r25, r1
    422a:	96 95       	lsr	r25
    422c:	87 95       	ror	r24
    422e:	97 f9       	bld	r25, 7
    4230:	08 95       	ret
    4232:	e1 e0       	ldi	r30, 0x01	; 1
    4234:	66 0f       	add	r22, r22
    4236:	77 1f       	adc	r23, r23
    4238:	88 1f       	adc	r24, r24
    423a:	bb 1f       	adc	r27, r27
    423c:	62 17       	cp	r22, r18
    423e:	73 07       	cpc	r23, r19
    4240:	84 07       	cpc	r24, r20
    4242:	ba 07       	cpc	r27, r26
    4244:	20 f0       	brcs	.+8      	; 0x424e <__divsf3_pse+0xaa>
    4246:	62 1b       	sub	r22, r18
    4248:	73 0b       	sbc	r23, r19
    424a:	84 0b       	sbc	r24, r20
    424c:	ba 0b       	sbc	r27, r26
    424e:	ee 1f       	adc	r30, r30
    4250:	88 f7       	brcc	.-30     	; 0x4234 <__divsf3_pse+0x90>
    4252:	e0 95       	com	r30
    4254:	08 95       	ret

00004256 <__fixsfsi>:
    4256:	04 d0       	rcall	.+8      	; 0x4260 <__fixunssfsi>
    4258:	68 94       	set
    425a:	b1 11       	cpse	r27, r1
    425c:	d9 c0       	rjmp	.+434    	; 0x4410 <__fp_szero>
    425e:	08 95       	ret

00004260 <__fixunssfsi>:
    4260:	bc d0       	rcall	.+376    	; 0x43da <__fp_splitA>
    4262:	88 f0       	brcs	.+34     	; 0x4286 <__fixunssfsi+0x26>
    4264:	9f 57       	subi	r25, 0x7F	; 127
    4266:	90 f0       	brcs	.+36     	; 0x428c <__fixunssfsi+0x2c>
    4268:	b9 2f       	mov	r27, r25
    426a:	99 27       	eor	r25, r25
    426c:	b7 51       	subi	r27, 0x17	; 23
    426e:	a0 f0       	brcs	.+40     	; 0x4298 <__fixunssfsi+0x38>
    4270:	d1 f0       	breq	.+52     	; 0x42a6 <__fixunssfsi+0x46>
    4272:	66 0f       	add	r22, r22
    4274:	77 1f       	adc	r23, r23
    4276:	88 1f       	adc	r24, r24
    4278:	99 1f       	adc	r25, r25
    427a:	1a f0       	brmi	.+6      	; 0x4282 <__fixunssfsi+0x22>
    427c:	ba 95       	dec	r27
    427e:	c9 f7       	brne	.-14     	; 0x4272 <__fixunssfsi+0x12>
    4280:	12 c0       	rjmp	.+36     	; 0x42a6 <__fixunssfsi+0x46>
    4282:	b1 30       	cpi	r27, 0x01	; 1
    4284:	81 f0       	breq	.+32     	; 0x42a6 <__fixunssfsi+0x46>
    4286:	c3 d0       	rcall	.+390    	; 0x440e <__fp_zero>
    4288:	b1 e0       	ldi	r27, 0x01	; 1
    428a:	08 95       	ret
    428c:	c0 c0       	rjmp	.+384    	; 0x440e <__fp_zero>
    428e:	67 2f       	mov	r22, r23
    4290:	78 2f       	mov	r23, r24
    4292:	88 27       	eor	r24, r24
    4294:	b8 5f       	subi	r27, 0xF8	; 248
    4296:	39 f0       	breq	.+14     	; 0x42a6 <__fixunssfsi+0x46>
    4298:	b9 3f       	cpi	r27, 0xF9	; 249
    429a:	cc f3       	brlt	.-14     	; 0x428e <__fixunssfsi+0x2e>
    429c:	86 95       	lsr	r24
    429e:	77 95       	ror	r23
    42a0:	67 95       	ror	r22
    42a2:	b3 95       	inc	r27
    42a4:	d9 f7       	brne	.-10     	; 0x429c <__fixunssfsi+0x3c>
    42a6:	3e f4       	brtc	.+14     	; 0x42b6 <__fixunssfsi+0x56>
    42a8:	90 95       	com	r25
    42aa:	80 95       	com	r24
    42ac:	70 95       	com	r23
    42ae:	61 95       	neg	r22
    42b0:	7f 4f       	sbci	r23, 0xFF	; 255
    42b2:	8f 4f       	sbci	r24, 0xFF	; 255
    42b4:	9f 4f       	sbci	r25, 0xFF	; 255
    42b6:	08 95       	ret

000042b8 <__floatunsisf>:
    42b8:	e8 94       	clt
    42ba:	09 c0       	rjmp	.+18     	; 0x42ce <__floatsisf+0x12>

000042bc <__floatsisf>:
    42bc:	97 fb       	bst	r25, 7
    42be:	3e f4       	brtc	.+14     	; 0x42ce <__floatsisf+0x12>
    42c0:	90 95       	com	r25
    42c2:	80 95       	com	r24
    42c4:	70 95       	com	r23
    42c6:	61 95       	neg	r22
    42c8:	7f 4f       	sbci	r23, 0xFF	; 255
    42ca:	8f 4f       	sbci	r24, 0xFF	; 255
    42cc:	9f 4f       	sbci	r25, 0xFF	; 255
    42ce:	99 23       	and	r25, r25
    42d0:	a9 f0       	breq	.+42     	; 0x42fc <__floatsisf+0x40>
    42d2:	f9 2f       	mov	r31, r25
    42d4:	96 e9       	ldi	r25, 0x96	; 150
    42d6:	bb 27       	eor	r27, r27
    42d8:	93 95       	inc	r25
    42da:	f6 95       	lsr	r31
    42dc:	87 95       	ror	r24
    42de:	77 95       	ror	r23
    42e0:	67 95       	ror	r22
    42e2:	b7 95       	ror	r27
    42e4:	f1 11       	cpse	r31, r1
    42e6:	f8 cf       	rjmp	.-16     	; 0x42d8 <__floatsisf+0x1c>
    42e8:	fa f4       	brpl	.+62     	; 0x4328 <__floatsisf+0x6c>
    42ea:	bb 0f       	add	r27, r27
    42ec:	11 f4       	brne	.+4      	; 0x42f2 <__floatsisf+0x36>
    42ee:	60 ff       	sbrs	r22, 0
    42f0:	1b c0       	rjmp	.+54     	; 0x4328 <__floatsisf+0x6c>
    42f2:	6f 5f       	subi	r22, 0xFF	; 255
    42f4:	7f 4f       	sbci	r23, 0xFF	; 255
    42f6:	8f 4f       	sbci	r24, 0xFF	; 255
    42f8:	9f 4f       	sbci	r25, 0xFF	; 255
    42fa:	16 c0       	rjmp	.+44     	; 0x4328 <__floatsisf+0x6c>
    42fc:	88 23       	and	r24, r24
    42fe:	11 f0       	breq	.+4      	; 0x4304 <__floatsisf+0x48>
    4300:	96 e9       	ldi	r25, 0x96	; 150
    4302:	11 c0       	rjmp	.+34     	; 0x4326 <__floatsisf+0x6a>
    4304:	77 23       	and	r23, r23
    4306:	21 f0       	breq	.+8      	; 0x4310 <__floatsisf+0x54>
    4308:	9e e8       	ldi	r25, 0x8E	; 142
    430a:	87 2f       	mov	r24, r23
    430c:	76 2f       	mov	r23, r22
    430e:	05 c0       	rjmp	.+10     	; 0x431a <__floatsisf+0x5e>
    4310:	66 23       	and	r22, r22
    4312:	71 f0       	breq	.+28     	; 0x4330 <__floatsisf+0x74>
    4314:	96 e8       	ldi	r25, 0x86	; 134
    4316:	86 2f       	mov	r24, r22
    4318:	70 e0       	ldi	r23, 0x00	; 0
    431a:	60 e0       	ldi	r22, 0x00	; 0
    431c:	2a f0       	brmi	.+10     	; 0x4328 <__floatsisf+0x6c>
    431e:	9a 95       	dec	r25
    4320:	66 0f       	add	r22, r22
    4322:	77 1f       	adc	r23, r23
    4324:	88 1f       	adc	r24, r24
    4326:	da f7       	brpl	.-10     	; 0x431e <__floatsisf+0x62>
    4328:	88 0f       	add	r24, r24
    432a:	96 95       	lsr	r25
    432c:	87 95       	ror	r24
    432e:	97 f9       	bld	r25, 7
    4330:	08 95       	ret

00004332 <__fp_cmp>:
    4332:	99 0f       	add	r25, r25
    4334:	00 08       	sbc	r0, r0
    4336:	55 0f       	add	r21, r21
    4338:	aa 0b       	sbc	r26, r26
    433a:	e0 e8       	ldi	r30, 0x80	; 128
    433c:	fe ef       	ldi	r31, 0xFE	; 254
    433e:	16 16       	cp	r1, r22
    4340:	17 06       	cpc	r1, r23
    4342:	e8 07       	cpc	r30, r24
    4344:	f9 07       	cpc	r31, r25
    4346:	c0 f0       	brcs	.+48     	; 0x4378 <__fp_cmp+0x46>
    4348:	12 16       	cp	r1, r18
    434a:	13 06       	cpc	r1, r19
    434c:	e4 07       	cpc	r30, r20
    434e:	f5 07       	cpc	r31, r21
    4350:	98 f0       	brcs	.+38     	; 0x4378 <__fp_cmp+0x46>
    4352:	62 1b       	sub	r22, r18
    4354:	73 0b       	sbc	r23, r19
    4356:	84 0b       	sbc	r24, r20
    4358:	95 0b       	sbc	r25, r21
    435a:	39 f4       	brne	.+14     	; 0x436a <__fp_cmp+0x38>
    435c:	0a 26       	eor	r0, r26
    435e:	61 f0       	breq	.+24     	; 0x4378 <__fp_cmp+0x46>
    4360:	23 2b       	or	r18, r19
    4362:	24 2b       	or	r18, r20
    4364:	25 2b       	or	r18, r21
    4366:	21 f4       	brne	.+8      	; 0x4370 <__fp_cmp+0x3e>
    4368:	08 95       	ret
    436a:	0a 26       	eor	r0, r26
    436c:	09 f4       	brne	.+2      	; 0x4370 <__fp_cmp+0x3e>
    436e:	a1 40       	sbci	r26, 0x01	; 1
    4370:	a6 95       	lsr	r26
    4372:	8f ef       	ldi	r24, 0xFF	; 255
    4374:	81 1d       	adc	r24, r1
    4376:	81 1d       	adc	r24, r1
    4378:	08 95       	ret

0000437a <__fp_inf>:
    437a:	97 f9       	bld	r25, 7
    437c:	9f 67       	ori	r25, 0x7F	; 127
    437e:	80 e8       	ldi	r24, 0x80	; 128
    4380:	70 e0       	ldi	r23, 0x00	; 0
    4382:	60 e0       	ldi	r22, 0x00	; 0
    4384:	08 95       	ret

00004386 <__fp_nan>:
    4386:	9f ef       	ldi	r25, 0xFF	; 255
    4388:	80 ec       	ldi	r24, 0xC0	; 192
    438a:	08 95       	ret

0000438c <__fp_pscA>:
    438c:	00 24       	eor	r0, r0
    438e:	0a 94       	dec	r0
    4390:	16 16       	cp	r1, r22
    4392:	17 06       	cpc	r1, r23
    4394:	18 06       	cpc	r1, r24
    4396:	09 06       	cpc	r0, r25
    4398:	08 95       	ret

0000439a <__fp_pscB>:
    439a:	00 24       	eor	r0, r0
    439c:	0a 94       	dec	r0
    439e:	12 16       	cp	r1, r18
    43a0:	13 06       	cpc	r1, r19
    43a2:	14 06       	cpc	r1, r20
    43a4:	05 06       	cpc	r0, r21
    43a6:	08 95       	ret

000043a8 <__fp_round>:
    43a8:	09 2e       	mov	r0, r25
    43aa:	03 94       	inc	r0
    43ac:	00 0c       	add	r0, r0
    43ae:	11 f4       	brne	.+4      	; 0x43b4 <__fp_round+0xc>
    43b0:	88 23       	and	r24, r24
    43b2:	52 f0       	brmi	.+20     	; 0x43c8 <__fp_round+0x20>
    43b4:	bb 0f       	add	r27, r27
    43b6:	40 f4       	brcc	.+16     	; 0x43c8 <__fp_round+0x20>
    43b8:	bf 2b       	or	r27, r31
    43ba:	11 f4       	brne	.+4      	; 0x43c0 <__fp_round+0x18>
    43bc:	60 ff       	sbrs	r22, 0
    43be:	04 c0       	rjmp	.+8      	; 0x43c8 <__fp_round+0x20>
    43c0:	6f 5f       	subi	r22, 0xFF	; 255
    43c2:	7f 4f       	sbci	r23, 0xFF	; 255
    43c4:	8f 4f       	sbci	r24, 0xFF	; 255
    43c6:	9f 4f       	sbci	r25, 0xFF	; 255
    43c8:	08 95       	ret

000043ca <__fp_split3>:
    43ca:	57 fd       	sbrc	r21, 7
    43cc:	90 58       	subi	r25, 0x80	; 128
    43ce:	44 0f       	add	r20, r20
    43d0:	55 1f       	adc	r21, r21
    43d2:	59 f0       	breq	.+22     	; 0x43ea <__fp_splitA+0x10>
    43d4:	5f 3f       	cpi	r21, 0xFF	; 255
    43d6:	71 f0       	breq	.+28     	; 0x43f4 <__fp_splitA+0x1a>
    43d8:	47 95       	ror	r20

000043da <__fp_splitA>:
    43da:	88 0f       	add	r24, r24
    43dc:	97 fb       	bst	r25, 7
    43de:	99 1f       	adc	r25, r25
    43e0:	61 f0       	breq	.+24     	; 0x43fa <__fp_splitA+0x20>
    43e2:	9f 3f       	cpi	r25, 0xFF	; 255
    43e4:	79 f0       	breq	.+30     	; 0x4404 <__fp_splitA+0x2a>
    43e6:	87 95       	ror	r24
    43e8:	08 95       	ret
    43ea:	12 16       	cp	r1, r18
    43ec:	13 06       	cpc	r1, r19
    43ee:	14 06       	cpc	r1, r20
    43f0:	55 1f       	adc	r21, r21
    43f2:	f2 cf       	rjmp	.-28     	; 0x43d8 <__fp_split3+0xe>
    43f4:	46 95       	lsr	r20
    43f6:	f1 df       	rcall	.-30     	; 0x43da <__fp_splitA>
    43f8:	08 c0       	rjmp	.+16     	; 0x440a <__fp_splitA+0x30>
    43fa:	16 16       	cp	r1, r22
    43fc:	17 06       	cpc	r1, r23
    43fe:	18 06       	cpc	r1, r24
    4400:	99 1f       	adc	r25, r25
    4402:	f1 cf       	rjmp	.-30     	; 0x43e6 <__fp_splitA+0xc>
    4404:	86 95       	lsr	r24
    4406:	71 05       	cpc	r23, r1
    4408:	61 05       	cpc	r22, r1
    440a:	08 94       	sec
    440c:	08 95       	ret

0000440e <__fp_zero>:
    440e:	e8 94       	clt

00004410 <__fp_szero>:
    4410:	bb 27       	eor	r27, r27
    4412:	66 27       	eor	r22, r22
    4414:	77 27       	eor	r23, r23
    4416:	cb 01       	movw	r24, r22
    4418:	97 f9       	bld	r25, 7
    441a:	08 95       	ret

0000441c <__gesf2>:
    441c:	8a df       	rcall	.-236    	; 0x4332 <__fp_cmp>
    441e:	08 f4       	brcc	.+2      	; 0x4422 <__gesf2+0x6>
    4420:	8f ef       	ldi	r24, 0xFF	; 255
    4422:	08 95       	ret

00004424 <lrint>:
    4424:	da df       	rcall	.-76     	; 0x43da <__fp_splitA>
    4426:	a8 f1       	brcs	.+106    	; 0x4492 <lrint+0x6e>
    4428:	9e 57       	subi	r25, 0x7E	; 126
    442a:	a8 f1       	brcs	.+106    	; 0x4496 <lrint+0x72>
    442c:	98 51       	subi	r25, 0x18	; 24
    442e:	60 f0       	brcs	.+24     	; 0x4448 <lrint+0x24>
    4430:	39 f1       	breq	.+78     	; 0x4480 <lrint+0x5c>
    4432:	98 30       	cpi	r25, 0x08	; 8
    4434:	70 f5       	brcc	.+92     	; 0x4492 <lrint+0x6e>
    4436:	09 2e       	mov	r0, r25
    4438:	99 27       	eor	r25, r25
    443a:	66 0f       	add	r22, r22
    443c:	77 1f       	adc	r23, r23
    443e:	88 1f       	adc	r24, r24
    4440:	99 1f       	adc	r25, r25
    4442:	0a 94       	dec	r0
    4444:	d1 f7       	brne	.-12     	; 0x443a <lrint+0x16>
    4446:	1c c0       	rjmp	.+56     	; 0x4480 <lrint+0x5c>
    4448:	bb 27       	eor	r27, r27
    444a:	99 3f       	cpi	r25, 0xF9	; 249
    444c:	4c f4       	brge	.+18     	; 0x4460 <lrint+0x3c>
    444e:	b1 11       	cpse	r27, r1
    4450:	b1 e0       	ldi	r27, 0x01	; 1
    4452:	b6 2b       	or	r27, r22
    4454:	67 2f       	mov	r22, r23
    4456:	78 2f       	mov	r23, r24
    4458:	88 27       	eor	r24, r24
    445a:	98 5f       	subi	r25, 0xF8	; 248
    445c:	b1 f7       	brne	.-20     	; 0x444a <lrint+0x26>
    445e:	08 c0       	rjmp	.+16     	; 0x4470 <lrint+0x4c>
    4460:	86 95       	lsr	r24
    4462:	77 95       	ror	r23
    4464:	67 95       	ror	r22
    4466:	b7 95       	ror	r27
    4468:	08 f4       	brcc	.+2      	; 0x446c <lrint+0x48>
    446a:	b1 60       	ori	r27, 0x01	; 1
    446c:	93 95       	inc	r25
    446e:	c1 f7       	brne	.-16     	; 0x4460 <lrint+0x3c>
    4470:	bb 0f       	add	r27, r27
    4472:	30 f4       	brcc	.+12     	; 0x4480 <lrint+0x5c>
    4474:	11 f4       	brne	.+4      	; 0x447a <lrint+0x56>
    4476:	60 ff       	sbrs	r22, 0
    4478:	03 c0       	rjmp	.+6      	; 0x4480 <lrint+0x5c>
    447a:	6f 5f       	subi	r22, 0xFF	; 255
    447c:	7f 4f       	sbci	r23, 0xFF	; 255
    447e:	8f 4f       	sbci	r24, 0xFF	; 255
    4480:	3e f4       	brtc	.+14     	; 0x4490 <lrint+0x6c>
    4482:	90 95       	com	r25
    4484:	80 95       	com	r24
    4486:	70 95       	com	r23
    4488:	61 95       	neg	r22
    448a:	7f 4f       	sbci	r23, 0xFF	; 255
    448c:	8f 4f       	sbci	r24, 0xFF	; 255
    448e:	9f 4f       	sbci	r25, 0xFF	; 255
    4490:	08 95       	ret
    4492:	68 94       	set
    4494:	bd cf       	rjmp	.-134    	; 0x4410 <__fp_szero>
    4496:	bb cf       	rjmp	.-138    	; 0x440e <__fp_zero>

00004498 <__mulsf3>:
    4498:	0b d0       	rcall	.+22     	; 0x44b0 <__mulsf3x>
    449a:	86 cf       	rjmp	.-244    	; 0x43a8 <__fp_round>
    449c:	77 df       	rcall	.-274    	; 0x438c <__fp_pscA>
    449e:	28 f0       	brcs	.+10     	; 0x44aa <__mulsf3+0x12>
    44a0:	7c df       	rcall	.-264    	; 0x439a <__fp_pscB>
    44a2:	18 f0       	brcs	.+6      	; 0x44aa <__mulsf3+0x12>
    44a4:	95 23       	and	r25, r21
    44a6:	09 f0       	breq	.+2      	; 0x44aa <__mulsf3+0x12>
    44a8:	68 cf       	rjmp	.-304    	; 0x437a <__fp_inf>
    44aa:	6d cf       	rjmp	.-294    	; 0x4386 <__fp_nan>
    44ac:	11 24       	eor	r1, r1
    44ae:	b0 cf       	rjmp	.-160    	; 0x4410 <__fp_szero>

000044b0 <__mulsf3x>:
    44b0:	8c df       	rcall	.-232    	; 0x43ca <__fp_split3>
    44b2:	a0 f3       	brcs	.-24     	; 0x449c <__mulsf3+0x4>

000044b4 <__mulsf3_pse>:
    44b4:	95 9f       	mul	r25, r21
    44b6:	d1 f3       	breq	.-12     	; 0x44ac <__mulsf3+0x14>
    44b8:	95 0f       	add	r25, r21
    44ba:	50 e0       	ldi	r21, 0x00	; 0
    44bc:	55 1f       	adc	r21, r21
    44be:	62 9f       	mul	r22, r18
    44c0:	f0 01       	movw	r30, r0
    44c2:	72 9f       	mul	r23, r18
    44c4:	bb 27       	eor	r27, r27
    44c6:	f0 0d       	add	r31, r0
    44c8:	b1 1d       	adc	r27, r1
    44ca:	63 9f       	mul	r22, r19
    44cc:	aa 27       	eor	r26, r26
    44ce:	f0 0d       	add	r31, r0
    44d0:	b1 1d       	adc	r27, r1
    44d2:	aa 1f       	adc	r26, r26
    44d4:	64 9f       	mul	r22, r20
    44d6:	66 27       	eor	r22, r22
    44d8:	b0 0d       	add	r27, r0
    44da:	a1 1d       	adc	r26, r1
    44dc:	66 1f       	adc	r22, r22
    44de:	82 9f       	mul	r24, r18
    44e0:	22 27       	eor	r18, r18
    44e2:	b0 0d       	add	r27, r0
    44e4:	a1 1d       	adc	r26, r1
    44e6:	62 1f       	adc	r22, r18
    44e8:	73 9f       	mul	r23, r19
    44ea:	b0 0d       	add	r27, r0
    44ec:	a1 1d       	adc	r26, r1
    44ee:	62 1f       	adc	r22, r18
    44f0:	83 9f       	mul	r24, r19
    44f2:	a0 0d       	add	r26, r0
    44f4:	61 1d       	adc	r22, r1
    44f6:	22 1f       	adc	r18, r18
    44f8:	74 9f       	mul	r23, r20
    44fa:	33 27       	eor	r19, r19
    44fc:	a0 0d       	add	r26, r0
    44fe:	61 1d       	adc	r22, r1
    4500:	23 1f       	adc	r18, r19
    4502:	84 9f       	mul	r24, r20
    4504:	60 0d       	add	r22, r0
    4506:	21 1d       	adc	r18, r1
    4508:	82 2f       	mov	r24, r18
    450a:	76 2f       	mov	r23, r22
    450c:	6a 2f       	mov	r22, r26
    450e:	11 24       	eor	r1, r1
    4510:	9f 57       	subi	r25, 0x7F	; 127
    4512:	50 40       	sbci	r21, 0x00	; 0
    4514:	8a f0       	brmi	.+34     	; 0x4538 <__mulsf3_pse+0x84>
    4516:	e1 f0       	breq	.+56     	; 0x4550 <__mulsf3_pse+0x9c>
    4518:	88 23       	and	r24, r24
    451a:	4a f0       	brmi	.+18     	; 0x452e <__mulsf3_pse+0x7a>
    451c:	ee 0f       	add	r30, r30
    451e:	ff 1f       	adc	r31, r31
    4520:	bb 1f       	adc	r27, r27
    4522:	66 1f       	adc	r22, r22
    4524:	77 1f       	adc	r23, r23
    4526:	88 1f       	adc	r24, r24
    4528:	91 50       	subi	r25, 0x01	; 1
    452a:	50 40       	sbci	r21, 0x00	; 0
    452c:	a9 f7       	brne	.-22     	; 0x4518 <__mulsf3_pse+0x64>
    452e:	9e 3f       	cpi	r25, 0xFE	; 254
    4530:	51 05       	cpc	r21, r1
    4532:	70 f0       	brcs	.+28     	; 0x4550 <__mulsf3_pse+0x9c>
    4534:	22 cf       	rjmp	.-444    	; 0x437a <__fp_inf>
    4536:	6c cf       	rjmp	.-296    	; 0x4410 <__fp_szero>
    4538:	5f 3f       	cpi	r21, 0xFF	; 255
    453a:	ec f3       	brlt	.-6      	; 0x4536 <__mulsf3_pse+0x82>
    453c:	98 3e       	cpi	r25, 0xE8	; 232
    453e:	dc f3       	brlt	.-10     	; 0x4536 <__mulsf3_pse+0x82>
    4540:	86 95       	lsr	r24
    4542:	77 95       	ror	r23
    4544:	67 95       	ror	r22
    4546:	b7 95       	ror	r27
    4548:	f7 95       	ror	r31
    454a:	e7 95       	ror	r30
    454c:	9f 5f       	subi	r25, 0xFF	; 255
    454e:	c1 f7       	brne	.-16     	; 0x4540 <__mulsf3_pse+0x8c>
    4550:	fe 2b       	or	r31, r30
    4552:	88 0f       	add	r24, r24
    4554:	91 1d       	adc	r25, r1
    4556:	96 95       	lsr	r25
    4558:	87 95       	ror	r24
    455a:	97 f9       	bld	r25, 7
    455c:	08 95       	ret

0000455e <pow>:
    455e:	fa 01       	movw	r30, r20
    4560:	ee 0f       	add	r30, r30
    4562:	ff 1f       	adc	r31, r31
    4564:	30 96       	adiw	r30, 0x00	; 0
    4566:	21 05       	cpc	r18, r1
    4568:	31 05       	cpc	r19, r1
    456a:	99 f1       	breq	.+102    	; 0x45d2 <pow+0x74>
    456c:	61 15       	cp	r22, r1
    456e:	71 05       	cpc	r23, r1
    4570:	61 f4       	brne	.+24     	; 0x458a <pow+0x2c>
    4572:	80 38       	cpi	r24, 0x80	; 128
    4574:	bf e3       	ldi	r27, 0x3F	; 63
    4576:	9b 07       	cpc	r25, r27
    4578:	49 f1       	breq	.+82     	; 0x45cc <pow+0x6e>
    457a:	68 94       	set
    457c:	90 38       	cpi	r25, 0x80	; 128
    457e:	81 05       	cpc	r24, r1
    4580:	61 f0       	breq	.+24     	; 0x459a <pow+0x3c>
    4582:	80 38       	cpi	r24, 0x80	; 128
    4584:	bf ef       	ldi	r27, 0xFF	; 255
    4586:	9b 07       	cpc	r25, r27
    4588:	41 f0       	breq	.+16     	; 0x459a <pow+0x3c>
    458a:	99 23       	and	r25, r25
    458c:	42 f5       	brpl	.+80     	; 0x45de <pow+0x80>
    458e:	ff 3f       	cpi	r31, 0xFF	; 255
    4590:	e1 05       	cpc	r30, r1
    4592:	31 05       	cpc	r19, r1
    4594:	21 05       	cpc	r18, r1
    4596:	11 f1       	breq	.+68     	; 0x45dc <pow+0x7e>
    4598:	e8 94       	clt
    459a:	08 94       	sec
    459c:	e7 95       	ror	r30
    459e:	d9 01       	movw	r26, r18
    45a0:	aa 23       	and	r26, r26
    45a2:	29 f4       	brne	.+10     	; 0x45ae <pow+0x50>
    45a4:	ab 2f       	mov	r26, r27
    45a6:	be 2f       	mov	r27, r30
    45a8:	f8 5f       	subi	r31, 0xF8	; 248
    45aa:	d0 f3       	brcs	.-12     	; 0x45a0 <pow+0x42>
    45ac:	10 c0       	rjmp	.+32     	; 0x45ce <pow+0x70>
    45ae:	ff 5f       	subi	r31, 0xFF	; 255
    45b0:	70 f4       	brcc	.+28     	; 0x45ce <pow+0x70>
    45b2:	a6 95       	lsr	r26
    45b4:	e0 f7       	brcc	.-8      	; 0x45ae <pow+0x50>
    45b6:	f7 39       	cpi	r31, 0x97	; 151
    45b8:	50 f0       	brcs	.+20     	; 0x45ce <pow+0x70>
    45ba:	19 f0       	breq	.+6      	; 0x45c2 <pow+0x64>
    45bc:	ff 3a       	cpi	r31, 0xAF	; 175
    45be:	38 f4       	brcc	.+14     	; 0x45ce <pow+0x70>
    45c0:	9f 77       	andi	r25, 0x7F	; 127
    45c2:	9f 93       	push	r25
    45c4:	0c d0       	rcall	.+24     	; 0x45de <pow+0x80>
    45c6:	0f 90       	pop	r0
    45c8:	07 fc       	sbrc	r0, 7
    45ca:	90 58       	subi	r25, 0x80	; 128
    45cc:	08 95       	ret
    45ce:	3e f0       	brts	.+14     	; 0x45de <pow+0x80>
    45d0:	da ce       	rjmp	.-588    	; 0x4386 <__fp_nan>
    45d2:	60 e0       	ldi	r22, 0x00	; 0
    45d4:	70 e0       	ldi	r23, 0x00	; 0
    45d6:	80 e8       	ldi	r24, 0x80	; 128
    45d8:	9f e3       	ldi	r25, 0x3F	; 63
    45da:	08 95       	ret
    45dc:	4f e7       	ldi	r20, 0x7F	; 127
    45de:	9f 77       	andi	r25, 0x7F	; 127
    45e0:	5f 93       	push	r21
    45e2:	4f 93       	push	r20
    45e4:	3f 93       	push	r19
    45e6:	2f 93       	push	r18
    45e8:	9e d0       	rcall	.+316    	; 0x4726 <log>
    45ea:	2f 91       	pop	r18
    45ec:	3f 91       	pop	r19
    45ee:	4f 91       	pop	r20
    45f0:	5f 91       	pop	r21
    45f2:	52 df       	rcall	.-348    	; 0x4498 <__mulsf3>
    45f4:	05 c0       	rjmp	.+10     	; 0x4600 <exp>
    45f6:	19 f4       	brne	.+6      	; 0x45fe <pow+0xa0>
    45f8:	0e f0       	brts	.+2      	; 0x45fc <pow+0x9e>
    45fa:	bf ce       	rjmp	.-642    	; 0x437a <__fp_inf>
    45fc:	08 cf       	rjmp	.-496    	; 0x440e <__fp_zero>
    45fe:	c3 ce       	rjmp	.-634    	; 0x4386 <__fp_nan>

00004600 <exp>:
    4600:	ec de       	rcall	.-552    	; 0x43da <__fp_splitA>
    4602:	c8 f3       	brcs	.-14     	; 0x45f6 <pow+0x98>
    4604:	96 38       	cpi	r25, 0x86	; 134
    4606:	c0 f7       	brcc	.-16     	; 0x45f8 <pow+0x9a>
    4608:	07 f8       	bld	r0, 7
    460a:	0f 92       	push	r0
    460c:	e8 94       	clt
    460e:	2b e3       	ldi	r18, 0x3B	; 59
    4610:	3a ea       	ldi	r19, 0xAA	; 170
    4612:	48 eb       	ldi	r20, 0xB8	; 184
    4614:	5f e7       	ldi	r21, 0x7F	; 127
    4616:	4e df       	rcall	.-356    	; 0x44b4 <__mulsf3_pse>
    4618:	0f 92       	push	r0
    461a:	0f 92       	push	r0
    461c:	0f 92       	push	r0
    461e:	4d b7       	in	r20, 0x3d	; 61
    4620:	5e b7       	in	r21, 0x3e	; 62
    4622:	0f 92       	push	r0
    4624:	c0 d0       	rcall	.+384    	; 0x47a6 <modf>
    4626:	e8 ec       	ldi	r30, 0xC8	; 200
    4628:	f0 e0       	ldi	r31, 0x00	; 0
    462a:	16 d0       	rcall	.+44     	; 0x4658 <__fp_powser>
    462c:	4f 91       	pop	r20
    462e:	5f 91       	pop	r21
    4630:	ef 91       	pop	r30
    4632:	ff 91       	pop	r31
    4634:	e5 95       	asr	r30
    4636:	ee 1f       	adc	r30, r30
    4638:	ff 1f       	adc	r31, r31
    463a:	49 f0       	breq	.+18     	; 0x464e <exp+0x4e>
    463c:	fe 57       	subi	r31, 0x7E	; 126
    463e:	e0 68       	ori	r30, 0x80	; 128
    4640:	44 27       	eor	r20, r20
    4642:	ee 0f       	add	r30, r30
    4644:	44 1f       	adc	r20, r20
    4646:	fa 95       	dec	r31
    4648:	e1 f7       	brne	.-8      	; 0x4642 <exp+0x42>
    464a:	41 95       	neg	r20
    464c:	55 0b       	sbc	r21, r21
    464e:	32 d0       	rcall	.+100    	; 0x46b4 <ldexp>
    4650:	0f 90       	pop	r0
    4652:	07 fe       	sbrs	r0, 7
    4654:	26 c0       	rjmp	.+76     	; 0x46a2 <inverse>
    4656:	08 95       	ret

00004658 <__fp_powser>:
    4658:	df 93       	push	r29
    465a:	cf 93       	push	r28
    465c:	1f 93       	push	r17
    465e:	0f 93       	push	r16
    4660:	ff 92       	push	r15
    4662:	ef 92       	push	r14
    4664:	df 92       	push	r13
    4666:	7b 01       	movw	r14, r22
    4668:	8c 01       	movw	r16, r24
    466a:	68 94       	set
    466c:	05 c0       	rjmp	.+10     	; 0x4678 <__fp_powser+0x20>
    466e:	da 2e       	mov	r13, r26
    4670:	ef 01       	movw	r28, r30
    4672:	1e df       	rcall	.-452    	; 0x44b0 <__mulsf3x>
    4674:	fe 01       	movw	r30, r28
    4676:	e8 94       	clt
    4678:	a5 91       	lpm	r26, Z+
    467a:	25 91       	lpm	r18, Z+
    467c:	35 91       	lpm	r19, Z+
    467e:	45 91       	lpm	r20, Z+
    4680:	55 91       	lpm	r21, Z+
    4682:	ae f3       	brts	.-22     	; 0x466e <__fp_powser+0x16>
    4684:	ef 01       	movw	r28, r30
    4686:	28 dd       	rcall	.-1456   	; 0x40d8 <__addsf3x>
    4688:	fe 01       	movw	r30, r28
    468a:	97 01       	movw	r18, r14
    468c:	a8 01       	movw	r20, r16
    468e:	da 94       	dec	r13
    4690:	79 f7       	brne	.-34     	; 0x4670 <__fp_powser+0x18>
    4692:	df 90       	pop	r13
    4694:	ef 90       	pop	r14
    4696:	ff 90       	pop	r15
    4698:	0f 91       	pop	r16
    469a:	1f 91       	pop	r17
    469c:	cf 91       	pop	r28
    469e:	df 91       	pop	r29
    46a0:	08 95       	ret

000046a2 <inverse>:
    46a2:	9b 01       	movw	r18, r22
    46a4:	ac 01       	movw	r20, r24
    46a6:	60 e0       	ldi	r22, 0x00	; 0
    46a8:	70 e0       	ldi	r23, 0x00	; 0
    46aa:	80 e8       	ldi	r24, 0x80	; 128
    46ac:	9f e3       	ldi	r25, 0x3F	; 63
    46ae:	6b cd       	rjmp	.-1322   	; 0x4186 <__divsf3>
    46b0:	64 ce       	rjmp	.-824    	; 0x437a <__fp_inf>
    46b2:	ac c0       	rjmp	.+344    	; 0x480c <__fp_mpack>

000046b4 <ldexp>:
    46b4:	92 de       	rcall	.-732    	; 0x43da <__fp_splitA>
    46b6:	e8 f3       	brcs	.-6      	; 0x46b2 <inverse+0x10>
    46b8:	99 23       	and	r25, r25
    46ba:	d9 f3       	breq	.-10     	; 0x46b2 <inverse+0x10>
    46bc:	94 0f       	add	r25, r20
    46be:	51 1d       	adc	r21, r1
    46c0:	bb f3       	brvs	.-18     	; 0x46b0 <inverse+0xe>
    46c2:	91 50       	subi	r25, 0x01	; 1
    46c4:	50 40       	sbci	r21, 0x00	; 0
    46c6:	94 f0       	brlt	.+36     	; 0x46ec <ldexp+0x38>
    46c8:	59 f0       	breq	.+22     	; 0x46e0 <ldexp+0x2c>
    46ca:	88 23       	and	r24, r24
    46cc:	32 f0       	brmi	.+12     	; 0x46da <ldexp+0x26>
    46ce:	66 0f       	add	r22, r22
    46d0:	77 1f       	adc	r23, r23
    46d2:	88 1f       	adc	r24, r24
    46d4:	91 50       	subi	r25, 0x01	; 1
    46d6:	50 40       	sbci	r21, 0x00	; 0
    46d8:	c1 f7       	brne	.-16     	; 0x46ca <ldexp+0x16>
    46da:	9e 3f       	cpi	r25, 0xFE	; 254
    46dc:	51 05       	cpc	r21, r1
    46de:	44 f7       	brge	.-48     	; 0x46b0 <inverse+0xe>
    46e0:	88 0f       	add	r24, r24
    46e2:	91 1d       	adc	r25, r1
    46e4:	96 95       	lsr	r25
    46e6:	87 95       	ror	r24
    46e8:	97 f9       	bld	r25, 7
    46ea:	08 95       	ret
    46ec:	5f 3f       	cpi	r21, 0xFF	; 255
    46ee:	ac f0       	brlt	.+42     	; 0x471a <ldexp+0x66>
    46f0:	98 3e       	cpi	r25, 0xE8	; 232
    46f2:	9c f0       	brlt	.+38     	; 0x471a <ldexp+0x66>
    46f4:	bb 27       	eor	r27, r27
    46f6:	86 95       	lsr	r24
    46f8:	77 95       	ror	r23
    46fa:	67 95       	ror	r22
    46fc:	b7 95       	ror	r27
    46fe:	08 f4       	brcc	.+2      	; 0x4702 <ldexp+0x4e>
    4700:	b1 60       	ori	r27, 0x01	; 1
    4702:	93 95       	inc	r25
    4704:	c1 f7       	brne	.-16     	; 0x46f6 <ldexp+0x42>
    4706:	bb 0f       	add	r27, r27
    4708:	58 f7       	brcc	.-42     	; 0x46e0 <ldexp+0x2c>
    470a:	11 f4       	brne	.+4      	; 0x4710 <ldexp+0x5c>
    470c:	60 ff       	sbrs	r22, 0
    470e:	e8 cf       	rjmp	.-48     	; 0x46e0 <ldexp+0x2c>
    4710:	6f 5f       	subi	r22, 0xFF	; 255
    4712:	7f 4f       	sbci	r23, 0xFF	; 255
    4714:	8f 4f       	sbci	r24, 0xFF	; 255
    4716:	9f 4f       	sbci	r25, 0xFF	; 255
    4718:	e3 cf       	rjmp	.-58     	; 0x46e0 <ldexp+0x2c>
    471a:	7a ce       	rjmp	.-780    	; 0x4410 <__fp_szero>
    471c:	0e f0       	brts	.+2      	; 0x4720 <ldexp+0x6c>
    471e:	76 c0       	rjmp	.+236    	; 0x480c <__fp_mpack>
    4720:	32 ce       	rjmp	.-924    	; 0x4386 <__fp_nan>
    4722:	68 94       	set
    4724:	2a ce       	rjmp	.-940    	; 0x437a <__fp_inf>

00004726 <log>:
    4726:	59 de       	rcall	.-846    	; 0x43da <__fp_splitA>
    4728:	c8 f3       	brcs	.-14     	; 0x471c <ldexp+0x68>
    472a:	99 23       	and	r25, r25
    472c:	d1 f3       	breq	.-12     	; 0x4722 <ldexp+0x6e>
    472e:	c6 f3       	brts	.-16     	; 0x4720 <ldexp+0x6c>
    4730:	df 93       	push	r29
    4732:	cf 93       	push	r28
    4734:	1f 93       	push	r17
    4736:	0f 93       	push	r16
    4738:	ff 92       	push	r15
    473a:	c9 2f       	mov	r28, r25
    473c:	dd 27       	eor	r29, r29
    473e:	88 23       	and	r24, r24
    4740:	2a f0       	brmi	.+10     	; 0x474c <log+0x26>
    4742:	21 97       	sbiw	r28, 0x01	; 1
    4744:	66 0f       	add	r22, r22
    4746:	77 1f       	adc	r23, r23
    4748:	88 1f       	adc	r24, r24
    474a:	da f7       	brpl	.-10     	; 0x4742 <log+0x1c>
    474c:	20 e0       	ldi	r18, 0x00	; 0
    474e:	30 e0       	ldi	r19, 0x00	; 0
    4750:	40 e8       	ldi	r20, 0x80	; 128
    4752:	5f eb       	ldi	r21, 0xBF	; 191
    4754:	9f e3       	ldi	r25, 0x3F	; 63
    4756:	88 39       	cpi	r24, 0x98	; 152
    4758:	20 f0       	brcs	.+8      	; 0x4762 <log+0x3c>
    475a:	80 3e       	cpi	r24, 0xE0	; 224
    475c:	30 f0       	brcs	.+12     	; 0x476a <log+0x44>
    475e:	21 96       	adiw	r28, 0x01	; 1
    4760:	8f 77       	andi	r24, 0x7F	; 127
    4762:	a9 dc       	rcall	.-1710   	; 0x40b6 <__addsf3>
    4764:	e0 ef       	ldi	r30, 0xF0	; 240
    4766:	f0 e0       	ldi	r31, 0x00	; 0
    4768:	03 c0       	rjmp	.+6      	; 0x4770 <log+0x4a>
    476a:	a5 dc       	rcall	.-1718   	; 0x40b6 <__addsf3>
    476c:	ed e1       	ldi	r30, 0x1D	; 29
    476e:	f1 e0       	ldi	r31, 0x01	; 1
    4770:	73 df       	rcall	.-282    	; 0x4658 <__fp_powser>
    4772:	8b 01       	movw	r16, r22
    4774:	be 01       	movw	r22, r28
    4776:	ec 01       	movw	r28, r24
    4778:	fb 2e       	mov	r15, r27
    477a:	6f 57       	subi	r22, 0x7F	; 127
    477c:	71 09       	sbc	r23, r1
    477e:	75 95       	asr	r23
    4780:	77 1f       	adc	r23, r23
    4782:	88 0b       	sbc	r24, r24
    4784:	99 0b       	sbc	r25, r25
    4786:	9a dd       	rcall	.-1228   	; 0x42bc <__floatsisf>
    4788:	28 e1       	ldi	r18, 0x18	; 24
    478a:	32 e7       	ldi	r19, 0x72	; 114
    478c:	41 e3       	ldi	r20, 0x31	; 49
    478e:	5f e3       	ldi	r21, 0x3F	; 63
    4790:	8f de       	rcall	.-738    	; 0x44b0 <__mulsf3x>
    4792:	af 2d       	mov	r26, r15
    4794:	98 01       	movw	r18, r16
    4796:	ae 01       	movw	r20, r28
    4798:	ff 90       	pop	r15
    479a:	0f 91       	pop	r16
    479c:	1f 91       	pop	r17
    479e:	cf 91       	pop	r28
    47a0:	df 91       	pop	r29
    47a2:	9a dc       	rcall	.-1740   	; 0x40d8 <__addsf3x>
    47a4:	01 ce       	rjmp	.-1022   	; 0x43a8 <__fp_round>

000047a6 <modf>:
    47a6:	fa 01       	movw	r30, r20
    47a8:	dc 01       	movw	r26, r24
    47aa:	aa 0f       	add	r26, r26
    47ac:	bb 1f       	adc	r27, r27
    47ae:	9b 01       	movw	r18, r22
    47b0:	ac 01       	movw	r20, r24
    47b2:	bf 57       	subi	r27, 0x7F	; 127
    47b4:	28 f4       	brcc	.+10     	; 0x47c0 <modf+0x1a>
    47b6:	22 27       	eor	r18, r18
    47b8:	33 27       	eor	r19, r19
    47ba:	44 27       	eor	r20, r20
    47bc:	50 78       	andi	r21, 0x80	; 128
    47be:	1f c0       	rjmp	.+62     	; 0x47fe <modf+0x58>
    47c0:	b7 51       	subi	r27, 0x17	; 23
    47c2:	88 f4       	brcc	.+34     	; 0x47e6 <modf+0x40>
    47c4:	ab 2f       	mov	r26, r27
    47c6:	00 24       	eor	r0, r0
    47c8:	46 95       	lsr	r20
    47ca:	37 95       	ror	r19
    47cc:	27 95       	ror	r18
    47ce:	01 1c       	adc	r0, r1
    47d0:	a3 95       	inc	r26
    47d2:	d2 f3       	brmi	.-12     	; 0x47c8 <modf+0x22>
    47d4:	00 20       	and	r0, r0
    47d6:	69 f0       	breq	.+26     	; 0x47f2 <modf+0x4c>
    47d8:	22 0f       	add	r18, r18
    47da:	33 1f       	adc	r19, r19
    47dc:	44 1f       	adc	r20, r20
    47de:	b3 95       	inc	r27
    47e0:	da f3       	brmi	.-10     	; 0x47d8 <modf+0x32>
    47e2:	0d d0       	rcall	.+26     	; 0x47fe <modf+0x58>
    47e4:	67 cc       	rjmp	.-1842   	; 0x40b4 <__subsf3>
    47e6:	61 30       	cpi	r22, 0x01	; 1
    47e8:	71 05       	cpc	r23, r1
    47ea:	a0 e8       	ldi	r26, 0x80	; 128
    47ec:	8a 07       	cpc	r24, r26
    47ee:	b9 46       	sbci	r27, 0x69	; 105
    47f0:	30 f4       	brcc	.+12     	; 0x47fe <modf+0x58>
    47f2:	9b 01       	movw	r18, r22
    47f4:	ac 01       	movw	r20, r24
    47f6:	66 27       	eor	r22, r22
    47f8:	77 27       	eor	r23, r23
    47fa:	88 27       	eor	r24, r24
    47fc:	90 78       	andi	r25, 0x80	; 128
    47fe:	30 96       	adiw	r30, 0x00	; 0
    4800:	21 f0       	breq	.+8      	; 0x480a <modf+0x64>
    4802:	20 83       	st	Z, r18
    4804:	31 83       	std	Z+1, r19	; 0x01
    4806:	42 83       	std	Z+2, r20	; 0x02
    4808:	53 83       	std	Z+3, r21	; 0x03
    480a:	08 95       	ret

0000480c <__fp_mpack>:
    480c:	9f 3f       	cpi	r25, 0xFF	; 255
    480e:	31 f0       	breq	.+12     	; 0x481c <__fp_mpack_finite+0xc>

00004810 <__fp_mpack_finite>:
    4810:	91 50       	subi	r25, 0x01	; 1
    4812:	20 f4       	brcc	.+8      	; 0x481c <__fp_mpack_finite+0xc>
    4814:	87 95       	ror	r24
    4816:	77 95       	ror	r23
    4818:	67 95       	ror	r22
    481a:	b7 95       	ror	r27
    481c:	88 0f       	add	r24, r24
    481e:	91 1d       	adc	r25, r1
    4820:	96 95       	lsr	r25
    4822:	87 95       	ror	r24
    4824:	97 f9       	bld	r25, 7
    4826:	08 95       	ret

00004828 <vfprintf>:
    4828:	a1 e1       	ldi	r26, 0x11	; 17
    482a:	b0 e0       	ldi	r27, 0x00	; 0
    482c:	e9 e1       	ldi	r30, 0x19	; 25
    482e:	f4 e2       	ldi	r31, 0x24	; 36
    4830:	b7 c3       	rjmp	.+1902   	; 0x4fa0 <__prologue_saves__>
    4832:	3c 01       	movw	r6, r24
    4834:	7f 87       	std	Y+15, r23	; 0x0f
    4836:	6e 87       	std	Y+14, r22	; 0x0e
    4838:	6a 01       	movw	r12, r20
    483a:	fc 01       	movw	r30, r24
    483c:	17 82       	std	Z+7, r1	; 0x07
    483e:	16 82       	std	Z+6, r1	; 0x06
    4840:	83 81       	ldd	r24, Z+3	; 0x03
    4842:	81 fd       	sbrc	r24, 1
    4844:	03 c0       	rjmp	.+6      	; 0x484c <vfprintf+0x24>
    4846:	6f ef       	ldi	r22, 0xFF	; 255
    4848:	7f ef       	ldi	r23, 0xFF	; 255
    484a:	52 c3       	rjmp	.+1700   	; 0x4ef0 <vfprintf+0x6c8>
    484c:	9e 01       	movw	r18, r28
    484e:	2f 5f       	subi	r18, 0xFF	; 255
    4850:	3f 4f       	sbci	r19, 0xFF	; 255
    4852:	39 8b       	std	Y+17, r19	; 0x11
    4854:	28 8b       	std	Y+16, r18	; 0x10
    4856:	f3 01       	movw	r30, r6
    4858:	23 81       	ldd	r18, Z+3	; 0x03
    485a:	ee 85       	ldd	r30, Y+14	; 0x0e
    485c:	ff 85       	ldd	r31, Y+15	; 0x0f
    485e:	23 fd       	sbrc	r18, 3
    4860:	85 91       	lpm	r24, Z+
    4862:	23 ff       	sbrs	r18, 3
    4864:	81 91       	ld	r24, Z+
    4866:	ff 87       	std	Y+15, r31	; 0x0f
    4868:	ee 87       	std	Y+14, r30	; 0x0e
    486a:	88 23       	and	r24, r24
    486c:	09 f4       	brne	.+2      	; 0x4870 <vfprintf+0x48>
    486e:	3d c3       	rjmp	.+1658   	; 0x4eea <vfprintf+0x6c2>
    4870:	85 32       	cpi	r24, 0x25	; 37
    4872:	51 f4       	brne	.+20     	; 0x4888 <vfprintf+0x60>
    4874:	ee 85       	ldd	r30, Y+14	; 0x0e
    4876:	ff 85       	ldd	r31, Y+15	; 0x0f
    4878:	23 fd       	sbrc	r18, 3
    487a:	85 91       	lpm	r24, Z+
    487c:	23 ff       	sbrs	r18, 3
    487e:	81 91       	ld	r24, Z+
    4880:	ff 87       	std	Y+15, r31	; 0x0f
    4882:	ee 87       	std	Y+14, r30	; 0x0e
    4884:	85 32       	cpi	r24, 0x25	; 37
    4886:	21 f4       	brne	.+8      	; 0x4890 <vfprintf+0x68>
    4888:	90 e0       	ldi	r25, 0x00	; 0
    488a:	b3 01       	movw	r22, r6
    488c:	20 d6       	rcall	.+3136   	; 0x54ce <fputc>
    488e:	e3 cf       	rjmp	.-58     	; 0x4856 <vfprintf+0x2e>
    4890:	98 2f       	mov	r25, r24
    4892:	10 e0       	ldi	r17, 0x00	; 0
    4894:	88 24       	eor	r8, r8
    4896:	99 24       	eor	r9, r9
    4898:	10 32       	cpi	r17, 0x20	; 32
    489a:	b0 f4       	brcc	.+44     	; 0x48c8 <vfprintf+0xa0>
    489c:	9b 32       	cpi	r25, 0x2B	; 43
    489e:	69 f0       	breq	.+26     	; 0x48ba <vfprintf+0x92>
    48a0:	9c 32       	cpi	r25, 0x2C	; 44
    48a2:	28 f4       	brcc	.+10     	; 0x48ae <vfprintf+0x86>
    48a4:	90 32       	cpi	r25, 0x20	; 32
    48a6:	51 f0       	breq	.+20     	; 0x48bc <vfprintf+0x94>
    48a8:	93 32       	cpi	r25, 0x23	; 35
    48aa:	71 f4       	brne	.+28     	; 0x48c8 <vfprintf+0xa0>
    48ac:	0b c0       	rjmp	.+22     	; 0x48c4 <vfprintf+0x9c>
    48ae:	9d 32       	cpi	r25, 0x2D	; 45
    48b0:	39 f0       	breq	.+14     	; 0x48c0 <vfprintf+0x98>
    48b2:	90 33       	cpi	r25, 0x30	; 48
    48b4:	49 f4       	brne	.+18     	; 0x48c8 <vfprintf+0xa0>
    48b6:	11 60       	ori	r17, 0x01	; 1
    48b8:	28 c0       	rjmp	.+80     	; 0x490a <vfprintf+0xe2>
    48ba:	12 60       	ori	r17, 0x02	; 2
    48bc:	14 60       	ori	r17, 0x04	; 4
    48be:	25 c0       	rjmp	.+74     	; 0x490a <vfprintf+0xe2>
    48c0:	18 60       	ori	r17, 0x08	; 8
    48c2:	23 c0       	rjmp	.+70     	; 0x490a <vfprintf+0xe2>
    48c4:	10 61       	ori	r17, 0x10	; 16
    48c6:	21 c0       	rjmp	.+66     	; 0x490a <vfprintf+0xe2>
    48c8:	17 fd       	sbrc	r17, 7
    48ca:	2a c0       	rjmp	.+84     	; 0x4920 <vfprintf+0xf8>
    48cc:	89 2f       	mov	r24, r25
    48ce:	80 53       	subi	r24, 0x30	; 48
    48d0:	8a 30       	cpi	r24, 0x0A	; 10
    48d2:	78 f4       	brcc	.+30     	; 0x48f2 <vfprintf+0xca>
    48d4:	16 ff       	sbrs	r17, 6
    48d6:	06 c0       	rjmp	.+12     	; 0x48e4 <vfprintf+0xbc>
    48d8:	fa e0       	ldi	r31, 0x0A	; 10
    48da:	9f 9e       	mul	r9, r31
    48dc:	90 2c       	mov	r9, r0
    48de:	11 24       	eor	r1, r1
    48e0:	98 0e       	add	r9, r24
    48e2:	13 c0       	rjmp	.+38     	; 0x490a <vfprintf+0xe2>
    48e4:	3a e0       	ldi	r19, 0x0A	; 10
    48e6:	83 9e       	mul	r8, r19
    48e8:	80 2c       	mov	r8, r0
    48ea:	11 24       	eor	r1, r1
    48ec:	88 0e       	add	r8, r24
    48ee:	10 62       	ori	r17, 0x20	; 32
    48f0:	0c c0       	rjmp	.+24     	; 0x490a <vfprintf+0xe2>
    48f2:	9e 32       	cpi	r25, 0x2E	; 46
    48f4:	21 f4       	brne	.+8      	; 0x48fe <vfprintf+0xd6>
    48f6:	16 fd       	sbrc	r17, 6
    48f8:	f8 c2       	rjmp	.+1520   	; 0x4eea <vfprintf+0x6c2>
    48fa:	10 64       	ori	r17, 0x40	; 64
    48fc:	06 c0       	rjmp	.+12     	; 0x490a <vfprintf+0xe2>
    48fe:	9c 36       	cpi	r25, 0x6C	; 108
    4900:	11 f4       	brne	.+4      	; 0x4906 <vfprintf+0xde>
    4902:	10 68       	ori	r17, 0x80	; 128
    4904:	02 c0       	rjmp	.+4      	; 0x490a <vfprintf+0xe2>
    4906:	98 36       	cpi	r25, 0x68	; 104
    4908:	59 f4       	brne	.+22     	; 0x4920 <vfprintf+0xf8>
    490a:	ee 85       	ldd	r30, Y+14	; 0x0e
    490c:	ff 85       	ldd	r31, Y+15	; 0x0f
    490e:	23 fd       	sbrc	r18, 3
    4910:	95 91       	lpm	r25, Z+
    4912:	23 ff       	sbrs	r18, 3
    4914:	91 91       	ld	r25, Z+
    4916:	ff 87       	std	Y+15, r31	; 0x0f
    4918:	ee 87       	std	Y+14, r30	; 0x0e
    491a:	99 23       	and	r25, r25
    491c:	09 f0       	breq	.+2      	; 0x4920 <vfprintf+0xf8>
    491e:	bc cf       	rjmp	.-136    	; 0x4898 <vfprintf+0x70>
    4920:	89 2f       	mov	r24, r25
    4922:	85 54       	subi	r24, 0x45	; 69
    4924:	83 30       	cpi	r24, 0x03	; 3
    4926:	20 f4       	brcc	.+8      	; 0x4930 <vfprintf+0x108>
    4928:	81 2f       	mov	r24, r17
    492a:	80 61       	ori	r24, 0x10	; 16
    492c:	90 5e       	subi	r25, 0xE0	; 224
    492e:	07 c0       	rjmp	.+14     	; 0x493e <vfprintf+0x116>
    4930:	89 2f       	mov	r24, r25
    4932:	85 56       	subi	r24, 0x65	; 101
    4934:	83 30       	cpi	r24, 0x03	; 3
    4936:	08 f0       	brcs	.+2      	; 0x493a <vfprintf+0x112>
    4938:	8f c1       	rjmp	.+798    	; 0x4c58 <vfprintf+0x430>
    493a:	81 2f       	mov	r24, r17
    493c:	8f 7e       	andi	r24, 0xEF	; 239
    493e:	86 fd       	sbrc	r24, 6
    4940:	02 c0       	rjmp	.+4      	; 0x4946 <vfprintf+0x11e>
    4942:	76 e0       	ldi	r23, 0x06	; 6
    4944:	97 2e       	mov	r9, r23
    4946:	6f e3       	ldi	r22, 0x3F	; 63
    4948:	f6 2e       	mov	r15, r22
    494a:	f8 22       	and	r15, r24
    494c:	95 36       	cpi	r25, 0x65	; 101
    494e:	19 f4       	brne	.+6      	; 0x4956 <vfprintf+0x12e>
    4950:	f0 e4       	ldi	r31, 0x40	; 64
    4952:	ff 2a       	or	r15, r31
    4954:	07 c0       	rjmp	.+14     	; 0x4964 <vfprintf+0x13c>
    4956:	96 36       	cpi	r25, 0x66	; 102
    4958:	19 f4       	brne	.+6      	; 0x4960 <vfprintf+0x138>
    495a:	20 e8       	ldi	r18, 0x80	; 128
    495c:	f2 2a       	or	r15, r18
    495e:	02 c0       	rjmp	.+4      	; 0x4964 <vfprintf+0x13c>
    4960:	91 10       	cpse	r9, r1
    4962:	9a 94       	dec	r9
    4964:	f7 fe       	sbrs	r15, 7
    4966:	0a c0       	rjmp	.+20     	; 0x497c <vfprintf+0x154>
    4968:	3b e3       	ldi	r19, 0x3B	; 59
    496a:	39 15       	cp	r19, r9
    496c:	18 f4       	brcc	.+6      	; 0x4974 <vfprintf+0x14c>
    496e:	5c e3       	ldi	r21, 0x3C	; 60
    4970:	b5 2e       	mov	r11, r21
    4972:	02 c0       	rjmp	.+4      	; 0x4978 <vfprintf+0x150>
    4974:	b9 2c       	mov	r11, r9
    4976:	b3 94       	inc	r11
    4978:	27 e0       	ldi	r18, 0x07	; 7
    497a:	09 c0       	rjmp	.+18     	; 0x498e <vfprintf+0x166>
    497c:	47 e0       	ldi	r20, 0x07	; 7
    497e:	49 15       	cp	r20, r9
    4980:	20 f4       	brcc	.+8      	; 0x498a <vfprintf+0x162>
    4982:	bb 24       	eor	r11, r11
    4984:	47 e0       	ldi	r20, 0x07	; 7
    4986:	94 2e       	mov	r9, r20
    4988:	f7 cf       	rjmp	.-18     	; 0x4978 <vfprintf+0x150>
    498a:	29 2d       	mov	r18, r9
    498c:	bb 24       	eor	r11, r11
    498e:	c6 01       	movw	r24, r12
    4990:	04 96       	adiw	r24, 0x04	; 4
    4992:	9d 87       	std	Y+13, r25	; 0x0d
    4994:	8c 87       	std	Y+12, r24	; 0x0c
    4996:	f6 01       	movw	r30, r12
    4998:	60 81       	ld	r22, Z
    499a:	71 81       	ldd	r23, Z+1	; 0x01
    499c:	82 81       	ldd	r24, Z+2	; 0x02
    499e:	93 81       	ldd	r25, Z+3	; 0x03
    49a0:	ae 01       	movw	r20, r28
    49a2:	4f 5f       	subi	r20, 0xFF	; 255
    49a4:	5f 4f       	sbci	r21, 0xFF	; 255
    49a6:	0b 2d       	mov	r16, r11
    49a8:	a4 d4       	rcall	.+2376   	; 0x52f2 <__ftoa_engine>
    49aa:	6c 01       	movw	r12, r24
    49ac:	09 81       	ldd	r16, Y+1	; 0x01
    49ae:	20 2e       	mov	r2, r16
    49b0:	33 24       	eor	r3, r3
    49b2:	00 ff       	sbrs	r16, 0
    49b4:	04 c0       	rjmp	.+8      	; 0x49be <vfprintf+0x196>
    49b6:	03 fd       	sbrc	r16, 3
    49b8:	02 c0       	rjmp	.+4      	; 0x49be <vfprintf+0x196>
    49ba:	1d e2       	ldi	r17, 0x2D	; 45
    49bc:	09 c0       	rjmp	.+18     	; 0x49d0 <vfprintf+0x1a8>
    49be:	f1 fe       	sbrs	r15, 1
    49c0:	02 c0       	rjmp	.+4      	; 0x49c6 <vfprintf+0x19e>
    49c2:	1b e2       	ldi	r17, 0x2B	; 43
    49c4:	05 c0       	rjmp	.+10     	; 0x49d0 <vfprintf+0x1a8>
    49c6:	f2 fc       	sbrc	r15, 2
    49c8:	02 c0       	rjmp	.+4      	; 0x49ce <vfprintf+0x1a6>
    49ca:	10 e0       	ldi	r17, 0x00	; 0
    49cc:	01 c0       	rjmp	.+2      	; 0x49d0 <vfprintf+0x1a8>
    49ce:	10 e2       	ldi	r17, 0x20	; 32
    49d0:	c1 01       	movw	r24, r2
    49d2:	8c 70       	andi	r24, 0x0C	; 12
    49d4:	90 70       	andi	r25, 0x00	; 0
    49d6:	89 2b       	or	r24, r25
    49d8:	a1 f1       	breq	.+104    	; 0x4a42 <vfprintf+0x21a>
    49da:	11 23       	and	r17, r17
    49dc:	11 f4       	brne	.+4      	; 0x49e2 <vfprintf+0x1ba>
    49de:	83 e0       	ldi	r24, 0x03	; 3
    49e0:	01 c0       	rjmp	.+2      	; 0x49e4 <vfprintf+0x1bc>
    49e2:	84 e0       	ldi	r24, 0x04	; 4
    49e4:	88 15       	cp	r24, r8
    49e6:	10 f0       	brcs	.+4      	; 0x49ec <vfprintf+0x1c4>
    49e8:	88 24       	eor	r8, r8
    49ea:	09 c0       	rjmp	.+18     	; 0x49fe <vfprintf+0x1d6>
    49ec:	88 1a       	sub	r8, r24
    49ee:	f3 fc       	sbrc	r15, 3
    49f0:	06 c0       	rjmp	.+12     	; 0x49fe <vfprintf+0x1d6>
    49f2:	80 e2       	ldi	r24, 0x20	; 32
    49f4:	90 e0       	ldi	r25, 0x00	; 0
    49f6:	b3 01       	movw	r22, r6
    49f8:	6a d5       	rcall	.+2772   	; 0x54ce <fputc>
    49fa:	8a 94       	dec	r8
    49fc:	d1 f7       	brne	.-12     	; 0x49f2 <vfprintf+0x1ca>
    49fe:	11 23       	and	r17, r17
    4a00:	21 f0       	breq	.+8      	; 0x4a0a <vfprintf+0x1e2>
    4a02:	81 2f       	mov	r24, r17
    4a04:	90 e0       	ldi	r25, 0x00	; 0
    4a06:	b3 01       	movw	r22, r6
    4a08:	62 d5       	rcall	.+2756   	; 0x54ce <fputc>
    4a0a:	23 fe       	sbrs	r2, 3
    4a0c:	03 c0       	rjmp	.+6      	; 0x4a14 <vfprintf+0x1ec>
    4a0e:	0f e5       	ldi	r16, 0x5F	; 95
    4a10:	15 e0       	ldi	r17, 0x05	; 5
    4a12:	0d c0       	rjmp	.+26     	; 0x4a2e <vfprintf+0x206>
    4a14:	03 e6       	ldi	r16, 0x63	; 99
    4a16:	15 e0       	ldi	r17, 0x05	; 5
    4a18:	0a c0       	rjmp	.+20     	; 0x4a2e <vfprintf+0x206>
    4a1a:	e1 14       	cp	r14, r1
    4a1c:	f1 04       	cpc	r15, r1
    4a1e:	09 f0       	breq	.+2      	; 0x4a22 <vfprintf+0x1fa>
    4a20:	80 52       	subi	r24, 0x20	; 32
    4a22:	90 e0       	ldi	r25, 0x00	; 0
    4a24:	b3 01       	movw	r22, r6
    4a26:	53 d5       	rcall	.+2726   	; 0x54ce <fputc>
    4a28:	0f 5f       	subi	r16, 0xFF	; 255
    4a2a:	1f 4f       	sbci	r17, 0xFF	; 255
    4a2c:	05 c0       	rjmp	.+10     	; 0x4a38 <vfprintf+0x210>
    4a2e:	ef 2c       	mov	r14, r15
    4a30:	ff 24       	eor	r15, r15
    4a32:	f0 e1       	ldi	r31, 0x10	; 16
    4a34:	ef 22       	and	r14, r31
    4a36:	ff 24       	eor	r15, r15
    4a38:	f8 01       	movw	r30, r16
    4a3a:	84 91       	lpm	r24, Z+
    4a3c:	88 23       	and	r24, r24
    4a3e:	69 f7       	brne	.-38     	; 0x4a1a <vfprintf+0x1f2>
    4a40:	08 c1       	rjmp	.+528    	; 0x4c52 <vfprintf+0x42a>
    4a42:	f7 fe       	sbrs	r15, 7
    4a44:	12 c0       	rjmp	.+36     	; 0x4a6a <vfprintf+0x242>
    4a46:	bc 0c       	add	r11, r12
    4a48:	24 fe       	sbrs	r2, 4
    4a4a:	04 c0       	rjmp	.+8      	; 0x4a54 <vfprintf+0x22c>
    4a4c:	8a 81       	ldd	r24, Y+2	; 0x02
    4a4e:	81 33       	cpi	r24, 0x31	; 49
    4a50:	09 f4       	brne	.+2      	; 0x4a54 <vfprintf+0x22c>
    4a52:	ba 94       	dec	r11
    4a54:	1b 14       	cp	r1, r11
    4a56:	1c f0       	brlt	.+6      	; 0x4a5e <vfprintf+0x236>
    4a58:	bb 24       	eor	r11, r11
    4a5a:	b3 94       	inc	r11
    4a5c:	2d c0       	rjmp	.+90     	; 0x4ab8 <vfprintf+0x290>
    4a5e:	f8 e0       	ldi	r31, 0x08	; 8
    4a60:	fb 15       	cp	r31, r11
    4a62:	50 f5       	brcc	.+84     	; 0x4ab8 <vfprintf+0x290>
    4a64:	38 e0       	ldi	r19, 0x08	; 8
    4a66:	b3 2e       	mov	r11, r19
    4a68:	27 c0       	rjmp	.+78     	; 0x4ab8 <vfprintf+0x290>
    4a6a:	f6 fc       	sbrc	r15, 6
    4a6c:	25 c0       	rjmp	.+74     	; 0x4ab8 <vfprintf+0x290>
    4a6e:	89 2d       	mov	r24, r9
    4a70:	90 e0       	ldi	r25, 0x00	; 0
    4a72:	8c 15       	cp	r24, r12
    4a74:	9d 05       	cpc	r25, r13
    4a76:	4c f0       	brlt	.+18     	; 0x4a8a <vfprintf+0x262>
    4a78:	2c ef       	ldi	r18, 0xFC	; 252
    4a7a:	c2 16       	cp	r12, r18
    4a7c:	2f ef       	ldi	r18, 0xFF	; 255
    4a7e:	d2 06       	cpc	r13, r18
    4a80:	24 f0       	brlt	.+8      	; 0x4a8a <vfprintf+0x262>
    4a82:	30 e8       	ldi	r19, 0x80	; 128
    4a84:	f3 2a       	or	r15, r19
    4a86:	01 c0       	rjmp	.+2      	; 0x4a8a <vfprintf+0x262>
    4a88:	9a 94       	dec	r9
    4a8a:	99 20       	and	r9, r9
    4a8c:	49 f0       	breq	.+18     	; 0x4aa0 <vfprintf+0x278>
    4a8e:	e2 e0       	ldi	r30, 0x02	; 2
    4a90:	f0 e0       	ldi	r31, 0x00	; 0
    4a92:	ec 0f       	add	r30, r28
    4a94:	fd 1f       	adc	r31, r29
    4a96:	e9 0d       	add	r30, r9
    4a98:	f1 1d       	adc	r31, r1
    4a9a:	80 81       	ld	r24, Z
    4a9c:	80 33       	cpi	r24, 0x30	; 48
    4a9e:	a1 f3       	breq	.-24     	; 0x4a88 <vfprintf+0x260>
    4aa0:	f7 fe       	sbrs	r15, 7
    4aa2:	0a c0       	rjmp	.+20     	; 0x4ab8 <vfprintf+0x290>
    4aa4:	b9 2c       	mov	r11, r9
    4aa6:	b3 94       	inc	r11
    4aa8:	89 2d       	mov	r24, r9
    4aaa:	90 e0       	ldi	r25, 0x00	; 0
    4aac:	c8 16       	cp	r12, r24
    4aae:	d9 06       	cpc	r13, r25
    4ab0:	14 f0       	brlt	.+4      	; 0x4ab6 <vfprintf+0x28e>
    4ab2:	99 24       	eor	r9, r9
    4ab4:	01 c0       	rjmp	.+2      	; 0x4ab8 <vfprintf+0x290>
    4ab6:	9c 18       	sub	r9, r12
    4ab8:	f7 fc       	sbrc	r15, 7
    4aba:	03 c0       	rjmp	.+6      	; 0x4ac2 <vfprintf+0x29a>
    4abc:	25 e0       	ldi	r18, 0x05	; 5
    4abe:	30 e0       	ldi	r19, 0x00	; 0
    4ac0:	09 c0       	rjmp	.+18     	; 0x4ad4 <vfprintf+0x2ac>
    4ac2:	1c 14       	cp	r1, r12
    4ac4:	1d 04       	cpc	r1, r13
    4ac6:	1c f0       	brlt	.+6      	; 0x4ace <vfprintf+0x2a6>
    4ac8:	21 e0       	ldi	r18, 0x01	; 1
    4aca:	30 e0       	ldi	r19, 0x00	; 0
    4acc:	03 c0       	rjmp	.+6      	; 0x4ad4 <vfprintf+0x2ac>
    4ace:	96 01       	movw	r18, r12
    4ad0:	2f 5f       	subi	r18, 0xFF	; 255
    4ad2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ad4:	11 23       	and	r17, r17
    4ad6:	11 f0       	breq	.+4      	; 0x4adc <vfprintf+0x2b4>
    4ad8:	2f 5f       	subi	r18, 0xFF	; 255
    4ada:	3f 4f       	sbci	r19, 0xFF	; 255
    4adc:	99 20       	and	r9, r9
    4ade:	29 f0       	breq	.+10     	; 0x4aea <vfprintf+0x2c2>
    4ae0:	89 2d       	mov	r24, r9
    4ae2:	90 e0       	ldi	r25, 0x00	; 0
    4ae4:	01 96       	adiw	r24, 0x01	; 1
    4ae6:	28 0f       	add	r18, r24
    4ae8:	39 1f       	adc	r19, r25
    4aea:	88 2d       	mov	r24, r8
    4aec:	90 e0       	ldi	r25, 0x00	; 0
    4aee:	28 17       	cp	r18, r24
    4af0:	39 07       	cpc	r19, r25
    4af2:	14 f0       	brlt	.+4      	; 0x4af8 <vfprintf+0x2d0>
    4af4:	88 24       	eor	r8, r8
    4af6:	01 c0       	rjmp	.+2      	; 0x4afa <vfprintf+0x2d2>
    4af8:	82 1a       	sub	r8, r18
    4afa:	4f 2c       	mov	r4, r15
    4afc:	55 24       	eor	r5, r5
    4afe:	c2 01       	movw	r24, r4
    4b00:	89 70       	andi	r24, 0x09	; 9
    4b02:	90 70       	andi	r25, 0x00	; 0
    4b04:	89 2b       	or	r24, r25
    4b06:	31 f0       	breq	.+12     	; 0x4b14 <vfprintf+0x2ec>
    4b08:	07 c0       	rjmp	.+14     	; 0x4b18 <vfprintf+0x2f0>
    4b0a:	80 e2       	ldi	r24, 0x20	; 32
    4b0c:	90 e0       	ldi	r25, 0x00	; 0
    4b0e:	b3 01       	movw	r22, r6
    4b10:	de d4       	rcall	.+2492   	; 0x54ce <fputc>
    4b12:	8a 94       	dec	r8
    4b14:	88 20       	and	r8, r8
    4b16:	c9 f7       	brne	.-14     	; 0x4b0a <vfprintf+0x2e2>
    4b18:	11 23       	and	r17, r17
    4b1a:	21 f0       	breq	.+8      	; 0x4b24 <vfprintf+0x2fc>
    4b1c:	81 2f       	mov	r24, r17
    4b1e:	90 e0       	ldi	r25, 0x00	; 0
    4b20:	b3 01       	movw	r22, r6
    4b22:	d5 d4       	rcall	.+2474   	; 0x54ce <fputc>
    4b24:	43 fe       	sbrs	r4, 3
    4b26:	06 c0       	rjmp	.+12     	; 0x4b34 <vfprintf+0x30c>
    4b28:	07 c0       	rjmp	.+14     	; 0x4b38 <vfprintf+0x310>
    4b2a:	80 e3       	ldi	r24, 0x30	; 48
    4b2c:	90 e0       	ldi	r25, 0x00	; 0
    4b2e:	b3 01       	movw	r22, r6
    4b30:	ce d4       	rcall	.+2460   	; 0x54ce <fputc>
    4b32:	8a 94       	dec	r8
    4b34:	88 20       	and	r8, r8
    4b36:	c9 f7       	brne	.-14     	; 0x4b2a <vfprintf+0x302>
    4b38:	f7 fe       	sbrs	r15, 7
    4b3a:	44 c0       	rjmp	.+136    	; 0x4bc4 <vfprintf+0x39c>
    4b3c:	86 01       	movw	r16, r12
    4b3e:	d7 fe       	sbrs	r13, 7
    4b40:	02 c0       	rjmp	.+4      	; 0x4b46 <vfprintf+0x31e>
    4b42:	00 e0       	ldi	r16, 0x00	; 0
    4b44:	10 e0       	ldi	r17, 0x00	; 0
    4b46:	76 01       	movw	r14, r12
    4b48:	08 94       	sec
    4b4a:	e1 1c       	adc	r14, r1
    4b4c:	f1 1c       	adc	r15, r1
    4b4e:	e0 1a       	sub	r14, r16
    4b50:	f1 0a       	sbc	r15, r17
    4b52:	41 e0       	ldi	r20, 0x01	; 1
    4b54:	50 e0       	ldi	r21, 0x00	; 0
    4b56:	4c 0f       	add	r20, r28
    4b58:	5d 1f       	adc	r21, r29
    4b5a:	e4 0e       	add	r14, r20
    4b5c:	f5 1e       	adc	r15, r21
    4b5e:	26 01       	movw	r4, r12
    4b60:	4b 18       	sub	r4, r11
    4b62:	51 08       	sbc	r5, r1
    4b64:	89 2d       	mov	r24, r9
    4b66:	90 e0       	ldi	r25, 0x00	; 0
    4b68:	aa 24       	eor	r10, r10
    4b6a:	bb 24       	eor	r11, r11
    4b6c:	a8 1a       	sub	r10, r24
    4b6e:	b9 0a       	sbc	r11, r25
    4b70:	5f ef       	ldi	r21, 0xFF	; 255
    4b72:	0f 3f       	cpi	r16, 0xFF	; 255
    4b74:	15 07       	cpc	r17, r21
    4b76:	21 f4       	brne	.+8      	; 0x4b80 <vfprintf+0x358>
    4b78:	8e e2       	ldi	r24, 0x2E	; 46
    4b7a:	90 e0       	ldi	r25, 0x00	; 0
    4b7c:	b3 01       	movw	r22, r6
    4b7e:	a7 d4       	rcall	.+2382   	; 0x54ce <fputc>
    4b80:	c0 16       	cp	r12, r16
    4b82:	d1 06       	cpc	r13, r17
    4b84:	34 f0       	brlt	.+12     	; 0x4b92 <vfprintf+0x36a>
    4b86:	40 16       	cp	r4, r16
    4b88:	51 06       	cpc	r5, r17
    4b8a:	1c f4       	brge	.+6      	; 0x4b92 <vfprintf+0x36a>
    4b8c:	f7 01       	movw	r30, r14
    4b8e:	80 81       	ld	r24, Z
    4b90:	01 c0       	rjmp	.+2      	; 0x4b94 <vfprintf+0x36c>
    4b92:	80 e3       	ldi	r24, 0x30	; 48
    4b94:	01 50       	subi	r16, 0x01	; 1
    4b96:	10 40       	sbci	r17, 0x00	; 0
    4b98:	08 94       	sec
    4b9a:	e1 1c       	adc	r14, r1
    4b9c:	f1 1c       	adc	r15, r1
    4b9e:	0a 15       	cp	r16, r10
    4ba0:	1b 05       	cpc	r17, r11
    4ba2:	24 f0       	brlt	.+8      	; 0x4bac <vfprintf+0x384>
    4ba4:	90 e0       	ldi	r25, 0x00	; 0
    4ba6:	b3 01       	movw	r22, r6
    4ba8:	92 d4       	rcall	.+2340   	; 0x54ce <fputc>
    4baa:	e2 cf       	rjmp	.-60     	; 0x4b70 <vfprintf+0x348>
    4bac:	0c 15       	cp	r16, r12
    4bae:	1d 05       	cpc	r17, r13
    4bb0:	39 f4       	brne	.+14     	; 0x4bc0 <vfprintf+0x398>
    4bb2:	9a 81       	ldd	r25, Y+2	; 0x02
    4bb4:	96 33       	cpi	r25, 0x36	; 54
    4bb6:	18 f4       	brcc	.+6      	; 0x4bbe <vfprintf+0x396>
    4bb8:	95 33       	cpi	r25, 0x35	; 53
    4bba:	11 f4       	brne	.+4      	; 0x4bc0 <vfprintf+0x398>
    4bbc:	24 fe       	sbrs	r2, 4
    4bbe:	81 e3       	ldi	r24, 0x31	; 49
    4bc0:	90 e0       	ldi	r25, 0x00	; 0
    4bc2:	45 c0       	rjmp	.+138    	; 0x4c4e <vfprintf+0x426>
    4bc4:	8a 81       	ldd	r24, Y+2	; 0x02
    4bc6:	81 33       	cpi	r24, 0x31	; 49
    4bc8:	09 f0       	breq	.+2      	; 0x4bcc <vfprintf+0x3a4>
    4bca:	0f 7e       	andi	r16, 0xEF	; 239
    4bcc:	90 e0       	ldi	r25, 0x00	; 0
    4bce:	b3 01       	movw	r22, r6
    4bd0:	7e d4       	rcall	.+2300   	; 0x54ce <fputc>
    4bd2:	99 20       	and	r9, r9
    4bd4:	91 f0       	breq	.+36     	; 0x4bfa <vfprintf+0x3d2>
    4bd6:	8e e2       	ldi	r24, 0x2E	; 46
    4bd8:	90 e0       	ldi	r25, 0x00	; 0
    4bda:	b3 01       	movw	r22, r6
    4bdc:	78 d4       	rcall	.+2288   	; 0x54ce <fputc>
    4bde:	12 e0       	ldi	r17, 0x02	; 2
    4be0:	e1 e0       	ldi	r30, 0x01	; 1
    4be2:	f0 e0       	ldi	r31, 0x00	; 0
    4be4:	ec 0f       	add	r30, r28
    4be6:	fd 1f       	adc	r31, r29
    4be8:	e1 0f       	add	r30, r17
    4bea:	f1 1d       	adc	r31, r1
    4bec:	1f 5f       	subi	r17, 0xFF	; 255
    4bee:	80 81       	ld	r24, Z
    4bf0:	90 e0       	ldi	r25, 0x00	; 0
    4bf2:	b3 01       	movw	r22, r6
    4bf4:	6c d4       	rcall	.+2264   	; 0x54ce <fputc>
    4bf6:	9a 94       	dec	r9
    4bf8:	99 f7       	brne	.-26     	; 0x4be0 <vfprintf+0x3b8>
    4bfa:	44 fc       	sbrc	r4, 4
    4bfc:	03 c0       	rjmp	.+6      	; 0x4c04 <vfprintf+0x3dc>
    4bfe:	85 e6       	ldi	r24, 0x65	; 101
    4c00:	90 e0       	ldi	r25, 0x00	; 0
    4c02:	02 c0       	rjmp	.+4      	; 0x4c08 <vfprintf+0x3e0>
    4c04:	85 e4       	ldi	r24, 0x45	; 69
    4c06:	90 e0       	ldi	r25, 0x00	; 0
    4c08:	b3 01       	movw	r22, r6
    4c0a:	61 d4       	rcall	.+2242   	; 0x54ce <fputc>
    4c0c:	d7 fc       	sbrc	r13, 7
    4c0e:	05 c0       	rjmp	.+10     	; 0x4c1a <vfprintf+0x3f2>
    4c10:	c1 14       	cp	r12, r1
    4c12:	d1 04       	cpc	r13, r1
    4c14:	41 f4       	brne	.+16     	; 0x4c26 <vfprintf+0x3fe>
    4c16:	04 ff       	sbrs	r16, 4
    4c18:	06 c0       	rjmp	.+12     	; 0x4c26 <vfprintf+0x3fe>
    4c1a:	d0 94       	com	r13
    4c1c:	c1 94       	neg	r12
    4c1e:	d1 08       	sbc	r13, r1
    4c20:	d3 94       	inc	r13
    4c22:	8d e2       	ldi	r24, 0x2D	; 45
    4c24:	01 c0       	rjmp	.+2      	; 0x4c28 <vfprintf+0x400>
    4c26:	8b e2       	ldi	r24, 0x2B	; 43
    4c28:	90 e0       	ldi	r25, 0x00	; 0
    4c2a:	b3 01       	movw	r22, r6
    4c2c:	50 d4       	rcall	.+2208   	; 0x54ce <fputc>
    4c2e:	80 e3       	ldi	r24, 0x30	; 48
    4c30:	05 c0       	rjmp	.+10     	; 0x4c3c <vfprintf+0x414>
    4c32:	8f 5f       	subi	r24, 0xFF	; 255
    4c34:	26 ef       	ldi	r18, 0xF6	; 246
    4c36:	3f ef       	ldi	r19, 0xFF	; 255
    4c38:	c2 0e       	add	r12, r18
    4c3a:	d3 1e       	adc	r13, r19
    4c3c:	3a e0       	ldi	r19, 0x0A	; 10
    4c3e:	c3 16       	cp	r12, r19
    4c40:	d1 04       	cpc	r13, r1
    4c42:	bc f7       	brge	.-18     	; 0x4c32 <vfprintf+0x40a>
    4c44:	90 e0       	ldi	r25, 0x00	; 0
    4c46:	b3 01       	movw	r22, r6
    4c48:	42 d4       	rcall	.+2180   	; 0x54ce <fputc>
    4c4a:	c6 01       	movw	r24, r12
    4c4c:	c0 96       	adiw	r24, 0x30	; 48
    4c4e:	b3 01       	movw	r22, r6
    4c50:	3e d4       	rcall	.+2172   	; 0x54ce <fputc>
    4c52:	cc 84       	ldd	r12, Y+12	; 0x0c
    4c54:	dd 84       	ldd	r13, Y+13	; 0x0d
    4c56:	46 c1       	rjmp	.+652    	; 0x4ee4 <vfprintf+0x6bc>
    4c58:	93 36       	cpi	r25, 0x63	; 99
    4c5a:	31 f0       	breq	.+12     	; 0x4c68 <vfprintf+0x440>
    4c5c:	93 37       	cpi	r25, 0x73	; 115
    4c5e:	99 f0       	breq	.+38     	; 0x4c86 <vfprintf+0x45e>
    4c60:	93 35       	cpi	r25, 0x53	; 83
    4c62:	09 f0       	breq	.+2      	; 0x4c66 <vfprintf+0x43e>
    4c64:	55 c0       	rjmp	.+170    	; 0x4d10 <vfprintf+0x4e8>
    4c66:	22 c0       	rjmp	.+68     	; 0x4cac <vfprintf+0x484>
    4c68:	f6 01       	movw	r30, r12
    4c6a:	80 81       	ld	r24, Z
    4c6c:	89 83       	std	Y+1, r24	; 0x01
    4c6e:	5e 01       	movw	r10, r28
    4c70:	08 94       	sec
    4c72:	a1 1c       	adc	r10, r1
    4c74:	b1 1c       	adc	r11, r1
    4c76:	22 e0       	ldi	r18, 0x02	; 2
    4c78:	30 e0       	ldi	r19, 0x00	; 0
    4c7a:	c2 0e       	add	r12, r18
    4c7c:	d3 1e       	adc	r13, r19
    4c7e:	21 e0       	ldi	r18, 0x01	; 1
    4c80:	e2 2e       	mov	r14, r18
    4c82:	f1 2c       	mov	r15, r1
    4c84:	11 c0       	rjmp	.+34     	; 0x4ca8 <vfprintf+0x480>
    4c86:	f6 01       	movw	r30, r12
    4c88:	a0 80       	ld	r10, Z
    4c8a:	b1 80       	ldd	r11, Z+1	; 0x01
    4c8c:	16 fd       	sbrc	r17, 6
    4c8e:	03 c0       	rjmp	.+6      	; 0x4c96 <vfprintf+0x46e>
    4c90:	6f ef       	ldi	r22, 0xFF	; 255
    4c92:	7f ef       	ldi	r23, 0xFF	; 255
    4c94:	02 c0       	rjmp	.+4      	; 0x4c9a <vfprintf+0x472>
    4c96:	69 2d       	mov	r22, r9
    4c98:	70 e0       	ldi	r23, 0x00	; 0
    4c9a:	22 e0       	ldi	r18, 0x02	; 2
    4c9c:	30 e0       	ldi	r19, 0x00	; 0
    4c9e:	c2 0e       	add	r12, r18
    4ca0:	d3 1e       	adc	r13, r19
    4ca2:	c5 01       	movw	r24, r10
    4ca4:	09 d4       	rcall	.+2066   	; 0x54b8 <strnlen>
    4ca6:	7c 01       	movw	r14, r24
    4ca8:	1f 77       	andi	r17, 0x7F	; 127
    4caa:	12 c0       	rjmp	.+36     	; 0x4cd0 <vfprintf+0x4a8>
    4cac:	f6 01       	movw	r30, r12
    4cae:	a0 80       	ld	r10, Z
    4cb0:	b1 80       	ldd	r11, Z+1	; 0x01
    4cb2:	16 fd       	sbrc	r17, 6
    4cb4:	03 c0       	rjmp	.+6      	; 0x4cbc <vfprintf+0x494>
    4cb6:	6f ef       	ldi	r22, 0xFF	; 255
    4cb8:	7f ef       	ldi	r23, 0xFF	; 255
    4cba:	02 c0       	rjmp	.+4      	; 0x4cc0 <vfprintf+0x498>
    4cbc:	69 2d       	mov	r22, r9
    4cbe:	70 e0       	ldi	r23, 0x00	; 0
    4cc0:	22 e0       	ldi	r18, 0x02	; 2
    4cc2:	30 e0       	ldi	r19, 0x00	; 0
    4cc4:	c2 0e       	add	r12, r18
    4cc6:	d3 1e       	adc	r13, r19
    4cc8:	c5 01       	movw	r24, r10
    4cca:	eb d3       	rcall	.+2006   	; 0x54a2 <strnlen_P>
    4ccc:	7c 01       	movw	r14, r24
    4cce:	10 68       	ori	r17, 0x80	; 128
    4cd0:	13 ff       	sbrs	r17, 3
    4cd2:	06 c0       	rjmp	.+12     	; 0x4ce0 <vfprintf+0x4b8>
    4cd4:	19 c0       	rjmp	.+50     	; 0x4d08 <vfprintf+0x4e0>
    4cd6:	80 e2       	ldi	r24, 0x20	; 32
    4cd8:	90 e0       	ldi	r25, 0x00	; 0
    4cda:	b3 01       	movw	r22, r6
    4cdc:	f8 d3       	rcall	.+2032   	; 0x54ce <fputc>
    4cde:	8a 94       	dec	r8
    4ce0:	88 2d       	mov	r24, r8
    4ce2:	90 e0       	ldi	r25, 0x00	; 0
    4ce4:	e8 16       	cp	r14, r24
    4ce6:	f9 06       	cpc	r15, r25
    4ce8:	b0 f3       	brcs	.-20     	; 0x4cd6 <vfprintf+0x4ae>
    4cea:	0e c0       	rjmp	.+28     	; 0x4d08 <vfprintf+0x4e0>
    4cec:	f5 01       	movw	r30, r10
    4cee:	17 fd       	sbrc	r17, 7
    4cf0:	85 91       	lpm	r24, Z+
    4cf2:	17 ff       	sbrs	r17, 7
    4cf4:	81 91       	ld	r24, Z+
    4cf6:	5f 01       	movw	r10, r30
    4cf8:	90 e0       	ldi	r25, 0x00	; 0
    4cfa:	b3 01       	movw	r22, r6
    4cfc:	e8 d3       	rcall	.+2000   	; 0x54ce <fputc>
    4cfe:	81 10       	cpse	r8, r1
    4d00:	8a 94       	dec	r8
    4d02:	08 94       	sec
    4d04:	e1 08       	sbc	r14, r1
    4d06:	f1 08       	sbc	r15, r1
    4d08:	e1 14       	cp	r14, r1
    4d0a:	f1 04       	cpc	r15, r1
    4d0c:	79 f7       	brne	.-34     	; 0x4cec <vfprintf+0x4c4>
    4d0e:	ea c0       	rjmp	.+468    	; 0x4ee4 <vfprintf+0x6bc>
    4d10:	94 36       	cpi	r25, 0x64	; 100
    4d12:	11 f0       	breq	.+4      	; 0x4d18 <vfprintf+0x4f0>
    4d14:	99 36       	cpi	r25, 0x69	; 105
    4d16:	81 f5       	brne	.+96     	; 0x4d78 <vfprintf+0x550>
    4d18:	17 ff       	sbrs	r17, 7
    4d1a:	08 c0       	rjmp	.+16     	; 0x4d2c <vfprintf+0x504>
    4d1c:	f6 01       	movw	r30, r12
    4d1e:	20 81       	ld	r18, Z
    4d20:	31 81       	ldd	r19, Z+1	; 0x01
    4d22:	42 81       	ldd	r20, Z+2	; 0x02
    4d24:	53 81       	ldd	r21, Z+3	; 0x03
    4d26:	84 e0       	ldi	r24, 0x04	; 4
    4d28:	90 e0       	ldi	r25, 0x00	; 0
    4d2a:	0a c0       	rjmp	.+20     	; 0x4d40 <vfprintf+0x518>
    4d2c:	f6 01       	movw	r30, r12
    4d2e:	80 81       	ld	r24, Z
    4d30:	91 81       	ldd	r25, Z+1	; 0x01
    4d32:	9c 01       	movw	r18, r24
    4d34:	44 27       	eor	r20, r20
    4d36:	37 fd       	sbrc	r19, 7
    4d38:	40 95       	com	r20
    4d3a:	54 2f       	mov	r21, r20
    4d3c:	82 e0       	ldi	r24, 0x02	; 2
    4d3e:	90 e0       	ldi	r25, 0x00	; 0
    4d40:	c8 0e       	add	r12, r24
    4d42:	d9 1e       	adc	r13, r25
    4d44:	9f e6       	ldi	r25, 0x6F	; 111
    4d46:	f9 2e       	mov	r15, r25
    4d48:	f1 22       	and	r15, r17
    4d4a:	57 ff       	sbrs	r21, 7
    4d4c:	09 c0       	rjmp	.+18     	; 0x4d60 <vfprintf+0x538>
    4d4e:	50 95       	com	r21
    4d50:	40 95       	com	r20
    4d52:	30 95       	com	r19
    4d54:	21 95       	neg	r18
    4d56:	3f 4f       	sbci	r19, 0xFF	; 255
    4d58:	4f 4f       	sbci	r20, 0xFF	; 255
    4d5a:	5f 4f       	sbci	r21, 0xFF	; 255
    4d5c:	90 e8       	ldi	r25, 0x80	; 128
    4d5e:	f9 2a       	or	r15, r25
    4d60:	ca 01       	movw	r24, r20
    4d62:	b9 01       	movw	r22, r18
    4d64:	ae 01       	movw	r20, r28
    4d66:	4f 5f       	subi	r20, 0xFF	; 255
    4d68:	5f 4f       	sbci	r21, 0xFF	; 255
    4d6a:	2a e0       	ldi	r18, 0x0A	; 10
    4d6c:	30 e0       	ldi	r19, 0x00	; 0
    4d6e:	22 d4       	rcall	.+2116   	; 0x55b4 <__ultoa_invert>
    4d70:	e8 2e       	mov	r14, r24
    4d72:	e8 89       	ldd	r30, Y+16	; 0x10
    4d74:	ee 1a       	sub	r14, r30
    4d76:	40 c0       	rjmp	.+128    	; 0x4df8 <vfprintf+0x5d0>
    4d78:	95 37       	cpi	r25, 0x75	; 117
    4d7a:	21 f4       	brne	.+8      	; 0x4d84 <vfprintf+0x55c>
    4d7c:	1f 7e       	andi	r17, 0xEF	; 239
    4d7e:	2a e0       	ldi	r18, 0x0A	; 10
    4d80:	30 e0       	ldi	r19, 0x00	; 0
    4d82:	1c c0       	rjmp	.+56     	; 0x4dbc <vfprintf+0x594>
    4d84:	19 7f       	andi	r17, 0xF9	; 249
    4d86:	9f 36       	cpi	r25, 0x6F	; 111
    4d88:	61 f0       	breq	.+24     	; 0x4da2 <vfprintf+0x57a>
    4d8a:	90 37       	cpi	r25, 0x70	; 112
    4d8c:	20 f4       	brcc	.+8      	; 0x4d96 <vfprintf+0x56e>
    4d8e:	98 35       	cpi	r25, 0x58	; 88
    4d90:	09 f0       	breq	.+2      	; 0x4d94 <vfprintf+0x56c>
    4d92:	ab c0       	rjmp	.+342    	; 0x4eea <vfprintf+0x6c2>
    4d94:	0f c0       	rjmp	.+30     	; 0x4db4 <vfprintf+0x58c>
    4d96:	90 37       	cpi	r25, 0x70	; 112
    4d98:	39 f0       	breq	.+14     	; 0x4da8 <vfprintf+0x580>
    4d9a:	98 37       	cpi	r25, 0x78	; 120
    4d9c:	09 f0       	breq	.+2      	; 0x4da0 <vfprintf+0x578>
    4d9e:	a5 c0       	rjmp	.+330    	; 0x4eea <vfprintf+0x6c2>
    4da0:	04 c0       	rjmp	.+8      	; 0x4daa <vfprintf+0x582>
    4da2:	28 e0       	ldi	r18, 0x08	; 8
    4da4:	30 e0       	ldi	r19, 0x00	; 0
    4da6:	0a c0       	rjmp	.+20     	; 0x4dbc <vfprintf+0x594>
    4da8:	10 61       	ori	r17, 0x10	; 16
    4daa:	14 fd       	sbrc	r17, 4
    4dac:	14 60       	ori	r17, 0x04	; 4
    4dae:	20 e1       	ldi	r18, 0x10	; 16
    4db0:	30 e0       	ldi	r19, 0x00	; 0
    4db2:	04 c0       	rjmp	.+8      	; 0x4dbc <vfprintf+0x594>
    4db4:	14 fd       	sbrc	r17, 4
    4db6:	16 60       	ori	r17, 0x06	; 6
    4db8:	20 e1       	ldi	r18, 0x10	; 16
    4dba:	32 e0       	ldi	r19, 0x02	; 2
    4dbc:	17 ff       	sbrs	r17, 7
    4dbe:	08 c0       	rjmp	.+16     	; 0x4dd0 <vfprintf+0x5a8>
    4dc0:	f6 01       	movw	r30, r12
    4dc2:	60 81       	ld	r22, Z
    4dc4:	71 81       	ldd	r23, Z+1	; 0x01
    4dc6:	82 81       	ldd	r24, Z+2	; 0x02
    4dc8:	93 81       	ldd	r25, Z+3	; 0x03
    4dca:	44 e0       	ldi	r20, 0x04	; 4
    4dcc:	50 e0       	ldi	r21, 0x00	; 0
    4dce:	08 c0       	rjmp	.+16     	; 0x4de0 <vfprintf+0x5b8>
    4dd0:	f6 01       	movw	r30, r12
    4dd2:	80 81       	ld	r24, Z
    4dd4:	91 81       	ldd	r25, Z+1	; 0x01
    4dd6:	bc 01       	movw	r22, r24
    4dd8:	80 e0       	ldi	r24, 0x00	; 0
    4dda:	90 e0       	ldi	r25, 0x00	; 0
    4ddc:	42 e0       	ldi	r20, 0x02	; 2
    4dde:	50 e0       	ldi	r21, 0x00	; 0
    4de0:	c4 0e       	add	r12, r20
    4de2:	d5 1e       	adc	r13, r21
    4de4:	ae 01       	movw	r20, r28
    4de6:	4f 5f       	subi	r20, 0xFF	; 255
    4de8:	5f 4f       	sbci	r21, 0xFF	; 255
    4dea:	e4 d3       	rcall	.+1992   	; 0x55b4 <__ultoa_invert>
    4dec:	e8 2e       	mov	r14, r24
    4dee:	58 89       	ldd	r21, Y+16	; 0x10
    4df0:	e5 1a       	sub	r14, r21
    4df2:	8f e7       	ldi	r24, 0x7F	; 127
    4df4:	f8 2e       	mov	r15, r24
    4df6:	f1 22       	and	r15, r17
    4df8:	f6 fe       	sbrs	r15, 6
    4dfa:	0b c0       	rjmp	.+22     	; 0x4e12 <vfprintf+0x5ea>
    4dfc:	8e ef       	ldi	r24, 0xFE	; 254
    4dfe:	f8 22       	and	r15, r24
    4e00:	e9 14       	cp	r14, r9
    4e02:	38 f4       	brcc	.+14     	; 0x4e12 <vfprintf+0x5ea>
    4e04:	f4 fe       	sbrs	r15, 4
    4e06:	07 c0       	rjmp	.+14     	; 0x4e16 <vfprintf+0x5ee>
    4e08:	f2 fc       	sbrc	r15, 2
    4e0a:	05 c0       	rjmp	.+10     	; 0x4e16 <vfprintf+0x5ee>
    4e0c:	9f ee       	ldi	r25, 0xEF	; 239
    4e0e:	f9 22       	and	r15, r25
    4e10:	02 c0       	rjmp	.+4      	; 0x4e16 <vfprintf+0x5ee>
    4e12:	1e 2d       	mov	r17, r14
    4e14:	01 c0       	rjmp	.+2      	; 0x4e18 <vfprintf+0x5f0>
    4e16:	19 2d       	mov	r17, r9
    4e18:	f4 fe       	sbrs	r15, 4
    4e1a:	0d c0       	rjmp	.+26     	; 0x4e36 <vfprintf+0x60e>
    4e1c:	fe 01       	movw	r30, r28
    4e1e:	ee 0d       	add	r30, r14
    4e20:	f1 1d       	adc	r31, r1
    4e22:	80 81       	ld	r24, Z
    4e24:	80 33       	cpi	r24, 0x30	; 48
    4e26:	19 f4       	brne	.+6      	; 0x4e2e <vfprintf+0x606>
    4e28:	e9 ee       	ldi	r30, 0xE9	; 233
    4e2a:	fe 22       	and	r15, r30
    4e2c:	08 c0       	rjmp	.+16     	; 0x4e3e <vfprintf+0x616>
    4e2e:	1f 5f       	subi	r17, 0xFF	; 255
    4e30:	f2 fe       	sbrs	r15, 2
    4e32:	05 c0       	rjmp	.+10     	; 0x4e3e <vfprintf+0x616>
    4e34:	03 c0       	rjmp	.+6      	; 0x4e3c <vfprintf+0x614>
    4e36:	8f 2d       	mov	r24, r15
    4e38:	86 78       	andi	r24, 0x86	; 134
    4e3a:	09 f0       	breq	.+2      	; 0x4e3e <vfprintf+0x616>
    4e3c:	1f 5f       	subi	r17, 0xFF	; 255
    4e3e:	0f 2d       	mov	r16, r15
    4e40:	f3 fc       	sbrc	r15, 3
    4e42:	13 c0       	rjmp	.+38     	; 0x4e6a <vfprintf+0x642>
    4e44:	f0 fe       	sbrs	r15, 0
    4e46:	0e c0       	rjmp	.+28     	; 0x4e64 <vfprintf+0x63c>
    4e48:	18 15       	cp	r17, r8
    4e4a:	10 f0       	brcs	.+4      	; 0x4e50 <vfprintf+0x628>
    4e4c:	9e 2c       	mov	r9, r14
    4e4e:	0a c0       	rjmp	.+20     	; 0x4e64 <vfprintf+0x63c>
    4e50:	9e 2c       	mov	r9, r14
    4e52:	98 0c       	add	r9, r8
    4e54:	91 1a       	sub	r9, r17
    4e56:	18 2d       	mov	r17, r8
    4e58:	05 c0       	rjmp	.+10     	; 0x4e64 <vfprintf+0x63c>
    4e5a:	80 e2       	ldi	r24, 0x20	; 32
    4e5c:	90 e0       	ldi	r25, 0x00	; 0
    4e5e:	b3 01       	movw	r22, r6
    4e60:	36 d3       	rcall	.+1644   	; 0x54ce <fputc>
    4e62:	1f 5f       	subi	r17, 0xFF	; 255
    4e64:	18 15       	cp	r17, r8
    4e66:	c8 f3       	brcs	.-14     	; 0x4e5a <vfprintf+0x632>
    4e68:	04 c0       	rjmp	.+8      	; 0x4e72 <vfprintf+0x64a>
    4e6a:	18 15       	cp	r17, r8
    4e6c:	10 f4       	brcc	.+4      	; 0x4e72 <vfprintf+0x64a>
    4e6e:	81 1a       	sub	r8, r17
    4e70:	01 c0       	rjmp	.+2      	; 0x4e74 <vfprintf+0x64c>
    4e72:	88 24       	eor	r8, r8
    4e74:	04 ff       	sbrs	r16, 4
    4e76:	0e c0       	rjmp	.+28     	; 0x4e94 <vfprintf+0x66c>
    4e78:	80 e3       	ldi	r24, 0x30	; 48
    4e7a:	90 e0       	ldi	r25, 0x00	; 0
    4e7c:	b3 01       	movw	r22, r6
    4e7e:	27 d3       	rcall	.+1614   	; 0x54ce <fputc>
    4e80:	02 ff       	sbrs	r16, 2
    4e82:	1b c0       	rjmp	.+54     	; 0x4eba <vfprintf+0x692>
    4e84:	01 fd       	sbrc	r16, 1
    4e86:	03 c0       	rjmp	.+6      	; 0x4e8e <vfprintf+0x666>
    4e88:	88 e7       	ldi	r24, 0x78	; 120
    4e8a:	90 e0       	ldi	r25, 0x00	; 0
    4e8c:	0e c0       	rjmp	.+28     	; 0x4eaa <vfprintf+0x682>
    4e8e:	88 e5       	ldi	r24, 0x58	; 88
    4e90:	90 e0       	ldi	r25, 0x00	; 0
    4e92:	0b c0       	rjmp	.+22     	; 0x4eaa <vfprintf+0x682>
    4e94:	80 2f       	mov	r24, r16
    4e96:	86 78       	andi	r24, 0x86	; 134
    4e98:	81 f0       	breq	.+32     	; 0x4eba <vfprintf+0x692>
    4e9a:	01 ff       	sbrs	r16, 1
    4e9c:	02 c0       	rjmp	.+4      	; 0x4ea2 <vfprintf+0x67a>
    4e9e:	8b e2       	ldi	r24, 0x2B	; 43
    4ea0:	01 c0       	rjmp	.+2      	; 0x4ea4 <vfprintf+0x67c>
    4ea2:	80 e2       	ldi	r24, 0x20	; 32
    4ea4:	f7 fc       	sbrc	r15, 7
    4ea6:	8d e2       	ldi	r24, 0x2D	; 45
    4ea8:	90 e0       	ldi	r25, 0x00	; 0
    4eaa:	b3 01       	movw	r22, r6
    4eac:	10 d3       	rcall	.+1568   	; 0x54ce <fputc>
    4eae:	05 c0       	rjmp	.+10     	; 0x4eba <vfprintf+0x692>
    4eb0:	80 e3       	ldi	r24, 0x30	; 48
    4eb2:	90 e0       	ldi	r25, 0x00	; 0
    4eb4:	b3 01       	movw	r22, r6
    4eb6:	0b d3       	rcall	.+1558   	; 0x54ce <fputc>
    4eb8:	9a 94       	dec	r9
    4eba:	e9 14       	cp	r14, r9
    4ebc:	c8 f3       	brcs	.-14     	; 0x4eb0 <vfprintf+0x688>
    4ebe:	ea 94       	dec	r14
    4ec0:	e1 e0       	ldi	r30, 0x01	; 1
    4ec2:	f0 e0       	ldi	r31, 0x00	; 0
    4ec4:	ec 0f       	add	r30, r28
    4ec6:	fd 1f       	adc	r31, r29
    4ec8:	ee 0d       	add	r30, r14
    4eca:	f1 1d       	adc	r31, r1
    4ecc:	80 81       	ld	r24, Z
    4ece:	90 e0       	ldi	r25, 0x00	; 0
    4ed0:	b3 01       	movw	r22, r6
    4ed2:	fd d2       	rcall	.+1530   	; 0x54ce <fputc>
    4ed4:	ee 20       	and	r14, r14
    4ed6:	99 f7       	brne	.-26     	; 0x4ebe <vfprintf+0x696>
    4ed8:	05 c0       	rjmp	.+10     	; 0x4ee4 <vfprintf+0x6bc>
    4eda:	80 e2       	ldi	r24, 0x20	; 32
    4edc:	90 e0       	ldi	r25, 0x00	; 0
    4ede:	b3 01       	movw	r22, r6
    4ee0:	f6 d2       	rcall	.+1516   	; 0x54ce <fputc>
    4ee2:	8a 94       	dec	r8
    4ee4:	88 20       	and	r8, r8
    4ee6:	c9 f7       	brne	.-14     	; 0x4eda <vfprintf+0x6b2>
    4ee8:	b6 cc       	rjmp	.-1684   	; 0x4856 <vfprintf+0x2e>
    4eea:	f3 01       	movw	r30, r6
    4eec:	66 81       	ldd	r22, Z+6	; 0x06
    4eee:	77 81       	ldd	r23, Z+7	; 0x07
    4ef0:	cb 01       	movw	r24, r22
    4ef2:	61 96       	adiw	r28, 0x11	; 17
    4ef4:	e2 e1       	ldi	r30, 0x12	; 18
    4ef6:	70 c0       	rjmp	.+224    	; 0x4fd8 <__epilogue_restores__>

00004ef8 <__mulsi3>:
    4ef8:	62 9f       	mul	r22, r18
    4efa:	d0 01       	movw	r26, r0
    4efc:	73 9f       	mul	r23, r19
    4efe:	f0 01       	movw	r30, r0
    4f00:	82 9f       	mul	r24, r18
    4f02:	e0 0d       	add	r30, r0
    4f04:	f1 1d       	adc	r31, r1
    4f06:	64 9f       	mul	r22, r20
    4f08:	e0 0d       	add	r30, r0
    4f0a:	f1 1d       	adc	r31, r1
    4f0c:	92 9f       	mul	r25, r18
    4f0e:	f0 0d       	add	r31, r0
    4f10:	83 9f       	mul	r24, r19
    4f12:	f0 0d       	add	r31, r0
    4f14:	74 9f       	mul	r23, r20
    4f16:	f0 0d       	add	r31, r0
    4f18:	65 9f       	mul	r22, r21
    4f1a:	f0 0d       	add	r31, r0
    4f1c:	99 27       	eor	r25, r25
    4f1e:	72 9f       	mul	r23, r18
    4f20:	b0 0d       	add	r27, r0
    4f22:	e1 1d       	adc	r30, r1
    4f24:	f9 1f       	adc	r31, r25
    4f26:	63 9f       	mul	r22, r19
    4f28:	b0 0d       	add	r27, r0
    4f2a:	e1 1d       	adc	r30, r1
    4f2c:	f9 1f       	adc	r31, r25
    4f2e:	bd 01       	movw	r22, r26
    4f30:	cf 01       	movw	r24, r30
    4f32:	11 24       	eor	r1, r1
    4f34:	08 95       	ret

00004f36 <__divmodhi4>:
    4f36:	97 fb       	bst	r25, 7
    4f38:	09 2e       	mov	r0, r25
    4f3a:	07 26       	eor	r0, r23
    4f3c:	0a d0       	rcall	.+20     	; 0x4f52 <__divmodhi4_neg1>
    4f3e:	77 fd       	sbrc	r23, 7
    4f40:	04 d0       	rcall	.+8      	; 0x4f4a <__divmodhi4_neg2>
    4f42:	65 d0       	rcall	.+202    	; 0x500e <__udivmodhi4>
    4f44:	06 d0       	rcall	.+12     	; 0x4f52 <__divmodhi4_neg1>
    4f46:	00 20       	and	r0, r0
    4f48:	1a f4       	brpl	.+6      	; 0x4f50 <__divmodhi4_exit>

00004f4a <__divmodhi4_neg2>:
    4f4a:	70 95       	com	r23
    4f4c:	61 95       	neg	r22
    4f4e:	7f 4f       	sbci	r23, 0xFF	; 255

00004f50 <__divmodhi4_exit>:
    4f50:	08 95       	ret

00004f52 <__divmodhi4_neg1>:
    4f52:	f6 f7       	brtc	.-4      	; 0x4f50 <__divmodhi4_exit>
    4f54:	90 95       	com	r25
    4f56:	81 95       	neg	r24
    4f58:	9f 4f       	sbci	r25, 0xFF	; 255
    4f5a:	08 95       	ret

00004f5c <__udivmodsi4>:
    4f5c:	a1 e2       	ldi	r26, 0x21	; 33
    4f5e:	1a 2e       	mov	r1, r26
    4f60:	aa 1b       	sub	r26, r26
    4f62:	bb 1b       	sub	r27, r27
    4f64:	fd 01       	movw	r30, r26
    4f66:	0d c0       	rjmp	.+26     	; 0x4f82 <__udivmodsi4_ep>

00004f68 <__udivmodsi4_loop>:
    4f68:	aa 1f       	adc	r26, r26
    4f6a:	bb 1f       	adc	r27, r27
    4f6c:	ee 1f       	adc	r30, r30
    4f6e:	ff 1f       	adc	r31, r31
    4f70:	a2 17       	cp	r26, r18
    4f72:	b3 07       	cpc	r27, r19
    4f74:	e4 07       	cpc	r30, r20
    4f76:	f5 07       	cpc	r31, r21
    4f78:	20 f0       	brcs	.+8      	; 0x4f82 <__udivmodsi4_ep>
    4f7a:	a2 1b       	sub	r26, r18
    4f7c:	b3 0b       	sbc	r27, r19
    4f7e:	e4 0b       	sbc	r30, r20
    4f80:	f5 0b       	sbc	r31, r21

00004f82 <__udivmodsi4_ep>:
    4f82:	66 1f       	adc	r22, r22
    4f84:	77 1f       	adc	r23, r23
    4f86:	88 1f       	adc	r24, r24
    4f88:	99 1f       	adc	r25, r25
    4f8a:	1a 94       	dec	r1
    4f8c:	69 f7       	brne	.-38     	; 0x4f68 <__udivmodsi4_loop>
    4f8e:	60 95       	com	r22
    4f90:	70 95       	com	r23
    4f92:	80 95       	com	r24
    4f94:	90 95       	com	r25
    4f96:	9b 01       	movw	r18, r22
    4f98:	ac 01       	movw	r20, r24
    4f9a:	bd 01       	movw	r22, r26
    4f9c:	cf 01       	movw	r24, r30
    4f9e:	08 95       	ret

00004fa0 <__prologue_saves__>:
    4fa0:	2f 92       	push	r2
    4fa2:	3f 92       	push	r3
    4fa4:	4f 92       	push	r4
    4fa6:	5f 92       	push	r5
    4fa8:	6f 92       	push	r6
    4faa:	7f 92       	push	r7
    4fac:	8f 92       	push	r8
    4fae:	9f 92       	push	r9
    4fb0:	af 92       	push	r10
    4fb2:	bf 92       	push	r11
    4fb4:	cf 92       	push	r12
    4fb6:	df 92       	push	r13
    4fb8:	ef 92       	push	r14
    4fba:	ff 92       	push	r15
    4fbc:	0f 93       	push	r16
    4fbe:	1f 93       	push	r17
    4fc0:	cf 93       	push	r28
    4fc2:	df 93       	push	r29
    4fc4:	cd b7       	in	r28, 0x3d	; 61
    4fc6:	de b7       	in	r29, 0x3e	; 62
    4fc8:	ca 1b       	sub	r28, r26
    4fca:	db 0b       	sbc	r29, r27
    4fcc:	0f b6       	in	r0, 0x3f	; 63
    4fce:	f8 94       	cli
    4fd0:	de bf       	out	0x3e, r29	; 62
    4fd2:	0f be       	out	0x3f, r0	; 63
    4fd4:	cd bf       	out	0x3d, r28	; 61
    4fd6:	09 94       	ijmp

00004fd8 <__epilogue_restores__>:
    4fd8:	2a 88       	ldd	r2, Y+18	; 0x12
    4fda:	39 88       	ldd	r3, Y+17	; 0x11
    4fdc:	48 88       	ldd	r4, Y+16	; 0x10
    4fde:	5f 84       	ldd	r5, Y+15	; 0x0f
    4fe0:	6e 84       	ldd	r6, Y+14	; 0x0e
    4fe2:	7d 84       	ldd	r7, Y+13	; 0x0d
    4fe4:	8c 84       	ldd	r8, Y+12	; 0x0c
    4fe6:	9b 84       	ldd	r9, Y+11	; 0x0b
    4fe8:	aa 84       	ldd	r10, Y+10	; 0x0a
    4fea:	b9 84       	ldd	r11, Y+9	; 0x09
    4fec:	c8 84       	ldd	r12, Y+8	; 0x08
    4fee:	df 80       	ldd	r13, Y+7	; 0x07
    4ff0:	ee 80       	ldd	r14, Y+6	; 0x06
    4ff2:	fd 80       	ldd	r15, Y+5	; 0x05
    4ff4:	0c 81       	ldd	r16, Y+4	; 0x04
    4ff6:	1b 81       	ldd	r17, Y+3	; 0x03
    4ff8:	aa 81       	ldd	r26, Y+2	; 0x02
    4ffa:	b9 81       	ldd	r27, Y+1	; 0x01
    4ffc:	ce 0f       	add	r28, r30
    4ffe:	d1 1d       	adc	r29, r1
    5000:	0f b6       	in	r0, 0x3f	; 63
    5002:	f8 94       	cli
    5004:	de bf       	out	0x3e, r29	; 62
    5006:	0f be       	out	0x3f, r0	; 63
    5008:	cd bf       	out	0x3d, r28	; 61
    500a:	ed 01       	movw	r28, r26
    500c:	08 95       	ret

0000500e <__udivmodhi4>:
    500e:	aa 1b       	sub	r26, r26
    5010:	bb 1b       	sub	r27, r27
    5012:	51 e1       	ldi	r21, 0x11	; 17
    5014:	07 c0       	rjmp	.+14     	; 0x5024 <__udivmodhi4_ep>

00005016 <__udivmodhi4_loop>:
    5016:	aa 1f       	adc	r26, r26
    5018:	bb 1f       	adc	r27, r27
    501a:	a6 17       	cp	r26, r22
    501c:	b7 07       	cpc	r27, r23
    501e:	10 f0       	brcs	.+4      	; 0x5024 <__udivmodhi4_ep>
    5020:	a6 1b       	sub	r26, r22
    5022:	b7 0b       	sbc	r27, r23

00005024 <__udivmodhi4_ep>:
    5024:	88 1f       	adc	r24, r24
    5026:	99 1f       	adc	r25, r25
    5028:	5a 95       	dec	r21
    502a:	a9 f7       	brne	.-22     	; 0x5016 <__udivmodhi4_loop>
    502c:	80 95       	com	r24
    502e:	90 95       	com	r25
    5030:	bc 01       	movw	r22, r24
    5032:	cd 01       	movw	r24, r26
    5034:	08 95       	ret

00005036 <malloc>:
    5036:	cf 93       	push	r28
    5038:	df 93       	push	r29
    503a:	bc 01       	movw	r22, r24
    503c:	82 30       	cpi	r24, 0x02	; 2
    503e:	91 05       	cpc	r25, r1
    5040:	10 f4       	brcc	.+4      	; 0x5046 <malloc+0x10>
    5042:	62 e0       	ldi	r22, 0x02	; 2
    5044:	70 e0       	ldi	r23, 0x00	; 0
    5046:	a0 91 17 05 	lds	r26, 0x0517
    504a:	b0 91 18 05 	lds	r27, 0x0518
    504e:	ed 01       	movw	r28, r26
    5050:	e0 e0       	ldi	r30, 0x00	; 0
    5052:	f0 e0       	ldi	r31, 0x00	; 0
    5054:	40 e0       	ldi	r20, 0x00	; 0
    5056:	50 e0       	ldi	r21, 0x00	; 0
    5058:	21 c0       	rjmp	.+66     	; 0x509c <malloc+0x66>
    505a:	88 81       	ld	r24, Y
    505c:	99 81       	ldd	r25, Y+1	; 0x01
    505e:	86 17       	cp	r24, r22
    5060:	97 07       	cpc	r25, r23
    5062:	69 f4       	brne	.+26     	; 0x507e <malloc+0x48>
    5064:	8a 81       	ldd	r24, Y+2	; 0x02
    5066:	9b 81       	ldd	r25, Y+3	; 0x03
    5068:	30 97       	sbiw	r30, 0x00	; 0
    506a:	19 f0       	breq	.+6      	; 0x5072 <malloc+0x3c>
    506c:	93 83       	std	Z+3, r25	; 0x03
    506e:	82 83       	std	Z+2, r24	; 0x02
    5070:	04 c0       	rjmp	.+8      	; 0x507a <malloc+0x44>
    5072:	90 93 18 05 	sts	0x0518, r25
    5076:	80 93 17 05 	sts	0x0517, r24
    507a:	fe 01       	movw	r30, r28
    507c:	34 c0       	rjmp	.+104    	; 0x50e6 <malloc+0xb0>
    507e:	68 17       	cp	r22, r24
    5080:	79 07       	cpc	r23, r25
    5082:	38 f4       	brcc	.+14     	; 0x5092 <malloc+0x5c>
    5084:	41 15       	cp	r20, r1
    5086:	51 05       	cpc	r21, r1
    5088:	19 f0       	breq	.+6      	; 0x5090 <malloc+0x5a>
    508a:	84 17       	cp	r24, r20
    508c:	95 07       	cpc	r25, r21
    508e:	08 f4       	brcc	.+2      	; 0x5092 <malloc+0x5c>
    5090:	ac 01       	movw	r20, r24
    5092:	fe 01       	movw	r30, r28
    5094:	8a 81       	ldd	r24, Y+2	; 0x02
    5096:	9b 81       	ldd	r25, Y+3	; 0x03
    5098:	9c 01       	movw	r18, r24
    509a:	e9 01       	movw	r28, r18
    509c:	20 97       	sbiw	r28, 0x00	; 0
    509e:	e9 f6       	brne	.-70     	; 0x505a <malloc+0x24>
    50a0:	41 15       	cp	r20, r1
    50a2:	51 05       	cpc	r21, r1
    50a4:	a9 f1       	breq	.+106    	; 0x5110 <malloc+0xda>
    50a6:	ca 01       	movw	r24, r20
    50a8:	86 1b       	sub	r24, r22
    50aa:	97 0b       	sbc	r25, r23
    50ac:	04 97       	sbiw	r24, 0x04	; 4
    50ae:	08 f4       	brcc	.+2      	; 0x50b2 <malloc+0x7c>
    50b0:	ba 01       	movw	r22, r20
    50b2:	e0 e0       	ldi	r30, 0x00	; 0
    50b4:	f0 e0       	ldi	r31, 0x00	; 0
    50b6:	2a c0       	rjmp	.+84     	; 0x510c <malloc+0xd6>
    50b8:	8d 91       	ld	r24, X+
    50ba:	9c 91       	ld	r25, X
    50bc:	11 97       	sbiw	r26, 0x01	; 1
    50be:	84 17       	cp	r24, r20
    50c0:	95 07       	cpc	r25, r21
    50c2:	f9 f4       	brne	.+62     	; 0x5102 <malloc+0xcc>
    50c4:	64 17       	cp	r22, r20
    50c6:	75 07       	cpc	r23, r21
    50c8:	81 f4       	brne	.+32     	; 0x50ea <malloc+0xb4>
    50ca:	12 96       	adiw	r26, 0x02	; 2
    50cc:	8d 91       	ld	r24, X+
    50ce:	9c 91       	ld	r25, X
    50d0:	13 97       	sbiw	r26, 0x03	; 3
    50d2:	30 97       	sbiw	r30, 0x00	; 0
    50d4:	19 f0       	breq	.+6      	; 0x50dc <malloc+0xa6>
    50d6:	93 83       	std	Z+3, r25	; 0x03
    50d8:	82 83       	std	Z+2, r24	; 0x02
    50da:	04 c0       	rjmp	.+8      	; 0x50e4 <malloc+0xae>
    50dc:	90 93 18 05 	sts	0x0518, r25
    50e0:	80 93 17 05 	sts	0x0517, r24
    50e4:	fd 01       	movw	r30, r26
    50e6:	32 96       	adiw	r30, 0x02	; 2
    50e8:	4f c0       	rjmp	.+158    	; 0x5188 <malloc+0x152>
    50ea:	ca 01       	movw	r24, r20
    50ec:	86 1b       	sub	r24, r22
    50ee:	97 0b       	sbc	r25, r23
    50f0:	fd 01       	movw	r30, r26
    50f2:	e8 0f       	add	r30, r24
    50f4:	f9 1f       	adc	r31, r25
    50f6:	61 93       	st	Z+, r22
    50f8:	71 93       	st	Z+, r23
    50fa:	02 97       	sbiw	r24, 0x02	; 2
    50fc:	8d 93       	st	X+, r24
    50fe:	9c 93       	st	X, r25
    5100:	43 c0       	rjmp	.+134    	; 0x5188 <malloc+0x152>
    5102:	fd 01       	movw	r30, r26
    5104:	82 81       	ldd	r24, Z+2	; 0x02
    5106:	93 81       	ldd	r25, Z+3	; 0x03
    5108:	9c 01       	movw	r18, r24
    510a:	d9 01       	movw	r26, r18
    510c:	10 97       	sbiw	r26, 0x00	; 0
    510e:	a1 f6       	brne	.-88     	; 0x50b8 <malloc+0x82>
    5110:	80 91 15 05 	lds	r24, 0x0515
    5114:	90 91 16 05 	lds	r25, 0x0516
    5118:	89 2b       	or	r24, r25
    511a:	41 f4       	brne	.+16     	; 0x512c <malloc+0xf6>
    511c:	80 91 1f 02 	lds	r24, 0x021F
    5120:	90 91 20 02 	lds	r25, 0x0220
    5124:	90 93 16 05 	sts	0x0516, r25
    5128:	80 93 15 05 	sts	0x0515, r24
    512c:	40 91 21 02 	lds	r20, 0x0221
    5130:	50 91 22 02 	lds	r21, 0x0222
    5134:	41 15       	cp	r20, r1
    5136:	51 05       	cpc	r21, r1
    5138:	41 f4       	brne	.+16     	; 0x514a <malloc+0x114>
    513a:	4d b7       	in	r20, 0x3d	; 61
    513c:	5e b7       	in	r21, 0x3e	; 62
    513e:	80 91 1d 02 	lds	r24, 0x021D
    5142:	90 91 1e 02 	lds	r25, 0x021E
    5146:	48 1b       	sub	r20, r24
    5148:	59 0b       	sbc	r21, r25
    514a:	20 91 15 05 	lds	r18, 0x0515
    514e:	30 91 16 05 	lds	r19, 0x0516
    5152:	24 17       	cp	r18, r20
    5154:	35 07       	cpc	r19, r21
    5156:	b0 f4       	brcc	.+44     	; 0x5184 <malloc+0x14e>
    5158:	ca 01       	movw	r24, r20
    515a:	82 1b       	sub	r24, r18
    515c:	93 0b       	sbc	r25, r19
    515e:	86 17       	cp	r24, r22
    5160:	97 07       	cpc	r25, r23
    5162:	80 f0       	brcs	.+32     	; 0x5184 <malloc+0x14e>
    5164:	ab 01       	movw	r20, r22
    5166:	4e 5f       	subi	r20, 0xFE	; 254
    5168:	5f 4f       	sbci	r21, 0xFF	; 255
    516a:	84 17       	cp	r24, r20
    516c:	95 07       	cpc	r25, r21
    516e:	50 f0       	brcs	.+20     	; 0x5184 <malloc+0x14e>
    5170:	42 0f       	add	r20, r18
    5172:	53 1f       	adc	r21, r19
    5174:	50 93 16 05 	sts	0x0516, r21
    5178:	40 93 15 05 	sts	0x0515, r20
    517c:	f9 01       	movw	r30, r18
    517e:	61 93       	st	Z+, r22
    5180:	71 93       	st	Z+, r23
    5182:	02 c0       	rjmp	.+4      	; 0x5188 <malloc+0x152>
    5184:	e0 e0       	ldi	r30, 0x00	; 0
    5186:	f0 e0       	ldi	r31, 0x00	; 0
    5188:	cf 01       	movw	r24, r30
    518a:	df 91       	pop	r29
    518c:	cf 91       	pop	r28
    518e:	08 95       	ret

00005190 <free>:
    5190:	cf 93       	push	r28
    5192:	df 93       	push	r29
    5194:	00 97       	sbiw	r24, 0x00	; 0
    5196:	09 f4       	brne	.+2      	; 0x519a <free+0xa>
    5198:	50 c0       	rjmp	.+160    	; 0x523a <free+0xaa>
    519a:	ec 01       	movw	r28, r24
    519c:	22 97       	sbiw	r28, 0x02	; 2
    519e:	1b 82       	std	Y+3, r1	; 0x03
    51a0:	1a 82       	std	Y+2, r1	; 0x02
    51a2:	a0 91 17 05 	lds	r26, 0x0517
    51a6:	b0 91 18 05 	lds	r27, 0x0518
    51aa:	10 97       	sbiw	r26, 0x00	; 0
    51ac:	09 f1       	breq	.+66     	; 0x51f0 <free+0x60>
    51ae:	40 e0       	ldi	r20, 0x00	; 0
    51b0:	50 e0       	ldi	r21, 0x00	; 0
    51b2:	ac 17       	cp	r26, r28
    51b4:	bd 07       	cpc	r27, r29
    51b6:	08 f1       	brcs	.+66     	; 0x51fa <free+0x6a>
    51b8:	bb 83       	std	Y+3, r27	; 0x03
    51ba:	aa 83       	std	Y+2, r26	; 0x02
    51bc:	fe 01       	movw	r30, r28
    51be:	21 91       	ld	r18, Z+
    51c0:	31 91       	ld	r19, Z+
    51c2:	e2 0f       	add	r30, r18
    51c4:	f3 1f       	adc	r31, r19
    51c6:	ae 17       	cp	r26, r30
    51c8:	bf 07       	cpc	r27, r31
    51ca:	79 f4       	brne	.+30     	; 0x51ea <free+0x5a>
    51cc:	8d 91       	ld	r24, X+
    51ce:	9c 91       	ld	r25, X
    51d0:	11 97       	sbiw	r26, 0x01	; 1
    51d2:	28 0f       	add	r18, r24
    51d4:	39 1f       	adc	r19, r25
    51d6:	2e 5f       	subi	r18, 0xFE	; 254
    51d8:	3f 4f       	sbci	r19, 0xFF	; 255
    51da:	39 83       	std	Y+1, r19	; 0x01
    51dc:	28 83       	st	Y, r18
    51de:	12 96       	adiw	r26, 0x02	; 2
    51e0:	8d 91       	ld	r24, X+
    51e2:	9c 91       	ld	r25, X
    51e4:	13 97       	sbiw	r26, 0x03	; 3
    51e6:	9b 83       	std	Y+3, r25	; 0x03
    51e8:	8a 83       	std	Y+2, r24	; 0x02
    51ea:	41 15       	cp	r20, r1
    51ec:	51 05       	cpc	r21, r1
    51ee:	71 f4       	brne	.+28     	; 0x520c <free+0x7c>
    51f0:	d0 93 18 05 	sts	0x0518, r29
    51f4:	c0 93 17 05 	sts	0x0517, r28
    51f8:	20 c0       	rjmp	.+64     	; 0x523a <free+0xaa>
    51fa:	12 96       	adiw	r26, 0x02	; 2
    51fc:	8d 91       	ld	r24, X+
    51fe:	9c 91       	ld	r25, X
    5200:	13 97       	sbiw	r26, 0x03	; 3
    5202:	ad 01       	movw	r20, r26
    5204:	00 97       	sbiw	r24, 0x00	; 0
    5206:	11 f0       	breq	.+4      	; 0x520c <free+0x7c>
    5208:	dc 01       	movw	r26, r24
    520a:	d3 cf       	rjmp	.-90     	; 0x51b2 <free+0x22>
    520c:	fa 01       	movw	r30, r20
    520e:	d3 83       	std	Z+3, r29	; 0x03
    5210:	c2 83       	std	Z+2, r28	; 0x02
    5212:	21 91       	ld	r18, Z+
    5214:	31 91       	ld	r19, Z+
    5216:	e2 0f       	add	r30, r18
    5218:	f3 1f       	adc	r31, r19
    521a:	ce 17       	cp	r28, r30
    521c:	df 07       	cpc	r29, r31
    521e:	69 f4       	brne	.+26     	; 0x523a <free+0xaa>
    5220:	88 81       	ld	r24, Y
    5222:	99 81       	ldd	r25, Y+1	; 0x01
    5224:	28 0f       	add	r18, r24
    5226:	39 1f       	adc	r19, r25
    5228:	2e 5f       	subi	r18, 0xFE	; 254
    522a:	3f 4f       	sbci	r19, 0xFF	; 255
    522c:	fa 01       	movw	r30, r20
    522e:	31 83       	std	Z+1, r19	; 0x01
    5230:	20 83       	st	Z, r18
    5232:	8a 81       	ldd	r24, Y+2	; 0x02
    5234:	9b 81       	ldd	r25, Y+3	; 0x03
    5236:	93 83       	std	Z+3, r25	; 0x03
    5238:	82 83       	std	Z+2, r24	; 0x02
    523a:	df 91       	pop	r29
    523c:	cf 91       	pop	r28
    523e:	08 95       	ret

00005240 <do_rand>:
    5240:	a0 e0       	ldi	r26, 0x00	; 0
    5242:	b0 e0       	ldi	r27, 0x00	; 0
    5244:	e5 e2       	ldi	r30, 0x25	; 37
    5246:	f9 e2       	ldi	r31, 0x29	; 41
    5248:	b3 ce       	rjmp	.-666    	; 0x4fb0 <__prologue_saves__+0x10>
    524a:	ec 01       	movw	r28, r24
    524c:	a8 80       	ld	r10, Y
    524e:	b9 80       	ldd	r11, Y+1	; 0x01
    5250:	ca 80       	ldd	r12, Y+2	; 0x02
    5252:	db 80       	ldd	r13, Y+3	; 0x03
    5254:	a1 14       	cp	r10, r1
    5256:	b1 04       	cpc	r11, r1
    5258:	c1 04       	cpc	r12, r1
    525a:	d1 04       	cpc	r13, r1
    525c:	41 f4       	brne	.+16     	; 0x526e <do_rand+0x2e>
    525e:	84 e2       	ldi	r24, 0x24	; 36
    5260:	a8 2e       	mov	r10, r24
    5262:	89 ed       	ldi	r24, 0xD9	; 217
    5264:	b8 2e       	mov	r11, r24
    5266:	8b e5       	ldi	r24, 0x5B	; 91
    5268:	c8 2e       	mov	r12, r24
    526a:	87 e0       	ldi	r24, 0x07	; 7
    526c:	d8 2e       	mov	r13, r24
    526e:	c6 01       	movw	r24, r12
    5270:	b5 01       	movw	r22, r10
    5272:	2d e1       	ldi	r18, 0x1D	; 29
    5274:	33 ef       	ldi	r19, 0xF3	; 243
    5276:	41 e0       	ldi	r20, 0x01	; 1
    5278:	50 e0       	ldi	r21, 0x00	; 0
    527a:	fa d1       	rcall	.+1012   	; 0x5670 <__divmodsi4>
    527c:	27 ea       	ldi	r18, 0xA7	; 167
    527e:	31 e4       	ldi	r19, 0x41	; 65
    5280:	40 e0       	ldi	r20, 0x00	; 0
    5282:	50 e0       	ldi	r21, 0x00	; 0
    5284:	39 de       	rcall	.-910    	; 0x4ef8 <__mulsi3>
    5286:	7b 01       	movw	r14, r22
    5288:	8c 01       	movw	r16, r24
    528a:	c6 01       	movw	r24, r12
    528c:	b5 01       	movw	r22, r10
    528e:	2d e1       	ldi	r18, 0x1D	; 29
    5290:	33 ef       	ldi	r19, 0xF3	; 243
    5292:	41 e0       	ldi	r20, 0x01	; 1
    5294:	50 e0       	ldi	r21, 0x00	; 0
    5296:	ec d1       	rcall	.+984    	; 0x5670 <__divmodsi4>
    5298:	ca 01       	movw	r24, r20
    529a:	b9 01       	movw	r22, r18
    529c:	2c ee       	ldi	r18, 0xEC	; 236
    529e:	34 ef       	ldi	r19, 0xF4	; 244
    52a0:	4f ef       	ldi	r20, 0xFF	; 255
    52a2:	5f ef       	ldi	r21, 0xFF	; 255
    52a4:	29 de       	rcall	.-942    	; 0x4ef8 <__mulsi3>
    52a6:	6e 0d       	add	r22, r14
    52a8:	7f 1d       	adc	r23, r15
    52aa:	80 1f       	adc	r24, r16
    52ac:	91 1f       	adc	r25, r17
    52ae:	97 ff       	sbrs	r25, 7
    52b0:	04 c0       	rjmp	.+8      	; 0x52ba <do_rand+0x7a>
    52b2:	61 50       	subi	r22, 0x01	; 1
    52b4:	70 40       	sbci	r23, 0x00	; 0
    52b6:	80 40       	sbci	r24, 0x00	; 0
    52b8:	90 48       	sbci	r25, 0x80	; 128
    52ba:	68 83       	st	Y, r22
    52bc:	79 83       	std	Y+1, r23	; 0x01
    52be:	8a 83       	std	Y+2, r24	; 0x02
    52c0:	9b 83       	std	Y+3, r25	; 0x03
    52c2:	9b 01       	movw	r18, r22
    52c4:	3f 77       	andi	r19, 0x7F	; 127
    52c6:	c9 01       	movw	r24, r18
    52c8:	cd b7       	in	r28, 0x3d	; 61
    52ca:	de b7       	in	r29, 0x3e	; 62
    52cc:	ea e0       	ldi	r30, 0x0A	; 10
    52ce:	8c ce       	rjmp	.-744    	; 0x4fe8 <__epilogue_restores__+0x10>

000052d0 <rand_r>:
    52d0:	b7 df       	rcall	.-146    	; 0x5240 <do_rand>
    52d2:	08 95       	ret

000052d4 <rand>:
    52d4:	83 e2       	ldi	r24, 0x23	; 35
    52d6:	92 e0       	ldi	r25, 0x02	; 2
    52d8:	b3 df       	rcall	.-154    	; 0x5240 <do_rand>
    52da:	08 95       	ret

000052dc <srand>:
    52dc:	a0 e0       	ldi	r26, 0x00	; 0
    52de:	b0 e0       	ldi	r27, 0x00	; 0
    52e0:	80 93 23 02 	sts	0x0223, r24
    52e4:	90 93 24 02 	sts	0x0224, r25
    52e8:	a0 93 25 02 	sts	0x0225, r26
    52ec:	b0 93 26 02 	sts	0x0226, r27
    52f0:	08 95       	ret

000052f2 <__ftoa_engine>:
    52f2:	28 30       	cpi	r18, 0x08	; 8
    52f4:	08 f0       	brcs	.+2      	; 0x52f8 <__ftoa_engine+0x6>
    52f6:	27 e0       	ldi	r18, 0x07	; 7
    52f8:	33 27       	eor	r19, r19
    52fa:	da 01       	movw	r26, r20
    52fc:	99 0f       	add	r25, r25
    52fe:	31 1d       	adc	r19, r1
    5300:	87 fd       	sbrc	r24, 7
    5302:	91 60       	ori	r25, 0x01	; 1
    5304:	00 96       	adiw	r24, 0x00	; 0
    5306:	61 05       	cpc	r22, r1
    5308:	71 05       	cpc	r23, r1
    530a:	39 f4       	brne	.+14     	; 0x531a <__ftoa_engine+0x28>
    530c:	32 60       	ori	r19, 0x02	; 2
    530e:	2e 5f       	subi	r18, 0xFE	; 254
    5310:	3d 93       	st	X+, r19
    5312:	30 e3       	ldi	r19, 0x30	; 48
    5314:	2a 95       	dec	r18
    5316:	e1 f7       	brne	.-8      	; 0x5310 <__ftoa_engine+0x1e>
    5318:	08 95       	ret
    531a:	9f 3f       	cpi	r25, 0xFF	; 255
    531c:	30 f0       	brcs	.+12     	; 0x532a <__ftoa_engine+0x38>
    531e:	80 38       	cpi	r24, 0x80	; 128
    5320:	71 05       	cpc	r23, r1
    5322:	61 05       	cpc	r22, r1
    5324:	09 f0       	breq	.+2      	; 0x5328 <__ftoa_engine+0x36>
    5326:	3c 5f       	subi	r19, 0xFC	; 252
    5328:	3c 5f       	subi	r19, 0xFC	; 252
    532a:	3d 93       	st	X+, r19
    532c:	91 30       	cpi	r25, 0x01	; 1
    532e:	08 f0       	brcs	.+2      	; 0x5332 <__ftoa_engine+0x40>
    5330:	80 68       	ori	r24, 0x80	; 128
    5332:	91 1d       	adc	r25, r1
    5334:	df 93       	push	r29
    5336:	cf 93       	push	r28
    5338:	1f 93       	push	r17
    533a:	0f 93       	push	r16
    533c:	ff 92       	push	r15
    533e:	ef 92       	push	r14
    5340:	19 2f       	mov	r17, r25
    5342:	98 7f       	andi	r25, 0xF8	; 248
    5344:	96 95       	lsr	r25
    5346:	e9 2f       	mov	r30, r25
    5348:	96 95       	lsr	r25
    534a:	96 95       	lsr	r25
    534c:	e9 0f       	add	r30, r25
    534e:	ff 27       	eor	r31, r31
    5350:	ef 53       	subi	r30, 0x3F	; 63
    5352:	fa 4f       	sbci	r31, 0xFA	; 250
    5354:	99 27       	eor	r25, r25
    5356:	33 27       	eor	r19, r19
    5358:	ee 24       	eor	r14, r14
    535a:	ff 24       	eor	r15, r15
    535c:	a7 01       	movw	r20, r14
    535e:	e7 01       	movw	r28, r14
    5360:	05 90       	lpm	r0, Z+
    5362:	08 94       	sec
    5364:	07 94       	ror	r0
    5366:	28 f4       	brcc	.+10     	; 0x5372 <__ftoa_engine+0x80>
    5368:	36 0f       	add	r19, r22
    536a:	e7 1e       	adc	r14, r23
    536c:	f8 1e       	adc	r15, r24
    536e:	49 1f       	adc	r20, r25
    5370:	51 1d       	adc	r21, r1
    5372:	66 0f       	add	r22, r22
    5374:	77 1f       	adc	r23, r23
    5376:	88 1f       	adc	r24, r24
    5378:	99 1f       	adc	r25, r25
    537a:	06 94       	lsr	r0
    537c:	a1 f7       	brne	.-24     	; 0x5366 <__ftoa_engine+0x74>
    537e:	05 90       	lpm	r0, Z+
    5380:	07 94       	ror	r0
    5382:	28 f4       	brcc	.+10     	; 0x538e <__ftoa_engine+0x9c>
    5384:	e7 0e       	add	r14, r23
    5386:	f8 1e       	adc	r15, r24
    5388:	49 1f       	adc	r20, r25
    538a:	56 1f       	adc	r21, r22
    538c:	c1 1d       	adc	r28, r1
    538e:	77 0f       	add	r23, r23
    5390:	88 1f       	adc	r24, r24
    5392:	99 1f       	adc	r25, r25
    5394:	66 1f       	adc	r22, r22
    5396:	06 94       	lsr	r0
    5398:	a1 f7       	brne	.-24     	; 0x5382 <__ftoa_engine+0x90>
    539a:	05 90       	lpm	r0, Z+
    539c:	07 94       	ror	r0
    539e:	28 f4       	brcc	.+10     	; 0x53aa <__ftoa_engine+0xb8>
    53a0:	f8 0e       	add	r15, r24
    53a2:	49 1f       	adc	r20, r25
    53a4:	56 1f       	adc	r21, r22
    53a6:	c7 1f       	adc	r28, r23
    53a8:	d1 1d       	adc	r29, r1
    53aa:	88 0f       	add	r24, r24
    53ac:	99 1f       	adc	r25, r25
    53ae:	66 1f       	adc	r22, r22
    53b0:	77 1f       	adc	r23, r23
    53b2:	06 94       	lsr	r0
    53b4:	a1 f7       	brne	.-24     	; 0x539e <__ftoa_engine+0xac>
    53b6:	05 90       	lpm	r0, Z+
    53b8:	07 94       	ror	r0
    53ba:	20 f4       	brcc	.+8      	; 0x53c4 <__ftoa_engine+0xd2>
    53bc:	49 0f       	add	r20, r25
    53be:	56 1f       	adc	r21, r22
    53c0:	c7 1f       	adc	r28, r23
    53c2:	d8 1f       	adc	r29, r24
    53c4:	99 0f       	add	r25, r25
    53c6:	66 1f       	adc	r22, r22
    53c8:	77 1f       	adc	r23, r23
    53ca:	88 1f       	adc	r24, r24
    53cc:	06 94       	lsr	r0
    53ce:	a9 f7       	brne	.-22     	; 0x53ba <__ftoa_engine+0xc8>
    53d0:	84 91       	lpm	r24, Z+
    53d2:	10 95       	com	r17
    53d4:	17 70       	andi	r17, 0x07	; 7
    53d6:	41 f0       	breq	.+16     	; 0x53e8 <__ftoa_engine+0xf6>
    53d8:	d6 95       	lsr	r29
    53da:	c7 95       	ror	r28
    53dc:	57 95       	ror	r21
    53de:	47 95       	ror	r20
    53e0:	f7 94       	ror	r15
    53e2:	e7 94       	ror	r14
    53e4:	1a 95       	dec	r17
    53e6:	c1 f7       	brne	.-16     	; 0x53d8 <__ftoa_engine+0xe6>
    53e8:	e7 e6       	ldi	r30, 0x67	; 103
    53ea:	f5 e0       	ldi	r31, 0x05	; 5
    53ec:	68 94       	set
    53ee:	15 90       	lpm	r1, Z+
    53f0:	15 91       	lpm	r17, Z+
    53f2:	35 91       	lpm	r19, Z+
    53f4:	65 91       	lpm	r22, Z+
    53f6:	95 91       	lpm	r25, Z+
    53f8:	05 90       	lpm	r0, Z+
    53fa:	7f e2       	ldi	r23, 0x2F	; 47
    53fc:	73 95       	inc	r23
    53fe:	e1 18       	sub	r14, r1
    5400:	f1 0a       	sbc	r15, r17
    5402:	43 0b       	sbc	r20, r19
    5404:	56 0b       	sbc	r21, r22
    5406:	c9 0b       	sbc	r28, r25
    5408:	d0 09       	sbc	r29, r0
    540a:	c0 f7       	brcc	.-16     	; 0x53fc <__ftoa_engine+0x10a>
    540c:	e1 0c       	add	r14, r1
    540e:	f1 1e       	adc	r15, r17
    5410:	43 1f       	adc	r20, r19
    5412:	56 1f       	adc	r21, r22
    5414:	c9 1f       	adc	r28, r25
    5416:	d0 1d       	adc	r29, r0
    5418:	7e f4       	brtc	.+30     	; 0x5438 <__ftoa_engine+0x146>
    541a:	70 33       	cpi	r23, 0x30	; 48
    541c:	11 f4       	brne	.+4      	; 0x5422 <__ftoa_engine+0x130>
    541e:	8a 95       	dec	r24
    5420:	e6 cf       	rjmp	.-52     	; 0x53ee <__ftoa_engine+0xfc>
    5422:	e8 94       	clt
    5424:	01 50       	subi	r16, 0x01	; 1
    5426:	30 f0       	brcs	.+12     	; 0x5434 <__ftoa_engine+0x142>
    5428:	08 0f       	add	r16, r24
    542a:	0a f4       	brpl	.+2      	; 0x542e <__ftoa_engine+0x13c>
    542c:	00 27       	eor	r16, r16
    542e:	02 17       	cp	r16, r18
    5430:	08 f4       	brcc	.+2      	; 0x5434 <__ftoa_engine+0x142>
    5432:	20 2f       	mov	r18, r16
    5434:	23 95       	inc	r18
    5436:	02 2f       	mov	r16, r18
    5438:	7a 33       	cpi	r23, 0x3A	; 58
    543a:	28 f0       	brcs	.+10     	; 0x5446 <__ftoa_engine+0x154>
    543c:	79 e3       	ldi	r23, 0x39	; 57
    543e:	7d 93       	st	X+, r23
    5440:	2a 95       	dec	r18
    5442:	e9 f7       	brne	.-6      	; 0x543e <__ftoa_engine+0x14c>
    5444:	10 c0       	rjmp	.+32     	; 0x5466 <__ftoa_engine+0x174>
    5446:	7d 93       	st	X+, r23
    5448:	2a 95       	dec	r18
    544a:	89 f6       	brne	.-94     	; 0x53ee <__ftoa_engine+0xfc>
    544c:	06 94       	lsr	r0
    544e:	97 95       	ror	r25
    5450:	67 95       	ror	r22
    5452:	37 95       	ror	r19
    5454:	17 95       	ror	r17
    5456:	17 94       	ror	r1
    5458:	e1 18       	sub	r14, r1
    545a:	f1 0a       	sbc	r15, r17
    545c:	43 0b       	sbc	r20, r19
    545e:	56 0b       	sbc	r21, r22
    5460:	c9 0b       	sbc	r28, r25
    5462:	d0 09       	sbc	r29, r0
    5464:	98 f0       	brcs	.+38     	; 0x548c <__ftoa_engine+0x19a>
    5466:	23 95       	inc	r18
    5468:	7e 91       	ld	r23, -X
    546a:	73 95       	inc	r23
    546c:	7a 33       	cpi	r23, 0x3A	; 58
    546e:	08 f0       	brcs	.+2      	; 0x5472 <__ftoa_engine+0x180>
    5470:	70 e3       	ldi	r23, 0x30	; 48
    5472:	7c 93       	st	X, r23
    5474:	20 13       	cpse	r18, r16
    5476:	b8 f7       	brcc	.-18     	; 0x5466 <__ftoa_engine+0x174>
    5478:	7e 91       	ld	r23, -X
    547a:	70 61       	ori	r23, 0x10	; 16
    547c:	7d 93       	st	X+, r23
    547e:	30 f0       	brcs	.+12     	; 0x548c <__ftoa_engine+0x19a>
    5480:	83 95       	inc	r24
    5482:	71 e3       	ldi	r23, 0x31	; 49
    5484:	7d 93       	st	X+, r23
    5486:	70 e3       	ldi	r23, 0x30	; 48
    5488:	2a 95       	dec	r18
    548a:	e1 f7       	brne	.-8      	; 0x5484 <__ftoa_engine+0x192>
    548c:	11 24       	eor	r1, r1
    548e:	ef 90       	pop	r14
    5490:	ff 90       	pop	r15
    5492:	0f 91       	pop	r16
    5494:	1f 91       	pop	r17
    5496:	cf 91       	pop	r28
    5498:	df 91       	pop	r29
    549a:	99 27       	eor	r25, r25
    549c:	87 fd       	sbrc	r24, 7
    549e:	90 95       	com	r25
    54a0:	08 95       	ret

000054a2 <strnlen_P>:
    54a2:	fc 01       	movw	r30, r24
    54a4:	05 90       	lpm	r0, Z+
    54a6:	61 50       	subi	r22, 0x01	; 1
    54a8:	70 40       	sbci	r23, 0x00	; 0
    54aa:	01 10       	cpse	r0, r1
    54ac:	d8 f7       	brcc	.-10     	; 0x54a4 <strnlen_P+0x2>
    54ae:	80 95       	com	r24
    54b0:	90 95       	com	r25
    54b2:	8e 0f       	add	r24, r30
    54b4:	9f 1f       	adc	r25, r31
    54b6:	08 95       	ret

000054b8 <strnlen>:
    54b8:	fc 01       	movw	r30, r24
    54ba:	61 50       	subi	r22, 0x01	; 1
    54bc:	70 40       	sbci	r23, 0x00	; 0
    54be:	01 90       	ld	r0, Z+
    54c0:	01 10       	cpse	r0, r1
    54c2:	d8 f7       	brcc	.-10     	; 0x54ba <strnlen+0x2>
    54c4:	80 95       	com	r24
    54c6:	90 95       	com	r25
    54c8:	8e 0f       	add	r24, r30
    54ca:	9f 1f       	adc	r25, r31
    54cc:	08 95       	ret

000054ce <fputc>:
    54ce:	0f 93       	push	r16
    54d0:	1f 93       	push	r17
    54d2:	cf 93       	push	r28
    54d4:	df 93       	push	r29
    54d6:	8c 01       	movw	r16, r24
    54d8:	eb 01       	movw	r28, r22
    54da:	8b 81       	ldd	r24, Y+3	; 0x03
    54dc:	81 ff       	sbrs	r24, 1
    54de:	1b c0       	rjmp	.+54     	; 0x5516 <fputc+0x48>
    54e0:	82 ff       	sbrs	r24, 2
    54e2:	0d c0       	rjmp	.+26     	; 0x54fe <fputc+0x30>
    54e4:	2e 81       	ldd	r18, Y+6	; 0x06
    54e6:	3f 81       	ldd	r19, Y+7	; 0x07
    54e8:	8c 81       	ldd	r24, Y+4	; 0x04
    54ea:	9d 81       	ldd	r25, Y+5	; 0x05
    54ec:	28 17       	cp	r18, r24
    54ee:	39 07       	cpc	r19, r25
    54f0:	64 f4       	brge	.+24     	; 0x550a <fputc+0x3c>
    54f2:	e8 81       	ld	r30, Y
    54f4:	f9 81       	ldd	r31, Y+1	; 0x01
    54f6:	01 93       	st	Z+, r16
    54f8:	f9 83       	std	Y+1, r31	; 0x01
    54fa:	e8 83       	st	Y, r30
    54fc:	06 c0       	rjmp	.+12     	; 0x550a <fputc+0x3c>
    54fe:	e8 85       	ldd	r30, Y+8	; 0x08
    5500:	f9 85       	ldd	r31, Y+9	; 0x09
    5502:	80 2f       	mov	r24, r16
    5504:	09 95       	icall
    5506:	89 2b       	or	r24, r25
    5508:	31 f4       	brne	.+12     	; 0x5516 <fputc+0x48>
    550a:	8e 81       	ldd	r24, Y+6	; 0x06
    550c:	9f 81       	ldd	r25, Y+7	; 0x07
    550e:	01 96       	adiw	r24, 0x01	; 1
    5510:	9f 83       	std	Y+7, r25	; 0x07
    5512:	8e 83       	std	Y+6, r24	; 0x06
    5514:	02 c0       	rjmp	.+4      	; 0x551a <fputc+0x4c>
    5516:	0f ef       	ldi	r16, 0xFF	; 255
    5518:	1f ef       	ldi	r17, 0xFF	; 255
    551a:	c8 01       	movw	r24, r16
    551c:	df 91       	pop	r29
    551e:	cf 91       	pop	r28
    5520:	1f 91       	pop	r17
    5522:	0f 91       	pop	r16
    5524:	08 95       	ret

00005526 <printf>:
    5526:	a0 e0       	ldi	r26, 0x00	; 0
    5528:	b0 e0       	ldi	r27, 0x00	; 0
    552a:	e8 e9       	ldi	r30, 0x98	; 152
    552c:	fa e2       	ldi	r31, 0x2A	; 42
    552e:	48 cd       	rjmp	.-1392   	; 0x4fc0 <__prologue_saves__+0x20>
    5530:	fe 01       	movw	r30, r28
    5532:	35 96       	adiw	r30, 0x05	; 5
    5534:	61 91       	ld	r22, Z+
    5536:	71 91       	ld	r23, Z+
    5538:	80 91 1b 05 	lds	r24, 0x051B
    553c:	90 91 1c 05 	lds	r25, 0x051C
    5540:	af 01       	movw	r20, r30
    5542:	72 d9       	rcall	.-3356   	; 0x4828 <vfprintf>
    5544:	20 96       	adiw	r28, 0x00	; 0
    5546:	e2 e0       	ldi	r30, 0x02	; 2
    5548:	57 cd       	rjmp	.-1362   	; 0x4ff8 <__epilogue_restores__+0x20>

0000554a <puts>:
    554a:	0f 93       	push	r16
    554c:	1f 93       	push	r17
    554e:	cf 93       	push	r28
    5550:	df 93       	push	r29
    5552:	8c 01       	movw	r16, r24
    5554:	e0 91 1b 05 	lds	r30, 0x051B
    5558:	f0 91 1c 05 	lds	r31, 0x051C
    555c:	83 81       	ldd	r24, Z+3	; 0x03
    555e:	81 ff       	sbrs	r24, 1
    5560:	21 c0       	rjmp	.+66     	; 0x55a4 <puts+0x5a>
    5562:	c0 e0       	ldi	r28, 0x00	; 0
    5564:	d0 e0       	ldi	r29, 0x00	; 0
    5566:	0d c0       	rjmp	.+26     	; 0x5582 <puts+0x38>
    5568:	e0 91 1b 05 	lds	r30, 0x051B
    556c:	f0 91 1c 05 	lds	r31, 0x051C
    5570:	20 85       	ldd	r18, Z+8	; 0x08
    5572:	31 85       	ldd	r19, Z+9	; 0x09
    5574:	bf 01       	movw	r22, r30
    5576:	f9 01       	movw	r30, r18
    5578:	09 95       	icall
    557a:	89 2b       	or	r24, r25
    557c:	11 f0       	breq	.+4      	; 0x5582 <puts+0x38>
    557e:	cf ef       	ldi	r28, 0xFF	; 255
    5580:	df ef       	ldi	r29, 0xFF	; 255
    5582:	f8 01       	movw	r30, r16
    5584:	81 91       	ld	r24, Z+
    5586:	8f 01       	movw	r16, r30
    5588:	88 23       	and	r24, r24
    558a:	71 f7       	brne	.-36     	; 0x5568 <puts+0x1e>
    558c:	e0 91 1b 05 	lds	r30, 0x051B
    5590:	f0 91 1c 05 	lds	r31, 0x051C
    5594:	20 85       	ldd	r18, Z+8	; 0x08
    5596:	31 85       	ldd	r19, Z+9	; 0x09
    5598:	8a e0       	ldi	r24, 0x0A	; 10
    559a:	bf 01       	movw	r22, r30
    559c:	f9 01       	movw	r30, r18
    559e:	09 95       	icall
    55a0:	89 2b       	or	r24, r25
    55a2:	11 f0       	breq	.+4      	; 0x55a8 <puts+0x5e>
    55a4:	cf ef       	ldi	r28, 0xFF	; 255
    55a6:	df ef       	ldi	r29, 0xFF	; 255
    55a8:	ce 01       	movw	r24, r28
    55aa:	df 91       	pop	r29
    55ac:	cf 91       	pop	r28
    55ae:	1f 91       	pop	r17
    55b0:	0f 91       	pop	r16
    55b2:	08 95       	ret

000055b4 <__ultoa_invert>:
    55b4:	fa 01       	movw	r30, r20
    55b6:	aa 27       	eor	r26, r26
    55b8:	28 30       	cpi	r18, 0x08	; 8
    55ba:	51 f1       	breq	.+84     	; 0x5610 <__ultoa_invert+0x5c>
    55bc:	20 31       	cpi	r18, 0x10	; 16
    55be:	81 f1       	breq	.+96     	; 0x5620 <__ultoa_invert+0x6c>
    55c0:	e8 94       	clt
    55c2:	6f 93       	push	r22
    55c4:	6e 7f       	andi	r22, 0xFE	; 254
    55c6:	6e 5f       	subi	r22, 0xFE	; 254
    55c8:	7f 4f       	sbci	r23, 0xFF	; 255
    55ca:	8f 4f       	sbci	r24, 0xFF	; 255
    55cc:	9f 4f       	sbci	r25, 0xFF	; 255
    55ce:	af 4f       	sbci	r26, 0xFF	; 255
    55d0:	b1 e0       	ldi	r27, 0x01	; 1
    55d2:	3e d0       	rcall	.+124    	; 0x5650 <__ultoa_invert+0x9c>
    55d4:	b4 e0       	ldi	r27, 0x04	; 4
    55d6:	3c d0       	rcall	.+120    	; 0x5650 <__ultoa_invert+0x9c>
    55d8:	67 0f       	add	r22, r23
    55da:	78 1f       	adc	r23, r24
    55dc:	89 1f       	adc	r24, r25
    55de:	9a 1f       	adc	r25, r26
    55e0:	a1 1d       	adc	r26, r1
    55e2:	68 0f       	add	r22, r24
    55e4:	79 1f       	adc	r23, r25
    55e6:	8a 1f       	adc	r24, r26
    55e8:	91 1d       	adc	r25, r1
    55ea:	a1 1d       	adc	r26, r1
    55ec:	6a 0f       	add	r22, r26
    55ee:	71 1d       	adc	r23, r1
    55f0:	81 1d       	adc	r24, r1
    55f2:	91 1d       	adc	r25, r1
    55f4:	a1 1d       	adc	r26, r1
    55f6:	20 d0       	rcall	.+64     	; 0x5638 <__ultoa_invert+0x84>
    55f8:	09 f4       	brne	.+2      	; 0x55fc <__ultoa_invert+0x48>
    55fa:	68 94       	set
    55fc:	3f 91       	pop	r19
    55fe:	2a e0       	ldi	r18, 0x0A	; 10
    5600:	26 9f       	mul	r18, r22
    5602:	11 24       	eor	r1, r1
    5604:	30 19       	sub	r19, r0
    5606:	30 5d       	subi	r19, 0xD0	; 208
    5608:	31 93       	st	Z+, r19
    560a:	de f6       	brtc	.-74     	; 0x55c2 <__ultoa_invert+0xe>
    560c:	cf 01       	movw	r24, r30
    560e:	08 95       	ret
    5610:	46 2f       	mov	r20, r22
    5612:	47 70       	andi	r20, 0x07	; 7
    5614:	40 5d       	subi	r20, 0xD0	; 208
    5616:	41 93       	st	Z+, r20
    5618:	b3 e0       	ldi	r27, 0x03	; 3
    561a:	0f d0       	rcall	.+30     	; 0x563a <__ultoa_invert+0x86>
    561c:	c9 f7       	brne	.-14     	; 0x5610 <__ultoa_invert+0x5c>
    561e:	f6 cf       	rjmp	.-20     	; 0x560c <__ultoa_invert+0x58>
    5620:	46 2f       	mov	r20, r22
    5622:	4f 70       	andi	r20, 0x0F	; 15
    5624:	40 5d       	subi	r20, 0xD0	; 208
    5626:	4a 33       	cpi	r20, 0x3A	; 58
    5628:	18 f0       	brcs	.+6      	; 0x5630 <__ultoa_invert+0x7c>
    562a:	49 5d       	subi	r20, 0xD9	; 217
    562c:	31 fd       	sbrc	r19, 1
    562e:	40 52       	subi	r20, 0x20	; 32
    5630:	41 93       	st	Z+, r20
    5632:	02 d0       	rcall	.+4      	; 0x5638 <__ultoa_invert+0x84>
    5634:	a9 f7       	brne	.-22     	; 0x5620 <__ultoa_invert+0x6c>
    5636:	ea cf       	rjmp	.-44     	; 0x560c <__ultoa_invert+0x58>
    5638:	b4 e0       	ldi	r27, 0x04	; 4
    563a:	a6 95       	lsr	r26
    563c:	97 95       	ror	r25
    563e:	87 95       	ror	r24
    5640:	77 95       	ror	r23
    5642:	67 95       	ror	r22
    5644:	ba 95       	dec	r27
    5646:	c9 f7       	brne	.-14     	; 0x563a <__ultoa_invert+0x86>
    5648:	00 97       	sbiw	r24, 0x00	; 0
    564a:	61 05       	cpc	r22, r1
    564c:	71 05       	cpc	r23, r1
    564e:	08 95       	ret
    5650:	9b 01       	movw	r18, r22
    5652:	ac 01       	movw	r20, r24
    5654:	0a 2e       	mov	r0, r26
    5656:	06 94       	lsr	r0
    5658:	57 95       	ror	r21
    565a:	47 95       	ror	r20
    565c:	37 95       	ror	r19
    565e:	27 95       	ror	r18
    5660:	ba 95       	dec	r27
    5662:	c9 f7       	brne	.-14     	; 0x5656 <__ultoa_invert+0xa2>
    5664:	62 0f       	add	r22, r18
    5666:	73 1f       	adc	r23, r19
    5668:	84 1f       	adc	r24, r20
    566a:	95 1f       	adc	r25, r21
    566c:	a0 1d       	adc	r26, r0
    566e:	08 95       	ret

00005670 <__divmodsi4>:
    5670:	97 fb       	bst	r25, 7
    5672:	09 2e       	mov	r0, r25
    5674:	05 26       	eor	r0, r21
    5676:	0e d0       	rcall	.+28     	; 0x5694 <__divmodsi4_neg1>
    5678:	57 fd       	sbrc	r21, 7
    567a:	04 d0       	rcall	.+8      	; 0x5684 <__divmodsi4_neg2>
    567c:	6f dc       	rcall	.-1826   	; 0x4f5c <__udivmodsi4>
    567e:	0a d0       	rcall	.+20     	; 0x5694 <__divmodsi4_neg1>
    5680:	00 1c       	adc	r0, r0
    5682:	38 f4       	brcc	.+14     	; 0x5692 <__divmodsi4_exit>

00005684 <__divmodsi4_neg2>:
    5684:	50 95       	com	r21
    5686:	40 95       	com	r20
    5688:	30 95       	com	r19
    568a:	21 95       	neg	r18
    568c:	3f 4f       	sbci	r19, 0xFF	; 255
    568e:	4f 4f       	sbci	r20, 0xFF	; 255
    5690:	5f 4f       	sbci	r21, 0xFF	; 255

00005692 <__divmodsi4_exit>:
    5692:	08 95       	ret

00005694 <__divmodsi4_neg1>:
    5694:	f6 f7       	brtc	.-4      	; 0x5692 <__divmodsi4_exit>
    5696:	90 95       	com	r25
    5698:	80 95       	com	r24
    569a:	70 95       	com	r23
    569c:	61 95       	neg	r22
    569e:	7f 4f       	sbci	r23, 0xFF	; 255
    56a0:	8f 4f       	sbci	r24, 0xFF	; 255
    56a2:	9f 4f       	sbci	r25, 0xFF	; 255
    56a4:	08 95       	ret

000056a6 <_exit>:
    56a6:	f8 94       	cli

000056a8 <__stop_program>:
    56a8:	ff cf       	rjmp	.-2      	; 0x56a8 <__stop_program>
