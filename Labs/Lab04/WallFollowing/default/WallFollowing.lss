
WallFollowing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a6  00800100  000056b4  00005748  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000056b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002ff  008001a6  008001a6  000057ee  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  000057ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000002e0  00000000  00000000  0000582e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f13  00000000  00000000  00005b0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002b2  00000000  00000000  00006a21  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c50  00000000  00000000  00006cd3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f0  00000000  00000000  00007924  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000a38  00000000  00000000  00007b14  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ace  00000000  00000000  0000854c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 31 03 	jmp	0x662	; 0x662 <__ctors_end>
       4:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       8:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      10:	0c 94 0b 17 	jmp	0x2e16	; 0x2e16 <__vector_4>
      14:	0c 94 34 17 	jmp	0x2e68	; 0x2e68 <__vector_5>
      18:	0c 94 5d 17 	jmp	0x2eba	; 0x2eba <__vector_6>
      1c:	0c 94 86 17 	jmp	0x2f0c	; 0x2f0c <__vector_7>
      20:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      24:	0c 94 ec 15 	jmp	0x2bd8	; 0x2bd8 <__vector_9>
      28:	0c 94 15 16 	jmp	0x2c2a	; 0x2c2a <__vector_10>
      2c:	0c 94 3e 16 	jmp	0x2c7c	; 0x2c7c <__vector_11>
      30:	0c 94 b9 16 	jmp	0x2d72	; 0x2d72 <__vector_12>
      34:	0c 94 67 16 	jmp	0x2cce	; 0x2cce <__vector_13>
      38:	0c 94 90 16 	jmp	0x2d20	; 0x2d20 <__vector_14>
      3c:	0c 94 e2 16 	jmp	0x2dc4	; 0x2dc4 <__vector_15>
      40:	0c 94 71 15 	jmp	0x2ae2	; 0x2ae2 <__vector_16>
      44:	0c 94 9a 15 	jmp	0x2b34	; 0x2b34 <__vector_17>
      48:	0c 94 c3 15 	jmp	0x2b86	; 0x2b86 <__vector_18>
      4c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      50:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      54:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      58:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      5c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      60:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      64:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      68:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      6c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      70:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      74:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      78:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      7c:	07 13       	cpse	r16, r23
      7e:	0a 13       	cpse	r16, r26
      80:	0d 13       	cpse	r16, r29
      82:	10 13       	cpse	r17, r16
      84:	19 13       	cpse	r17, r25
      86:	13 13       	cpse	r17, r19
      88:	16 13       	cpse	r17, r22
      8a:	1c 13       	cpse	r17, r28
      8c:	1f 13       	cpse	r17, r31
      8e:	22 13       	cpse	r18, r18
      90:	25 13       	cpse	r18, r21
      92:	28 13       	cpse	r18, r24
      94:	2b 13       	cpse	r18, r27
      96:	2e 13       	cpse	r18, r30
      98:	31 13       	cpse	r19, r17
      9a:	34 13       	cpse	r19, r20
      9c:	37 13       	cpse	r19, r23
      9e:	3a 13       	cpse	r19, r26
      a0:	3d 13       	cpse	r19, r29
      a2:	4e 13       	cpse	r20, r30
      a4:	51 13       	cpse	r21, r17
      a6:	54 13       	cpse	r21, r20
      a8:	57 13       	cpse	r21, r23
      aa:	60 13       	cpse	r22, r16
      ac:	5a 13       	cpse	r21, r26
      ae:	5d 13       	cpse	r21, r29
      b0:	63 13       	cpse	r22, r19
      b2:	66 13       	cpse	r22, r22
      b4:	69 13       	cpse	r22, r25
      b6:	6c 13       	cpse	r22, r28
      b8:	6f 13       	cpse	r22, r31
      ba:	72 13       	cpse	r23, r18
      bc:	75 13       	cpse	r23, r21
      be:	78 13       	cpse	r23, r24
      c0:	7b 13       	cpse	r23, r27
      c2:	7e 13       	cpse	r23, r30
      c4:	81 13       	cpse	r24, r17
      c6:	84 13       	cpse	r24, r20
      c8:	07 63       	ori	r16, 0x37	; 55
      ca:	42 36       	cpi	r20, 0x62	; 98
      cc:	b7 9b       	sbis	0x16, 7	; 22
      ce:	d8 a7       	std	Y+40, r29	; 0x28
      d0:	1a 39       	cpi	r17, 0x9A	; 154
      d2:	68 56       	subi	r22, 0x68	; 104
      d4:	18 ae       	std	Y+56, r1	; 0x38
      d6:	ba ab       	std	Y+50, r27	; 0x32
      d8:	55 8c       	ldd	r5, Z+29	; 0x1d
      da:	1d 3c       	cpi	r17, 0xCD	; 205
      dc:	b7 cc       	rjmp	.-1682   	; 0xfffffa4c <__eeprom_end+0xff7efa4c>
      de:	57 63       	ori	r21, 0x37	; 55
      e0:	bd 6d       	ori	r27, 0xDD	; 221
      e2:	ed fd       	.word	0xfded	; ????
      e4:	75 3e       	cpi	r23, 0xE5	; 229
      e6:	f6 17       	cp	r31, r22
      e8:	72 31       	cpi	r23, 0x12	; 18
      ea:	bf 00       	.word	0x00bf	; ????
      ec:	00 00       	nop
      ee:	80 3f       	cpi	r24, 0xF0	; 240
      f0:	08 00       	.word	0x0008	; ????
      f2:	00 00       	nop
      f4:	be 92       	st	-X, r11
      f6:	24 49       	sbci	r18, 0x94	; 148
      f8:	12 3e       	cpi	r17, 0xE2	; 226
      fa:	ab aa       	std	Y+51, r10	; 0x33
      fc:	aa 2a       	or	r10, r26
      fe:	be cd       	rjmp	.-1156   	; 0xfffffc7c <__eeprom_end+0xff7efc7c>
     100:	cc cc       	rjmp	.-1640   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     102:	4c 3e       	cpi	r20, 0xEC	; 236
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	be ab       	std	Y+54, r27	; 0x36
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	aa 3e       	cpi	r26, 0xEA	; 234
     10e:	00 00       	nop
     110:	00 00       	nop
     112:	bf 00       	.word	0x00bf	; ????
     114:	00 00       	nop
     116:	80 3f       	cpi	r24, 0xF0	; 240
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	00 08       	sbc	r0, r0
     11e:	41 78       	andi	r20, 0x81	; 129
     120:	d3 bb       	out	0x13, r29	; 19
     122:	43 87       	std	Z+11, r20	; 0x0b
     124:	d1 13       	cpse	r29, r17
     126:	3d 19       	sub	r19, r13
     128:	0e 3c       	cpi	r16, 0xCE	; 206
     12a:	c3 bd       	out	0x23, r28	; 35
     12c:	42 82       	std	Z+2, r4	; 0x02
     12e:	ad 2b       	or	r26, r29
     130:	3e 68       	ori	r19, 0x8E	; 142
     132:	ec 82       	std	Y+4, r14	; 0x04
     134:	76 be       	out	0x36, r7	; 54
     136:	d9 8f       	std	Y+25, r29	; 0x19
     138:	e1 a9       	ldd	r30, Z+49	; 0x31
     13a:	3e 4c       	sbci	r19, 0xCE	; 206
     13c:	80 ef       	ldi	r24, 0xF0	; 240
     13e:	ff be       	out	0x3f, r15	; 63
     140:	01 c4       	rjmp	.+2050   	; 0x944 <read_pixel_1+0x44>
     142:	ff 7f       	andi	r31, 0xFF	; 255
     144:	3f 00       	.word	0x003f	; ????
     146:	00 00       	nop
	...

0000014a <char_bitmap>:
     14a:	16 05 01 00 00 00 00 00 00 00 fa 00 00 00 e0 00     ................
     15a:	e0 00 28 fe 28 fe 28 24 54 fe 54 48 c4 c8 10 26     ..(.(.($T.TH...&
     16a:	46 6c 92 aa 44 a0 00 a0 c0 00 00 00 38 44 82 00     Fl..D.......8D..
     17a:	00 82 44 38 00 28 10 7c 10 28 10 10 7c 10 10 00     ..D8.(.|.(..|...
     18a:	0a 0c 00 00 10 10 10 10 10 00 06 06 00 00 04 08     ................
     19a:	10 20 40 7c 8a 92 a2 7c 00 42 fe 02 00 42 86 8a     . @|...|.B...B..
     1aa:	92 62 84 82 a2 d2 8c 18 28 48 fe 08 e4 a2 a2 a2     .b......(H......
     1ba:	9c 3c 52 92 92 0c 80 8e 90 a0 c0 6c 92 92 92 6c     .<R........l...l
     1ca:	60 92 92 94 78 00 6c 6c 00 00 00 6a 6c 00 00 10     `...x.ll...jl...
     1da:	28 44 82 00 28 28 28 28 28 00 82 44 28 10 40 80     (D..(((((..D(.@.
     1ea:	8a 90 60 4c 92 9e 82 7c 7e 88 88 88 7e fe 92 92     ..`L...|~...~...
     1fa:	92 6c 7c 82 82 82 44 fe 82 82 44 38 fe 92 92 92     .l|...D...D8....
     20a:	82 fe 90 90 90 80 7c 82 92 92 5e fe 10 10 10 fe     ......|...^.....
     21a:	00 82 fe 82 00 04 02 82 fc 80 fe 10 28 44 82 fe     ............(D..
     22a:	02 02 02 02 fe 40 30 40 fe fe 20 10 08 fe 7c 82     .....@0@.. ...|.
     23a:	82 82 7c fe 90 90 90 60 7c 82 8a 84 7a fe 90 98     ..|....`|...z...
     24a:	94 62 62 92 92 92 8c 80 80 fe 80 80 fc 02 02 02     .bb.............
     25a:	fc f8 04 02 04 f8 fc 02 1c 02 fc c6 28 10 28 c6     ............(.(.
     26a:	e0 10 0e 10 e0 86 8a 92 a2 c2 00 fe 82 82 00 40     ...............@
     27a:	20 10 08 04 00 82 82 fe 00 20 40 80 40 20 02 02      ........ @.@ ..
     28a:	02 02 02 00 80 40 20 00 04 2a 2a 2a 1e fe 12 22     .....@ ..***..."
     29a:	22 1c 1c 22 22 22 04 1c 22 22 12 fe 1c 2a 2a 2a     ".."""..""...***
     2aa:	18 10 7e 90 80 40 30 4a 4a 4a 7c fe 10 20 20 1e     ..~..@0JJJ|..  .
     2ba:	00 22 be 02 00 04 02 22 bc 00 fe 08 14 22 00 00     ."....."....."..
     2ca:	82 fe 02 00 3e 20 18 20 1e 3e 10 20 20 1e 1c 22     ....> . .>.  .."
     2da:	22 22 1c 3e 28 28 28 10 10 28 28 18 3e 3e 10 20     "".>(((..((.>>. 
     2ea:	20 10 12 2a 2a 2a 04 20 fc 22 02 04 3c 02 02 04      ..***. ."..<...
     2fa:	3e 38 04 02 04 38 3c 02 0c 02 3c 22 14 08 14 22     >8...8<...<"..."
     30a:	30 0a 0a 0a 3c 22 26 2a 32 22 00 10 6c 82 00 00     0...<"&*2"..l...
     31a:	00 fe 00 00 00 82 6c 10 00 08 10 10 08 10 00 00     ......l.........
     32a:	00 00 00 7f 81 81 81 7f 7f 83 83 83 7f 7f 87 87     ................
     33a:	87 7f 7f 8f 8f 8f 7f 7f 9f 9f 9f 7f 7f bf bf bf     ................
     34a:	7f 7f ff ff ff 7f 20 40 ff 40 20 62 15 17 15 65     ...... @.@ b...e
     35a:	00 fb fb 00 00                                      .....

0000035f <CEENBoT_Inc_logo_bitmap>:
     35f:	00 00 00 00 00 c0 ff 03 00 e0 ff 07 00 f0 ff 0f     ................
     36f:	00 f8 ff 1f 00 78 00 1e 00 78 00 1e 00 78 00 1e     .....x...x...x..
     37f:	00 78 00 1e 00 78 00 1e 00 78 00 1e 00 78 00 1e     .x...x...x...x..
     38f:	00 78 00 1e 00 78 00 1e 00 00 00 00 00 00 00 00     .x...x..........
     39f:	00 80 ff 03 00 e0 ff 07 00 f0 ff 0f 00 f8 ff 1f     ................
     3af:	00 f8 3c 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     ..<..x<..x<..x<.
     3bf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     3cf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     3df:	00 00 00 00 00 e0 ff 03 00 f0 ff 07 00 f8 ff 0f     ................
     3ef:	00 f8 ff 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .....x<..x<..x<.
     3ff:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     40f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     41f:	00 00 00 00 00 f8 ff 03 00 f8 ff 0f 00 f8 ff 1f     ................
     42f:	00 f8 ff 1f 00 00 00 1e 00 00 00 1e 00 00 80 1f     ................
     43f:	00 00 f0 1f 00 00 ff 0f 00 e0 ff 07 00 f0 ff 00     ................
     44f:	00 f8 0f 00 00 f8 00 00 00 78 00 00 00 78 00 00     .........x...x..
     45f:	00 f8 ff 1f 00 f8 ff 1f 00 f0 ff 1f 00 e0 ff 1f     ................
	...
     477:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     487:	00 78 00 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x...x<..x<..x<.
     497:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 f8 7e 1f     .x<..x<..x<...~.
     4a7:	00 f8 ff 1f 00 f0 ff 0f 00 e0 e7 03 00 00 00 00     ................
     4b7:	00 00 00 38 00 ee ff 6c 00 2a 80 45 00 3a 00 47     ...8...l.*.E.:.G
     4c7:	fc 03 ff 6c fc 83 ff 39 00 de ff 0b 7c d0 81 0b     ...l...9....|...
     4d7:	fc d0 81 0b c0 d0 81 0b fc d0 81 0b 7c de ff 0b     ............|...
     4e7:	00 82 ff 39 70 02 ff 6c f8 3a 00 47 dc 2a 80 45     ...9p..l.:.G.*.E
     4f7:	cc ee ff 6c cc 00 00 38 00 00 00 00 0c 00 00 1e     ...l...8........
     507:	0c 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     517:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     527:	00 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     537:	00 00 00 5e 00 00 00 40 00 00 00 7c 00 00 00 40     ...^...@...|...@
     547:	00 00 00 40 00 00 00 7c 00 00 00 30 00 00 00 10     ...@...|...0....
     557:	00 00 00 30 00 00 00 7c                             ...0...|

0000055f <__c.1790>:
     55f:	6e 61 6e 00                                         nan.

00000563 <__c.1788>:
     563:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     573:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     583:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     593:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     5a3:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     5b3:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     5c3:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     5d3:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     5e3:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     5f3:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     603:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     613:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     623:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     633:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     643:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     653:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

00000662 <__ctors_end>:
     662:	11 24       	eor	r1, r1
     664:	1f be       	out	0x3f, r1	; 63
     666:	cf ef       	ldi	r28, 0xFF	; 255
     668:	d8 e0       	ldi	r29, 0x08	; 8
     66a:	de bf       	out	0x3e, r29	; 62
     66c:	cd bf       	out	0x3d, r28	; 61

0000066e <__do_copy_data>:
     66e:	11 e0       	ldi	r17, 0x01	; 1
     670:	a0 e0       	ldi	r26, 0x00	; 0
     672:	b1 e0       	ldi	r27, 0x01	; 1
     674:	e4 eb       	ldi	r30, 0xB4	; 180
     676:	f6 e5       	ldi	r31, 0x56	; 86
     678:	02 c0       	rjmp	.+4      	; 0x67e <.do_copy_data_start>

0000067a <.do_copy_data_loop>:
     67a:	05 90       	lpm	r0, Z+
     67c:	0d 92       	st	X+, r0

0000067e <.do_copy_data_start>:
     67e:	a6 3a       	cpi	r26, 0xA6	; 166
     680:	b1 07       	cpc	r27, r17
     682:	d9 f7       	brne	.-10     	; 0x67a <.do_copy_data_loop>

00000684 <__do_clear_bss>:
     684:	14 e0       	ldi	r17, 0x04	; 4
     686:	a6 ea       	ldi	r26, 0xA6	; 166
     688:	b1 e0       	ldi	r27, 0x01	; 1
     68a:	01 c0       	rjmp	.+2      	; 0x68e <.do_clear_bss_start>

0000068c <.do_clear_bss_loop>:
     68c:	1d 92       	st	X+, r1

0000068e <.do_clear_bss_start>:
     68e:	a5 3a       	cpi	r26, 0xA5	; 165
     690:	b1 07       	cpc	r27, r17
     692:	e1 f7       	brne	.-8      	; 0x68c <.do_clear_bss_loop>
     694:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <main>
     698:	0c 94 58 2b 	jmp	0x56b0	; 0x56b0 <_exit>

0000069c <__bad_interrupt>:
     69c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006a0 <get_ambient_temp>:
* Output Return:	I2C_STATUS
* Overview:			Reads the ambient temperature
********************************************************************/

I2C_STATUS get_ambient_temp( unsigned char *ambient_temp )
{
     6a0:	1f 93       	push	r17
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6a8:	88 e6       	ldi	r24, 0x68	; 104
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     6b0:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     6b2:	88 23       	and	r24, r24
     6b4:	a1 f4       	brne	.+40     	; 0x6de <get_ambient_temp+0x3e>
	{

		// Send the register value (being 1).  This is
		// the register that contains the ambient temperature.
		i2c_stat = I2C_MSTR_send( __TPA81_AMBIENT );
     6b6:	81 e0       	ldi	r24, 0x01	; 1
     6b8:	0e 94 af 14 	call	0x295e	; 0x295e <I2C_MSTR_send>
     6bc:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     6be:	88 23       	and	r24, r24
     6c0:	71 f4       	brne	.+28     	; 0x6de <get_ambient_temp+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     6c2:	88 e6       	ldi	r24, 0x68	; 104
     6c4:	61 e0       	ldi	r22, 0x01	; 1
     6c6:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     6ca:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     6cc:	88 23       	and	r24, r24
     6ce:	39 f4       	brne	.+14     	; 0x6de <get_ambient_temp+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( ambient_temp, FALSE );
     6d0:	ce 01       	movw	r24, r28
     6d2:	60 e0       	ldi	r22, 0x00	; 0
     6d4:	0e 94 83 14 	call	0x2906	; 0x2906 <I2C_MSTR_get>
     6d8:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     6da:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*ambient_temp = 0;
     6dc:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     6de:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_ambient_temp()
     6e2:	81 2f       	mov	r24, r17
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	1f 91       	pop	r17
     6ea:	08 95       	ret

000006ec <read_pixel_8>:
	return i2c_stat;
}

// get pixel eight
I2C_STATUS read_pixel_8( unsigned char *pixel_8)
{
     6ec:	1f 93       	push	r17
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6f4:	88 e6       	ldi	r24, 0x68	; 104
     6f6:	60 e0       	ldi	r22, 0x00	; 0
     6f8:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     6fc:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     6fe:	88 23       	and	r24, r24
     700:	a1 f4       	brne	.+40     	; 0x72a <read_pixel_8+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX8 );
     702:	89 e0       	ldi	r24, 0x09	; 9
     704:	0e 94 af 14 	call	0x295e	; 0x295e <I2C_MSTR_send>
     708:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     70a:	88 23       	and	r24, r24
     70c:	71 f4       	brne	.+28     	; 0x72a <read_pixel_8+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     70e:	88 e6       	ldi	r24, 0x68	; 104
     710:	61 e0       	ldi	r22, 0x01	; 1
     712:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     716:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     718:	88 23       	and	r24, r24
     71a:	39 f4       	brne	.+14     	; 0x72a <read_pixel_8+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_8, FALSE );
     71c:	ce 01       	movw	r24, r28
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	0e 94 83 14 	call	0x2906	; 0x2906 <I2C_MSTR_get>
     724:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     726:	81 11       	cpse	r24, r1
					*pixel_8 = 0;
     728:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     72a:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <I2C_MSTR_stop>
	return i2c_stat;
}
     72e:	81 2f       	mov	r24, r17
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	1f 91       	pop	r17
     736:	08 95       	ret

00000738 <read_pixel_7>:
	return i2c_stat;
}

// get pixel seven
I2C_STATUS read_pixel_7( unsigned char *pixel_7)
{
     738:	1f 93       	push	r17
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     740:	88 e6       	ldi	r24, 0x68	; 104
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     748:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     74a:	88 23       	and	r24, r24
     74c:	a1 f4       	brne	.+40     	; 0x776 <read_pixel_7+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX7 );
     74e:	88 e0       	ldi	r24, 0x08	; 8
     750:	0e 94 af 14 	call	0x295e	; 0x295e <I2C_MSTR_send>
     754:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     756:	88 23       	and	r24, r24
     758:	71 f4       	brne	.+28     	; 0x776 <read_pixel_7+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     75a:	88 e6       	ldi	r24, 0x68	; 104
     75c:	61 e0       	ldi	r22, 0x01	; 1
     75e:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     762:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     764:	88 23       	and	r24, r24
     766:	39 f4       	brne	.+14     	; 0x776 <read_pixel_7+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_7, FALSE );
     768:	ce 01       	movw	r24, r28
     76a:	60 e0       	ldi	r22, 0x00	; 0
     76c:	0e 94 83 14 	call	0x2906	; 0x2906 <I2C_MSTR_get>
     770:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     772:	81 11       	cpse	r24, r1
					*pixel_7 = 0;
     774:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     776:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <I2C_MSTR_stop>
	return i2c_stat;
}
     77a:	81 2f       	mov	r24, r17
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	1f 91       	pop	r17
     782:	08 95       	ret

00000784 <read_pixel_6>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel six
I2C_STATUS read_pixel_6( unsigned char *pixel_6)
{
     784:	1f 93       	push	r17
     786:	cf 93       	push	r28
     788:	df 93       	push	r29
     78a:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     78c:	88 e6       	ldi	r24, 0x68	; 104
     78e:	60 e0       	ldi	r22, 0x00	; 0
     790:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     794:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     796:	88 23       	and	r24, r24
     798:	a1 f4       	brne	.+40     	; 0x7c2 <read_pixel_6+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX6 );
     79a:	87 e0       	ldi	r24, 0x07	; 7
     79c:	0e 94 af 14 	call	0x295e	; 0x295e <I2C_MSTR_send>
     7a0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7a2:	88 23       	and	r24, r24
     7a4:	71 f4       	brne	.+28     	; 0x7c2 <read_pixel_6+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7a6:	88 e6       	ldi	r24, 0x68	; 104
     7a8:	61 e0       	ldi	r22, 0x01	; 1
     7aa:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     7ae:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7b0:	88 23       	and	r24, r24
     7b2:	39 f4       	brne	.+14     	; 0x7c2 <read_pixel_6+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_6, FALSE );
     7b4:	ce 01       	movw	r24, r28
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	0e 94 83 14 	call	0x2906	; 0x2906 <I2C_MSTR_get>
     7bc:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     7be:	81 11       	cpse	r24, r1
					*pixel_6 = 0;
     7c0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     7c2:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <I2C_MSTR_stop>
	return i2c_stat;
}
     7c6:	81 2f       	mov	r24, r17
     7c8:	df 91       	pop	r29
     7ca:	cf 91       	pop	r28
     7cc:	1f 91       	pop	r17
     7ce:	08 95       	ret

000007d0 <read_pixel_5>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel five
I2C_STATUS read_pixel_5( unsigned char *pixel_5)
{
     7d0:	1f 93       	push	r17
     7d2:	cf 93       	push	r28
     7d4:	df 93       	push	r29
     7d6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     7d8:	88 e6       	ldi	r24, 0x68	; 104
     7da:	60 e0       	ldi	r22, 0x00	; 0
     7dc:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     7e0:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     7e2:	88 23       	and	r24, r24
     7e4:	a1 f4       	brne	.+40     	; 0x80e <read_pixel_5+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX5 );
     7e6:	86 e0       	ldi	r24, 0x06	; 6
     7e8:	0e 94 af 14 	call	0x295e	; 0x295e <I2C_MSTR_send>
     7ec:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7ee:	88 23       	and	r24, r24
     7f0:	71 f4       	brne	.+28     	; 0x80e <read_pixel_5+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7f2:	88 e6       	ldi	r24, 0x68	; 104
     7f4:	61 e0       	ldi	r22, 0x01	; 1
     7f6:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     7fa:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7fc:	88 23       	and	r24, r24
     7fe:	39 f4       	brne	.+14     	; 0x80e <read_pixel_5+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_5, FALSE );
     800:	ce 01       	movw	r24, r28
     802:	60 e0       	ldi	r22, 0x00	; 0
     804:	0e 94 83 14 	call	0x2906	; 0x2906 <I2C_MSTR_get>
     808:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     80a:	81 11       	cpse	r24, r1
					*pixel_5 = 0;
     80c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     80e:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <I2C_MSTR_stop>
	return i2c_stat;
}
     812:	81 2f       	mov	r24, r17
     814:	df 91       	pop	r29
     816:	cf 91       	pop	r28
     818:	1f 91       	pop	r17
     81a:	08 95       	ret

0000081c <read_pixel_4>:
	return i2c_stat;
}

// get pixel four
I2C_STATUS read_pixel_4( unsigned char *pixel_4)
{
     81c:	1f 93       	push	r17
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     824:	88 e6       	ldi	r24, 0x68	; 104
     826:	60 e0       	ldi	r22, 0x00	; 0
     828:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     82c:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     82e:	88 23       	and	r24, r24
     830:	a1 f4       	brne	.+40     	; 0x85a <read_pixel_4+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX4 );
     832:	85 e0       	ldi	r24, 0x05	; 5
     834:	0e 94 af 14 	call	0x295e	; 0x295e <I2C_MSTR_send>
     838:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     83a:	88 23       	and	r24, r24
     83c:	71 f4       	brne	.+28     	; 0x85a <read_pixel_4+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     83e:	88 e6       	ldi	r24, 0x68	; 104
     840:	61 e0       	ldi	r22, 0x01	; 1
     842:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     846:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     848:	88 23       	and	r24, r24
     84a:	39 f4       	brne	.+14     	; 0x85a <read_pixel_4+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_4, FALSE );
     84c:	ce 01       	movw	r24, r28
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	0e 94 83 14 	call	0x2906	; 0x2906 <I2C_MSTR_get>
     854:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     856:	81 11       	cpse	r24, r1
					*pixel_4 = 0;
     858:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     85a:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <I2C_MSTR_stop>
	return i2c_stat;
}
     85e:	81 2f       	mov	r24, r17
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	1f 91       	pop	r17
     866:	08 95       	ret

00000868 <read_pixel_3>:
	return i2c_stat;
}

// get pixel three
I2C_STATUS read_pixel_3( unsigned char *pixel_3)
{
     868:	1f 93       	push	r17
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     870:	88 e6       	ldi	r24, 0x68	; 104
     872:	60 e0       	ldi	r22, 0x00	; 0
     874:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     878:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     87a:	88 23       	and	r24, r24
     87c:	a1 f4       	brne	.+40     	; 0x8a6 <read_pixel_3+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX3 );
     87e:	84 e0       	ldi	r24, 0x04	; 4
     880:	0e 94 af 14 	call	0x295e	; 0x295e <I2C_MSTR_send>
     884:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     886:	88 23       	and	r24, r24
     888:	71 f4       	brne	.+28     	; 0x8a6 <read_pixel_3+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     88a:	88 e6       	ldi	r24, 0x68	; 104
     88c:	61 e0       	ldi	r22, 0x01	; 1
     88e:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     892:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     894:	88 23       	and	r24, r24
     896:	39 f4       	brne	.+14     	; 0x8a6 <read_pixel_3+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_3, FALSE );
     898:	ce 01       	movw	r24, r28
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	0e 94 83 14 	call	0x2906	; 0x2906 <I2C_MSTR_get>
     8a0:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8a2:	81 11       	cpse	r24, r1
					*pixel_3 = 0;
     8a4:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     8a6:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <I2C_MSTR_stop>
	return i2c_stat;
}
     8aa:	81 2f       	mov	r24, r17
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	1f 91       	pop	r17
     8b2:	08 95       	ret

000008b4 <read_pixel_2>:
}


// get pixel two
I2C_STATUS read_pixel_2( unsigned char *pixel_2)
{
     8b4:	1f 93       	push	r17
     8b6:	cf 93       	push	r28
     8b8:	df 93       	push	r29
     8ba:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     8bc:	88 e6       	ldi	r24, 0x68	; 104
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     8c4:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     8c6:	88 23       	and	r24, r24
     8c8:	a1 f4       	brne	.+40     	; 0x8f2 <read_pixel_2+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX2 );
     8ca:	83 e0       	ldi	r24, 0x03	; 3
     8cc:	0e 94 af 14 	call	0x295e	; 0x295e <I2C_MSTR_send>
     8d0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     8d2:	88 23       	and	r24, r24
     8d4:	71 f4       	brne	.+28     	; 0x8f2 <read_pixel_2+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     8d6:	88 e6       	ldi	r24, 0x68	; 104
     8d8:	61 e0       	ldi	r22, 0x01	; 1
     8da:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     8de:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     8e0:	88 23       	and	r24, r24
     8e2:	39 f4       	brne	.+14     	; 0x8f2 <read_pixel_2+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_2, FALSE );
     8e4:	ce 01       	movw	r24, r28
     8e6:	60 e0       	ldi	r22, 0x00	; 0
     8e8:	0e 94 83 14 	call	0x2906	; 0x2906 <I2C_MSTR_get>
     8ec:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8ee:	81 11       	cpse	r24, r1
					*pixel_2 = 0;
     8f0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     8f2:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <I2C_MSTR_stop>
	return i2c_stat;
}
     8f6:	81 2f       	mov	r24, r17
     8f8:	df 91       	pop	r29
     8fa:	cf 91       	pop	r28
     8fc:	1f 91       	pop	r17
     8fe:	08 95       	ret

00000900 <read_pixel_1>:
* Output Return:	I2C_STATUS
* Overview:			These are several pixel read values for each of the pixels
********************************************************************/
// get pixel one
I2C_STATUS read_pixel_1( unsigned char *pixel_1)
{
     900:	1f 93       	push	r17
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     908:	88 e6       	ldi	r24, 0x68	; 104
     90a:	60 e0       	ldi	r22, 0x00	; 0
     90c:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     910:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     912:	88 23       	and	r24, r24
     914:	a1 f4       	brne	.+40     	; 0x93e <read_pixel_1+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX1 );
     916:	82 e0       	ldi	r24, 0x02	; 2
     918:	0e 94 af 14 	call	0x295e	; 0x295e <I2C_MSTR_send>
     91c:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     91e:	88 23       	and	r24, r24
     920:	71 f4       	brne	.+28     	; 0x93e <read_pixel_1+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     922:	88 e6       	ldi	r24, 0x68	; 104
     924:	61 e0       	ldi	r22, 0x01	; 1
     926:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     92a:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     92c:	88 23       	and	r24, r24
     92e:	39 f4       	brne	.+14     	; 0x93e <read_pixel_1+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_1, FALSE );
     930:	ce 01       	movw	r24, r28
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	0e 94 83 14 	call	0x2906	; 0x2906 <I2C_MSTR_get>
     938:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     93a:	81 11       	cpse	r24, r1
					*pixel_1 = 0;
     93c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     93e:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <I2C_MSTR_stop>
	return i2c_stat;
}
     942:	81 2f       	mov	r24, r17
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	1f 91       	pop	r17
     94a:	08 95       	ret

0000094c <get_revision>:
* Input Variables:	unsigned char revision
* Output Return:	I2C_STATUS
* Overview:			
********************************************************************/
I2C_STATUS get_revision( unsigned char *revision )
{
     94c:	1f 93       	push	r17
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
     952:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     954:	88 e6       	ldi	r24, 0x68	; 104
     956:	60 e0       	ldi	r22, 0x00	; 0
     958:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     95c:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     95e:	88 23       	and	r24, r24
     960:	a1 f4       	brne	.+40     	; 0x98a <get_revision+0x3e>
	{

		// Send the register value (being 0).  This is
		// the register that contains the software revision.
		i2c_stat = I2C_MSTR_send( __TPA81_REVISION );
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	0e 94 af 14 	call	0x295e	; 0x295e <I2C_MSTR_send>
     968:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     96a:	88 23       	and	r24, r24
     96c:	71 f4       	brne	.+28     	; 0x98a <get_revision+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     96e:	88 e6       	ldi	r24, 0x68	; 104
     970:	61 e0       	ldi	r22, 0x01	; 1
     972:	0e 94 d5 14 	call	0x29aa	; 0x29aa <I2C_MSTR_start>
     976:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     978:	88 23       	and	r24, r24
     97a:	39 f4       	brne	.+14     	; 0x98a <get_revision+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( revision, FALSE );
     97c:	ce 01       	movw	r24, r28
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	0e 94 83 14 	call	0x2906	; 0x2906 <I2C_MSTR_get>
     984:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     986:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*revision = 0;
     988:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     98a:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_revision()
     98e:	81 2f       	mov	r24, r17
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	1f 91       	pop	r17
     996:	08 95       	ret

00000998 <getBackIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <ADC_set_VREF>
	// Set the channel we will sample from.
	// Note: Swaped with frount IR for orientation
	ADC_set_channel(IRFRONT_CHAN);
     99e:	87 e0       	ldi	r24, 0x07	; 7
     9a0:	0e 94 6f 0d 	call	0x1ade	; 0x1ade <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9a4:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <ADC_sample>
     9a8:	a0 e0       	ldi	r26, 0x00	; 0
     9aa:	b0 e0       	ldi	r27, 0x00	; 0
     9ac:	bc 01       	movw	r22, r24
     9ae:	cd 01       	movw	r24, r26
     9b0:	0e 94 73 21 	call	0x42e6	; 0x42e6 <__floatunsisf>
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	40 ea       	ldi	r20, 0xA0	; 160
     9ba:	50 e4       	ldi	r21, 0x40	; 64
     9bc:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
     9c0:	9b 01       	movw	r18, r22
     9c2:	ac 01       	movw	r20, r24
     9c4:	60 e0       	ldi	r22, 0x00	; 0
     9c6:	70 e2       	ldi	r23, 0x20	; 32
     9c8:	86 e3       	ldi	r24, 0x36	; 54
     9ca:	95 e4       	ldi	r25, 0x45	; 69
     9cc:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
     9d0:	20 e0       	ldi	r18, 0x00	; 0
     9d2:	30 e0       	ldi	r19, 0x00	; 0
     9d4:	40 e8       	ldi	r20, 0x80	; 128
     9d6:	5f e3       	ldi	r21, 0x3F	; 63
     9d8:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     9dc:	08 95       	ret

000009de <getFrontIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     9de:	81 e0       	ldi	r24, 0x01	; 1
     9e0:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <ADC_set_VREF>
	// Set the channel we will sample from.
	// Note: Swaped with back IR for orientation
	ADC_set_channel(IRBACK_CHAN);
     9e4:	85 e0       	ldi	r24, 0x05	; 5
     9e6:	0e 94 6f 0d 	call	0x1ade	; 0x1ade <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9ea:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <ADC_sample>
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	bc 01       	movw	r22, r24
     9f4:	cd 01       	movw	r24, r26
     9f6:	0e 94 73 21 	call	0x42e6	; 0x42e6 <__floatunsisf>
     9fa:	20 e0       	ldi	r18, 0x00	; 0
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	40 ea       	ldi	r20, 0xA0	; 160
     a00:	50 e4       	ldi	r21, 0x40	; 64
     a02:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
     a06:	9b 01       	movw	r18, r22
     a08:	ac 01       	movw	r20, r24
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	70 e2       	ldi	r23, 0x20	; 32
     a0e:	86 e3       	ldi	r24, 0x36	; 54
     a10:	95 e4       	ldi	r25, 0x45	; 69
     a12:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	40 e8       	ldi	r20, 0x80	; 128
     a1c:	5f e3       	ldi	r21, 0x3F	; 63
     a1e:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a22:	08 95       	ret

00000a24 <getRightIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
     a2a:	83 e0       	ldi	r24, 0x03	; 3
     a2c:	0e 94 6f 0d 	call	0x1ade	; 0x1ade <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a30:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <ADC_sample>
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	bc 01       	movw	r22, r24
     a3a:	cd 01       	movw	r24, r26
     a3c:	0e 94 73 21 	call	0x42e6	; 0x42e6 <__floatunsisf>
     a40:	20 e0       	ldi	r18, 0x00	; 0
     a42:	30 e0       	ldi	r19, 0x00	; 0
     a44:	40 ea       	ldi	r20, 0xA0	; 160
     a46:	50 e4       	ldi	r21, 0x40	; 64
     a48:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
     a4c:	9b 01       	movw	r18, r22
     a4e:	ac 01       	movw	r20, r24
     a50:	60 e0       	ldi	r22, 0x00	; 0
     a52:	70 e2       	ldi	r23, 0x20	; 32
     a54:	86 e3       	ldi	r24, 0x36	; 54
     a56:	95 e4       	ldi	r25, 0x45	; 69
     a58:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
     a5c:	20 e0       	ldi	r18, 0x00	; 0
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	40 e8       	ldi	r20, 0x80	; 128
     a62:	5f e3       	ldi	r21, 0x3F	; 63
     a64:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a68:	08 95       	ret

00000a6a <getLeftIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
 	ADC_set_VREF( ADC_VREF_AVCC );
     a6a:	81 e0       	ldi	r24, 0x01	; 1
     a6c:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
     a70:	84 e0       	ldi	r24, 0x04	; 4
     a72:	0e 94 6f 0d 	call	0x1ade	; 0x1ade <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a76:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <ADC_sample>
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	b0 e0       	ldi	r27, 0x00	; 0
     a7e:	bc 01       	movw	r22, r24
     a80:	cd 01       	movw	r24, r26
     a82:	0e 94 73 21 	call	0x42e6	; 0x42e6 <__floatunsisf>
     a86:	20 e0       	ldi	r18, 0x00	; 0
     a88:	30 e0       	ldi	r19, 0x00	; 0
     a8a:	40 ea       	ldi	r20, 0xA0	; 160
     a8c:	50 e4       	ldi	r21, 0x40	; 64
     a8e:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
     a92:	9b 01       	movw	r18, r22
     a94:	ac 01       	movw	r20, r24
     a96:	60 e0       	ldi	r22, 0x00	; 0
     a98:	70 e2       	ldi	r23, 0x20	; 32
     a9a:	86 e3       	ldi	r24, 0x36	; 54
     a9c:	95 e4       	ldi	r25, 0x45	; 69
     a9e:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	30 e0       	ldi	r19, 0x00	; 0
     aa6:	40 e8       	ldi	r20, 0x80	; 128
     aa8:	5f e3       	ldi	r21, 0x3F	; 63
     aaa:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     aae:	08 95       	ret

00000ab0 <getRightLight>:
********************************************************************/
float getRightLight( void )
{
	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <ADC_set_VREF>
	ADC_set_channel( RIGHT_LIGHT_CHAN );
     ab6:	85 e0       	ldi	r24, 0x05	; 5
     ab8:	0e 94 6f 0d 	call	0x1ade	; 0x1ade <ADC_set_channel>
	adcsample = ADC_sample();
     abc:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <ADC_sample>
     ac0:	a0 e0       	ldi	r26, 0x00	; 0
     ac2:	b0 e0       	ldi	r27, 0x00	; 0
     ac4:	bc 01       	movw	r22, r24
     ac6:	cd 01       	movw	r24, r26
     ac8:	0e 94 73 21 	call	0x42e6	; 0x42e6 <__floatunsisf>
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	40 ea       	ldi	r20, 0xA0	; 160
     ad2:	5b e3       	ldi	r21, 0x3B	; 59
     ad4:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
	// LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * ( 5.0 / 1024 );
	// LCD_printf( "right: %f\n",voltage);
	return voltage;
}
     ad8:	08 95       	ret

00000ada <getLeftLight>:
float getLeftLight( void )
{

	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ada:	81 e0       	ldi	r24, 0x01	; 1
     adc:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <ADC_set_VREF>
	ADC_set_channel( LEFT_LIGHT_CHAN );
     ae0:	86 e0       	ldi	r24, 0x06	; 6
     ae2:	0e 94 6f 0d 	call	0x1ade	; 0x1ade <ADC_set_channel>
	adcsample = ADC_sample();
     ae6:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <ADC_sample>
     aea:	a0 e0       	ldi	r26, 0x00	; 0
     aec:	b0 e0       	ldi	r27, 0x00	; 0
     aee:	bc 01       	movw	r22, r24
     af0:	cd 01       	movw	r24, r26
     af2:	0e 94 73 21 	call	0x42e6	; 0x42e6 <__floatunsisf>
     af6:	20 e0       	ldi	r18, 0x00	; 0
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	40 ea       	ldi	r20, 0xA0	; 160
     afc:	5b e3       	ldi	r21, 0x3B	; 59
     afe:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * (5.0/ 1024.0 );
	// LCD_printf( "voltage: %f\n",voltage);
	return voltage;
}
     b02:	08 95       	ret

00000b04 <WaitButton>:
* Input Variables:	none
* Output Return:	int
* Overview:			Use a comment block like this before functions
********************************************************************/
int WaitButton( void ) 
{
     b04:	ff 92       	push	r15
     b06:	0f 93       	push	r16
     b08:	1f 93       	push	r17
     b0a:	cf 93       	push	r28
     b0c:	df 93       	push	r29
    BOOL btnState1, btnState2, btnState3;//local variables - button states
	//int rtnValue=0;//return the button value
	int rtnValue=0;

	LCD_clear();
     b0e:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <LCD_clear>

	if((ATopstat.state=SUBSYS_OPEN))
     b12:	81 e0       	ldi	r24, 0x01	; 1
     b14:	80 93 42 02 	sts	0x0242, r24
	{
       		// Get switch states.
		btnState1 = ATTINY_get_SW_state( ATTINY_SW3 );
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	0e 94 87 13 	call	0x270e	; 0x270e <ATTINY_get_SW_state>
     b1e:	18 2f       	mov	r17, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
     b20:	81 e0       	ldi	r24, 0x01	; 1
     b22:	0e 94 87 13 	call	0x270e	; 0x270e <ATTINY_get_SW_state>
     b26:	08 2f       	mov	r16, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
     b28:	82 e0       	ldi	r24, 0x02	; 2
     b2a:	0e 94 87 13 	call	0x270e	; 0x270e <ATTINY_get_SW_state>
     b2e:	f8 2e       	mov	r15, r24
		//LCD_printf("btnStates: %d %d %d \n", btnState1, btnState2, btnState3);

		if( btnState1 == TRUE ) 
     b30:	11 30       	cpi	r17, 0x01	; 1
     b32:	19 f0       	breq	.+6      	; 0xb3a <WaitButton+0x36>
     b34:	c0 e0       	ldi	r28, 0x00	; 0
     b36:	d0 e0       	ldi	r29, 0x00	; 0
     b38:	17 c0       	rjmp	.+46     	; 0xb68 <WaitButton+0x64>
		{
			LCD_printf( "SW1: Pushed\n");
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	91 e0       	ldi	r25, 0x01	; 1
     b3e:	0e 94 aa 2a 	call	0x5554	; 0x5554 <puts>
			TMRSRVC_delay(1000);//wait 1 s
     b42:	88 ee       	ldi	r24, 0xE8	; 232
     b44:	93 e0       	ldi	r25, 0x03	; 3
     b46:	0e 94 24 14 	call	0x2848	; 0x2848 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b00100000 );//turn the red LED on
     b4a:	80 e2       	ldi	r24, 0x20	; 32
     b4c:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     b50:	80 ed       	ldi	r24, 0xD0	; 208
     b52:	97 e0       	ldi	r25, 0x07	; 7
     b54:	0e 94 24 14 	call	0x2848	; 0x2848 <TMRSRVC_delay>
               		LED_clr_pattern( 0b01000000 );//turn the green LED off
     b58:	80 e4       	ldi	r24, 0x40	; 64
     b5a:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b5e:	80 e2       	ldi	r24, 0x20	; 32
     b60:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <LED_clr_pattern>
     b64:	c1 e0       	ldi	r28, 0x01	; 1
     b66:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=1;
			}//end if button 1 state open

		if( btnState2 == TRUE ) 
     b68:	01 30       	cpi	r16, 0x01	; 1
     b6a:	b9 f4       	brne	.+46     	; 0xb9a <WaitButton+0x96>
		{
			LCD_printf( "SW2: Pushed\n");
     b6c:	8c e0       	ldi	r24, 0x0C	; 12
     b6e:	91 e0       	ldi	r25, 0x01	; 1
     b70:	0e 94 aa 2a 	call	0x5554	; 0x5554 <puts>
			TMRSRVC_delay(1000);//wait 1 s
     b74:	88 ee       	ldi	r24, 0xE8	; 232
     b76:	93 e0       	ldi	r25, 0x03	; 3
     b78:	0e 94 24 14 	call	0x2848	; 0x2848 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     b7c:	80 e4       	ldi	r24, 0x40	; 64
     b7e:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     b82:	80 ed       	ldi	r24, 0xD0	; 208
     b84:	97 e0       	ldi	r25, 0x07	; 7
     b86:	0e 94 24 14 	call	0x2848	; 0x2848 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     b8a:	80 e4       	ldi	r24, 0x40	; 64
     b8c:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b90:	80 e2       	ldi	r24, 0x20	; 32
     b92:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <LED_clr_pattern>
     b96:	c2 e0       	ldi	r28, 0x02	; 2
     b98:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=2;
		}//end if btn 2 open

		if ( btnState3 == TRUE ) 
     b9a:	81 e0       	ldi	r24, 0x01	; 1
     b9c:	f8 16       	cp	r15, r24
     b9e:	d1 f4       	brne	.+52     	; 0xbd4 <WaitButton+0xd0>
		{
			LCD_printf( "SW3: Pushed\n");
     ba0:	88 e1       	ldi	r24, 0x18	; 24
     ba2:	91 e0       	ldi	r25, 0x01	; 1
     ba4:	0e 94 aa 2a 	call	0x5554	; 0x5554 <puts>
			TMRSRVC_delay(1000);//wait 1 s
     ba8:	88 ee       	ldi	r24, 0xE8	; 232
     baa:	93 e0       	ldi	r25, 0x03	; 3
     bac:	0e 94 24 14 	call	0x2848	; 0x2848 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     bb0:	80 e4       	ldi	r24, 0x40	; 64
     bb2:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <LED_set_pattern>
                	LED_set_pattern( 0b00100000 );//turn the red LED on
     bb6:	80 e2       	ldi	r24, 0x20	; 32
     bb8:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     bbc:	80 ed       	ldi	r24, 0xD0	; 208
     bbe:	97 e0       	ldi	r25, 0x07	; 7
     bc0:	0e 94 24 14 	call	0x2848	; 0x2848 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     bc4:	80 e4       	ldi	r24, 0x40	; 64
     bc6:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     bca:	80 e2       	ldi	r24, 0x20	; 32
     bcc:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <LED_clr_pattern>
     bd0:	c3 e0       	ldi	r28, 0x03	; 3
     bd2:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=3;
		}//end if btn 3 open
            	LCD_clear();
     bd4:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <LCD_clear>
		return rtnValue;
	}//end AT while

}//end the WaitButton() function
     bd8:	ce 01       	movw	r24, r28
     bda:	df 91       	pop	r29
     bdc:	cf 91       	pop	r28
     bde:	1f 91       	pop	r17
     be0:	0f 91       	pop	r16
     be2:	ff 90       	pop	r15
     be4:	08 95       	ret

00000be6 <prefilter>:
* Overview:			This appies a prefilter to the IR data by
*					storing the history of measurements within the
*					an arrayand calculating a running average
********************************************************************/
void prefilter(char reset)
{	
     be6:	2f 92       	push	r2
     be8:	3f 92       	push	r3
     bea:	4f 92       	push	r4
     bec:	5f 92       	push	r5
     bee:	6f 92       	push	r6
     bf0:	7f 92       	push	r7
     bf2:	8f 92       	push	r8
     bf4:	9f 92       	push	r9
     bf6:	af 92       	push	r10
     bf8:	bf 92       	push	r11
     bfa:	cf 92       	push	r12
     bfc:	df 92       	push	r13
     bfe:	ef 92       	push	r14
     c00:	ff 92       	push	r15
     c02:	0f 93       	push	r16
     c04:	1f 93       	push	r17
     c06:	df 93       	push	r29
     c08:	cf 93       	push	r28
     c0a:	cd b7       	in	r28, 0x3d	; 61
     c0c:	de b7       	in	r29, 0x3e	; 62
     c0e:	64 97       	sbiw	r28, 0x14	; 20
     c10:	0f b6       	in	r0, 0x3f	; 63
     c12:	f8 94       	cli
     c14:	de bf       	out	0x3e, r29	; 62
     c16:	0f be       	out	0x3f, r0	; 63
     c18:	cd bf       	out	0x3d, r28	; 61
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
     c1a:	88 23       	and	r24, r24
     c1c:	39 f5       	brne	.+78     	; 0xc6c <prefilter+0x86>
     c1e:	83 eb       	ldi	r24, 0xB3	; 179
     c20:	92 e0       	ldi	r25, 0x02	; 2
     c22:	9c 8b       	std	Y+20, r25	; 0x14
     c24:	8b 8b       	std	Y+19, r24	; 0x13
     c26:	ab e1       	ldi	r26, 0x1B	; 27
     c28:	b4 e0       	ldi	r27, 0x04	; 4
     c2a:	be 83       	std	Y+6, r27	; 0x06
     c2c:	ad 83       	std	Y+5, r26	; 0x05
     c2e:	e3 ea       	ldi	r30, 0xA3	; 163
     c30:	f3 e0       	ldi	r31, 0x03	; 3
     c32:	fc 83       	std	Y+4, r31	; 0x04
     c34:	eb 83       	std	Y+3, r30	; 0x03
     c36:	8b e2       	ldi	r24, 0x2B	; 43
     c38:	93 e0       	ldi	r25, 0x03	; 3
     c3a:	9a 83       	std	Y+2, r25	; 0x02
     c3c:	89 83       	std	Y+1, r24	; 0x01
     c3e:	0f 2e       	mov	r0, r31
     c40:	f0 e0       	ldi	r31, 0x00	; 0
     c42:	2f 2e       	mov	r2, r31
     c44:	f0 e0       	ldi	r31, 0x00	; 0
     c46:	3f 2e       	mov	r3, r31
     c48:	f0 e0       	ldi	r31, 0x00	; 0
     c4a:	4f 2e       	mov	r4, r31
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	5f 2e       	mov	r5, r31
     c50:	f0 2d       	mov	r31, r0
     c52:	2f 86       	std	Y+15, r2	; 0x0f
     c54:	38 8a       	std	Y+16, r3	; 0x10
     c56:	49 8a       	std	Y+17, r4	; 0x11
     c58:	5a 8a       	std	Y+18, r5	; 0x12
     c5a:	2b 86       	std	Y+11, r2	; 0x0b
     c5c:	3c 86       	std	Y+12, r3	; 0x0c
     c5e:	4d 86       	std	Y+13, r4	; 0x0d
     c60:	5e 86       	std	Y+14, r5	; 0x0e
     c62:	2f 82       	std	Y+7, r2	; 0x07
     c64:	38 86       	std	Y+8, r3	; 0x08
     c66:	49 86       	std	Y+9, r4	; 0x09
     c68:	5a 86       	std	Y+10, r5	; 0x0a
     c6a:	43 c0       	rjmp	.+134    	; 0xcf2 <prefilter+0x10c>
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     c6c:	a0 90 ae 01 	lds	r10, 0x01AE
     c70:	b0 90 af 01 	lds	r11, 0x01AF
     c74:	c0 90 b0 01 	lds	r12, 0x01B0
     c78:	d0 90 b1 01 	lds	r13, 0x01B1
			rtIR_old[i] = rtIR;
     c7c:	e0 90 b2 01 	lds	r14, 0x01B2
     c80:	f0 90 b3 01 	lds	r15, 0x01B3
     c84:	00 91 b4 01 	lds	r16, 0x01B4
     c88:	10 91 b5 01 	lds	r17, 0x01B5
			ftIR_old[i] = ftIR;
     c8c:	20 90 b6 01 	lds	r2, 0x01B6
     c90:	30 90 b7 01 	lds	r3, 0x01B7
     c94:	40 90 b8 01 	lds	r4, 0x01B8
     c98:	50 90 b9 01 	lds	r5, 0x01B9
			bkIR_old[i] = bkIR;
     c9c:	20 91 ba 01 	lds	r18, 0x01BA
     ca0:	30 91 bb 01 	lds	r19, 0x01BB
     ca4:	40 91 bc 01 	lds	r20, 0x01BC
     ca8:	50 91 bd 01 	lds	r21, 0x01BD
     cac:	80 e0       	ldi	r24, 0x00	; 0
     cae:	90 e0       	ldi	r25, 0x00	; 0
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     cb0:	fc 01       	movw	r30, r24
     cb2:	ed 5b       	subi	r30, 0xBD	; 189
     cb4:	fd 4f       	sbci	r31, 0xFD	; 253
     cb6:	a0 82       	st	Z, r10
     cb8:	b1 82       	std	Z+1, r11	; 0x01
     cba:	c2 82       	std	Z+2, r12	; 0x02
     cbc:	d3 82       	std	Z+3, r13	; 0x03
			rtIR_old[i] = rtIR;
     cbe:	fc 01       	movw	r30, r24
     cc0:	e5 55       	subi	r30, 0x55	; 85
     cc2:	fc 4f       	sbci	r31, 0xFC	; 252
     cc4:	e0 82       	st	Z, r14
     cc6:	f1 82       	std	Z+1, r15	; 0x01
     cc8:	02 83       	std	Z+2, r16	; 0x02
     cca:	13 83       	std	Z+3, r17	; 0x03
			ftIR_old[i] = ftIR;
     ccc:	fc 01       	movw	r30, r24
     cce:	ed 5c       	subi	r30, 0xCD	; 205
     cd0:	fc 4f       	sbci	r31, 0xFC	; 252
     cd2:	20 82       	st	Z, r2
     cd4:	31 82       	std	Z+1, r3	; 0x01
     cd6:	42 82       	std	Z+2, r4	; 0x02
     cd8:	53 82       	std	Z+3, r5	; 0x03
			bkIR_old[i] = bkIR;
     cda:	fc 01       	movw	r30, r24
     cdc:	e5 54       	subi	r30, 0x45	; 69
     cde:	fd 4f       	sbci	r31, 0xFD	; 253
     ce0:	20 83       	st	Z, r18
     ce2:	31 83       	std	Z+1, r19	; 0x01
     ce4:	42 83       	std	Z+2, r20	; 0x02
     ce6:	53 83       	std	Z+3, r21	; 0x03
     ce8:	04 96       	adiw	r24, 0x04	; 4
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
     cea:	88 37       	cpi	r24, 0x78	; 120
     cec:	91 05       	cpc	r25, r1
     cee:	01 f7       	brne	.-64     	; 0xcb0 <prefilter+0xca>
     cf0:	96 cf       	rjmp	.-212    	; 0xc1e <prefilter+0x38>
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
	{
		j = i - 1;
		ltIR_old[i] = ltIR_old[j];
     cf2:	ab 89       	ldd	r26, Y+19	; 0x13
     cf4:	bc 89       	ldd	r27, Y+20	; 0x14
     cf6:	2d 91       	ld	r18, X+
     cf8:	3d 91       	ld	r19, X+
     cfa:	4d 91       	ld	r20, X+
     cfc:	5c 91       	ld	r21, X
     cfe:	13 97       	sbiw	r26, 0x03	; 3
     d00:	fd 01       	movw	r30, r26
     d02:	24 83       	std	Z+4, r18	; 0x04
     d04:	35 83       	std	Z+5, r19	; 0x05
     d06:	46 83       	std	Z+6, r20	; 0x06
     d08:	57 83       	std	Z+7, r21	; 0x07
		rtIR_old[i] = rtIR_old[j];
     d0a:	ad 81       	ldd	r26, Y+5	; 0x05
     d0c:	be 81       	ldd	r27, Y+6	; 0x06
     d0e:	ed 90       	ld	r14, X+
     d10:	fd 90       	ld	r15, X+
     d12:	0d 91       	ld	r16, X+
     d14:	1c 91       	ld	r17, X
     d16:	13 97       	sbiw	r26, 0x03	; 3
     d18:	fd 01       	movw	r30, r26
     d1a:	e4 82       	std	Z+4, r14	; 0x04
     d1c:	f5 82       	std	Z+5, r15	; 0x05
     d1e:	06 83       	std	Z+6, r16	; 0x06
     d20:	17 83       	std	Z+7, r17	; 0x07
		ftIR_old[i] = ftIR_old[j];
     d22:	ab 81       	ldd	r26, Y+3	; 0x03
     d24:	bc 81       	ldd	r27, Y+4	; 0x04
     d26:	ad 90       	ld	r10, X+
     d28:	bd 90       	ld	r11, X+
     d2a:	cd 90       	ld	r12, X+
     d2c:	dc 90       	ld	r13, X
     d2e:	13 97       	sbiw	r26, 0x03	; 3
     d30:	fd 01       	movw	r30, r26
     d32:	a4 82       	std	Z+4, r10	; 0x04
     d34:	b5 82       	std	Z+5, r11	; 0x05
     d36:	c6 82       	std	Z+6, r12	; 0x06
     d38:	d7 82       	std	Z+7, r13	; 0x07
		bkIR_old[i] = bkIR_old[j];
     d3a:	a9 81       	ldd	r26, Y+1	; 0x01
     d3c:	ba 81       	ldd	r27, Y+2	; 0x02
     d3e:	6d 90       	ld	r6, X+
     d40:	7d 90       	ld	r7, X+
     d42:	8d 90       	ld	r8, X+
     d44:	9c 90       	ld	r9, X
     d46:	13 97       	sbiw	r26, 0x03	; 3
     d48:	fd 01       	movw	r30, r26
     d4a:	64 82       	std	Z+4, r6	; 0x04
     d4c:	75 82       	std	Z+5, r7	; 0x05
     d4e:	86 82       	std	Z+6, r8	; 0x06
     d50:	97 82       	std	Z+7, r9	; 0x07
		ltIR_new += ltIR_old[i];
     d52:	c2 01       	movw	r24, r4
     d54:	b1 01       	movw	r22, r2
     d56:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
     d5a:	1b 01       	movw	r2, r22
     d5c:	2c 01       	movw	r4, r24
		rtIR_new += rtIR_old[i];
     d5e:	6f 85       	ldd	r22, Y+15	; 0x0f
     d60:	78 89       	ldd	r23, Y+16	; 0x10
     d62:	89 89       	ldd	r24, Y+17	; 0x11
     d64:	9a 89       	ldd	r25, Y+18	; 0x12
     d66:	a8 01       	movw	r20, r16
     d68:	97 01       	movw	r18, r14
     d6a:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
     d6e:	6f 87       	std	Y+15, r22	; 0x0f
     d70:	78 8b       	std	Y+16, r23	; 0x10
     d72:	89 8b       	std	Y+17, r24	; 0x11
     d74:	9a 8b       	std	Y+18, r25	; 0x12
		ftIR_new += ftIR_old[i];
     d76:	6b 85       	ldd	r22, Y+11	; 0x0b
     d78:	7c 85       	ldd	r23, Y+12	; 0x0c
     d7a:	8d 85       	ldd	r24, Y+13	; 0x0d
     d7c:	9e 85       	ldd	r25, Y+14	; 0x0e
     d7e:	a6 01       	movw	r20, r12
     d80:	95 01       	movw	r18, r10
     d82:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
     d86:	6b 87       	std	Y+11, r22	; 0x0b
     d88:	7c 87       	std	Y+12, r23	; 0x0c
     d8a:	8d 87       	std	Y+13, r24	; 0x0d
     d8c:	9e 87       	std	Y+14, r25	; 0x0e
		bkIR_new += bkIR_old[i];
     d8e:	6f 81       	ldd	r22, Y+7	; 0x07
     d90:	78 85       	ldd	r23, Y+8	; 0x08
     d92:	89 85       	ldd	r24, Y+9	; 0x09
     d94:	9a 85       	ldd	r25, Y+10	; 0x0a
     d96:	a4 01       	movw	r20, r8
     d98:	93 01       	movw	r18, r6
     d9a:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
     d9e:	6f 83       	std	Y+7, r22	; 0x07
     da0:	78 87       	std	Y+8, r23	; 0x08
     da2:	89 87       	std	Y+9, r24	; 0x09
     da4:	9a 87       	std	Y+10, r25	; 0x0a
     da6:	8b 89       	ldd	r24, Y+19	; 0x13
     da8:	9c 89       	ldd	r25, Y+20	; 0x14
     daa:	04 97       	sbiw	r24, 0x04	; 4
     dac:	9c 8b       	std	Y+20, r25	; 0x14
     dae:	8b 8b       	std	Y+19, r24	; 0x13
     db0:	ad 81       	ldd	r26, Y+5	; 0x05
     db2:	be 81       	ldd	r27, Y+6	; 0x06
     db4:	14 97       	sbiw	r26, 0x04	; 4
     db6:	be 83       	std	Y+6, r27	; 0x06
     db8:	ad 83       	std	Y+5, r26	; 0x05
     dba:	eb 81       	ldd	r30, Y+3	; 0x03
     dbc:	fc 81       	ldd	r31, Y+4	; 0x04
     dbe:	34 97       	sbiw	r30, 0x04	; 4
     dc0:	fc 83       	std	Y+4, r31	; 0x04
     dc2:	eb 83       	std	Y+3, r30	; 0x03
     dc4:	89 81       	ldd	r24, Y+1	; 0x01
     dc6:	9a 81       	ldd	r25, Y+2	; 0x02
     dc8:	04 97       	sbiw	r24, 0x04	; 4
     dca:	9a 83       	std	Y+2, r25	; 0x02
     dcc:	89 83       	std	Y+1, r24	; 0x01
	float ftIR_new = 0;
	float bkIR_new = 0;
	
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
     dce:	ab 89       	ldd	r26, Y+19	; 0x13
     dd0:	bc 89       	ldd	r27, Y+20	; 0x14
     dd2:	ab 53       	subi	r26, 0x3B	; 59
     dd4:	b2 40       	sbci	r27, 0x02	; 2
     dd6:	09 f0       	breq	.+2      	; 0xdda <prefilter+0x1f4>
     dd8:	8c cf       	rjmp	.-232    	; 0xcf2 <prefilter+0x10c>
		bkIR_new += bkIR_old[i];
	}
	
	// Set the current reading to the first element 
	// within the historical array
	ltIR_old[0] = ltIR;
     dda:	80 91 ae 01 	lds	r24, 0x01AE
     dde:	90 91 af 01 	lds	r25, 0x01AF
     de2:	a0 91 b0 01 	lds	r26, 0x01B0
     de6:	b0 91 b1 01 	lds	r27, 0x01B1
     dea:	eb 89       	ldd	r30, Y+19	; 0x13
     dec:	fc 89       	ldd	r31, Y+20	; 0x14
     dee:	80 87       	std	Z+8, r24	; 0x08
     df0:	91 87       	std	Z+9, r25	; 0x09
     df2:	a2 87       	std	Z+10, r26	; 0x0a
     df4:	b3 87       	std	Z+11, r27	; 0x0b
	rtIR_old[0] = rtIR;
     df6:	80 91 b2 01 	lds	r24, 0x01B2
     dfa:	90 91 b3 01 	lds	r25, 0x01B3
     dfe:	a0 91 b4 01 	lds	r26, 0x01B4
     e02:	b0 91 b5 01 	lds	r27, 0x01B5
     e06:	80 93 ab 03 	sts	0x03AB, r24
     e0a:	90 93 ac 03 	sts	0x03AC, r25
     e0e:	a0 93 ad 03 	sts	0x03AD, r26
     e12:	b0 93 ae 03 	sts	0x03AE, r27
	ftIR_old[0] = ftIR;
     e16:	80 91 b6 01 	lds	r24, 0x01B6
     e1a:	90 91 b7 01 	lds	r25, 0x01B7
     e1e:	a0 91 b8 01 	lds	r26, 0x01B8
     e22:	b0 91 b9 01 	lds	r27, 0x01B9
     e26:	80 93 33 03 	sts	0x0333, r24
     e2a:	90 93 34 03 	sts	0x0334, r25
     e2e:	a0 93 35 03 	sts	0x0335, r26
     e32:	b0 93 36 03 	sts	0x0336, r27
	bkIR_old[0] = bkIR;
     e36:	80 91 ba 01 	lds	r24, 0x01BA
     e3a:	90 91 bb 01 	lds	r25, 0x01BB
     e3e:	a0 91 bc 01 	lds	r26, 0x01BC
     e42:	b0 91 bd 01 	lds	r27, 0x01BD
     e46:	80 93 bb 02 	sts	0x02BB, r24
     e4a:	90 93 bc 02 	sts	0x02BC, r25
     e4e:	a0 93 bd 02 	sts	0x02BD, r26
     e52:	b0 93 be 02 	sts	0x02BE, r27
	
	// Calculate the average value within the array
	// and said that as the new current measurement
	ltIR = ltIR_new/PREFILTER_SIZE;
     e56:	c2 01       	movw	r24, r4
     e58:	b1 01       	movw	r22, r2
     e5a:	20 e0       	ldi	r18, 0x00	; 0
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	40 ef       	ldi	r20, 0xF0	; 240
     e60:	51 e4       	ldi	r21, 0x41	; 65
     e62:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
     e66:	60 93 ae 01 	sts	0x01AE, r22
     e6a:	70 93 af 01 	sts	0x01AF, r23
     e6e:	80 93 b0 01 	sts	0x01B0, r24
     e72:	90 93 b1 01 	sts	0x01B1, r25
	rtIR = rtIR_new/PREFILTER_SIZE;
     e76:	6f 85       	ldd	r22, Y+15	; 0x0f
     e78:	78 89       	ldd	r23, Y+16	; 0x10
     e7a:	89 89       	ldd	r24, Y+17	; 0x11
     e7c:	9a 89       	ldd	r25, Y+18	; 0x12
     e7e:	20 e0       	ldi	r18, 0x00	; 0
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	40 ef       	ldi	r20, 0xF0	; 240
     e84:	51 e4       	ldi	r21, 0x41	; 65
     e86:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
     e8a:	60 93 b2 01 	sts	0x01B2, r22
     e8e:	70 93 b3 01 	sts	0x01B3, r23
     e92:	80 93 b4 01 	sts	0x01B4, r24
     e96:	90 93 b5 01 	sts	0x01B5, r25
	ftIR = ftIR_new/PREFILTER_SIZE;
     e9a:	6b 85       	ldd	r22, Y+11	; 0x0b
     e9c:	7c 85       	ldd	r23, Y+12	; 0x0c
     e9e:	8d 85       	ldd	r24, Y+13	; 0x0d
     ea0:	9e 85       	ldd	r25, Y+14	; 0x0e
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	40 ef       	ldi	r20, 0xF0	; 240
     ea8:	51 e4       	ldi	r21, 0x41	; 65
     eaa:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
     eae:	60 93 b6 01 	sts	0x01B6, r22
     eb2:	70 93 b7 01 	sts	0x01B7, r23
     eb6:	80 93 b8 01 	sts	0x01B8, r24
     eba:	90 93 b9 01 	sts	0x01B9, r25
	bkIR = bkIR_new/PREFILTER_SIZE;
     ebe:	6f 81       	ldd	r22, Y+7	; 0x07
     ec0:	78 85       	ldd	r23, Y+8	; 0x08
     ec2:	89 85       	ldd	r24, Y+9	; 0x09
     ec4:	9a 85       	ldd	r25, Y+10	; 0x0a
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	40 ef       	ldi	r20, 0xF0	; 240
     ecc:	51 e4       	ldi	r21, 0x41	; 65
     ece:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
     ed2:	60 93 ba 01 	sts	0x01BA, r22
     ed6:	70 93 bb 01 	sts	0x01BB, r23
     eda:	80 93 bc 01 	sts	0x01BC, r24
     ede:	90 93 bd 01 	sts	0x01BD, r25
}
     ee2:	64 96       	adiw	r28, 0x14	; 20
     ee4:	0f b6       	in	r0, 0x3f	; 63
     ee6:	f8 94       	cli
     ee8:	de bf       	out	0x3e, r29	; 62
     eea:	0f be       	out	0x3f, r0	; 63
     eec:	cd bf       	out	0x3d, r28	; 61
     eee:	cf 91       	pop	r28
     ef0:	df 91       	pop	r29
     ef2:	1f 91       	pop	r17
     ef4:	0f 91       	pop	r16
     ef6:	ff 90       	pop	r15
     ef8:	ef 90       	pop	r14
     efa:	df 90       	pop	r13
     efc:	cf 90       	pop	r12
     efe:	bf 90       	pop	r11
     f00:	af 90       	pop	r10
     f02:	9f 90       	pop	r9
     f04:	8f 90       	pop	r8
     f06:	7f 90       	pop	r7
     f08:	6f 90       	pop	r6
     f0a:	5f 90       	pop	r5
     f0c:	4f 90       	pop	r4
     f0e:	3f 90       	pop	r3
     f10:	2f 90       	pop	r2
     f12:	08 95       	ret

00000f14 <pidController>:
* Output Return:	float
* Overview:			This computes the control effort using a PID 
*					controller approach
********************************************************************/
float pidController(float error, char reset )
{	
     f14:	6f 92       	push	r6
     f16:	7f 92       	push	r7
     f18:	8f 92       	push	r8
     f1a:	9f 92       	push	r9
     f1c:	af 92       	push	r10
     f1e:	bf 92       	push	r11
     f20:	cf 92       	push	r12
     f22:	df 92       	push	r13
     f24:	ef 92       	push	r14
     f26:	ff 92       	push	r15
     f28:	0f 93       	push	r16
     f2a:	1f 93       	push	r17
     f2c:	3b 01       	movw	r6, r22
     f2e:	4c 01       	movw	r8, r24
	// Reset the integrator error if specified
	if(reset){
     f30:	44 23       	and	r20, r20
     f32:	61 f0       	breq	.+24     	; 0xf4c <pidController+0x38>
		Ierror = 0;
     f34:	80 e0       	ldi	r24, 0x00	; 0
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	a0 e0       	ldi	r26, 0x00	; 0
     f3a:	b0 e0       	ldi	r27, 0x00	; 0
     f3c:	80 93 a6 01 	sts	0x01A6, r24
     f40:	90 93 a7 01 	sts	0x01A7, r25
     f44:	a0 93 a8 01 	sts	0x01A8, r26
     f48:	b0 93 a9 01 	sts	0x01A9, r27
	}
	// At the current error to the running sum
	Ierror += error;
     f4c:	c4 01       	movw	r24, r8
     f4e:	b3 01       	movw	r22, r6
     f50:	20 91 a6 01 	lds	r18, 0x01A6
     f54:	30 91 a7 01 	lds	r19, 0x01A7
     f58:	40 91 a8 01 	lds	r20, 0x01A8
     f5c:	50 91 a9 01 	lds	r21, 0x01A9
     f60:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
     f64:	5b 01       	movw	r10, r22
     f66:	6c 01       	movw	r12, r24
     f68:	60 93 a6 01 	sts	0x01A6, r22
     f6c:	70 93 a7 01 	sts	0x01A7, r23
     f70:	80 93 a8 01 	sts	0x01A8, r24
     f74:	90 93 a9 01 	sts	0x01A9, r25
     f78:	c4 01       	movw	r24, r8
     f7a:	b3 01       	movw	r22, r6
     f7c:	20 e0       	ldi	r18, 0x00	; 0
     f7e:	30 e0       	ldi	r19, 0x00	; 0
     f80:	40 e8       	ldi	r20, 0x80	; 128
     f82:	50 e4       	ldi	r21, 0x40	; 64
     f84:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
     f88:	7b 01       	movw	r14, r22
     f8a:	8c 01       	movw	r16, r24
     f8c:	c4 01       	movw	r24, r8
     f8e:	b3 01       	movw	r22, r6
     f90:	20 91 aa 01 	lds	r18, 0x01AA
     f94:	30 91 ab 01 	lds	r19, 0x01AB
     f98:	40 91 ac 01 	lds	r20, 0x01AC
     f9c:	50 91 ad 01 	lds	r21, 0x01AD
     fa0:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
     fa4:	20 e0       	ldi	r18, 0x00	; 0
     fa6:	30 e0       	ldi	r19, 0x00	; 0
     fa8:	40 e0       	ldi	r20, 0x00	; 0
     faa:	51 e4       	ldi	r21, 0x41	; 65
     fac:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
     fb0:	9b 01       	movw	r18, r22
     fb2:	ac 01       	movw	r20, r24
     fb4:	c8 01       	movw	r24, r16
     fb6:	b7 01       	movw	r22, r14
     fb8:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
     fbc:	7b 01       	movw	r14, r22
     fbe:	8c 01       	movw	r16, r24
     fc0:	c6 01       	movw	r24, r12
     fc2:	b5 01       	movw	r22, r10
     fc4:	20 e0       	ldi	r18, 0x00	; 0
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	40 e0       	ldi	r20, 0x00	; 0
     fca:	50 e0       	ldi	r21, 0x00	; 0
     fcc:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
     fd0:	9b 01       	movw	r18, r22
     fd2:	ac 01       	movw	r20, r24
     fd4:	c8 01       	movw	r24, r16
     fd6:	b7 01       	movw	r22, r14
     fd8:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
	
	// Use the PID controller approach to calculate the effort
	float effort = (KP*error) + (KD*(error-error_old)) + (KI*Ierror);
	
	return effort;	
}
     fdc:	1f 91       	pop	r17
     fde:	0f 91       	pop	r16
     fe0:	ff 90       	pop	r15
     fe2:	ef 90       	pop	r14
     fe4:	df 90       	pop	r13
     fe6:	cf 90       	pop	r12
     fe8:	bf 90       	pop	r11
     fea:	af 90       	pop	r10
     fec:	9f 90       	pop	r9
     fee:	8f 90       	pop	r8
     ff0:	7f 90       	pop	r7
     ff2:	6f 90       	pop	r6
     ff4:	08 95       	ret

00000ff6 <check_threshhold>:
* Output Return:	char
* Overview:			This check the IR values to thresholds
********************************************************************/

char check_threshhold(float F, float B, float L, float R)
{
     ff6:	2f 92       	push	r2
     ff8:	6f 92       	push	r6
     ffa:	7f 92       	push	r7
     ffc:	8f 92       	push	r8
     ffe:	9f 92       	push	r9
    1000:	af 92       	push	r10
    1002:	bf 92       	push	r11
    1004:	cf 92       	push	r12
    1006:	df 92       	push	r13
    1008:	ef 92       	push	r14
    100a:	ff 92       	push	r15
    100c:	0f 93       	push	r16
    100e:	1f 93       	push	r17
    1010:	df 93       	push	r29
    1012:	cf 93       	push	r28
    1014:	00 d0       	rcall	.+0      	; 0x1016 <check_threshhold+0x20>
    1016:	00 d0       	rcall	.+0      	; 0x1018 <check_threshhold+0x22>
    1018:	cd b7       	in	r28, 0x3d	; 61
    101a:	de b7       	in	r29, 0x3e	; 62
    101c:	69 83       	std	Y+1, r22	; 0x01
    101e:	7a 83       	std	Y+2, r23	; 0x02
    1020:	8b 83       	std	Y+3, r24	; 0x03
    1022:	9c 83       	std	Y+4, r25	; 0x04
	char check = 0;
	check += 0b00000001*(ftIR < F);
    1024:	60 90 b6 01 	lds	r6, 0x01B6
    1028:	70 90 b7 01 	lds	r7, 0x01B7
    102c:	80 90 b8 01 	lds	r8, 0x01B8
    1030:	90 90 b9 01 	lds	r9, 0x01B9
	check += 0b00000010*(bkIR < B);
    1034:	60 91 ba 01 	lds	r22, 0x01BA
    1038:	70 91 bb 01 	lds	r23, 0x01BB
    103c:	80 91 bc 01 	lds	r24, 0x01BC
    1040:	90 91 bd 01 	lds	r25, 0x01BD
    1044:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    1048:	28 2e       	mov	r2, r24
    104a:	22 1c       	adc	r2, r2
    104c:	22 24       	eor	r2, r2
    104e:	22 1c       	adc	r2, r2
    1050:	22 0c       	add	r2, r2
	check += 0b00000100*(ltIR < L);
    1052:	60 91 ae 01 	lds	r22, 0x01AE
    1056:	70 91 af 01 	lds	r23, 0x01AF
    105a:	80 91 b0 01 	lds	r24, 0x01B0
    105e:	90 91 b1 01 	lds	r25, 0x01B1
    1062:	a8 01       	movw	r20, r16
    1064:	97 01       	movw	r18, r14
    1066:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    106a:	08 2f       	mov	r16, r24
    106c:	00 1f       	adc	r16, r16
    106e:	00 27       	eor	r16, r16
    1070:	00 1f       	adc	r16, r16
    1072:	00 0f       	add	r16, r16
    1074:	00 0f       	add	r16, r16
	check += 0b00001000*(rtIR < R);
    1076:	60 91 b2 01 	lds	r22, 0x01B2
    107a:	70 91 b3 01 	lds	r23, 0x01B3
    107e:	80 91 b4 01 	lds	r24, 0x01B4
    1082:	90 91 b5 01 	lds	r25, 0x01B5
    1086:	a6 01       	movw	r20, r12
    1088:	95 01       	movw	r18, r10
    108a:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    108e:	18 2f       	mov	r17, r24
    1090:	11 1f       	adc	r17, r17
    1092:	11 27       	eor	r17, r17
    1094:	11 1f       	adc	r17, r17
    1096:	11 0f       	add	r17, r17
    1098:	11 0f       	add	r17, r17
    109a:	11 0f       	add	r17, r17

char check_threshhold(float F, float B, float L, float R)
{
	char check = 0;
	check += 0b00000001*(ftIR < F);
	check += 0b00000010*(bkIR < B);
    109c:	ff 24       	eor	r15, r15
    109e:	c4 01       	movw	r24, r8
    10a0:	b3 01       	movw	r22, r6
    10a2:	29 81       	ldd	r18, Y+1	; 0x01
    10a4:	3a 81       	ldd	r19, Y+2	; 0x02
    10a6:	4b 81       	ldd	r20, Y+3	; 0x03
    10a8:	5c 81       	ldd	r21, Y+4	; 0x04
    10aa:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    10ae:	88 23       	and	r24, r24
    10b0:	14 f4       	brge	.+4      	; 0x10b6 <check_threshhold+0xc0>
    10b2:	ff 24       	eor	r15, r15
    10b4:	f3 94       	inc	r15
    10b6:	2f 0c       	add	r2, r15
	check += 0b00000100*(ltIR < L);
    10b8:	20 0e       	add	r2, r16
	check += 0b00001000*(rtIR < R);
	return check;	
}
    10ba:	82 2d       	mov	r24, r2
    10bc:	81 0f       	add	r24, r17
    10be:	0f 90       	pop	r0
    10c0:	0f 90       	pop	r0
    10c2:	0f 90       	pop	r0
    10c4:	0f 90       	pop	r0
    10c6:	cf 91       	pop	r28
    10c8:	df 91       	pop	r29
    10ca:	1f 91       	pop	r17
    10cc:	0f 91       	pop	r16
    10ce:	ff 90       	pop	r15
    10d0:	ef 90       	pop	r14
    10d2:	df 90       	pop	r13
    10d4:	cf 90       	pop	r12
    10d6:	bf 90       	pop	r11
    10d8:	af 90       	pop	r10
    10da:	9f 90       	pop	r9
    10dc:	8f 90       	pop	r8
    10de:	7f 90       	pop	r7
    10e0:	6f 90       	pop	r6
    10e2:	2f 90       	pop	r2
    10e4:	08 95       	ret

000010e6 <move_arc_stwt>:
		// bool stepper_FWD = arcLength >= 0;
		// STEPPER_move_stwt( STEPPER_BOTH, 
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk, // Left
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk); // Right
	// }
}
    10e6:	08 95       	ret

000010e8 <checkLightSensor>:
*					sensors values sequentially
********************************************************************/
void checkLightSensor( void )
{
	// Update both light sensor variables
	rightLightVolt = getRightLight();
    10e8:	0e 94 58 05 	call	0xab0	; 0xab0 <getRightLight>
    10ec:	60 93 be 01 	sts	0x01BE, r22
    10f0:	70 93 bf 01 	sts	0x01BF, r23
    10f4:	80 93 c0 01 	sts	0x01C0, r24
    10f8:	90 93 c1 01 	sts	0x01C1, r25
	leftLightVolt = getLeftLight();
    10fc:	0e 94 6d 05 	call	0xada	; 0xada <getLeftLight>
    1100:	60 93 c2 01 	sts	0x01C2, r22
    1104:	70 93 c3 01 	sts	0x01C3, r23
    1108:	80 93 c4 01 	sts	0x01C4, r24
    110c:	90 93 c5 01 	sts	0x01C5, r25
	// LCD_printf("R Voltage: %3.2f\nL Voltage: %3.2f\n\n\n", voltageR, voltageL);
	// TMRSRVC_delay(2000);//wait 2 seconds
	// LCD_clear;
}
    1110:	08 95       	ret

00001112 <checkIR>:
*					finding sensor values sequentially
********************************************************************/
void checkIR( void )
{
	// Update all IR values
	ftIR = getFrontIR();
    1112:	0e 94 ef 04 	call	0x9de	; 0x9de <getFrontIR>
    1116:	60 93 b6 01 	sts	0x01B6, r22
    111a:	70 93 b7 01 	sts	0x01B7, r23
    111e:	80 93 b8 01 	sts	0x01B8, r24
    1122:	90 93 b9 01 	sts	0x01B9, r25
	bkIR = getBackIR();
    1126:	0e 94 cc 04 	call	0x998	; 0x998 <getBackIR>
    112a:	60 93 ba 01 	sts	0x01BA, r22
    112e:	70 93 bb 01 	sts	0x01BB, r23
    1132:	80 93 bc 01 	sts	0x01BC, r24
    1136:	90 93 bd 01 	sts	0x01BD, r25
	ltIR = getLeftIR();
    113a:	0e 94 35 05 	call	0xa6a	; 0xa6a <getLeftIR>
    113e:	60 93 ae 01 	sts	0x01AE, r22
    1142:	70 93 af 01 	sts	0x01AF, r23
    1146:	80 93 b0 01 	sts	0x01B0, r24
    114a:	90 93 b1 01 	sts	0x01B1, r25
	rtIR = getRightIR();
    114e:	0e 94 12 05 	call	0xa24	; 0xa24 <getRightIR>
    1152:	60 93 b2 01 	sts	0x01B2, r22
    1156:	70 93 b3 01 	sts	0x01B3, r23
    115a:	80 93 b4 01 	sts	0x01B4, r24
    115e:	90 93 b5 01 	sts	0x01B5, r25
}
    1162:	08 95       	ret

00001164 <moveAway>:
* Input Variables:	none
* Output Return:	char
* Overview:			Use a comment block like this before functions
********************************************************************/
char moveAway ( void )
{	
    1164:	8f 92       	push	r8
    1166:	af 92       	push	r10
    1168:	bf 92       	push	r11
    116a:	cf 92       	push	r12
    116c:	df 92       	push	r13
    116e:	ef 92       	push	r14
    1170:	ff 92       	push	r15
    1172:	0f 93       	push	r16
    1174:	1f 93       	push	r17
    1176:	cf 93       	push	r28
    1178:	df 93       	push	r29
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
	float moveX = rtIR - ltIR;
    117a:	a0 90 b2 01 	lds	r10, 0x01B2
    117e:	b0 90 b3 01 	lds	r11, 0x01B3
    1182:	c0 90 b4 01 	lds	r12, 0x01B4
    1186:	d0 90 b5 01 	lds	r13, 0x01B5
    118a:	e0 90 ae 01 	lds	r14, 0x01AE
    118e:	f0 90 af 01 	lds	r15, 0x01AF
    1192:	00 91 b0 01 	lds	r16, 0x01B0
    1196:	10 91 b1 01 	lds	r17, 0x01B1
			// shyRobot = 1;
	// }
	
	// if the object is on either side of the robot
	// rotate the robot appropriately
	if ((rtIR < IR_OBST_R_THRESH)|(ltIR < IR_OBST_L_THRESH))
    119a:	c6 01       	movw	r24, r12
    119c:	b5 01       	movw	r22, r10
    119e:	20 e0       	ldi	r18, 0x00	; 0
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	40 e2       	ldi	r20, 0x20	; 32
    11a4:	51 e4       	ldi	r21, 0x41	; 65
    11a6:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    11aa:	87 fd       	sbrc	r24, 7
    11ac:	0c c0       	rjmp	.+24     	; 0x11c6 <moveAway+0x62>
    11ae:	c8 01       	movw	r24, r16
    11b0:	b7 01       	movw	r22, r14
    11b2:	20 e0       	ldi	r18, 0x00	; 0
    11b4:	30 e0       	ldi	r19, 0x00	; 0
    11b6:	40 e2       	ldi	r20, 0x20	; 32
    11b8:	51 e4       	ldi	r21, 0x41	; 65
    11ba:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    11be:	87 fd       	sbrc	r24, 7
    11c0:	02 c0       	rjmp	.+4      	; 0x11c6 <moveAway+0x62>
    11c2:	80 e0       	ldi	r24, 0x00	; 0
    11c4:	5f c0       	rjmp	.+190    	; 0x1284 <moveAway+0x120>
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
	float moveX = rtIR - ltIR;
    11c6:	c6 01       	movw	r24, r12
    11c8:	b5 01       	movw	r22, r10
    11ca:	a8 01       	movw	r20, r16
    11cc:	97 01       	movw	r18, r14
    11ce:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
    11d2:	7b 01       	movw	r14, r22
    11d4:	8c 01       	movw	r16, r24
	{
			BOOL moveForwardR = ~(moveX <= 0);
			BOOL moveForwardL = ~(moveX > 0);
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    11d6:	0e 94 42 21 	call	0x4284	; 0x4284 <__fixsfsi>
    11da:	6b 01       	movw	r12, r22
    11dc:	77 ff       	sbrs	r23, 7
    11de:	04 c0       	rjmp	.+8      	; 0x11e8 <moveAway+0x84>
    11e0:	d0 94       	com	r13
    11e2:	c1 94       	neg	r12
    11e4:	d1 08       	sbc	r13, r1
    11e6:	d3 94       	inc	r13
    11e8:	2d b7       	in	r18, 0x3d	; 61
    11ea:	3e b7       	in	r19, 0x3e	; 62
    11ec:	29 50       	subi	r18, 0x09	; 9
    11ee:	30 40       	sbci	r19, 0x00	; 0
    11f0:	0f b6       	in	r0, 0x3f	; 63
    11f2:	f8 94       	cli
    11f4:	3e bf       	out	0x3e, r19	; 62
    11f6:	0f be       	out	0x3f, r0	; 63
    11f8:	2d bf       	out	0x3d, r18	; 61
    11fa:	cd b7       	in	r28, 0x3d	; 61
    11fc:	de b7       	in	r29, 0x3e	; 62
    11fe:	21 96       	adiw	r28, 0x01	; 1
    1200:	bb 24       	eor	r11, r11
    1202:	c8 01       	movw	r24, r16
    1204:	b7 01       	movw	r22, r14
    1206:	20 e0       	ldi	r18, 0x00	; 0
    1208:	30 e0       	ldi	r19, 0x00	; 0
    120a:	40 e0       	ldi	r20, 0x00	; 0
    120c:	50 e0       	ldi	r21, 0x00	; 0
    120e:	0e 94 25 22 	call	0x444a	; 0x444a <__gesf2>
    1212:	18 16       	cp	r1, r24
    1214:	14 f4       	brge	.+4      	; 0x121a <moveAway+0xb6>
    1216:	bb 24       	eor	r11, r11
    1218:	b3 94       	inc	r11
    121a:	b0 94       	com	r11
    121c:	88 24       	eor	r8, r8
    121e:	c8 01       	movw	r24, r16
    1220:	b7 01       	movw	r22, r14
    1222:	20 e0       	ldi	r18, 0x00	; 0
    1224:	30 e0       	ldi	r19, 0x00	; 0
    1226:	40 e0       	ldi	r20, 0x00	; 0
    1228:	50 e0       	ldi	r21, 0x00	; 0
    122a:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    122e:	18 16       	cp	r1, r24
    1230:	14 f0       	brlt	.+4      	; 0x1236 <moveAway+0xd2>
    1232:	88 24       	eor	r8, r8
    1234:	83 94       	inc	r8
    1236:	80 94       	com	r8
    1238:	88 ec       	ldi	r24, 0xC8	; 200
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	99 83       	std	Y+1, r25	; 0x01
    123e:	88 83       	st	Y, r24
    1240:	db 82       	std	Y+3, r13	; 0x03
    1242:	ca 82       	std	Y+2, r12	; 0x02
    1244:	82 ec       	ldi	r24, 0xC2	; 194
    1246:	91 e0       	ldi	r25, 0x01	; 1
    1248:	9d 83       	std	Y+5, r25	; 0x05
    124a:	8c 83       	std	Y+4, r24	; 0x04
    124c:	1e 82       	std	Y+6, r1	; 0x06
    124e:	18 86       	std	Y+8, r1	; 0x08
    1250:	1f 82       	std	Y+7, r1	; 0x07
    1252:	81 e0       	ldi	r24, 0x01	; 1
    1254:	62 e0       	ldi	r22, 0x02	; 2
    1256:	4b 2d       	mov	r20, r11
    1258:	28 ec       	ldi	r18, 0xC8	; 200
    125a:	30 e0       	ldi	r19, 0x00	; 0
    125c:	86 01       	movw	r16, r12
    125e:	92 ec       	ldi	r25, 0xC2	; 194
    1260:	e9 2e       	mov	r14, r25
    1262:	91 e0       	ldi	r25, 0x01	; 1
    1264:	f9 2e       	mov	r15, r25
    1266:	cc 24       	eor	r12, r12
    1268:	aa 24       	eor	r10, r10
    126a:	bb 24       	eor	r11, r11
    126c:	0e 94 9b 10 	call	0x2136	; 0x2136 <STEPPER_move>
    1270:	81 e0       	ldi	r24, 0x01	; 1
    1272:	2d b7       	in	r18, 0x3d	; 61
    1274:	3e b7       	in	r19, 0x3e	; 62
    1276:	27 5f       	subi	r18, 0xF7	; 247
    1278:	3f 4f       	sbci	r19, 0xFF	; 255
    127a:	0f b6       	in	r0, 0x3f	; 63
    127c:	f8 94       	cli
    127e:	3e bf       	out	0x3e, r19	; 62
    1280:	0f be       	out	0x3f, r0	; 63
    1282:	2d bf       	out	0x3d, r18	; 61
			// state that fact
			shyRobot = 1;
	}
	
	return shyRobot;
}
    1284:	df 91       	pop	r29
    1286:	cf 91       	pop	r28
    1288:	1f 91       	pop	r17
    128a:	0f 91       	pop	r16
    128c:	ff 90       	pop	r15
    128e:	ef 90       	pop	r14
    1290:	df 90       	pop	r13
    1292:	cf 90       	pop	r12
    1294:	bf 90       	pop	r11
    1296:	af 90       	pop	r10
    1298:	8f 90       	pop	r8
    129a:	08 95       	ret

0000129c <moveBehavior>:
* Output Return:	char
* Overview:		    This is the currrent behavior of the robot
********************************************************************/
char moveBehavior( int behavior)
{
	if(moveAway()){
    129c:	0e 94 b2 08 	call	0x1164	; 0x1164 <moveAway>
    12a0:	88 23       	and	r24, r24
    12a2:	69 f0       	breq	.+26     	; 0x12be <moveBehavior+0x22>
		Ierror = 0;
    12a4:	80 e0       	ldi	r24, 0x00	; 0
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	a0 e0       	ldi	r26, 0x00	; 0
    12aa:	b0 e0       	ldi	r27, 0x00	; 0
    12ac:	80 93 a6 01 	sts	0x01A6, r24
    12b0:	90 93 a7 01 	sts	0x01A7, r25
    12b4:	a0 93 a8 01 	sts	0x01A8, r26
    12b8:	b0 93 a9 01 	sts	0x01A9, r27
    12bc:	81 e0       	ldi	r24, 0x01	; 1
	// if(moveWander()){
		// Ierror = 0;
		// return 4;
	// }
	return 0;	
}
    12be:	08 95       	ret

000012c0 <moveWall>:
* Overview:			This function searches for walls and adjust the 
*					robots differential steering to attempts to
*					follow them
********************************************************************/
char moveWall( void )
{	
    12c0:	5f 92       	push	r5
    12c2:	6f 92       	push	r6
    12c4:	7f 92       	push	r7
    12c6:	8f 92       	push	r8
    12c8:	9f 92       	push	r9
    12ca:	af 92       	push	r10
    12cc:	bf 92       	push	r11
    12ce:	cf 92       	push	r12
    12d0:	df 92       	push	r13
    12d2:	ef 92       	push	r14
    12d4:	ff 92       	push	r15
    12d6:	0f 93       	push	r16
    12d8:	1f 93       	push	r17
	// Check for walls
	BOOL isWall = (ftIR < IR_WALL_F_THRESH)|(bkIR < IR_WALL_B_THRESH)|(rtIR < IR_WALL_R_THRESH)|(ltIR < IR_WALL_L_THRESH);
    12da:	e0 90 ba 01 	lds	r14, 0x01BA
    12de:	f0 90 bb 01 	lds	r15, 0x01BB
    12e2:	00 91 bc 01 	lds	r16, 0x01BC
    12e6:	10 91 bd 01 	lds	r17, 0x01BD
    12ea:	55 24       	eor	r5, r5
    12ec:	c8 01       	movw	r24, r16
    12ee:	b7 01       	movw	r22, r14
    12f0:	20 e0       	ldi	r18, 0x00	; 0
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	40 ef       	ldi	r20, 0xF0	; 240
    12f6:	51 e4       	ldi	r21, 0x41	; 65
    12f8:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    12fc:	88 23       	and	r24, r24
    12fe:	14 f4       	brge	.+4      	; 0x1304 <moveWall+0x44>
    1300:	55 24       	eor	r5, r5
    1302:	53 94       	inc	r5
    1304:	a0 90 b2 01 	lds	r10, 0x01B2
    1308:	b0 90 b3 01 	lds	r11, 0x01B3
    130c:	c0 90 b4 01 	lds	r12, 0x01B4
    1310:	d0 90 b5 01 	lds	r13, 0x01B5
    1314:	60 90 ae 01 	lds	r6, 0x01AE
    1318:	70 90 af 01 	lds	r7, 0x01AF
    131c:	80 90 b0 01 	lds	r8, 0x01B0
    1320:	90 90 b1 01 	lds	r9, 0x01B1
	if(!isWall){	
    1324:	60 91 b6 01 	lds	r22, 0x01B6
    1328:	70 91 b7 01 	lds	r23, 0x01B7
    132c:	80 91 b8 01 	lds	r24, 0x01B8
    1330:	90 91 b9 01 	lds	r25, 0x01B9
    1334:	20 e0       	ldi	r18, 0x00	; 0
    1336:	30 e0       	ldi	r19, 0x00	; 0
    1338:	40 ea       	ldi	r20, 0xA0	; 160
    133a:	51 e4       	ldi	r21, 0x41	; 65
    133c:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    1340:	87 fd       	sbrc	r24, 7
    1342:	18 c0       	rjmp	.+48     	; 0x1374 <moveWall+0xb4>
    1344:	55 20       	and	r5, r5
    1346:	b1 f4       	brne	.+44     	; 0x1374 <moveWall+0xb4>
    1348:	c6 01       	movw	r24, r12
    134a:	b5 01       	movw	r22, r10
    134c:	20 e0       	ldi	r18, 0x00	; 0
    134e:	30 e0       	ldi	r19, 0x00	; 0
    1350:	40 ea       	ldi	r20, 0xA0	; 160
    1352:	51 e4       	ldi	r21, 0x41	; 65
    1354:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    1358:	87 fd       	sbrc	r24, 7
    135a:	0c c0       	rjmp	.+24     	; 0x1374 <moveWall+0xb4>
    135c:	c4 01       	movw	r24, r8
    135e:	b3 01       	movw	r22, r6
    1360:	20 e0       	ldi	r18, 0x00	; 0
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	40 ea       	ldi	r20, 0xA0	; 160
    1366:	51 e4       	ldi	r21, 0x41	; 65
    1368:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    136c:	87 fd       	sbrc	r24, 7
    136e:	02 c0       	rjmp	.+4      	; 0x1374 <moveWall+0xb4>
	
	// debug LCP print statement
	// LCD_clear();
	// LCD_printf("bkIR: %3.2f\nmoveWall\nError: %3f\nEffort: %3f\n", bkIR, error, effort);
	
}
    1370:	80 e0       	ldi	r24, 0x00	; 0
    1372:	09 c1       	rjmp	.+530    	; 0x1586 <moveWall+0x2c6>
	// A variable that contains the logic of which wall is imaginary
	BOOL isLEFT;
	
	// If there is no wall on our right side
	// place an imaginary wall just within the threshold
	if(rtIR>IR_WALL_R_THRESH){
    1374:	c6 01       	movw	r24, r12
    1376:	b5 01       	movw	r22, r10
    1378:	20 e0       	ldi	r18, 0x00	; 0
    137a:	30 e0       	ldi	r19, 0x00	; 0
    137c:	40 ea       	ldi	r20, 0xA0	; 160
    137e:	51 e4       	ldi	r21, 0x41	; 65
    1380:	0e 94 25 22 	call	0x444a	; 0x444a <__gesf2>
    1384:	18 16       	cp	r1, r24
    1386:	64 f4       	brge	.+24     	; 0x13a0 <moveWall+0xe0>
		rtIR = IR_WALL_R_THRESH-15;
    1388:	80 e0       	ldi	r24, 0x00	; 0
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	a0 ea       	ldi	r26, 0xA0	; 160
    138e:	b0 e4       	ldi	r27, 0x40	; 64
    1390:	80 93 b2 01 	sts	0x01B2, r24
    1394:	90 93 b3 01 	sts	0x01B3, r25
    1398:	a0 93 b4 01 	sts	0x01B4, r26
    139c:	b0 93 b5 01 	sts	0x01B5, r27
		isLEFT = 0;
	}
	// If there is no wall on our left side
	// place an imaginary wall just within the threshold
	if(ltIR>IR_WALL_L_THRESH){
    13a0:	c4 01       	movw	r24, r8
    13a2:	b3 01       	movw	r22, r6
    13a4:	20 e0       	ldi	r18, 0x00	; 0
    13a6:	30 e0       	ldi	r19, 0x00	; 0
    13a8:	40 ea       	ldi	r20, 0xA0	; 160
    13aa:	51 e4       	ldi	r21, 0x41	; 65
    13ac:	0e 94 25 22 	call	0x444a	; 0x444a <__gesf2>
    13b0:	18 16       	cp	r1, r24
    13b2:	14 f0       	brlt	.+4      	; 0x13b8 <moveWall+0xf8>
    13b4:	80 e0       	ldi	r24, 0x00	; 0
    13b6:	0d c0       	rjmp	.+26     	; 0x13d2 <moveWall+0x112>
		ltIR = IR_WALL_L_THRESH-15;
    13b8:	80 e0       	ldi	r24, 0x00	; 0
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	a0 ea       	ldi	r26, 0xA0	; 160
    13be:	b0 e4       	ldi	r27, 0x40	; 64
    13c0:	80 93 ae 01 	sts	0x01AE, r24
    13c4:	90 93 af 01 	sts	0x01AF, r25
    13c8:	a0 93 b0 01 	sts	0x01B0, r26
    13cc:	b0 93 b1 01 	sts	0x01B1, r27
    13d0:	81 e0       	ldi	r24, 0x01	; 1
	}
	
	float error;
	
	// Check to see if the wall exists in front of the robot
	if(bkIR < IR_WALL_B_THRESH)
    13d2:	55 20       	and	r5, r5
    13d4:	81 f1       	breq	.+96     	; 0x1436 <moveWall+0x176>
	{
		// if the imaginary wall was on the left side
		// then biased the error so that when the robot encounters
		// an upcoming corner, the robot will turn away from both walls
		if (isLEFT)
    13d6:	88 23       	and	r24, r24
    13d8:	89 f0       	breq	.+34     	; 0x13fc <moveWall+0x13c>
		{
			error = rtIR - (ltIR + bkIR*bkIR);
    13da:	c8 01       	movw	r24, r16
    13dc:	b7 01       	movw	r22, r14
    13de:	a8 01       	movw	r20, r16
    13e0:	97 01       	movw	r18, r14
    13e2:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    13e6:	20 91 ae 01 	lds	r18, 0x01AE
    13ea:	30 91 af 01 	lds	r19, 0x01AF
    13ee:	40 91 b0 01 	lds	r20, 0x01B0
    13f2:	50 91 b1 01 	lds	r21, 0x01B1
    13f6:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
    13fa:	12 c0       	rjmp	.+36     	; 0x1420 <moveWall+0x160>
		}
		// biased the error appropriately for the inverse situation
		else 
		{
			error = rtIR - (ltIR - bkIR*bkIR);
    13fc:	c8 01       	movw	r24, r16
    13fe:	b7 01       	movw	r22, r14
    1400:	a8 01       	movw	r20, r16
    1402:	97 01       	movw	r18, r14
    1404:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    1408:	9b 01       	movw	r18, r22
    140a:	ac 01       	movw	r20, r24
    140c:	60 91 ae 01 	lds	r22, 0x01AE
    1410:	70 91 af 01 	lds	r23, 0x01AF
    1414:	80 91 b0 01 	lds	r24, 0x01B0
    1418:	90 91 b1 01 	lds	r25, 0x01B1
    141c:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
    1420:	9b 01       	movw	r18, r22
    1422:	ac 01       	movw	r20, r24
    1424:	60 91 b2 01 	lds	r22, 0x01B2
    1428:	70 91 b3 01 	lds	r23, 0x01B3
    142c:	80 91 b4 01 	lds	r24, 0x01B4
    1430:	90 91 b5 01 	lds	r25, 0x01B5
    1434:	10 c0       	rjmp	.+32     	; 0x1456 <moveWall+0x196>
	// the air is simply the right distance minus the left left distance
	// this ensures symmetry that the robot will follow in between the two walls
	// either one real and one imaginary, or both real
	else 
	{
		error = rtIR - ltIR;
    1436:	60 91 b2 01 	lds	r22, 0x01B2
    143a:	70 91 b3 01 	lds	r23, 0x01B3
    143e:	80 91 b4 01 	lds	r24, 0x01B4
    1442:	90 91 b5 01 	lds	r25, 0x01B5
    1446:	20 91 ae 01 	lds	r18, 0x01AE
    144a:	30 91 af 01 	lds	r19, 0x01AF
    144e:	40 91 b0 01 	lds	r20, 0x01B0
    1452:	50 91 b1 01 	lds	r21, 0x01B1
    1456:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
    145a:	e6 2f       	mov	r30, r22
	}

	// Use the PID controller function to calculate error
	float effort = pidController(error, 0);
    145c:	2e 2f       	mov	r18, r30
    145e:	37 2f       	mov	r19, r23
    1460:	48 2f       	mov	r20, r24
    1462:	59 2f       	mov	r21, r25
    1464:	b9 01       	movw	r22, r18
    1466:	ca 01       	movw	r24, r20
    1468:	40 e0       	ldi	r20, 0x00	; 0
    146a:	0e 94 8a 07 	call	0xf14	; 0xf14 <pidController>
    146e:	6b 01       	movw	r12, r22
    1470:	7c 01       	movw	r14, r24
	
	// Limit the control effort to the max allowable effort
	if((abs(effort) > MAX_EFFORT)&(effort!=0)){
    1472:	0e 94 42 21 	call	0x4284	; 0x4284 <__fixsfsi>
    1476:	8b 01       	movw	r16, r22
    1478:	77 ff       	sbrs	r23, 7
    147a:	03 c0       	rjmp	.+6      	; 0x1482 <moveWall+0x1c2>
    147c:	10 95       	com	r17
    147e:	01 95       	neg	r16
    1480:	1f 4f       	sbci	r17, 0xFF	; 255
    1482:	05 36       	cpi	r16, 0x65	; 101
    1484:	11 05       	cpc	r17, r1
    1486:	fc f0       	brlt	.+62     	; 0x14c6 <moveWall+0x206>
    1488:	c7 01       	movw	r24, r14
    148a:	b6 01       	movw	r22, r12
    148c:	20 e0       	ldi	r18, 0x00	; 0
    148e:	30 e0       	ldi	r19, 0x00	; 0
    1490:	40 e0       	ldi	r20, 0x00	; 0
    1492:	50 e0       	ldi	r21, 0x00	; 0
    1494:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    1498:	88 23       	and	r24, r24
    149a:	a9 f0       	breq	.+42     	; 0x14c6 <moveWall+0x206>
		effort = MAX_EFFORT*(effort/abs(effort));
    149c:	b8 01       	movw	r22, r16
    149e:	88 27       	eor	r24, r24
    14a0:	77 fd       	sbrc	r23, 7
    14a2:	80 95       	com	r24
    14a4:	98 2f       	mov	r25, r24
    14a6:	0e 94 75 21 	call	0x42ea	; 0x42ea <__floatsisf>
    14aa:	9b 01       	movw	r18, r22
    14ac:	ac 01       	movw	r20, r24
    14ae:	c7 01       	movw	r24, r14
    14b0:	b6 01       	movw	r22, r12
    14b2:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
    14b6:	20 e0       	ldi	r18, 0x00	; 0
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	48 ec       	ldi	r20, 0xC8	; 200
    14bc:	52 e4       	ldi	r21, 0x42	; 66
    14be:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    14c2:	6b 01       	movw	r12, r22
    14c4:	7c 01       	movw	r14, r24
	}
	
	// Calculate the stepper speeds for each wheel using a ratio
	float stepper_speed_L = MAX_SPEED/2 + (MAX_SPEED/2)*(effort/MAX_EFFORT);
    14c6:	c7 01       	movw	r24, r14
    14c8:	b6 01       	movw	r22, r12
    14ca:	20 e0       	ldi	r18, 0x00	; 0
    14cc:	30 e0       	ldi	r19, 0x00	; 0
    14ce:	48 ec       	ldi	r20, 0xC8	; 200
    14d0:	52 e4       	ldi	r21, 0x42	; 66
    14d2:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
    14d6:	6b 01       	movw	r12, r22
    14d8:	7c 01       	movw	r14, r24
	float stepper_speed_R = MAX_SPEED/2 - (MAX_SPEED/2)*(effort/MAX_EFFORT);
	
	// Move with wall
	STEPPER_move_stnb( STEPPER_BOTH, 
    14da:	8d b7       	in	r24, 0x3d	; 61
    14dc:	9e b7       	in	r25, 0x3e	; 62
    14de:	09 97       	sbiw	r24, 0x09	; 9
    14e0:	0f b6       	in	r0, 0x3f	; 63
    14e2:	f8 94       	cli
    14e4:	9e bf       	out	0x3e, r25	; 62
    14e6:	0f be       	out	0x3f, r0	; 63
    14e8:	8d bf       	out	0x3d, r24	; 61
    14ea:	0d b7       	in	r16, 0x3d	; 61
    14ec:	1e b7       	in	r17, 0x3e	; 62
    14ee:	0f 5f       	subi	r16, 0xFF	; 255
    14f0:	1f 4f       	sbci	r17, 0xFF	; 255
    14f2:	c7 01       	movw	r24, r14
    14f4:	b6 01       	movw	r22, r12
    14f6:	20 e0       	ldi	r18, 0x00	; 0
    14f8:	30 e0       	ldi	r19, 0x00	; 0
    14fa:	48 ec       	ldi	r20, 0xC8	; 200
    14fc:	51 e4       	ldi	r21, 0x41	; 65
    14fe:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    1502:	20 e0       	ldi	r18, 0x00	; 0
    1504:	30 e0       	ldi	r19, 0x00	; 0
    1506:	48 ec       	ldi	r20, 0xC8	; 200
    1508:	51 e4       	ldi	r21, 0x41	; 65
    150a:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
    150e:	0e 94 47 21 	call	0x428e	; 0x428e <__fixunssfsi>
    1512:	4b 01       	movw	r8, r22
    1514:	5c 01       	movw	r10, r24
    1516:	82 e3       	ldi	r24, 0x32	; 50
    1518:	90 e0       	ldi	r25, 0x00	; 0
    151a:	f8 01       	movw	r30, r16
    151c:	91 83       	std	Z+1, r25	; 0x01
    151e:	80 83       	st	Z, r24
    1520:	c7 01       	movw	r24, r14
    1522:	b6 01       	movw	r22, r12
    1524:	20 e0       	ldi	r18, 0x00	; 0
    1526:	30 e0       	ldi	r19, 0x00	; 0
    1528:	48 ec       	ldi	r20, 0xC8	; 200
    152a:	51 ec       	ldi	r21, 0xC1	; 193
    152c:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    1530:	20 e0       	ldi	r18, 0x00	; 0
    1532:	30 e0       	ldi	r19, 0x00	; 0
    1534:	48 ec       	ldi	r20, 0xC8	; 200
    1536:	51 e4       	ldi	r21, 0x41	; 65
    1538:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
    153c:	0e 94 47 21 	call	0x428e	; 0x428e <__fixunssfsi>
    1540:	f8 01       	movw	r30, r16
    1542:	73 83       	std	Z+3, r23	; 0x03
    1544:	62 83       	std	Z+2, r22	; 0x02
    1546:	82 ec       	ldi	r24, 0xC2	; 194
    1548:	91 e0       	ldi	r25, 0x01	; 1
    154a:	95 83       	std	Z+5, r25	; 0x05
    154c:	84 83       	std	Z+4, r24	; 0x04
    154e:	16 82       	std	Z+6, r1	; 0x06
    1550:	10 86       	std	Z+8, r1	; 0x08
    1552:	17 82       	std	Z+7, r1	; 0x07
    1554:	81 e0       	ldi	r24, 0x01	; 1
    1556:	62 e0       	ldi	r22, 0x02	; 2
    1558:	41 e0       	ldi	r20, 0x01	; 1
    155a:	22 e3       	ldi	r18, 0x32	; 50
    155c:	30 e0       	ldi	r19, 0x00	; 0
    155e:	84 01       	movw	r16, r8
    1560:	52 ec       	ldi	r21, 0xC2	; 194
    1562:	e5 2e       	mov	r14, r21
    1564:	51 e0       	ldi	r21, 0x01	; 1
    1566:	f5 2e       	mov	r15, r21
    1568:	cc 24       	eor	r12, r12
    156a:	aa 24       	eor	r10, r10
    156c:	bb 24       	eor	r11, r11
    156e:	88 24       	eor	r8, r8
    1570:	83 94       	inc	r8
    1572:	0e 94 9b 10 	call	0x2136	; 0x2136 <STEPPER_move>
    1576:	8d b7       	in	r24, 0x3d	; 61
    1578:	9e b7       	in	r25, 0x3e	; 62
    157a:	09 96       	adiw	r24, 0x09	; 9
    157c:	0f b6       	in	r0, 0x3f	; 63
    157e:	f8 94       	cli
    1580:	9e bf       	out	0x3e, r25	; 62
    1582:	0f be       	out	0x3f, r0	; 63
    1584:	8d bf       	out	0x3d, r24	; 61
	
	// debug LCP print statement
	// LCD_clear();
	// LCD_printf("bkIR: %3.2f\nmoveWall\nError: %3f\nEffort: %3f\n", bkIR, error, effort);
	
}
    1586:	1f 91       	pop	r17
    1588:	0f 91       	pop	r16
    158a:	ff 90       	pop	r15
    158c:	ef 90       	pop	r14
    158e:	df 90       	pop	r13
    1590:	cf 90       	pop	r12
    1592:	bf 90       	pop	r11
    1594:	af 90       	pop	r10
    1596:	9f 90       	pop	r9
    1598:	8f 90       	pop	r8
    159a:	7f 90       	pop	r7
    159c:	6f 90       	pop	r6
    159e:	5f 90       	pop	r5
    15a0:	08 95       	ret

000015a2 <moveLight>:
					 1: Light_Lover = track the light but do not collide
					 2: Light_Aggro = run towards the light and touch it
					 3: Light_Shy = run away from the light
********************************************************************/
char moveLight( int lightBehavior)
{
    15a2:	3f 92       	push	r3
    15a4:	4f 92       	push	r4
    15a6:	5f 92       	push	r5
    15a8:	6f 92       	push	r6
    15aa:	7f 92       	push	r7
    15ac:	8f 92       	push	r8
    15ae:	9f 92       	push	r9
    15b0:	af 92       	push	r10
    15b2:	bf 92       	push	r11
    15b4:	cf 92       	push	r12
    15b6:	df 92       	push	r13
    15b8:	ef 92       	push	r14
    15ba:	ff 92       	push	r15
    15bc:	0f 93       	push	r16
    15be:	1f 93       	push	r17
    15c0:	7c 01       	movw	r14, r24
	// call the moveWall() to detect walls and return a Boolean
	
	BOOL isLight = (rightLightVolt > LIGHT_R_THRESH)||(leftLightVolt > LIGHT_L_THRESH);
    15c2:	40 90 be 01 	lds	r4, 0x01BE
    15c6:	50 90 bf 01 	lds	r5, 0x01BF
    15ca:	60 90 c0 01 	lds	r6, 0x01C0
    15ce:	70 90 c1 01 	lds	r7, 0x01C1
    15d2:	c3 01       	movw	r24, r6
    15d4:	b2 01       	movw	r22, r4
    15d6:	28 eb       	ldi	r18, 0xB8	; 184
    15d8:	3e e1       	ldi	r19, 0x1E	; 30
    15da:	45 e8       	ldi	r20, 0x85	; 133
    15dc:	50 e4       	ldi	r21, 0x40	; 64
    15de:	0e 94 25 22 	call	0x444a	; 0x444a <__gesf2>
    15e2:	18 16       	cp	r1, r24
    15e4:	94 f0       	brlt	.+36     	; 0x160a <moveLight+0x68>
    15e6:	00 e0       	ldi	r16, 0x00	; 0
    15e8:	10 e0       	ldi	r17, 0x00	; 0
    15ea:	60 91 c2 01 	lds	r22, 0x01C2
    15ee:	70 91 c3 01 	lds	r23, 0x01C3
    15f2:	80 91 c4 01 	lds	r24, 0x01C4
    15f6:	90 91 c5 01 	lds	r25, 0x01C5
    15fa:	2b e7       	ldi	r18, 0x7B	; 123
    15fc:	34 e1       	ldi	r19, 0x14	; 20
    15fe:	46 e8       	ldi	r20, 0x86	; 134
    1600:	50 e4       	ldi	r21, 0x40	; 64
    1602:	0e 94 25 22 	call	0x444a	; 0x444a <__gesf2>
    1606:	18 16       	cp	r1, r24
    1608:	14 f4       	brge	.+4      	; 0x160e <moveLight+0x6c>
    160a:	01 e0       	ldi	r16, 0x01	; 1
    160c:	10 e0       	ldi	r17, 0x00	; 0
    160e:	30 2e       	mov	r3, r16
	if(!isLight){
    1610:	00 23       	and	r16, r16
    1612:	09 f4       	brne	.+2      	; 0x1616 <moveLight+0x74>
    1614:	5b c1       	rjmp	.+694    	; 0x18cc <moveLight+0x32a>
	float stepper_speed_L = 0;
	float stepper_speed_R = 0;
	BOOL direction_L = 1;
	BOOL direction_R = 1;
	
	switch(lightBehavior){
    1616:	81 e0       	ldi	r24, 0x01	; 1
    1618:	e8 16       	cp	r14, r24
    161a:	f1 04       	cpc	r15, r1
    161c:	09 f4       	brne	.+2      	; 0x1620 <moveLight+0x7e>
    161e:	47 c0       	rjmp	.+142    	; 0x16ae <moveLight+0x10c>
    1620:	92 e0       	ldi	r25, 0x02	; 2
    1622:	e9 16       	cp	r14, r25
    1624:	f1 04       	cpc	r15, r1
    1626:	1c f4       	brge	.+6      	; 0x162e <moveLight+0x8c>
    1628:	ef 28       	or	r14, r15
    162a:	c1 f0       	breq	.+48     	; 0x165c <moveLight+0xba>
    162c:	0a c0       	rjmp	.+20     	; 0x1642 <moveLight+0xa0>
    162e:	e2 e0       	ldi	r30, 0x02	; 2
    1630:	ee 16       	cp	r14, r30
    1632:	f1 04       	cpc	r15, r1
    1634:	09 f4       	brne	.+2      	; 0x1638 <moveLight+0x96>
    1636:	78 c0       	rjmp	.+240    	; 0x1728 <moveLight+0x186>
    1638:	f3 e0       	ldi	r31, 0x03	; 3
    163a:	ef 16       	cp	r14, r31
    163c:	f1 04       	cpc	r15, r1
    163e:	09 f4       	brne	.+2      	; 0x1642 <moveLight+0xa0>
    1640:	a6 c0       	rjmp	.+332    	; 0x178e <moveLight+0x1ec>
    1642:	0f 2e       	mov	r0, r31
    1644:	f0 e0       	ldi	r31, 0x00	; 0
    1646:	cf 2e       	mov	r12, r31
    1648:	f0 e0       	ldi	r31, 0x00	; 0
    164a:	df 2e       	mov	r13, r31
    164c:	f0 e0       	ldi	r31, 0x00	; 0
    164e:	ef 2e       	mov	r14, r31
    1650:	f0 e0       	ldi	r31, 0x00	; 0
    1652:	ff 2e       	mov	r15, r31
    1654:	f0 2d       	mov	r31, r0
    1656:	46 01       	movw	r8, r12
    1658:	57 01       	movw	r10, r14
    165a:	cb c0       	rjmp	.+406    	; 0x17f2 <moveLight+0x250>
		case LIGHT_WANDER:
			stepper_speed_L = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_R_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    165c:	60 91 c2 01 	lds	r22, 0x01C2
    1660:	70 91 c3 01 	lds	r23, 0x01C3
    1664:	80 91 c4 01 	lds	r24, 0x01C4
    1668:	90 91 c5 01 	lds	r25, 0x01C5
    166c:	28 eb       	ldi	r18, 0xB8	; 184
    166e:	3e e1       	ldi	r19, 0x1E	; 30
    1670:	45 e8       	ldi	r20, 0x85	; 133
    1672:	50 e4       	ldi	r21, 0x40	; 64
    1674:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
    1678:	28 e5       	ldi	r18, 0x58	; 88
    167a:	3f e8       	ldi	r19, 0x8F	; 143
    167c:	42 e0       	ldi	r20, 0x02	; 2
    167e:	5f e3       	ldi	r21, 0x3F	; 63
    1680:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
    1684:	20 e0       	ldi	r18, 0x00	; 0
    1686:	30 e0       	ldi	r19, 0x00	; 0
    1688:	48 e4       	ldi	r20, 0x48	; 72
    168a:	52 ec       	ldi	r21, 0xC2	; 194
    168c:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    1690:	20 e0       	ldi	r18, 0x00	; 0
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	48 e4       	ldi	r20, 0x48	; 72
    1696:	52 e4       	ldi	r21, 0x42	; 66
    1698:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
    169c:	6b 01       	movw	r12, r22
    169e:	7c 01       	movw	r14, r24
			stepper_speed_R = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_L_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    16a0:	c3 01       	movw	r24, r6
    16a2:	b2 01       	movw	r22, r4
    16a4:	2b e7       	ldi	r18, 0x7B	; 123
    16a6:	34 e1       	ldi	r19, 0x14	; 20
    16a8:	46 e8       	ldi	r20, 0x86	; 134
    16aa:	50 e4       	ldi	r21, 0x40	; 64
    16ac:	28 c0       	rjmp	.+80     	; 0x16fe <moveLight+0x15c>
			break;
						
		case LIGHT_LOVER:
			stepper_speed_L = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_L_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    16ae:	60 91 c2 01 	lds	r22, 0x01C2
    16b2:	70 91 c3 01 	lds	r23, 0x01C3
    16b6:	80 91 c4 01 	lds	r24, 0x01C4
    16ba:	90 91 c5 01 	lds	r25, 0x01C5
    16be:	2b e7       	ldi	r18, 0x7B	; 123
    16c0:	34 e1       	ldi	r19, 0x14	; 20
    16c2:	46 e8       	ldi	r20, 0x86	; 134
    16c4:	50 e4       	ldi	r21, 0x40	; 64
    16c6:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
    16ca:	28 e5       	ldi	r18, 0x58	; 88
    16cc:	3f e8       	ldi	r19, 0x8F	; 143
    16ce:	42 e0       	ldi	r20, 0x02	; 2
    16d0:	5f e3       	ldi	r21, 0x3F	; 63
    16d2:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
    16d6:	20 e0       	ldi	r18, 0x00	; 0
    16d8:	30 e0       	ldi	r19, 0x00	; 0
    16da:	48 e4       	ldi	r20, 0x48	; 72
    16dc:	52 ec       	ldi	r21, 0xC2	; 194
    16de:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    16e2:	20 e0       	ldi	r18, 0x00	; 0
    16e4:	30 e0       	ldi	r19, 0x00	; 0
    16e6:	48 e4       	ldi	r20, 0x48	; 72
    16e8:	52 e4       	ldi	r21, 0x42	; 66
    16ea:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
    16ee:	6b 01       	movw	r12, r22
    16f0:	7c 01       	movw	r14, r24
			stepper_speed_R = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_R_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    16f2:	c3 01       	movw	r24, r6
    16f4:	b2 01       	movw	r22, r4
    16f6:	28 eb       	ldi	r18, 0xB8	; 184
    16f8:	3e e1       	ldi	r19, 0x1E	; 30
    16fa:	45 e8       	ldi	r20, 0x85	; 133
    16fc:	50 e4       	ldi	r21, 0x40	; 64
    16fe:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
    1702:	20 e7       	ldi	r18, 0x70	; 112
    1704:	3d e3       	ldi	r19, 0x3D	; 61
    1706:	4a e0       	ldi	r20, 0x0A	; 10
    1708:	5f e3       	ldi	r21, 0x3F	; 63
    170a:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
    170e:	20 e0       	ldi	r18, 0x00	; 0
    1710:	30 e0       	ldi	r19, 0x00	; 0
    1712:	48 e4       	ldi	r20, 0x48	; 72
    1714:	52 ec       	ldi	r21, 0xC2	; 194
    1716:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    171a:	20 e0       	ldi	r18, 0x00	; 0
    171c:	30 e0       	ldi	r19, 0x00	; 0
    171e:	48 e4       	ldi	r20, 0x48	; 72
    1720:	52 e4       	ldi	r21, 0x42	; 66
    1722:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__addsf3>
    1726:	63 c0       	rjmp	.+198    	; 0x17ee <moveLight+0x24c>
			break;
			
		case LIGHT_AGGRO:	
			stepper_speed_R = MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_L_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    1728:	60 91 c2 01 	lds	r22, 0x01C2
    172c:	70 91 c3 01 	lds	r23, 0x01C3
    1730:	80 91 c4 01 	lds	r24, 0x01C4
    1734:	90 91 c5 01 	lds	r25, 0x01C5
    1738:	2b e7       	ldi	r18, 0x7B	; 123
    173a:	34 e1       	ldi	r19, 0x14	; 20
    173c:	46 e8       	ldi	r20, 0x86	; 134
    173e:	50 e4       	ldi	r21, 0x40	; 64
    1740:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
    1744:	28 e5       	ldi	r18, 0x58	; 88
    1746:	3f e8       	ldi	r19, 0x8F	; 143
    1748:	42 e0       	ldi	r20, 0x02	; 2
    174a:	5f e3       	ldi	r21, 0x3F	; 63
    174c:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
    1750:	20 e0       	ldi	r18, 0x00	; 0
    1752:	30 e0       	ldi	r19, 0x00	; 0
    1754:	48 e4       	ldi	r20, 0x48	; 72
    1756:	52 e4       	ldi	r21, 0x42	; 66
    1758:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    175c:	4b 01       	movw	r8, r22
    175e:	5c 01       	movw	r10, r24
			stepper_speed_L = MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_R_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    1760:	c3 01       	movw	r24, r6
    1762:	b2 01       	movw	r22, r4
    1764:	28 eb       	ldi	r18, 0xB8	; 184
    1766:	3e e1       	ldi	r19, 0x1E	; 30
    1768:	45 e8       	ldi	r20, 0x85	; 133
    176a:	50 e4       	ldi	r21, 0x40	; 64
    176c:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
    1770:	20 e7       	ldi	r18, 0x70	; 112
    1772:	3d e3       	ldi	r19, 0x3D	; 61
    1774:	4a e0       	ldi	r20, 0x0A	; 10
    1776:	5f e3       	ldi	r21, 0x3F	; 63
    1778:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
    177c:	20 e0       	ldi	r18, 0x00	; 0
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	48 e4       	ldi	r20, 0x48	; 72
    1782:	52 e4       	ldi	r21, 0x42	; 66
    1784:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    1788:	6b 01       	movw	r12, r22
    178a:	7c 01       	movw	r14, r24
    178c:	32 c0       	rjmp	.+100    	; 0x17f2 <moveLight+0x250>
			break;
			
		case LIGHT_SHY:
			stepper_speed_L = MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_L_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    178e:	60 91 c2 01 	lds	r22, 0x01C2
    1792:	70 91 c3 01 	lds	r23, 0x01C3
    1796:	80 91 c4 01 	lds	r24, 0x01C4
    179a:	90 91 c5 01 	lds	r25, 0x01C5
    179e:	2b e7       	ldi	r18, 0x7B	; 123
    17a0:	34 e1       	ldi	r19, 0x14	; 20
    17a2:	46 e8       	ldi	r20, 0x86	; 134
    17a4:	50 e4       	ldi	r21, 0x40	; 64
    17a6:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
    17aa:	28 e5       	ldi	r18, 0x58	; 88
    17ac:	3f e8       	ldi	r19, 0x8F	; 143
    17ae:	42 e0       	ldi	r20, 0x02	; 2
    17b0:	5f e3       	ldi	r21, 0x3F	; 63
    17b2:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
    17b6:	20 e0       	ldi	r18, 0x00	; 0
    17b8:	30 e0       	ldi	r19, 0x00	; 0
    17ba:	48 e4       	ldi	r20, 0x48	; 72
    17bc:	52 e4       	ldi	r21, 0x42	; 66
    17be:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    17c2:	6b 01       	movw	r12, r22
    17c4:	7c 01       	movw	r14, r24
			stepper_speed_R = MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_R_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    17c6:	c3 01       	movw	r24, r6
    17c8:	b2 01       	movw	r22, r4
    17ca:	28 eb       	ldi	r18, 0xB8	; 184
    17cc:	3e e1       	ldi	r19, 0x1E	; 30
    17ce:	45 e8       	ldi	r20, 0x85	; 133
    17d0:	50 e4       	ldi	r21, 0x40	; 64
    17d2:	0e 94 71 20 	call	0x40e2	; 0x40e2 <__subsf3>
    17d6:	20 e7       	ldi	r18, 0x70	; 112
    17d8:	3d e3       	ldi	r19, 0x3D	; 61
    17da:	4a e0       	ldi	r20, 0x0A	; 10
    17dc:	5f e3       	ldi	r21, 0x3F	; 63
    17de:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
    17e2:	20 e0       	ldi	r18, 0x00	; 0
    17e4:	30 e0       	ldi	r19, 0x00	; 0
    17e6:	48 e4       	ldi	r20, 0x48	; 72
    17e8:	52 e4       	ldi	r21, 0x42	; 66
    17ea:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    17ee:	4b 01       	movw	r8, r22
    17f0:	5c 01       	movw	r10, r24
			break;
			
		default: break;
		}
		
		if(stepper_speed_L<0){
    17f2:	c7 01       	movw	r24, r14
    17f4:	b6 01       	movw	r22, r12
    17f6:	20 e0       	ldi	r18, 0x00	; 0
    17f8:	30 e0       	ldi	r19, 0x00	; 0
    17fa:	40 e0       	ldi	r20, 0x00	; 0
    17fc:	50 e0       	ldi	r21, 0x00	; 0
    17fe:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    1802:	88 23       	and	r24, r24
    1804:	64 f4       	brge	.+24     	; 0x181e <moveLight+0x27c>
    1806:	0f 2e       	mov	r0, r31
    1808:	f0 e0       	ldi	r31, 0x00	; 0
    180a:	cf 2e       	mov	r12, r31
    180c:	f0 e0       	ldi	r31, 0x00	; 0
    180e:	df 2e       	mov	r13, r31
    1810:	f0 e0       	ldi	r31, 0x00	; 0
    1812:	ef 2e       	mov	r14, r31
    1814:	f0 e0       	ldi	r31, 0x00	; 0
    1816:	ff 2e       	mov	r15, r31
    1818:	f0 2d       	mov	r31, r0
    181a:	66 24       	eor	r6, r6
    181c:	02 c0       	rjmp	.+4      	; 0x1822 <moveLight+0x280>
    181e:	66 24       	eor	r6, r6
    1820:	63 94       	inc	r6
			stepper_speed_L = 0;
			direction_L = 0;}
		
		if(stepper_speed_R<0){
    1822:	c5 01       	movw	r24, r10
    1824:	b4 01       	movw	r22, r8
    1826:	20 e0       	ldi	r18, 0x00	; 0
    1828:	30 e0       	ldi	r19, 0x00	; 0
    182a:	40 e0       	ldi	r20, 0x00	; 0
    182c:	50 e0       	ldi	r21, 0x00	; 0
    182e:	0e 94 d6 20 	call	0x41ac	; 0x41ac <__cmpsf2>
    1832:	88 23       	and	r24, r24
    1834:	64 f4       	brge	.+24     	; 0x184e <moveLight+0x2ac>
    1836:	0f 2e       	mov	r0, r31
    1838:	f0 e0       	ldi	r31, 0x00	; 0
    183a:	8f 2e       	mov	r8, r31
    183c:	f0 e0       	ldi	r31, 0x00	; 0
    183e:	9f 2e       	mov	r9, r31
    1840:	f0 e0       	ldi	r31, 0x00	; 0
    1842:	af 2e       	mov	r10, r31
    1844:	f0 e0       	ldi	r31, 0x00	; 0
    1846:	bf 2e       	mov	r11, r31
    1848:	f0 2d       	mov	r31, r0
    184a:	77 24       	eor	r7, r7
    184c:	02 c0       	rjmp	.+4      	; 0x1852 <moveLight+0x2b0>
    184e:	77 24       	eor	r7, r7
    1850:	73 94       	inc	r7
			stepper_speed_R = 0;
			direction_R = 0;}
			
		// STEPPER_REV
		STEPPER_move_stnb( STEPPER_BOTH, 
    1852:	8d b7       	in	r24, 0x3d	; 61
    1854:	9e b7       	in	r25, 0x3e	; 62
    1856:	09 97       	sbiw	r24, 0x09	; 9
    1858:	0f b6       	in	r0, 0x3f	; 63
    185a:	f8 94       	cli
    185c:	9e bf       	out	0x3e, r25	; 62
    185e:	0f be       	out	0x3f, r0	; 63
    1860:	8d bf       	out	0x3d, r24	; 61
    1862:	0d b7       	in	r16, 0x3d	; 61
    1864:	1e b7       	in	r17, 0x3e	; 62
    1866:	0f 5f       	subi	r16, 0xFF	; 255
    1868:	1f 4f       	sbci	r17, 0xFF	; 255
    186a:	c7 01       	movw	r24, r14
    186c:	b6 01       	movw	r22, r12
    186e:	0e 94 47 21 	call	0x428e	; 0x428e <__fixunssfsi>
    1872:	6b 01       	movw	r12, r22
    1874:	7c 01       	movw	r14, r24
    1876:	82 e3       	ldi	r24, 0x32	; 50
    1878:	90 e0       	ldi	r25, 0x00	; 0
    187a:	f8 01       	movw	r30, r16
    187c:	91 83       	std	Z+1, r25	; 0x01
    187e:	80 83       	st	Z, r24
    1880:	c5 01       	movw	r24, r10
    1882:	b4 01       	movw	r22, r8
    1884:	0e 94 47 21 	call	0x428e	; 0x428e <__fixunssfsi>
    1888:	f8 01       	movw	r30, r16
    188a:	73 83       	std	Z+3, r23	; 0x03
    188c:	62 83       	std	Z+2, r22	; 0x02
    188e:	82 ec       	ldi	r24, 0xC2	; 194
    1890:	91 e0       	ldi	r25, 0x01	; 1
    1892:	95 83       	std	Z+5, r25	; 0x05
    1894:	84 83       	std	Z+4, r24	; 0x04
    1896:	16 82       	std	Z+6, r1	; 0x06
    1898:	10 86       	std	Z+8, r1	; 0x08
    189a:	17 82       	std	Z+7, r1	; 0x07
    189c:	81 e0       	ldi	r24, 0x01	; 1
    189e:	62 e0       	ldi	r22, 0x02	; 2
    18a0:	46 2d       	mov	r20, r6
    18a2:	22 e3       	ldi	r18, 0x32	; 50
    18a4:	30 e0       	ldi	r19, 0x00	; 0
    18a6:	86 01       	movw	r16, r12
    18a8:	72 ec       	ldi	r23, 0xC2	; 194
    18aa:	e7 2e       	mov	r14, r23
    18ac:	71 e0       	ldi	r23, 0x01	; 1
    18ae:	f7 2e       	mov	r15, r23
    18b0:	cc 24       	eor	r12, r12
    18b2:	aa 24       	eor	r10, r10
    18b4:	bb 24       	eor	r11, r11
    18b6:	87 2c       	mov	r8, r7
    18b8:	0e 94 9b 10 	call	0x2136	; 0x2136 <STEPPER_move>
    18bc:	8d b7       	in	r24, 0x3d	; 61
    18be:	9e b7       	in	r25, 0x3e	; 62
    18c0:	09 96       	adiw	r24, 0x09	; 9
    18c2:	0f b6       	in	r0, 0x3f	; 63
    18c4:	f8 94       	cli
    18c6:	9e bf       	out	0x3e, r25	; 62
    18c8:	0f be       	out	0x3f, r0	; 63
    18ca:	8d bf       	out	0x3d, r24	; 61
		direction_L, 50, stepper_speed_L, 450, STEPPER_BRK_OFF, // Left
		direction_R, 50, stepper_speed_R, 450, STEPPER_BRK_OFF ); // Right

		return isLight;
}
    18cc:	83 2d       	mov	r24, r3
    18ce:	1f 91       	pop	r17
    18d0:	0f 91       	pop	r16
    18d2:	ff 90       	pop	r15
    18d4:	ef 90       	pop	r14
    18d6:	df 90       	pop	r13
    18d8:	cf 90       	pop	r12
    18da:	bf 90       	pop	r11
    18dc:	af 90       	pop	r10
    18de:	9f 90       	pop	r9
    18e0:	8f 90       	pop	r8
    18e2:	7f 90       	pop	r7
    18e4:	6f 90       	pop	r6
    18e6:	5f 90       	pop	r5
    18e8:	4f 90       	pop	r4
    18ea:	3f 90       	pop	r3
    18ec:	08 95       	ret

000018ee <moveWander>:
* Output Return:	none
* Overview:			This function checks for walls and moves the 
*					robot randomly if walls are not detected
********************************************************************/
char moveWander ( void )
{	
    18ee:	8f 92       	push	r8
    18f0:	af 92       	push	r10
    18f2:	bf 92       	push	r11
    18f4:	cf 92       	push	r12
    18f6:	df 92       	push	r13
    18f8:	ef 92       	push	r14
    18fa:	ff 92       	push	r15
    18fc:	0f 93       	push	r16
    18fe:	1f 93       	push	r17
    1900:	cf 93       	push	r28
    1902:	df 93       	push	r29
	// notify that we have
	char isWander = 1;
	
	// if we are wondering
	// first check the current progress of our wondering
	STEPPER_STEPS curr_steps = STEPPER_get_nSteps();
    1904:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <STEPPER_get_nSteps>
	
	
	// IF my motion is complete do another random motion
	if ((curr_steps.left == 0)&(curr_steps.right == 0))
    1908:	67 2b       	or	r22, r23
    190a:	09 f0       	breq	.+2      	; 0x190e <moveWander+0x20>
    190c:	76 c0       	rjmp	.+236    	; 0x19fa <moveWander+0x10c>
    190e:	89 2b       	or	r24, r25
    1910:	09 f0       	breq	.+2      	; 0x1914 <moveWander+0x26>
    1912:	73 c0       	rjmp	.+230    	; 0x19fa <moveWander+0x10c>
	{
		// create random values for wheel position and wheel speed
		int moveRand = rand()%400+400;
    1914:	0e 94 81 29 	call	0x5302	; 0x5302 <rand>
    1918:	8c 01       	movw	r16, r24
		float turnRandR = rand()%200+200;
    191a:	0e 94 81 29 	call	0x5302	; 0x5302 <rand>
    191e:	ec 01       	movw	r28, r24
		float turnRandL = rand()%200+200;
    1920:	0e 94 81 29 	call	0x5302	; 0x5302 <rand>
    1924:	7c 01       	movw	r14, r24
		
		// Weight the chance that we will go forward slightly more
		// so that the robot may possibly traverse farther
		BOOL direction = ~((rand()%10)>7);
    1926:	0e 94 81 29 	call	0x5302	; 0x5302 <rand>
    192a:	20 e0       	ldi	r18, 0x00	; 0
    192c:	6a e0       	ldi	r22, 0x0A	; 10
    192e:	70 e0       	ldi	r23, 0x00	; 0
    1930:	0e 94 b2 27 	call	0x4f64	; 0x4f64 <__divmodhi4>
    1934:	08 97       	sbiw	r24, 0x08	; 8
    1936:	0c f0       	brlt	.+2      	; 0x193a <moveWander+0x4c>
    1938:	21 e0       	ldi	r18, 0x01	; 1
    193a:	82 2e       	mov	r8, r18
    193c:	80 94       	com	r8
				
		// Move.
		STEPPER_move_stnb( STEPPER_BOTH, 
    193e:	c8 01       	movw	r24, r16
    1940:	60 e9       	ldi	r22, 0x90	; 144
    1942:	71 e0       	ldi	r23, 0x01	; 1
    1944:	0e 94 b2 27 	call	0x4f64	; 0x4f64 <__divmodhi4>
    1948:	f0 e9       	ldi	r31, 0x90	; 144
    194a:	af 2e       	mov	r10, r31
    194c:	f1 e0       	ldi	r31, 0x01	; 1
    194e:	bf 2e       	mov	r11, r31
    1950:	a8 0e       	add	r10, r24
    1952:	b9 1e       	adc	r11, r25
    1954:	8d b7       	in	r24, 0x3d	; 61
    1956:	9e b7       	in	r25, 0x3e	; 62
    1958:	09 97       	sbiw	r24, 0x09	; 9
    195a:	0f b6       	in	r0, 0x3f	; 63
    195c:	f8 94       	cli
    195e:	9e bf       	out	0x3e, r25	; 62
    1960:	0f be       	out	0x3f, r0	; 63
    1962:	8d bf       	out	0x3d, r24	; 61
    1964:	0d b7       	in	r16, 0x3d	; 61
    1966:	1e b7       	in	r17, 0x3e	; 62
    1968:	0f 5f       	subi	r16, 0xFF	; 255
    196a:	1f 4f       	sbci	r17, 0xFF	; 255
    196c:	c7 01       	movw	r24, r14
    196e:	68 ec       	ldi	r22, 0xC8	; 200
    1970:	70 e0       	ldi	r23, 0x00	; 0
    1972:	0e 94 b2 27 	call	0x4f64	; 0x4f64 <__divmodhi4>
    1976:	88 53       	subi	r24, 0x38	; 56
    1978:	9f 4f       	sbci	r25, 0xFF	; 255
    197a:	aa 27       	eor	r26, r26
    197c:	97 fd       	sbrc	r25, 7
    197e:	a0 95       	com	r26
    1980:	ba 2f       	mov	r27, r26
    1982:	bc 01       	movw	r22, r24
    1984:	cd 01       	movw	r24, r26
    1986:	0e 94 75 21 	call	0x42ea	; 0x42ea <__floatsisf>
    198a:	0e 94 47 21 	call	0x428e	; 0x428e <__fixunssfsi>
    198e:	6b 01       	movw	r12, r22
    1990:	7c 01       	movw	r14, r24
    1992:	f8 01       	movw	r30, r16
    1994:	b1 82       	std	Z+1, r11	; 0x01
    1996:	a0 82       	st	Z, r10
    1998:	ce 01       	movw	r24, r28
    199a:	68 ec       	ldi	r22, 0xC8	; 200
    199c:	70 e0       	ldi	r23, 0x00	; 0
    199e:	0e 94 b2 27 	call	0x4f64	; 0x4f64 <__divmodhi4>
    19a2:	88 53       	subi	r24, 0x38	; 56
    19a4:	9f 4f       	sbci	r25, 0xFF	; 255
    19a6:	aa 27       	eor	r26, r26
    19a8:	97 fd       	sbrc	r25, 7
    19aa:	a0 95       	com	r26
    19ac:	ba 2f       	mov	r27, r26
    19ae:	bc 01       	movw	r22, r24
    19b0:	cd 01       	movw	r24, r26
    19b2:	0e 94 75 21 	call	0x42ea	; 0x42ea <__floatsisf>
    19b6:	0e 94 47 21 	call	0x428e	; 0x428e <__fixunssfsi>
    19ba:	f8 01       	movw	r30, r16
    19bc:	73 83       	std	Z+3, r23	; 0x03
    19be:	62 83       	std	Z+2, r22	; 0x02
    19c0:	82 ec       	ldi	r24, 0xC2	; 194
    19c2:	91 e0       	ldi	r25, 0x01	; 1
    19c4:	95 83       	std	Z+5, r25	; 0x05
    19c6:	84 83       	std	Z+4, r24	; 0x04
    19c8:	16 82       	std	Z+6, r1	; 0x06
    19ca:	10 86       	std	Z+8, r1	; 0x08
    19cc:	17 82       	std	Z+7, r1	; 0x07
    19ce:	81 e0       	ldi	r24, 0x01	; 1
    19d0:	62 e0       	ldi	r22, 0x02	; 2
    19d2:	48 2d       	mov	r20, r8
    19d4:	95 01       	movw	r18, r10
    19d6:	86 01       	movw	r16, r12
    19d8:	e2 ec       	ldi	r30, 0xC2	; 194
    19da:	ee 2e       	mov	r14, r30
    19dc:	e1 e0       	ldi	r30, 0x01	; 1
    19de:	fe 2e       	mov	r15, r30
    19e0:	cc 24       	eor	r12, r12
    19e2:	aa 24       	eor	r10, r10
    19e4:	bb 24       	eor	r11, r11
    19e6:	0e 94 9b 10 	call	0x2136	; 0x2136 <STEPPER_move>
    19ea:	8d b7       	in	r24, 0x3d	; 61
    19ec:	9e b7       	in	r25, 0x3e	; 62
    19ee:	09 96       	adiw	r24, 0x09	; 9
    19f0:	0f b6       	in	r0, 0x3f	; 63
    19f2:	f8 94       	cli
    19f4:	9e bf       	out	0x3e, r25	; 62
    19f6:	0f be       	out	0x3f, r0	; 63
    19f8:	8d bf       	out	0x3d, r24	; 61
		// debug LCP print statement
		// LCD_clear();
		// LCD_printf("moveWander\nmoveRand: %3d\nturnRandR: %3d\nturnRandL: %3d\n",moveRand,turnRandR,turnRandL);
		}
	return isWander;
}
    19fa:	81 e0       	ldi	r24, 0x01	; 1
    19fc:	df 91       	pop	r29
    19fe:	cf 91       	pop	r28
    1a00:	1f 91       	pop	r17
    1a02:	0f 91       	pop	r16
    1a04:	ff 90       	pop	r15
    1a06:	ef 90       	pop	r14
    1a08:	df 90       	pop	r13
    1a0a:	cf 90       	pop	r12
    1a0c:	bf 90       	pop	r11
    1a0e:	af 90       	pop	r10
    1a10:	8f 90       	pop	r8
    1a12:	08 95       	ret

00001a14 <CBOT_main>:
/*******************************************************************
* Function:        void CBOT_main( void )
********************************************************************/

void CBOT_main( void )
{
    1a14:	cf 93       	push	r28
    1a16:	df 93       	push	r29
	// Initialize variables
	int btnValue=0;//value of button pushed

	ATopstat = ATTINY_open();//open the tiny microcontroller
    1a18:	0e 94 d5 13 	call	0x27aa	; 0x27aa <ATTINY_open>
    1a1c:	90 93 42 02 	sts	0x0242, r25
    1a20:	80 93 41 02 	sts	0x0241, r24
	LEopstat = LED_open(); //open the LED module
    1a24:	0e 94 c0 0e 	call	0x1d80	; 0x1d80 <LED_open>
    1a28:	90 93 40 02 	sts	0x0240, r25
    1a2c:	80 93 3f 02 	sts	0x023F, r24
	LCopstat = LCD_open(); //open the LCD module
    1a30:	0e 94 d7 0d 	call	0x1bae	; 0x1bae <LCD_open>
    1a34:	90 93 3e 02 	sts	0x023E, r25
    1a38:	80 93 3d 02 	sts	0x023D, r24
	STEPPER_open(); // Open STEPPER module for use
    1a3c:	0e 94 42 11 	call	0x2284	; 0x2284 <STEPPER_open>
	SPKR_open(SPKR_BEEP_MODE);//open the speaker in beep mode
    1a40:	81 e0       	ldi	r24, 0x01	; 1
    1a42:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <SPKR_open>
	
	LED_open();
    1a46:	0e 94 c0 0e 	call	0x1d80	; 0x1d80 <LED_open>
	I2C_open();
    1a4a:	0e 94 2f 15 	call	0x2a5e	; 0x2a5e <I2C_open>
	ADC_open();//open the ADC module
    1a4e:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <ADC_open>
 	ADC_set_VREF( ADC_VREF_AVCC );// Set the Voltage Reference first so VREF=5V.
    1a52:	81 e0       	ldi	r24, 0x01	; 1
    1a54:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <ADC_set_VREF>

	// Initialize IR Values and Reset Prefilter
	checkIR();
    1a58:	0e 94 89 08 	call	0x1112	; 0x1112 <checkIR>
	prefilter(1);
    1a5c:	81 e0       	ldi	r24, 0x01	; 1
    1a5e:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <prefilter>
	
	//
	LCD_printf("PRESS a button\nOR\nWAIT for default\n");
    1a62:	84 e2       	ldi	r24, 0x24	; 36
    1a64:	91 e0       	ldi	r25, 0x01	; 1
    1a66:	0e 94 aa 2a 	call	0x5554	; 0x5554 <puts>
	TMRSRVC_delay(3000);//wait 3 seconds
    1a6a:	88 eb       	ldi	r24, 0xB8	; 184
    1a6c:	9b e0       	ldi	r25, 0x0B	; 11
    1a6e:	0e 94 24 14 	call	0x2848	; 0x2848 <TMRSRVC_delay>
	btnValue = WaitButton();
    1a72:	0e 94 82 05 	call	0xb04	; 0xb04 <WaitButton>
    1a76:	ec 01       	movw	r28, r24

	// Infinite loop
	while (1)
    {
		// update the sensor values
		checkLightSensor();
    1a78:	0e 94 74 08 	call	0x10e8	; 0x10e8 <checkLightSensor>
		checkIR();
    1a7c:	0e 94 89 08 	call	0x1112	; 0x1112 <checkIR>
		// TMRSRVC_delay(2000);//wait 2 seconds
		
		// LCD_printf("bkIR: %3.2f\nftIR: %3.2f\nrtIR: %3.2f\nltIR: %3.2f\n",bkIR,ftIR,rtIR,ltIR);
		// TMRSRVC_delay(2000);//wait 2 seconds
		
		moveBehavior(btnValue);
    1a80:	ce 01       	movw	r24, r28
    1a82:	0e 94 4e 09 	call	0x129c	; 0x129c <moveBehavior>
    1a86:	f8 cf       	rjmp	.-16     	; 0x1a78 <CBOT_main+0x64>

00001a88 <ADC_open>:
    1a88:	8f e0       	ldi	r24, 0x0F	; 15
    1a8a:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    1a8e:	88 23       	and	r24, r24
    1a90:	31 f4       	brne	.+12     	; 0x1a9e <ADC_open+0x16>
    1a92:	0e 94 56 15 	call	0x2aac	; 0x2aac <__ADC_init>
    1a96:	8f e0       	ldi	r24, 0x0F	; 15
    1a98:	61 e0       	ldi	r22, 0x01	; 1
    1a9a:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    1a9e:	8f e0       	ldi	r24, 0x0F	; 15
    1aa0:	91 e0       	ldi	r25, 0x01	; 1
    1aa2:	08 95       	ret

00001aa4 <ADC_sample>:
    1aa4:	8f e0       	ldi	r24, 0x0F	; 15
    1aa6:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    1aaa:	81 30       	cpi	r24, 0x01	; 1
    1aac:	19 f0       	breq	.+6      	; 0x1ab4 <ADC_sample+0x10>
    1aae:	20 e0       	ldi	r18, 0x00	; 0
    1ab0:	30 e0       	ldi	r19, 0x00	; 0
    1ab2:	13 c0       	rjmp	.+38     	; 0x1ada <ADC_sample+0x36>
    1ab4:	80 91 7a 00 	lds	r24, 0x007A
    1ab8:	80 64       	ori	r24, 0x40	; 64
    1aba:	80 93 7a 00 	sts	0x007A, r24
    1abe:	80 91 7a 00 	lds	r24, 0x007A
    1ac2:	86 fd       	sbrc	r24, 6
    1ac4:	fc cf       	rjmp	.-8      	; 0x1abe <ADC_sample+0x1a>
    1ac6:	30 91 78 00 	lds	r19, 0x0078
    1aca:	20 91 79 00 	lds	r18, 0x0079
    1ace:	92 2f       	mov	r25, r18
    1ad0:	80 e0       	ldi	r24, 0x00	; 0
    1ad2:	23 2f       	mov	r18, r19
    1ad4:	30 e0       	ldi	r19, 0x00	; 0
    1ad6:	28 2b       	or	r18, r24
    1ad8:	39 2b       	or	r19, r25
    1ada:	c9 01       	movw	r24, r18
    1adc:	08 95       	ret

00001ade <ADC_set_channel>:
    1ade:	58 2f       	mov	r21, r24
    1ae0:	80 91 47 01 	lds	r24, 0x0147
    1ae4:	88 30       	cpi	r24, 0x08	; 8
    1ae6:	d8 f4       	brcc	.+54     	; 0x1b1e <ADC_set_channel+0x40>
    1ae8:	40 91 7e 00 	lds	r20, 0x007E
    1aec:	21 e0       	ldi	r18, 0x01	; 1
    1aee:	30 e0       	ldi	r19, 0x00	; 0
    1af0:	b9 01       	movw	r22, r18
    1af2:	02 c0       	rjmp	.+4      	; 0x1af8 <ADC_set_channel+0x1a>
    1af4:	66 0f       	add	r22, r22
    1af6:	77 1f       	adc	r23, r23
    1af8:	8a 95       	dec	r24
    1afa:	e2 f7       	brpl	.-8      	; 0x1af4 <ADC_set_channel+0x16>
    1afc:	cb 01       	movw	r24, r22
    1afe:	80 95       	com	r24
    1b00:	84 23       	and	r24, r20
    1b02:	80 93 7e 00 	sts	0x007E, r24
    1b06:	80 91 7e 00 	lds	r24, 0x007E
    1b0a:	05 2e       	mov	r0, r21
    1b0c:	02 c0       	rjmp	.+4      	; 0x1b12 <ADC_set_channel+0x34>
    1b0e:	22 0f       	add	r18, r18
    1b10:	33 1f       	adc	r19, r19
    1b12:	0a 94       	dec	r0
    1b14:	e2 f7       	brpl	.-8      	; 0x1b0e <ADC_set_channel+0x30>
    1b16:	82 2b       	or	r24, r18
    1b18:	80 93 7e 00 	sts	0x007E, r24
    1b1c:	0d c0       	rjmp	.+26     	; 0x1b38 <ADC_set_channel+0x5a>
    1b1e:	20 91 7e 00 	lds	r18, 0x007E
    1b22:	81 e0       	ldi	r24, 0x01	; 1
    1b24:	90 e0       	ldi	r25, 0x00	; 0
    1b26:	05 2e       	mov	r0, r21
    1b28:	02 c0       	rjmp	.+4      	; 0x1b2e <ADC_set_channel+0x50>
    1b2a:	88 0f       	add	r24, r24
    1b2c:	99 1f       	adc	r25, r25
    1b2e:	0a 94       	dec	r0
    1b30:	e2 f7       	brpl	.-8      	; 0x1b2a <ADC_set_channel+0x4c>
    1b32:	28 2b       	or	r18, r24
    1b34:	20 93 7e 00 	sts	0x007E, r18
    1b38:	50 93 47 01 	sts	0x0147, r21
    1b3c:	80 91 7c 00 	lds	r24, 0x007C
    1b40:	5f 71       	andi	r21, 0x1F	; 31
    1b42:	80 7e       	andi	r24, 0xE0	; 224
    1b44:	85 2b       	or	r24, r21
    1b46:	80 93 7c 00 	sts	0x007C, r24
    1b4a:	08 95       	ret

00001b4c <ADC_set_VREF>:
    1b4c:	ec e7       	ldi	r30, 0x7C	; 124
    1b4e:	f0 e0       	ldi	r31, 0x00	; 0
    1b50:	90 81       	ld	r25, Z
    1b52:	82 95       	swap	r24
    1b54:	88 0f       	add	r24, r24
    1b56:	88 0f       	add	r24, r24
    1b58:	80 7c       	andi	r24, 0xC0	; 192
    1b5a:	9f 73       	andi	r25, 0x3F	; 63
    1b5c:	98 2b       	or	r25, r24
    1b5e:	90 83       	st	Z, r25
    1b60:	08 95       	ret

00001b62 <main>:
    1b62:	0e 94 6f 15 	call	0x2ade	; 0x2ade <CBOT_ISR_init>
    1b66:	0e 94 61 15 	call	0x2ac2	; 0x2ac2 <CBOT_init>
    1b6a:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <CBOT_main>
    1b6e:	80 e0       	ldi	r24, 0x00	; 0
    1b70:	90 e0       	ldi	r25, 0x00	; 0
    1b72:	08 95       	ret

00001b74 <LCD_clear>:
    1b74:	0f 93       	push	r16
    1b76:	1f 93       	push	r17
    1b78:	80 e4       	ldi	r24, 0x40	; 64
    1b7a:	60 e0       	ldi	r22, 0x00	; 0
    1b7c:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1b80:	00 e0       	ldi	r16, 0x00	; 0
    1b82:	80 2f       	mov	r24, r16
    1b84:	60 e0       	ldi	r22, 0x00	; 0
    1b86:	0e 94 80 0e 	call	0x1d00	; 0x1d00 <LCD_set_PGC_addr>
    1b8a:	10 e0       	ldi	r17, 0x00	; 0
    1b8c:	80 e0       	ldi	r24, 0x00	; 0
    1b8e:	61 e0       	ldi	r22, 0x01	; 1
    1b90:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1b94:	1f 5f       	subi	r17, 0xFF	; 255
    1b96:	10 38       	cpi	r17, 0x80	; 128
    1b98:	c9 f7       	brne	.-14     	; 0x1b8c <LCD_clear+0x18>
    1b9a:	0f 5f       	subi	r16, 0xFF	; 255
    1b9c:	04 30       	cpi	r16, 0x04	; 4
    1b9e:	89 f7       	brne	.-30     	; 0x1b82 <LCD_clear+0xe>
    1ba0:	83 e0       	ldi	r24, 0x03	; 3
    1ba2:	60 e0       	ldi	r22, 0x00	; 0
    1ba4:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <LCD_set_next_PGC>
    1ba8:	1f 91       	pop	r17
    1baa:	0f 91       	pop	r16
    1bac:	08 95       	ret

00001bae <LCD_open>:
    1bae:	0f 93       	push	r16
    1bb0:	1f 93       	push	r17
    1bb2:	82 e0       	ldi	r24, 0x02	; 2
    1bb4:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    1bb8:	88 23       	and	r24, r24
    1bba:	11 f4       	brne	.+4      	; 0x1bc0 <LCD_open+0x12>
    1bbc:	82 e0       	ldi	r24, 0x02	; 2
    1bbe:	06 c0       	rjmp	.+12     	; 0x1bcc <LCD_open+0x1e>
    1bc0:	81 e0       	ldi	r24, 0x01	; 1
    1bc2:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    1bc6:	88 23       	and	r24, r24
    1bc8:	19 f4       	brne	.+6      	; 0x1bd0 <LCD_open+0x22>
    1bca:	81 e0       	ldi	r24, 0x01	; 1
    1bcc:	90 e0       	ldi	r25, 0x00	; 0
    1bce:	6d c0       	rjmp	.+218    	; 0x1caa <LCD_open+0xfc>
    1bd0:	0e 94 d7 17 	call	0x2fae	; 0x2fae <__LCD_init>
    1bd4:	85 e0       	ldi	r24, 0x05	; 5
    1bd6:	61 e0       	ldi	r22, 0x01	; 1
    1bd8:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    1bdc:	8e ea       	ldi	r24, 0xAE	; 174
    1bde:	60 e0       	ldi	r22, 0x00	; 0
    1be0:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1be4:	82 ea       	ldi	r24, 0xA2	; 162
    1be6:	60 e0       	ldi	r22, 0x00	; 0
    1be8:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1bec:	80 ea       	ldi	r24, 0xA0	; 160
    1bee:	60 e0       	ldi	r22, 0x00	; 0
    1bf0:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1bf4:	00 e5       	ldi	r16, 0x50	; 80
    1bf6:	13 ec       	ldi	r17, 0xC3	; 195
    1bf8:	c8 01       	movw	r24, r16
    1bfa:	01 97       	sbiw	r24, 0x01	; 1
    1bfc:	f1 f7       	brne	.-4      	; 0x1bfa <LCD_open+0x4c>
    1bfe:	80 ec       	ldi	r24, 0xC0	; 192
    1c00:	60 e0       	ldi	r22, 0x00	; 0
    1c02:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1c06:	8f e2       	ldi	r24, 0x2F	; 47
    1c08:	60 e0       	ldi	r22, 0x00	; 0
    1c0a:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1c0e:	81 e8       	ldi	r24, 0x81	; 129
    1c10:	60 e0       	ldi	r22, 0x00	; 0
    1c12:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1c16:	86 e1       	ldi	r24, 0x16	; 22
    1c18:	60 e0       	ldi	r22, 0x00	; 0
    1c1a:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1c1e:	82 e2       	ldi	r24, 0x22	; 34
    1c20:	60 e0       	ldi	r22, 0x00	; 0
    1c22:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1c26:	c8 01       	movw	r24, r16
    1c28:	01 97       	sbiw	r24, 0x01	; 1
    1c2a:	f1 f7       	brne	.-4      	; 0x1c28 <LCD_open+0x7a>
    1c2c:	8f ea       	ldi	r24, 0xAF	; 175
    1c2e:	60 e0       	ldi	r22, 0x00	; 0
    1c30:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1c34:	86 ea       	ldi	r24, 0xA6	; 166
    1c36:	60 e0       	ldi	r22, 0x00	; 0
    1c38:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1c3c:	85 ea       	ldi	r24, 0xA5	; 165
    1c3e:	60 e0       	ldi	r22, 0x00	; 0
    1c40:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1c44:	80 e0       	ldi	r24, 0x00	; 0
    1c46:	90 e0       	ldi	r25, 0x00	; 0
    1c48:	28 e8       	ldi	r18, 0x88	; 136
    1c4a:	33 e1       	ldi	r19, 0x13	; 19
    1c4c:	f9 01       	movw	r30, r18
    1c4e:	31 97       	sbiw	r30, 0x01	; 1
    1c50:	f1 f7       	brne	.-4      	; 0x1c4e <LCD_open+0xa0>
    1c52:	01 96       	adiw	r24, 0x01	; 1
    1c54:	43 e0       	ldi	r20, 0x03	; 3
    1c56:	88 3e       	cpi	r24, 0xE8	; 232
    1c58:	94 07       	cpc	r25, r20
    1c5a:	c1 f7       	brne	.-16     	; 0x1c4c <LCD_open+0x9e>
    1c5c:	83 eb       	ldi	r24, 0xB3	; 179
    1c5e:	60 e0       	ldi	r22, 0x00	; 0
    1c60:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1c64:	80 e4       	ldi	r24, 0x40	; 64
    1c66:	60 e0       	ldi	r22, 0x00	; 0
    1c68:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1c6c:	83 e0       	ldi	r24, 0x03	; 3
    1c6e:	60 e0       	ldi	r22, 0x00	; 0
    1c70:	0e 94 80 0e 	call	0x1d00	; 0x1d00 <LCD_set_PGC_addr>
    1c74:	83 e0       	ldi	r24, 0x03	; 3
    1c76:	60 e0       	ldi	r22, 0x00	; 0
    1c78:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <LCD_set_next_PGC>
    1c7c:	10 92 71 04 	sts	0x0471, r1
    1c80:	10 92 73 04 	sts	0x0473, r1
    1c84:	10 92 72 04 	sts	0x0472, r1
    1c88:	86 e5       	ldi	r24, 0x56	; 86
    1c8a:	91 e0       	ldi	r25, 0x01	; 1
    1c8c:	90 93 a2 04 	sts	0x04A2, r25
    1c90:	80 93 a1 04 	sts	0x04A1, r24
    1c94:	88 e1       	ldi	r24, 0x18	; 24
    1c96:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <LCD_set_backlight>
    1c9a:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <LCD_clear>
    1c9e:	84 ea       	ldi	r24, 0xA4	; 164
    1ca0:	60 e0       	ldi	r22, 0x00	; 0
    1ca2:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1ca6:	85 e0       	ldi	r24, 0x05	; 5
    1ca8:	91 e0       	ldi	r25, 0x01	; 1
    1caa:	1f 91       	pop	r17
    1cac:	0f 91       	pop	r16
    1cae:	08 95       	ret

00001cb0 <LCD_set_backlight>:
    1cb0:	1f 93       	push	r17
    1cb2:	18 2f       	mov	r17, r24
    1cb4:	85 e0       	ldi	r24, 0x05	; 5
    1cb6:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    1cba:	81 30       	cpi	r24, 0x01	; 1
    1cbc:	c1 f4       	brne	.+48     	; 0x1cee <LCD_set_backlight+0x3e>
    1cbe:	87 e0       	ldi	r24, 0x07	; 7
    1cc0:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <SPI_set_slave_addr>
    1cc4:	82 e0       	ldi	r24, 0x02	; 2
    1cc6:	6a e0       	ldi	r22, 0x0A	; 10
    1cc8:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <SPI_transmit>
    1ccc:	82 e0       	ldi	r24, 0x02	; 2
    1cce:	61 eb       	ldi	r22, 0xB1	; 177
    1cd0:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <SPI_transmit>
    1cd4:	61 2f       	mov	r22, r17
    1cd6:	11 32       	cpi	r17, 0x21	; 33
    1cd8:	08 f0       	brcs	.+2      	; 0x1cdc <LCD_set_backlight+0x2c>
    1cda:	60 e2       	ldi	r22, 0x20	; 32
    1cdc:	82 e0       	ldi	r24, 0x02	; 2
    1cde:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <SPI_transmit>
    1ce2:	89 ee       	ldi	r24, 0xE9	; 233
    1ce4:	8a 95       	dec	r24
    1ce6:	f1 f7       	brne	.-4      	; 0x1ce4 <LCD_set_backlight+0x34>
    1ce8:	87 e0       	ldi	r24, 0x07	; 7
    1cea:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <SPI_set_slave_addr>
    1cee:	1f 91       	pop	r17
    1cf0:	08 95       	ret

00001cf2 <LCD_set_next_PGC>:
    1cf2:	83 70       	andi	r24, 0x03	; 3
    1cf4:	6f 77       	andi	r22, 0x7F	; 127
    1cf6:	60 93 6f 04 	sts	0x046F, r22
    1cfa:	80 93 70 04 	sts	0x0470, r24
    1cfe:	08 95       	ret

00001d00 <LCD_set_PGC_addr>:
    1d00:	0f 93       	push	r16
    1d02:	1f 93       	push	r17
    1d04:	06 2f       	mov	r16, r22
    1d06:	16 2f       	mov	r17, r22
    1d08:	1f 77       	andi	r17, 0x7F	; 127
    1d0a:	83 70       	andi	r24, 0x03	; 3
    1d0c:	80 6b       	ori	r24, 0xB0	; 176
    1d0e:	60 e0       	ldi	r22, 0x00	; 0
    1d10:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1d14:	12 95       	swap	r17
    1d16:	1f 70       	andi	r17, 0x0F	; 15
    1d18:	81 2f       	mov	r24, r17
    1d1a:	80 61       	ori	r24, 0x10	; 16
    1d1c:	60 e0       	ldi	r22, 0x00	; 0
    1d1e:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1d22:	80 2f       	mov	r24, r16
    1d24:	8f 70       	andi	r24, 0x0F	; 15
    1d26:	60 e0       	ldi	r22, 0x00	; 0
    1d28:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    1d2c:	1f 91       	pop	r17
    1d2e:	0f 91       	pop	r16
    1d30:	08 95       	ret

00001d32 <LCD_write>:
    1d32:	0f 93       	push	r16
    1d34:	1f 93       	push	r17
    1d36:	08 2f       	mov	r16, r24
    1d38:	16 2f       	mov	r17, r22
    1d3a:	85 e0       	ldi	r24, 0x05	; 5
    1d3c:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    1d40:	81 30       	cpi	r24, 0x01	; 1
    1d42:	79 f4       	brne	.+30     	; 0x1d62 <LCD_write+0x30>
    1d44:	11 23       	and	r17, r17
    1d46:	19 f0       	breq	.+6      	; 0x1d4e <LCD_write+0x1c>
    1d48:	11 30       	cpi	r17, 0x01	; 1
    1d4a:	21 f4       	brne	.+8      	; 0x1d54 <LCD_write+0x22>
    1d4c:	02 c0       	rjmp	.+4      	; 0x1d52 <LCD_write+0x20>
    1d4e:	2b 98       	cbi	0x05, 3	; 5
    1d50:	01 c0       	rjmp	.+2      	; 0x1d54 <LCD_write+0x22>
    1d52:	2b 9a       	sbi	0x05, 3	; 5
    1d54:	86 e0       	ldi	r24, 0x06	; 6
    1d56:	8a 95       	dec	r24
    1d58:	f1 f7       	brne	.-4      	; 0x1d56 <LCD_write+0x24>
    1d5a:	80 e0       	ldi	r24, 0x00	; 0
    1d5c:	60 2f       	mov	r22, r16
    1d5e:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <SPI_transmit>
    1d62:	1f 91       	pop	r17
    1d64:	0f 91       	pop	r16
    1d66:	08 95       	ret

00001d68 <LED_clr_pattern>:
    1d68:	1f 93       	push	r17
    1d6a:	18 2f       	mov	r17, r24
    1d6c:	86 e0       	ldi	r24, 0x06	; 6
    1d6e:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    1d72:	81 30       	cpi	r24, 0x01	; 1
    1d74:	19 f4       	brne	.+6      	; 0x1d7c <LED_clr_pattern+0x14>
    1d76:	81 2f       	mov	r24, r17
    1d78:	0e 94 86 18 	call	0x310c	; 0x310c <__LED_clr_pattern>
    1d7c:	1f 91       	pop	r17
    1d7e:	08 95       	ret

00001d80 <LED_open>:
    1d80:	0e 94 8b 18 	call	0x3116	; 0x3116 <__LED_init>
    1d84:	86 e0       	ldi	r24, 0x06	; 6
    1d86:	61 e0       	ldi	r22, 0x01	; 1
    1d88:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    1d8c:	86 e0       	ldi	r24, 0x06	; 6
    1d8e:	91 e0       	ldi	r25, 0x01	; 1
    1d90:	08 95       	ret

00001d92 <LED_set_pattern>:
    1d92:	1f 93       	push	r17
    1d94:	18 2f       	mov	r17, r24
    1d96:	86 e0       	ldi	r24, 0x06	; 6
    1d98:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    1d9c:	81 30       	cpi	r24, 0x01	; 1
    1d9e:	19 f4       	brne	.+6      	; 0x1da6 <LED_set_pattern+0x14>
    1da0:	81 2f       	mov	r24, r17
    1da2:	0e 94 8e 18 	call	0x311c	; 0x311c <__LED_set_pattern>
    1da6:	1f 91       	pop	r17
    1da8:	08 95       	ret

00001daa <SPI_set_slave_addr>:
    1daa:	1f 93       	push	r17
    1dac:	18 2f       	mov	r17, r24
    1dae:	82 e0       	ldi	r24, 0x02	; 2
    1db0:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    1db4:	81 30       	cpi	r24, 0x01	; 1
    1db6:	09 f0       	breq	.+2      	; 0x1dba <SPI_set_slave_addr+0x10>
    1db8:	47 c0       	rjmp	.+142    	; 0x1e48 <SPI_set_slave_addr+0x9e>
    1dba:	91 2f       	mov	r25, r17
    1dbc:	97 70       	andi	r25, 0x07	; 7
    1dbe:	80 91 74 04 	lds	r24, 0x0474
    1dc2:	98 17       	cp	r25, r24
    1dc4:	09 f4       	brne	.+2      	; 0x1dc8 <SPI_set_slave_addr+0x1e>
    1dc6:	40 c0       	rjmp	.+128    	; 0x1e48 <SPI_set_slave_addr+0x9e>
    1dc8:	90 93 74 04 	sts	0x0474, r25
    1dcc:	85 b1       	in	r24, 0x05	; 5
    1dce:	88 7f       	andi	r24, 0xF8	; 248
    1dd0:	89 2b       	or	r24, r25
    1dd2:	85 b9       	out	0x05, r24	; 5
    1dd4:	93 30       	cpi	r25, 0x03	; 3
    1dd6:	11 f1       	breq	.+68     	; 0x1e1c <SPI_set_slave_addr+0x72>
    1dd8:	94 30       	cpi	r25, 0x04	; 4
    1dda:	28 f4       	brcc	.+10     	; 0x1de6 <SPI_set_slave_addr+0x3c>
    1ddc:	91 30       	cpi	r25, 0x01	; 1
    1dde:	51 f0       	breq	.+20     	; 0x1df4 <SPI_set_slave_addr+0x4a>
    1de0:	92 30       	cpi	r25, 0x02	; 2
    1de2:	90 f4       	brcc	.+36     	; 0x1e08 <SPI_set_slave_addr+0x5e>
    1de4:	0c c0       	rjmp	.+24     	; 0x1dfe <SPI_set_slave_addr+0x54>
    1de6:	95 30       	cpi	r25, 0x05	; 5
    1de8:	19 f1       	breq	.+70     	; 0x1e30 <SPI_set_slave_addr+0x86>
    1dea:	95 30       	cpi	r25, 0x05	; 5
    1dec:	e0 f0       	brcs	.+56     	; 0x1e26 <SPI_set_slave_addr+0x7c>
    1dee:	96 30       	cpi	r25, 0x06	; 6
    1df0:	21 f5       	brne	.+72     	; 0x1e3a <SPI_set_slave_addr+0x90>
    1df2:	0f c0       	rjmp	.+30     	; 0x1e12 <SPI_set_slave_addr+0x68>
    1df4:	e0 91 18 02 	lds	r30, 0x0218
    1df8:	f0 91 19 02 	lds	r31, 0x0219
    1dfc:	22 c0       	rjmp	.+68     	; 0x1e42 <SPI_set_slave_addr+0x98>
    1dfe:	e0 91 16 02 	lds	r30, 0x0216
    1e02:	f0 91 17 02 	lds	r31, 0x0217
    1e06:	1d c0       	rjmp	.+58     	; 0x1e42 <SPI_set_slave_addr+0x98>
    1e08:	e0 91 1a 02 	lds	r30, 0x021A
    1e0c:	f0 91 1b 02 	lds	r31, 0x021B
    1e10:	18 c0       	rjmp	.+48     	; 0x1e42 <SPI_set_slave_addr+0x98>
    1e12:	e0 91 22 02 	lds	r30, 0x0222
    1e16:	f0 91 23 02 	lds	r31, 0x0223
    1e1a:	13 c0       	rjmp	.+38     	; 0x1e42 <SPI_set_slave_addr+0x98>
    1e1c:	e0 91 1c 02 	lds	r30, 0x021C
    1e20:	f0 91 1d 02 	lds	r31, 0x021D
    1e24:	0e c0       	rjmp	.+28     	; 0x1e42 <SPI_set_slave_addr+0x98>
    1e26:	e0 91 1e 02 	lds	r30, 0x021E
    1e2a:	f0 91 1f 02 	lds	r31, 0x021F
    1e2e:	09 c0       	rjmp	.+18     	; 0x1e42 <SPI_set_slave_addr+0x98>
    1e30:	e0 91 20 02 	lds	r30, 0x0220
    1e34:	f0 91 21 02 	lds	r31, 0x0221
    1e38:	04 c0       	rjmp	.+8      	; 0x1e42 <SPI_set_slave_addr+0x98>
    1e3a:	e0 91 24 02 	lds	r30, 0x0224
    1e3e:	f0 91 25 02 	lds	r31, 0x0225
    1e42:	30 97       	sbiw	r30, 0x00	; 0
    1e44:	09 f0       	breq	.+2      	; 0x1e48 <SPI_set_slave_addr+0x9e>
    1e46:	09 95       	icall
    1e48:	1f 91       	pop	r17
    1e4a:	08 95       	ret

00001e4c <SPI_transmit>:
    1e4c:	1f 93       	push	r17
    1e4e:	16 2f       	mov	r17, r22
    1e50:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <SPI_set_slave_addr>
    1e54:	82 e0       	ldi	r24, 0x02	; 2
    1e56:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    1e5a:	81 30       	cpi	r24, 0x01	; 1
    1e5c:	21 f4       	brne	.+8      	; 0x1e66 <SPI_transmit+0x1a>
    1e5e:	1e bd       	out	0x2e, r17	; 46
    1e60:	0d b4       	in	r0, 0x2d	; 45
    1e62:	07 fe       	sbrs	r0, 7
    1e64:	fd cf       	rjmp	.-6      	; 0x1e60 <SPI_transmit+0x14>
    1e66:	1f 91       	pop	r17
    1e68:	08 95       	ret

00001e6a <__SPKR_set_up_freq_LUT>:
    1e6a:	0f 93       	push	r16
    1e6c:	1f 93       	push	r17
    1e6e:	cf 93       	push	r28
    1e70:	df 93       	push	r29
    1e72:	80 e2       	ldi	r24, 0x20	; 32
    1e74:	91 e0       	ldi	r25, 0x01	; 1
    1e76:	0e 94 32 28 	call	0x5064	; 0x5064 <malloc>
    1e7a:	9c 01       	movw	r18, r24
    1e7c:	90 93 35 02 	sts	0x0235, r25
    1e80:	80 93 34 02 	sts	0x0234, r24
    1e84:	89 2b       	or	r24, r25
    1e86:	11 f4       	brne	.+4      	; 0x1e8c <__SPKR_set_up_freq_LUT+0x22>
    1e88:	80 e0       	ldi	r24, 0x00	; 0
    1e8a:	39 c0       	rjmp	.+114    	; 0x1efe <__SPKR_set_up_freq_LUT+0x94>
    1e8c:	89 01       	movw	r16, r18
    1e8e:	c0 e0       	ldi	r28, 0x00	; 0
    1e90:	d0 e0       	ldi	r29, 0x00	; 0
    1e92:	be 01       	movw	r22, r28
    1e94:	80 e0       	ldi	r24, 0x00	; 0
    1e96:	90 e0       	ldi	r25, 0x00	; 0
    1e98:	0e 94 73 21 	call	0x42e6	; 0x42e6 <__floatunsisf>
    1e9c:	20 e0       	ldi	r18, 0x00	; 0
    1e9e:	30 e0       	ldi	r19, 0x00	; 0
    1ea0:	40 ea       	ldi	r20, 0xA0	; 160
    1ea2:	51 e4       	ldi	r21, 0x41	; 65
    1ea4:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__divsf3>
    1ea8:	27 ef       	ldi	r18, 0xF7	; 247
    1eaa:	35 e7       	ldi	r19, 0x75	; 117
    1eac:	40 e0       	ldi	r20, 0x00	; 0
    1eae:	5f e3       	ldi	r21, 0x3F	; 63
    1eb0:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    1eb4:	9b 01       	movw	r18, r22
    1eb6:	ac 01       	movw	r20, r24
    1eb8:	60 e0       	ldi	r22, 0x00	; 0
    1eba:	70 e0       	ldi	r23, 0x00	; 0
    1ebc:	80 e2       	ldi	r24, 0x20	; 32
    1ebe:	91 e4       	ldi	r25, 0x41	; 65
    1ec0:	0e 94 c6 22 	call	0x458c	; 0x458c <pow>
    1ec4:	9b 01       	movw	r18, r22
    1ec6:	ac 01       	movw	r20, r24
    1ec8:	ca 01       	movw	r24, r20
    1eca:	b9 01       	movw	r22, r18
    1ecc:	2d ec       	ldi	r18, 0xCD	; 205
    1ece:	3c ec       	ldi	r19, 0xCC	; 204
    1ed0:	42 e8       	ldi	r20, 0x82	; 130
    1ed2:	51 e4       	ldi	r21, 0x41	; 65
    1ed4:	0e 94 63 22 	call	0x44c6	; 0x44c6 <__mulsf3>
    1ed8:	0e 94 29 22 	call	0x4452	; 0x4452 <lrint>
    1edc:	2a e0       	ldi	r18, 0x0A	; 10
    1ede:	30 e0       	ldi	r19, 0x00	; 0
    1ee0:	40 e0       	ldi	r20, 0x00	; 0
    1ee2:	50 e0       	ldi	r21, 0x00	; 0
    1ee4:	0e 94 93 27 	call	0x4f26	; 0x4f26 <__mulsi3>
    1ee8:	f8 01       	movw	r30, r16
    1eea:	61 93       	st	Z+, r22
    1eec:	71 93       	st	Z+, r23
    1eee:	81 93       	st	Z+, r24
    1ef0:	91 93       	st	Z+, r25
    1ef2:	8f 01       	movw	r16, r30
    1ef4:	21 96       	adiw	r28, 0x01	; 1
    1ef6:	c8 34       	cpi	r28, 0x48	; 72
    1ef8:	d1 05       	cpc	r29, r1
    1efa:	59 f6       	brne	.-106    	; 0x1e92 <__SPKR_set_up_freq_LUT+0x28>
    1efc:	81 e0       	ldi	r24, 0x01	; 1
    1efe:	df 91       	pop	r29
    1f00:	cf 91       	pop	r28
    1f02:	1f 91       	pop	r17
    1f04:	0f 91       	pop	r16
    1f06:	08 95       	ret

00001f08 <__SPKR_open_beep_mode>:
    1f08:	8a e0       	ldi	r24, 0x0A	; 10
    1f0a:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    1f0e:	88 23       	and	r24, r24
    1f10:	71 f4       	brne	.+28     	; 0x1f2e <__SPKR_open_beep_mode+0x26>
    1f12:	10 92 31 02 	sts	0x0231, r1
    1f16:	10 92 30 02 	sts	0x0230, r1
    1f1a:	81 e0       	ldi	r24, 0x01	; 1
    1f1c:	0e 94 b7 19 	call	0x336e	; 0x336e <__SPKR_init>
    1f20:	81 e0       	ldi	r24, 0x01	; 1
    1f22:	80 93 27 02 	sts	0x0227, r24
    1f26:	8a e0       	ldi	r24, 0x0A	; 10
    1f28:	61 e0       	ldi	r22, 0x01	; 1
    1f2a:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    1f2e:	8a e0       	ldi	r24, 0x0A	; 10
    1f30:	91 e0       	ldi	r25, 0x01	; 1
    1f32:	08 95       	ret

00001f34 <__SPKR_open_tone_mode>:
    1f34:	1f 93       	push	r17
    1f36:	8b e0       	ldi	r24, 0x0B	; 11
    1f38:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    1f3c:	88 23       	and	r24, r24
    1f3e:	11 f0       	breq	.+4      	; 0x1f44 <__SPKR_open_tone_mode+0x10>
    1f40:	90 e0       	ldi	r25, 0x00	; 0
    1f42:	21 c0       	rjmp	.+66     	; 0x1f86 <__SPKR_open_tone_mode+0x52>
    1f44:	89 e0       	ldi	r24, 0x09	; 9
    1f46:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    1f4a:	88 23       	and	r24, r24
    1f4c:	d9 f4       	brne	.+54     	; 0x1f84 <__SPKR_open_tone_mode+0x50>
    1f4e:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <__SPKR_set_up_freq_LUT>
    1f52:	18 2f       	mov	r17, r24
    1f54:	81 30       	cpi	r24, 0x01	; 1
    1f56:	b1 f4       	brne	.+44     	; 0x1f84 <__SPKR_open_tone_mode+0x50>
    1f58:	10 92 28 02 	sts	0x0228, r1
    1f5c:	10 92 29 02 	sts	0x0229, r1
    1f60:	10 92 2a 02 	sts	0x022A, r1
    1f64:	10 92 2b 02 	sts	0x022B, r1
    1f68:	8d e0       	ldi	r24, 0x0D	; 13
    1f6a:	6a e3       	ldi	r22, 0x3A	; 58
    1f6c:	79 e1       	ldi	r23, 0x19	; 25
    1f6e:	0e 94 af 17 	call	0x2f5e	; 0x2f5e <ISR_attach>
    1f72:	82 e0       	ldi	r24, 0x02	; 2
    1f74:	0e 94 b7 19 	call	0x336e	; 0x336e <__SPKR_init>
    1f78:	10 93 26 02 	sts	0x0226, r17
    1f7c:	89 e0       	ldi	r24, 0x09	; 9
    1f7e:	61 e0       	ldi	r22, 0x01	; 1
    1f80:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    1f84:	91 e0       	ldi	r25, 0x01	; 1
    1f86:	89 e0       	ldi	r24, 0x09	; 9
    1f88:	1f 91       	pop	r17
    1f8a:	08 95       	ret

00001f8c <SPKR_open>:
    1f8c:	81 30       	cpi	r24, 0x01	; 1
    1f8e:	29 f0       	breq	.+10     	; 0x1f9a <SPKR_open+0xe>
    1f90:	82 30       	cpi	r24, 0x02	; 2
    1f92:	31 f0       	breq	.+12     	; 0x1fa0 <SPKR_open+0x14>
    1f94:	90 e0       	ldi	r25, 0x00	; 0
    1f96:	89 e0       	ldi	r24, 0x09	; 9
    1f98:	08 95       	ret
    1f9a:	0e 94 84 0f 	call	0x1f08	; 0x1f08 <__SPKR_open_beep_mode>
    1f9e:	08 95       	ret
    1fa0:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__SPKR_open_tone_mode>
    1fa4:	08 95       	ret

00001fa6 <STEPPER_get_nSteps>:
    1fa6:	80 91 35 04 	lds	r24, 0x0435
    1faa:	90 91 36 04 	lds	r25, 0x0436
    1fae:	20 91 37 04 	lds	r18, 0x0437
    1fb2:	30 91 38 04 	lds	r19, 0x0438
    1fb6:	bc 01       	movw	r22, r24
    1fb8:	c9 01       	movw	r24, r18
    1fba:	08 95       	ret

00001fbc <STEPPER_stepmode>:
    1fbc:	2f 92       	push	r2
    1fbe:	3f 92       	push	r3
    1fc0:	4f 92       	push	r4
    1fc2:	5f 92       	push	r5
    1fc4:	6f 92       	push	r6
    1fc6:	7f 92       	push	r7
    1fc8:	8f 92       	push	r8
    1fca:	9f 92       	push	r9
    1fcc:	af 92       	push	r10
    1fce:	bf 92       	push	r11
    1fd0:	cf 92       	push	r12
    1fd2:	df 92       	push	r13
    1fd4:	ef 92       	push	r14
    1fd6:	ff 92       	push	r15
    1fd8:	0f 93       	push	r16
    1fda:	1f 93       	push	r17
    1fdc:	df 93       	push	r29
    1fde:	cf 93       	push	r28
    1fe0:	cd b7       	in	r28, 0x3d	; 61
    1fe2:	de b7       	in	r29, 0x3e	; 62
    1fe4:	58 2e       	mov	r5, r24
    1fe6:	96 2e       	mov	r9, r22
    1fe8:	44 2e       	mov	r4, r20
    1fea:	39 01       	movw	r6, r18
    1fec:	3c 2c       	mov	r3, r12
    1fee:	c9 8c       	ldd	r12, Y+25	; 0x19
    1ff0:	da 8c       	ldd	r13, Y+26	; 0x1a
    1ff2:	2b 8c       	ldd	r2, Y+27	; 0x1b
    1ff4:	81 e0       	ldi	r24, 0x01	; 1
    1ff6:	68 17       	cp	r22, r24
    1ff8:	39 f1       	breq	.+78     	; 0x2048 <STEPPER_stepmode+0x8c>
    1ffa:	68 17       	cp	r22, r24
    1ffc:	28 f0       	brcs	.+10     	; 0x2008 <STEPPER_stepmode+0x4c>
    1ffe:	92 e0       	ldi	r25, 0x02	; 2
    2000:	69 17       	cp	r22, r25
    2002:	09 f0       	breq	.+2      	; 0x2006 <STEPPER_stepmode+0x4a>
    2004:	85 c0       	rjmp	.+266    	; 0x2110 <STEPPER_stepmode+0x154>
    2006:	49 c0       	rjmp	.+146    	; 0x209a <STEPPER_stepmode+0xde>
    2008:	80 e0       	ldi	r24, 0x00	; 0
    200a:	61 e0       	ldi	r22, 0x01	; 1
    200c:	0e 94 e7 11 	call	0x23ce	; 0x23ce <STEPPER_set_mode>
    2010:	80 e0       	ldi	r24, 0x00	; 0
    2012:	b7 01       	movw	r22, r14
    2014:	0e 94 b0 11 	call	0x2360	; 0x2360 <STEPPER_set_accel>
    2018:	80 e0       	ldi	r24, 0x00	; 0
    201a:	64 2d       	mov	r22, r4
    201c:	a3 01       	movw	r20, r6
    201e:	98 01       	movw	r18, r16
    2020:	03 2d       	mov	r16, r3
    2022:	ee 24       	eor	r14, r14
    2024:	e3 94       	inc	r14
    2026:	ea e5       	ldi	r30, 0x5A	; 90
    2028:	ce 2e       	mov	r12, r30
    202a:	e4 e0       	ldi	r30, 0x04	; 4
    202c:	de 2e       	mov	r13, r30
    202e:	0e 94 1e 12 	call	0x243c	; 0x243c <STEPPER_step>
    2032:	55 20       	and	r5, r5
    2034:	09 f0       	breq	.+2      	; 0x2038 <STEPPER_stepmode+0x7c>
    2036:	6c c0       	rjmp	.+216    	; 0x2110 <STEPPER_stepmode+0x154>
    2038:	00 d0       	rcall	.+0      	; 0x203a <STEPPER_stepmode+0x7e>
    203a:	0f 92       	push	r0
    203c:	ed b7       	in	r30, 0x3d	; 61
    203e:	fe b7       	in	r31, 0x3e	; 62
    2040:	11 82       	std	Z+1, r1	; 0x01
    2042:	b3 82       	std	Z+3, r11	; 0x03
    2044:	a2 82       	std	Z+2, r10	; 0x02
    2046:	23 c0       	rjmp	.+70     	; 0x208e <STEPPER_stepmode+0xd2>
    2048:	81 e0       	ldi	r24, 0x01	; 1
    204a:	61 e0       	ldi	r22, 0x01	; 1
    204c:	0e 94 e7 11 	call	0x23ce	; 0x23ce <STEPPER_set_mode>
    2050:	81 e0       	ldi	r24, 0x01	; 1
    2052:	b6 01       	movw	r22, r12
    2054:	0e 94 b0 11 	call	0x2360	; 0x2360 <STEPPER_set_accel>
    2058:	81 e0       	ldi	r24, 0x01	; 1
    205a:	68 2d       	mov	r22, r8
    205c:	4d 89       	ldd	r20, Y+21	; 0x15
    205e:	5e 89       	ldd	r21, Y+22	; 0x16
    2060:	2f 89       	ldd	r18, Y+23	; 0x17
    2062:	38 8d       	ldd	r19, Y+24	; 0x18
    2064:	02 2d       	mov	r16, r2
    2066:	ee 24       	eor	r14, r14
    2068:	e3 94       	inc	r14
    206a:	7a e5       	ldi	r23, 0x5A	; 90
    206c:	c7 2e       	mov	r12, r23
    206e:	74 e0       	ldi	r23, 0x04	; 4
    2070:	d7 2e       	mov	r13, r23
    2072:	0e 94 1e 12 	call	0x243c	; 0x243c <STEPPER_step>
    2076:	55 20       	and	r5, r5
    2078:	09 f0       	breq	.+2      	; 0x207c <STEPPER_stepmode+0xc0>
    207a:	4a c0       	rjmp	.+148    	; 0x2110 <STEPPER_stepmode+0x154>
    207c:	00 d0       	rcall	.+0      	; 0x207e <STEPPER_stepmode+0xc2>
    207e:	0f 92       	push	r0
    2080:	ed b7       	in	r30, 0x3d	; 61
    2082:	fe b7       	in	r31, 0x3e	; 62
    2084:	91 82       	std	Z+1, r9	; 0x01
    2086:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2088:	9d 8d       	ldd	r25, Y+29	; 0x1d
    208a:	93 83       	std	Z+3, r25	; 0x03
    208c:	82 83       	std	Z+2, r24	; 0x02
    208e:	0e 94 aa 12 	call	0x2554	; 0x2554 <STEPPER_wait_and_then>
    2092:	0f 90       	pop	r0
    2094:	0f 90       	pop	r0
    2096:	0f 90       	pop	r0
    2098:	3b c0       	rjmp	.+118    	; 0x2110 <STEPPER_stepmode+0x154>
    209a:	82 e0       	ldi	r24, 0x02	; 2
    209c:	61 e0       	ldi	r22, 0x01	; 1
    209e:	0e 94 e7 11 	call	0x23ce	; 0x23ce <STEPPER_set_mode>
    20a2:	80 e0       	ldi	r24, 0x00	; 0
    20a4:	b7 01       	movw	r22, r14
    20a6:	0e 94 b0 11 	call	0x2360	; 0x2360 <STEPPER_set_accel>
    20aa:	81 e0       	ldi	r24, 0x01	; 1
    20ac:	b6 01       	movw	r22, r12
    20ae:	0e 94 b0 11 	call	0x2360	; 0x2360 <STEPPER_set_accel>
    20b2:	80 e0       	ldi	r24, 0x00	; 0
    20b4:	64 2d       	mov	r22, r4
    20b6:	a3 01       	movw	r20, r6
    20b8:	98 01       	movw	r18, r16
    20ba:	03 2d       	mov	r16, r3
    20bc:	ee 24       	eor	r14, r14
    20be:	e3 94       	inc	r14
    20c0:	9a e5       	ldi	r25, 0x5A	; 90
    20c2:	c9 2e       	mov	r12, r25
    20c4:	94 e0       	ldi	r25, 0x04	; 4
    20c6:	d9 2e       	mov	r13, r25
    20c8:	0e 94 1e 12 	call	0x243c	; 0x243c <STEPPER_step>
    20cc:	81 e0       	ldi	r24, 0x01	; 1
    20ce:	68 2d       	mov	r22, r8
    20d0:	4d 89       	ldd	r20, Y+21	; 0x15
    20d2:	5e 89       	ldd	r21, Y+22	; 0x16
    20d4:	2f 89       	ldd	r18, Y+23	; 0x17
    20d6:	38 8d       	ldd	r19, Y+24	; 0x18
    20d8:	02 2d       	mov	r16, r2
    20da:	0e 94 1e 12 	call	0x243c	; 0x243c <STEPPER_step>
    20de:	55 20       	and	r5, r5
    20e0:	b9 f4       	brne	.+46     	; 0x2110 <STEPPER_stepmode+0x154>
    20e2:	00 d0       	rcall	.+0      	; 0x20e4 <STEPPER_stepmode+0x128>
    20e4:	00 d0       	rcall	.+0      	; 0x20e6 <STEPPER_stepmode+0x12a>
    20e6:	0f 92       	push	r0
    20e8:	ad b7       	in	r26, 0x3d	; 61
    20ea:	be b7       	in	r27, 0x3e	; 62
    20ec:	11 96       	adiw	r26, 0x01	; 1
    20ee:	ed b7       	in	r30, 0x3d	; 61
    20f0:	fe b7       	in	r31, 0x3e	; 62
    20f2:	91 82       	std	Z+1, r9	; 0x01
    20f4:	fd 01       	movw	r30, r26
    20f6:	b2 82       	std	Z+2, r11	; 0x02
    20f8:	a1 82       	std	Z+1, r10	; 0x01
    20fa:	8c 8d       	ldd	r24, Y+28	; 0x1c
    20fc:	9d 8d       	ldd	r25, Y+29	; 0x1d
    20fe:	94 83       	std	Z+4, r25	; 0x04
    2100:	83 83       	std	Z+3, r24	; 0x03
    2102:	0e 94 aa 12 	call	0x2554	; 0x2554 <STEPPER_wait_and_then>
    2106:	0f 90       	pop	r0
    2108:	0f 90       	pop	r0
    210a:	0f 90       	pop	r0
    210c:	0f 90       	pop	r0
    210e:	0f 90       	pop	r0
    2110:	cf 91       	pop	r28
    2112:	df 91       	pop	r29
    2114:	1f 91       	pop	r17
    2116:	0f 91       	pop	r16
    2118:	ff 90       	pop	r15
    211a:	ef 90       	pop	r14
    211c:	df 90       	pop	r13
    211e:	cf 90       	pop	r12
    2120:	bf 90       	pop	r11
    2122:	af 90       	pop	r10
    2124:	9f 90       	pop	r9
    2126:	8f 90       	pop	r8
    2128:	7f 90       	pop	r7
    212a:	6f 90       	pop	r6
    212c:	5f 90       	pop	r5
    212e:	4f 90       	pop	r4
    2130:	3f 90       	pop	r3
    2132:	2f 90       	pop	r2
    2134:	08 95       	ret

00002136 <STEPPER_move>:
    2136:	6f 92       	push	r6
    2138:	7f 92       	push	r7
    213a:	8f 92       	push	r8
    213c:	9f 92       	push	r9
    213e:	af 92       	push	r10
    2140:	bf 92       	push	r11
    2142:	cf 92       	push	r12
    2144:	df 92       	push	r13
    2146:	ef 92       	push	r14
    2148:	ff 92       	push	r15
    214a:	0f 93       	push	r16
    214c:	1f 93       	push	r17
    214e:	df 93       	push	r29
    2150:	cf 93       	push	r28
    2152:	cd b7       	in	r28, 0x3d	; 61
    2154:	de b7       	in	r29, 0x3e	; 62
    2156:	94 2e       	mov	r9, r20
    2158:	7c 2d       	mov	r23, r12
    215a:	d5 01       	movw	r26, r10
    215c:	49 89       	ldd	r20, Y+17	; 0x11
    215e:	5a 89       	ldd	r21, Y+18	; 0x12
    2160:	ab 88       	ldd	r10, Y+19	; 0x13
    2162:	bc 88       	ldd	r11, Y+20	; 0x14
    2164:	cd 88       	ldd	r12, Y+21	; 0x15
    2166:	de 88       	ldd	r13, Y+22	; 0x16
    2168:	9f 89       	ldd	r25, Y+23	; 0x17
    216a:	81 30       	cpi	r24, 0x01	; 1
    216c:	09 f4       	brne	.+2      	; 0x2170 <STEPPER_move+0x3a>
    216e:	57 c0       	rjmp	.+174    	; 0x221e <STEPPER_move+0xe8>
    2170:	81 30       	cpi	r24, 0x01	; 1
    2172:	b8 f1       	brcs	.+110    	; 0x21e2 <STEPPER_move+0xac>
    2174:	82 30       	cpi	r24, 0x02	; 2
    2176:	09 f0       	breq	.+2      	; 0x217a <STEPPER_move+0x44>
    2178:	76 c0       	rjmp	.+236    	; 0x2266 <STEPPER_move+0x130>
    217a:	61 30       	cpi	r22, 0x01	; 1
    217c:	91 f0       	breq	.+36     	; 0x21a2 <STEPPER_move+0x6c>
    217e:	61 30       	cpi	r22, 0x01	; 1
    2180:	20 f0       	brcs	.+8      	; 0x218a <STEPPER_move+0x54>
    2182:	62 30       	cpi	r22, 0x02	; 2
    2184:	09 f0       	breq	.+2      	; 0x2188 <STEPPER_move+0x52>
    2186:	6f c0       	rjmp	.+222    	; 0x2266 <STEPPER_move+0x130>
    2188:	15 c0       	rjmp	.+42     	; 0x21b4 <STEPPER_move+0x7e>
    218a:	80 e0       	ldi	r24, 0x00	; 0
    218c:	60 e0       	ldi	r22, 0x00	; 0
    218e:	0e 94 e7 11 	call	0x23ce	; 0x23ce <STEPPER_set_mode>
    2192:	80 e0       	ldi	r24, 0x00	; 0
    2194:	b7 01       	movw	r22, r14
    2196:	0e 94 b0 11 	call	0x2360	; 0x2360 <STEPPER_set_accel>
    219a:	80 e0       	ldi	r24, 0x00	; 0
    219c:	69 2d       	mov	r22, r9
    219e:	a8 01       	movw	r20, r16
    21a0:	1d c0       	rjmp	.+58     	; 0x21dc <STEPPER_move+0xa6>
    21a2:	81 e0       	ldi	r24, 0x01	; 1
    21a4:	60 e0       	ldi	r22, 0x00	; 0
    21a6:	0e 94 e7 11 	call	0x23ce	; 0x23ce <STEPPER_set_mode>
    21aa:	81 e0       	ldi	r24, 0x01	; 1
    21ac:	b6 01       	movw	r22, r12
    21ae:	0e 94 b0 11 	call	0x2360	; 0x2360 <STEPPER_set_accel>
    21b2:	11 c0       	rjmp	.+34     	; 0x21d6 <STEPPER_move+0xa0>
    21b4:	82 e0       	ldi	r24, 0x02	; 2
    21b6:	60 e0       	ldi	r22, 0x00	; 0
    21b8:	0e 94 e7 11 	call	0x23ce	; 0x23ce <STEPPER_set_mode>
    21bc:	80 e0       	ldi	r24, 0x00	; 0
    21be:	b7 01       	movw	r22, r14
    21c0:	0e 94 b0 11 	call	0x2360	; 0x2360 <STEPPER_set_accel>
    21c4:	81 e0       	ldi	r24, 0x01	; 1
    21c6:	b6 01       	movw	r22, r12
    21c8:	0e 94 b0 11 	call	0x2360	; 0x2360 <STEPPER_set_accel>
    21cc:	80 e0       	ldi	r24, 0x00	; 0
    21ce:	69 2d       	mov	r22, r9
    21d0:	a8 01       	movw	r20, r16
    21d2:	0e 94 99 11 	call	0x2332	; 0x2332 <STEPPER_run>
    21d6:	81 e0       	ldi	r24, 0x01	; 1
    21d8:	68 2d       	mov	r22, r8
    21da:	a5 01       	movw	r20, r10
    21dc:	0e 94 99 11 	call	0x2332	; 0x2332 <STEPPER_run>
    21e0:	42 c0       	rjmp	.+132    	; 0x2266 <STEPPER_move+0x130>
    21e2:	ed b7       	in	r30, 0x3d	; 61
    21e4:	fe b7       	in	r31, 0x3e	; 62
    21e6:	39 97       	sbiw	r30, 0x09	; 9
    21e8:	0f b6       	in	r0, 0x3f	; 63
    21ea:	f8 94       	cli
    21ec:	fe bf       	out	0x3e, r31	; 62
    21ee:	0f be       	out	0x3f, r0	; 63
    21f0:	ed bf       	out	0x3d, r30	; 61
    21f2:	6d b6       	in	r6, 0x3d	; 61
    21f4:	7e b6       	in	r7, 0x3e	; 62
    21f6:	08 94       	sec
    21f8:	61 1c       	adc	r6, r1
    21fa:	71 1c       	adc	r7, r1
    21fc:	52 83       	std	Z+2, r21	; 0x02
    21fe:	41 83       	std	Z+1, r20	; 0x01
    2200:	f3 01       	movw	r30, r6
    2202:	b3 82       	std	Z+3, r11	; 0x03
    2204:	a2 82       	std	Z+2, r10	; 0x02
    2206:	d5 82       	std	Z+5, r13	; 0x05
    2208:	c4 82       	std	Z+4, r12	; 0x04
    220a:	96 83       	std	Z+6, r25	; 0x06
    220c:	88 8d       	ldd	r24, Y+24	; 0x18
    220e:	99 8d       	ldd	r25, Y+25	; 0x19
    2210:	90 87       	std	Z+8, r25	; 0x08
    2212:	87 83       	std	Z+7, r24	; 0x07
    2214:	80 e0       	ldi	r24, 0x00	; 0
    2216:	49 2d       	mov	r20, r9
    2218:	c7 2e       	mov	r12, r23
    221a:	5d 01       	movw	r10, r26
    221c:	1a c0       	rjmp	.+52     	; 0x2252 <STEPPER_move+0x11c>
    221e:	ed b7       	in	r30, 0x3d	; 61
    2220:	fe b7       	in	r31, 0x3e	; 62
    2222:	39 97       	sbiw	r30, 0x09	; 9
    2224:	0f b6       	in	r0, 0x3f	; 63
    2226:	f8 94       	cli
    2228:	fe bf       	out	0x3e, r31	; 62
    222a:	0f be       	out	0x3f, r0	; 63
    222c:	ed bf       	out	0x3d, r30	; 61
    222e:	ad b7       	in	r26, 0x3d	; 61
    2230:	be b7       	in	r27, 0x3e	; 62
    2232:	11 96       	adiw	r26, 0x01	; 1
    2234:	52 83       	std	Z+2, r21	; 0x02
    2236:	41 83       	std	Z+1, r20	; 0x01
    2238:	fd 01       	movw	r30, r26
    223a:	b3 82       	std	Z+3, r11	; 0x03
    223c:	a2 82       	std	Z+2, r10	; 0x02
    223e:	d5 82       	std	Z+5, r13	; 0x05
    2240:	c4 82       	std	Z+4, r12	; 0x04
    2242:	96 83       	std	Z+6, r25	; 0x06
    2244:	10 86       	std	Z+8, r1	; 0x08
    2246:	17 82       	std	Z+7, r1	; 0x07
    2248:	81 e0       	ldi	r24, 0x01	; 1
    224a:	49 2d       	mov	r20, r9
    224c:	c7 2e       	mov	r12, r23
    224e:	aa 24       	eor	r10, r10
    2250:	bb 24       	eor	r11, r11
    2252:	0e 94 de 0f 	call	0x1fbc	; 0x1fbc <STEPPER_stepmode>
    2256:	8d b7       	in	r24, 0x3d	; 61
    2258:	9e b7       	in	r25, 0x3e	; 62
    225a:	09 96       	adiw	r24, 0x09	; 9
    225c:	0f b6       	in	r0, 0x3f	; 63
    225e:	f8 94       	cli
    2260:	9e bf       	out	0x3e, r25	; 62
    2262:	0f be       	out	0x3f, r0	; 63
    2264:	8d bf       	out	0x3d, r24	; 61
    2266:	cf 91       	pop	r28
    2268:	df 91       	pop	r29
    226a:	1f 91       	pop	r17
    226c:	0f 91       	pop	r16
    226e:	ff 90       	pop	r15
    2270:	ef 90       	pop	r14
    2272:	df 90       	pop	r13
    2274:	cf 90       	pop	r12
    2276:	bf 90       	pop	r11
    2278:	af 90       	pop	r10
    227a:	9f 90       	pop	r9
    227c:	8f 90       	pop	r8
    227e:	7f 90       	pop	r7
    2280:	6f 90       	pop	r6
    2282:	08 95       	ret

00002284 <STEPPER_open>:
    2284:	0e 94 49 1a 	call	0x3492	; 0x3492 <__STEPPER_init>
    2288:	81 e0       	ldi	r24, 0x01	; 1
    228a:	80 93 59 04 	sts	0x0459, r24
    228e:	e3 e2       	ldi	r30, 0x23	; 35
    2290:	f4 e0       	ldi	r31, 0x04	; 4
    2292:	11 92       	st	Z+, r1
    2294:	11 92       	st	Z+, r1
    2296:	11 82       	std	Z+1, r1	; 0x01
    2298:	10 82       	st	Z, r1
    229a:	32 96       	adiw	r30, 0x02	; 2
    229c:	11 82       	std	Z+1, r1	; 0x01
    229e:	10 82       	st	Z, r1
    22a0:	32 96       	adiw	r30, 0x02	; 2
    22a2:	11 82       	std	Z+1, r1	; 0x01
    22a4:	10 82       	st	Z, r1
    22a6:	32 96       	adiw	r30, 0x02	; 2
    22a8:	11 82       	std	Z+1, r1	; 0x01
    22aa:	10 82       	st	Z, r1
    22ac:	32 96       	adiw	r30, 0x02	; 2
    22ae:	11 82       	std	Z+1, r1	; 0x01
    22b0:	10 82       	st	Z, r1
    22b2:	32 96       	adiw	r30, 0x02	; 2
    22b4:	11 82       	std	Z+1, r1	; 0x01
    22b6:	10 82       	st	Z, r1
    22b8:	32 96       	adiw	r30, 0x02	; 2
    22ba:	11 82       	std	Z+1, r1	; 0x01
    22bc:	10 82       	st	Z, r1
    22be:	32 96       	adiw	r30, 0x02	; 2
    22c0:	11 82       	std	Z+1, r1	; 0x01
    22c2:	10 82       	st	Z, r1
    22c4:	32 96       	adiw	r30, 0x02	; 2
    22c6:	11 82       	std	Z+1, r1	; 0x01
    22c8:	10 82       	st	Z, r1
    22ca:	32 96       	adiw	r30, 0x02	; 2
    22cc:	11 82       	std	Z+1, r1	; 0x01
    22ce:	10 82       	st	Z, r1
    22d0:	32 96       	adiw	r30, 0x02	; 2
    22d2:	11 82       	std	Z+1, r1	; 0x01
    22d4:	10 82       	st	Z, r1
    22d6:	32 96       	adiw	r30, 0x02	; 2
    22d8:	11 82       	std	Z+1, r1	; 0x01
    22da:	10 82       	st	Z, r1
    22dc:	36 96       	adiw	r30, 0x06	; 6
    22de:	11 92       	st	Z+, r1
    22e0:	11 92       	st	Z+, r1
    22e2:	11 92       	st	Z+, r1
    22e4:	10 82       	st	Z, r1
    22e6:	32 96       	adiw	r30, 0x02	; 2
    22e8:	11 92       	st	Z+, r1
    22ea:	11 92       	st	Z+, r1
    22ec:	11 92       	st	Z+, r1
    22ee:	11 92       	st	Z+, r1
    22f0:	11 92       	st	Z+, r1
    22f2:	11 92       	st	Z+, r1
    22f4:	11 92       	st	Z+, r1
    22f6:	11 82       	std	Z+1, r1	; 0x01
    22f8:	10 82       	st	Z, r1
    22fa:	32 96       	adiw	r30, 0x02	; 2
    22fc:	11 82       	std	Z+1, r1	; 0x01
    22fe:	10 82       	st	Z, r1
    2300:	32 96       	adiw	r30, 0x02	; 2
    2302:	11 82       	std	Z+1, r1	; 0x01
    2304:	10 82       	st	Z, r1
    2306:	32 96       	adiw	r30, 0x02	; 2
    2308:	11 82       	std	Z+1, r1	; 0x01
    230a:	10 82       	st	Z, r1
    230c:	76 97       	sbiw	r30, 0x16	; 22
    230e:	11 82       	std	Z+1, r1	; 0x01
    2310:	10 82       	st	Z, r1
    2312:	32 96       	adiw	r30, 0x02	; 2
    2314:	11 82       	std	Z+1, r1	; 0x01
    2316:	10 82       	st	Z, r1
    2318:	10 92 58 04 	sts	0x0458, r1
    231c:	10 92 57 04 	sts	0x0457, r1
    2320:	10 92 59 04 	sts	0x0459, r1
    2324:	87 e0       	ldi	r24, 0x07	; 7
    2326:	61 e0       	ldi	r22, 0x01	; 1
    2328:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    232c:	87 e0       	ldi	r24, 0x07	; 7
    232e:	91 e0       	ldi	r25, 0x01	; 1
    2330:	08 95       	ret

00002332 <STEPPER_run>:
    2332:	ef 92       	push	r14
    2334:	ff 92       	push	r15
    2336:	0f 93       	push	r16
    2338:	1f 93       	push	r17
    233a:	18 2f       	mov	r17, r24
    233c:	06 2f       	mov	r16, r22
    233e:	7a 01       	movw	r14, r20
    2340:	60 e0       	ldi	r22, 0x00	; 0
    2342:	0e 94 e7 11 	call	0x23ce	; 0x23ce <STEPPER_set_mode>
    2346:	81 2f       	mov	r24, r17
    2348:	60 2f       	mov	r22, r16
    234a:	0e 94 d2 11 	call	0x23a4	; 0x23a4 <STEPPER_set_dir>
    234e:	81 2f       	mov	r24, r17
    2350:	b7 01       	movw	r22, r14
    2352:	0e 94 fc 11 	call	0x23f8	; 0x23f8 <STEPPER_set_speed>
    2356:	1f 91       	pop	r17
    2358:	0f 91       	pop	r16
    235a:	ff 90       	pop	r15
    235c:	ef 90       	pop	r14
    235e:	08 95       	ret

00002360 <STEPPER_set_accel>:
    2360:	48 2f       	mov	r20, r24
    2362:	81 e0       	ldi	r24, 0x01	; 1
    2364:	80 93 59 04 	sts	0x0459, r24
    2368:	cb 01       	movw	r24, r22
    236a:	23 e0       	ldi	r18, 0x03	; 3
    236c:	69 3e       	cpi	r22, 0xE9	; 233
    236e:	72 07       	cpc	r23, r18
    2370:	10 f0       	brcs	.+4      	; 0x2376 <STEPPER_set_accel+0x16>
    2372:	88 ee       	ldi	r24, 0xE8	; 232
    2374:	93 e0       	ldi	r25, 0x03	; 3
    2376:	41 30       	cpi	r20, 0x01	; 1
    2378:	71 f0       	breq	.+28     	; 0x2396 <STEPPER_set_accel+0x36>
    237a:	41 30       	cpi	r20, 0x01	; 1
    237c:	18 f0       	brcs	.+6      	; 0x2384 <STEPPER_set_accel+0x24>
    237e:	42 30       	cpi	r20, 0x02	; 2
    2380:	71 f4       	brne	.+28     	; 0x239e <STEPPER_set_accel+0x3e>
    2382:	05 c0       	rjmp	.+10     	; 0x238e <STEPPER_set_accel+0x2e>
    2384:	90 93 2e 04 	sts	0x042E, r25
    2388:	80 93 2d 04 	sts	0x042D, r24
    238c:	08 c0       	rjmp	.+16     	; 0x239e <STEPPER_set_accel+0x3e>
    238e:	90 93 2e 04 	sts	0x042E, r25
    2392:	80 93 2d 04 	sts	0x042D, r24
    2396:	90 93 30 04 	sts	0x0430, r25
    239a:	80 93 2f 04 	sts	0x042F, r24
    239e:	10 92 59 04 	sts	0x0459, r1
    23a2:	08 95       	ret

000023a4 <STEPPER_set_dir>:
    23a4:	98 2f       	mov	r25, r24
    23a6:	81 e0       	ldi	r24, 0x01	; 1
    23a8:	80 93 59 04 	sts	0x0459, r24
    23ac:	91 30       	cpi	r25, 0x01	; 1
    23ae:	51 f0       	breq	.+20     	; 0x23c4 <STEPPER_set_dir+0x20>
    23b0:	91 30       	cpi	r25, 0x01	; 1
    23b2:	18 f0       	brcs	.+6      	; 0x23ba <STEPPER_set_dir+0x16>
    23b4:	92 30       	cpi	r25, 0x02	; 2
    23b6:	41 f4       	brne	.+16     	; 0x23c8 <STEPPER_set_dir+0x24>
    23b8:	03 c0       	rjmp	.+6      	; 0x23c0 <STEPPER_set_dir+0x1c>
    23ba:	60 93 46 04 	sts	0x0446, r22
    23be:	04 c0       	rjmp	.+8      	; 0x23c8 <STEPPER_set_dir+0x24>
    23c0:	60 93 46 04 	sts	0x0446, r22
    23c4:	60 93 47 04 	sts	0x0447, r22
    23c8:	10 92 59 04 	sts	0x0459, r1
    23cc:	08 95       	ret

000023ce <STEPPER_set_mode>:
    23ce:	98 2f       	mov	r25, r24
    23d0:	81 e0       	ldi	r24, 0x01	; 1
    23d2:	80 93 59 04 	sts	0x0459, r24
    23d6:	91 30       	cpi	r25, 0x01	; 1
    23d8:	51 f0       	breq	.+20     	; 0x23ee <STEPPER_set_mode+0x20>
    23da:	91 30       	cpi	r25, 0x01	; 1
    23dc:	18 f0       	brcs	.+6      	; 0x23e4 <STEPPER_set_mode+0x16>
    23de:	92 30       	cpi	r25, 0x02	; 2
    23e0:	41 f4       	brne	.+16     	; 0x23f2 <STEPPER_set_mode+0x24>
    23e2:	03 c0       	rjmp	.+6      	; 0x23ea <STEPPER_set_mode+0x1c>
    23e4:	60 93 23 04 	sts	0x0423, r22
    23e8:	04 c0       	rjmp	.+8      	; 0x23f2 <STEPPER_set_mode+0x24>
    23ea:	60 93 23 04 	sts	0x0423, r22
    23ee:	60 93 24 04 	sts	0x0424, r22
    23f2:	10 92 59 04 	sts	0x0459, r1
    23f6:	08 95       	ret

000023f8 <STEPPER_set_speed>:
    23f8:	48 2f       	mov	r20, r24
    23fa:	81 e0       	ldi	r24, 0x01	; 1
    23fc:	80 93 59 04 	sts	0x0459, r24
    2400:	cb 01       	movw	r24, r22
    2402:	21 e0       	ldi	r18, 0x01	; 1
    2404:	61 39       	cpi	r22, 0x91	; 145
    2406:	72 07       	cpc	r23, r18
    2408:	10 f0       	brcs	.+4      	; 0x240e <STEPPER_set_speed+0x16>
    240a:	80 e9       	ldi	r24, 0x90	; 144
    240c:	91 e0       	ldi	r25, 0x01	; 1
    240e:	41 30       	cpi	r20, 0x01	; 1
    2410:	71 f0       	breq	.+28     	; 0x242e <STEPPER_set_speed+0x36>
    2412:	41 30       	cpi	r20, 0x01	; 1
    2414:	18 f0       	brcs	.+6      	; 0x241c <STEPPER_set_speed+0x24>
    2416:	42 30       	cpi	r20, 0x02	; 2
    2418:	71 f4       	brne	.+28     	; 0x2436 <STEPPER_set_speed+0x3e>
    241a:	05 c0       	rjmp	.+10     	; 0x2426 <STEPPER_set_speed+0x2e>
    241c:	90 93 26 04 	sts	0x0426, r25
    2420:	80 93 25 04 	sts	0x0425, r24
    2424:	08 c0       	rjmp	.+16     	; 0x2436 <STEPPER_set_speed+0x3e>
    2426:	90 93 26 04 	sts	0x0426, r25
    242a:	80 93 25 04 	sts	0x0425, r24
    242e:	90 93 28 04 	sts	0x0428, r25
    2432:	80 93 27 04 	sts	0x0427, r24
    2436:	10 92 59 04 	sts	0x0459, r1
    243a:	08 95       	ret

0000243c <STEPPER_step>:
    243c:	8f 92       	push	r8
    243e:	9f 92       	push	r9
    2440:	af 92       	push	r10
    2442:	bf 92       	push	r11
    2444:	cf 92       	push	r12
    2446:	df 92       	push	r13
    2448:	ef 92       	push	r14
    244a:	ff 92       	push	r15
    244c:	0f 93       	push	r16
    244e:	1f 93       	push	r17
    2450:	cf 93       	push	r28
    2452:	df 93       	push	r29
    2454:	18 2f       	mov	r17, r24
    2456:	f6 2e       	mov	r15, r22
    2458:	5a 01       	movw	r10, r20
    245a:	49 01       	movw	r8, r18
    245c:	e6 01       	movw	r28, r12
    245e:	61 e0       	ldi	r22, 0x01	; 1
    2460:	0e 94 e7 11 	call	0x23ce	; 0x23ce <STEPPER_set_mode>
    2464:	81 2f       	mov	r24, r17
    2466:	b5 01       	movw	r22, r10
    2468:	a4 01       	movw	r20, r8
    246a:	0e 94 83 1a 	call	0x3506	; 0x3506 <STEPPER_setup_decels>
    246e:	81 2f       	mov	r24, r17
    2470:	6f 2d       	mov	r22, r15
    2472:	0e 94 d2 11 	call	0x23a4	; 0x23a4 <STEPPER_set_dir>
    2476:	81 2f       	mov	r24, r17
    2478:	60 2f       	mov	r22, r16
    247a:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <STEPPER_set_stop_mode>
    247e:	81 2f       	mov	r24, r17
    2480:	b5 01       	movw	r22, r10
    2482:	0e 94 53 1a 	call	0x34a6	; 0x34a6 <STEPPER_set_steps>
    2486:	c1 14       	cp	r12, r1
    2488:	d1 04       	cpc	r13, r1
    248a:	99 f0       	breq	.+38     	; 0x24b2 <STEPPER_step+0x76>
    248c:	11 30       	cpi	r17, 0x01	; 1
    248e:	49 f0       	breq	.+18     	; 0x24a2 <STEPPER_step+0x66>
    2490:	11 30       	cpi	r17, 0x01	; 1
    2492:	18 f0       	brcs	.+6      	; 0x249a <STEPPER_step+0x5e>
    2494:	12 30       	cpi	r17, 0x02	; 2
    2496:	69 f4       	brne	.+26     	; 0x24b2 <STEPPER_step+0x76>
    2498:	06 c0       	rjmp	.+12     	; 0x24a6 <STEPPER_step+0x6a>
    249a:	18 82       	st	Y, r1
    249c:	10 92 55 04 	sts	0x0455, r1
    24a0:	08 c0       	rjmp	.+16     	; 0x24b2 <STEPPER_step+0x76>
    24a2:	19 82       	std	Y+1, r1	; 0x01
    24a4:	04 c0       	rjmp	.+8      	; 0x24ae <STEPPER_step+0x72>
    24a6:	18 82       	st	Y, r1
    24a8:	19 82       	std	Y+1, r1	; 0x01
    24aa:	10 92 55 04 	sts	0x0455, r1
    24ae:	10 92 56 04 	sts	0x0456, r1
    24b2:	d0 93 58 04 	sts	0x0458, r29
    24b6:	c0 93 57 04 	sts	0x0457, r28
    24ba:	ee 20       	and	r14, r14
    24bc:	b9 f5       	brne	.+110    	; 0x252c <STEPPER_step+0xf0>
    24be:	86 ec       	ldi	r24, 0xC6	; 198
    24c0:	91 e0       	ldi	r25, 0x01	; 1
    24c2:	90 93 58 04 	sts	0x0458, r25
    24c6:	80 93 57 04 	sts	0x0457, r24
    24ca:	81 2f       	mov	r24, r17
    24cc:	b4 01       	movw	r22, r8
    24ce:	0e 94 fc 11 	call	0x23f8	; 0x23f8 <STEPPER_set_speed>
    24d2:	81 2f       	mov	r24, r17
    24d4:	0e 94 34 1a 	call	0x3468	; 0x3468 <STEPPER_go>
    24d8:	11 30       	cpi	r17, 0x01	; 1
    24da:	71 f0       	breq	.+28     	; 0x24f8 <STEPPER_step+0xbc>
    24dc:	11 30       	cpi	r17, 0x01	; 1
    24de:	18 f0       	brcs	.+6      	; 0x24e6 <STEPPER_step+0xaa>
    24e0:	12 30       	cpi	r17, 0x02	; 2
    24e2:	59 f5       	brne	.+86     	; 0x253a <STEPPER_step+0xfe>
    24e4:	12 c0       	rjmp	.+36     	; 0x250a <STEPPER_step+0xce>
    24e6:	10 92 c6 01 	sts	0x01C6, r1
    24ea:	10 92 55 04 	sts	0x0455, r1
    24ee:	80 91 c6 01 	lds	r24, 0x01C6
    24f2:	88 23       	and	r24, r24
    24f4:	e1 f3       	breq	.-8      	; 0x24ee <STEPPER_step+0xb2>
    24f6:	21 c0       	rjmp	.+66     	; 0x253a <STEPPER_step+0xfe>
    24f8:	10 92 c7 01 	sts	0x01C7, r1
    24fc:	10 92 56 04 	sts	0x0456, r1
    2500:	80 91 c7 01 	lds	r24, 0x01C7
    2504:	88 23       	and	r24, r24
    2506:	e1 f3       	breq	.-8      	; 0x2500 <STEPPER_step+0xc4>
    2508:	18 c0       	rjmp	.+48     	; 0x253a <STEPPER_step+0xfe>
    250a:	10 92 c6 01 	sts	0x01C6, r1
    250e:	10 92 c7 01 	sts	0x01C7, r1
    2512:	10 92 55 04 	sts	0x0455, r1
    2516:	10 92 56 04 	sts	0x0456, r1
    251a:	80 91 c6 01 	lds	r24, 0x01C6
    251e:	88 23       	and	r24, r24
    2520:	e1 f3       	breq	.-8      	; 0x251a <STEPPER_step+0xde>
    2522:	80 91 c7 01 	lds	r24, 0x01C7
    2526:	88 23       	and	r24, r24
    2528:	c1 f3       	breq	.-16     	; 0x251a <STEPPER_step+0xde>
    252a:	07 c0       	rjmp	.+14     	; 0x253a <STEPPER_step+0xfe>
    252c:	81 2f       	mov	r24, r17
    252e:	b4 01       	movw	r22, r8
    2530:	0e 94 fc 11 	call	0x23f8	; 0x23f8 <STEPPER_set_speed>
    2534:	81 2f       	mov	r24, r17
    2536:	0e 94 34 1a 	call	0x3468	; 0x3468 <STEPPER_go>
    253a:	df 91       	pop	r29
    253c:	cf 91       	pop	r28
    253e:	1f 91       	pop	r17
    2540:	0f 91       	pop	r16
    2542:	ff 90       	pop	r15
    2544:	ef 90       	pop	r14
    2546:	df 90       	pop	r13
    2548:	cf 90       	pop	r12
    254a:	bf 90       	pop	r11
    254c:	af 90       	pop	r10
    254e:	9f 90       	pop	r9
    2550:	8f 90       	pop	r8
    2552:	08 95       	ret

00002554 <STEPPER_wait_and_then>:
    2554:	cf 92       	push	r12
    2556:	df 92       	push	r13
    2558:	ef 92       	push	r14
    255a:	ff 92       	push	r15
    255c:	0f 93       	push	r16
    255e:	1f 93       	push	r17
    2560:	df 93       	push	r29
    2562:	cf 93       	push	r28
    2564:	cd b7       	in	r28, 0x3d	; 61
    2566:	de b7       	in	r29, 0x3e	; 62
    2568:	8b 85       	ldd	r24, Y+11	; 0x0b
    256a:	81 30       	cpi	r24, 0x01	; 1
    256c:	61 f0       	breq	.+24     	; 0x2586 <STEPPER_wait_and_then+0x32>
    256e:	81 30       	cpi	r24, 0x01	; 1
    2570:	18 f0       	brcs	.+6      	; 0x2578 <STEPPER_wait_and_then+0x24>
    2572:	82 30       	cpi	r24, 0x02	; 2
    2574:	a1 f5       	brne	.+104    	; 0x25de <STEPPER_wait_and_then+0x8a>
    2576:	11 c0       	rjmp	.+34     	; 0x259a <STEPPER_wait_and_then+0x46>
    2578:	ec 85       	ldd	r30, Y+12	; 0x0c
    257a:	fd 85       	ldd	r31, Y+13	; 0x0d
    257c:	80 91 5a 04 	lds	r24, 0x045A
    2580:	88 23       	and	r24, r24
    2582:	e1 f3       	breq	.-8      	; 0x257c <STEPPER_wait_and_then+0x28>
    2584:	06 c0       	rjmp	.+12     	; 0x2592 <STEPPER_wait_and_then+0x3e>
    2586:	ec 85       	ldd	r30, Y+12	; 0x0c
    2588:	fd 85       	ldd	r31, Y+13	; 0x0d
    258a:	80 91 5b 04 	lds	r24, 0x045B
    258e:	88 23       	and	r24, r24
    2590:	e1 f3       	breq	.-8      	; 0x258a <STEPPER_wait_and_then+0x36>
    2592:	30 97       	sbiw	r30, 0x00	; 0
    2594:	21 f1       	breq	.+72     	; 0x25de <STEPPER_wait_and_then+0x8a>
    2596:	09 95       	icall
    2598:	22 c0       	rjmp	.+68     	; 0x25de <STEPPER_wait_and_then+0x8a>
    259a:	cc 84       	ldd	r12, Y+12	; 0x0c
    259c:	dd 84       	ldd	r13, Y+13	; 0x0d
    259e:	ee 84       	ldd	r14, Y+14	; 0x0e
    25a0:	ff 84       	ldd	r15, Y+15	; 0x0f
    25a2:	00 e0       	ldi	r16, 0x00	; 0
    25a4:	10 e0       	ldi	r17, 0x00	; 0
    25a6:	00 23       	and	r16, r16
    25a8:	51 f4       	brne	.+20     	; 0x25be <STEPPER_wait_and_then+0x6a>
    25aa:	80 91 5a 04 	lds	r24, 0x045A
    25ae:	88 23       	and	r24, r24
    25b0:	31 f0       	breq	.+12     	; 0x25be <STEPPER_wait_and_then+0x6a>
    25b2:	c1 14       	cp	r12, r1
    25b4:	d1 04       	cpc	r13, r1
    25b6:	11 f0       	breq	.+4      	; 0x25bc <STEPPER_wait_and_then+0x68>
    25b8:	f6 01       	movw	r30, r12
    25ba:	09 95       	icall
    25bc:	01 e0       	ldi	r16, 0x01	; 1
    25be:	11 23       	and	r17, r17
    25c0:	51 f4       	brne	.+20     	; 0x25d6 <STEPPER_wait_and_then+0x82>
    25c2:	80 91 5b 04 	lds	r24, 0x045B
    25c6:	88 23       	and	r24, r24
    25c8:	31 f0       	breq	.+12     	; 0x25d6 <STEPPER_wait_and_then+0x82>
    25ca:	e1 14       	cp	r14, r1
    25cc:	f1 04       	cpc	r15, r1
    25ce:	11 f0       	breq	.+4      	; 0x25d4 <STEPPER_wait_and_then+0x80>
    25d0:	f7 01       	movw	r30, r14
    25d2:	09 95       	icall
    25d4:	11 e0       	ldi	r17, 0x01	; 1
    25d6:	00 23       	and	r16, r16
    25d8:	31 f3       	breq	.-52     	; 0x25a6 <STEPPER_wait_and_then+0x52>
    25da:	11 23       	and	r17, r17
    25dc:	21 f3       	breq	.-56     	; 0x25a6 <STEPPER_wait_and_then+0x52>
    25de:	cf 91       	pop	r28
    25e0:	df 91       	pop	r29
    25e2:	1f 91       	pop	r17
    25e4:	0f 91       	pop	r16
    25e6:	ff 90       	pop	r15
    25e8:	ef 90       	pop	r14
    25ea:	df 90       	pop	r13
    25ec:	cf 90       	pop	r12
    25ee:	08 95       	ret

000025f0 <SYS_get_state>:
    25f0:	e8 2f       	mov	r30, r24
    25f2:	f0 e0       	ldi	r31, 0x00	; 0
    25f4:	e3 31       	cpi	r30, 0x13	; 19
    25f6:	f1 05       	cpc	r31, r1
    25f8:	40 f4       	brcc	.+16     	; 0x260a <SYS_get_state+0x1a>
    25fa:	e2 5c       	subi	r30, 0xC2	; 194
    25fc:	ff 4f       	sbci	r31, 0xFF	; 255
    25fe:	ee 0f       	add	r30, r30
    2600:	ff 1f       	adc	r31, r31
    2602:	05 90       	lpm	r0, Z+
    2604:	f4 91       	lpm	r31, Z+
    2606:	e0 2d       	mov	r30, r0
    2608:	09 94       	ijmp
    260a:	80 e0       	ldi	r24, 0x00	; 0
    260c:	08 95       	ret
    260e:	80 91 5c 04 	lds	r24, 0x045C
    2612:	08 95       	ret
    2614:	80 91 5d 04 	lds	r24, 0x045D
    2618:	08 95       	ret
    261a:	80 91 5e 04 	lds	r24, 0x045E
    261e:	08 95       	ret
    2620:	80 91 5f 04 	lds	r24, 0x045F
    2624:	08 95       	ret
    2626:	80 91 60 04 	lds	r24, 0x0460
    262a:	08 95       	ret
    262c:	80 91 62 04 	lds	r24, 0x0462
    2630:	08 95       	ret
    2632:	80 91 61 04 	lds	r24, 0x0461
    2636:	08 95       	ret
    2638:	80 91 63 04 	lds	r24, 0x0463
    263c:	08 95       	ret
    263e:	80 91 64 04 	lds	r24, 0x0464
    2642:	08 95       	ret
    2644:	80 91 65 04 	lds	r24, 0x0465
    2648:	08 95       	ret
    264a:	80 91 66 04 	lds	r24, 0x0466
    264e:	08 95       	ret
    2650:	80 91 67 04 	lds	r24, 0x0467
    2654:	08 95       	ret
    2656:	80 91 68 04 	lds	r24, 0x0468
    265a:	08 95       	ret
    265c:	80 91 69 04 	lds	r24, 0x0469
    2660:	08 95       	ret
    2662:	80 91 6a 04 	lds	r24, 0x046A
    2666:	08 95       	ret
    2668:	80 91 6b 04 	lds	r24, 0x046B
    266c:	08 95       	ret
    266e:	80 91 6c 04 	lds	r24, 0x046C
    2672:	08 95       	ret
    2674:	80 91 6d 04 	lds	r24, 0x046D
    2678:	08 95       	ret
    267a:	80 91 6e 04 	lds	r24, 0x046E
    267e:	08 95       	ret

00002680 <SYS_set_state>:
    2680:	e8 2f       	mov	r30, r24
    2682:	f0 e0       	ldi	r31, 0x00	; 0
    2684:	e3 31       	cpi	r30, 0x13	; 19
    2686:	f1 05       	cpc	r31, r1
    2688:	08 f0       	brcs	.+2      	; 0x268c <SYS_set_state+0xc>
    268a:	40 c0       	rjmp	.+128    	; 0x270c <SYS_set_state+0x8c>
    268c:	ef 5a       	subi	r30, 0xAF	; 175
    268e:	ff 4f       	sbci	r31, 0xFF	; 255
    2690:	ee 0f       	add	r30, r30
    2692:	ff 1f       	adc	r31, r31
    2694:	05 90       	lpm	r0, Z+
    2696:	f4 91       	lpm	r31, Z+
    2698:	e0 2d       	mov	r30, r0
    269a:	09 94       	ijmp
    269c:	60 93 5c 04 	sts	0x045C, r22
    26a0:	08 95       	ret
    26a2:	60 93 5d 04 	sts	0x045D, r22
    26a6:	08 95       	ret
    26a8:	60 93 5e 04 	sts	0x045E, r22
    26ac:	08 95       	ret
    26ae:	60 93 5f 04 	sts	0x045F, r22
    26b2:	08 95       	ret
    26b4:	60 93 60 04 	sts	0x0460, r22
    26b8:	08 95       	ret
    26ba:	60 93 62 04 	sts	0x0462, r22
    26be:	08 95       	ret
    26c0:	60 93 61 04 	sts	0x0461, r22
    26c4:	08 95       	ret
    26c6:	60 93 63 04 	sts	0x0463, r22
    26ca:	08 95       	ret
    26cc:	60 93 64 04 	sts	0x0464, r22
    26d0:	08 95       	ret
    26d2:	60 93 65 04 	sts	0x0465, r22
    26d6:	08 95       	ret
    26d8:	60 93 66 04 	sts	0x0466, r22
    26dc:	08 95       	ret
    26de:	60 93 67 04 	sts	0x0467, r22
    26e2:	08 95       	ret
    26e4:	60 93 68 04 	sts	0x0468, r22
    26e8:	08 95       	ret
    26ea:	60 93 69 04 	sts	0x0469, r22
    26ee:	08 95       	ret
    26f0:	60 93 6a 04 	sts	0x046A, r22
    26f4:	08 95       	ret
    26f6:	60 93 6b 04 	sts	0x046B, r22
    26fa:	08 95       	ret
    26fc:	60 93 6c 04 	sts	0x046C, r22
    2700:	08 95       	ret
    2702:	60 93 6d 04 	sts	0x046D, r22
    2706:	08 95       	ret
    2708:	60 93 6c 04 	sts	0x046C, r22
    270c:	08 95       	ret

0000270e <ATTINY_get_SW_state>:
    270e:	1f 93       	push	r17
    2710:	cf 93       	push	r28
    2712:	df 93       	push	r29
    2714:	18 2f       	mov	r17, r24
    2716:	80 91 c9 01 	lds	r24, 0x01C9
    271a:	88 23       	and	r24, r24
    271c:	41 f0       	breq	.+16     	; 0x272e <ATTINY_get_SW_state+0x20>
    271e:	80 91 d3 01 	lds	r24, 0x01D3
    2722:	88 23       	and	r24, r24
    2724:	99 f0       	breq	.+38     	; 0x274c <ATTINY_get_SW_state+0x3e>
    2726:	10 92 c9 01 	sts	0x01C9, r1
    272a:	10 92 d3 01 	sts	0x01D3, r1
    272e:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <ATTINY_get_sensors>
    2732:	80 93 c8 01 	sts	0x01C8, r24
    2736:	8d ec       	ldi	r24, 0xCD	; 205
    2738:	91 e0       	ldi	r25, 0x01	; 1
    273a:	61 e0       	ldi	r22, 0x01	; 1
    273c:	40 e0       	ldi	r20, 0x00	; 0
    273e:	22 e3       	ldi	r18, 0x32	; 50
    2740:	30 e0       	ldi	r19, 0x00	; 0
    2742:	0e 94 45 14 	call	0x288a	; 0x288a <TMRSRVC_new>
    2746:	81 e0       	ldi	r24, 0x01	; 1
    2748:	80 93 c9 01 	sts	0x01C9, r24
    274c:	90 91 c8 01 	lds	r25, 0x01C8
    2750:	a1 2f       	mov	r26, r17
    2752:	b0 e0       	ldi	r27, 0x00	; 0
    2754:	ed 01       	movw	r28, r26
    2756:	c0 5b       	subi	r28, 0xB0	; 176
    2758:	de 4f       	sbci	r29, 0xFE	; 254
    275a:	88 81       	ld	r24, Y
    275c:	88 23       	and	r24, r24
    275e:	69 f0       	breq	.+26     	; 0x277a <ATTINY_get_SW_state+0x6c>
    2760:	fd 01       	movw	r30, r26
    2762:	ed 5a       	subi	r30, 0xAD	; 173
    2764:	fe 4f       	sbci	r31, 0xFE	; 254
    2766:	80 81       	ld	r24, Z
    2768:	98 23       	and	r25, r24
    276a:	c1 f0       	breq	.+48     	; 0x279c <ATTINY_get_SW_state+0x8e>
    276c:	fd 01       	movw	r30, r26
    276e:	e6 53       	subi	r30, 0x36	; 54
    2770:	fe 4f       	sbci	r31, 0xFE	; 254
    2772:	81 e0       	ldi	r24, 0x01	; 1
    2774:	80 83       	st	Z, r24
    2776:	18 82       	st	Y, r1
    2778:	11 c0       	rjmp	.+34     	; 0x279c <ATTINY_get_SW_state+0x8e>
    277a:	fd 01       	movw	r30, r26
    277c:	e6 53       	subi	r30, 0x36	; 54
    277e:	fe 4f       	sbci	r31, 0xFE	; 254
    2780:	80 81       	ld	r24, Z
    2782:	81 11       	cpse	r24, r1
    2784:	10 82       	st	Z, r1
    2786:	fd 01       	movw	r30, r26
    2788:	ed 5a       	subi	r30, 0xAD	; 173
    278a:	fe 4f       	sbci	r31, 0xFE	; 254
    278c:	80 81       	ld	r24, Z
    278e:	98 23       	and	r25, r24
    2790:	29 f4       	brne	.+10     	; 0x279c <ATTINY_get_SW_state+0x8e>
    2792:	fd 01       	movw	r30, r26
    2794:	e0 5b       	subi	r30, 0xB0	; 176
    2796:	fe 4f       	sbci	r31, 0xFE	; 254
    2798:	81 e0       	ldi	r24, 0x01	; 1
    279a:	80 83       	st	Z, r24
    279c:	a6 53       	subi	r26, 0x36	; 54
    279e:	be 4f       	sbci	r27, 0xFE	; 254
    27a0:	8c 91       	ld	r24, X
    27a2:	df 91       	pop	r29
    27a4:	cf 91       	pop	r28
    27a6:	1f 91       	pop	r17
    27a8:	08 95       	ret

000027aa <ATTINY_open>:
    27aa:	82 e0       	ldi	r24, 0x02	; 2
    27ac:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    27b0:	88 23       	and	r24, r24
    27b2:	19 f4       	brne	.+6      	; 0x27ba <ATTINY_open+0x10>
    27b4:	90 e0       	ldi	r25, 0x00	; 0
    27b6:	82 e0       	ldi	r24, 0x02	; 2
    27b8:	08 95       	ret
    27ba:	10 92 8a 04 	sts	0x048A, r1
    27be:	10 92 89 04 	sts	0x0489, r1
    27c2:	10 92 8c 04 	sts	0x048C, r1
    27c6:	10 92 8b 04 	sts	0x048B, r1
    27ca:	10 92 8e 04 	sts	0x048E, r1
    27ce:	10 92 8d 04 	sts	0x048D, r1
    27d2:	10 92 90 04 	sts	0x0490, r1
    27d6:	10 92 8f 04 	sts	0x048F, r1
    27da:	10 92 92 04 	sts	0x0492, r1
    27de:	10 92 91 04 	sts	0x0491, r1
    27e2:	80 e9       	ldi	r24, 0x90	; 144
    27e4:	91 e0       	ldi	r25, 0x01	; 1
    27e6:	90 93 76 04 	sts	0x0476, r25
    27ea:	80 93 75 04 	sts	0x0475, r24
    27ee:	90 93 78 04 	sts	0x0478, r25
    27f2:	80 93 77 04 	sts	0x0477, r24
    27f6:	90 93 7a 04 	sts	0x047A, r25
    27fa:	80 93 79 04 	sts	0x0479, r24
    27fe:	90 93 7c 04 	sts	0x047C, r25
    2802:	80 93 7b 04 	sts	0x047B, r24
    2806:	90 93 7e 04 	sts	0x047E, r25
    280a:	80 93 7d 04 	sts	0x047D, r24
    280e:	84 e3       	ldi	r24, 0x34	; 52
    2810:	98 e0       	ldi	r25, 0x08	; 8
    2812:	90 93 80 04 	sts	0x0480, r25
    2816:	80 93 7f 04 	sts	0x047F, r24
    281a:	90 93 82 04 	sts	0x0482, r25
    281e:	80 93 81 04 	sts	0x0481, r24
    2822:	90 93 84 04 	sts	0x0484, r25
    2826:	80 93 83 04 	sts	0x0483, r24
    282a:	90 93 86 04 	sts	0x0486, r25
    282e:	80 93 85 04 	sts	0x0485, r24
    2832:	90 93 88 04 	sts	0x0488, r25
    2836:	80 93 87 04 	sts	0x0487, r24
    283a:	81 e0       	ldi	r24, 0x01	; 1
    283c:	61 e0       	ldi	r22, 0x01	; 1
    283e:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    2842:	91 e0       	ldi	r25, 0x01	; 1
    2844:	81 e0       	ldi	r24, 0x01	; 1
    2846:	08 95       	ret

00002848 <TMRSRVC_delay>:
    2848:	df 93       	push	r29
    284a:	cf 93       	push	r28
    284c:	cd b7       	in	r28, 0x3d	; 61
    284e:	de b7       	in	r29, 0x3e	; 62
    2850:	29 97       	sbiw	r28, 0x09	; 9
    2852:	0f b6       	in	r0, 0x3f	; 63
    2854:	f8 94       	cli
    2856:	de bf       	out	0x3e, r29	; 62
    2858:	0f be       	out	0x3f, r0	; 63
    285a:	cd bf       	out	0x3d, r28	; 61
    285c:	9c 01       	movw	r18, r24
    285e:	ce 01       	movw	r24, r28
    2860:	01 96       	adiw	r24, 0x01	; 1
    2862:	61 e0       	ldi	r22, 0x01	; 1
    2864:	40 e0       	ldi	r20, 0x00	; 0
    2866:	0e 94 45 14 	call	0x288a	; 0x288a <TMRSRVC_new>
    286a:	98 2f       	mov	r25, r24
    286c:	88 23       	and	r24, r24
    286e:	19 f4       	brne	.+6      	; 0x2876 <TMRSRVC_delay+0x2e>
    2870:	8f 81       	ldd	r24, Y+7	; 0x07
    2872:	88 23       	and	r24, r24
    2874:	e9 f3       	breq	.-6      	; 0x2870 <TMRSRVC_delay+0x28>
    2876:	89 2f       	mov	r24, r25
    2878:	29 96       	adiw	r28, 0x09	; 9
    287a:	0f b6       	in	r0, 0x3f	; 63
    287c:	f8 94       	cli
    287e:	de bf       	out	0x3e, r29	; 62
    2880:	0f be       	out	0x3f, r0	; 63
    2882:	cd bf       	out	0x3d, r28	; 61
    2884:	cf 91       	pop	r28
    2886:	df 91       	pop	r29
    2888:	08 95       	ret

0000288a <TMRSRVC_new>:
    288a:	ef 92       	push	r14
    288c:	ff 92       	push	r15
    288e:	0f 93       	push	r16
    2890:	1f 93       	push	r17
    2892:	cf 93       	push	r28
    2894:	df 93       	push	r29
    2896:	ec 01       	movw	r28, r24
    2898:	f6 2e       	mov	r15, r22
    289a:	e4 2e       	mov	r14, r20
    289c:	89 01       	movw	r16, r18
    289e:	88 e0       	ldi	r24, 0x08	; 8
    28a0:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    28a4:	81 30       	cpi	r24, 0x01	; 1
    28a6:	11 f0       	breq	.+4      	; 0x28ac <TMRSRVC_new+0x22>
    28a8:	81 e0       	ldi	r24, 0x01	; 1
    28aa:	26 c0       	rjmp	.+76     	; 0x28f8 <TMRSRVC_new+0x6e>
    28ac:	84 e0       	ldi	r24, 0x04	; 4
    28ae:	90 e0       	ldi	r25, 0x00	; 0
    28b0:	0e 94 32 28 	call	0x5064	; 0x5064 <malloc>
    28b4:	fc 01       	movw	r30, r24
    28b6:	00 97       	sbiw	r24, 0x00	; 0
    28b8:	11 f4       	brne	.+4      	; 0x28be <TMRSRVC_new+0x34>
    28ba:	82 e0       	ldi	r24, 0x02	; 2
    28bc:	1d c0       	rjmp	.+58     	; 0x28f8 <TMRSRVC_new+0x6e>
    28be:	f9 82       	std	Y+1, r15	; 0x01
    28c0:	f0 fc       	sbrc	r15, 0
    28c2:	1e 82       	std	Y+6, r1	; 0x06
    28c4:	81 e0       	ldi	r24, 0x01	; 1
    28c6:	e8 16       	cp	r14, r24
    28c8:	19 f4       	brne	.+6      	; 0x28d0 <TMRSRVC_new+0x46>
    28ca:	89 81       	ldd	r24, Y+1	; 0x01
    28cc:	84 60       	ori	r24, 0x04	; 4
    28ce:	89 83       	std	Y+1, r24	; 0x01
    28d0:	89 81       	ldd	r24, Y+1	; 0x01
    28d2:	88 60       	ori	r24, 0x08	; 8
    28d4:	89 83       	std	Y+1, r24	; 0x01
    28d6:	1b 83       	std	Y+3, r17	; 0x03
    28d8:	0a 83       	std	Y+2, r16	; 0x02
    28da:	1d 83       	std	Y+5, r17	; 0x05
    28dc:	0c 83       	std	Y+4, r16	; 0x04
    28de:	d1 83       	std	Z+1, r29	; 0x01
    28e0:	c0 83       	st	Z, r28
    28e2:	13 82       	std	Z+3, r1	; 0x03
    28e4:	12 82       	std	Z+2, r1	; 0x02
    28e6:	81 e0       	ldi	r24, 0x01	; 1
    28e8:	80 93 36 02 	sts	0x0236, r24
    28ec:	cf 01       	movw	r24, r30
    28ee:	0e 94 14 1b 	call	0x3628	; 0x3628 <TMRSRVC_insert>
    28f2:	10 92 36 02 	sts	0x0236, r1
    28f6:	80 e0       	ldi	r24, 0x00	; 0
    28f8:	df 91       	pop	r29
    28fa:	cf 91       	pop	r28
    28fc:	1f 91       	pop	r17
    28fe:	0f 91       	pop	r16
    2900:	ff 90       	pop	r15
    2902:	ef 90       	pop	r14
    2904:	08 95       	ret

00002906 <I2C_MSTR_get>:
    2906:	fc 01       	movw	r30, r24
    2908:	80 91 96 04 	lds	r24, 0x0496
    290c:	81 30       	cpi	r24, 0x01	; 1
    290e:	11 f0       	breq	.+4      	; 0x2914 <I2C_MSTR_get+0xe>
    2910:	85 e0       	ldi	r24, 0x05	; 5
    2912:	08 95       	ret
    2914:	80 91 97 04 	lds	r24, 0x0497
    2918:	81 30       	cpi	r24, 0x01	; 1
    291a:	11 f0       	breq	.+4      	; 0x2920 <I2C_MSTR_get+0x1a>
    291c:	8a e0       	ldi	r24, 0x0A	; 10
    291e:	08 95       	ret
    2920:	61 30       	cpi	r22, 0x01	; 1
    2922:	11 f4       	brne	.+4      	; 0x2928 <I2C_MSTR_get+0x22>
    2924:	84 ec       	ldi	r24, 0xC4	; 196
    2926:	01 c0       	rjmp	.+2      	; 0x292a <I2C_MSTR_get+0x24>
    2928:	84 e8       	ldi	r24, 0x84	; 132
    292a:	80 93 bc 00 	sts	0x00BC, r24
    292e:	80 91 bc 00 	lds	r24, 0x00BC
    2932:	87 ff       	sbrs	r24, 7
    2934:	fc cf       	rjmp	.-8      	; 0x292e <I2C_MSTR_get+0x28>
    2936:	61 30       	cpi	r22, 0x01	; 1
    2938:	31 f4       	brne	.+12     	; 0x2946 <I2C_MSTR_get+0x40>
    293a:	80 91 b9 00 	lds	r24, 0x00B9
    293e:	88 7f       	andi	r24, 0xF8	; 248
    2940:	80 35       	cpi	r24, 0x50	; 80
    2942:	59 f4       	brne	.+22     	; 0x295a <I2C_MSTR_get+0x54>
    2944:	05 c0       	rjmp	.+10     	; 0x2950 <I2C_MSTR_get+0x4a>
    2946:	80 91 b9 00 	lds	r24, 0x00B9
    294a:	88 7f       	andi	r24, 0xF8	; 248
    294c:	88 35       	cpi	r24, 0x58	; 88
    294e:	29 f4       	brne	.+10     	; 0x295a <I2C_MSTR_get+0x54>
    2950:	80 91 bb 00 	lds	r24, 0x00BB
    2954:	80 83       	st	Z, r24
    2956:	80 e0       	ldi	r24, 0x00	; 0
    2958:	08 95       	ret
    295a:	82 e0       	ldi	r24, 0x02	; 2
    295c:	08 95       	ret

0000295e <I2C_MSTR_send>:
    295e:	98 2f       	mov	r25, r24
    2960:	80 91 96 04 	lds	r24, 0x0496
    2964:	81 30       	cpi	r24, 0x01	; 1
    2966:	11 f0       	breq	.+4      	; 0x296c <I2C_MSTR_send+0xe>
    2968:	85 e0       	ldi	r24, 0x05	; 5
    296a:	08 95       	ret
    296c:	80 91 97 04 	lds	r24, 0x0497
    2970:	81 30       	cpi	r24, 0x01	; 1
    2972:	11 f0       	breq	.+4      	; 0x2978 <I2C_MSTR_send+0x1a>
    2974:	8a e0       	ldi	r24, 0x0A	; 10
    2976:	08 95       	ret
    2978:	90 93 bb 00 	sts	0x00BB, r25
    297c:	84 e8       	ldi	r24, 0x84	; 132
    297e:	80 93 bc 00 	sts	0x00BC, r24
    2982:	80 91 bc 00 	lds	r24, 0x00BC
    2986:	87 ff       	sbrs	r24, 7
    2988:	fc cf       	rjmp	.-8      	; 0x2982 <I2C_MSTR_send+0x24>
    298a:	80 91 b9 00 	lds	r24, 0x00B9
    298e:	90 e0       	ldi	r25, 0x00	; 0
    2990:	88 7f       	andi	r24, 0xF8	; 248
    2992:	90 70       	andi	r25, 0x00	; 0
    2994:	88 32       	cpi	r24, 0x28	; 40
    2996:	91 05       	cpc	r25, r1
    2998:	21 f0       	breq	.+8      	; 0x29a2 <I2C_MSTR_send+0x44>
    299a:	c0 97       	sbiw	r24, 0x30	; 48
    299c:	21 f4       	brne	.+8      	; 0x29a6 <I2C_MSTR_send+0x48>
    299e:	83 e0       	ldi	r24, 0x03	; 3
    29a0:	08 95       	ret
    29a2:	80 e0       	ldi	r24, 0x00	; 0
    29a4:	08 95       	ret
    29a6:	8c e0       	ldi	r24, 0x0C	; 12
    29a8:	08 95       	ret

000029aa <I2C_MSTR_start>:
    29aa:	98 2f       	mov	r25, r24
    29ac:	20 91 96 04 	lds	r18, 0x0496
    29b0:	21 30       	cpi	r18, 0x01	; 1
    29b2:	11 f0       	breq	.+4      	; 0x29b8 <I2C_MSTR_start+0xe>
    29b4:	85 e0       	ldi	r24, 0x05	; 5
    29b6:	08 95       	ret
    29b8:	80 91 98 04 	lds	r24, 0x0498
    29bc:	81 30       	cpi	r24, 0x01	; 1
    29be:	11 f4       	brne	.+4      	; 0x29c4 <I2C_MSTR_start+0x1a>
    29c0:	89 e0       	ldi	r24, 0x09	; 9
    29c2:	08 95       	ret
    29c4:	20 93 97 04 	sts	0x0497, r18
    29c8:	84 ea       	ldi	r24, 0xA4	; 164
    29ca:	80 93 bc 00 	sts	0x00BC, r24
    29ce:	80 91 bc 00 	lds	r24, 0x00BC
    29d2:	87 ff       	sbrs	r24, 7
    29d4:	fc cf       	rjmp	.-8      	; 0x29ce <I2C_MSTR_start+0x24>
    29d6:	80 91 b9 00 	lds	r24, 0x00B9
    29da:	88 7f       	andi	r24, 0xF8	; 248
    29dc:	88 30       	cpi	r24, 0x08	; 8
    29de:	39 f0       	breq	.+14     	; 0x29ee <I2C_MSTR_start+0x44>
    29e0:	80 91 b9 00 	lds	r24, 0x00B9
    29e4:	88 7f       	andi	r24, 0xF8	; 248
    29e6:	80 31       	cpi	r24, 0x10	; 16
    29e8:	11 f0       	breq	.+4      	; 0x29ee <I2C_MSTR_start+0x44>
    29ea:	81 e0       	ldi	r24, 0x01	; 1
    29ec:	08 95       	ret
    29ee:	61 30       	cpi	r22, 0x01	; 1
    29f0:	19 f4       	brne	.+6      	; 0x29f8 <I2C_MSTR_start+0x4e>
    29f2:	99 0f       	add	r25, r25
    29f4:	91 60       	ori	r25, 0x01	; 1
    29f6:	03 c0       	rjmp	.+6      	; 0x29fe <I2C_MSTR_start+0x54>
    29f8:	66 23       	and	r22, r22
    29fa:	19 f4       	brne	.+6      	; 0x2a02 <I2C_MSTR_start+0x58>
    29fc:	99 0f       	add	r25, r25
    29fe:	90 93 bb 00 	sts	0x00BB, r25
    2a02:	84 e8       	ldi	r24, 0x84	; 132
    2a04:	80 93 bc 00 	sts	0x00BC, r24
    2a08:	80 91 bc 00 	lds	r24, 0x00BC
    2a0c:	87 ff       	sbrs	r24, 7
    2a0e:	fc cf       	rjmp	.-8      	; 0x2a08 <I2C_MSTR_start+0x5e>
    2a10:	61 30       	cpi	r22, 0x01	; 1
    2a12:	31 f4       	brne	.+12     	; 0x2a20 <I2C_MSTR_start+0x76>
    2a14:	80 91 b9 00 	lds	r24, 0x00B9
    2a18:	88 7f       	andi	r24, 0xF8	; 248
    2a1a:	80 34       	cpi	r24, 0x40	; 64
    2a1c:	41 f4       	brne	.+16     	; 0x2a2e <I2C_MSTR_start+0x84>
    2a1e:	09 c0       	rjmp	.+18     	; 0x2a32 <I2C_MSTR_start+0x88>
    2a20:	66 23       	and	r22, r22
    2a22:	39 f4       	brne	.+14     	; 0x2a32 <I2C_MSTR_start+0x88>
    2a24:	80 91 b9 00 	lds	r24, 0x00B9
    2a28:	88 7f       	andi	r24, 0xF8	; 248
    2a2a:	88 31       	cpi	r24, 0x18	; 24
    2a2c:	11 f0       	breq	.+4      	; 0x2a32 <I2C_MSTR_start+0x88>
    2a2e:	82 e0       	ldi	r24, 0x02	; 2
    2a30:	08 95       	ret
    2a32:	80 e0       	ldi	r24, 0x00	; 0
    2a34:	08 95       	ret

00002a36 <I2C_MSTR_stop>:
    2a36:	80 91 97 04 	lds	r24, 0x0497
    2a3a:	81 30       	cpi	r24, 0x01	; 1
    2a3c:	11 f0       	breq	.+4      	; 0x2a42 <I2C_MSTR_stop+0xc>
    2a3e:	8a e0       	ldi	r24, 0x0A	; 10
    2a40:	08 95       	ret
    2a42:	80 91 99 04 	lds	r24, 0x0499
    2a46:	81 30       	cpi	r24, 0x01	; 1
    2a48:	29 f4       	brne	.+10     	; 0x2a54 <I2C_MSTR_stop+0x1e>
    2a4a:	85 e9       	ldi	r24, 0x95	; 149
    2a4c:	80 93 bc 00 	sts	0x00BC, r24
    2a50:	80 e0       	ldi	r24, 0x00	; 0
    2a52:	08 95       	ret
    2a54:	84 e9       	ldi	r24, 0x94	; 148
    2a56:	80 93 bc 00 	sts	0x00BC, r24
    2a5a:	80 e0       	ldi	r24, 0x00	; 0
    2a5c:	08 95       	ret

00002a5e <I2C_open>:
    2a5e:	82 e1       	ldi	r24, 0x12	; 18
    2a60:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    2a64:	88 23       	and	r24, r24
    2a66:	b1 f4       	brne	.+44     	; 0x2a94 <I2C_open+0x36>
    2a68:	10 92 96 04 	sts	0x0496, r1
    2a6c:	10 92 97 04 	sts	0x0497, r1
    2a70:	10 92 98 04 	sts	0x0498, r1
    2a74:	10 92 99 04 	sts	0x0499, r1
    2a78:	10 92 9a 04 	sts	0x049A, r1
    2a7c:	0e 94 b0 1b 	call	0x3760	; 0x3760 <__I2C_init>
    2a80:	87 e1       	ldi	r24, 0x17	; 23
    2a82:	60 e0       	ldi	r22, 0x00	; 0
    2a84:	0e 94 4d 15 	call	0x2a9a	; 0x2a9a <I2C_set_BRG>
    2a88:	0e 94 a6 1b 	call	0x374c	; 0x374c <I2C_enable>
    2a8c:	82 e1       	ldi	r24, 0x12	; 18
    2a8e:	61 e0       	ldi	r22, 0x01	; 1
    2a90:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    2a94:	82 e1       	ldi	r24, 0x12	; 18
    2a96:	90 e0       	ldi	r25, 0x00	; 0
    2a98:	08 95       	ret

00002a9a <I2C_set_BRG>:
    2a9a:	63 70       	andi	r22, 0x03	; 3
    2a9c:	60 93 b9 00 	sts	0x00B9, r22
    2aa0:	80 93 b8 00 	sts	0x00B8, r24
    2aa4:	81 e0       	ldi	r24, 0x01	; 1
    2aa6:	80 93 96 04 	sts	0x0496, r24
    2aaa:	08 95       	ret

00002aac <__ADC_init>:
    2aac:	8f e1       	ldi	r24, 0x1F	; 31
    2aae:	80 93 7c 00 	sts	0x007C, r24
    2ab2:	ea e7       	ldi	r30, 0x7A	; 122
    2ab4:	f0 e0       	ldi	r31, 0x00	; 0
    2ab6:	87 e0       	ldi	r24, 0x07	; 7
    2ab8:	80 83       	st	Z, r24
    2aba:	80 81       	ld	r24, Z
    2abc:	80 68       	ori	r24, 0x80	; 128
    2abe:	80 83       	st	Z, r24
    2ac0:	08 95       	ret

00002ac2 <CBOT_init>:
    2ac2:	0e 94 c0 1a 	call	0x3580	; 0x3580 <SYS_init>
    2ac6:	0e 94 93 18 	call	0x3126	; 0x3126 <ATMEGA_open>
    2aca:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <ISR_open>
    2ace:	0e 94 7d 1b 	call	0x36fa	; 0x36fa <TMRSRVC_open>
    2ad2:	0e 94 f8 18 	call	0x31f0	; 0x31f0 <SPI_open>
    2ad6:	0e 94 d5 13 	call	0x27aa	; 0x27aa <ATTINY_open>
    2ada:	78 94       	sei
    2adc:	08 95       	ret

00002ade <CBOT_ISR_init>:
    2ade:	00 00       	nop
    2ae0:	08 95       	ret

00002ae2 <__vector_16>:
    2ae2:	1f 92       	push	r1
    2ae4:	0f 92       	push	r0
    2ae6:	0f b6       	in	r0, 0x3f	; 63
    2ae8:	0f 92       	push	r0
    2aea:	11 24       	eor	r1, r1
    2aec:	2f 93       	push	r18
    2aee:	3f 93       	push	r19
    2af0:	4f 93       	push	r20
    2af2:	5f 93       	push	r21
    2af4:	6f 93       	push	r22
    2af6:	7f 93       	push	r23
    2af8:	8f 93       	push	r24
    2afa:	9f 93       	push	r25
    2afc:	af 93       	push	r26
    2afe:	bf 93       	push	r27
    2b00:	ef 93       	push	r30
    2b02:	ff 93       	push	r31
    2b04:	e0 91 f6 01 	lds	r30, 0x01F6
    2b08:	f0 91 f7 01 	lds	r31, 0x01F7
    2b0c:	30 97       	sbiw	r30, 0x00	; 0
    2b0e:	09 f0       	breq	.+2      	; 0x2b12 <__vector_16+0x30>
    2b10:	09 95       	icall
    2b12:	ff 91       	pop	r31
    2b14:	ef 91       	pop	r30
    2b16:	bf 91       	pop	r27
    2b18:	af 91       	pop	r26
    2b1a:	9f 91       	pop	r25
    2b1c:	8f 91       	pop	r24
    2b1e:	7f 91       	pop	r23
    2b20:	6f 91       	pop	r22
    2b22:	5f 91       	pop	r21
    2b24:	4f 91       	pop	r20
    2b26:	3f 91       	pop	r19
    2b28:	2f 91       	pop	r18
    2b2a:	0f 90       	pop	r0
    2b2c:	0f be       	out	0x3f, r0	; 63
    2b2e:	0f 90       	pop	r0
    2b30:	1f 90       	pop	r1
    2b32:	18 95       	reti

00002b34 <__vector_17>:
    2b34:	1f 92       	push	r1
    2b36:	0f 92       	push	r0
    2b38:	0f b6       	in	r0, 0x3f	; 63
    2b3a:	0f 92       	push	r0
    2b3c:	11 24       	eor	r1, r1
    2b3e:	2f 93       	push	r18
    2b40:	3f 93       	push	r19
    2b42:	4f 93       	push	r20
    2b44:	5f 93       	push	r21
    2b46:	6f 93       	push	r22
    2b48:	7f 93       	push	r23
    2b4a:	8f 93       	push	r24
    2b4c:	9f 93       	push	r25
    2b4e:	af 93       	push	r26
    2b50:	bf 93       	push	r27
    2b52:	ef 93       	push	r30
    2b54:	ff 93       	push	r31
    2b56:	e0 91 f8 01 	lds	r30, 0x01F8
    2b5a:	f0 91 f9 01 	lds	r31, 0x01F9
    2b5e:	30 97       	sbiw	r30, 0x00	; 0
    2b60:	09 f0       	breq	.+2      	; 0x2b64 <__vector_17+0x30>
    2b62:	09 95       	icall
    2b64:	ff 91       	pop	r31
    2b66:	ef 91       	pop	r30
    2b68:	bf 91       	pop	r27
    2b6a:	af 91       	pop	r26
    2b6c:	9f 91       	pop	r25
    2b6e:	8f 91       	pop	r24
    2b70:	7f 91       	pop	r23
    2b72:	6f 91       	pop	r22
    2b74:	5f 91       	pop	r21
    2b76:	4f 91       	pop	r20
    2b78:	3f 91       	pop	r19
    2b7a:	2f 91       	pop	r18
    2b7c:	0f 90       	pop	r0
    2b7e:	0f be       	out	0x3f, r0	; 63
    2b80:	0f 90       	pop	r0
    2b82:	1f 90       	pop	r1
    2b84:	18 95       	reti

00002b86 <__vector_18>:
    2b86:	1f 92       	push	r1
    2b88:	0f 92       	push	r0
    2b8a:	0f b6       	in	r0, 0x3f	; 63
    2b8c:	0f 92       	push	r0
    2b8e:	11 24       	eor	r1, r1
    2b90:	2f 93       	push	r18
    2b92:	3f 93       	push	r19
    2b94:	4f 93       	push	r20
    2b96:	5f 93       	push	r21
    2b98:	6f 93       	push	r22
    2b9a:	7f 93       	push	r23
    2b9c:	8f 93       	push	r24
    2b9e:	9f 93       	push	r25
    2ba0:	af 93       	push	r26
    2ba2:	bf 93       	push	r27
    2ba4:	ef 93       	push	r30
    2ba6:	ff 93       	push	r31
    2ba8:	e0 91 fa 01 	lds	r30, 0x01FA
    2bac:	f0 91 fb 01 	lds	r31, 0x01FB
    2bb0:	30 97       	sbiw	r30, 0x00	; 0
    2bb2:	09 f0       	breq	.+2      	; 0x2bb6 <__vector_18+0x30>
    2bb4:	09 95       	icall
    2bb6:	ff 91       	pop	r31
    2bb8:	ef 91       	pop	r30
    2bba:	bf 91       	pop	r27
    2bbc:	af 91       	pop	r26
    2bbe:	9f 91       	pop	r25
    2bc0:	8f 91       	pop	r24
    2bc2:	7f 91       	pop	r23
    2bc4:	6f 91       	pop	r22
    2bc6:	5f 91       	pop	r21
    2bc8:	4f 91       	pop	r20
    2bca:	3f 91       	pop	r19
    2bcc:	2f 91       	pop	r18
    2bce:	0f 90       	pop	r0
    2bd0:	0f be       	out	0x3f, r0	; 63
    2bd2:	0f 90       	pop	r0
    2bd4:	1f 90       	pop	r1
    2bd6:	18 95       	reti

00002bd8 <__vector_9>:
    2bd8:	1f 92       	push	r1
    2bda:	0f 92       	push	r0
    2bdc:	0f b6       	in	r0, 0x3f	; 63
    2bde:	0f 92       	push	r0
    2be0:	11 24       	eor	r1, r1
    2be2:	2f 93       	push	r18
    2be4:	3f 93       	push	r19
    2be6:	4f 93       	push	r20
    2be8:	5f 93       	push	r21
    2bea:	6f 93       	push	r22
    2bec:	7f 93       	push	r23
    2bee:	8f 93       	push	r24
    2bf0:	9f 93       	push	r25
    2bf2:	af 93       	push	r26
    2bf4:	bf 93       	push	r27
    2bf6:	ef 93       	push	r30
    2bf8:	ff 93       	push	r31
    2bfa:	e0 91 e8 01 	lds	r30, 0x01E8
    2bfe:	f0 91 e9 01 	lds	r31, 0x01E9
    2c02:	30 97       	sbiw	r30, 0x00	; 0
    2c04:	09 f0       	breq	.+2      	; 0x2c08 <__vector_9+0x30>
    2c06:	09 95       	icall
    2c08:	ff 91       	pop	r31
    2c0a:	ef 91       	pop	r30
    2c0c:	bf 91       	pop	r27
    2c0e:	af 91       	pop	r26
    2c10:	9f 91       	pop	r25
    2c12:	8f 91       	pop	r24
    2c14:	7f 91       	pop	r23
    2c16:	6f 91       	pop	r22
    2c18:	5f 91       	pop	r21
    2c1a:	4f 91       	pop	r20
    2c1c:	3f 91       	pop	r19
    2c1e:	2f 91       	pop	r18
    2c20:	0f 90       	pop	r0
    2c22:	0f be       	out	0x3f, r0	; 63
    2c24:	0f 90       	pop	r0
    2c26:	1f 90       	pop	r1
    2c28:	18 95       	reti

00002c2a <__vector_10>:
    2c2a:	1f 92       	push	r1
    2c2c:	0f 92       	push	r0
    2c2e:	0f b6       	in	r0, 0x3f	; 63
    2c30:	0f 92       	push	r0
    2c32:	11 24       	eor	r1, r1
    2c34:	2f 93       	push	r18
    2c36:	3f 93       	push	r19
    2c38:	4f 93       	push	r20
    2c3a:	5f 93       	push	r21
    2c3c:	6f 93       	push	r22
    2c3e:	7f 93       	push	r23
    2c40:	8f 93       	push	r24
    2c42:	9f 93       	push	r25
    2c44:	af 93       	push	r26
    2c46:	bf 93       	push	r27
    2c48:	ef 93       	push	r30
    2c4a:	ff 93       	push	r31
    2c4c:	e0 91 ea 01 	lds	r30, 0x01EA
    2c50:	f0 91 eb 01 	lds	r31, 0x01EB
    2c54:	30 97       	sbiw	r30, 0x00	; 0
    2c56:	09 f0       	breq	.+2      	; 0x2c5a <__vector_10+0x30>
    2c58:	09 95       	icall
    2c5a:	ff 91       	pop	r31
    2c5c:	ef 91       	pop	r30
    2c5e:	bf 91       	pop	r27
    2c60:	af 91       	pop	r26
    2c62:	9f 91       	pop	r25
    2c64:	8f 91       	pop	r24
    2c66:	7f 91       	pop	r23
    2c68:	6f 91       	pop	r22
    2c6a:	5f 91       	pop	r21
    2c6c:	4f 91       	pop	r20
    2c6e:	3f 91       	pop	r19
    2c70:	2f 91       	pop	r18
    2c72:	0f 90       	pop	r0
    2c74:	0f be       	out	0x3f, r0	; 63
    2c76:	0f 90       	pop	r0
    2c78:	1f 90       	pop	r1
    2c7a:	18 95       	reti

00002c7c <__vector_11>:
    2c7c:	1f 92       	push	r1
    2c7e:	0f 92       	push	r0
    2c80:	0f b6       	in	r0, 0x3f	; 63
    2c82:	0f 92       	push	r0
    2c84:	11 24       	eor	r1, r1
    2c86:	2f 93       	push	r18
    2c88:	3f 93       	push	r19
    2c8a:	4f 93       	push	r20
    2c8c:	5f 93       	push	r21
    2c8e:	6f 93       	push	r22
    2c90:	7f 93       	push	r23
    2c92:	8f 93       	push	r24
    2c94:	9f 93       	push	r25
    2c96:	af 93       	push	r26
    2c98:	bf 93       	push	r27
    2c9a:	ef 93       	push	r30
    2c9c:	ff 93       	push	r31
    2c9e:	e0 91 ec 01 	lds	r30, 0x01EC
    2ca2:	f0 91 ed 01 	lds	r31, 0x01ED
    2ca6:	30 97       	sbiw	r30, 0x00	; 0
    2ca8:	09 f0       	breq	.+2      	; 0x2cac <__vector_11+0x30>
    2caa:	09 95       	icall
    2cac:	ff 91       	pop	r31
    2cae:	ef 91       	pop	r30
    2cb0:	bf 91       	pop	r27
    2cb2:	af 91       	pop	r26
    2cb4:	9f 91       	pop	r25
    2cb6:	8f 91       	pop	r24
    2cb8:	7f 91       	pop	r23
    2cba:	6f 91       	pop	r22
    2cbc:	5f 91       	pop	r21
    2cbe:	4f 91       	pop	r20
    2cc0:	3f 91       	pop	r19
    2cc2:	2f 91       	pop	r18
    2cc4:	0f 90       	pop	r0
    2cc6:	0f be       	out	0x3f, r0	; 63
    2cc8:	0f 90       	pop	r0
    2cca:	1f 90       	pop	r1
    2ccc:	18 95       	reti

00002cce <__vector_13>:
    2cce:	1f 92       	push	r1
    2cd0:	0f 92       	push	r0
    2cd2:	0f b6       	in	r0, 0x3f	; 63
    2cd4:	0f 92       	push	r0
    2cd6:	11 24       	eor	r1, r1
    2cd8:	2f 93       	push	r18
    2cda:	3f 93       	push	r19
    2cdc:	4f 93       	push	r20
    2cde:	5f 93       	push	r21
    2ce0:	6f 93       	push	r22
    2ce2:	7f 93       	push	r23
    2ce4:	8f 93       	push	r24
    2ce6:	9f 93       	push	r25
    2ce8:	af 93       	push	r26
    2cea:	bf 93       	push	r27
    2cec:	ef 93       	push	r30
    2cee:	ff 93       	push	r31
    2cf0:	e0 91 f0 01 	lds	r30, 0x01F0
    2cf4:	f0 91 f1 01 	lds	r31, 0x01F1
    2cf8:	30 97       	sbiw	r30, 0x00	; 0
    2cfa:	09 f0       	breq	.+2      	; 0x2cfe <__vector_13+0x30>
    2cfc:	09 95       	icall
    2cfe:	ff 91       	pop	r31
    2d00:	ef 91       	pop	r30
    2d02:	bf 91       	pop	r27
    2d04:	af 91       	pop	r26
    2d06:	9f 91       	pop	r25
    2d08:	8f 91       	pop	r24
    2d0a:	7f 91       	pop	r23
    2d0c:	6f 91       	pop	r22
    2d0e:	5f 91       	pop	r21
    2d10:	4f 91       	pop	r20
    2d12:	3f 91       	pop	r19
    2d14:	2f 91       	pop	r18
    2d16:	0f 90       	pop	r0
    2d18:	0f be       	out	0x3f, r0	; 63
    2d1a:	0f 90       	pop	r0
    2d1c:	1f 90       	pop	r1
    2d1e:	18 95       	reti

00002d20 <__vector_14>:
    2d20:	1f 92       	push	r1
    2d22:	0f 92       	push	r0
    2d24:	0f b6       	in	r0, 0x3f	; 63
    2d26:	0f 92       	push	r0
    2d28:	11 24       	eor	r1, r1
    2d2a:	2f 93       	push	r18
    2d2c:	3f 93       	push	r19
    2d2e:	4f 93       	push	r20
    2d30:	5f 93       	push	r21
    2d32:	6f 93       	push	r22
    2d34:	7f 93       	push	r23
    2d36:	8f 93       	push	r24
    2d38:	9f 93       	push	r25
    2d3a:	af 93       	push	r26
    2d3c:	bf 93       	push	r27
    2d3e:	ef 93       	push	r30
    2d40:	ff 93       	push	r31
    2d42:	e0 91 f2 01 	lds	r30, 0x01F2
    2d46:	f0 91 f3 01 	lds	r31, 0x01F3
    2d4a:	30 97       	sbiw	r30, 0x00	; 0
    2d4c:	09 f0       	breq	.+2      	; 0x2d50 <__vector_14+0x30>
    2d4e:	09 95       	icall
    2d50:	ff 91       	pop	r31
    2d52:	ef 91       	pop	r30
    2d54:	bf 91       	pop	r27
    2d56:	af 91       	pop	r26
    2d58:	9f 91       	pop	r25
    2d5a:	8f 91       	pop	r24
    2d5c:	7f 91       	pop	r23
    2d5e:	6f 91       	pop	r22
    2d60:	5f 91       	pop	r21
    2d62:	4f 91       	pop	r20
    2d64:	3f 91       	pop	r19
    2d66:	2f 91       	pop	r18
    2d68:	0f 90       	pop	r0
    2d6a:	0f be       	out	0x3f, r0	; 63
    2d6c:	0f 90       	pop	r0
    2d6e:	1f 90       	pop	r1
    2d70:	18 95       	reti

00002d72 <__vector_12>:
    2d72:	1f 92       	push	r1
    2d74:	0f 92       	push	r0
    2d76:	0f b6       	in	r0, 0x3f	; 63
    2d78:	0f 92       	push	r0
    2d7a:	11 24       	eor	r1, r1
    2d7c:	2f 93       	push	r18
    2d7e:	3f 93       	push	r19
    2d80:	4f 93       	push	r20
    2d82:	5f 93       	push	r21
    2d84:	6f 93       	push	r22
    2d86:	7f 93       	push	r23
    2d88:	8f 93       	push	r24
    2d8a:	9f 93       	push	r25
    2d8c:	af 93       	push	r26
    2d8e:	bf 93       	push	r27
    2d90:	ef 93       	push	r30
    2d92:	ff 93       	push	r31
    2d94:	e0 91 ee 01 	lds	r30, 0x01EE
    2d98:	f0 91 ef 01 	lds	r31, 0x01EF
    2d9c:	30 97       	sbiw	r30, 0x00	; 0
    2d9e:	09 f0       	breq	.+2      	; 0x2da2 <__vector_12+0x30>
    2da0:	09 95       	icall
    2da2:	ff 91       	pop	r31
    2da4:	ef 91       	pop	r30
    2da6:	bf 91       	pop	r27
    2da8:	af 91       	pop	r26
    2daa:	9f 91       	pop	r25
    2dac:	8f 91       	pop	r24
    2dae:	7f 91       	pop	r23
    2db0:	6f 91       	pop	r22
    2db2:	5f 91       	pop	r21
    2db4:	4f 91       	pop	r20
    2db6:	3f 91       	pop	r19
    2db8:	2f 91       	pop	r18
    2dba:	0f 90       	pop	r0
    2dbc:	0f be       	out	0x3f, r0	; 63
    2dbe:	0f 90       	pop	r0
    2dc0:	1f 90       	pop	r1
    2dc2:	18 95       	reti

00002dc4 <__vector_15>:
    2dc4:	1f 92       	push	r1
    2dc6:	0f 92       	push	r0
    2dc8:	0f b6       	in	r0, 0x3f	; 63
    2dca:	0f 92       	push	r0
    2dcc:	11 24       	eor	r1, r1
    2dce:	2f 93       	push	r18
    2dd0:	3f 93       	push	r19
    2dd2:	4f 93       	push	r20
    2dd4:	5f 93       	push	r21
    2dd6:	6f 93       	push	r22
    2dd8:	7f 93       	push	r23
    2dda:	8f 93       	push	r24
    2ddc:	9f 93       	push	r25
    2dde:	af 93       	push	r26
    2de0:	bf 93       	push	r27
    2de2:	ef 93       	push	r30
    2de4:	ff 93       	push	r31
    2de6:	e0 91 f4 01 	lds	r30, 0x01F4
    2dea:	f0 91 f5 01 	lds	r31, 0x01F5
    2dee:	30 97       	sbiw	r30, 0x00	; 0
    2df0:	09 f0       	breq	.+2      	; 0x2df4 <__vector_15+0x30>
    2df2:	09 95       	icall
    2df4:	ff 91       	pop	r31
    2df6:	ef 91       	pop	r30
    2df8:	bf 91       	pop	r27
    2dfa:	af 91       	pop	r26
    2dfc:	9f 91       	pop	r25
    2dfe:	8f 91       	pop	r24
    2e00:	7f 91       	pop	r23
    2e02:	6f 91       	pop	r22
    2e04:	5f 91       	pop	r21
    2e06:	4f 91       	pop	r20
    2e08:	3f 91       	pop	r19
    2e0a:	2f 91       	pop	r18
    2e0c:	0f 90       	pop	r0
    2e0e:	0f be       	out	0x3f, r0	; 63
    2e10:	0f 90       	pop	r0
    2e12:	1f 90       	pop	r1
    2e14:	18 95       	reti

00002e16 <__vector_4>:
    2e16:	1f 92       	push	r1
    2e18:	0f 92       	push	r0
    2e1a:	0f b6       	in	r0, 0x3f	; 63
    2e1c:	0f 92       	push	r0
    2e1e:	11 24       	eor	r1, r1
    2e20:	2f 93       	push	r18
    2e22:	3f 93       	push	r19
    2e24:	4f 93       	push	r20
    2e26:	5f 93       	push	r21
    2e28:	6f 93       	push	r22
    2e2a:	7f 93       	push	r23
    2e2c:	8f 93       	push	r24
    2e2e:	9f 93       	push	r25
    2e30:	af 93       	push	r26
    2e32:	bf 93       	push	r27
    2e34:	ef 93       	push	r30
    2e36:	ff 93       	push	r31
    2e38:	e0 91 de 01 	lds	r30, 0x01DE
    2e3c:	f0 91 df 01 	lds	r31, 0x01DF
    2e40:	30 97       	sbiw	r30, 0x00	; 0
    2e42:	09 f0       	breq	.+2      	; 0x2e46 <__vector_4+0x30>
    2e44:	09 95       	icall
    2e46:	ff 91       	pop	r31
    2e48:	ef 91       	pop	r30
    2e4a:	bf 91       	pop	r27
    2e4c:	af 91       	pop	r26
    2e4e:	9f 91       	pop	r25
    2e50:	8f 91       	pop	r24
    2e52:	7f 91       	pop	r23
    2e54:	6f 91       	pop	r22
    2e56:	5f 91       	pop	r21
    2e58:	4f 91       	pop	r20
    2e5a:	3f 91       	pop	r19
    2e5c:	2f 91       	pop	r18
    2e5e:	0f 90       	pop	r0
    2e60:	0f be       	out	0x3f, r0	; 63
    2e62:	0f 90       	pop	r0
    2e64:	1f 90       	pop	r1
    2e66:	18 95       	reti

00002e68 <__vector_5>:
    2e68:	1f 92       	push	r1
    2e6a:	0f 92       	push	r0
    2e6c:	0f b6       	in	r0, 0x3f	; 63
    2e6e:	0f 92       	push	r0
    2e70:	11 24       	eor	r1, r1
    2e72:	2f 93       	push	r18
    2e74:	3f 93       	push	r19
    2e76:	4f 93       	push	r20
    2e78:	5f 93       	push	r21
    2e7a:	6f 93       	push	r22
    2e7c:	7f 93       	push	r23
    2e7e:	8f 93       	push	r24
    2e80:	9f 93       	push	r25
    2e82:	af 93       	push	r26
    2e84:	bf 93       	push	r27
    2e86:	ef 93       	push	r30
    2e88:	ff 93       	push	r31
    2e8a:	e0 91 e0 01 	lds	r30, 0x01E0
    2e8e:	f0 91 e1 01 	lds	r31, 0x01E1
    2e92:	30 97       	sbiw	r30, 0x00	; 0
    2e94:	09 f0       	breq	.+2      	; 0x2e98 <__vector_5+0x30>
    2e96:	09 95       	icall
    2e98:	ff 91       	pop	r31
    2e9a:	ef 91       	pop	r30
    2e9c:	bf 91       	pop	r27
    2e9e:	af 91       	pop	r26
    2ea0:	9f 91       	pop	r25
    2ea2:	8f 91       	pop	r24
    2ea4:	7f 91       	pop	r23
    2ea6:	6f 91       	pop	r22
    2ea8:	5f 91       	pop	r21
    2eaa:	4f 91       	pop	r20
    2eac:	3f 91       	pop	r19
    2eae:	2f 91       	pop	r18
    2eb0:	0f 90       	pop	r0
    2eb2:	0f be       	out	0x3f, r0	; 63
    2eb4:	0f 90       	pop	r0
    2eb6:	1f 90       	pop	r1
    2eb8:	18 95       	reti

00002eba <__vector_6>:
    2eba:	1f 92       	push	r1
    2ebc:	0f 92       	push	r0
    2ebe:	0f b6       	in	r0, 0x3f	; 63
    2ec0:	0f 92       	push	r0
    2ec2:	11 24       	eor	r1, r1
    2ec4:	2f 93       	push	r18
    2ec6:	3f 93       	push	r19
    2ec8:	4f 93       	push	r20
    2eca:	5f 93       	push	r21
    2ecc:	6f 93       	push	r22
    2ece:	7f 93       	push	r23
    2ed0:	8f 93       	push	r24
    2ed2:	9f 93       	push	r25
    2ed4:	af 93       	push	r26
    2ed6:	bf 93       	push	r27
    2ed8:	ef 93       	push	r30
    2eda:	ff 93       	push	r31
    2edc:	e0 91 e2 01 	lds	r30, 0x01E2
    2ee0:	f0 91 e3 01 	lds	r31, 0x01E3
    2ee4:	30 97       	sbiw	r30, 0x00	; 0
    2ee6:	09 f0       	breq	.+2      	; 0x2eea <__vector_6+0x30>
    2ee8:	09 95       	icall
    2eea:	ff 91       	pop	r31
    2eec:	ef 91       	pop	r30
    2eee:	bf 91       	pop	r27
    2ef0:	af 91       	pop	r26
    2ef2:	9f 91       	pop	r25
    2ef4:	8f 91       	pop	r24
    2ef6:	7f 91       	pop	r23
    2ef8:	6f 91       	pop	r22
    2efa:	5f 91       	pop	r21
    2efc:	4f 91       	pop	r20
    2efe:	3f 91       	pop	r19
    2f00:	2f 91       	pop	r18
    2f02:	0f 90       	pop	r0
    2f04:	0f be       	out	0x3f, r0	; 63
    2f06:	0f 90       	pop	r0
    2f08:	1f 90       	pop	r1
    2f0a:	18 95       	reti

00002f0c <__vector_7>:
    2f0c:	1f 92       	push	r1
    2f0e:	0f 92       	push	r0
    2f10:	0f b6       	in	r0, 0x3f	; 63
    2f12:	0f 92       	push	r0
    2f14:	11 24       	eor	r1, r1
    2f16:	2f 93       	push	r18
    2f18:	3f 93       	push	r19
    2f1a:	4f 93       	push	r20
    2f1c:	5f 93       	push	r21
    2f1e:	6f 93       	push	r22
    2f20:	7f 93       	push	r23
    2f22:	8f 93       	push	r24
    2f24:	9f 93       	push	r25
    2f26:	af 93       	push	r26
    2f28:	bf 93       	push	r27
    2f2a:	ef 93       	push	r30
    2f2c:	ff 93       	push	r31
    2f2e:	e0 91 e4 01 	lds	r30, 0x01E4
    2f32:	f0 91 e5 01 	lds	r31, 0x01E5
    2f36:	30 97       	sbiw	r30, 0x00	; 0
    2f38:	09 f0       	breq	.+2      	; 0x2f3c <__vector_7+0x30>
    2f3a:	09 95       	icall
    2f3c:	ff 91       	pop	r31
    2f3e:	ef 91       	pop	r30
    2f40:	bf 91       	pop	r27
    2f42:	af 91       	pop	r26
    2f44:	9f 91       	pop	r25
    2f46:	8f 91       	pop	r24
    2f48:	7f 91       	pop	r23
    2f4a:	6f 91       	pop	r22
    2f4c:	5f 91       	pop	r21
    2f4e:	4f 91       	pop	r20
    2f50:	3f 91       	pop	r19
    2f52:	2f 91       	pop	r18
    2f54:	0f 90       	pop	r0
    2f56:	0f be       	out	0x3f, r0	; 63
    2f58:	0f 90       	pop	r0
    2f5a:	1f 90       	pop	r1
    2f5c:	18 95       	reti

00002f5e <ISR_attach>:
    2f5e:	e8 2f       	mov	r30, r24
    2f60:	80 32       	cpi	r24, 0x20	; 32
    2f62:	68 f4       	brcc	.+26     	; 0x2f7e <ISR_attach+0x20>
    2f64:	80 51       	subi	r24, 0x10	; 16
    2f66:	83 30       	cpi	r24, 0x03	; 3
    2f68:	50 f0       	brcs	.+20     	; 0x2f7e <ISR_attach+0x20>
    2f6a:	f0 e0       	ldi	r31, 0x00	; 0
    2f6c:	ee 0f       	add	r30, r30
    2f6e:	ff 1f       	adc	r31, r31
    2f70:	ea 52       	subi	r30, 0x2A	; 42
    2f72:	fe 4f       	sbci	r31, 0xFE	; 254
    2f74:	20 81       	ld	r18, Z
    2f76:	31 81       	ldd	r19, Z+1	; 0x01
    2f78:	71 83       	std	Z+1, r23	; 0x01
    2f7a:	60 83       	st	Z, r22
    2f7c:	02 c0       	rjmp	.+4      	; 0x2f82 <ISR_attach+0x24>
    2f7e:	20 e0       	ldi	r18, 0x00	; 0
    2f80:	30 e0       	ldi	r19, 0x00	; 0
    2f82:	c9 01       	movw	r24, r18
    2f84:	08 95       	ret

00002f86 <ISR_open>:
    2f86:	80 e1       	ldi	r24, 0x10	; 16
    2f88:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    2f8c:	88 23       	and	r24, r24
    2f8e:	61 f4       	brne	.+24     	; 0x2fa8 <ISR_open+0x22>
    2f90:	e6 ed       	ldi	r30, 0xD6	; 214
    2f92:	f1 e0       	ldi	r31, 0x01	; 1
    2f94:	11 92       	st	Z+, r1
    2f96:	11 92       	st	Z+, r1
    2f98:	82 e0       	ldi	r24, 0x02	; 2
    2f9a:	e6 31       	cpi	r30, 0x16	; 22
    2f9c:	f8 07       	cpc	r31, r24
    2f9e:	d1 f7       	brne	.-12     	; 0x2f94 <ISR_open+0xe>
    2fa0:	80 e1       	ldi	r24, 0x10	; 16
    2fa2:	61 e0       	ldi	r22, 0x01	; 1
    2fa4:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    2fa8:	80 e1       	ldi	r24, 0x10	; 16
    2faa:	91 e0       	ldi	r25, 0x01	; 1
    2fac:	08 95       	ret

00002fae <__LCD_init>:
    2fae:	23 9a       	sbi	0x04, 3	; 4
    2fb0:	08 95       	ret

00002fb2 <__LCD_putchar>:
    2fb2:	ff 92       	push	r15
    2fb4:	0f 93       	push	r16
    2fb6:	1f 93       	push	r17
    2fb8:	cf 93       	push	r28
    2fba:	df 93       	push	r29
    2fbc:	f8 2e       	mov	r15, r24
    2fbe:	8a e0       	ldi	r24, 0x0A	; 10
    2fc0:	f8 16       	cp	r15, r24
    2fc2:	b1 f0       	breq	.+44     	; 0x2ff0 <__LCD_putchar+0x3e>
    2fc4:	8f 15       	cp	r24, r15
    2fc6:	48 f0       	brcs	.+18     	; 0x2fda <__LCD_putchar+0x28>
    2fc8:	e8 e0       	ldi	r30, 0x08	; 8
    2fca:	fe 16       	cp	r15, r30
    2fcc:	b9 f1       	breq	.+110    	; 0x303c <__LCD_putchar+0x8a>
    2fce:	ef 15       	cp	r30, r15
    2fd0:	38 f1       	brcs	.+78     	; 0x3020 <__LCD_putchar+0x6e>
    2fd2:	f7 e0       	ldi	r31, 0x07	; 7
    2fd4:	ff 16       	cp	r15, r31
    2fd6:	51 f4       	brne	.+20     	; 0x2fec <__LCD_putchar+0x3a>
    2fd8:	3b c0       	rjmp	.+118    	; 0x3050 <__LCD_putchar+0x9e>
    2fda:	8d e0       	ldi	r24, 0x0D	; 13
    2fdc:	f8 16       	cp	r15, r24
    2fde:	59 f0       	breq	.+22     	; 0x2ff6 <__LCD_putchar+0x44>
    2fe0:	eb e1       	ldi	r30, 0x1B	; 27
    2fe2:	fe 16       	cp	r15, r30
    2fe4:	89 f0       	breq	.+34     	; 0x3008 <__LCD_putchar+0x56>
    2fe6:	fc e0       	ldi	r31, 0x0C	; 12
    2fe8:	ff 16       	cp	r15, r31
    2fea:	41 f0       	breq	.+16     	; 0x2ffc <__LCD_putchar+0x4a>
    2fec:	01 e0       	ldi	r16, 0x01	; 1
    2fee:	41 c0       	rjmp	.+130    	; 0x3072 <__LCD_putchar+0xc0>
    2ff0:	10 92 6f 04 	sts	0x046F, r1
    2ff4:	03 c0       	rjmp	.+6      	; 0x2ffc <__LCD_putchar+0x4a>
    2ff6:	10 92 6f 04 	sts	0x046F, r1
    2ffa:	3a c0       	rjmp	.+116    	; 0x3070 <__LCD_putchar+0xbe>
    2ffc:	80 91 70 04 	lds	r24, 0x0470
    3000:	81 50       	subi	r24, 0x01	; 1
    3002:	80 93 70 04 	sts	0x0470, r24
    3006:	34 c0       	rjmp	.+104    	; 0x3070 <__LCD_putchar+0xbe>
    3008:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <LCD_clear>
    300c:	14 c0       	rjmp	.+40     	; 0x3036 <__LCD_putchar+0x84>
    300e:	80 e0       	ldi	r24, 0x00	; 0
    3010:	61 e0       	ldi	r22, 0x01	; 1
    3012:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    3016:	80 91 6f 04 	lds	r24, 0x046F
    301a:	8f 5f       	subi	r24, 0xFF	; 255
    301c:	80 93 6f 04 	sts	0x046F, r24
    3020:	80 91 6f 04 	lds	r24, 0x046F
    3024:	87 ff       	sbrs	r24, 7
    3026:	f3 cf       	rjmp	.-26     	; 0x300e <__LCD_putchar+0x5c>
    3028:	10 92 6f 04 	sts	0x046F, r1
    302c:	80 91 70 04 	lds	r24, 0x0470
    3030:	81 50       	subi	r24, 0x01	; 1
    3032:	80 93 70 04 	sts	0x0470, r24
    3036:	00 e0       	ldi	r16, 0x00	; 0
    3038:	11 e0       	ldi	r17, 0x01	; 1
    303a:	1c c0       	rjmp	.+56     	; 0x3074 <__LCD_putchar+0xc2>
    303c:	80 91 6f 04 	lds	r24, 0x046F
    3040:	88 23       	and	r24, r24
    3042:	b1 f0       	breq	.+44     	; 0x3070 <__LCD_putchar+0xbe>
    3044:	80 91 6f 04 	lds	r24, 0x046F
    3048:	86 50       	subi	r24, 0x06	; 6
    304a:	80 93 6f 04 	sts	0x046F, r24
    304e:	10 c0       	rjmp	.+32     	; 0x3070 <__LCD_putchar+0xbe>
    3050:	81 e0       	ldi	r24, 0x01	; 1
    3052:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <SPKR_open>
    3056:	64 ef       	ldi	r22, 0xF4	; 244
    3058:	71 e0       	ldi	r23, 0x01	; 1
    305a:	80 e0       	ldi	r24, 0x00	; 0
    305c:	90 e0       	ldi	r25, 0x00	; 0
    305e:	4d e7       	ldi	r20, 0x7D	; 125
    3060:	50 e0       	ldi	r21, 0x00	; 0
    3062:	24 e6       	ldi	r18, 0x64	; 100
    3064:	30 e0       	ldi	r19, 0x00	; 0
    3066:	0e 94 e1 19 	call	0x33c2	; 0x33c2 <SPKR_play_beep>
    306a:	81 e0       	ldi	r24, 0x01	; 1
    306c:	0e 94 ad 19 	call	0x335a	; 0x335a <SPKR_close>
    3070:	00 e0       	ldi	r16, 0x00	; 0
    3072:	10 e0       	ldi	r17, 0x00	; 0
    3074:	80 91 70 04 	lds	r24, 0x0470
    3078:	60 91 6f 04 	lds	r22, 0x046F
    307c:	0e 94 80 0e 	call	0x1d00	; 0x1d00 <LCD_set_PGC_addr>
    3080:	00 23       	and	r16, r16
    3082:	51 f1       	breq	.+84     	; 0x30d8 <__LCD_putchar+0x126>
    3084:	85 e0       	ldi	r24, 0x05	; 5
    3086:	f8 9e       	mul	r15, r24
    3088:	c0 01       	movw	r24, r0
    308a:	11 24       	eor	r1, r1
    308c:	ec 01       	movw	r28, r24
    308e:	c3 55       	subi	r28, 0x53	; 83
    3090:	df 4f       	sbci	r29, 0xFF	; 255
    3092:	8c 01       	movw	r16, r24
    3094:	0e 54       	subi	r16, 0x4E	; 78
    3096:	1f 4f       	sbci	r17, 0xFF	; 255
    3098:	fe 01       	movw	r30, r28
    309a:	84 91       	lpm	r24, Z+
    309c:	61 e0       	ldi	r22, 0x01	; 1
    309e:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    30a2:	21 96       	adiw	r28, 0x01	; 1
    30a4:	c0 17       	cp	r28, r16
    30a6:	d1 07       	cpc	r29, r17
    30a8:	b9 f7       	brne	.-18     	; 0x3098 <__LCD_putchar+0xe6>
    30aa:	80 e0       	ldi	r24, 0x00	; 0
    30ac:	61 e0       	ldi	r22, 0x01	; 1
    30ae:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <LCD_write>
    30b2:	80 91 6f 04 	lds	r24, 0x046F
    30b6:	8a 5f       	subi	r24, 0xFA	; 250
    30b8:	80 93 6f 04 	sts	0x046F, r24
    30bc:	80 91 6f 04 	lds	r24, 0x046F
    30c0:	90 e0       	ldi	r25, 0x00	; 0
    30c2:	8c 37       	cpi	r24, 0x7C	; 124
    30c4:	91 05       	cpc	r25, r1
    30c6:	3c f0       	brlt	.+14     	; 0x30d6 <__LCD_putchar+0x124>
    30c8:	10 92 6f 04 	sts	0x046F, r1
    30cc:	80 91 70 04 	lds	r24, 0x0470
    30d0:	81 50       	subi	r24, 0x01	; 1
    30d2:	80 93 70 04 	sts	0x0470, r24
    30d6:	11 e0       	ldi	r17, 0x01	; 1
    30d8:	80 91 70 04 	lds	r24, 0x0470
    30dc:	83 70       	andi	r24, 0x03	; 3
    30de:	80 93 70 04 	sts	0x0470, r24
    30e2:	11 30       	cpi	r17, 0x01	; 1
    30e4:	59 f4       	brne	.+22     	; 0x30fc <__LCD_putchar+0x14a>
    30e6:	80 91 71 04 	lds	r24, 0x0471
    30ea:	81 30       	cpi	r24, 0x01	; 1
    30ec:	39 f4       	brne	.+14     	; 0x30fc <__LCD_putchar+0x14a>
    30ee:	e0 91 72 04 	lds	r30, 0x0472
    30f2:	f0 91 73 04 	lds	r31, 0x0473
    30f6:	30 97       	sbiw	r30, 0x00	; 0
    30f8:	09 f0       	breq	.+2      	; 0x30fc <__LCD_putchar+0x14a>
    30fa:	09 95       	icall
    30fc:	80 e0       	ldi	r24, 0x00	; 0
    30fe:	90 e0       	ldi	r25, 0x00	; 0
    3100:	df 91       	pop	r29
    3102:	cf 91       	pop	r28
    3104:	1f 91       	pop	r17
    3106:	0f 91       	pop	r16
    3108:	ff 90       	pop	r15
    310a:	08 95       	ret

0000310c <__LED_clr_pattern>:
    310c:	85 fd       	sbrc	r24, 5
    310e:	5d 98       	cbi	0x0b, 5	; 11
    3110:	86 fd       	sbrc	r24, 6
    3112:	5e 98       	cbi	0x0b, 6	; 11
    3114:	08 95       	ret

00003116 <__LED_init>:
    3116:	55 9a       	sbi	0x0a, 5	; 10
    3118:	56 9a       	sbi	0x0a, 6	; 10
    311a:	08 95       	ret

0000311c <__LED_set_pattern>:
    311c:	85 fd       	sbrc	r24, 5
    311e:	5d 9a       	sbi	0x0b, 5	; 11
    3120:	86 fd       	sbrc	r24, 6
    3122:	5e 9a       	sbi	0x0b, 6	; 11
    3124:	08 95       	ret

00003126 <ATMEGA_open>:
    3126:	80 e0       	ldi	r24, 0x00	; 0
    3128:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    312c:	88 23       	and	r24, r24
    312e:	51 f4       	brne	.+20     	; 0x3144 <ATMEGA_open+0x1e>
    3130:	f8 94       	cli
    3132:	0e 94 c4 1b 	call	0x3788	; 0x3788 <__ATMEGA_init>
    3136:	81 e0       	ldi	r24, 0x01	; 1
    3138:	0e 94 a5 18 	call	0x314a	; 0x314a <ATMEGA_set_clk_mode>
    313c:	80 e0       	ldi	r24, 0x00	; 0
    313e:	61 e0       	ldi	r22, 0x01	; 1
    3140:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    3144:	80 e0       	ldi	r24, 0x00	; 0
    3146:	91 e0       	ldi	r25, 0x01	; 1
    3148:	08 95       	ret

0000314a <ATMEGA_set_clk_mode>:
    314a:	81 30       	cpi	r24, 0x01	; 1
    314c:	49 f0       	breq	.+18     	; 0x3160 <ATMEGA_set_clk_mode+0x16>
    314e:	f8 94       	cli
    3150:	81 30       	cpi	r24, 0x01	; 1
    3152:	20 f1       	brcs	.+72     	; 0x319c <ATMEGA_set_clk_mode+0x52>
    3154:	82 30       	cpi	r24, 0x02	; 2
    3156:	b1 f0       	breq	.+44     	; 0x3184 <ATMEGA_set_clk_mode+0x3a>
    3158:	83 30       	cpi	r24, 0x03	; 3
    315a:	09 f0       	breq	.+2      	; 0x315e <ATMEGA_set_clk_mode+0x14>
    315c:	45 c0       	rjmp	.+138    	; 0x31e8 <ATMEGA_set_clk_mode+0x9e>
    315e:	17 c0       	rjmp	.+46     	; 0x318e <ATMEGA_set_clk_mode+0x44>
    3160:	2c 9a       	sbi	0x05, 4	; 5
    3162:	80 e8       	ldi	r24, 0x80	; 128
    3164:	80 93 61 00 	sts	0x0061, r24
    3168:	10 92 61 00 	sts	0x0061, r1
    316c:	80 e0       	ldi	r24, 0x00	; 0
    316e:	90 e0       	ldi	r25, 0x00	; 0
    3170:	00 00       	nop
    3172:	01 96       	adiw	r24, 0x01	; 1
    3174:	88 32       	cpi	r24, 0x28	; 40
    3176:	91 05       	cpc	r25, r1
    3178:	d9 f7       	brne	.-10     	; 0x3170 <ATMEGA_set_clk_mode+0x26>
    317a:	10 92 68 00 	sts	0x0068, r1
    317e:	10 92 6b 00 	sts	0x006B, r1
    3182:	08 95       	ret
    3184:	80 e8       	ldi	r24, 0x80	; 128
    3186:	80 93 61 00 	sts	0x0061, r24
    318a:	83 e0       	ldi	r24, 0x03	; 3
    318c:	04 c0       	rjmp	.+8      	; 0x3196 <ATMEGA_set_clk_mode+0x4c>
    318e:	80 e8       	ldi	r24, 0x80	; 128
    3190:	80 93 61 00 	sts	0x0061, r24
    3194:	88 e0       	ldi	r24, 0x08	; 8
    3196:	80 93 61 00 	sts	0x0061, r24
    319a:	28 c0       	rjmp	.+80     	; 0x31ec <ATMEGA_set_clk_mode+0xa2>
    319c:	80 e0       	ldi	r24, 0x00	; 0
    319e:	90 e0       	ldi	r25, 0x00	; 0
    31a0:	00 00       	nop
    31a2:	01 96       	adiw	r24, 0x01	; 1
    31a4:	2d e6       	ldi	r18, 0x6D	; 109
    31a6:	80 36       	cpi	r24, 0x60	; 96
    31a8:	92 07       	cpc	r25, r18
    31aa:	d1 f7       	brne	.-12     	; 0x31a0 <ATMEGA_set_clk_mode+0x56>
    31ac:	2c 98       	cbi	0x05, 4	; 5
    31ae:	80 e0       	ldi	r24, 0x00	; 0
    31b0:	90 e0       	ldi	r25, 0x00	; 0
    31b2:	00 00       	nop
    31b4:	01 96       	adiw	r24, 0x01	; 1
    31b6:	2d e6       	ldi	r18, 0x6D	; 109
    31b8:	80 36       	cpi	r24, 0x60	; 96
    31ba:	92 07       	cpc	r25, r18
    31bc:	d1 f7       	brne	.-12     	; 0x31b2 <ATMEGA_set_clk_mode+0x68>
    31be:	10 92 7a 00 	sts	0x007A, r1
    31c2:	8f ef       	ldi	r24, 0xFF	; 255
    31c4:	80 93 64 00 	sts	0x0064, r24
    31c8:	80 91 68 00 	lds	r24, 0x0068
    31cc:	81 60       	ori	r24, 0x01	; 1
    31ce:	80 93 68 00 	sts	0x0068, r24
    31d2:	80 91 6b 00 	lds	r24, 0x006B
    31d6:	84 60       	ori	r24, 0x04	; 4
    31d8:	80 93 6b 00 	sts	0x006B, r24
    31dc:	78 94       	sei
    31de:	83 b7       	in	r24, 0x33	; 51
    31e0:	81 60       	ori	r24, 0x01	; 1
    31e2:	83 bf       	out	0x33, r24	; 51
    31e4:	88 95       	sleep
    31e6:	08 95       	ret
    31e8:	82 30       	cpi	r24, 0x02	; 2
    31ea:	08 f0       	brcs	.+2      	; 0x31ee <ATMEGA_set_clk_mode+0xa4>
    31ec:	78 94       	sei
    31ee:	08 95       	ret

000031f0 <SPI_open>:
    31f0:	0f 93       	push	r16
    31f2:	1f 93       	push	r17
    31f4:	0e 94 f0 1b 	call	0x37e0	; 0x37e0 <__SPI_init>
    31f8:	80 e0       	ldi	r24, 0x00	; 0
    31fa:	6f ed       	ldi	r22, 0xDF	; 223
    31fc:	7b e1       	ldi	r23, 0x1B	; 27
    31fe:	0e 94 31 19 	call	0x3262	; 0x3262 <SPI_set_config_func>
    3202:	81 e0       	ldi	r24, 0x01	; 1
    3204:	67 ed       	ldi	r22, 0xD7	; 215
    3206:	7b e1       	ldi	r23, 0x1B	; 27
    3208:	0e 94 31 19 	call	0x3262	; 0x3262 <SPI_set_config_func>
    320c:	82 e0       	ldi	r24, 0x02	; 2
    320e:	6f ec       	ldi	r22, 0xCF	; 207
    3210:	7b e1       	ldi	r23, 0x1B	; 27
    3212:	0e 94 31 19 	call	0x3262	; 0x3262 <SPI_set_config_func>
    3216:	86 e0       	ldi	r24, 0x06	; 6
    3218:	67 ee       	ldi	r22, 0xE7	; 231
    321a:	7b e1       	ldi	r23, 0x1B	; 27
    321c:	0e 94 31 19 	call	0x3262	; 0x3262 <SPI_set_config_func>
    3220:	07 ec       	ldi	r16, 0xC7	; 199
    3222:	1b e1       	ldi	r17, 0x1B	; 27
    3224:	83 e0       	ldi	r24, 0x03	; 3
    3226:	b8 01       	movw	r22, r16
    3228:	0e 94 31 19 	call	0x3262	; 0x3262 <SPI_set_config_func>
    322c:	84 e0       	ldi	r24, 0x04	; 4
    322e:	b8 01       	movw	r22, r16
    3230:	0e 94 31 19 	call	0x3262	; 0x3262 <SPI_set_config_func>
    3234:	85 e0       	ldi	r24, 0x05	; 5
    3236:	b8 01       	movw	r22, r16
    3238:	0e 94 31 19 	call	0x3262	; 0x3262 <SPI_set_config_func>
    323c:	87 e0       	ldi	r24, 0x07	; 7
    323e:	b8 01       	movw	r22, r16
    3240:	0e 94 31 19 	call	0x3262	; 0x3262 <SPI_set_config_func>
    3244:	82 e0       	ldi	r24, 0x02	; 2
    3246:	61 e0       	ldi	r22, 0x01	; 1
    3248:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    324c:	8f ef       	ldi	r24, 0xFF	; 255
    324e:	80 93 74 04 	sts	0x0474, r24
    3252:	87 e0       	ldi	r24, 0x07	; 7
    3254:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <SPI_set_slave_addr>
    3258:	82 e0       	ldi	r24, 0x02	; 2
    325a:	91 e0       	ldi	r25, 0x01	; 1
    325c:	1f 91       	pop	r17
    325e:	0f 91       	pop	r16
    3260:	08 95       	ret

00003262 <SPI_set_config_func>:
    3262:	e8 2f       	mov	r30, r24
    3264:	f0 e0       	ldi	r31, 0x00	; 0
    3266:	ee 0f       	add	r30, r30
    3268:	ff 1f       	adc	r31, r31
    326a:	ea 5e       	subi	r30, 0xEA	; 234
    326c:	fd 4f       	sbci	r31, 0xFD	; 253
    326e:	71 83       	std	Z+1, r23	; 0x01
    3270:	60 83       	st	Z, r22
    3272:	08 95       	ret

00003274 <__SPKR_TIMER1_COMPA_vect>:
    3274:	0e 94 3d 19 	call	0x327a	; 0x327a <SPKR_clk>
    3278:	08 95       	ret

0000327a <SPKR_clk>:
    327a:	80 91 28 02 	lds	r24, 0x0228
    327e:	90 91 29 02 	lds	r25, 0x0229
    3282:	a0 91 2a 02 	lds	r26, 0x022A
    3286:	b0 91 2b 02 	lds	r27, 0x022B
    328a:	20 91 2c 02 	lds	r18, 0x022C
    328e:	30 91 2d 02 	lds	r19, 0x022D
    3292:	40 91 2e 02 	lds	r20, 0x022E
    3296:	50 91 2f 02 	lds	r21, 0x022F
    329a:	28 0f       	add	r18, r24
    329c:	39 1f       	adc	r19, r25
    329e:	4a 1f       	adc	r20, r26
    32a0:	5b 1f       	adc	r21, r27
    32a2:	20 93 28 02 	sts	0x0228, r18
    32a6:	30 93 29 02 	sts	0x0229, r19
    32aa:	40 93 2a 02 	sts	0x022A, r20
    32ae:	50 93 2b 02 	sts	0x022B, r21
    32b2:	80 91 28 02 	lds	r24, 0x0228
    32b6:	90 91 29 02 	lds	r25, 0x0229
    32ba:	a0 91 2a 02 	lds	r26, 0x022A
    32be:	b0 91 2b 02 	lds	r27, 0x022B
    32c2:	88 51       	subi	r24, 0x18	; 24
    32c4:	96 4f       	sbci	r25, 0xF6	; 246
    32c6:	a0 40       	sbci	r26, 0x00	; 0
    32c8:	b0 40       	sbci	r27, 0x00	; 0
    32ca:	bc f0       	brlt	.+46     	; 0x32fa <SPKR_clk+0x80>
    32cc:	8b b1       	in	r24, 0x0b	; 11
    32ce:	80 58       	subi	r24, 0x80	; 128
    32d0:	8b b9       	out	0x0b, r24	; 11
    32d2:	80 91 28 02 	lds	r24, 0x0228
    32d6:	90 91 29 02 	lds	r25, 0x0229
    32da:	a0 91 2a 02 	lds	r26, 0x022A
    32de:	b0 91 2b 02 	lds	r27, 0x022B
    32e2:	88 51       	subi	r24, 0x18	; 24
    32e4:	96 4f       	sbci	r25, 0xF6	; 246
    32e6:	a0 40       	sbci	r26, 0x00	; 0
    32e8:	b0 40       	sbci	r27, 0x00	; 0
    32ea:	80 93 28 02 	sts	0x0228, r24
    32ee:	90 93 29 02 	sts	0x0229, r25
    32f2:	a0 93 2a 02 	sts	0x022A, r26
    32f6:	b0 93 2b 02 	sts	0x022B, r27
    32fa:	08 95       	ret

000032fc <__SPKR_close_beep_mode>:
    32fc:	8a e0       	ldi	r24, 0x0A	; 10
    32fe:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    3302:	81 30       	cpi	r24, 0x01	; 1
    3304:	41 f4       	brne	.+16     	; 0x3316 <__SPKR_close_beep_mode+0x1a>
    3306:	0e 94 20 1c 	call	0x3840	; 0x3840 <__SPKR_close>
    330a:	10 92 27 02 	sts	0x0227, r1
    330e:	8a e0       	ldi	r24, 0x0A	; 10
    3310:	60 e0       	ldi	r22, 0x00	; 0
    3312:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    3316:	08 95       	ret

00003318 <__SPKR_close_tone_mode>:
    3318:	89 e0       	ldi	r24, 0x09	; 9
    331a:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    331e:	81 30       	cpi	r24, 0x01	; 1
    3320:	d9 f4       	brne	.+54     	; 0x3358 <__SPKR_close_tone_mode+0x40>
    3322:	80 91 26 02 	lds	r24, 0x0226
    3326:	88 23       	and	r24, r24
    3328:	11 f0       	breq	.+4      	; 0x332e <__SPKR_close_tone_mode+0x16>
    332a:	0e 94 2e 1a 	call	0x345c	; 0x345c <__SPKR_stop>
    332e:	82 e0       	ldi	r24, 0x02	; 2
    3330:	0e 94 20 1c 	call	0x3840	; 0x3840 <__SPKR_close>
    3334:	80 91 34 02 	lds	r24, 0x0234
    3338:	90 91 35 02 	lds	r25, 0x0235
    333c:	00 97       	sbiw	r24, 0x00	; 0
    333e:	31 f0       	breq	.+12     	; 0x334c <__SPKR_close_tone_mode+0x34>
    3340:	0e 94 df 28 	call	0x51be	; 0x51be <free>
    3344:	10 92 35 02 	sts	0x0235, r1
    3348:	10 92 34 02 	sts	0x0234, r1
    334c:	10 92 26 02 	sts	0x0226, r1
    3350:	89 e0       	ldi	r24, 0x09	; 9
    3352:	60 e0       	ldi	r22, 0x00	; 0
    3354:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    3358:	08 95       	ret

0000335a <SPKR_close>:
    335a:	81 30       	cpi	r24, 0x01	; 1
    335c:	29 f0       	breq	.+10     	; 0x3368 <SPKR_close+0xe>
    335e:	82 30       	cpi	r24, 0x02	; 2
    3360:	29 f4       	brne	.+10     	; 0x336c <SPKR_close+0x12>
    3362:	0e 94 8c 19 	call	0x3318	; 0x3318 <__SPKR_close_tone_mode>
    3366:	08 95       	ret
    3368:	0e 94 7e 19 	call	0x32fc	; 0x32fc <__SPKR_close_beep_mode>
    336c:	08 95       	ret

0000336e <__SPKR_init>:
    336e:	98 2f       	mov	r25, r24
    3370:	80 91 26 02 	lds	r24, 0x0226
    3374:	88 23       	and	r24, r24
    3376:	31 f4       	brne	.+12     	; 0x3384 <__SPKR_init+0x16>
    3378:	80 91 27 02 	lds	r24, 0x0227
    337c:	88 23       	and	r24, r24
    337e:	11 f4       	brne	.+4      	; 0x3384 <__SPKR_init+0x16>
    3380:	57 9a       	sbi	0x0a, 7	; 10
    3382:	5f 98       	cbi	0x0b, 7	; 11
    3384:	80 91 26 02 	lds	r24, 0x0226
    3388:	88 23       	and	r24, r24
    338a:	d1 f4       	brne	.+52     	; 0x33c0 <__SPKR_init+0x52>
    338c:	92 30       	cpi	r25, 0x02	; 2
    338e:	c1 f4       	brne	.+48     	; 0x33c0 <__SPKR_init+0x52>
    3390:	10 92 80 00 	sts	0x0080, r1
    3394:	10 92 81 00 	sts	0x0081, r1
    3398:	80 91 81 00 	lds	r24, 0x0081
    339c:	88 60       	ori	r24, 0x08	; 8
    339e:	80 93 81 00 	sts	0x0081, r24
    33a2:	80 91 81 00 	lds	r24, 0x0081
    33a6:	81 60       	ori	r24, 0x01	; 1
    33a8:	80 93 81 00 	sts	0x0081, r24
    33ac:	10 92 85 00 	sts	0x0085, r1
    33b0:	10 92 84 00 	sts	0x0084, r1
    33b4:	81 e0       	ldi	r24, 0x01	; 1
    33b6:	80 93 89 00 	sts	0x0089, r24
    33ba:	80 e9       	ldi	r24, 0x90	; 144
    33bc:	80 93 88 00 	sts	0x0088, r24
    33c0:	08 95       	ret

000033c2 <SPKR_play_beep>:
    33c2:	8f 92       	push	r8
    33c4:	9f 92       	push	r9
    33c6:	af 92       	push	r10
    33c8:	bf 92       	push	r11
    33ca:	cf 92       	push	r12
    33cc:	df 92       	push	r13
    33ce:	ef 92       	push	r14
    33d0:	ff 92       	push	r15
    33d2:	0f 93       	push	r16
    33d4:	1f 93       	push	r17
    33d6:	cf 93       	push	r28
    33d8:	df 93       	push	r29
    33da:	4b 01       	movw	r8, r22
    33dc:	5c 01       	movw	r10, r24
    33de:	ea 01       	movw	r28, r20
    33e0:	b9 01       	movw	r22, r18
    33e2:	21 15       	cp	r18, r1
    33e4:	31 05       	cpc	r19, r1
    33e6:	39 f1       	breq	.+78     	; 0x3436 <SPKR_play_beep+0x74>
    33e8:	9e 01       	movw	r18, r28
    33ea:	44 27       	eor	r20, r20
    33ec:	37 fd       	sbrc	r19, 7
    33ee:	40 95       	com	r20
    33f0:	54 2f       	mov	r21, r20
    33f2:	65 36       	cpi	r22, 0x65	; 101
    33f4:	71 05       	cpc	r23, r1
    33f6:	10 f0       	brcs	.+4      	; 0x33fc <SPKR_play_beep+0x3a>
    33f8:	64 e6       	ldi	r22, 0x64	; 100
    33fa:	70 e0       	ldi	r23, 0x00	; 0
    33fc:	80 e0       	ldi	r24, 0x00	; 0
    33fe:	90 e0       	ldi	r25, 0x00	; 0
    3400:	0e 94 93 27 	call	0x4f26	; 0x4f26 <__mulsi3>
    3404:	24 e6       	ldi	r18, 0x64	; 100
    3406:	30 e0       	ldi	r19, 0x00	; 0
    3408:	40 e0       	ldi	r20, 0x00	; 0
    340a:	50 e0       	ldi	r21, 0x00	; 0
    340c:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <__udivmodsi4>
    3410:	79 01       	movw	r14, r18
    3412:	8a 01       	movw	r16, r20
    3414:	c5 01       	movw	r24, r10
    3416:	b4 01       	movw	r22, r8
    3418:	0e 94 09 1c 	call	0x3812	; 0x3812 <SPKR_beep>
    341c:	c7 01       	movw	r24, r14
    341e:	0e 94 24 14 	call	0x2848	; 0x2848 <TMRSRVC_delay>
    3422:	60 e0       	ldi	r22, 0x00	; 0
    3424:	70 e0       	ldi	r23, 0x00	; 0
    3426:	80 e0       	ldi	r24, 0x00	; 0
    3428:	90 e0       	ldi	r25, 0x00	; 0
    342a:	0e 94 09 1c 	call	0x3812	; 0x3812 <SPKR_beep>
    342e:	ce 01       	movw	r24, r28
    3430:	8e 19       	sub	r24, r14
    3432:	9f 09       	sbc	r25, r15
    3434:	04 c0       	rjmp	.+8      	; 0x343e <SPKR_play_beep+0x7c>
    3436:	41 15       	cp	r20, r1
    3438:	51 05       	cpc	r21, r1
    343a:	19 f0       	breq	.+6      	; 0x3442 <SPKR_play_beep+0x80>
    343c:	ca 01       	movw	r24, r20
    343e:	0e 94 24 14 	call	0x2848	; 0x2848 <TMRSRVC_delay>
    3442:	df 91       	pop	r29
    3444:	cf 91       	pop	r28
    3446:	1f 91       	pop	r17
    3448:	0f 91       	pop	r16
    344a:	ff 90       	pop	r15
    344c:	ef 90       	pop	r14
    344e:	df 90       	pop	r13
    3450:	cf 90       	pop	r12
    3452:	bf 90       	pop	r11
    3454:	af 90       	pop	r10
    3456:	9f 90       	pop	r9
    3458:	8f 90       	pop	r8
    345a:	08 95       	ret

0000345c <__SPKR_stop>:
    345c:	ef e6       	ldi	r30, 0x6F	; 111
    345e:	f0 e0       	ldi	r31, 0x00	; 0
    3460:	80 81       	ld	r24, Z
    3462:	8d 7f       	andi	r24, 0xFD	; 253
    3464:	80 83       	st	Z, r24
    3466:	08 95       	ret

00003468 <STEPPER_go>:
    3468:	98 2f       	mov	r25, r24
    346a:	81 e0       	ldi	r24, 0x01	; 1
    346c:	80 93 59 04 	sts	0x0459, r24
    3470:	91 30       	cpi	r25, 0x01	; 1
    3472:	51 f0       	breq	.+20     	; 0x3488 <STEPPER_go+0x20>
    3474:	91 30       	cpi	r25, 0x01	; 1
    3476:	18 f0       	brcs	.+6      	; 0x347e <STEPPER_go+0x16>
    3478:	92 30       	cpi	r25, 0x02	; 2
    347a:	41 f4       	brne	.+16     	; 0x348c <STEPPER_go+0x24>
    347c:	03 c0       	rjmp	.+6      	; 0x3484 <STEPPER_go+0x1c>
    347e:	10 92 41 04 	sts	0x0441, r1
    3482:	04 c0       	rjmp	.+8      	; 0x348c <STEPPER_go+0x24>
    3484:	10 92 41 04 	sts	0x0441, r1
    3488:	10 92 42 04 	sts	0x0442, r1
    348c:	10 92 59 04 	sts	0x0459, r1
    3490:	08 95       	ret

00003492 <__STEPPER_init>:
    3492:	3a 9a       	sbi	0x07, 2	; 7
    3494:	3b 9a       	sbi	0x07, 3	; 7
    3496:	3c 9a       	sbi	0x07, 4	; 7
    3498:	3d 9a       	sbi	0x07, 5	; 7
    349a:	3e 9a       	sbi	0x07, 6	; 7
    349c:	3f 9a       	sbi	0x07, 7	; 7
    349e:	88 b1       	in	r24, 0x08	; 8
    34a0:	83 70       	andi	r24, 0x03	; 3
    34a2:	88 b9       	out	0x08, r24	; 8
    34a4:	08 95       	ret

000034a6 <STEPPER_set_steps>:
    34a6:	98 2f       	mov	r25, r24
    34a8:	81 e0       	ldi	r24, 0x01	; 1
    34aa:	80 93 59 04 	sts	0x0459, r24
    34ae:	91 30       	cpi	r25, 0x01	; 1
    34b0:	71 f0       	breq	.+28     	; 0x34ce <STEPPER_set_steps+0x28>
    34b2:	91 30       	cpi	r25, 0x01	; 1
    34b4:	18 f0       	brcs	.+6      	; 0x34bc <STEPPER_set_steps+0x16>
    34b6:	92 30       	cpi	r25, 0x02	; 2
    34b8:	71 f4       	brne	.+28     	; 0x34d6 <STEPPER_set_steps+0x30>
    34ba:	05 c0       	rjmp	.+10     	; 0x34c6 <STEPPER_set_steps+0x20>
    34bc:	70 93 36 04 	sts	0x0436, r23
    34c0:	60 93 35 04 	sts	0x0435, r22
    34c4:	08 c0       	rjmp	.+16     	; 0x34d6 <STEPPER_set_steps+0x30>
    34c6:	70 93 36 04 	sts	0x0436, r23
    34ca:	60 93 35 04 	sts	0x0435, r22
    34ce:	70 93 38 04 	sts	0x0438, r23
    34d2:	60 93 37 04 	sts	0x0437, r22
    34d6:	10 92 59 04 	sts	0x0459, r1
    34da:	08 95       	ret

000034dc <STEPPER_set_stop_mode>:
    34dc:	98 2f       	mov	r25, r24
    34de:	81 e0       	ldi	r24, 0x01	; 1
    34e0:	80 93 59 04 	sts	0x0459, r24
    34e4:	91 30       	cpi	r25, 0x01	; 1
    34e6:	51 f0       	breq	.+20     	; 0x34fc <STEPPER_set_stop_mode+0x20>
    34e8:	91 30       	cpi	r25, 0x01	; 1
    34ea:	18 f0       	brcs	.+6      	; 0x34f2 <STEPPER_set_stop_mode+0x16>
    34ec:	92 30       	cpi	r25, 0x02	; 2
    34ee:	41 f4       	brne	.+16     	; 0x3500 <STEPPER_set_stop_mode+0x24>
    34f0:	03 c0       	rjmp	.+6      	; 0x34f8 <STEPPER_set_stop_mode+0x1c>
    34f2:	60 93 43 04 	sts	0x0443, r22
    34f6:	04 c0       	rjmp	.+8      	; 0x3500 <STEPPER_set_stop_mode+0x24>
    34f8:	60 93 43 04 	sts	0x0443, r22
    34fc:	60 93 44 04 	sts	0x0444, r22
    3500:	10 92 59 04 	sts	0x0459, r1
    3504:	08 95       	ret

00003506 <STEPPER_setup_decels>:
    3506:	0f 93       	push	r16
    3508:	1f 93       	push	r17
    350a:	cf 93       	push	r28
    350c:	df 93       	push	r29
    350e:	eb 01       	movw	r28, r22
    3510:	8a 01       	movw	r16, r20
    3512:	81 30       	cpi	r24, 0x01	; 1
    3514:	01 f1       	breq	.+64     	; 0x3556 <STEPPER_setup_decels+0x50>
    3516:	81 30       	cpi	r24, 0x01	; 1
    3518:	18 f0       	brcs	.+6      	; 0x3520 <STEPPER_setup_decels+0x1a>
    351a:	82 30       	cpi	r24, 0x02	; 2
    351c:	61 f5       	brne	.+88     	; 0x3576 <STEPPER_setup_decels+0x70>
    351e:	0d c0       	rjmp	.+26     	; 0x353a <STEPPER_setup_decels+0x34>
    3520:	80 91 2d 04 	lds	r24, 0x042D
    3524:	90 91 2e 04 	lds	r25, 0x042E
    3528:	89 2b       	or	r24, r25
    352a:	11 f0       	breq	.+4      	; 0x3530 <STEPPER_setup_decels+0x2a>
    352c:	80 e0       	ldi	r24, 0x00	; 0
    352e:	1a c0       	rjmp	.+52     	; 0x3564 <STEPPER_setup_decels+0x5e>
    3530:	10 92 3a 04 	sts	0x043A, r1
    3534:	10 92 39 04 	sts	0x0439, r1
    3538:	1e c0       	rjmp	.+60     	; 0x3576 <STEPPER_setup_decels+0x70>
    353a:	80 91 2d 04 	lds	r24, 0x042D
    353e:	90 91 2e 04 	lds	r25, 0x042E
    3542:	89 2b       	or	r24, r25
    3544:	21 f0       	breq	.+8      	; 0x354e <STEPPER_setup_decels+0x48>
    3546:	80 e0       	ldi	r24, 0x00	; 0
    3548:	0e 94 3c 1c 	call	0x3878	; 0x3878 <STEPPER_set_decel_step_values>
    354c:	04 c0       	rjmp	.+8      	; 0x3556 <STEPPER_setup_decels+0x50>
    354e:	10 92 3a 04 	sts	0x043A, r1
    3552:	10 92 39 04 	sts	0x0439, r1
    3556:	80 91 2f 04 	lds	r24, 0x042F
    355a:	90 91 30 04 	lds	r25, 0x0430
    355e:	89 2b       	or	r24, r25
    3560:	31 f0       	breq	.+12     	; 0x356e <STEPPER_setup_decels+0x68>
    3562:	81 e0       	ldi	r24, 0x01	; 1
    3564:	be 01       	movw	r22, r28
    3566:	a8 01       	movw	r20, r16
    3568:	0e 94 3c 1c 	call	0x3878	; 0x3878 <STEPPER_set_decel_step_values>
    356c:	04 c0       	rjmp	.+8      	; 0x3576 <STEPPER_setup_decels+0x70>
    356e:	10 92 3c 04 	sts	0x043C, r1
    3572:	10 92 3b 04 	sts	0x043B, r1
    3576:	df 91       	pop	r29
    3578:	cf 91       	pop	r28
    357a:	1f 91       	pop	r17
    357c:	0f 91       	pop	r16
    357e:	08 95       	ret

00003580 <SYS_init>:
    3580:	10 92 5c 04 	sts	0x045C, r1
    3584:	10 92 5d 04 	sts	0x045D, r1
    3588:	10 92 61 04 	sts	0x0461, r1
    358c:	10 92 5e 04 	sts	0x045E, r1
    3590:	10 92 60 04 	sts	0x0460, r1
    3594:	10 92 62 04 	sts	0x0462, r1
    3598:	10 92 63 04 	sts	0x0463, r1
    359c:	10 92 64 04 	sts	0x0464, r1
    35a0:	10 92 65 04 	sts	0x0465, r1
    35a4:	10 92 66 04 	sts	0x0466, r1
    35a8:	10 92 67 04 	sts	0x0467, r1
    35ac:	10 92 68 04 	sts	0x0468, r1
    35b0:	10 92 69 04 	sts	0x0469, r1
    35b4:	10 92 6a 04 	sts	0x046A, r1
    35b8:	10 92 6b 04 	sts	0x046B, r1
    35bc:	10 92 6c 04 	sts	0x046C, r1
    35c0:	10 92 6d 04 	sts	0x046D, r1
    35c4:	08 95       	ret

000035c6 <ATTINY_get_sensors>:
    35c6:	0f 93       	push	r16
    35c8:	1f 93       	push	r17
    35ca:	81 e0       	ldi	r24, 0x01	; 1
    35cc:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    35d0:	81 30       	cpi	r24, 0x01	; 1
    35d2:	11 f0       	breq	.+4      	; 0x35d8 <ATTINY_get_sensors+0x12>
    35d4:	00 e0       	ldi	r16, 0x00	; 0
    35d6:	24 c0       	rjmp	.+72     	; 0x3620 <ATTINY_get_sensors+0x5a>
    35d8:	87 e0       	ldi	r24, 0x07	; 7
    35da:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <SPI_set_slave_addr>
    35de:	82 e0       	ldi	r24, 0x02	; 2
    35e0:	6a e0       	ldi	r22, 0x0A	; 10
    35e2:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <SPI_transmit>
    35e6:	82 e0       	ldi	r24, 0x02	; 2
    35e8:	62 eb       	ldi	r22, 0xB2	; 178
    35ea:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <SPI_transmit>
    35ee:	18 ec       	ldi	r17, 0xC8	; 200
    35f0:	81 2f       	mov	r24, r17
    35f2:	8a 95       	dec	r24
    35f4:	f1 f7       	brne	.-4      	; 0x35f2 <ATTINY_get_sensors+0x2c>
    35f6:	82 e0       	ldi	r24, 0x02	; 2
    35f8:	60 e0       	ldi	r22, 0x00	; 0
    35fa:	0e 94 f7 1b 	call	0x37ee	; 0x37ee <SPI_receive>
    35fe:	08 2f       	mov	r16, r24
    3600:	81 2f       	mov	r24, r17
    3602:	8a 95       	dec	r24
    3604:	f1 f7       	brne	.-4      	; 0x3602 <ATTINY_get_sensors+0x3c>
    3606:	82 e0       	ldi	r24, 0x02	; 2
    3608:	60 e0       	ldi	r22, 0x00	; 0
    360a:	0e 94 f7 1b 	call	0x37ee	; 0x37ee <SPI_receive>
    360e:	1a 95       	dec	r17
    3610:	f1 f7       	brne	.-4      	; 0x360e <ATTINY_get_sensors+0x48>
    3612:	87 e0       	ldi	r24, 0x07	; 7
    3614:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <SPI_set_slave_addr>
    3618:	88 e8       	ldi	r24, 0x88	; 136
    361a:	93 e1       	ldi	r25, 0x13	; 19
    361c:	01 97       	sbiw	r24, 0x01	; 1
    361e:	f1 f7       	brne	.-4      	; 0x361c <ATTINY_get_sensors+0x56>
    3620:	80 2f       	mov	r24, r16
    3622:	1f 91       	pop	r17
    3624:	0f 91       	pop	r16
    3626:	08 95       	ret

00003628 <TMRSRVC_insert>:
    3628:	cf 92       	push	r12
    362a:	df 92       	push	r13
    362c:	ef 92       	push	r14
    362e:	ff 92       	push	r15
    3630:	0f 93       	push	r16
    3632:	1f 93       	push	r17
    3634:	cf 93       	push	r28
    3636:	df 93       	push	r29
    3638:	ec 01       	movw	r28, r24
    363a:	80 91 93 04 	lds	r24, 0x0493
    363e:	88 23       	and	r24, r24
    3640:	39 f4       	brne	.+14     	; 0x3650 <TMRSRVC_insert+0x28>
    3642:	d0 93 95 04 	sts	0x0495, r29
    3646:	c0 93 94 04 	sts	0x0494, r28
    364a:	0e 94 a2 1b 	call	0x3744	; 0x3744 <TMRSRVC_start>
    364e:	47 c0       	rjmp	.+142    	; 0x36de <TMRSRVC_insert+0xb6>
    3650:	c0 90 94 04 	lds	r12, 0x0494
    3654:	d0 90 95 04 	lds	r13, 0x0495
    3658:	00 e0       	ldi	r16, 0x00	; 0
    365a:	10 e0       	ldi	r17, 0x00	; 0
    365c:	ee 24       	eor	r14, r14
    365e:	ff 24       	eor	r15, r15
    3660:	37 c0       	rjmp	.+110    	; 0x36d0 <TMRSRVC_insert+0xa8>
    3662:	a8 81       	ld	r26, Y
    3664:	b9 81       	ldd	r27, Y+1	; 0x01
    3666:	fd 01       	movw	r30, r26
    3668:	64 81       	ldd	r22, Z+4	; 0x04
    366a:	75 81       	ldd	r23, Z+5	; 0x05
    366c:	f6 01       	movw	r30, r12
    366e:	40 81       	ld	r20, Z
    3670:	51 81       	ldd	r21, Z+1	; 0x01
    3672:	fa 01       	movw	r30, r20
    3674:	84 81       	ldd	r24, Z+4	; 0x04
    3676:	95 81       	ldd	r25, Z+5	; 0x05
    3678:	9b 01       	movw	r18, r22
    367a:	28 1b       	sub	r18, r24
    367c:	39 0b       	sbc	r19, r25
    367e:	37 ff       	sbrs	r19, 7
    3680:	0f c0       	rjmp	.+30     	; 0x36a0 <TMRSRVC_insert+0x78>
    3682:	86 1b       	sub	r24, r22
    3684:	97 0b       	sbc	r25, r23
    3686:	95 83       	std	Z+5, r25	; 0x05
    3688:	84 83       	std	Z+4, r24	; 0x04
    368a:	db 82       	std	Y+3, r13	; 0x03
    368c:	ca 82       	std	Y+2, r12	; 0x02
    368e:	01 2b       	or	r16, r17
    3690:	29 f4       	brne	.+10     	; 0x369c <TMRSRVC_insert+0x74>
    3692:	d0 93 95 04 	sts	0x0495, r29
    3696:	c0 93 94 04 	sts	0x0494, r28
    369a:	21 c0       	rjmp	.+66     	; 0x36de <TMRSRVC_insert+0xb6>
    369c:	f7 01       	movw	r30, r14
    369e:	0c c0       	rjmp	.+24     	; 0x36b8 <TMRSRVC_insert+0x90>
    36a0:	f6 01       	movw	r30, r12
    36a2:	82 81       	ldd	r24, Z+2	; 0x02
    36a4:	93 81       	ldd	r25, Z+3	; 0x03
    36a6:	21 15       	cp	r18, r1
    36a8:	31 05       	cpc	r19, r1
    36aa:	49 f4       	brne	.+18     	; 0x36be <TMRSRVC_insert+0x96>
    36ac:	fd 01       	movw	r30, r26
    36ae:	15 82       	std	Z+5, r1	; 0x05
    36b0:	14 82       	std	Z+4, r1	; 0x04
    36b2:	9b 83       	std	Y+3, r25	; 0x03
    36b4:	8a 83       	std	Y+2, r24	; 0x02
    36b6:	f6 01       	movw	r30, r12
    36b8:	d3 83       	std	Z+3, r29	; 0x03
    36ba:	c2 83       	std	Z+2, r28	; 0x02
    36bc:	10 c0       	rjmp	.+32     	; 0x36de <TMRSRVC_insert+0xb6>
    36be:	fd 01       	movw	r30, r26
    36c0:	35 83       	std	Z+5, r19	; 0x05
    36c2:	24 83       	std	Z+4, r18	; 0x04
    36c4:	00 97       	sbiw	r24, 0x00	; 0
    36c6:	b9 f3       	breq	.-18     	; 0x36b6 <TMRSRVC_insert+0x8e>
    36c8:	0f 5f       	subi	r16, 0xFF	; 255
    36ca:	1f 4f       	sbci	r17, 0xFF	; 255
    36cc:	76 01       	movw	r14, r12
    36ce:	6c 01       	movw	r12, r24
    36d0:	80 91 93 04 	lds	r24, 0x0493
    36d4:	90 e0       	ldi	r25, 0x00	; 0
    36d6:	08 17       	cp	r16, r24
    36d8:	19 07       	cpc	r17, r25
    36da:	18 f2       	brcs	.-122    	; 0x3662 <TMRSRVC_insert+0x3a>
    36dc:	ec cf       	rjmp	.-40     	; 0x36b6 <TMRSRVC_insert+0x8e>
    36de:	80 91 93 04 	lds	r24, 0x0493
    36e2:	8f 5f       	subi	r24, 0xFF	; 255
    36e4:	80 93 93 04 	sts	0x0493, r24
    36e8:	df 91       	pop	r29
    36ea:	cf 91       	pop	r28
    36ec:	1f 91       	pop	r17
    36ee:	0f 91       	pop	r16
    36f0:	ff 90       	pop	r15
    36f2:	ef 90       	pop	r14
    36f4:	df 90       	pop	r13
    36f6:	cf 90       	pop	r12
    36f8:	08 95       	ret

000036fa <TMRSRVC_open>:
    36fa:	88 e0       	ldi	r24, 0x08	; 8
    36fc:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    3700:	88 23       	and	r24, r24
    3702:	b9 f4       	brne	.+46     	; 0x3732 <TMRSRVC_open+0x38>
    3704:	10 92 93 04 	sts	0x0493, r1
    3708:	10 92 95 04 	sts	0x0495, r1
    370c:	10 92 94 04 	sts	0x0494, r1
    3710:	10 92 36 02 	sts	0x0236, r1
    3714:	10 92 37 02 	sts	0x0237, r1
    3718:	80 e1       	ldi	r24, 0x10	; 16
    371a:	69 ea       	ldi	r22, 0xA9	; 169
    371c:	7c e1       	ldi	r23, 0x1C	; 28
    371e:	0e 94 b3 1b 	call	0x3766	; 0x3766 <__ISR_attach>
    3722:	0e 94 b0 1c 	call	0x3960	; 0x3960 <__TMRSRVC_init>
    3726:	0e 94 9c 1b 	call	0x3738	; 0x3738 <__TMRSRVC_start>
    372a:	88 e0       	ldi	r24, 0x08	; 8
    372c:	61 e0       	ldi	r22, 0x01	; 1
    372e:	0e 94 40 13 	call	0x2680	; 0x2680 <SYS_set_state>
    3732:	88 e0       	ldi	r24, 0x08	; 8
    3734:	91 e0       	ldi	r25, 0x01	; 1
    3736:	08 95       	ret

00003738 <__TMRSRVC_start>:
    3738:	ee e6       	ldi	r30, 0x6E	; 110
    373a:	f0 e0       	ldi	r31, 0x00	; 0
    373c:	80 81       	ld	r24, Z
    373e:	82 60       	ori	r24, 0x02	; 2
    3740:	80 83       	st	Z, r24
    3742:	08 95       	ret

00003744 <TMRSRVC_start>:
    3744:	81 e0       	ldi	r24, 0x01	; 1
    3746:	80 93 37 02 	sts	0x0237, r24
    374a:	08 95       	ret

0000374c <I2C_enable>:
    374c:	80 91 96 04 	lds	r24, 0x0496
    3750:	81 30       	cpi	r24, 0x01	; 1
    3752:	29 f4       	brne	.+10     	; 0x375e <I2C_enable+0x12>
    3754:	80 91 bc 00 	lds	r24, 0x00BC
    3758:	84 60       	ori	r24, 0x04	; 4
    375a:	80 93 bc 00 	sts	0x00BC, r24
    375e:	08 95       	ret

00003760 <__I2C_init>:
    3760:	38 98       	cbi	0x07, 0	; 7
    3762:	39 98       	cbi	0x07, 1	; 7
    3764:	08 95       	ret

00003766 <__ISR_attach>:
    3766:	80 32       	cpi	r24, 0x20	; 32
    3768:	18 f0       	brcs	.+6      	; 0x3770 <__ISR_attach+0xa>
    376a:	20 e0       	ldi	r18, 0x00	; 0
    376c:	30 e0       	ldi	r19, 0x00	; 0
    376e:	0a c0       	rjmp	.+20     	; 0x3784 <__ISR_attach+0x1e>
    3770:	e8 2f       	mov	r30, r24
    3772:	f0 e0       	ldi	r31, 0x00	; 0
    3774:	ee 0f       	add	r30, r30
    3776:	ff 1f       	adc	r31, r31
    3778:	ea 52       	subi	r30, 0x2A	; 42
    377a:	fe 4f       	sbci	r31, 0xFE	; 254
    377c:	20 81       	ld	r18, Z
    377e:	31 81       	ldd	r19, Z+1	; 0x01
    3780:	71 83       	std	Z+1, r23	; 0x01
    3782:	60 83       	st	Z, r22
    3784:	c9 01       	movw	r24, r18
    3786:	08 95       	ret

00003788 <__ATMEGA_init>:
    3788:	24 9a       	sbi	0x04, 4	; 4
    378a:	2c 9a       	sbi	0x05, 4	; 5
    378c:	08 95       	ret

0000378e <SPI_default_config>:
    378e:	83 e5       	ldi	r24, 0x53	; 83
    3790:	8c bd       	out	0x2c, r24	; 44
    3792:	81 e0       	ldi	r24, 0x01	; 1
    3794:	8d bd       	out	0x2d, r24	; 45
    3796:	8d e0       	ldi	r24, 0x0D	; 13
    3798:	8a 95       	dec	r24
    379a:	f1 f7       	brne	.-4      	; 0x3798 <SPI_default_config+0xa>
    379c:	08 95       	ret

0000379e <SPI_ATtiny0_config>:
    379e:	83 e5       	ldi	r24, 0x53	; 83
    37a0:	8c bd       	out	0x2c, r24	; 44
    37a2:	1d bc       	out	0x2d, r1	; 45
    37a4:	84 ef       	ldi	r24, 0xF4	; 244
    37a6:	91 e0       	ldi	r25, 0x01	; 1
    37a8:	01 97       	sbiw	r24, 0x01	; 1
    37aa:	f1 f7       	brne	.-4      	; 0x37a8 <SPI_ATtiny0_config+0xa>
    37ac:	08 95       	ret

000037ae <SPI_PSXC_config>:
    37ae:	8f e7       	ldi	r24, 0x7F	; 127
    37b0:	8c bd       	out	0x2c, r24	; 44
    37b2:	1d bc       	out	0x2d, r1	; 45
    37b4:	84 ef       	ldi	r24, 0xF4	; 244
    37b6:	91 e0       	ldi	r25, 0x01	; 1
    37b8:	01 97       	sbiw	r24, 0x01	; 1
    37ba:	f1 f7       	brne	.-4      	; 0x37b8 <SPI_PSXC_config+0xa>
    37bc:	08 95       	ret

000037be <SPI_LCD_config>:
    37be:	83 e5       	ldi	r24, 0x53	; 83
    37c0:	8c bd       	out	0x2c, r24	; 44
    37c2:	81 e0       	ldi	r24, 0x01	; 1
    37c4:	8d bd       	out	0x2d, r24	; 45
    37c6:	8d e0       	ldi	r24, 0x0D	; 13
    37c8:	8a 95       	dec	r24
    37ca:	f1 f7       	brne	.-4      	; 0x37c8 <SPI_LCD_config+0xa>
    37cc:	08 95       	ret

000037ce <SPI_FLASH_config>:
    37ce:	83 e5       	ldi	r24, 0x53	; 83
    37d0:	8c bd       	out	0x2c, r24	; 44
    37d2:	81 e0       	ldi	r24, 0x01	; 1
    37d4:	8d bd       	out	0x2d, r24	; 45
    37d6:	84 ef       	ldi	r24, 0xF4	; 244
    37d8:	91 e0       	ldi	r25, 0x01	; 1
    37da:	01 97       	sbiw	r24, 0x01	; 1
    37dc:	f1 f7       	brne	.-4      	; 0x37da <SPI_FLASH_config+0xc>
    37de:	08 95       	ret

000037e0 <__SPI_init>:
    37e0:	25 9a       	sbi	0x04, 5	; 4
    37e2:	26 98       	cbi	0x04, 6	; 4
    37e4:	27 9a       	sbi	0x04, 7	; 4
    37e6:	20 9a       	sbi	0x04, 0	; 4
    37e8:	21 9a       	sbi	0x04, 1	; 4
    37ea:	22 9a       	sbi	0x04, 2	; 4
    37ec:	08 95       	ret

000037ee <SPI_receive>:
    37ee:	1f 93       	push	r17
    37f0:	16 2f       	mov	r17, r22
    37f2:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <SPI_set_slave_addr>
    37f6:	82 e0       	ldi	r24, 0x02	; 2
    37f8:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    37fc:	81 30       	cpi	r24, 0x01	; 1
    37fe:	11 f0       	breq	.+4      	; 0x3804 <SPI_receive+0x16>
    3800:	80 e0       	ldi	r24, 0x00	; 0
    3802:	05 c0       	rjmp	.+10     	; 0x380e <SPI_receive+0x20>
    3804:	1e bd       	out	0x2e, r17	; 46
    3806:	0d b4       	in	r0, 0x2d	; 45
    3808:	07 fe       	sbrs	r0, 7
    380a:	fd cf       	rjmp	.-6      	; 0x3806 <SPI_receive+0x18>
    380c:	8e b5       	in	r24, 0x2e	; 46
    380e:	1f 91       	pop	r17
    3810:	08 95       	ret

00003812 <SPKR_beep>:
    3812:	9b 01       	movw	r18, r22
    3814:	ac 01       	movw	r20, r24
    3816:	80 91 27 02 	lds	r24, 0x0227
    381a:	88 23       	and	r24, r24
    381c:	81 f0       	breq	.+32     	; 0x383e <SPKR_beep+0x2c>
    381e:	da 01       	movw	r26, r20
    3820:	c9 01       	movw	r24, r18
    3822:	88 0f       	add	r24, r24
    3824:	99 1f       	adc	r25, r25
    3826:	aa 1f       	adc	r26, r26
    3828:	bb 1f       	adc	r27, r27
    382a:	90 93 33 02 	sts	0x0233, r25
    382e:	80 93 32 02 	sts	0x0232, r24
    3832:	21 15       	cp	r18, r1
    3834:	31 05       	cpc	r19, r1
    3836:	41 05       	cpc	r20, r1
    3838:	51 05       	cpc	r21, r1
    383a:	09 f4       	brne	.+2      	; 0x383e <SPKR_beep+0x2c>
    383c:	5f 98       	cbi	0x0b, 7	; 11
    383e:	08 95       	ret

00003840 <__SPKR_close>:
    3840:	82 30       	cpi	r24, 0x02	; 2
    3842:	29 f4       	brne	.+10     	; 0x384e <__SPKR_close+0xe>
    3844:	80 91 81 00 	lds	r24, 0x0081
    3848:	8e 7f       	andi	r24, 0xFE	; 254
    384a:	80 93 81 00 	sts	0x0081, r24
    384e:	80 91 26 02 	lds	r24, 0x0226
    3852:	81 30       	cpi	r24, 0x01	; 1
    3854:	31 f4       	brne	.+12     	; 0x3862 <__SPKR_close+0x22>
    3856:	80 91 27 02 	lds	r24, 0x0227
    385a:	81 30       	cpi	r24, 0x01	; 1
    385c:	11 f4       	brne	.+4      	; 0x3862 <__SPKR_close+0x22>
    385e:	00 00       	nop
    3860:	08 95       	ret
    3862:	80 91 26 02 	lds	r24, 0x0226
    3866:	81 30       	cpi	r24, 0x01	; 1
    3868:	21 f0       	breq	.+8      	; 0x3872 <__SPKR_close+0x32>
    386a:	80 91 27 02 	lds	r24, 0x0227
    386e:	81 30       	cpi	r24, 0x01	; 1
    3870:	11 f4       	brne	.+4      	; 0x3876 <__SPKR_close+0x36>
    3872:	5f 98       	cbi	0x0b, 7	; 11
    3874:	57 98       	cbi	0x0a, 7	; 10
    3876:	08 95       	ret

00003878 <STEPPER_set_decel_step_values>:
    3878:	ef 92       	push	r14
    387a:	ff 92       	push	r15
    387c:	0f 93       	push	r16
    387e:	1f 93       	push	r17
    3880:	cf 93       	push	r28
    3882:	df 93       	push	r29
    3884:	eb 01       	movw	r28, r22
    3886:	88 23       	and	r24, r24
    3888:	21 f0       	breq	.+8      	; 0x3892 <STEPPER_set_decel_step_values+0x1a>
    388a:	81 30       	cpi	r24, 0x01	; 1
    388c:	09 f0       	breq	.+2      	; 0x3890 <STEPPER_set_decel_step_values+0x18>
    388e:	5a c0       	rjmp	.+180    	; 0x3944 <STEPPER_set_decel_step_values+0xcc>
    3890:	2d c0       	rjmp	.+90     	; 0x38ec <STEPPER_set_decel_step_values+0x74>
    3892:	9a 01       	movw	r18, r20
    3894:	40 e0       	ldi	r20, 0x00	; 0
    3896:	50 e0       	ldi	r21, 0x00	; 0
    3898:	ca 01       	movw	r24, r20
    389a:	b9 01       	movw	r22, r18
    389c:	0e 94 93 27 	call	0x4f26	; 0x4f26 <__mulsi3>
    38a0:	20 91 2d 04 	lds	r18, 0x042D
    38a4:	30 91 2e 04 	lds	r19, 0x042E
    38a8:	22 0f       	add	r18, r18
    38aa:	33 1f       	adc	r19, r19
    38ac:	40 e0       	ldi	r20, 0x00	; 0
    38ae:	50 e0       	ldi	r21, 0x00	; 0
    38b0:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <__udivmodsi4>
    38b4:	79 01       	movw	r14, r18
    38b6:	8a 01       	movw	r16, r20
    38b8:	a8 01       	movw	r20, r16
    38ba:	97 01       	movw	r18, r14
    38bc:	22 0f       	add	r18, r18
    38be:	33 1f       	adc	r19, r19
    38c0:	44 1f       	adc	r20, r20
    38c2:	55 1f       	adc	r21, r21
    38c4:	ce 01       	movw	r24, r28
    38c6:	a0 e0       	ldi	r26, 0x00	; 0
    38c8:	b0 e0       	ldi	r27, 0x00	; 0
    38ca:	82 17       	cp	r24, r18
    38cc:	93 07       	cpc	r25, r19
    38ce:	a4 07       	cpc	r26, r20
    38d0:	b5 07       	cpc	r27, r21
    38d2:	28 f0       	brcs	.+10     	; 0x38de <STEPPER_set_decel_step_values+0x66>
    38d4:	f0 92 3a 04 	sts	0x043A, r15
    38d8:	e0 92 39 04 	sts	0x0439, r14
    38dc:	33 c0       	rjmp	.+102    	; 0x3944 <STEPPER_set_decel_step_values+0xcc>
    38de:	d6 95       	lsr	r29
    38e0:	c7 95       	ror	r28
    38e2:	d0 93 3a 04 	sts	0x043A, r29
    38e6:	c0 93 39 04 	sts	0x0439, r28
    38ea:	2c c0       	rjmp	.+88     	; 0x3944 <STEPPER_set_decel_step_values+0xcc>
    38ec:	9a 01       	movw	r18, r20
    38ee:	40 e0       	ldi	r20, 0x00	; 0
    38f0:	50 e0       	ldi	r21, 0x00	; 0
    38f2:	ca 01       	movw	r24, r20
    38f4:	b9 01       	movw	r22, r18
    38f6:	0e 94 93 27 	call	0x4f26	; 0x4f26 <__mulsi3>
    38fa:	20 91 2f 04 	lds	r18, 0x042F
    38fe:	30 91 30 04 	lds	r19, 0x0430
    3902:	22 0f       	add	r18, r18
    3904:	33 1f       	adc	r19, r19
    3906:	40 e0       	ldi	r20, 0x00	; 0
    3908:	50 e0       	ldi	r21, 0x00	; 0
    390a:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <__udivmodsi4>
    390e:	79 01       	movw	r14, r18
    3910:	8a 01       	movw	r16, r20
    3912:	a8 01       	movw	r20, r16
    3914:	97 01       	movw	r18, r14
    3916:	22 0f       	add	r18, r18
    3918:	33 1f       	adc	r19, r19
    391a:	44 1f       	adc	r20, r20
    391c:	55 1f       	adc	r21, r21
    391e:	ce 01       	movw	r24, r28
    3920:	a0 e0       	ldi	r26, 0x00	; 0
    3922:	b0 e0       	ldi	r27, 0x00	; 0
    3924:	82 17       	cp	r24, r18
    3926:	93 07       	cpc	r25, r19
    3928:	a4 07       	cpc	r26, r20
    392a:	b5 07       	cpc	r27, r21
    392c:	28 f0       	brcs	.+10     	; 0x3938 <STEPPER_set_decel_step_values+0xc0>
    392e:	f0 92 3c 04 	sts	0x043C, r15
    3932:	e0 92 3b 04 	sts	0x043B, r14
    3936:	06 c0       	rjmp	.+12     	; 0x3944 <STEPPER_set_decel_step_values+0xcc>
    3938:	d6 95       	lsr	r29
    393a:	c7 95       	ror	r28
    393c:	d0 93 3c 04 	sts	0x043C, r29
    3940:	c0 93 3b 04 	sts	0x043B, r28
    3944:	df 91       	pop	r29
    3946:	cf 91       	pop	r28
    3948:	1f 91       	pop	r17
    394a:	0f 91       	pop	r16
    394c:	ff 90       	pop	r15
    394e:	ef 90       	pop	r14
    3950:	08 95       	ret

00003952 <__TIMER0_COMPA_vect>:
    3952:	0e 94 b9 1c 	call	0x3972	; 0x3972 <TMRSRVC_tick>
    3956:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <STEPPER_clk>
    395a:	0e 94 d2 1c 	call	0x39a4	; 0x39a4 <SPKR_beep_clk>
    395e:	08 95       	ret

00003960 <__TMRSRVC_init>:
    3960:	84 b5       	in	r24, 0x24	; 36
    3962:	82 60       	ori	r24, 0x02	; 2
    3964:	84 bd       	out	0x24, r24	; 36
    3966:	85 b5       	in	r24, 0x25	; 37
    3968:	84 60       	ori	r24, 0x04	; 4
    396a:	85 bd       	out	0x25, r24	; 37
    396c:	8e e4       	ldi	r24, 0x4E	; 78
    396e:	87 bd       	out	0x27, r24	; 39
    3970:	08 95       	ret

00003972 <TMRSRVC_tick>:
    3972:	88 e0       	ldi	r24, 0x08	; 8
    3974:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    3978:	88 23       	and	r24, r24
    397a:	11 f4       	brne	.+4      	; 0x3980 <TMRSRVC_tick+0xe>
    397c:	84 e0       	ldi	r24, 0x04	; 4
    397e:	08 95       	ret
    3980:	80 91 37 02 	lds	r24, 0x0237
    3984:	88 23       	and	r24, r24
    3986:	11 f4       	brne	.+4      	; 0x398c <TMRSRVC_tick+0x1a>
    3988:	83 e0       	ldi	r24, 0x03	; 3
    398a:	08 95       	ret
    398c:	80 91 36 02 	lds	r24, 0x0236
    3990:	88 23       	and	r24, r24
    3992:	11 f0       	breq	.+4      	; 0x3998 <TMRSRVC_tick+0x26>
    3994:	82 e0       	ldi	r24, 0x02	; 2
    3996:	08 95       	ret
    3998:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <TMRSRVC_process>
    399c:	81 30       	cpi	r24, 0x01	; 1
    399e:	e1 f3       	breq	.-8      	; 0x3998 <TMRSRVC_tick+0x26>
    39a0:	80 e0       	ldi	r24, 0x00	; 0
    39a2:	08 95       	ret

000039a4 <SPKR_beep_clk>:
    39a4:	80 91 27 02 	lds	r24, 0x0227
    39a8:	81 30       	cpi	r24, 0x01	; 1
    39aa:	11 f5       	brne	.+68     	; 0x39f0 <SPKR_beep_clk+0x4c>
    39ac:	80 91 30 02 	lds	r24, 0x0230
    39b0:	90 91 31 02 	lds	r25, 0x0231
    39b4:	20 91 32 02 	lds	r18, 0x0232
    39b8:	30 91 33 02 	lds	r19, 0x0233
    39bc:	28 0f       	add	r18, r24
    39be:	39 1f       	adc	r19, r25
    39c0:	30 93 31 02 	sts	0x0231, r19
    39c4:	20 93 30 02 	sts	0x0230, r18
    39c8:	80 91 30 02 	lds	r24, 0x0230
    39cc:	90 91 31 02 	lds	r25, 0x0231
    39d0:	88 5e       	subi	r24, 0xE8	; 232
    39d2:	93 40       	sbci	r25, 0x03	; 3
    39d4:	6c f0       	brlt	.+26     	; 0x39f0 <SPKR_beep_clk+0x4c>
    39d6:	8b b1       	in	r24, 0x0b	; 11
    39d8:	80 58       	subi	r24, 0x80	; 128
    39da:	8b b9       	out	0x0b, r24	; 11
    39dc:	80 91 30 02 	lds	r24, 0x0230
    39e0:	90 91 31 02 	lds	r25, 0x0231
    39e4:	88 5e       	subi	r24, 0xE8	; 232
    39e6:	93 40       	sbci	r25, 0x03	; 3
    39e8:	90 93 31 02 	sts	0x0231, r25
    39ec:	80 93 30 02 	sts	0x0230, r24
    39f0:	08 95       	ret

000039f2 <STEPPER_clk>:
    39f2:	87 e0       	ldi	r24, 0x07	; 7
    39f4:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <SYS_get_state>
    39f8:	81 30       	cpi	r24, 0x01	; 1
    39fa:	09 f0       	breq	.+2      	; 0x39fe <STEPPER_clk+0xc>
    39fc:	aa c0       	rjmp	.+340    	; 0x3b52 <STEPPER_clk+0x160>
    39fe:	80 91 2d 04 	lds	r24, 0x042D
    3a02:	90 91 2e 04 	lds	r25, 0x042E
    3a06:	89 2b       	or	r24, r25
    3a08:	09 f1       	breq	.+66     	; 0x3a4c <STEPPER_clk+0x5a>
    3a0a:	80 91 51 04 	lds	r24, 0x0451
    3a0e:	90 91 52 04 	lds	r25, 0x0452
    3a12:	20 91 2d 04 	lds	r18, 0x042D
    3a16:	30 91 2e 04 	lds	r19, 0x042E
    3a1a:	82 0f       	add	r24, r18
    3a1c:	93 1f       	adc	r25, r19
    3a1e:	90 93 52 04 	sts	0x0452, r25
    3a22:	80 93 51 04 	sts	0x0451, r24
    3a26:	80 91 51 04 	lds	r24, 0x0451
    3a2a:	90 91 52 04 	lds	r25, 0x0452
    3a2e:	88 5e       	subi	r24, 0xE8	; 232
    3a30:	93 40       	sbci	r25, 0x03	; 3
    3a32:	a4 f0       	brlt	.+40     	; 0x3a5c <STEPPER_clk+0x6a>
    3a34:	80 91 51 04 	lds	r24, 0x0451
    3a38:	90 91 52 04 	lds	r25, 0x0452
    3a3c:	88 5e       	subi	r24, 0xE8	; 232
    3a3e:	93 40       	sbci	r25, 0x03	; 3
    3a40:	90 93 52 04 	sts	0x0452, r25
    3a44:	80 93 51 04 	sts	0x0451, r24
    3a48:	41 e0       	ldi	r20, 0x01	; 1
    3a4a:	09 c0       	rjmp	.+18     	; 0x3a5e <STEPPER_clk+0x6c>
    3a4c:	80 91 25 04 	lds	r24, 0x0425
    3a50:	90 91 26 04 	lds	r25, 0x0426
    3a54:	90 93 2a 04 	sts	0x042A, r25
    3a58:	80 93 29 04 	sts	0x0429, r24
    3a5c:	40 e0       	ldi	r20, 0x00	; 0
    3a5e:	80 91 2f 04 	lds	r24, 0x042F
    3a62:	90 91 30 04 	lds	r25, 0x0430
    3a66:	89 2b       	or	r24, r25
    3a68:	09 f1       	breq	.+66     	; 0x3aac <STEPPER_clk+0xba>
    3a6a:	80 91 53 04 	lds	r24, 0x0453
    3a6e:	90 91 54 04 	lds	r25, 0x0454
    3a72:	20 91 2f 04 	lds	r18, 0x042F
    3a76:	30 91 30 04 	lds	r19, 0x0430
    3a7a:	82 0f       	add	r24, r18
    3a7c:	93 1f       	adc	r25, r19
    3a7e:	90 93 54 04 	sts	0x0454, r25
    3a82:	80 93 53 04 	sts	0x0453, r24
    3a86:	80 91 53 04 	lds	r24, 0x0453
    3a8a:	90 91 54 04 	lds	r25, 0x0454
    3a8e:	88 5e       	subi	r24, 0xE8	; 232
    3a90:	93 40       	sbci	r25, 0x03	; 3
    3a92:	a4 f0       	brlt	.+40     	; 0x3abc <STEPPER_clk+0xca>
    3a94:	80 91 53 04 	lds	r24, 0x0453
    3a98:	90 91 54 04 	lds	r25, 0x0454
    3a9c:	88 5e       	subi	r24, 0xE8	; 232
    3a9e:	93 40       	sbci	r25, 0x03	; 3
    3aa0:	90 93 54 04 	sts	0x0454, r25
    3aa4:	80 93 53 04 	sts	0x0453, r24
    3aa8:	61 e0       	ldi	r22, 0x01	; 1
    3aaa:	09 c0       	rjmp	.+18     	; 0x3abe <STEPPER_clk+0xcc>
    3aac:	80 91 27 04 	lds	r24, 0x0427
    3ab0:	90 91 28 04 	lds	r25, 0x0428
    3ab4:	90 93 2c 04 	sts	0x042C, r25
    3ab8:	80 93 2b 04 	sts	0x042B, r24
    3abc:	60 e0       	ldi	r22, 0x00	; 0
    3abe:	84 2f       	mov	r24, r20
    3ac0:	0e 94 aa 1d 	call	0x3b54	; 0x3b54 <STEPPER_process_accel>
    3ac4:	80 91 4d 04 	lds	r24, 0x044D
    3ac8:	90 91 4e 04 	lds	r25, 0x044E
    3acc:	20 91 29 04 	lds	r18, 0x0429
    3ad0:	30 91 2a 04 	lds	r19, 0x042A
    3ad4:	28 0f       	add	r18, r24
    3ad6:	39 1f       	adc	r19, r25
    3ad8:	30 93 4e 04 	sts	0x044E, r19
    3adc:	20 93 4d 04 	sts	0x044D, r18
    3ae0:	80 91 4d 04 	lds	r24, 0x044D
    3ae4:	90 91 4e 04 	lds	r25, 0x044E
    3ae8:	88 5e       	subi	r24, 0xE8	; 232
    3aea:	93 40       	sbci	r25, 0x03	; 3
    3aec:	14 f4       	brge	.+4      	; 0x3af2 <STEPPER_clk+0x100>
    3aee:	40 e0       	ldi	r20, 0x00	; 0
    3af0:	0b c0       	rjmp	.+22     	; 0x3b08 <STEPPER_clk+0x116>
    3af2:	80 91 4d 04 	lds	r24, 0x044D
    3af6:	90 91 4e 04 	lds	r25, 0x044E
    3afa:	88 5e       	subi	r24, 0xE8	; 232
    3afc:	93 40       	sbci	r25, 0x03	; 3
    3afe:	90 93 4e 04 	sts	0x044E, r25
    3b02:	80 93 4d 04 	sts	0x044D, r24
    3b06:	41 e0       	ldi	r20, 0x01	; 1
    3b08:	80 91 4f 04 	lds	r24, 0x044F
    3b0c:	90 91 50 04 	lds	r25, 0x0450
    3b10:	20 91 2b 04 	lds	r18, 0x042B
    3b14:	30 91 2c 04 	lds	r19, 0x042C
    3b18:	28 0f       	add	r18, r24
    3b1a:	39 1f       	adc	r19, r25
    3b1c:	30 93 50 04 	sts	0x0450, r19
    3b20:	20 93 4f 04 	sts	0x044F, r18
    3b24:	80 91 4f 04 	lds	r24, 0x044F
    3b28:	90 91 50 04 	lds	r25, 0x0450
    3b2c:	88 5e       	subi	r24, 0xE8	; 232
    3b2e:	93 40       	sbci	r25, 0x03	; 3
    3b30:	14 f4       	brge	.+4      	; 0x3b36 <STEPPER_clk+0x144>
    3b32:	60 e0       	ldi	r22, 0x00	; 0
    3b34:	0b c0       	rjmp	.+22     	; 0x3b4c <STEPPER_clk+0x15a>
    3b36:	80 91 4f 04 	lds	r24, 0x044F
    3b3a:	90 91 50 04 	lds	r25, 0x0450
    3b3e:	88 5e       	subi	r24, 0xE8	; 232
    3b40:	93 40       	sbci	r25, 0x03	; 3
    3b42:	90 93 50 04 	sts	0x0450, r25
    3b46:	80 93 4f 04 	sts	0x044F, r24
    3b4a:	61 e0       	ldi	r22, 0x01	; 1
    3b4c:	84 2f       	mov	r24, r20
    3b4e:	0e 94 ef 1d 	call	0x3bde	; 0x3bde <STEPPER_process_run_mode>
    3b52:	08 95       	ret

00003b54 <STEPPER_process_accel>:
    3b54:	88 23       	and	r24, r24
    3b56:	f1 f0       	breq	.+60     	; 0x3b94 <STEPPER_process_accel+0x40>
    3b58:	20 91 25 04 	lds	r18, 0x0425
    3b5c:	30 91 26 04 	lds	r19, 0x0426
    3b60:	80 91 29 04 	lds	r24, 0x0429
    3b64:	90 91 2a 04 	lds	r25, 0x042A
    3b68:	28 1b       	sub	r18, r24
    3b6a:	39 0b       	sbc	r19, r25
    3b6c:	12 16       	cp	r1, r18
    3b6e:	13 06       	cpc	r1, r19
    3b70:	34 f4       	brge	.+12     	; 0x3b7e <STEPPER_process_accel+0x2a>
    3b72:	80 91 29 04 	lds	r24, 0x0429
    3b76:	90 91 2a 04 	lds	r25, 0x042A
    3b7a:	01 96       	adiw	r24, 0x01	; 1
    3b7c:	07 c0       	rjmp	.+14     	; 0x3b8c <STEPPER_process_accel+0x38>
    3b7e:	23 2b       	or	r18, r19
    3b80:	49 f0       	breq	.+18     	; 0x3b94 <STEPPER_process_accel+0x40>
    3b82:	80 91 29 04 	lds	r24, 0x0429
    3b86:	90 91 2a 04 	lds	r25, 0x042A
    3b8a:	01 97       	sbiw	r24, 0x01	; 1
    3b8c:	90 93 2a 04 	sts	0x042A, r25
    3b90:	80 93 29 04 	sts	0x0429, r24
    3b94:	66 23       	and	r22, r22
    3b96:	11 f1       	breq	.+68     	; 0x3bdc <STEPPER_process_accel+0x88>
    3b98:	20 91 27 04 	lds	r18, 0x0427
    3b9c:	30 91 28 04 	lds	r19, 0x0428
    3ba0:	80 91 2b 04 	lds	r24, 0x042B
    3ba4:	90 91 2c 04 	lds	r25, 0x042C
    3ba8:	28 1b       	sub	r18, r24
    3baa:	39 0b       	sbc	r19, r25
    3bac:	12 16       	cp	r1, r18
    3bae:	13 06       	cpc	r1, r19
    3bb0:	54 f4       	brge	.+20     	; 0x3bc6 <STEPPER_process_accel+0x72>
    3bb2:	80 91 2b 04 	lds	r24, 0x042B
    3bb6:	90 91 2c 04 	lds	r25, 0x042C
    3bba:	01 96       	adiw	r24, 0x01	; 1
    3bbc:	90 93 2c 04 	sts	0x042C, r25
    3bc0:	80 93 2b 04 	sts	0x042B, r24
    3bc4:	08 95       	ret
    3bc6:	23 2b       	or	r18, r19
    3bc8:	49 f0       	breq	.+18     	; 0x3bdc <STEPPER_process_accel+0x88>
    3bca:	80 91 2b 04 	lds	r24, 0x042B
    3bce:	90 91 2c 04 	lds	r25, 0x042C
    3bd2:	01 97       	sbiw	r24, 0x01	; 1
    3bd4:	90 93 2c 04 	sts	0x042C, r25
    3bd8:	80 93 2b 04 	sts	0x042B, r24
    3bdc:	08 95       	ret

00003bde <STEPPER_process_run_mode>:
    3bde:	0f 93       	push	r16
    3be0:	1f 93       	push	r17
    3be2:	18 2f       	mov	r17, r24
    3be4:	06 2f       	mov	r16, r22
    3be6:	80 91 59 04 	lds	r24, 0x0459
    3bea:	88 23       	and	r24, r24
    3bec:	09 f0       	breq	.+2      	; 0x3bf0 <STEPPER_process_run_mode+0x12>
    3bee:	e7 c0       	rjmp	.+462    	; 0x3dbe <STEPPER_process_run_mode+0x1e0>
    3bf0:	80 91 41 04 	lds	r24, 0x0441
    3bf4:	88 23       	and	r24, r24
    3bf6:	09 f0       	breq	.+2      	; 0x3bfa <STEPPER_process_run_mode+0x1c>
    3bf8:	5a c0       	rjmp	.+180    	; 0x3cae <STEPPER_process_run_mode+0xd0>
    3bfa:	80 91 29 04 	lds	r24, 0x0429
    3bfe:	90 91 2a 04 	lds	r25, 0x042A
    3c02:	89 2b       	or	r24, r25
    3c04:	e9 f4       	brne	.+58     	; 0x3c40 <STEPPER_process_run_mode+0x62>
    3c06:	80 91 38 02 	lds	r24, 0x0238
    3c0a:	83 7e       	andi	r24, 0xE3	; 227
    3c0c:	80 93 38 02 	sts	0x0238, r24
    3c10:	10 92 4a 04 	sts	0x044A, r1
    3c14:	80 91 55 04 	lds	r24, 0x0455
    3c18:	88 23       	and	r24, r24
    3c1a:	09 f4       	brne	.+2      	; 0x3c1e <STEPPER_process_run_mode+0x40>
    3c1c:	5d c0       	rjmp	.+186    	; 0x3cd8 <STEPPER_process_run_mode+0xfa>
    3c1e:	60 91 43 04 	lds	r22, 0x0443
    3c22:	80 e0       	ldi	r24, 0x00	; 0
    3c24:	0e 94 46 1f 	call	0x3e8c	; 0x3e8c <STEPPER_stop>
    3c28:	e0 91 57 04 	lds	r30, 0x0457
    3c2c:	f0 91 58 04 	lds	r31, 0x0458
    3c30:	30 97       	sbiw	r30, 0x00	; 0
    3c32:	09 f4       	brne	.+2      	; 0x3c36 <STEPPER_process_run_mode+0x58>
    3c34:	51 c0       	rjmp	.+162    	; 0x3cd8 <STEPPER_process_run_mode+0xfa>
    3c36:	81 e0       	ldi	r24, 0x01	; 1
    3c38:	80 83       	st	Z, r24
    3c3a:	10 92 55 04 	sts	0x0455, r1
    3c3e:	4c c0       	rjmp	.+152    	; 0x3cd8 <STEPPER_process_run_mode+0xfa>
    3c40:	80 91 23 04 	lds	r24, 0x0423
    3c44:	81 30       	cpi	r24, 0x01	; 1
    3c46:	41 f4       	brne	.+16     	; 0x3c58 <STEPPER_process_run_mode+0x7a>
    3c48:	80 91 35 04 	lds	r24, 0x0435
    3c4c:	90 91 36 04 	lds	r25, 0x0436
    3c50:	01 97       	sbiw	r24, 0x01	; 1
    3c52:	11 f4       	brne	.+4      	; 0x3c58 <STEPPER_process_run_mode+0x7a>
    3c54:	11 e0       	ldi	r17, 0x01	; 1
    3c56:	02 c0       	rjmp	.+4      	; 0x3c5c <STEPPER_process_run_mode+0x7e>
    3c58:	11 23       	and	r17, r17
    3c5a:	f1 f1       	breq	.+124    	; 0x3cd8 <STEPPER_process_run_mode+0xfa>
    3c5c:	e0 91 48 04 	lds	r30, 0x0448
    3c60:	f0 e0       	ldi	r31, 0x00	; 0
    3c62:	e8 5b       	subi	r30, 0xB8	; 184
    3c64:	fe 4f       	sbci	r31, 0xFE	; 254
    3c66:	90 91 38 02 	lds	r25, 0x0238
    3c6a:	93 7e       	andi	r25, 0xE3	; 227
    3c6c:	80 81       	ld	r24, Z
    3c6e:	89 2b       	or	r24, r25
    3c70:	80 93 38 02 	sts	0x0238, r24
    3c74:	80 91 46 04 	lds	r24, 0x0446
    3c78:	88 23       	and	r24, r24
    3c7a:	21 f4       	brne	.+8      	; 0x3c84 <STEPPER_process_run_mode+0xa6>
    3c7c:	80 91 48 04 	lds	r24, 0x0448
    3c80:	8f 5f       	subi	r24, 0xFF	; 255
    3c82:	03 c0       	rjmp	.+6      	; 0x3c8a <STEPPER_process_run_mode+0xac>
    3c84:	80 91 48 04 	lds	r24, 0x0448
    3c88:	81 50       	subi	r24, 0x01	; 1
    3c8a:	80 93 48 04 	sts	0x0448, r24
    3c8e:	80 91 48 04 	lds	r24, 0x0448
    3c92:	83 70       	andi	r24, 0x03	; 3
    3c94:	80 93 48 04 	sts	0x0448, r24
    3c98:	81 e0       	ldi	r24, 0x01	; 1
    3c9a:	80 93 4a 04 	sts	0x044A, r24
    3c9e:	80 91 23 04 	lds	r24, 0x0423
    3ca2:	81 30       	cpi	r24, 0x01	; 1
    3ca4:	c9 f4       	brne	.+50     	; 0x3cd8 <STEPPER_process_run_mode+0xfa>
    3ca6:	80 e0       	ldi	r24, 0x00	; 0
    3ca8:	0e 94 f2 1e 	call	0x3de4	; 0x3de4 <STEPPER_process_step_mode>
    3cac:	15 c0       	rjmp	.+42     	; 0x3cd8 <STEPPER_process_run_mode+0xfa>
    3cae:	90 91 38 02 	lds	r25, 0x0238
    3cb2:	93 7e       	andi	r25, 0xE3	; 227
    3cb4:	90 93 38 02 	sts	0x0238, r25
    3cb8:	e0 91 48 04 	lds	r30, 0x0448
    3cbc:	f0 e0       	ldi	r31, 0x00	; 0
    3cbe:	e8 5b       	subi	r30, 0xB8	; 184
    3cc0:	fe 4f       	sbci	r31, 0xFE	; 254
    3cc2:	80 81       	ld	r24, Z
    3cc4:	89 2b       	or	r24, r25
    3cc6:	80 93 38 02 	sts	0x0238, r24
    3cca:	82 e0       	ldi	r24, 0x02	; 2
    3ccc:	80 93 4a 04 	sts	0x044A, r24
    3cd0:	10 92 2a 04 	sts	0x042A, r1
    3cd4:	10 92 29 04 	sts	0x0429, r1
    3cd8:	80 91 42 04 	lds	r24, 0x0442
    3cdc:	88 23       	and	r24, r24
    3cde:	09 f0       	breq	.+2      	; 0x3ce2 <STEPPER_process_run_mode+0x104>
    3ce0:	59 c0       	rjmp	.+178    	; 0x3d94 <STEPPER_process_run_mode+0x1b6>
    3ce2:	80 91 2b 04 	lds	r24, 0x042B
    3ce6:	90 91 2c 04 	lds	r25, 0x042C
    3cea:	89 2b       	or	r24, r25
    3cec:	e9 f4       	brne	.+58     	; 0x3d28 <STEPPER_process_run_mode+0x14a>
    3cee:	80 91 38 02 	lds	r24, 0x0238
    3cf2:	8f 71       	andi	r24, 0x1F	; 31
    3cf4:	80 93 38 02 	sts	0x0238, r24
    3cf8:	10 92 4b 04 	sts	0x044B, r1
    3cfc:	80 91 56 04 	lds	r24, 0x0456
    3d00:	88 23       	and	r24, r24
    3d02:	09 f4       	brne	.+2      	; 0x3d06 <STEPPER_process_run_mode+0x128>
    3d04:	5c c0       	rjmp	.+184    	; 0x3dbe <STEPPER_process_run_mode+0x1e0>
    3d06:	60 91 44 04 	lds	r22, 0x0444
    3d0a:	81 e0       	ldi	r24, 0x01	; 1
    3d0c:	0e 94 46 1f 	call	0x3e8c	; 0x3e8c <STEPPER_stop>
    3d10:	e0 91 57 04 	lds	r30, 0x0457
    3d14:	f0 91 58 04 	lds	r31, 0x0458
    3d18:	30 97       	sbiw	r30, 0x00	; 0
    3d1a:	09 f4       	brne	.+2      	; 0x3d1e <STEPPER_process_run_mode+0x140>
    3d1c:	50 c0       	rjmp	.+160    	; 0x3dbe <STEPPER_process_run_mode+0x1e0>
    3d1e:	81 e0       	ldi	r24, 0x01	; 1
    3d20:	81 83       	std	Z+1, r24	; 0x01
    3d22:	10 92 56 04 	sts	0x0456, r1
    3d26:	4b c0       	rjmp	.+150    	; 0x3dbe <STEPPER_process_run_mode+0x1e0>
    3d28:	80 91 24 04 	lds	r24, 0x0424
    3d2c:	81 30       	cpi	r24, 0x01	; 1
    3d2e:	41 f4       	brne	.+16     	; 0x3d40 <STEPPER_process_run_mode+0x162>
    3d30:	80 91 37 04 	lds	r24, 0x0437
    3d34:	90 91 38 04 	lds	r25, 0x0438
    3d38:	01 97       	sbiw	r24, 0x01	; 1
    3d3a:	11 f4       	brne	.+4      	; 0x3d40 <STEPPER_process_run_mode+0x162>
    3d3c:	01 e0       	ldi	r16, 0x01	; 1
    3d3e:	02 c0       	rjmp	.+4      	; 0x3d44 <STEPPER_process_run_mode+0x166>
    3d40:	00 23       	and	r16, r16
    3d42:	e9 f1       	breq	.+122    	; 0x3dbe <STEPPER_process_run_mode+0x1e0>
    3d44:	e0 91 49 04 	lds	r30, 0x0449
    3d48:	f0 e0       	ldi	r31, 0x00	; 0
    3d4a:	e4 5b       	subi	r30, 0xB4	; 180
    3d4c:	fe 4f       	sbci	r31, 0xFE	; 254
    3d4e:	90 91 38 02 	lds	r25, 0x0238
    3d52:	9f 71       	andi	r25, 0x1F	; 31
    3d54:	80 81       	ld	r24, Z
    3d56:	89 2b       	or	r24, r25
    3d58:	80 93 38 02 	sts	0x0238, r24
    3d5c:	80 91 47 04 	lds	r24, 0x0447
    3d60:	88 23       	and	r24, r24
    3d62:	21 f4       	brne	.+8      	; 0x3d6c <STEPPER_process_run_mode+0x18e>
    3d64:	80 91 49 04 	lds	r24, 0x0449
    3d68:	8f 5f       	subi	r24, 0xFF	; 255
    3d6a:	03 c0       	rjmp	.+6      	; 0x3d72 <STEPPER_process_run_mode+0x194>
    3d6c:	80 91 49 04 	lds	r24, 0x0449
    3d70:	81 50       	subi	r24, 0x01	; 1
    3d72:	80 93 49 04 	sts	0x0449, r24
    3d76:	80 91 49 04 	lds	r24, 0x0449
    3d7a:	83 70       	andi	r24, 0x03	; 3
    3d7c:	80 93 49 04 	sts	0x0449, r24
    3d80:	81 e0       	ldi	r24, 0x01	; 1
    3d82:	80 93 4b 04 	sts	0x044B, r24
    3d86:	80 91 24 04 	lds	r24, 0x0424
    3d8a:	81 30       	cpi	r24, 0x01	; 1
    3d8c:	c1 f4       	brne	.+48     	; 0x3dbe <STEPPER_process_run_mode+0x1e0>
    3d8e:	0e 94 f2 1e 	call	0x3de4	; 0x3de4 <STEPPER_process_step_mode>
    3d92:	15 c0       	rjmp	.+42     	; 0x3dbe <STEPPER_process_run_mode+0x1e0>
    3d94:	90 91 38 02 	lds	r25, 0x0238
    3d98:	9f 71       	andi	r25, 0x1F	; 31
    3d9a:	90 93 38 02 	sts	0x0238, r25
    3d9e:	e0 91 49 04 	lds	r30, 0x0449
    3da2:	f0 e0       	ldi	r31, 0x00	; 0
    3da4:	e4 5b       	subi	r30, 0xB4	; 180
    3da6:	fe 4f       	sbci	r31, 0xFE	; 254
    3da8:	80 81       	ld	r24, Z
    3daa:	89 2b       	or	r24, r25
    3dac:	80 93 38 02 	sts	0x0238, r24
    3db0:	82 e0       	ldi	r24, 0x02	; 2
    3db2:	80 93 4b 04 	sts	0x044B, r24
    3db6:	10 92 2c 04 	sts	0x042C, r1
    3dba:	10 92 2b 04 	sts	0x042B, r1
    3dbe:	80 91 4c 04 	lds	r24, 0x044C
    3dc2:	88 23       	and	r24, r24
    3dc4:	31 f4       	brne	.+12     	; 0x3dd2 <STEPPER_process_run_mode+0x1f4>
    3dc6:	88 e3       	ldi	r24, 0x38	; 56
    3dc8:	92 e0       	ldi	r25, 0x02	; 2
    3dca:	61 2f       	mov	r22, r17
    3dcc:	40 2f       	mov	r20, r16
    3dce:	0e 94 d9 1f 	call	0x3fb2	; 0x3fb2 <STEPPER_process_pwm>
    3dd2:	88 b1       	in	r24, 0x08	; 8
    3dd4:	83 70       	andi	r24, 0x03	; 3
    3dd6:	90 91 38 02 	lds	r25, 0x0238
    3dda:	89 2b       	or	r24, r25
    3ddc:	88 b9       	out	0x08, r24	; 8
    3dde:	1f 91       	pop	r17
    3de0:	0f 91       	pop	r16
    3de2:	08 95       	ret

00003de4 <STEPPER_process_step_mode>:
    3de4:	88 23       	and	r24, r24
    3de6:	21 f0       	breq	.+8      	; 0x3df0 <STEPPER_process_step_mode+0xc>
    3de8:	81 30       	cpi	r24, 0x01	; 1
    3dea:	09 f0       	breq	.+2      	; 0x3dee <STEPPER_process_step_mode+0xa>
    3dec:	4e c0       	rjmp	.+156    	; 0x3e8a <STEPPER_process_step_mode+0xa6>
    3dee:	27 c0       	rjmp	.+78     	; 0x3e3e <STEPPER_process_step_mode+0x5a>
    3df0:	80 91 35 04 	lds	r24, 0x0435
    3df4:	90 91 36 04 	lds	r25, 0x0436
    3df8:	89 2b       	or	r24, r25
    3dfa:	49 f0       	breq	.+18     	; 0x3e0e <STEPPER_process_step_mode+0x2a>
    3dfc:	80 91 35 04 	lds	r24, 0x0435
    3e00:	90 91 36 04 	lds	r25, 0x0436
    3e04:	01 97       	sbiw	r24, 0x01	; 1
    3e06:	90 93 36 04 	sts	0x0436, r25
    3e0a:	80 93 35 04 	sts	0x0435, r24
    3e0e:	80 91 55 04 	lds	r24, 0x0455
    3e12:	88 23       	and	r24, r24
    3e14:	d1 f5       	brne	.+116    	; 0x3e8a <STEPPER_process_step_mode+0xa6>
    3e16:	20 91 35 04 	lds	r18, 0x0435
    3e1a:	30 91 36 04 	lds	r19, 0x0436
    3e1e:	80 91 39 04 	lds	r24, 0x0439
    3e22:	90 91 3a 04 	lds	r25, 0x043A
    3e26:	28 17       	cp	r18, r24
    3e28:	39 07       	cpc	r19, r25
    3e2a:	79 f5       	brne	.+94     	; 0x3e8a <STEPPER_process_step_mode+0xa6>
    3e2c:	80 e0       	ldi	r24, 0x00	; 0
    3e2e:	60 e0       	ldi	r22, 0x00	; 0
    3e30:	70 e0       	ldi	r23, 0x00	; 0
    3e32:	0e 94 fc 11 	call	0x23f8	; 0x23f8 <STEPPER_set_speed>
    3e36:	81 e0       	ldi	r24, 0x01	; 1
    3e38:	80 93 55 04 	sts	0x0455, r24
    3e3c:	08 95       	ret
    3e3e:	80 91 37 04 	lds	r24, 0x0437
    3e42:	90 91 38 04 	lds	r25, 0x0438
    3e46:	89 2b       	or	r24, r25
    3e48:	49 f0       	breq	.+18     	; 0x3e5c <STEPPER_process_step_mode+0x78>
    3e4a:	80 91 37 04 	lds	r24, 0x0437
    3e4e:	90 91 38 04 	lds	r25, 0x0438
    3e52:	01 97       	sbiw	r24, 0x01	; 1
    3e54:	90 93 38 04 	sts	0x0438, r25
    3e58:	80 93 37 04 	sts	0x0437, r24
    3e5c:	80 91 56 04 	lds	r24, 0x0456
    3e60:	88 23       	and	r24, r24
    3e62:	99 f4       	brne	.+38     	; 0x3e8a <STEPPER_process_step_mode+0xa6>
    3e64:	20 91 37 04 	lds	r18, 0x0437
    3e68:	30 91 38 04 	lds	r19, 0x0438
    3e6c:	80 91 3b 04 	lds	r24, 0x043B
    3e70:	90 91 3c 04 	lds	r25, 0x043C
    3e74:	28 17       	cp	r18, r24
    3e76:	39 07       	cpc	r19, r25
    3e78:	41 f4       	brne	.+16     	; 0x3e8a <STEPPER_process_step_mode+0xa6>
    3e7a:	81 e0       	ldi	r24, 0x01	; 1
    3e7c:	60 e0       	ldi	r22, 0x00	; 0
    3e7e:	70 e0       	ldi	r23, 0x00	; 0
    3e80:	0e 94 fc 11 	call	0x23f8	; 0x23f8 <STEPPER_set_speed>
    3e84:	81 e0       	ldi	r24, 0x01	; 1
    3e86:	80 93 56 04 	sts	0x0456, r24
    3e8a:	08 95       	ret

00003e8c <STEPPER_stop>:
    3e8c:	0f 93       	push	r16
    3e8e:	1f 93       	push	r17
    3e90:	18 2f       	mov	r17, r24
    3e92:	06 2f       	mov	r16, r22
    3e94:	66 23       	and	r22, r22
    3e96:	49 f4       	brne	.+18     	; 0x3eaa <STEPPER_stop+0x1e>
    3e98:	60 e0       	ldi	r22, 0x00	; 0
    3e9a:	70 e0       	ldi	r23, 0x00	; 0
    3e9c:	0e 94 fc 11 	call	0x23f8	; 0x23f8 <STEPPER_set_speed>
    3ea0:	81 2f       	mov	r24, r17
    3ea2:	60 e0       	ldi	r22, 0x00	; 0
    3ea4:	70 e0       	ldi	r23, 0x00	; 0
    3ea6:	0e 94 53 1a 	call	0x34a6	; 0x34a6 <STEPPER_set_steps>
    3eaa:	81 e0       	ldi	r24, 0x01	; 1
    3eac:	80 93 59 04 	sts	0x0459, r24
    3eb0:	11 30       	cpi	r17, 0x01	; 1
    3eb2:	51 f0       	breq	.+20     	; 0x3ec8 <STEPPER_stop+0x3c>
    3eb4:	11 30       	cpi	r17, 0x01	; 1
    3eb6:	18 f0       	brcs	.+6      	; 0x3ebe <STEPPER_stop+0x32>
    3eb8:	12 30       	cpi	r17, 0x02	; 2
    3eba:	41 f4       	brne	.+16     	; 0x3ecc <STEPPER_stop+0x40>
    3ebc:	03 c0       	rjmp	.+6      	; 0x3ec4 <STEPPER_stop+0x38>
    3ebe:	00 93 41 04 	sts	0x0441, r16
    3ec2:	04 c0       	rjmp	.+8      	; 0x3ecc <STEPPER_stop+0x40>
    3ec4:	00 93 41 04 	sts	0x0441, r16
    3ec8:	00 93 42 04 	sts	0x0442, r16
    3ecc:	10 92 59 04 	sts	0x0459, r1
    3ed0:	1f 91       	pop	r17
    3ed2:	0f 91       	pop	r16
    3ed4:	08 95       	ret

00003ed6 <TMRSRVC_process>:
    3ed6:	ff 92       	push	r15
    3ed8:	0f 93       	push	r16
    3eda:	1f 93       	push	r17
    3edc:	cf 93       	push	r28
    3ede:	df 93       	push	r29
    3ee0:	80 91 93 04 	lds	r24, 0x0493
    3ee4:	88 23       	and	r24, r24
    3ee6:	09 f4       	brne	.+2      	; 0x3eea <TMRSRVC_process+0x14>
    3ee8:	59 c0       	rjmp	.+178    	; 0x3f9c <TMRSRVC_process+0xc6>
    3eea:	00 91 94 04 	lds	r16, 0x0494
    3eee:	10 91 95 04 	lds	r17, 0x0495
    3ef2:	f8 01       	movw	r30, r16
    3ef4:	c0 81       	ld	r28, Z
    3ef6:	d1 81       	ldd	r29, Z+1	; 0x01
    3ef8:	8c 81       	ldd	r24, Y+4	; 0x04
    3efa:	9d 81       	ldd	r25, Y+5	; 0x05
    3efc:	01 97       	sbiw	r24, 0x01	; 1
    3efe:	9d 83       	std	Y+5, r25	; 0x05
    3f00:	8c 83       	std	Y+4, r24	; 0x04
    3f02:	18 16       	cp	r1, r24
    3f04:	19 06       	cpc	r1, r25
    3f06:	0c f4       	brge	.+2      	; 0x3f0a <TMRSRVC_process+0x34>
    3f08:	49 c0       	rjmp	.+146    	; 0x3f9c <TMRSRVC_process+0xc6>
    3f0a:	89 81       	ldd	r24, Y+1	; 0x01
    3f0c:	80 ff       	sbrs	r24, 0
    3f0e:	05 c0       	rjmp	.+10     	; 0x3f1a <TMRSRVC_process+0x44>
    3f10:	8e 81       	ldd	r24, Y+6	; 0x06
    3f12:	88 23       	and	r24, r24
    3f14:	11 f4       	brne	.+4      	; 0x3f1a <TMRSRVC_process+0x44>
    3f16:	81 e0       	ldi	r24, 0x01	; 1
    3f18:	8e 83       	std	Y+6, r24	; 0x06
    3f1a:	89 81       	ldd	r24, Y+1	; 0x01
    3f1c:	81 ff       	sbrs	r24, 1
    3f1e:	03 c0       	rjmp	.+6      	; 0x3f26 <TMRSRVC_process+0x50>
    3f20:	ef 81       	ldd	r30, Y+7	; 0x07
    3f22:	f8 85       	ldd	r31, Y+8	; 0x08
    3f24:	09 95       	icall
    3f26:	80 91 93 04 	lds	r24, 0x0493
    3f2a:	82 30       	cpi	r24, 0x02	; 2
    3f2c:	a8 f0       	brcs	.+42     	; 0x3f58 <TMRSRVC_process+0x82>
    3f2e:	f8 01       	movw	r30, r16
    3f30:	82 81       	ldd	r24, Z+2	; 0x02
    3f32:	93 81       	ldd	r25, Z+3	; 0x03
    3f34:	90 93 95 04 	sts	0x0495, r25
    3f38:	80 93 94 04 	sts	0x0494, r24
    3f3c:	13 82       	std	Z+3, r1	; 0x03
    3f3e:	12 82       	std	Z+2, r1	; 0x02
    3f40:	e0 91 00 00 	lds	r30, 0x0000
    3f44:	f0 91 01 00 	lds	r31, 0x0001
    3f48:	84 81       	ldd	r24, Z+4	; 0x04
    3f4a:	95 81       	ldd	r25, Z+5	; 0x05
    3f4c:	18 16       	cp	r1, r24
    3f4e:	19 06       	cpc	r1, r25
    3f50:	3c f0       	brlt	.+14     	; 0x3f60 <TMRSRVC_process+0x8a>
    3f52:	ff 24       	eor	r15, r15
    3f54:	f3 94       	inc	r15
    3f56:	05 c0       	rjmp	.+10     	; 0x3f62 <TMRSRVC_process+0x8c>
    3f58:	10 92 95 04 	sts	0x0495, r1
    3f5c:	10 92 94 04 	sts	0x0494, r1
    3f60:	ff 24       	eor	r15, r15
    3f62:	80 91 93 04 	lds	r24, 0x0493
    3f66:	81 50       	subi	r24, 0x01	; 1
    3f68:	80 93 93 04 	sts	0x0493, r24
    3f6c:	80 91 93 04 	lds	r24, 0x0493
    3f70:	88 23       	and	r24, r24
    3f72:	11 f4       	brne	.+4      	; 0x3f78 <TMRSRVC_process+0xa2>
    3f74:	0e 94 d6 1f 	call	0x3fac	; 0x3fac <TMRSRVC_stop>
    3f78:	89 81       	ldd	r24, Y+1	; 0x01
    3f7a:	82 ff       	sbrs	r24, 2
    3f7c:	08 c0       	rjmp	.+16     	; 0x3f8e <TMRSRVC_process+0xb8>
    3f7e:	8a 81       	ldd	r24, Y+2	; 0x02
    3f80:	9b 81       	ldd	r25, Y+3	; 0x03
    3f82:	9d 83       	std	Y+5, r25	; 0x05
    3f84:	8c 83       	std	Y+4, r24	; 0x04
    3f86:	c8 01       	movw	r24, r16
    3f88:	0e 94 14 1b 	call	0x3628	; 0x3628 <TMRSRVC_insert>
    3f8c:	08 c0       	rjmp	.+16     	; 0x3f9e <TMRSRVC_process+0xc8>
    3f8e:	c8 01       	movw	r24, r16
    3f90:	0e 94 df 28 	call	0x51be	; 0x51be <free>
    3f94:	89 81       	ldd	r24, Y+1	; 0x01
    3f96:	8f 7e       	andi	r24, 0xEF	; 239
    3f98:	89 83       	std	Y+1, r24	; 0x01
    3f9a:	01 c0       	rjmp	.+2      	; 0x3f9e <TMRSRVC_process+0xc8>
    3f9c:	ff 24       	eor	r15, r15
    3f9e:	8f 2d       	mov	r24, r15
    3fa0:	df 91       	pop	r29
    3fa2:	cf 91       	pop	r28
    3fa4:	1f 91       	pop	r17
    3fa6:	0f 91       	pop	r16
    3fa8:	ff 90       	pop	r15
    3faa:	08 95       	ret

00003fac <TMRSRVC_stop>:
    3fac:	10 92 37 02 	sts	0x0237, r1
    3fb0:	08 95       	ret

00003fb2 <STEPPER_process_pwm>:
    3fb2:	fc 01       	movw	r30, r24
    3fb4:	80 91 4a 04 	lds	r24, 0x044A
    3fb8:	82 30       	cpi	r24, 0x02	; 2
    3fba:	69 f4       	brne	.+26     	; 0x3fd6 <STEPPER_process_pwm+0x24>
    3fbc:	80 91 3c 02 	lds	r24, 0x023C
    3fc0:	91 e0       	ldi	r25, 0x01	; 1
    3fc2:	89 27       	eor	r24, r25
    3fc4:	80 93 3c 02 	sts	0x023C, r24
    3fc8:	88 23       	and	r24, r24
    3fca:	09 f0       	breq	.+2      	; 0x3fce <STEPPER_process_pwm+0x1c>
    3fcc:	3e c0       	rjmp	.+124    	; 0x404a <STEPPER_process_pwm+0x98>
    3fce:	80 81       	ld	r24, Z
    3fd0:	83 7e       	andi	r24, 0xE3	; 227
    3fd2:	80 83       	st	Z, r24
    3fd4:	3a c0       	rjmp	.+116    	; 0x404a <STEPPER_process_pwm+0x98>
    3fd6:	80 91 29 04 	lds	r24, 0x0429
    3fda:	90 91 2a 04 	lds	r25, 0x042A
    3fde:	c3 97       	sbiw	r24, 0x33	; 51
    3fe0:	a4 f5       	brge	.+104    	; 0x404a <STEPPER_process_pwm+0x98>
    3fe2:	66 23       	and	r22, r22
    3fe4:	d1 f0       	breq	.+52     	; 0x401a <STEPPER_process_pwm+0x68>
    3fe6:	20 91 29 04 	lds	r18, 0x0429
    3fea:	30 91 2a 04 	lds	r19, 0x042A
    3fee:	80 e6       	ldi	r24, 0x60	; 96
    3ff0:	90 e0       	ldi	r25, 0x00	; 0
    3ff2:	bc 01       	movw	r22, r24
    3ff4:	26 9f       	mul	r18, r22
    3ff6:	c0 01       	movw	r24, r0
    3ff8:	27 9f       	mul	r18, r23
    3ffa:	90 0d       	add	r25, r0
    3ffc:	36 9f       	mul	r19, r22
    3ffe:	90 0d       	add	r25, r0
    4000:	11 24       	eor	r1, r1
    4002:	88 0f       	add	r24, r24
    4004:	89 2f       	mov	r24, r25
    4006:	88 1f       	adc	r24, r24
    4008:	99 0b       	sbc	r25, r25
    400a:	90 93 3e 04 	sts	0x043E, r25
    400e:	80 93 3d 04 	sts	0x043D, r24
    4012:	81 e0       	ldi	r24, 0x01	; 1
    4014:	80 93 3a 02 	sts	0x023A, r24
    4018:	18 c0       	rjmp	.+48     	; 0x404a <STEPPER_process_pwm+0x98>
    401a:	80 91 3a 02 	lds	r24, 0x023A
    401e:	88 23       	and	r24, r24
    4020:	a1 f0       	breq	.+40     	; 0x404a <STEPPER_process_pwm+0x98>
    4022:	80 91 3d 04 	lds	r24, 0x043D
    4026:	90 91 3e 04 	lds	r25, 0x043E
    402a:	01 97       	sbiw	r24, 0x01	; 1
    402c:	90 93 3e 04 	sts	0x043E, r25
    4030:	80 93 3d 04 	sts	0x043D, r24
    4034:	80 91 3d 04 	lds	r24, 0x043D
    4038:	90 91 3e 04 	lds	r25, 0x043E
    403c:	89 2b       	or	r24, r25
    403e:	29 f4       	brne	.+10     	; 0x404a <STEPPER_process_pwm+0x98>
    4040:	80 81       	ld	r24, Z
    4042:	83 7e       	andi	r24, 0xE3	; 227
    4044:	80 83       	st	Z, r24
    4046:	10 92 3a 02 	sts	0x023A, r1
    404a:	80 91 4b 04 	lds	r24, 0x044B
    404e:	82 30       	cpi	r24, 0x02	; 2
    4050:	69 f4       	brne	.+26     	; 0x406c <STEPPER_process_pwm+0xba>
    4052:	80 91 3b 02 	lds	r24, 0x023B
    4056:	91 e0       	ldi	r25, 0x01	; 1
    4058:	89 27       	eor	r24, r25
    405a:	80 93 3b 02 	sts	0x023B, r24
    405e:	88 23       	and	r24, r24
    4060:	09 f0       	breq	.+2      	; 0x4064 <STEPPER_process_pwm+0xb2>
    4062:	3e c0       	rjmp	.+124    	; 0x40e0 <STEPPER_process_pwm+0x12e>
    4064:	80 81       	ld	r24, Z
    4066:	8f 71       	andi	r24, 0x1F	; 31
    4068:	80 83       	st	Z, r24
    406a:	08 95       	ret
    406c:	80 91 2b 04 	lds	r24, 0x042B
    4070:	90 91 2c 04 	lds	r25, 0x042C
    4074:	c3 97       	sbiw	r24, 0x33	; 51
    4076:	a4 f5       	brge	.+104    	; 0x40e0 <STEPPER_process_pwm+0x12e>
    4078:	44 23       	and	r20, r20
    407a:	d1 f0       	breq	.+52     	; 0x40b0 <STEPPER_process_pwm+0xfe>
    407c:	20 91 2b 04 	lds	r18, 0x042B
    4080:	30 91 2c 04 	lds	r19, 0x042C
    4084:	80 e6       	ldi	r24, 0x60	; 96
    4086:	90 e0       	ldi	r25, 0x00	; 0
    4088:	ac 01       	movw	r20, r24
    408a:	24 9f       	mul	r18, r20
    408c:	c0 01       	movw	r24, r0
    408e:	25 9f       	mul	r18, r21
    4090:	90 0d       	add	r25, r0
    4092:	34 9f       	mul	r19, r20
    4094:	90 0d       	add	r25, r0
    4096:	11 24       	eor	r1, r1
    4098:	88 0f       	add	r24, r24
    409a:	89 2f       	mov	r24, r25
    409c:	88 1f       	adc	r24, r24
    409e:	99 0b       	sbc	r25, r25
    40a0:	90 93 40 04 	sts	0x0440, r25
    40a4:	80 93 3f 04 	sts	0x043F, r24
    40a8:	81 e0       	ldi	r24, 0x01	; 1
    40aa:	80 93 39 02 	sts	0x0239, r24
    40ae:	08 95       	ret
    40b0:	80 91 39 02 	lds	r24, 0x0239
    40b4:	88 23       	and	r24, r24
    40b6:	a1 f0       	breq	.+40     	; 0x40e0 <STEPPER_process_pwm+0x12e>
    40b8:	80 91 3f 04 	lds	r24, 0x043F
    40bc:	90 91 40 04 	lds	r25, 0x0440
    40c0:	01 97       	sbiw	r24, 0x01	; 1
    40c2:	90 93 40 04 	sts	0x0440, r25
    40c6:	80 93 3f 04 	sts	0x043F, r24
    40ca:	80 91 3f 04 	lds	r24, 0x043F
    40ce:	90 91 40 04 	lds	r25, 0x0440
    40d2:	89 2b       	or	r24, r25
    40d4:	29 f4       	brne	.+10     	; 0x40e0 <STEPPER_process_pwm+0x12e>
    40d6:	80 81       	ld	r24, Z
    40d8:	8f 71       	andi	r24, 0x1F	; 31
    40da:	80 83       	st	Z, r24
    40dc:	10 92 39 02 	sts	0x0239, r1
    40e0:	08 95       	ret

000040e2 <__subsf3>:
    40e2:	50 58       	subi	r21, 0x80	; 128

000040e4 <__addsf3>:
    40e4:	bb 27       	eor	r27, r27
    40e6:	aa 27       	eor	r26, r26
    40e8:	0e d0       	rcall	.+28     	; 0x4106 <__addsf3x>
    40ea:	75 c1       	rjmp	.+746    	; 0x43d6 <__fp_round>
    40ec:	66 d1       	rcall	.+716    	; 0x43ba <__fp_pscA>
    40ee:	30 f0       	brcs	.+12     	; 0x40fc <__addsf3+0x18>
    40f0:	6b d1       	rcall	.+726    	; 0x43c8 <__fp_pscB>
    40f2:	20 f0       	brcs	.+8      	; 0x40fc <__addsf3+0x18>
    40f4:	31 f4       	brne	.+12     	; 0x4102 <__addsf3+0x1e>
    40f6:	9f 3f       	cpi	r25, 0xFF	; 255
    40f8:	11 f4       	brne	.+4      	; 0x40fe <__addsf3+0x1a>
    40fa:	1e f4       	brtc	.+6      	; 0x4102 <__addsf3+0x1e>
    40fc:	5b c1       	rjmp	.+694    	; 0x43b4 <__fp_nan>
    40fe:	0e f4       	brtc	.+2      	; 0x4102 <__addsf3+0x1e>
    4100:	e0 95       	com	r30
    4102:	e7 fb       	bst	r30, 7
    4104:	51 c1       	rjmp	.+674    	; 0x43a8 <__fp_inf>

00004106 <__addsf3x>:
    4106:	e9 2f       	mov	r30, r25
    4108:	77 d1       	rcall	.+750    	; 0x43f8 <__fp_split3>
    410a:	80 f3       	brcs	.-32     	; 0x40ec <__addsf3+0x8>
    410c:	ba 17       	cp	r27, r26
    410e:	62 07       	cpc	r22, r18
    4110:	73 07       	cpc	r23, r19
    4112:	84 07       	cpc	r24, r20
    4114:	95 07       	cpc	r25, r21
    4116:	18 f0       	brcs	.+6      	; 0x411e <__addsf3x+0x18>
    4118:	71 f4       	brne	.+28     	; 0x4136 <__addsf3x+0x30>
    411a:	9e f5       	brtc	.+102    	; 0x4182 <__addsf3x+0x7c>
    411c:	8f c1       	rjmp	.+798    	; 0x443c <__fp_zero>
    411e:	0e f4       	brtc	.+2      	; 0x4122 <__addsf3x+0x1c>
    4120:	e0 95       	com	r30
    4122:	0b 2e       	mov	r0, r27
    4124:	ba 2f       	mov	r27, r26
    4126:	a0 2d       	mov	r26, r0
    4128:	0b 01       	movw	r0, r22
    412a:	b9 01       	movw	r22, r18
    412c:	90 01       	movw	r18, r0
    412e:	0c 01       	movw	r0, r24
    4130:	ca 01       	movw	r24, r20
    4132:	a0 01       	movw	r20, r0
    4134:	11 24       	eor	r1, r1
    4136:	ff 27       	eor	r31, r31
    4138:	59 1b       	sub	r21, r25
    413a:	99 f0       	breq	.+38     	; 0x4162 <__addsf3x+0x5c>
    413c:	59 3f       	cpi	r21, 0xF9	; 249
    413e:	50 f4       	brcc	.+20     	; 0x4154 <__addsf3x+0x4e>
    4140:	50 3e       	cpi	r21, 0xE0	; 224
    4142:	68 f1       	brcs	.+90     	; 0x419e <__addsf3x+0x98>
    4144:	1a 16       	cp	r1, r26
    4146:	f0 40       	sbci	r31, 0x00	; 0
    4148:	a2 2f       	mov	r26, r18
    414a:	23 2f       	mov	r18, r19
    414c:	34 2f       	mov	r19, r20
    414e:	44 27       	eor	r20, r20
    4150:	58 5f       	subi	r21, 0xF8	; 248
    4152:	f3 cf       	rjmp	.-26     	; 0x413a <__addsf3x+0x34>
    4154:	46 95       	lsr	r20
    4156:	37 95       	ror	r19
    4158:	27 95       	ror	r18
    415a:	a7 95       	ror	r26
    415c:	f0 40       	sbci	r31, 0x00	; 0
    415e:	53 95       	inc	r21
    4160:	c9 f7       	brne	.-14     	; 0x4154 <__addsf3x+0x4e>
    4162:	7e f4       	brtc	.+30     	; 0x4182 <__addsf3x+0x7c>
    4164:	1f 16       	cp	r1, r31
    4166:	ba 0b       	sbc	r27, r26
    4168:	62 0b       	sbc	r22, r18
    416a:	73 0b       	sbc	r23, r19
    416c:	84 0b       	sbc	r24, r20
    416e:	ba f0       	brmi	.+46     	; 0x419e <__addsf3x+0x98>
    4170:	91 50       	subi	r25, 0x01	; 1
    4172:	a1 f0       	breq	.+40     	; 0x419c <__addsf3x+0x96>
    4174:	ff 0f       	add	r31, r31
    4176:	bb 1f       	adc	r27, r27
    4178:	66 1f       	adc	r22, r22
    417a:	77 1f       	adc	r23, r23
    417c:	88 1f       	adc	r24, r24
    417e:	c2 f7       	brpl	.-16     	; 0x4170 <__addsf3x+0x6a>
    4180:	0e c0       	rjmp	.+28     	; 0x419e <__addsf3x+0x98>
    4182:	ba 0f       	add	r27, r26
    4184:	62 1f       	adc	r22, r18
    4186:	73 1f       	adc	r23, r19
    4188:	84 1f       	adc	r24, r20
    418a:	48 f4       	brcc	.+18     	; 0x419e <__addsf3x+0x98>
    418c:	87 95       	ror	r24
    418e:	77 95       	ror	r23
    4190:	67 95       	ror	r22
    4192:	b7 95       	ror	r27
    4194:	f7 95       	ror	r31
    4196:	9e 3f       	cpi	r25, 0xFE	; 254
    4198:	08 f0       	brcs	.+2      	; 0x419c <__addsf3x+0x96>
    419a:	b3 cf       	rjmp	.-154    	; 0x4102 <__addsf3+0x1e>
    419c:	93 95       	inc	r25
    419e:	88 0f       	add	r24, r24
    41a0:	08 f0       	brcs	.+2      	; 0x41a4 <__addsf3x+0x9e>
    41a2:	99 27       	eor	r25, r25
    41a4:	ee 0f       	add	r30, r30
    41a6:	97 95       	ror	r25
    41a8:	87 95       	ror	r24
    41aa:	08 95       	ret

000041ac <__cmpsf2>:
    41ac:	d9 d0       	rcall	.+434    	; 0x4360 <__fp_cmp>
    41ae:	08 f4       	brcc	.+2      	; 0x41b2 <__cmpsf2+0x6>
    41b0:	81 e0       	ldi	r24, 0x01	; 1
    41b2:	08 95       	ret

000041b4 <__divsf3>:
    41b4:	0c d0       	rcall	.+24     	; 0x41ce <__divsf3x>
    41b6:	0f c1       	rjmp	.+542    	; 0x43d6 <__fp_round>
    41b8:	07 d1       	rcall	.+526    	; 0x43c8 <__fp_pscB>
    41ba:	40 f0       	brcs	.+16     	; 0x41cc <__divsf3+0x18>
    41bc:	fe d0       	rcall	.+508    	; 0x43ba <__fp_pscA>
    41be:	30 f0       	brcs	.+12     	; 0x41cc <__divsf3+0x18>
    41c0:	21 f4       	brne	.+8      	; 0x41ca <__divsf3+0x16>
    41c2:	5f 3f       	cpi	r21, 0xFF	; 255
    41c4:	19 f0       	breq	.+6      	; 0x41cc <__divsf3+0x18>
    41c6:	f0 c0       	rjmp	.+480    	; 0x43a8 <__fp_inf>
    41c8:	51 11       	cpse	r21, r1
    41ca:	39 c1       	rjmp	.+626    	; 0x443e <__fp_szero>
    41cc:	f3 c0       	rjmp	.+486    	; 0x43b4 <__fp_nan>

000041ce <__divsf3x>:
    41ce:	14 d1       	rcall	.+552    	; 0x43f8 <__fp_split3>
    41d0:	98 f3       	brcs	.-26     	; 0x41b8 <__divsf3+0x4>

000041d2 <__divsf3_pse>:
    41d2:	99 23       	and	r25, r25
    41d4:	c9 f3       	breq	.-14     	; 0x41c8 <__divsf3+0x14>
    41d6:	55 23       	and	r21, r21
    41d8:	b1 f3       	breq	.-20     	; 0x41c6 <__divsf3+0x12>
    41da:	95 1b       	sub	r25, r21
    41dc:	55 0b       	sbc	r21, r21
    41de:	bb 27       	eor	r27, r27
    41e0:	aa 27       	eor	r26, r26
    41e2:	62 17       	cp	r22, r18
    41e4:	73 07       	cpc	r23, r19
    41e6:	84 07       	cpc	r24, r20
    41e8:	38 f0       	brcs	.+14     	; 0x41f8 <__divsf3_pse+0x26>
    41ea:	9f 5f       	subi	r25, 0xFF	; 255
    41ec:	5f 4f       	sbci	r21, 0xFF	; 255
    41ee:	22 0f       	add	r18, r18
    41f0:	33 1f       	adc	r19, r19
    41f2:	44 1f       	adc	r20, r20
    41f4:	aa 1f       	adc	r26, r26
    41f6:	a9 f3       	breq	.-22     	; 0x41e2 <__divsf3_pse+0x10>
    41f8:	33 d0       	rcall	.+102    	; 0x4260 <__divsf3_pse+0x8e>
    41fa:	0e 2e       	mov	r0, r30
    41fc:	3a f0       	brmi	.+14     	; 0x420c <__divsf3_pse+0x3a>
    41fe:	e0 e8       	ldi	r30, 0x80	; 128
    4200:	30 d0       	rcall	.+96     	; 0x4262 <__divsf3_pse+0x90>
    4202:	91 50       	subi	r25, 0x01	; 1
    4204:	50 40       	sbci	r21, 0x00	; 0
    4206:	e6 95       	lsr	r30
    4208:	00 1c       	adc	r0, r0
    420a:	ca f7       	brpl	.-14     	; 0x41fe <__divsf3_pse+0x2c>
    420c:	29 d0       	rcall	.+82     	; 0x4260 <__divsf3_pse+0x8e>
    420e:	fe 2f       	mov	r31, r30
    4210:	27 d0       	rcall	.+78     	; 0x4260 <__divsf3_pse+0x8e>
    4212:	66 0f       	add	r22, r22
    4214:	77 1f       	adc	r23, r23
    4216:	88 1f       	adc	r24, r24
    4218:	bb 1f       	adc	r27, r27
    421a:	26 17       	cp	r18, r22
    421c:	37 07       	cpc	r19, r23
    421e:	48 07       	cpc	r20, r24
    4220:	ab 07       	cpc	r26, r27
    4222:	b0 e8       	ldi	r27, 0x80	; 128
    4224:	09 f0       	breq	.+2      	; 0x4228 <__divsf3_pse+0x56>
    4226:	bb 0b       	sbc	r27, r27
    4228:	80 2d       	mov	r24, r0
    422a:	bf 01       	movw	r22, r30
    422c:	ff 27       	eor	r31, r31
    422e:	93 58       	subi	r25, 0x83	; 131
    4230:	5f 4f       	sbci	r21, 0xFF	; 255
    4232:	2a f0       	brmi	.+10     	; 0x423e <__divsf3_pse+0x6c>
    4234:	9e 3f       	cpi	r25, 0xFE	; 254
    4236:	51 05       	cpc	r21, r1
    4238:	68 f0       	brcs	.+26     	; 0x4254 <__divsf3_pse+0x82>
    423a:	b6 c0       	rjmp	.+364    	; 0x43a8 <__fp_inf>
    423c:	00 c1       	rjmp	.+512    	; 0x443e <__fp_szero>
    423e:	5f 3f       	cpi	r21, 0xFF	; 255
    4240:	ec f3       	brlt	.-6      	; 0x423c <__divsf3_pse+0x6a>
    4242:	98 3e       	cpi	r25, 0xE8	; 232
    4244:	dc f3       	brlt	.-10     	; 0x423c <__divsf3_pse+0x6a>
    4246:	86 95       	lsr	r24
    4248:	77 95       	ror	r23
    424a:	67 95       	ror	r22
    424c:	b7 95       	ror	r27
    424e:	f7 95       	ror	r31
    4250:	9f 5f       	subi	r25, 0xFF	; 255
    4252:	c9 f7       	brne	.-14     	; 0x4246 <__divsf3_pse+0x74>
    4254:	88 0f       	add	r24, r24
    4256:	91 1d       	adc	r25, r1
    4258:	96 95       	lsr	r25
    425a:	87 95       	ror	r24
    425c:	97 f9       	bld	r25, 7
    425e:	08 95       	ret
    4260:	e1 e0       	ldi	r30, 0x01	; 1
    4262:	66 0f       	add	r22, r22
    4264:	77 1f       	adc	r23, r23
    4266:	88 1f       	adc	r24, r24
    4268:	bb 1f       	adc	r27, r27
    426a:	62 17       	cp	r22, r18
    426c:	73 07       	cpc	r23, r19
    426e:	84 07       	cpc	r24, r20
    4270:	ba 07       	cpc	r27, r26
    4272:	20 f0       	brcs	.+8      	; 0x427c <__divsf3_pse+0xaa>
    4274:	62 1b       	sub	r22, r18
    4276:	73 0b       	sbc	r23, r19
    4278:	84 0b       	sbc	r24, r20
    427a:	ba 0b       	sbc	r27, r26
    427c:	ee 1f       	adc	r30, r30
    427e:	88 f7       	brcc	.-30     	; 0x4262 <__divsf3_pse+0x90>
    4280:	e0 95       	com	r30
    4282:	08 95       	ret

00004284 <__fixsfsi>:
    4284:	04 d0       	rcall	.+8      	; 0x428e <__fixunssfsi>
    4286:	68 94       	set
    4288:	b1 11       	cpse	r27, r1
    428a:	d9 c0       	rjmp	.+434    	; 0x443e <__fp_szero>
    428c:	08 95       	ret

0000428e <__fixunssfsi>:
    428e:	bc d0       	rcall	.+376    	; 0x4408 <__fp_splitA>
    4290:	88 f0       	brcs	.+34     	; 0x42b4 <__fixunssfsi+0x26>
    4292:	9f 57       	subi	r25, 0x7F	; 127
    4294:	90 f0       	brcs	.+36     	; 0x42ba <__fixunssfsi+0x2c>
    4296:	b9 2f       	mov	r27, r25
    4298:	99 27       	eor	r25, r25
    429a:	b7 51       	subi	r27, 0x17	; 23
    429c:	a0 f0       	brcs	.+40     	; 0x42c6 <__fixunssfsi+0x38>
    429e:	d1 f0       	breq	.+52     	; 0x42d4 <__fixunssfsi+0x46>
    42a0:	66 0f       	add	r22, r22
    42a2:	77 1f       	adc	r23, r23
    42a4:	88 1f       	adc	r24, r24
    42a6:	99 1f       	adc	r25, r25
    42a8:	1a f0       	brmi	.+6      	; 0x42b0 <__fixunssfsi+0x22>
    42aa:	ba 95       	dec	r27
    42ac:	c9 f7       	brne	.-14     	; 0x42a0 <__fixunssfsi+0x12>
    42ae:	12 c0       	rjmp	.+36     	; 0x42d4 <__fixunssfsi+0x46>
    42b0:	b1 30       	cpi	r27, 0x01	; 1
    42b2:	81 f0       	breq	.+32     	; 0x42d4 <__fixunssfsi+0x46>
    42b4:	c3 d0       	rcall	.+390    	; 0x443c <__fp_zero>
    42b6:	b1 e0       	ldi	r27, 0x01	; 1
    42b8:	08 95       	ret
    42ba:	c0 c0       	rjmp	.+384    	; 0x443c <__fp_zero>
    42bc:	67 2f       	mov	r22, r23
    42be:	78 2f       	mov	r23, r24
    42c0:	88 27       	eor	r24, r24
    42c2:	b8 5f       	subi	r27, 0xF8	; 248
    42c4:	39 f0       	breq	.+14     	; 0x42d4 <__fixunssfsi+0x46>
    42c6:	b9 3f       	cpi	r27, 0xF9	; 249
    42c8:	cc f3       	brlt	.-14     	; 0x42bc <__fixunssfsi+0x2e>
    42ca:	86 95       	lsr	r24
    42cc:	77 95       	ror	r23
    42ce:	67 95       	ror	r22
    42d0:	b3 95       	inc	r27
    42d2:	d9 f7       	brne	.-10     	; 0x42ca <__fixunssfsi+0x3c>
    42d4:	3e f4       	brtc	.+14     	; 0x42e4 <__fixunssfsi+0x56>
    42d6:	90 95       	com	r25
    42d8:	80 95       	com	r24
    42da:	70 95       	com	r23
    42dc:	61 95       	neg	r22
    42de:	7f 4f       	sbci	r23, 0xFF	; 255
    42e0:	8f 4f       	sbci	r24, 0xFF	; 255
    42e2:	9f 4f       	sbci	r25, 0xFF	; 255
    42e4:	08 95       	ret

000042e6 <__floatunsisf>:
    42e6:	e8 94       	clt
    42e8:	09 c0       	rjmp	.+18     	; 0x42fc <__floatsisf+0x12>

000042ea <__floatsisf>:
    42ea:	97 fb       	bst	r25, 7
    42ec:	3e f4       	brtc	.+14     	; 0x42fc <__floatsisf+0x12>
    42ee:	90 95       	com	r25
    42f0:	80 95       	com	r24
    42f2:	70 95       	com	r23
    42f4:	61 95       	neg	r22
    42f6:	7f 4f       	sbci	r23, 0xFF	; 255
    42f8:	8f 4f       	sbci	r24, 0xFF	; 255
    42fa:	9f 4f       	sbci	r25, 0xFF	; 255
    42fc:	99 23       	and	r25, r25
    42fe:	a9 f0       	breq	.+42     	; 0x432a <__floatsisf+0x40>
    4300:	f9 2f       	mov	r31, r25
    4302:	96 e9       	ldi	r25, 0x96	; 150
    4304:	bb 27       	eor	r27, r27
    4306:	93 95       	inc	r25
    4308:	f6 95       	lsr	r31
    430a:	87 95       	ror	r24
    430c:	77 95       	ror	r23
    430e:	67 95       	ror	r22
    4310:	b7 95       	ror	r27
    4312:	f1 11       	cpse	r31, r1
    4314:	f8 cf       	rjmp	.-16     	; 0x4306 <__floatsisf+0x1c>
    4316:	fa f4       	brpl	.+62     	; 0x4356 <__floatsisf+0x6c>
    4318:	bb 0f       	add	r27, r27
    431a:	11 f4       	brne	.+4      	; 0x4320 <__floatsisf+0x36>
    431c:	60 ff       	sbrs	r22, 0
    431e:	1b c0       	rjmp	.+54     	; 0x4356 <__floatsisf+0x6c>
    4320:	6f 5f       	subi	r22, 0xFF	; 255
    4322:	7f 4f       	sbci	r23, 0xFF	; 255
    4324:	8f 4f       	sbci	r24, 0xFF	; 255
    4326:	9f 4f       	sbci	r25, 0xFF	; 255
    4328:	16 c0       	rjmp	.+44     	; 0x4356 <__floatsisf+0x6c>
    432a:	88 23       	and	r24, r24
    432c:	11 f0       	breq	.+4      	; 0x4332 <__floatsisf+0x48>
    432e:	96 e9       	ldi	r25, 0x96	; 150
    4330:	11 c0       	rjmp	.+34     	; 0x4354 <__floatsisf+0x6a>
    4332:	77 23       	and	r23, r23
    4334:	21 f0       	breq	.+8      	; 0x433e <__floatsisf+0x54>
    4336:	9e e8       	ldi	r25, 0x8E	; 142
    4338:	87 2f       	mov	r24, r23
    433a:	76 2f       	mov	r23, r22
    433c:	05 c0       	rjmp	.+10     	; 0x4348 <__floatsisf+0x5e>
    433e:	66 23       	and	r22, r22
    4340:	71 f0       	breq	.+28     	; 0x435e <__floatsisf+0x74>
    4342:	96 e8       	ldi	r25, 0x86	; 134
    4344:	86 2f       	mov	r24, r22
    4346:	70 e0       	ldi	r23, 0x00	; 0
    4348:	60 e0       	ldi	r22, 0x00	; 0
    434a:	2a f0       	brmi	.+10     	; 0x4356 <__floatsisf+0x6c>
    434c:	9a 95       	dec	r25
    434e:	66 0f       	add	r22, r22
    4350:	77 1f       	adc	r23, r23
    4352:	88 1f       	adc	r24, r24
    4354:	da f7       	brpl	.-10     	; 0x434c <__floatsisf+0x62>
    4356:	88 0f       	add	r24, r24
    4358:	96 95       	lsr	r25
    435a:	87 95       	ror	r24
    435c:	97 f9       	bld	r25, 7
    435e:	08 95       	ret

00004360 <__fp_cmp>:
    4360:	99 0f       	add	r25, r25
    4362:	00 08       	sbc	r0, r0
    4364:	55 0f       	add	r21, r21
    4366:	aa 0b       	sbc	r26, r26
    4368:	e0 e8       	ldi	r30, 0x80	; 128
    436a:	fe ef       	ldi	r31, 0xFE	; 254
    436c:	16 16       	cp	r1, r22
    436e:	17 06       	cpc	r1, r23
    4370:	e8 07       	cpc	r30, r24
    4372:	f9 07       	cpc	r31, r25
    4374:	c0 f0       	brcs	.+48     	; 0x43a6 <__fp_cmp+0x46>
    4376:	12 16       	cp	r1, r18
    4378:	13 06       	cpc	r1, r19
    437a:	e4 07       	cpc	r30, r20
    437c:	f5 07       	cpc	r31, r21
    437e:	98 f0       	brcs	.+38     	; 0x43a6 <__fp_cmp+0x46>
    4380:	62 1b       	sub	r22, r18
    4382:	73 0b       	sbc	r23, r19
    4384:	84 0b       	sbc	r24, r20
    4386:	95 0b       	sbc	r25, r21
    4388:	39 f4       	brne	.+14     	; 0x4398 <__fp_cmp+0x38>
    438a:	0a 26       	eor	r0, r26
    438c:	61 f0       	breq	.+24     	; 0x43a6 <__fp_cmp+0x46>
    438e:	23 2b       	or	r18, r19
    4390:	24 2b       	or	r18, r20
    4392:	25 2b       	or	r18, r21
    4394:	21 f4       	brne	.+8      	; 0x439e <__fp_cmp+0x3e>
    4396:	08 95       	ret
    4398:	0a 26       	eor	r0, r26
    439a:	09 f4       	brne	.+2      	; 0x439e <__fp_cmp+0x3e>
    439c:	a1 40       	sbci	r26, 0x01	; 1
    439e:	a6 95       	lsr	r26
    43a0:	8f ef       	ldi	r24, 0xFF	; 255
    43a2:	81 1d       	adc	r24, r1
    43a4:	81 1d       	adc	r24, r1
    43a6:	08 95       	ret

000043a8 <__fp_inf>:
    43a8:	97 f9       	bld	r25, 7
    43aa:	9f 67       	ori	r25, 0x7F	; 127
    43ac:	80 e8       	ldi	r24, 0x80	; 128
    43ae:	70 e0       	ldi	r23, 0x00	; 0
    43b0:	60 e0       	ldi	r22, 0x00	; 0
    43b2:	08 95       	ret

000043b4 <__fp_nan>:
    43b4:	9f ef       	ldi	r25, 0xFF	; 255
    43b6:	80 ec       	ldi	r24, 0xC0	; 192
    43b8:	08 95       	ret

000043ba <__fp_pscA>:
    43ba:	00 24       	eor	r0, r0
    43bc:	0a 94       	dec	r0
    43be:	16 16       	cp	r1, r22
    43c0:	17 06       	cpc	r1, r23
    43c2:	18 06       	cpc	r1, r24
    43c4:	09 06       	cpc	r0, r25
    43c6:	08 95       	ret

000043c8 <__fp_pscB>:
    43c8:	00 24       	eor	r0, r0
    43ca:	0a 94       	dec	r0
    43cc:	12 16       	cp	r1, r18
    43ce:	13 06       	cpc	r1, r19
    43d0:	14 06       	cpc	r1, r20
    43d2:	05 06       	cpc	r0, r21
    43d4:	08 95       	ret

000043d6 <__fp_round>:
    43d6:	09 2e       	mov	r0, r25
    43d8:	03 94       	inc	r0
    43da:	00 0c       	add	r0, r0
    43dc:	11 f4       	brne	.+4      	; 0x43e2 <__fp_round+0xc>
    43de:	88 23       	and	r24, r24
    43e0:	52 f0       	brmi	.+20     	; 0x43f6 <__fp_round+0x20>
    43e2:	bb 0f       	add	r27, r27
    43e4:	40 f4       	brcc	.+16     	; 0x43f6 <__fp_round+0x20>
    43e6:	bf 2b       	or	r27, r31
    43e8:	11 f4       	brne	.+4      	; 0x43ee <__fp_round+0x18>
    43ea:	60 ff       	sbrs	r22, 0
    43ec:	04 c0       	rjmp	.+8      	; 0x43f6 <__fp_round+0x20>
    43ee:	6f 5f       	subi	r22, 0xFF	; 255
    43f0:	7f 4f       	sbci	r23, 0xFF	; 255
    43f2:	8f 4f       	sbci	r24, 0xFF	; 255
    43f4:	9f 4f       	sbci	r25, 0xFF	; 255
    43f6:	08 95       	ret

000043f8 <__fp_split3>:
    43f8:	57 fd       	sbrc	r21, 7
    43fa:	90 58       	subi	r25, 0x80	; 128
    43fc:	44 0f       	add	r20, r20
    43fe:	55 1f       	adc	r21, r21
    4400:	59 f0       	breq	.+22     	; 0x4418 <__fp_splitA+0x10>
    4402:	5f 3f       	cpi	r21, 0xFF	; 255
    4404:	71 f0       	breq	.+28     	; 0x4422 <__fp_splitA+0x1a>
    4406:	47 95       	ror	r20

00004408 <__fp_splitA>:
    4408:	88 0f       	add	r24, r24
    440a:	97 fb       	bst	r25, 7
    440c:	99 1f       	adc	r25, r25
    440e:	61 f0       	breq	.+24     	; 0x4428 <__fp_splitA+0x20>
    4410:	9f 3f       	cpi	r25, 0xFF	; 255
    4412:	79 f0       	breq	.+30     	; 0x4432 <__fp_splitA+0x2a>
    4414:	87 95       	ror	r24
    4416:	08 95       	ret
    4418:	12 16       	cp	r1, r18
    441a:	13 06       	cpc	r1, r19
    441c:	14 06       	cpc	r1, r20
    441e:	55 1f       	adc	r21, r21
    4420:	f2 cf       	rjmp	.-28     	; 0x4406 <__fp_split3+0xe>
    4422:	46 95       	lsr	r20
    4424:	f1 df       	rcall	.-30     	; 0x4408 <__fp_splitA>
    4426:	08 c0       	rjmp	.+16     	; 0x4438 <__fp_splitA+0x30>
    4428:	16 16       	cp	r1, r22
    442a:	17 06       	cpc	r1, r23
    442c:	18 06       	cpc	r1, r24
    442e:	99 1f       	adc	r25, r25
    4430:	f1 cf       	rjmp	.-30     	; 0x4414 <__fp_splitA+0xc>
    4432:	86 95       	lsr	r24
    4434:	71 05       	cpc	r23, r1
    4436:	61 05       	cpc	r22, r1
    4438:	08 94       	sec
    443a:	08 95       	ret

0000443c <__fp_zero>:
    443c:	e8 94       	clt

0000443e <__fp_szero>:
    443e:	bb 27       	eor	r27, r27
    4440:	66 27       	eor	r22, r22
    4442:	77 27       	eor	r23, r23
    4444:	cb 01       	movw	r24, r22
    4446:	97 f9       	bld	r25, 7
    4448:	08 95       	ret

0000444a <__gesf2>:
    444a:	8a df       	rcall	.-236    	; 0x4360 <__fp_cmp>
    444c:	08 f4       	brcc	.+2      	; 0x4450 <__gesf2+0x6>
    444e:	8f ef       	ldi	r24, 0xFF	; 255
    4450:	08 95       	ret

00004452 <lrint>:
    4452:	da df       	rcall	.-76     	; 0x4408 <__fp_splitA>
    4454:	a8 f1       	brcs	.+106    	; 0x44c0 <lrint+0x6e>
    4456:	9e 57       	subi	r25, 0x7E	; 126
    4458:	a8 f1       	brcs	.+106    	; 0x44c4 <lrint+0x72>
    445a:	98 51       	subi	r25, 0x18	; 24
    445c:	60 f0       	brcs	.+24     	; 0x4476 <lrint+0x24>
    445e:	39 f1       	breq	.+78     	; 0x44ae <lrint+0x5c>
    4460:	98 30       	cpi	r25, 0x08	; 8
    4462:	70 f5       	brcc	.+92     	; 0x44c0 <lrint+0x6e>
    4464:	09 2e       	mov	r0, r25
    4466:	99 27       	eor	r25, r25
    4468:	66 0f       	add	r22, r22
    446a:	77 1f       	adc	r23, r23
    446c:	88 1f       	adc	r24, r24
    446e:	99 1f       	adc	r25, r25
    4470:	0a 94       	dec	r0
    4472:	d1 f7       	brne	.-12     	; 0x4468 <lrint+0x16>
    4474:	1c c0       	rjmp	.+56     	; 0x44ae <lrint+0x5c>
    4476:	bb 27       	eor	r27, r27
    4478:	99 3f       	cpi	r25, 0xF9	; 249
    447a:	4c f4       	brge	.+18     	; 0x448e <lrint+0x3c>
    447c:	b1 11       	cpse	r27, r1
    447e:	b1 e0       	ldi	r27, 0x01	; 1
    4480:	b6 2b       	or	r27, r22
    4482:	67 2f       	mov	r22, r23
    4484:	78 2f       	mov	r23, r24
    4486:	88 27       	eor	r24, r24
    4488:	98 5f       	subi	r25, 0xF8	; 248
    448a:	b1 f7       	brne	.-20     	; 0x4478 <lrint+0x26>
    448c:	08 c0       	rjmp	.+16     	; 0x449e <lrint+0x4c>
    448e:	86 95       	lsr	r24
    4490:	77 95       	ror	r23
    4492:	67 95       	ror	r22
    4494:	b7 95       	ror	r27
    4496:	08 f4       	brcc	.+2      	; 0x449a <lrint+0x48>
    4498:	b1 60       	ori	r27, 0x01	; 1
    449a:	93 95       	inc	r25
    449c:	c1 f7       	brne	.-16     	; 0x448e <lrint+0x3c>
    449e:	bb 0f       	add	r27, r27
    44a0:	30 f4       	brcc	.+12     	; 0x44ae <lrint+0x5c>
    44a2:	11 f4       	brne	.+4      	; 0x44a8 <lrint+0x56>
    44a4:	60 ff       	sbrs	r22, 0
    44a6:	03 c0       	rjmp	.+6      	; 0x44ae <lrint+0x5c>
    44a8:	6f 5f       	subi	r22, 0xFF	; 255
    44aa:	7f 4f       	sbci	r23, 0xFF	; 255
    44ac:	8f 4f       	sbci	r24, 0xFF	; 255
    44ae:	3e f4       	brtc	.+14     	; 0x44be <lrint+0x6c>
    44b0:	90 95       	com	r25
    44b2:	80 95       	com	r24
    44b4:	70 95       	com	r23
    44b6:	61 95       	neg	r22
    44b8:	7f 4f       	sbci	r23, 0xFF	; 255
    44ba:	8f 4f       	sbci	r24, 0xFF	; 255
    44bc:	9f 4f       	sbci	r25, 0xFF	; 255
    44be:	08 95       	ret
    44c0:	68 94       	set
    44c2:	bd cf       	rjmp	.-134    	; 0x443e <__fp_szero>
    44c4:	bb cf       	rjmp	.-138    	; 0x443c <__fp_zero>

000044c6 <__mulsf3>:
    44c6:	0b d0       	rcall	.+22     	; 0x44de <__mulsf3x>
    44c8:	86 cf       	rjmp	.-244    	; 0x43d6 <__fp_round>
    44ca:	77 df       	rcall	.-274    	; 0x43ba <__fp_pscA>
    44cc:	28 f0       	brcs	.+10     	; 0x44d8 <__mulsf3+0x12>
    44ce:	7c df       	rcall	.-264    	; 0x43c8 <__fp_pscB>
    44d0:	18 f0       	brcs	.+6      	; 0x44d8 <__mulsf3+0x12>
    44d2:	95 23       	and	r25, r21
    44d4:	09 f0       	breq	.+2      	; 0x44d8 <__mulsf3+0x12>
    44d6:	68 cf       	rjmp	.-304    	; 0x43a8 <__fp_inf>
    44d8:	6d cf       	rjmp	.-294    	; 0x43b4 <__fp_nan>
    44da:	11 24       	eor	r1, r1
    44dc:	b0 cf       	rjmp	.-160    	; 0x443e <__fp_szero>

000044de <__mulsf3x>:
    44de:	8c df       	rcall	.-232    	; 0x43f8 <__fp_split3>
    44e0:	a0 f3       	brcs	.-24     	; 0x44ca <__mulsf3+0x4>

000044e2 <__mulsf3_pse>:
    44e2:	95 9f       	mul	r25, r21
    44e4:	d1 f3       	breq	.-12     	; 0x44da <__mulsf3+0x14>
    44e6:	95 0f       	add	r25, r21
    44e8:	50 e0       	ldi	r21, 0x00	; 0
    44ea:	55 1f       	adc	r21, r21
    44ec:	62 9f       	mul	r22, r18
    44ee:	f0 01       	movw	r30, r0
    44f0:	72 9f       	mul	r23, r18
    44f2:	bb 27       	eor	r27, r27
    44f4:	f0 0d       	add	r31, r0
    44f6:	b1 1d       	adc	r27, r1
    44f8:	63 9f       	mul	r22, r19
    44fa:	aa 27       	eor	r26, r26
    44fc:	f0 0d       	add	r31, r0
    44fe:	b1 1d       	adc	r27, r1
    4500:	aa 1f       	adc	r26, r26
    4502:	64 9f       	mul	r22, r20
    4504:	66 27       	eor	r22, r22
    4506:	b0 0d       	add	r27, r0
    4508:	a1 1d       	adc	r26, r1
    450a:	66 1f       	adc	r22, r22
    450c:	82 9f       	mul	r24, r18
    450e:	22 27       	eor	r18, r18
    4510:	b0 0d       	add	r27, r0
    4512:	a1 1d       	adc	r26, r1
    4514:	62 1f       	adc	r22, r18
    4516:	73 9f       	mul	r23, r19
    4518:	b0 0d       	add	r27, r0
    451a:	a1 1d       	adc	r26, r1
    451c:	62 1f       	adc	r22, r18
    451e:	83 9f       	mul	r24, r19
    4520:	a0 0d       	add	r26, r0
    4522:	61 1d       	adc	r22, r1
    4524:	22 1f       	adc	r18, r18
    4526:	74 9f       	mul	r23, r20
    4528:	33 27       	eor	r19, r19
    452a:	a0 0d       	add	r26, r0
    452c:	61 1d       	adc	r22, r1
    452e:	23 1f       	adc	r18, r19
    4530:	84 9f       	mul	r24, r20
    4532:	60 0d       	add	r22, r0
    4534:	21 1d       	adc	r18, r1
    4536:	82 2f       	mov	r24, r18
    4538:	76 2f       	mov	r23, r22
    453a:	6a 2f       	mov	r22, r26
    453c:	11 24       	eor	r1, r1
    453e:	9f 57       	subi	r25, 0x7F	; 127
    4540:	50 40       	sbci	r21, 0x00	; 0
    4542:	8a f0       	brmi	.+34     	; 0x4566 <__mulsf3_pse+0x84>
    4544:	e1 f0       	breq	.+56     	; 0x457e <__mulsf3_pse+0x9c>
    4546:	88 23       	and	r24, r24
    4548:	4a f0       	brmi	.+18     	; 0x455c <__mulsf3_pse+0x7a>
    454a:	ee 0f       	add	r30, r30
    454c:	ff 1f       	adc	r31, r31
    454e:	bb 1f       	adc	r27, r27
    4550:	66 1f       	adc	r22, r22
    4552:	77 1f       	adc	r23, r23
    4554:	88 1f       	adc	r24, r24
    4556:	91 50       	subi	r25, 0x01	; 1
    4558:	50 40       	sbci	r21, 0x00	; 0
    455a:	a9 f7       	brne	.-22     	; 0x4546 <__mulsf3_pse+0x64>
    455c:	9e 3f       	cpi	r25, 0xFE	; 254
    455e:	51 05       	cpc	r21, r1
    4560:	70 f0       	brcs	.+28     	; 0x457e <__mulsf3_pse+0x9c>
    4562:	22 cf       	rjmp	.-444    	; 0x43a8 <__fp_inf>
    4564:	6c cf       	rjmp	.-296    	; 0x443e <__fp_szero>
    4566:	5f 3f       	cpi	r21, 0xFF	; 255
    4568:	ec f3       	brlt	.-6      	; 0x4564 <__mulsf3_pse+0x82>
    456a:	98 3e       	cpi	r25, 0xE8	; 232
    456c:	dc f3       	brlt	.-10     	; 0x4564 <__mulsf3_pse+0x82>
    456e:	86 95       	lsr	r24
    4570:	77 95       	ror	r23
    4572:	67 95       	ror	r22
    4574:	b7 95       	ror	r27
    4576:	f7 95       	ror	r31
    4578:	e7 95       	ror	r30
    457a:	9f 5f       	subi	r25, 0xFF	; 255
    457c:	c1 f7       	brne	.-16     	; 0x456e <__mulsf3_pse+0x8c>
    457e:	fe 2b       	or	r31, r30
    4580:	88 0f       	add	r24, r24
    4582:	91 1d       	adc	r25, r1
    4584:	96 95       	lsr	r25
    4586:	87 95       	ror	r24
    4588:	97 f9       	bld	r25, 7
    458a:	08 95       	ret

0000458c <pow>:
    458c:	fa 01       	movw	r30, r20
    458e:	ee 0f       	add	r30, r30
    4590:	ff 1f       	adc	r31, r31
    4592:	30 96       	adiw	r30, 0x00	; 0
    4594:	21 05       	cpc	r18, r1
    4596:	31 05       	cpc	r19, r1
    4598:	99 f1       	breq	.+102    	; 0x4600 <pow+0x74>
    459a:	61 15       	cp	r22, r1
    459c:	71 05       	cpc	r23, r1
    459e:	61 f4       	brne	.+24     	; 0x45b8 <pow+0x2c>
    45a0:	80 38       	cpi	r24, 0x80	; 128
    45a2:	bf e3       	ldi	r27, 0x3F	; 63
    45a4:	9b 07       	cpc	r25, r27
    45a6:	49 f1       	breq	.+82     	; 0x45fa <pow+0x6e>
    45a8:	68 94       	set
    45aa:	90 38       	cpi	r25, 0x80	; 128
    45ac:	81 05       	cpc	r24, r1
    45ae:	61 f0       	breq	.+24     	; 0x45c8 <pow+0x3c>
    45b0:	80 38       	cpi	r24, 0x80	; 128
    45b2:	bf ef       	ldi	r27, 0xFF	; 255
    45b4:	9b 07       	cpc	r25, r27
    45b6:	41 f0       	breq	.+16     	; 0x45c8 <pow+0x3c>
    45b8:	99 23       	and	r25, r25
    45ba:	42 f5       	brpl	.+80     	; 0x460c <pow+0x80>
    45bc:	ff 3f       	cpi	r31, 0xFF	; 255
    45be:	e1 05       	cpc	r30, r1
    45c0:	31 05       	cpc	r19, r1
    45c2:	21 05       	cpc	r18, r1
    45c4:	11 f1       	breq	.+68     	; 0x460a <pow+0x7e>
    45c6:	e8 94       	clt
    45c8:	08 94       	sec
    45ca:	e7 95       	ror	r30
    45cc:	d9 01       	movw	r26, r18
    45ce:	aa 23       	and	r26, r26
    45d0:	29 f4       	brne	.+10     	; 0x45dc <pow+0x50>
    45d2:	ab 2f       	mov	r26, r27
    45d4:	be 2f       	mov	r27, r30
    45d6:	f8 5f       	subi	r31, 0xF8	; 248
    45d8:	d0 f3       	brcs	.-12     	; 0x45ce <pow+0x42>
    45da:	10 c0       	rjmp	.+32     	; 0x45fc <pow+0x70>
    45dc:	ff 5f       	subi	r31, 0xFF	; 255
    45de:	70 f4       	brcc	.+28     	; 0x45fc <pow+0x70>
    45e0:	a6 95       	lsr	r26
    45e2:	e0 f7       	brcc	.-8      	; 0x45dc <pow+0x50>
    45e4:	f7 39       	cpi	r31, 0x97	; 151
    45e6:	50 f0       	brcs	.+20     	; 0x45fc <pow+0x70>
    45e8:	19 f0       	breq	.+6      	; 0x45f0 <pow+0x64>
    45ea:	ff 3a       	cpi	r31, 0xAF	; 175
    45ec:	38 f4       	brcc	.+14     	; 0x45fc <pow+0x70>
    45ee:	9f 77       	andi	r25, 0x7F	; 127
    45f0:	9f 93       	push	r25
    45f2:	0c d0       	rcall	.+24     	; 0x460c <pow+0x80>
    45f4:	0f 90       	pop	r0
    45f6:	07 fc       	sbrc	r0, 7
    45f8:	90 58       	subi	r25, 0x80	; 128
    45fa:	08 95       	ret
    45fc:	3e f0       	brts	.+14     	; 0x460c <pow+0x80>
    45fe:	da ce       	rjmp	.-588    	; 0x43b4 <__fp_nan>
    4600:	60 e0       	ldi	r22, 0x00	; 0
    4602:	70 e0       	ldi	r23, 0x00	; 0
    4604:	80 e8       	ldi	r24, 0x80	; 128
    4606:	9f e3       	ldi	r25, 0x3F	; 63
    4608:	08 95       	ret
    460a:	4f e7       	ldi	r20, 0x7F	; 127
    460c:	9f 77       	andi	r25, 0x7F	; 127
    460e:	5f 93       	push	r21
    4610:	4f 93       	push	r20
    4612:	3f 93       	push	r19
    4614:	2f 93       	push	r18
    4616:	9e d0       	rcall	.+316    	; 0x4754 <log>
    4618:	2f 91       	pop	r18
    461a:	3f 91       	pop	r19
    461c:	4f 91       	pop	r20
    461e:	5f 91       	pop	r21
    4620:	52 df       	rcall	.-348    	; 0x44c6 <__mulsf3>
    4622:	05 c0       	rjmp	.+10     	; 0x462e <exp>
    4624:	19 f4       	brne	.+6      	; 0x462c <pow+0xa0>
    4626:	0e f0       	brts	.+2      	; 0x462a <pow+0x9e>
    4628:	bf ce       	rjmp	.-642    	; 0x43a8 <__fp_inf>
    462a:	08 cf       	rjmp	.-496    	; 0x443c <__fp_zero>
    462c:	c3 ce       	rjmp	.-634    	; 0x43b4 <__fp_nan>

0000462e <exp>:
    462e:	ec de       	rcall	.-552    	; 0x4408 <__fp_splitA>
    4630:	c8 f3       	brcs	.-14     	; 0x4624 <pow+0x98>
    4632:	96 38       	cpi	r25, 0x86	; 134
    4634:	c0 f7       	brcc	.-16     	; 0x4626 <pow+0x9a>
    4636:	07 f8       	bld	r0, 7
    4638:	0f 92       	push	r0
    463a:	e8 94       	clt
    463c:	2b e3       	ldi	r18, 0x3B	; 59
    463e:	3a ea       	ldi	r19, 0xAA	; 170
    4640:	48 eb       	ldi	r20, 0xB8	; 184
    4642:	5f e7       	ldi	r21, 0x7F	; 127
    4644:	4e df       	rcall	.-356    	; 0x44e2 <__mulsf3_pse>
    4646:	0f 92       	push	r0
    4648:	0f 92       	push	r0
    464a:	0f 92       	push	r0
    464c:	4d b7       	in	r20, 0x3d	; 61
    464e:	5e b7       	in	r21, 0x3e	; 62
    4650:	0f 92       	push	r0
    4652:	c0 d0       	rcall	.+384    	; 0x47d4 <modf>
    4654:	e8 ec       	ldi	r30, 0xC8	; 200
    4656:	f0 e0       	ldi	r31, 0x00	; 0
    4658:	16 d0       	rcall	.+44     	; 0x4686 <__fp_powser>
    465a:	4f 91       	pop	r20
    465c:	5f 91       	pop	r21
    465e:	ef 91       	pop	r30
    4660:	ff 91       	pop	r31
    4662:	e5 95       	asr	r30
    4664:	ee 1f       	adc	r30, r30
    4666:	ff 1f       	adc	r31, r31
    4668:	49 f0       	breq	.+18     	; 0x467c <exp+0x4e>
    466a:	fe 57       	subi	r31, 0x7E	; 126
    466c:	e0 68       	ori	r30, 0x80	; 128
    466e:	44 27       	eor	r20, r20
    4670:	ee 0f       	add	r30, r30
    4672:	44 1f       	adc	r20, r20
    4674:	fa 95       	dec	r31
    4676:	e1 f7       	brne	.-8      	; 0x4670 <exp+0x42>
    4678:	41 95       	neg	r20
    467a:	55 0b       	sbc	r21, r21
    467c:	32 d0       	rcall	.+100    	; 0x46e2 <ldexp>
    467e:	0f 90       	pop	r0
    4680:	07 fe       	sbrs	r0, 7
    4682:	26 c0       	rjmp	.+76     	; 0x46d0 <inverse>
    4684:	08 95       	ret

00004686 <__fp_powser>:
    4686:	df 93       	push	r29
    4688:	cf 93       	push	r28
    468a:	1f 93       	push	r17
    468c:	0f 93       	push	r16
    468e:	ff 92       	push	r15
    4690:	ef 92       	push	r14
    4692:	df 92       	push	r13
    4694:	7b 01       	movw	r14, r22
    4696:	8c 01       	movw	r16, r24
    4698:	68 94       	set
    469a:	05 c0       	rjmp	.+10     	; 0x46a6 <__fp_powser+0x20>
    469c:	da 2e       	mov	r13, r26
    469e:	ef 01       	movw	r28, r30
    46a0:	1e df       	rcall	.-452    	; 0x44de <__mulsf3x>
    46a2:	fe 01       	movw	r30, r28
    46a4:	e8 94       	clt
    46a6:	a5 91       	lpm	r26, Z+
    46a8:	25 91       	lpm	r18, Z+
    46aa:	35 91       	lpm	r19, Z+
    46ac:	45 91       	lpm	r20, Z+
    46ae:	55 91       	lpm	r21, Z+
    46b0:	ae f3       	brts	.-22     	; 0x469c <__fp_powser+0x16>
    46b2:	ef 01       	movw	r28, r30
    46b4:	28 dd       	rcall	.-1456   	; 0x4106 <__addsf3x>
    46b6:	fe 01       	movw	r30, r28
    46b8:	97 01       	movw	r18, r14
    46ba:	a8 01       	movw	r20, r16
    46bc:	da 94       	dec	r13
    46be:	79 f7       	brne	.-34     	; 0x469e <__fp_powser+0x18>
    46c0:	df 90       	pop	r13
    46c2:	ef 90       	pop	r14
    46c4:	ff 90       	pop	r15
    46c6:	0f 91       	pop	r16
    46c8:	1f 91       	pop	r17
    46ca:	cf 91       	pop	r28
    46cc:	df 91       	pop	r29
    46ce:	08 95       	ret

000046d0 <inverse>:
    46d0:	9b 01       	movw	r18, r22
    46d2:	ac 01       	movw	r20, r24
    46d4:	60 e0       	ldi	r22, 0x00	; 0
    46d6:	70 e0       	ldi	r23, 0x00	; 0
    46d8:	80 e8       	ldi	r24, 0x80	; 128
    46da:	9f e3       	ldi	r25, 0x3F	; 63
    46dc:	6b cd       	rjmp	.-1322   	; 0x41b4 <__divsf3>
    46de:	64 ce       	rjmp	.-824    	; 0x43a8 <__fp_inf>
    46e0:	ac c0       	rjmp	.+344    	; 0x483a <__fp_mpack>

000046e2 <ldexp>:
    46e2:	92 de       	rcall	.-732    	; 0x4408 <__fp_splitA>
    46e4:	e8 f3       	brcs	.-6      	; 0x46e0 <inverse+0x10>
    46e6:	99 23       	and	r25, r25
    46e8:	d9 f3       	breq	.-10     	; 0x46e0 <inverse+0x10>
    46ea:	94 0f       	add	r25, r20
    46ec:	51 1d       	adc	r21, r1
    46ee:	bb f3       	brvs	.-18     	; 0x46de <inverse+0xe>
    46f0:	91 50       	subi	r25, 0x01	; 1
    46f2:	50 40       	sbci	r21, 0x00	; 0
    46f4:	94 f0       	brlt	.+36     	; 0x471a <ldexp+0x38>
    46f6:	59 f0       	breq	.+22     	; 0x470e <ldexp+0x2c>
    46f8:	88 23       	and	r24, r24
    46fa:	32 f0       	brmi	.+12     	; 0x4708 <ldexp+0x26>
    46fc:	66 0f       	add	r22, r22
    46fe:	77 1f       	adc	r23, r23
    4700:	88 1f       	adc	r24, r24
    4702:	91 50       	subi	r25, 0x01	; 1
    4704:	50 40       	sbci	r21, 0x00	; 0
    4706:	c1 f7       	brne	.-16     	; 0x46f8 <ldexp+0x16>
    4708:	9e 3f       	cpi	r25, 0xFE	; 254
    470a:	51 05       	cpc	r21, r1
    470c:	44 f7       	brge	.-48     	; 0x46de <inverse+0xe>
    470e:	88 0f       	add	r24, r24
    4710:	91 1d       	adc	r25, r1
    4712:	96 95       	lsr	r25
    4714:	87 95       	ror	r24
    4716:	97 f9       	bld	r25, 7
    4718:	08 95       	ret
    471a:	5f 3f       	cpi	r21, 0xFF	; 255
    471c:	ac f0       	brlt	.+42     	; 0x4748 <ldexp+0x66>
    471e:	98 3e       	cpi	r25, 0xE8	; 232
    4720:	9c f0       	brlt	.+38     	; 0x4748 <ldexp+0x66>
    4722:	bb 27       	eor	r27, r27
    4724:	86 95       	lsr	r24
    4726:	77 95       	ror	r23
    4728:	67 95       	ror	r22
    472a:	b7 95       	ror	r27
    472c:	08 f4       	brcc	.+2      	; 0x4730 <ldexp+0x4e>
    472e:	b1 60       	ori	r27, 0x01	; 1
    4730:	93 95       	inc	r25
    4732:	c1 f7       	brne	.-16     	; 0x4724 <ldexp+0x42>
    4734:	bb 0f       	add	r27, r27
    4736:	58 f7       	brcc	.-42     	; 0x470e <ldexp+0x2c>
    4738:	11 f4       	brne	.+4      	; 0x473e <ldexp+0x5c>
    473a:	60 ff       	sbrs	r22, 0
    473c:	e8 cf       	rjmp	.-48     	; 0x470e <ldexp+0x2c>
    473e:	6f 5f       	subi	r22, 0xFF	; 255
    4740:	7f 4f       	sbci	r23, 0xFF	; 255
    4742:	8f 4f       	sbci	r24, 0xFF	; 255
    4744:	9f 4f       	sbci	r25, 0xFF	; 255
    4746:	e3 cf       	rjmp	.-58     	; 0x470e <ldexp+0x2c>
    4748:	7a ce       	rjmp	.-780    	; 0x443e <__fp_szero>
    474a:	0e f0       	brts	.+2      	; 0x474e <ldexp+0x6c>
    474c:	76 c0       	rjmp	.+236    	; 0x483a <__fp_mpack>
    474e:	32 ce       	rjmp	.-924    	; 0x43b4 <__fp_nan>
    4750:	68 94       	set
    4752:	2a ce       	rjmp	.-940    	; 0x43a8 <__fp_inf>

00004754 <log>:
    4754:	59 de       	rcall	.-846    	; 0x4408 <__fp_splitA>
    4756:	c8 f3       	brcs	.-14     	; 0x474a <ldexp+0x68>
    4758:	99 23       	and	r25, r25
    475a:	d1 f3       	breq	.-12     	; 0x4750 <ldexp+0x6e>
    475c:	c6 f3       	brts	.-16     	; 0x474e <ldexp+0x6c>
    475e:	df 93       	push	r29
    4760:	cf 93       	push	r28
    4762:	1f 93       	push	r17
    4764:	0f 93       	push	r16
    4766:	ff 92       	push	r15
    4768:	c9 2f       	mov	r28, r25
    476a:	dd 27       	eor	r29, r29
    476c:	88 23       	and	r24, r24
    476e:	2a f0       	brmi	.+10     	; 0x477a <log+0x26>
    4770:	21 97       	sbiw	r28, 0x01	; 1
    4772:	66 0f       	add	r22, r22
    4774:	77 1f       	adc	r23, r23
    4776:	88 1f       	adc	r24, r24
    4778:	da f7       	brpl	.-10     	; 0x4770 <log+0x1c>
    477a:	20 e0       	ldi	r18, 0x00	; 0
    477c:	30 e0       	ldi	r19, 0x00	; 0
    477e:	40 e8       	ldi	r20, 0x80	; 128
    4780:	5f eb       	ldi	r21, 0xBF	; 191
    4782:	9f e3       	ldi	r25, 0x3F	; 63
    4784:	88 39       	cpi	r24, 0x98	; 152
    4786:	20 f0       	brcs	.+8      	; 0x4790 <log+0x3c>
    4788:	80 3e       	cpi	r24, 0xE0	; 224
    478a:	30 f0       	brcs	.+12     	; 0x4798 <log+0x44>
    478c:	21 96       	adiw	r28, 0x01	; 1
    478e:	8f 77       	andi	r24, 0x7F	; 127
    4790:	a9 dc       	rcall	.-1710   	; 0x40e4 <__addsf3>
    4792:	e0 ef       	ldi	r30, 0xF0	; 240
    4794:	f0 e0       	ldi	r31, 0x00	; 0
    4796:	03 c0       	rjmp	.+6      	; 0x479e <log+0x4a>
    4798:	a5 dc       	rcall	.-1718   	; 0x40e4 <__addsf3>
    479a:	ed e1       	ldi	r30, 0x1D	; 29
    479c:	f1 e0       	ldi	r31, 0x01	; 1
    479e:	73 df       	rcall	.-282    	; 0x4686 <__fp_powser>
    47a0:	8b 01       	movw	r16, r22
    47a2:	be 01       	movw	r22, r28
    47a4:	ec 01       	movw	r28, r24
    47a6:	fb 2e       	mov	r15, r27
    47a8:	6f 57       	subi	r22, 0x7F	; 127
    47aa:	71 09       	sbc	r23, r1
    47ac:	75 95       	asr	r23
    47ae:	77 1f       	adc	r23, r23
    47b0:	88 0b       	sbc	r24, r24
    47b2:	99 0b       	sbc	r25, r25
    47b4:	9a dd       	rcall	.-1228   	; 0x42ea <__floatsisf>
    47b6:	28 e1       	ldi	r18, 0x18	; 24
    47b8:	32 e7       	ldi	r19, 0x72	; 114
    47ba:	41 e3       	ldi	r20, 0x31	; 49
    47bc:	5f e3       	ldi	r21, 0x3F	; 63
    47be:	8f de       	rcall	.-738    	; 0x44de <__mulsf3x>
    47c0:	af 2d       	mov	r26, r15
    47c2:	98 01       	movw	r18, r16
    47c4:	ae 01       	movw	r20, r28
    47c6:	ff 90       	pop	r15
    47c8:	0f 91       	pop	r16
    47ca:	1f 91       	pop	r17
    47cc:	cf 91       	pop	r28
    47ce:	df 91       	pop	r29
    47d0:	9a dc       	rcall	.-1740   	; 0x4106 <__addsf3x>
    47d2:	01 ce       	rjmp	.-1022   	; 0x43d6 <__fp_round>

000047d4 <modf>:
    47d4:	fa 01       	movw	r30, r20
    47d6:	dc 01       	movw	r26, r24
    47d8:	aa 0f       	add	r26, r26
    47da:	bb 1f       	adc	r27, r27
    47dc:	9b 01       	movw	r18, r22
    47de:	ac 01       	movw	r20, r24
    47e0:	bf 57       	subi	r27, 0x7F	; 127
    47e2:	28 f4       	brcc	.+10     	; 0x47ee <modf+0x1a>
    47e4:	22 27       	eor	r18, r18
    47e6:	33 27       	eor	r19, r19
    47e8:	44 27       	eor	r20, r20
    47ea:	50 78       	andi	r21, 0x80	; 128
    47ec:	1f c0       	rjmp	.+62     	; 0x482c <modf+0x58>
    47ee:	b7 51       	subi	r27, 0x17	; 23
    47f0:	88 f4       	brcc	.+34     	; 0x4814 <modf+0x40>
    47f2:	ab 2f       	mov	r26, r27
    47f4:	00 24       	eor	r0, r0
    47f6:	46 95       	lsr	r20
    47f8:	37 95       	ror	r19
    47fa:	27 95       	ror	r18
    47fc:	01 1c       	adc	r0, r1
    47fe:	a3 95       	inc	r26
    4800:	d2 f3       	brmi	.-12     	; 0x47f6 <modf+0x22>
    4802:	00 20       	and	r0, r0
    4804:	69 f0       	breq	.+26     	; 0x4820 <modf+0x4c>
    4806:	22 0f       	add	r18, r18
    4808:	33 1f       	adc	r19, r19
    480a:	44 1f       	adc	r20, r20
    480c:	b3 95       	inc	r27
    480e:	da f3       	brmi	.-10     	; 0x4806 <modf+0x32>
    4810:	0d d0       	rcall	.+26     	; 0x482c <modf+0x58>
    4812:	67 cc       	rjmp	.-1842   	; 0x40e2 <__subsf3>
    4814:	61 30       	cpi	r22, 0x01	; 1
    4816:	71 05       	cpc	r23, r1
    4818:	a0 e8       	ldi	r26, 0x80	; 128
    481a:	8a 07       	cpc	r24, r26
    481c:	b9 46       	sbci	r27, 0x69	; 105
    481e:	30 f4       	brcc	.+12     	; 0x482c <modf+0x58>
    4820:	9b 01       	movw	r18, r22
    4822:	ac 01       	movw	r20, r24
    4824:	66 27       	eor	r22, r22
    4826:	77 27       	eor	r23, r23
    4828:	88 27       	eor	r24, r24
    482a:	90 78       	andi	r25, 0x80	; 128
    482c:	30 96       	adiw	r30, 0x00	; 0
    482e:	21 f0       	breq	.+8      	; 0x4838 <modf+0x64>
    4830:	20 83       	st	Z, r18
    4832:	31 83       	std	Z+1, r19	; 0x01
    4834:	42 83       	std	Z+2, r20	; 0x02
    4836:	53 83       	std	Z+3, r21	; 0x03
    4838:	08 95       	ret

0000483a <__fp_mpack>:
    483a:	9f 3f       	cpi	r25, 0xFF	; 255
    483c:	31 f0       	breq	.+12     	; 0x484a <__fp_mpack_finite+0xc>

0000483e <__fp_mpack_finite>:
    483e:	91 50       	subi	r25, 0x01	; 1
    4840:	20 f4       	brcc	.+8      	; 0x484a <__fp_mpack_finite+0xc>
    4842:	87 95       	ror	r24
    4844:	77 95       	ror	r23
    4846:	67 95       	ror	r22
    4848:	b7 95       	ror	r27
    484a:	88 0f       	add	r24, r24
    484c:	91 1d       	adc	r25, r1
    484e:	96 95       	lsr	r25
    4850:	87 95       	ror	r24
    4852:	97 f9       	bld	r25, 7
    4854:	08 95       	ret

00004856 <vfprintf>:
    4856:	a1 e1       	ldi	r26, 0x11	; 17
    4858:	b0 e0       	ldi	r27, 0x00	; 0
    485a:	e0 e3       	ldi	r30, 0x30	; 48
    485c:	f4 e2       	ldi	r31, 0x24	; 36
    485e:	b7 c3       	rjmp	.+1902   	; 0x4fce <__prologue_saves__>
    4860:	3c 01       	movw	r6, r24
    4862:	7f 87       	std	Y+15, r23	; 0x0f
    4864:	6e 87       	std	Y+14, r22	; 0x0e
    4866:	6a 01       	movw	r12, r20
    4868:	fc 01       	movw	r30, r24
    486a:	17 82       	std	Z+7, r1	; 0x07
    486c:	16 82       	std	Z+6, r1	; 0x06
    486e:	83 81       	ldd	r24, Z+3	; 0x03
    4870:	81 fd       	sbrc	r24, 1
    4872:	03 c0       	rjmp	.+6      	; 0x487a <vfprintf+0x24>
    4874:	6f ef       	ldi	r22, 0xFF	; 255
    4876:	7f ef       	ldi	r23, 0xFF	; 255
    4878:	52 c3       	rjmp	.+1700   	; 0x4f1e <vfprintf+0x6c8>
    487a:	9e 01       	movw	r18, r28
    487c:	2f 5f       	subi	r18, 0xFF	; 255
    487e:	3f 4f       	sbci	r19, 0xFF	; 255
    4880:	39 8b       	std	Y+17, r19	; 0x11
    4882:	28 8b       	std	Y+16, r18	; 0x10
    4884:	f3 01       	movw	r30, r6
    4886:	23 81       	ldd	r18, Z+3	; 0x03
    4888:	ee 85       	ldd	r30, Y+14	; 0x0e
    488a:	ff 85       	ldd	r31, Y+15	; 0x0f
    488c:	23 fd       	sbrc	r18, 3
    488e:	85 91       	lpm	r24, Z+
    4890:	23 ff       	sbrs	r18, 3
    4892:	81 91       	ld	r24, Z+
    4894:	ff 87       	std	Y+15, r31	; 0x0f
    4896:	ee 87       	std	Y+14, r30	; 0x0e
    4898:	88 23       	and	r24, r24
    489a:	09 f4       	brne	.+2      	; 0x489e <vfprintf+0x48>
    489c:	3d c3       	rjmp	.+1658   	; 0x4f18 <vfprintf+0x6c2>
    489e:	85 32       	cpi	r24, 0x25	; 37
    48a0:	51 f4       	brne	.+20     	; 0x48b6 <vfprintf+0x60>
    48a2:	ee 85       	ldd	r30, Y+14	; 0x0e
    48a4:	ff 85       	ldd	r31, Y+15	; 0x0f
    48a6:	23 fd       	sbrc	r18, 3
    48a8:	85 91       	lpm	r24, Z+
    48aa:	23 ff       	sbrs	r18, 3
    48ac:	81 91       	ld	r24, Z+
    48ae:	ff 87       	std	Y+15, r31	; 0x0f
    48b0:	ee 87       	std	Y+14, r30	; 0x0e
    48b2:	85 32       	cpi	r24, 0x25	; 37
    48b4:	21 f4       	brne	.+8      	; 0x48be <vfprintf+0x68>
    48b6:	90 e0       	ldi	r25, 0x00	; 0
    48b8:	b3 01       	movw	r22, r6
    48ba:	20 d6       	rcall	.+3136   	; 0x54fc <fputc>
    48bc:	e3 cf       	rjmp	.-58     	; 0x4884 <vfprintf+0x2e>
    48be:	98 2f       	mov	r25, r24
    48c0:	10 e0       	ldi	r17, 0x00	; 0
    48c2:	88 24       	eor	r8, r8
    48c4:	99 24       	eor	r9, r9
    48c6:	10 32       	cpi	r17, 0x20	; 32
    48c8:	b0 f4       	brcc	.+44     	; 0x48f6 <vfprintf+0xa0>
    48ca:	9b 32       	cpi	r25, 0x2B	; 43
    48cc:	69 f0       	breq	.+26     	; 0x48e8 <vfprintf+0x92>
    48ce:	9c 32       	cpi	r25, 0x2C	; 44
    48d0:	28 f4       	brcc	.+10     	; 0x48dc <vfprintf+0x86>
    48d2:	90 32       	cpi	r25, 0x20	; 32
    48d4:	51 f0       	breq	.+20     	; 0x48ea <vfprintf+0x94>
    48d6:	93 32       	cpi	r25, 0x23	; 35
    48d8:	71 f4       	brne	.+28     	; 0x48f6 <vfprintf+0xa0>
    48da:	0b c0       	rjmp	.+22     	; 0x48f2 <vfprintf+0x9c>
    48dc:	9d 32       	cpi	r25, 0x2D	; 45
    48de:	39 f0       	breq	.+14     	; 0x48ee <vfprintf+0x98>
    48e0:	90 33       	cpi	r25, 0x30	; 48
    48e2:	49 f4       	brne	.+18     	; 0x48f6 <vfprintf+0xa0>
    48e4:	11 60       	ori	r17, 0x01	; 1
    48e6:	28 c0       	rjmp	.+80     	; 0x4938 <vfprintf+0xe2>
    48e8:	12 60       	ori	r17, 0x02	; 2
    48ea:	14 60       	ori	r17, 0x04	; 4
    48ec:	25 c0       	rjmp	.+74     	; 0x4938 <vfprintf+0xe2>
    48ee:	18 60       	ori	r17, 0x08	; 8
    48f0:	23 c0       	rjmp	.+70     	; 0x4938 <vfprintf+0xe2>
    48f2:	10 61       	ori	r17, 0x10	; 16
    48f4:	21 c0       	rjmp	.+66     	; 0x4938 <vfprintf+0xe2>
    48f6:	17 fd       	sbrc	r17, 7
    48f8:	2a c0       	rjmp	.+84     	; 0x494e <vfprintf+0xf8>
    48fa:	89 2f       	mov	r24, r25
    48fc:	80 53       	subi	r24, 0x30	; 48
    48fe:	8a 30       	cpi	r24, 0x0A	; 10
    4900:	78 f4       	brcc	.+30     	; 0x4920 <vfprintf+0xca>
    4902:	16 ff       	sbrs	r17, 6
    4904:	06 c0       	rjmp	.+12     	; 0x4912 <vfprintf+0xbc>
    4906:	fa e0       	ldi	r31, 0x0A	; 10
    4908:	9f 9e       	mul	r9, r31
    490a:	90 2c       	mov	r9, r0
    490c:	11 24       	eor	r1, r1
    490e:	98 0e       	add	r9, r24
    4910:	13 c0       	rjmp	.+38     	; 0x4938 <vfprintf+0xe2>
    4912:	3a e0       	ldi	r19, 0x0A	; 10
    4914:	83 9e       	mul	r8, r19
    4916:	80 2c       	mov	r8, r0
    4918:	11 24       	eor	r1, r1
    491a:	88 0e       	add	r8, r24
    491c:	10 62       	ori	r17, 0x20	; 32
    491e:	0c c0       	rjmp	.+24     	; 0x4938 <vfprintf+0xe2>
    4920:	9e 32       	cpi	r25, 0x2E	; 46
    4922:	21 f4       	brne	.+8      	; 0x492c <vfprintf+0xd6>
    4924:	16 fd       	sbrc	r17, 6
    4926:	f8 c2       	rjmp	.+1520   	; 0x4f18 <vfprintf+0x6c2>
    4928:	10 64       	ori	r17, 0x40	; 64
    492a:	06 c0       	rjmp	.+12     	; 0x4938 <vfprintf+0xe2>
    492c:	9c 36       	cpi	r25, 0x6C	; 108
    492e:	11 f4       	brne	.+4      	; 0x4934 <vfprintf+0xde>
    4930:	10 68       	ori	r17, 0x80	; 128
    4932:	02 c0       	rjmp	.+4      	; 0x4938 <vfprintf+0xe2>
    4934:	98 36       	cpi	r25, 0x68	; 104
    4936:	59 f4       	brne	.+22     	; 0x494e <vfprintf+0xf8>
    4938:	ee 85       	ldd	r30, Y+14	; 0x0e
    493a:	ff 85       	ldd	r31, Y+15	; 0x0f
    493c:	23 fd       	sbrc	r18, 3
    493e:	95 91       	lpm	r25, Z+
    4940:	23 ff       	sbrs	r18, 3
    4942:	91 91       	ld	r25, Z+
    4944:	ff 87       	std	Y+15, r31	; 0x0f
    4946:	ee 87       	std	Y+14, r30	; 0x0e
    4948:	99 23       	and	r25, r25
    494a:	09 f0       	breq	.+2      	; 0x494e <vfprintf+0xf8>
    494c:	bc cf       	rjmp	.-136    	; 0x48c6 <vfprintf+0x70>
    494e:	89 2f       	mov	r24, r25
    4950:	85 54       	subi	r24, 0x45	; 69
    4952:	83 30       	cpi	r24, 0x03	; 3
    4954:	20 f4       	brcc	.+8      	; 0x495e <vfprintf+0x108>
    4956:	81 2f       	mov	r24, r17
    4958:	80 61       	ori	r24, 0x10	; 16
    495a:	90 5e       	subi	r25, 0xE0	; 224
    495c:	07 c0       	rjmp	.+14     	; 0x496c <vfprintf+0x116>
    495e:	89 2f       	mov	r24, r25
    4960:	85 56       	subi	r24, 0x65	; 101
    4962:	83 30       	cpi	r24, 0x03	; 3
    4964:	08 f0       	brcs	.+2      	; 0x4968 <vfprintf+0x112>
    4966:	8f c1       	rjmp	.+798    	; 0x4c86 <vfprintf+0x430>
    4968:	81 2f       	mov	r24, r17
    496a:	8f 7e       	andi	r24, 0xEF	; 239
    496c:	86 fd       	sbrc	r24, 6
    496e:	02 c0       	rjmp	.+4      	; 0x4974 <vfprintf+0x11e>
    4970:	76 e0       	ldi	r23, 0x06	; 6
    4972:	97 2e       	mov	r9, r23
    4974:	6f e3       	ldi	r22, 0x3F	; 63
    4976:	f6 2e       	mov	r15, r22
    4978:	f8 22       	and	r15, r24
    497a:	95 36       	cpi	r25, 0x65	; 101
    497c:	19 f4       	brne	.+6      	; 0x4984 <vfprintf+0x12e>
    497e:	f0 e4       	ldi	r31, 0x40	; 64
    4980:	ff 2a       	or	r15, r31
    4982:	07 c0       	rjmp	.+14     	; 0x4992 <vfprintf+0x13c>
    4984:	96 36       	cpi	r25, 0x66	; 102
    4986:	19 f4       	brne	.+6      	; 0x498e <vfprintf+0x138>
    4988:	20 e8       	ldi	r18, 0x80	; 128
    498a:	f2 2a       	or	r15, r18
    498c:	02 c0       	rjmp	.+4      	; 0x4992 <vfprintf+0x13c>
    498e:	91 10       	cpse	r9, r1
    4990:	9a 94       	dec	r9
    4992:	f7 fe       	sbrs	r15, 7
    4994:	0a c0       	rjmp	.+20     	; 0x49aa <vfprintf+0x154>
    4996:	3b e3       	ldi	r19, 0x3B	; 59
    4998:	39 15       	cp	r19, r9
    499a:	18 f4       	brcc	.+6      	; 0x49a2 <vfprintf+0x14c>
    499c:	5c e3       	ldi	r21, 0x3C	; 60
    499e:	b5 2e       	mov	r11, r21
    49a0:	02 c0       	rjmp	.+4      	; 0x49a6 <vfprintf+0x150>
    49a2:	b9 2c       	mov	r11, r9
    49a4:	b3 94       	inc	r11
    49a6:	27 e0       	ldi	r18, 0x07	; 7
    49a8:	09 c0       	rjmp	.+18     	; 0x49bc <vfprintf+0x166>
    49aa:	47 e0       	ldi	r20, 0x07	; 7
    49ac:	49 15       	cp	r20, r9
    49ae:	20 f4       	brcc	.+8      	; 0x49b8 <vfprintf+0x162>
    49b0:	bb 24       	eor	r11, r11
    49b2:	47 e0       	ldi	r20, 0x07	; 7
    49b4:	94 2e       	mov	r9, r20
    49b6:	f7 cf       	rjmp	.-18     	; 0x49a6 <vfprintf+0x150>
    49b8:	29 2d       	mov	r18, r9
    49ba:	bb 24       	eor	r11, r11
    49bc:	c6 01       	movw	r24, r12
    49be:	04 96       	adiw	r24, 0x04	; 4
    49c0:	9d 87       	std	Y+13, r25	; 0x0d
    49c2:	8c 87       	std	Y+12, r24	; 0x0c
    49c4:	f6 01       	movw	r30, r12
    49c6:	60 81       	ld	r22, Z
    49c8:	71 81       	ldd	r23, Z+1	; 0x01
    49ca:	82 81       	ldd	r24, Z+2	; 0x02
    49cc:	93 81       	ldd	r25, Z+3	; 0x03
    49ce:	ae 01       	movw	r20, r28
    49d0:	4f 5f       	subi	r20, 0xFF	; 255
    49d2:	5f 4f       	sbci	r21, 0xFF	; 255
    49d4:	0b 2d       	mov	r16, r11
    49d6:	a4 d4       	rcall	.+2376   	; 0x5320 <__ftoa_engine>
    49d8:	6c 01       	movw	r12, r24
    49da:	09 81       	ldd	r16, Y+1	; 0x01
    49dc:	20 2e       	mov	r2, r16
    49de:	33 24       	eor	r3, r3
    49e0:	00 ff       	sbrs	r16, 0
    49e2:	04 c0       	rjmp	.+8      	; 0x49ec <vfprintf+0x196>
    49e4:	03 fd       	sbrc	r16, 3
    49e6:	02 c0       	rjmp	.+4      	; 0x49ec <vfprintf+0x196>
    49e8:	1d e2       	ldi	r17, 0x2D	; 45
    49ea:	09 c0       	rjmp	.+18     	; 0x49fe <vfprintf+0x1a8>
    49ec:	f1 fe       	sbrs	r15, 1
    49ee:	02 c0       	rjmp	.+4      	; 0x49f4 <vfprintf+0x19e>
    49f0:	1b e2       	ldi	r17, 0x2B	; 43
    49f2:	05 c0       	rjmp	.+10     	; 0x49fe <vfprintf+0x1a8>
    49f4:	f2 fc       	sbrc	r15, 2
    49f6:	02 c0       	rjmp	.+4      	; 0x49fc <vfprintf+0x1a6>
    49f8:	10 e0       	ldi	r17, 0x00	; 0
    49fa:	01 c0       	rjmp	.+2      	; 0x49fe <vfprintf+0x1a8>
    49fc:	10 e2       	ldi	r17, 0x20	; 32
    49fe:	c1 01       	movw	r24, r2
    4a00:	8c 70       	andi	r24, 0x0C	; 12
    4a02:	90 70       	andi	r25, 0x00	; 0
    4a04:	89 2b       	or	r24, r25
    4a06:	a1 f1       	breq	.+104    	; 0x4a70 <vfprintf+0x21a>
    4a08:	11 23       	and	r17, r17
    4a0a:	11 f4       	brne	.+4      	; 0x4a10 <vfprintf+0x1ba>
    4a0c:	83 e0       	ldi	r24, 0x03	; 3
    4a0e:	01 c0       	rjmp	.+2      	; 0x4a12 <vfprintf+0x1bc>
    4a10:	84 e0       	ldi	r24, 0x04	; 4
    4a12:	88 15       	cp	r24, r8
    4a14:	10 f0       	brcs	.+4      	; 0x4a1a <vfprintf+0x1c4>
    4a16:	88 24       	eor	r8, r8
    4a18:	09 c0       	rjmp	.+18     	; 0x4a2c <vfprintf+0x1d6>
    4a1a:	88 1a       	sub	r8, r24
    4a1c:	f3 fc       	sbrc	r15, 3
    4a1e:	06 c0       	rjmp	.+12     	; 0x4a2c <vfprintf+0x1d6>
    4a20:	80 e2       	ldi	r24, 0x20	; 32
    4a22:	90 e0       	ldi	r25, 0x00	; 0
    4a24:	b3 01       	movw	r22, r6
    4a26:	6a d5       	rcall	.+2772   	; 0x54fc <fputc>
    4a28:	8a 94       	dec	r8
    4a2a:	d1 f7       	brne	.-12     	; 0x4a20 <vfprintf+0x1ca>
    4a2c:	11 23       	and	r17, r17
    4a2e:	21 f0       	breq	.+8      	; 0x4a38 <vfprintf+0x1e2>
    4a30:	81 2f       	mov	r24, r17
    4a32:	90 e0       	ldi	r25, 0x00	; 0
    4a34:	b3 01       	movw	r22, r6
    4a36:	62 d5       	rcall	.+2756   	; 0x54fc <fputc>
    4a38:	23 fe       	sbrs	r2, 3
    4a3a:	03 c0       	rjmp	.+6      	; 0x4a42 <vfprintf+0x1ec>
    4a3c:	0f e5       	ldi	r16, 0x5F	; 95
    4a3e:	15 e0       	ldi	r17, 0x05	; 5
    4a40:	0d c0       	rjmp	.+26     	; 0x4a5c <vfprintf+0x206>
    4a42:	03 e6       	ldi	r16, 0x63	; 99
    4a44:	15 e0       	ldi	r17, 0x05	; 5
    4a46:	0a c0       	rjmp	.+20     	; 0x4a5c <vfprintf+0x206>
    4a48:	e1 14       	cp	r14, r1
    4a4a:	f1 04       	cpc	r15, r1
    4a4c:	09 f0       	breq	.+2      	; 0x4a50 <vfprintf+0x1fa>
    4a4e:	80 52       	subi	r24, 0x20	; 32
    4a50:	90 e0       	ldi	r25, 0x00	; 0
    4a52:	b3 01       	movw	r22, r6
    4a54:	53 d5       	rcall	.+2726   	; 0x54fc <fputc>
    4a56:	0f 5f       	subi	r16, 0xFF	; 255
    4a58:	1f 4f       	sbci	r17, 0xFF	; 255
    4a5a:	05 c0       	rjmp	.+10     	; 0x4a66 <vfprintf+0x210>
    4a5c:	ef 2c       	mov	r14, r15
    4a5e:	ff 24       	eor	r15, r15
    4a60:	f0 e1       	ldi	r31, 0x10	; 16
    4a62:	ef 22       	and	r14, r31
    4a64:	ff 24       	eor	r15, r15
    4a66:	f8 01       	movw	r30, r16
    4a68:	84 91       	lpm	r24, Z+
    4a6a:	88 23       	and	r24, r24
    4a6c:	69 f7       	brne	.-38     	; 0x4a48 <vfprintf+0x1f2>
    4a6e:	08 c1       	rjmp	.+528    	; 0x4c80 <vfprintf+0x42a>
    4a70:	f7 fe       	sbrs	r15, 7
    4a72:	12 c0       	rjmp	.+36     	; 0x4a98 <vfprintf+0x242>
    4a74:	bc 0c       	add	r11, r12
    4a76:	24 fe       	sbrs	r2, 4
    4a78:	04 c0       	rjmp	.+8      	; 0x4a82 <vfprintf+0x22c>
    4a7a:	8a 81       	ldd	r24, Y+2	; 0x02
    4a7c:	81 33       	cpi	r24, 0x31	; 49
    4a7e:	09 f4       	brne	.+2      	; 0x4a82 <vfprintf+0x22c>
    4a80:	ba 94       	dec	r11
    4a82:	1b 14       	cp	r1, r11
    4a84:	1c f0       	brlt	.+6      	; 0x4a8c <vfprintf+0x236>
    4a86:	bb 24       	eor	r11, r11
    4a88:	b3 94       	inc	r11
    4a8a:	2d c0       	rjmp	.+90     	; 0x4ae6 <vfprintf+0x290>
    4a8c:	f8 e0       	ldi	r31, 0x08	; 8
    4a8e:	fb 15       	cp	r31, r11
    4a90:	50 f5       	brcc	.+84     	; 0x4ae6 <vfprintf+0x290>
    4a92:	38 e0       	ldi	r19, 0x08	; 8
    4a94:	b3 2e       	mov	r11, r19
    4a96:	27 c0       	rjmp	.+78     	; 0x4ae6 <vfprintf+0x290>
    4a98:	f6 fc       	sbrc	r15, 6
    4a9a:	25 c0       	rjmp	.+74     	; 0x4ae6 <vfprintf+0x290>
    4a9c:	89 2d       	mov	r24, r9
    4a9e:	90 e0       	ldi	r25, 0x00	; 0
    4aa0:	8c 15       	cp	r24, r12
    4aa2:	9d 05       	cpc	r25, r13
    4aa4:	4c f0       	brlt	.+18     	; 0x4ab8 <vfprintf+0x262>
    4aa6:	2c ef       	ldi	r18, 0xFC	; 252
    4aa8:	c2 16       	cp	r12, r18
    4aaa:	2f ef       	ldi	r18, 0xFF	; 255
    4aac:	d2 06       	cpc	r13, r18
    4aae:	24 f0       	brlt	.+8      	; 0x4ab8 <vfprintf+0x262>
    4ab0:	30 e8       	ldi	r19, 0x80	; 128
    4ab2:	f3 2a       	or	r15, r19
    4ab4:	01 c0       	rjmp	.+2      	; 0x4ab8 <vfprintf+0x262>
    4ab6:	9a 94       	dec	r9
    4ab8:	99 20       	and	r9, r9
    4aba:	49 f0       	breq	.+18     	; 0x4ace <vfprintf+0x278>
    4abc:	e2 e0       	ldi	r30, 0x02	; 2
    4abe:	f0 e0       	ldi	r31, 0x00	; 0
    4ac0:	ec 0f       	add	r30, r28
    4ac2:	fd 1f       	adc	r31, r29
    4ac4:	e9 0d       	add	r30, r9
    4ac6:	f1 1d       	adc	r31, r1
    4ac8:	80 81       	ld	r24, Z
    4aca:	80 33       	cpi	r24, 0x30	; 48
    4acc:	a1 f3       	breq	.-24     	; 0x4ab6 <vfprintf+0x260>
    4ace:	f7 fe       	sbrs	r15, 7
    4ad0:	0a c0       	rjmp	.+20     	; 0x4ae6 <vfprintf+0x290>
    4ad2:	b9 2c       	mov	r11, r9
    4ad4:	b3 94       	inc	r11
    4ad6:	89 2d       	mov	r24, r9
    4ad8:	90 e0       	ldi	r25, 0x00	; 0
    4ada:	c8 16       	cp	r12, r24
    4adc:	d9 06       	cpc	r13, r25
    4ade:	14 f0       	brlt	.+4      	; 0x4ae4 <vfprintf+0x28e>
    4ae0:	99 24       	eor	r9, r9
    4ae2:	01 c0       	rjmp	.+2      	; 0x4ae6 <vfprintf+0x290>
    4ae4:	9c 18       	sub	r9, r12
    4ae6:	f7 fc       	sbrc	r15, 7
    4ae8:	03 c0       	rjmp	.+6      	; 0x4af0 <vfprintf+0x29a>
    4aea:	25 e0       	ldi	r18, 0x05	; 5
    4aec:	30 e0       	ldi	r19, 0x00	; 0
    4aee:	09 c0       	rjmp	.+18     	; 0x4b02 <vfprintf+0x2ac>
    4af0:	1c 14       	cp	r1, r12
    4af2:	1d 04       	cpc	r1, r13
    4af4:	1c f0       	brlt	.+6      	; 0x4afc <vfprintf+0x2a6>
    4af6:	21 e0       	ldi	r18, 0x01	; 1
    4af8:	30 e0       	ldi	r19, 0x00	; 0
    4afa:	03 c0       	rjmp	.+6      	; 0x4b02 <vfprintf+0x2ac>
    4afc:	96 01       	movw	r18, r12
    4afe:	2f 5f       	subi	r18, 0xFF	; 255
    4b00:	3f 4f       	sbci	r19, 0xFF	; 255
    4b02:	11 23       	and	r17, r17
    4b04:	11 f0       	breq	.+4      	; 0x4b0a <vfprintf+0x2b4>
    4b06:	2f 5f       	subi	r18, 0xFF	; 255
    4b08:	3f 4f       	sbci	r19, 0xFF	; 255
    4b0a:	99 20       	and	r9, r9
    4b0c:	29 f0       	breq	.+10     	; 0x4b18 <vfprintf+0x2c2>
    4b0e:	89 2d       	mov	r24, r9
    4b10:	90 e0       	ldi	r25, 0x00	; 0
    4b12:	01 96       	adiw	r24, 0x01	; 1
    4b14:	28 0f       	add	r18, r24
    4b16:	39 1f       	adc	r19, r25
    4b18:	88 2d       	mov	r24, r8
    4b1a:	90 e0       	ldi	r25, 0x00	; 0
    4b1c:	28 17       	cp	r18, r24
    4b1e:	39 07       	cpc	r19, r25
    4b20:	14 f0       	brlt	.+4      	; 0x4b26 <vfprintf+0x2d0>
    4b22:	88 24       	eor	r8, r8
    4b24:	01 c0       	rjmp	.+2      	; 0x4b28 <vfprintf+0x2d2>
    4b26:	82 1a       	sub	r8, r18
    4b28:	4f 2c       	mov	r4, r15
    4b2a:	55 24       	eor	r5, r5
    4b2c:	c2 01       	movw	r24, r4
    4b2e:	89 70       	andi	r24, 0x09	; 9
    4b30:	90 70       	andi	r25, 0x00	; 0
    4b32:	89 2b       	or	r24, r25
    4b34:	31 f0       	breq	.+12     	; 0x4b42 <vfprintf+0x2ec>
    4b36:	07 c0       	rjmp	.+14     	; 0x4b46 <vfprintf+0x2f0>
    4b38:	80 e2       	ldi	r24, 0x20	; 32
    4b3a:	90 e0       	ldi	r25, 0x00	; 0
    4b3c:	b3 01       	movw	r22, r6
    4b3e:	de d4       	rcall	.+2492   	; 0x54fc <fputc>
    4b40:	8a 94       	dec	r8
    4b42:	88 20       	and	r8, r8
    4b44:	c9 f7       	brne	.-14     	; 0x4b38 <vfprintf+0x2e2>
    4b46:	11 23       	and	r17, r17
    4b48:	21 f0       	breq	.+8      	; 0x4b52 <vfprintf+0x2fc>
    4b4a:	81 2f       	mov	r24, r17
    4b4c:	90 e0       	ldi	r25, 0x00	; 0
    4b4e:	b3 01       	movw	r22, r6
    4b50:	d5 d4       	rcall	.+2474   	; 0x54fc <fputc>
    4b52:	43 fe       	sbrs	r4, 3
    4b54:	06 c0       	rjmp	.+12     	; 0x4b62 <vfprintf+0x30c>
    4b56:	07 c0       	rjmp	.+14     	; 0x4b66 <vfprintf+0x310>
    4b58:	80 e3       	ldi	r24, 0x30	; 48
    4b5a:	90 e0       	ldi	r25, 0x00	; 0
    4b5c:	b3 01       	movw	r22, r6
    4b5e:	ce d4       	rcall	.+2460   	; 0x54fc <fputc>
    4b60:	8a 94       	dec	r8
    4b62:	88 20       	and	r8, r8
    4b64:	c9 f7       	brne	.-14     	; 0x4b58 <vfprintf+0x302>
    4b66:	f7 fe       	sbrs	r15, 7
    4b68:	44 c0       	rjmp	.+136    	; 0x4bf2 <vfprintf+0x39c>
    4b6a:	86 01       	movw	r16, r12
    4b6c:	d7 fe       	sbrs	r13, 7
    4b6e:	02 c0       	rjmp	.+4      	; 0x4b74 <vfprintf+0x31e>
    4b70:	00 e0       	ldi	r16, 0x00	; 0
    4b72:	10 e0       	ldi	r17, 0x00	; 0
    4b74:	76 01       	movw	r14, r12
    4b76:	08 94       	sec
    4b78:	e1 1c       	adc	r14, r1
    4b7a:	f1 1c       	adc	r15, r1
    4b7c:	e0 1a       	sub	r14, r16
    4b7e:	f1 0a       	sbc	r15, r17
    4b80:	41 e0       	ldi	r20, 0x01	; 1
    4b82:	50 e0       	ldi	r21, 0x00	; 0
    4b84:	4c 0f       	add	r20, r28
    4b86:	5d 1f       	adc	r21, r29
    4b88:	e4 0e       	add	r14, r20
    4b8a:	f5 1e       	adc	r15, r21
    4b8c:	26 01       	movw	r4, r12
    4b8e:	4b 18       	sub	r4, r11
    4b90:	51 08       	sbc	r5, r1
    4b92:	89 2d       	mov	r24, r9
    4b94:	90 e0       	ldi	r25, 0x00	; 0
    4b96:	aa 24       	eor	r10, r10
    4b98:	bb 24       	eor	r11, r11
    4b9a:	a8 1a       	sub	r10, r24
    4b9c:	b9 0a       	sbc	r11, r25
    4b9e:	5f ef       	ldi	r21, 0xFF	; 255
    4ba0:	0f 3f       	cpi	r16, 0xFF	; 255
    4ba2:	15 07       	cpc	r17, r21
    4ba4:	21 f4       	brne	.+8      	; 0x4bae <vfprintf+0x358>
    4ba6:	8e e2       	ldi	r24, 0x2E	; 46
    4ba8:	90 e0       	ldi	r25, 0x00	; 0
    4baa:	b3 01       	movw	r22, r6
    4bac:	a7 d4       	rcall	.+2382   	; 0x54fc <fputc>
    4bae:	c0 16       	cp	r12, r16
    4bb0:	d1 06       	cpc	r13, r17
    4bb2:	34 f0       	brlt	.+12     	; 0x4bc0 <vfprintf+0x36a>
    4bb4:	40 16       	cp	r4, r16
    4bb6:	51 06       	cpc	r5, r17
    4bb8:	1c f4       	brge	.+6      	; 0x4bc0 <vfprintf+0x36a>
    4bba:	f7 01       	movw	r30, r14
    4bbc:	80 81       	ld	r24, Z
    4bbe:	01 c0       	rjmp	.+2      	; 0x4bc2 <vfprintf+0x36c>
    4bc0:	80 e3       	ldi	r24, 0x30	; 48
    4bc2:	01 50       	subi	r16, 0x01	; 1
    4bc4:	10 40       	sbci	r17, 0x00	; 0
    4bc6:	08 94       	sec
    4bc8:	e1 1c       	adc	r14, r1
    4bca:	f1 1c       	adc	r15, r1
    4bcc:	0a 15       	cp	r16, r10
    4bce:	1b 05       	cpc	r17, r11
    4bd0:	24 f0       	brlt	.+8      	; 0x4bda <vfprintf+0x384>
    4bd2:	90 e0       	ldi	r25, 0x00	; 0
    4bd4:	b3 01       	movw	r22, r6
    4bd6:	92 d4       	rcall	.+2340   	; 0x54fc <fputc>
    4bd8:	e2 cf       	rjmp	.-60     	; 0x4b9e <vfprintf+0x348>
    4bda:	0c 15       	cp	r16, r12
    4bdc:	1d 05       	cpc	r17, r13
    4bde:	39 f4       	brne	.+14     	; 0x4bee <vfprintf+0x398>
    4be0:	9a 81       	ldd	r25, Y+2	; 0x02
    4be2:	96 33       	cpi	r25, 0x36	; 54
    4be4:	18 f4       	brcc	.+6      	; 0x4bec <vfprintf+0x396>
    4be6:	95 33       	cpi	r25, 0x35	; 53
    4be8:	11 f4       	brne	.+4      	; 0x4bee <vfprintf+0x398>
    4bea:	24 fe       	sbrs	r2, 4
    4bec:	81 e3       	ldi	r24, 0x31	; 49
    4bee:	90 e0       	ldi	r25, 0x00	; 0
    4bf0:	45 c0       	rjmp	.+138    	; 0x4c7c <vfprintf+0x426>
    4bf2:	8a 81       	ldd	r24, Y+2	; 0x02
    4bf4:	81 33       	cpi	r24, 0x31	; 49
    4bf6:	09 f0       	breq	.+2      	; 0x4bfa <vfprintf+0x3a4>
    4bf8:	0f 7e       	andi	r16, 0xEF	; 239
    4bfa:	90 e0       	ldi	r25, 0x00	; 0
    4bfc:	b3 01       	movw	r22, r6
    4bfe:	7e d4       	rcall	.+2300   	; 0x54fc <fputc>
    4c00:	99 20       	and	r9, r9
    4c02:	91 f0       	breq	.+36     	; 0x4c28 <vfprintf+0x3d2>
    4c04:	8e e2       	ldi	r24, 0x2E	; 46
    4c06:	90 e0       	ldi	r25, 0x00	; 0
    4c08:	b3 01       	movw	r22, r6
    4c0a:	78 d4       	rcall	.+2288   	; 0x54fc <fputc>
    4c0c:	12 e0       	ldi	r17, 0x02	; 2
    4c0e:	e1 e0       	ldi	r30, 0x01	; 1
    4c10:	f0 e0       	ldi	r31, 0x00	; 0
    4c12:	ec 0f       	add	r30, r28
    4c14:	fd 1f       	adc	r31, r29
    4c16:	e1 0f       	add	r30, r17
    4c18:	f1 1d       	adc	r31, r1
    4c1a:	1f 5f       	subi	r17, 0xFF	; 255
    4c1c:	80 81       	ld	r24, Z
    4c1e:	90 e0       	ldi	r25, 0x00	; 0
    4c20:	b3 01       	movw	r22, r6
    4c22:	6c d4       	rcall	.+2264   	; 0x54fc <fputc>
    4c24:	9a 94       	dec	r9
    4c26:	99 f7       	brne	.-26     	; 0x4c0e <vfprintf+0x3b8>
    4c28:	44 fc       	sbrc	r4, 4
    4c2a:	03 c0       	rjmp	.+6      	; 0x4c32 <vfprintf+0x3dc>
    4c2c:	85 e6       	ldi	r24, 0x65	; 101
    4c2e:	90 e0       	ldi	r25, 0x00	; 0
    4c30:	02 c0       	rjmp	.+4      	; 0x4c36 <vfprintf+0x3e0>
    4c32:	85 e4       	ldi	r24, 0x45	; 69
    4c34:	90 e0       	ldi	r25, 0x00	; 0
    4c36:	b3 01       	movw	r22, r6
    4c38:	61 d4       	rcall	.+2242   	; 0x54fc <fputc>
    4c3a:	d7 fc       	sbrc	r13, 7
    4c3c:	05 c0       	rjmp	.+10     	; 0x4c48 <vfprintf+0x3f2>
    4c3e:	c1 14       	cp	r12, r1
    4c40:	d1 04       	cpc	r13, r1
    4c42:	41 f4       	brne	.+16     	; 0x4c54 <vfprintf+0x3fe>
    4c44:	04 ff       	sbrs	r16, 4
    4c46:	06 c0       	rjmp	.+12     	; 0x4c54 <vfprintf+0x3fe>
    4c48:	d0 94       	com	r13
    4c4a:	c1 94       	neg	r12
    4c4c:	d1 08       	sbc	r13, r1
    4c4e:	d3 94       	inc	r13
    4c50:	8d e2       	ldi	r24, 0x2D	; 45
    4c52:	01 c0       	rjmp	.+2      	; 0x4c56 <vfprintf+0x400>
    4c54:	8b e2       	ldi	r24, 0x2B	; 43
    4c56:	90 e0       	ldi	r25, 0x00	; 0
    4c58:	b3 01       	movw	r22, r6
    4c5a:	50 d4       	rcall	.+2208   	; 0x54fc <fputc>
    4c5c:	80 e3       	ldi	r24, 0x30	; 48
    4c5e:	05 c0       	rjmp	.+10     	; 0x4c6a <vfprintf+0x414>
    4c60:	8f 5f       	subi	r24, 0xFF	; 255
    4c62:	26 ef       	ldi	r18, 0xF6	; 246
    4c64:	3f ef       	ldi	r19, 0xFF	; 255
    4c66:	c2 0e       	add	r12, r18
    4c68:	d3 1e       	adc	r13, r19
    4c6a:	3a e0       	ldi	r19, 0x0A	; 10
    4c6c:	c3 16       	cp	r12, r19
    4c6e:	d1 04       	cpc	r13, r1
    4c70:	bc f7       	brge	.-18     	; 0x4c60 <vfprintf+0x40a>
    4c72:	90 e0       	ldi	r25, 0x00	; 0
    4c74:	b3 01       	movw	r22, r6
    4c76:	42 d4       	rcall	.+2180   	; 0x54fc <fputc>
    4c78:	c6 01       	movw	r24, r12
    4c7a:	c0 96       	adiw	r24, 0x30	; 48
    4c7c:	b3 01       	movw	r22, r6
    4c7e:	3e d4       	rcall	.+2172   	; 0x54fc <fputc>
    4c80:	cc 84       	ldd	r12, Y+12	; 0x0c
    4c82:	dd 84       	ldd	r13, Y+13	; 0x0d
    4c84:	46 c1       	rjmp	.+652    	; 0x4f12 <vfprintf+0x6bc>
    4c86:	93 36       	cpi	r25, 0x63	; 99
    4c88:	31 f0       	breq	.+12     	; 0x4c96 <vfprintf+0x440>
    4c8a:	93 37       	cpi	r25, 0x73	; 115
    4c8c:	99 f0       	breq	.+38     	; 0x4cb4 <vfprintf+0x45e>
    4c8e:	93 35       	cpi	r25, 0x53	; 83
    4c90:	09 f0       	breq	.+2      	; 0x4c94 <vfprintf+0x43e>
    4c92:	55 c0       	rjmp	.+170    	; 0x4d3e <vfprintf+0x4e8>
    4c94:	22 c0       	rjmp	.+68     	; 0x4cda <vfprintf+0x484>
    4c96:	f6 01       	movw	r30, r12
    4c98:	80 81       	ld	r24, Z
    4c9a:	89 83       	std	Y+1, r24	; 0x01
    4c9c:	5e 01       	movw	r10, r28
    4c9e:	08 94       	sec
    4ca0:	a1 1c       	adc	r10, r1
    4ca2:	b1 1c       	adc	r11, r1
    4ca4:	22 e0       	ldi	r18, 0x02	; 2
    4ca6:	30 e0       	ldi	r19, 0x00	; 0
    4ca8:	c2 0e       	add	r12, r18
    4caa:	d3 1e       	adc	r13, r19
    4cac:	21 e0       	ldi	r18, 0x01	; 1
    4cae:	e2 2e       	mov	r14, r18
    4cb0:	f1 2c       	mov	r15, r1
    4cb2:	11 c0       	rjmp	.+34     	; 0x4cd6 <vfprintf+0x480>
    4cb4:	f6 01       	movw	r30, r12
    4cb6:	a0 80       	ld	r10, Z
    4cb8:	b1 80       	ldd	r11, Z+1	; 0x01
    4cba:	16 fd       	sbrc	r17, 6
    4cbc:	03 c0       	rjmp	.+6      	; 0x4cc4 <vfprintf+0x46e>
    4cbe:	6f ef       	ldi	r22, 0xFF	; 255
    4cc0:	7f ef       	ldi	r23, 0xFF	; 255
    4cc2:	02 c0       	rjmp	.+4      	; 0x4cc8 <vfprintf+0x472>
    4cc4:	69 2d       	mov	r22, r9
    4cc6:	70 e0       	ldi	r23, 0x00	; 0
    4cc8:	22 e0       	ldi	r18, 0x02	; 2
    4cca:	30 e0       	ldi	r19, 0x00	; 0
    4ccc:	c2 0e       	add	r12, r18
    4cce:	d3 1e       	adc	r13, r19
    4cd0:	c5 01       	movw	r24, r10
    4cd2:	09 d4       	rcall	.+2066   	; 0x54e6 <strnlen>
    4cd4:	7c 01       	movw	r14, r24
    4cd6:	1f 77       	andi	r17, 0x7F	; 127
    4cd8:	12 c0       	rjmp	.+36     	; 0x4cfe <vfprintf+0x4a8>
    4cda:	f6 01       	movw	r30, r12
    4cdc:	a0 80       	ld	r10, Z
    4cde:	b1 80       	ldd	r11, Z+1	; 0x01
    4ce0:	16 fd       	sbrc	r17, 6
    4ce2:	03 c0       	rjmp	.+6      	; 0x4cea <vfprintf+0x494>
    4ce4:	6f ef       	ldi	r22, 0xFF	; 255
    4ce6:	7f ef       	ldi	r23, 0xFF	; 255
    4ce8:	02 c0       	rjmp	.+4      	; 0x4cee <vfprintf+0x498>
    4cea:	69 2d       	mov	r22, r9
    4cec:	70 e0       	ldi	r23, 0x00	; 0
    4cee:	22 e0       	ldi	r18, 0x02	; 2
    4cf0:	30 e0       	ldi	r19, 0x00	; 0
    4cf2:	c2 0e       	add	r12, r18
    4cf4:	d3 1e       	adc	r13, r19
    4cf6:	c5 01       	movw	r24, r10
    4cf8:	eb d3       	rcall	.+2006   	; 0x54d0 <strnlen_P>
    4cfa:	7c 01       	movw	r14, r24
    4cfc:	10 68       	ori	r17, 0x80	; 128
    4cfe:	13 ff       	sbrs	r17, 3
    4d00:	06 c0       	rjmp	.+12     	; 0x4d0e <vfprintf+0x4b8>
    4d02:	19 c0       	rjmp	.+50     	; 0x4d36 <vfprintf+0x4e0>
    4d04:	80 e2       	ldi	r24, 0x20	; 32
    4d06:	90 e0       	ldi	r25, 0x00	; 0
    4d08:	b3 01       	movw	r22, r6
    4d0a:	f8 d3       	rcall	.+2032   	; 0x54fc <fputc>
    4d0c:	8a 94       	dec	r8
    4d0e:	88 2d       	mov	r24, r8
    4d10:	90 e0       	ldi	r25, 0x00	; 0
    4d12:	e8 16       	cp	r14, r24
    4d14:	f9 06       	cpc	r15, r25
    4d16:	b0 f3       	brcs	.-20     	; 0x4d04 <vfprintf+0x4ae>
    4d18:	0e c0       	rjmp	.+28     	; 0x4d36 <vfprintf+0x4e0>
    4d1a:	f5 01       	movw	r30, r10
    4d1c:	17 fd       	sbrc	r17, 7
    4d1e:	85 91       	lpm	r24, Z+
    4d20:	17 ff       	sbrs	r17, 7
    4d22:	81 91       	ld	r24, Z+
    4d24:	5f 01       	movw	r10, r30
    4d26:	90 e0       	ldi	r25, 0x00	; 0
    4d28:	b3 01       	movw	r22, r6
    4d2a:	e8 d3       	rcall	.+2000   	; 0x54fc <fputc>
    4d2c:	81 10       	cpse	r8, r1
    4d2e:	8a 94       	dec	r8
    4d30:	08 94       	sec
    4d32:	e1 08       	sbc	r14, r1
    4d34:	f1 08       	sbc	r15, r1
    4d36:	e1 14       	cp	r14, r1
    4d38:	f1 04       	cpc	r15, r1
    4d3a:	79 f7       	brne	.-34     	; 0x4d1a <vfprintf+0x4c4>
    4d3c:	ea c0       	rjmp	.+468    	; 0x4f12 <vfprintf+0x6bc>
    4d3e:	94 36       	cpi	r25, 0x64	; 100
    4d40:	11 f0       	breq	.+4      	; 0x4d46 <vfprintf+0x4f0>
    4d42:	99 36       	cpi	r25, 0x69	; 105
    4d44:	81 f5       	brne	.+96     	; 0x4da6 <vfprintf+0x550>
    4d46:	17 ff       	sbrs	r17, 7
    4d48:	08 c0       	rjmp	.+16     	; 0x4d5a <vfprintf+0x504>
    4d4a:	f6 01       	movw	r30, r12
    4d4c:	20 81       	ld	r18, Z
    4d4e:	31 81       	ldd	r19, Z+1	; 0x01
    4d50:	42 81       	ldd	r20, Z+2	; 0x02
    4d52:	53 81       	ldd	r21, Z+3	; 0x03
    4d54:	84 e0       	ldi	r24, 0x04	; 4
    4d56:	90 e0       	ldi	r25, 0x00	; 0
    4d58:	0a c0       	rjmp	.+20     	; 0x4d6e <vfprintf+0x518>
    4d5a:	f6 01       	movw	r30, r12
    4d5c:	80 81       	ld	r24, Z
    4d5e:	91 81       	ldd	r25, Z+1	; 0x01
    4d60:	9c 01       	movw	r18, r24
    4d62:	44 27       	eor	r20, r20
    4d64:	37 fd       	sbrc	r19, 7
    4d66:	40 95       	com	r20
    4d68:	54 2f       	mov	r21, r20
    4d6a:	82 e0       	ldi	r24, 0x02	; 2
    4d6c:	90 e0       	ldi	r25, 0x00	; 0
    4d6e:	c8 0e       	add	r12, r24
    4d70:	d9 1e       	adc	r13, r25
    4d72:	9f e6       	ldi	r25, 0x6F	; 111
    4d74:	f9 2e       	mov	r15, r25
    4d76:	f1 22       	and	r15, r17
    4d78:	57 ff       	sbrs	r21, 7
    4d7a:	09 c0       	rjmp	.+18     	; 0x4d8e <vfprintf+0x538>
    4d7c:	50 95       	com	r21
    4d7e:	40 95       	com	r20
    4d80:	30 95       	com	r19
    4d82:	21 95       	neg	r18
    4d84:	3f 4f       	sbci	r19, 0xFF	; 255
    4d86:	4f 4f       	sbci	r20, 0xFF	; 255
    4d88:	5f 4f       	sbci	r21, 0xFF	; 255
    4d8a:	90 e8       	ldi	r25, 0x80	; 128
    4d8c:	f9 2a       	or	r15, r25
    4d8e:	ca 01       	movw	r24, r20
    4d90:	b9 01       	movw	r22, r18
    4d92:	ae 01       	movw	r20, r28
    4d94:	4f 5f       	subi	r20, 0xFF	; 255
    4d96:	5f 4f       	sbci	r21, 0xFF	; 255
    4d98:	2a e0       	ldi	r18, 0x0A	; 10
    4d9a:	30 e0       	ldi	r19, 0x00	; 0
    4d9c:	10 d4       	rcall	.+2080   	; 0x55be <__ultoa_invert>
    4d9e:	e8 2e       	mov	r14, r24
    4da0:	e8 89       	ldd	r30, Y+16	; 0x10
    4da2:	ee 1a       	sub	r14, r30
    4da4:	40 c0       	rjmp	.+128    	; 0x4e26 <vfprintf+0x5d0>
    4da6:	95 37       	cpi	r25, 0x75	; 117
    4da8:	21 f4       	brne	.+8      	; 0x4db2 <vfprintf+0x55c>
    4daa:	1f 7e       	andi	r17, 0xEF	; 239
    4dac:	2a e0       	ldi	r18, 0x0A	; 10
    4dae:	30 e0       	ldi	r19, 0x00	; 0
    4db0:	1c c0       	rjmp	.+56     	; 0x4dea <vfprintf+0x594>
    4db2:	19 7f       	andi	r17, 0xF9	; 249
    4db4:	9f 36       	cpi	r25, 0x6F	; 111
    4db6:	61 f0       	breq	.+24     	; 0x4dd0 <vfprintf+0x57a>
    4db8:	90 37       	cpi	r25, 0x70	; 112
    4dba:	20 f4       	brcc	.+8      	; 0x4dc4 <vfprintf+0x56e>
    4dbc:	98 35       	cpi	r25, 0x58	; 88
    4dbe:	09 f0       	breq	.+2      	; 0x4dc2 <vfprintf+0x56c>
    4dc0:	ab c0       	rjmp	.+342    	; 0x4f18 <vfprintf+0x6c2>
    4dc2:	0f c0       	rjmp	.+30     	; 0x4de2 <vfprintf+0x58c>
    4dc4:	90 37       	cpi	r25, 0x70	; 112
    4dc6:	39 f0       	breq	.+14     	; 0x4dd6 <vfprintf+0x580>
    4dc8:	98 37       	cpi	r25, 0x78	; 120
    4dca:	09 f0       	breq	.+2      	; 0x4dce <vfprintf+0x578>
    4dcc:	a5 c0       	rjmp	.+330    	; 0x4f18 <vfprintf+0x6c2>
    4dce:	04 c0       	rjmp	.+8      	; 0x4dd8 <vfprintf+0x582>
    4dd0:	28 e0       	ldi	r18, 0x08	; 8
    4dd2:	30 e0       	ldi	r19, 0x00	; 0
    4dd4:	0a c0       	rjmp	.+20     	; 0x4dea <vfprintf+0x594>
    4dd6:	10 61       	ori	r17, 0x10	; 16
    4dd8:	14 fd       	sbrc	r17, 4
    4dda:	14 60       	ori	r17, 0x04	; 4
    4ddc:	20 e1       	ldi	r18, 0x10	; 16
    4dde:	30 e0       	ldi	r19, 0x00	; 0
    4de0:	04 c0       	rjmp	.+8      	; 0x4dea <vfprintf+0x594>
    4de2:	14 fd       	sbrc	r17, 4
    4de4:	16 60       	ori	r17, 0x06	; 6
    4de6:	20 e1       	ldi	r18, 0x10	; 16
    4de8:	32 e0       	ldi	r19, 0x02	; 2
    4dea:	17 ff       	sbrs	r17, 7
    4dec:	08 c0       	rjmp	.+16     	; 0x4dfe <vfprintf+0x5a8>
    4dee:	f6 01       	movw	r30, r12
    4df0:	60 81       	ld	r22, Z
    4df2:	71 81       	ldd	r23, Z+1	; 0x01
    4df4:	82 81       	ldd	r24, Z+2	; 0x02
    4df6:	93 81       	ldd	r25, Z+3	; 0x03
    4df8:	44 e0       	ldi	r20, 0x04	; 4
    4dfa:	50 e0       	ldi	r21, 0x00	; 0
    4dfc:	08 c0       	rjmp	.+16     	; 0x4e0e <vfprintf+0x5b8>
    4dfe:	f6 01       	movw	r30, r12
    4e00:	80 81       	ld	r24, Z
    4e02:	91 81       	ldd	r25, Z+1	; 0x01
    4e04:	bc 01       	movw	r22, r24
    4e06:	80 e0       	ldi	r24, 0x00	; 0
    4e08:	90 e0       	ldi	r25, 0x00	; 0
    4e0a:	42 e0       	ldi	r20, 0x02	; 2
    4e0c:	50 e0       	ldi	r21, 0x00	; 0
    4e0e:	c4 0e       	add	r12, r20
    4e10:	d5 1e       	adc	r13, r21
    4e12:	ae 01       	movw	r20, r28
    4e14:	4f 5f       	subi	r20, 0xFF	; 255
    4e16:	5f 4f       	sbci	r21, 0xFF	; 255
    4e18:	d2 d3       	rcall	.+1956   	; 0x55be <__ultoa_invert>
    4e1a:	e8 2e       	mov	r14, r24
    4e1c:	58 89       	ldd	r21, Y+16	; 0x10
    4e1e:	e5 1a       	sub	r14, r21
    4e20:	8f e7       	ldi	r24, 0x7F	; 127
    4e22:	f8 2e       	mov	r15, r24
    4e24:	f1 22       	and	r15, r17
    4e26:	f6 fe       	sbrs	r15, 6
    4e28:	0b c0       	rjmp	.+22     	; 0x4e40 <vfprintf+0x5ea>
    4e2a:	8e ef       	ldi	r24, 0xFE	; 254
    4e2c:	f8 22       	and	r15, r24
    4e2e:	e9 14       	cp	r14, r9
    4e30:	38 f4       	brcc	.+14     	; 0x4e40 <vfprintf+0x5ea>
    4e32:	f4 fe       	sbrs	r15, 4
    4e34:	07 c0       	rjmp	.+14     	; 0x4e44 <vfprintf+0x5ee>
    4e36:	f2 fc       	sbrc	r15, 2
    4e38:	05 c0       	rjmp	.+10     	; 0x4e44 <vfprintf+0x5ee>
    4e3a:	9f ee       	ldi	r25, 0xEF	; 239
    4e3c:	f9 22       	and	r15, r25
    4e3e:	02 c0       	rjmp	.+4      	; 0x4e44 <vfprintf+0x5ee>
    4e40:	1e 2d       	mov	r17, r14
    4e42:	01 c0       	rjmp	.+2      	; 0x4e46 <vfprintf+0x5f0>
    4e44:	19 2d       	mov	r17, r9
    4e46:	f4 fe       	sbrs	r15, 4
    4e48:	0d c0       	rjmp	.+26     	; 0x4e64 <vfprintf+0x60e>
    4e4a:	fe 01       	movw	r30, r28
    4e4c:	ee 0d       	add	r30, r14
    4e4e:	f1 1d       	adc	r31, r1
    4e50:	80 81       	ld	r24, Z
    4e52:	80 33       	cpi	r24, 0x30	; 48
    4e54:	19 f4       	brne	.+6      	; 0x4e5c <vfprintf+0x606>
    4e56:	e9 ee       	ldi	r30, 0xE9	; 233
    4e58:	fe 22       	and	r15, r30
    4e5a:	08 c0       	rjmp	.+16     	; 0x4e6c <vfprintf+0x616>
    4e5c:	1f 5f       	subi	r17, 0xFF	; 255
    4e5e:	f2 fe       	sbrs	r15, 2
    4e60:	05 c0       	rjmp	.+10     	; 0x4e6c <vfprintf+0x616>
    4e62:	03 c0       	rjmp	.+6      	; 0x4e6a <vfprintf+0x614>
    4e64:	8f 2d       	mov	r24, r15
    4e66:	86 78       	andi	r24, 0x86	; 134
    4e68:	09 f0       	breq	.+2      	; 0x4e6c <vfprintf+0x616>
    4e6a:	1f 5f       	subi	r17, 0xFF	; 255
    4e6c:	0f 2d       	mov	r16, r15
    4e6e:	f3 fc       	sbrc	r15, 3
    4e70:	13 c0       	rjmp	.+38     	; 0x4e98 <vfprintf+0x642>
    4e72:	f0 fe       	sbrs	r15, 0
    4e74:	0e c0       	rjmp	.+28     	; 0x4e92 <vfprintf+0x63c>
    4e76:	18 15       	cp	r17, r8
    4e78:	10 f0       	brcs	.+4      	; 0x4e7e <vfprintf+0x628>
    4e7a:	9e 2c       	mov	r9, r14
    4e7c:	0a c0       	rjmp	.+20     	; 0x4e92 <vfprintf+0x63c>
    4e7e:	9e 2c       	mov	r9, r14
    4e80:	98 0c       	add	r9, r8
    4e82:	91 1a       	sub	r9, r17
    4e84:	18 2d       	mov	r17, r8
    4e86:	05 c0       	rjmp	.+10     	; 0x4e92 <vfprintf+0x63c>
    4e88:	80 e2       	ldi	r24, 0x20	; 32
    4e8a:	90 e0       	ldi	r25, 0x00	; 0
    4e8c:	b3 01       	movw	r22, r6
    4e8e:	36 d3       	rcall	.+1644   	; 0x54fc <fputc>
    4e90:	1f 5f       	subi	r17, 0xFF	; 255
    4e92:	18 15       	cp	r17, r8
    4e94:	c8 f3       	brcs	.-14     	; 0x4e88 <vfprintf+0x632>
    4e96:	04 c0       	rjmp	.+8      	; 0x4ea0 <vfprintf+0x64a>
    4e98:	18 15       	cp	r17, r8
    4e9a:	10 f4       	brcc	.+4      	; 0x4ea0 <vfprintf+0x64a>
    4e9c:	81 1a       	sub	r8, r17
    4e9e:	01 c0       	rjmp	.+2      	; 0x4ea2 <vfprintf+0x64c>
    4ea0:	88 24       	eor	r8, r8
    4ea2:	04 ff       	sbrs	r16, 4
    4ea4:	0e c0       	rjmp	.+28     	; 0x4ec2 <vfprintf+0x66c>
    4ea6:	80 e3       	ldi	r24, 0x30	; 48
    4ea8:	90 e0       	ldi	r25, 0x00	; 0
    4eaa:	b3 01       	movw	r22, r6
    4eac:	27 d3       	rcall	.+1614   	; 0x54fc <fputc>
    4eae:	02 ff       	sbrs	r16, 2
    4eb0:	1b c0       	rjmp	.+54     	; 0x4ee8 <vfprintf+0x692>
    4eb2:	01 fd       	sbrc	r16, 1
    4eb4:	03 c0       	rjmp	.+6      	; 0x4ebc <vfprintf+0x666>
    4eb6:	88 e7       	ldi	r24, 0x78	; 120
    4eb8:	90 e0       	ldi	r25, 0x00	; 0
    4eba:	0e c0       	rjmp	.+28     	; 0x4ed8 <vfprintf+0x682>
    4ebc:	88 e5       	ldi	r24, 0x58	; 88
    4ebe:	90 e0       	ldi	r25, 0x00	; 0
    4ec0:	0b c0       	rjmp	.+22     	; 0x4ed8 <vfprintf+0x682>
    4ec2:	80 2f       	mov	r24, r16
    4ec4:	86 78       	andi	r24, 0x86	; 134
    4ec6:	81 f0       	breq	.+32     	; 0x4ee8 <vfprintf+0x692>
    4ec8:	01 ff       	sbrs	r16, 1
    4eca:	02 c0       	rjmp	.+4      	; 0x4ed0 <vfprintf+0x67a>
    4ecc:	8b e2       	ldi	r24, 0x2B	; 43
    4ece:	01 c0       	rjmp	.+2      	; 0x4ed2 <vfprintf+0x67c>
    4ed0:	80 e2       	ldi	r24, 0x20	; 32
    4ed2:	f7 fc       	sbrc	r15, 7
    4ed4:	8d e2       	ldi	r24, 0x2D	; 45
    4ed6:	90 e0       	ldi	r25, 0x00	; 0
    4ed8:	b3 01       	movw	r22, r6
    4eda:	10 d3       	rcall	.+1568   	; 0x54fc <fputc>
    4edc:	05 c0       	rjmp	.+10     	; 0x4ee8 <vfprintf+0x692>
    4ede:	80 e3       	ldi	r24, 0x30	; 48
    4ee0:	90 e0       	ldi	r25, 0x00	; 0
    4ee2:	b3 01       	movw	r22, r6
    4ee4:	0b d3       	rcall	.+1558   	; 0x54fc <fputc>
    4ee6:	9a 94       	dec	r9
    4ee8:	e9 14       	cp	r14, r9
    4eea:	c8 f3       	brcs	.-14     	; 0x4ede <vfprintf+0x688>
    4eec:	ea 94       	dec	r14
    4eee:	e1 e0       	ldi	r30, 0x01	; 1
    4ef0:	f0 e0       	ldi	r31, 0x00	; 0
    4ef2:	ec 0f       	add	r30, r28
    4ef4:	fd 1f       	adc	r31, r29
    4ef6:	ee 0d       	add	r30, r14
    4ef8:	f1 1d       	adc	r31, r1
    4efa:	80 81       	ld	r24, Z
    4efc:	90 e0       	ldi	r25, 0x00	; 0
    4efe:	b3 01       	movw	r22, r6
    4f00:	fd d2       	rcall	.+1530   	; 0x54fc <fputc>
    4f02:	ee 20       	and	r14, r14
    4f04:	99 f7       	brne	.-26     	; 0x4eec <vfprintf+0x696>
    4f06:	05 c0       	rjmp	.+10     	; 0x4f12 <vfprintf+0x6bc>
    4f08:	80 e2       	ldi	r24, 0x20	; 32
    4f0a:	90 e0       	ldi	r25, 0x00	; 0
    4f0c:	b3 01       	movw	r22, r6
    4f0e:	f6 d2       	rcall	.+1516   	; 0x54fc <fputc>
    4f10:	8a 94       	dec	r8
    4f12:	88 20       	and	r8, r8
    4f14:	c9 f7       	brne	.-14     	; 0x4f08 <vfprintf+0x6b2>
    4f16:	b6 cc       	rjmp	.-1684   	; 0x4884 <vfprintf+0x2e>
    4f18:	f3 01       	movw	r30, r6
    4f1a:	66 81       	ldd	r22, Z+6	; 0x06
    4f1c:	77 81       	ldd	r23, Z+7	; 0x07
    4f1e:	cb 01       	movw	r24, r22
    4f20:	61 96       	adiw	r28, 0x11	; 17
    4f22:	e2 e1       	ldi	r30, 0x12	; 18
    4f24:	70 c0       	rjmp	.+224    	; 0x5006 <__epilogue_restores__>

00004f26 <__mulsi3>:
    4f26:	62 9f       	mul	r22, r18
    4f28:	d0 01       	movw	r26, r0
    4f2a:	73 9f       	mul	r23, r19
    4f2c:	f0 01       	movw	r30, r0
    4f2e:	82 9f       	mul	r24, r18
    4f30:	e0 0d       	add	r30, r0
    4f32:	f1 1d       	adc	r31, r1
    4f34:	64 9f       	mul	r22, r20
    4f36:	e0 0d       	add	r30, r0
    4f38:	f1 1d       	adc	r31, r1
    4f3a:	92 9f       	mul	r25, r18
    4f3c:	f0 0d       	add	r31, r0
    4f3e:	83 9f       	mul	r24, r19
    4f40:	f0 0d       	add	r31, r0
    4f42:	74 9f       	mul	r23, r20
    4f44:	f0 0d       	add	r31, r0
    4f46:	65 9f       	mul	r22, r21
    4f48:	f0 0d       	add	r31, r0
    4f4a:	99 27       	eor	r25, r25
    4f4c:	72 9f       	mul	r23, r18
    4f4e:	b0 0d       	add	r27, r0
    4f50:	e1 1d       	adc	r30, r1
    4f52:	f9 1f       	adc	r31, r25
    4f54:	63 9f       	mul	r22, r19
    4f56:	b0 0d       	add	r27, r0
    4f58:	e1 1d       	adc	r30, r1
    4f5a:	f9 1f       	adc	r31, r25
    4f5c:	bd 01       	movw	r22, r26
    4f5e:	cf 01       	movw	r24, r30
    4f60:	11 24       	eor	r1, r1
    4f62:	08 95       	ret

00004f64 <__divmodhi4>:
    4f64:	97 fb       	bst	r25, 7
    4f66:	09 2e       	mov	r0, r25
    4f68:	07 26       	eor	r0, r23
    4f6a:	0a d0       	rcall	.+20     	; 0x4f80 <__divmodhi4_neg1>
    4f6c:	77 fd       	sbrc	r23, 7
    4f6e:	04 d0       	rcall	.+8      	; 0x4f78 <__divmodhi4_neg2>
    4f70:	65 d0       	rcall	.+202    	; 0x503c <__udivmodhi4>
    4f72:	06 d0       	rcall	.+12     	; 0x4f80 <__divmodhi4_neg1>
    4f74:	00 20       	and	r0, r0
    4f76:	1a f4       	brpl	.+6      	; 0x4f7e <__divmodhi4_exit>

00004f78 <__divmodhi4_neg2>:
    4f78:	70 95       	com	r23
    4f7a:	61 95       	neg	r22
    4f7c:	7f 4f       	sbci	r23, 0xFF	; 255

00004f7e <__divmodhi4_exit>:
    4f7e:	08 95       	ret

00004f80 <__divmodhi4_neg1>:
    4f80:	f6 f7       	brtc	.-4      	; 0x4f7e <__divmodhi4_exit>
    4f82:	90 95       	com	r25
    4f84:	81 95       	neg	r24
    4f86:	9f 4f       	sbci	r25, 0xFF	; 255
    4f88:	08 95       	ret

00004f8a <__udivmodsi4>:
    4f8a:	a1 e2       	ldi	r26, 0x21	; 33
    4f8c:	1a 2e       	mov	r1, r26
    4f8e:	aa 1b       	sub	r26, r26
    4f90:	bb 1b       	sub	r27, r27
    4f92:	fd 01       	movw	r30, r26
    4f94:	0d c0       	rjmp	.+26     	; 0x4fb0 <__udivmodsi4_ep>

00004f96 <__udivmodsi4_loop>:
    4f96:	aa 1f       	adc	r26, r26
    4f98:	bb 1f       	adc	r27, r27
    4f9a:	ee 1f       	adc	r30, r30
    4f9c:	ff 1f       	adc	r31, r31
    4f9e:	a2 17       	cp	r26, r18
    4fa0:	b3 07       	cpc	r27, r19
    4fa2:	e4 07       	cpc	r30, r20
    4fa4:	f5 07       	cpc	r31, r21
    4fa6:	20 f0       	brcs	.+8      	; 0x4fb0 <__udivmodsi4_ep>
    4fa8:	a2 1b       	sub	r26, r18
    4faa:	b3 0b       	sbc	r27, r19
    4fac:	e4 0b       	sbc	r30, r20
    4fae:	f5 0b       	sbc	r31, r21

00004fb0 <__udivmodsi4_ep>:
    4fb0:	66 1f       	adc	r22, r22
    4fb2:	77 1f       	adc	r23, r23
    4fb4:	88 1f       	adc	r24, r24
    4fb6:	99 1f       	adc	r25, r25
    4fb8:	1a 94       	dec	r1
    4fba:	69 f7       	brne	.-38     	; 0x4f96 <__udivmodsi4_loop>
    4fbc:	60 95       	com	r22
    4fbe:	70 95       	com	r23
    4fc0:	80 95       	com	r24
    4fc2:	90 95       	com	r25
    4fc4:	9b 01       	movw	r18, r22
    4fc6:	ac 01       	movw	r20, r24
    4fc8:	bd 01       	movw	r22, r26
    4fca:	cf 01       	movw	r24, r30
    4fcc:	08 95       	ret

00004fce <__prologue_saves__>:
    4fce:	2f 92       	push	r2
    4fd0:	3f 92       	push	r3
    4fd2:	4f 92       	push	r4
    4fd4:	5f 92       	push	r5
    4fd6:	6f 92       	push	r6
    4fd8:	7f 92       	push	r7
    4fda:	8f 92       	push	r8
    4fdc:	9f 92       	push	r9
    4fde:	af 92       	push	r10
    4fe0:	bf 92       	push	r11
    4fe2:	cf 92       	push	r12
    4fe4:	df 92       	push	r13
    4fe6:	ef 92       	push	r14
    4fe8:	ff 92       	push	r15
    4fea:	0f 93       	push	r16
    4fec:	1f 93       	push	r17
    4fee:	cf 93       	push	r28
    4ff0:	df 93       	push	r29
    4ff2:	cd b7       	in	r28, 0x3d	; 61
    4ff4:	de b7       	in	r29, 0x3e	; 62
    4ff6:	ca 1b       	sub	r28, r26
    4ff8:	db 0b       	sbc	r29, r27
    4ffa:	0f b6       	in	r0, 0x3f	; 63
    4ffc:	f8 94       	cli
    4ffe:	de bf       	out	0x3e, r29	; 62
    5000:	0f be       	out	0x3f, r0	; 63
    5002:	cd bf       	out	0x3d, r28	; 61
    5004:	09 94       	ijmp

00005006 <__epilogue_restores__>:
    5006:	2a 88       	ldd	r2, Y+18	; 0x12
    5008:	39 88       	ldd	r3, Y+17	; 0x11
    500a:	48 88       	ldd	r4, Y+16	; 0x10
    500c:	5f 84       	ldd	r5, Y+15	; 0x0f
    500e:	6e 84       	ldd	r6, Y+14	; 0x0e
    5010:	7d 84       	ldd	r7, Y+13	; 0x0d
    5012:	8c 84       	ldd	r8, Y+12	; 0x0c
    5014:	9b 84       	ldd	r9, Y+11	; 0x0b
    5016:	aa 84       	ldd	r10, Y+10	; 0x0a
    5018:	b9 84       	ldd	r11, Y+9	; 0x09
    501a:	c8 84       	ldd	r12, Y+8	; 0x08
    501c:	df 80       	ldd	r13, Y+7	; 0x07
    501e:	ee 80       	ldd	r14, Y+6	; 0x06
    5020:	fd 80       	ldd	r15, Y+5	; 0x05
    5022:	0c 81       	ldd	r16, Y+4	; 0x04
    5024:	1b 81       	ldd	r17, Y+3	; 0x03
    5026:	aa 81       	ldd	r26, Y+2	; 0x02
    5028:	b9 81       	ldd	r27, Y+1	; 0x01
    502a:	ce 0f       	add	r28, r30
    502c:	d1 1d       	adc	r29, r1
    502e:	0f b6       	in	r0, 0x3f	; 63
    5030:	f8 94       	cli
    5032:	de bf       	out	0x3e, r29	; 62
    5034:	0f be       	out	0x3f, r0	; 63
    5036:	cd bf       	out	0x3d, r28	; 61
    5038:	ed 01       	movw	r28, r26
    503a:	08 95       	ret

0000503c <__udivmodhi4>:
    503c:	aa 1b       	sub	r26, r26
    503e:	bb 1b       	sub	r27, r27
    5040:	51 e1       	ldi	r21, 0x11	; 17
    5042:	07 c0       	rjmp	.+14     	; 0x5052 <__udivmodhi4_ep>

00005044 <__udivmodhi4_loop>:
    5044:	aa 1f       	adc	r26, r26
    5046:	bb 1f       	adc	r27, r27
    5048:	a6 17       	cp	r26, r22
    504a:	b7 07       	cpc	r27, r23
    504c:	10 f0       	brcs	.+4      	; 0x5052 <__udivmodhi4_ep>
    504e:	a6 1b       	sub	r26, r22
    5050:	b7 0b       	sbc	r27, r23

00005052 <__udivmodhi4_ep>:
    5052:	88 1f       	adc	r24, r24
    5054:	99 1f       	adc	r25, r25
    5056:	5a 95       	dec	r21
    5058:	a9 f7       	brne	.-22     	; 0x5044 <__udivmodhi4_loop>
    505a:	80 95       	com	r24
    505c:	90 95       	com	r25
    505e:	bc 01       	movw	r22, r24
    5060:	cd 01       	movw	r24, r26
    5062:	08 95       	ret

00005064 <malloc>:
    5064:	cf 93       	push	r28
    5066:	df 93       	push	r29
    5068:	bc 01       	movw	r22, r24
    506a:	82 30       	cpi	r24, 0x02	; 2
    506c:	91 05       	cpc	r25, r1
    506e:	10 f4       	brcc	.+4      	; 0x5074 <malloc+0x10>
    5070:	62 e0       	ldi	r22, 0x02	; 2
    5072:	70 e0       	ldi	r23, 0x00	; 0
    5074:	a0 91 9d 04 	lds	r26, 0x049D
    5078:	b0 91 9e 04 	lds	r27, 0x049E
    507c:	ed 01       	movw	r28, r26
    507e:	e0 e0       	ldi	r30, 0x00	; 0
    5080:	f0 e0       	ldi	r31, 0x00	; 0
    5082:	40 e0       	ldi	r20, 0x00	; 0
    5084:	50 e0       	ldi	r21, 0x00	; 0
    5086:	21 c0       	rjmp	.+66     	; 0x50ca <malloc+0x66>
    5088:	88 81       	ld	r24, Y
    508a:	99 81       	ldd	r25, Y+1	; 0x01
    508c:	86 17       	cp	r24, r22
    508e:	97 07       	cpc	r25, r23
    5090:	69 f4       	brne	.+26     	; 0x50ac <malloc+0x48>
    5092:	8a 81       	ldd	r24, Y+2	; 0x02
    5094:	9b 81       	ldd	r25, Y+3	; 0x03
    5096:	30 97       	sbiw	r30, 0x00	; 0
    5098:	19 f0       	breq	.+6      	; 0x50a0 <malloc+0x3c>
    509a:	93 83       	std	Z+3, r25	; 0x03
    509c:	82 83       	std	Z+2, r24	; 0x02
    509e:	04 c0       	rjmp	.+8      	; 0x50a8 <malloc+0x44>
    50a0:	90 93 9e 04 	sts	0x049E, r25
    50a4:	80 93 9d 04 	sts	0x049D, r24
    50a8:	fe 01       	movw	r30, r28
    50aa:	34 c0       	rjmp	.+104    	; 0x5114 <malloc+0xb0>
    50ac:	68 17       	cp	r22, r24
    50ae:	79 07       	cpc	r23, r25
    50b0:	38 f4       	brcc	.+14     	; 0x50c0 <malloc+0x5c>
    50b2:	41 15       	cp	r20, r1
    50b4:	51 05       	cpc	r21, r1
    50b6:	19 f0       	breq	.+6      	; 0x50be <malloc+0x5a>
    50b8:	84 17       	cp	r24, r20
    50ba:	95 07       	cpc	r25, r21
    50bc:	08 f4       	brcc	.+2      	; 0x50c0 <malloc+0x5c>
    50be:	ac 01       	movw	r20, r24
    50c0:	fe 01       	movw	r30, r28
    50c2:	8a 81       	ldd	r24, Y+2	; 0x02
    50c4:	9b 81       	ldd	r25, Y+3	; 0x03
    50c6:	9c 01       	movw	r18, r24
    50c8:	e9 01       	movw	r28, r18
    50ca:	20 97       	sbiw	r28, 0x00	; 0
    50cc:	e9 f6       	brne	.-70     	; 0x5088 <malloc+0x24>
    50ce:	41 15       	cp	r20, r1
    50d0:	51 05       	cpc	r21, r1
    50d2:	a9 f1       	breq	.+106    	; 0x513e <malloc+0xda>
    50d4:	ca 01       	movw	r24, r20
    50d6:	86 1b       	sub	r24, r22
    50d8:	97 0b       	sbc	r25, r23
    50da:	04 97       	sbiw	r24, 0x04	; 4
    50dc:	08 f4       	brcc	.+2      	; 0x50e0 <malloc+0x7c>
    50de:	ba 01       	movw	r22, r20
    50e0:	e0 e0       	ldi	r30, 0x00	; 0
    50e2:	f0 e0       	ldi	r31, 0x00	; 0
    50e4:	2a c0       	rjmp	.+84     	; 0x513a <malloc+0xd6>
    50e6:	8d 91       	ld	r24, X+
    50e8:	9c 91       	ld	r25, X
    50ea:	11 97       	sbiw	r26, 0x01	; 1
    50ec:	84 17       	cp	r24, r20
    50ee:	95 07       	cpc	r25, r21
    50f0:	f9 f4       	brne	.+62     	; 0x5130 <malloc+0xcc>
    50f2:	64 17       	cp	r22, r20
    50f4:	75 07       	cpc	r23, r21
    50f6:	81 f4       	brne	.+32     	; 0x5118 <malloc+0xb4>
    50f8:	12 96       	adiw	r26, 0x02	; 2
    50fa:	8d 91       	ld	r24, X+
    50fc:	9c 91       	ld	r25, X
    50fe:	13 97       	sbiw	r26, 0x03	; 3
    5100:	30 97       	sbiw	r30, 0x00	; 0
    5102:	19 f0       	breq	.+6      	; 0x510a <malloc+0xa6>
    5104:	93 83       	std	Z+3, r25	; 0x03
    5106:	82 83       	std	Z+2, r24	; 0x02
    5108:	04 c0       	rjmp	.+8      	; 0x5112 <malloc+0xae>
    510a:	90 93 9e 04 	sts	0x049E, r25
    510e:	80 93 9d 04 	sts	0x049D, r24
    5112:	fd 01       	movw	r30, r26
    5114:	32 96       	adiw	r30, 0x02	; 2
    5116:	4f c0       	rjmp	.+158    	; 0x51b6 <malloc+0x152>
    5118:	ca 01       	movw	r24, r20
    511a:	86 1b       	sub	r24, r22
    511c:	97 0b       	sbc	r25, r23
    511e:	fd 01       	movw	r30, r26
    5120:	e8 0f       	add	r30, r24
    5122:	f9 1f       	adc	r31, r25
    5124:	61 93       	st	Z+, r22
    5126:	71 93       	st	Z+, r23
    5128:	02 97       	sbiw	r24, 0x02	; 2
    512a:	8d 93       	st	X+, r24
    512c:	9c 93       	st	X, r25
    512e:	43 c0       	rjmp	.+134    	; 0x51b6 <malloc+0x152>
    5130:	fd 01       	movw	r30, r26
    5132:	82 81       	ldd	r24, Z+2	; 0x02
    5134:	93 81       	ldd	r25, Z+3	; 0x03
    5136:	9c 01       	movw	r18, r24
    5138:	d9 01       	movw	r26, r18
    513a:	10 97       	sbiw	r26, 0x00	; 0
    513c:	a1 f6       	brne	.-88     	; 0x50e6 <malloc+0x82>
    513e:	80 91 9b 04 	lds	r24, 0x049B
    5142:	90 91 9c 04 	lds	r25, 0x049C
    5146:	89 2b       	or	r24, r25
    5148:	41 f4       	brne	.+16     	; 0x515a <malloc+0xf6>
    514a:	80 91 9e 01 	lds	r24, 0x019E
    514e:	90 91 9f 01 	lds	r25, 0x019F
    5152:	90 93 9c 04 	sts	0x049C, r25
    5156:	80 93 9b 04 	sts	0x049B, r24
    515a:	40 91 a0 01 	lds	r20, 0x01A0
    515e:	50 91 a1 01 	lds	r21, 0x01A1
    5162:	41 15       	cp	r20, r1
    5164:	51 05       	cpc	r21, r1
    5166:	41 f4       	brne	.+16     	; 0x5178 <malloc+0x114>
    5168:	4d b7       	in	r20, 0x3d	; 61
    516a:	5e b7       	in	r21, 0x3e	; 62
    516c:	80 91 9c 01 	lds	r24, 0x019C
    5170:	90 91 9d 01 	lds	r25, 0x019D
    5174:	48 1b       	sub	r20, r24
    5176:	59 0b       	sbc	r21, r25
    5178:	20 91 9b 04 	lds	r18, 0x049B
    517c:	30 91 9c 04 	lds	r19, 0x049C
    5180:	24 17       	cp	r18, r20
    5182:	35 07       	cpc	r19, r21
    5184:	b0 f4       	brcc	.+44     	; 0x51b2 <malloc+0x14e>
    5186:	ca 01       	movw	r24, r20
    5188:	82 1b       	sub	r24, r18
    518a:	93 0b       	sbc	r25, r19
    518c:	86 17       	cp	r24, r22
    518e:	97 07       	cpc	r25, r23
    5190:	80 f0       	brcs	.+32     	; 0x51b2 <malloc+0x14e>
    5192:	ab 01       	movw	r20, r22
    5194:	4e 5f       	subi	r20, 0xFE	; 254
    5196:	5f 4f       	sbci	r21, 0xFF	; 255
    5198:	84 17       	cp	r24, r20
    519a:	95 07       	cpc	r25, r21
    519c:	50 f0       	brcs	.+20     	; 0x51b2 <malloc+0x14e>
    519e:	42 0f       	add	r20, r18
    51a0:	53 1f       	adc	r21, r19
    51a2:	50 93 9c 04 	sts	0x049C, r21
    51a6:	40 93 9b 04 	sts	0x049B, r20
    51aa:	f9 01       	movw	r30, r18
    51ac:	61 93       	st	Z+, r22
    51ae:	71 93       	st	Z+, r23
    51b0:	02 c0       	rjmp	.+4      	; 0x51b6 <malloc+0x152>
    51b2:	e0 e0       	ldi	r30, 0x00	; 0
    51b4:	f0 e0       	ldi	r31, 0x00	; 0
    51b6:	cf 01       	movw	r24, r30
    51b8:	df 91       	pop	r29
    51ba:	cf 91       	pop	r28
    51bc:	08 95       	ret

000051be <free>:
    51be:	cf 93       	push	r28
    51c0:	df 93       	push	r29
    51c2:	00 97       	sbiw	r24, 0x00	; 0
    51c4:	09 f4       	brne	.+2      	; 0x51c8 <free+0xa>
    51c6:	50 c0       	rjmp	.+160    	; 0x5268 <free+0xaa>
    51c8:	ec 01       	movw	r28, r24
    51ca:	22 97       	sbiw	r28, 0x02	; 2
    51cc:	1b 82       	std	Y+3, r1	; 0x03
    51ce:	1a 82       	std	Y+2, r1	; 0x02
    51d0:	a0 91 9d 04 	lds	r26, 0x049D
    51d4:	b0 91 9e 04 	lds	r27, 0x049E
    51d8:	10 97       	sbiw	r26, 0x00	; 0
    51da:	09 f1       	breq	.+66     	; 0x521e <free+0x60>
    51dc:	40 e0       	ldi	r20, 0x00	; 0
    51de:	50 e0       	ldi	r21, 0x00	; 0
    51e0:	ac 17       	cp	r26, r28
    51e2:	bd 07       	cpc	r27, r29
    51e4:	08 f1       	brcs	.+66     	; 0x5228 <free+0x6a>
    51e6:	bb 83       	std	Y+3, r27	; 0x03
    51e8:	aa 83       	std	Y+2, r26	; 0x02
    51ea:	fe 01       	movw	r30, r28
    51ec:	21 91       	ld	r18, Z+
    51ee:	31 91       	ld	r19, Z+
    51f0:	e2 0f       	add	r30, r18
    51f2:	f3 1f       	adc	r31, r19
    51f4:	ae 17       	cp	r26, r30
    51f6:	bf 07       	cpc	r27, r31
    51f8:	79 f4       	brne	.+30     	; 0x5218 <free+0x5a>
    51fa:	8d 91       	ld	r24, X+
    51fc:	9c 91       	ld	r25, X
    51fe:	11 97       	sbiw	r26, 0x01	; 1
    5200:	28 0f       	add	r18, r24
    5202:	39 1f       	adc	r19, r25
    5204:	2e 5f       	subi	r18, 0xFE	; 254
    5206:	3f 4f       	sbci	r19, 0xFF	; 255
    5208:	39 83       	std	Y+1, r19	; 0x01
    520a:	28 83       	st	Y, r18
    520c:	12 96       	adiw	r26, 0x02	; 2
    520e:	8d 91       	ld	r24, X+
    5210:	9c 91       	ld	r25, X
    5212:	13 97       	sbiw	r26, 0x03	; 3
    5214:	9b 83       	std	Y+3, r25	; 0x03
    5216:	8a 83       	std	Y+2, r24	; 0x02
    5218:	41 15       	cp	r20, r1
    521a:	51 05       	cpc	r21, r1
    521c:	71 f4       	brne	.+28     	; 0x523a <free+0x7c>
    521e:	d0 93 9e 04 	sts	0x049E, r29
    5222:	c0 93 9d 04 	sts	0x049D, r28
    5226:	20 c0       	rjmp	.+64     	; 0x5268 <free+0xaa>
    5228:	12 96       	adiw	r26, 0x02	; 2
    522a:	8d 91       	ld	r24, X+
    522c:	9c 91       	ld	r25, X
    522e:	13 97       	sbiw	r26, 0x03	; 3
    5230:	ad 01       	movw	r20, r26
    5232:	00 97       	sbiw	r24, 0x00	; 0
    5234:	11 f0       	breq	.+4      	; 0x523a <free+0x7c>
    5236:	dc 01       	movw	r26, r24
    5238:	d3 cf       	rjmp	.-90     	; 0x51e0 <free+0x22>
    523a:	fa 01       	movw	r30, r20
    523c:	d3 83       	std	Z+3, r29	; 0x03
    523e:	c2 83       	std	Z+2, r28	; 0x02
    5240:	21 91       	ld	r18, Z+
    5242:	31 91       	ld	r19, Z+
    5244:	e2 0f       	add	r30, r18
    5246:	f3 1f       	adc	r31, r19
    5248:	ce 17       	cp	r28, r30
    524a:	df 07       	cpc	r29, r31
    524c:	69 f4       	brne	.+26     	; 0x5268 <free+0xaa>
    524e:	88 81       	ld	r24, Y
    5250:	99 81       	ldd	r25, Y+1	; 0x01
    5252:	28 0f       	add	r18, r24
    5254:	39 1f       	adc	r19, r25
    5256:	2e 5f       	subi	r18, 0xFE	; 254
    5258:	3f 4f       	sbci	r19, 0xFF	; 255
    525a:	fa 01       	movw	r30, r20
    525c:	31 83       	std	Z+1, r19	; 0x01
    525e:	20 83       	st	Z, r18
    5260:	8a 81       	ldd	r24, Y+2	; 0x02
    5262:	9b 81       	ldd	r25, Y+3	; 0x03
    5264:	93 83       	std	Z+3, r25	; 0x03
    5266:	82 83       	std	Z+2, r24	; 0x02
    5268:	df 91       	pop	r29
    526a:	cf 91       	pop	r28
    526c:	08 95       	ret

0000526e <do_rand>:
    526e:	a0 e0       	ldi	r26, 0x00	; 0
    5270:	b0 e0       	ldi	r27, 0x00	; 0
    5272:	ec e3       	ldi	r30, 0x3C	; 60
    5274:	f9 e2       	ldi	r31, 0x29	; 41
    5276:	b3 ce       	rjmp	.-666    	; 0x4fde <__prologue_saves__+0x10>
    5278:	ec 01       	movw	r28, r24
    527a:	a8 80       	ld	r10, Y
    527c:	b9 80       	ldd	r11, Y+1	; 0x01
    527e:	ca 80       	ldd	r12, Y+2	; 0x02
    5280:	db 80       	ldd	r13, Y+3	; 0x03
    5282:	a1 14       	cp	r10, r1
    5284:	b1 04       	cpc	r11, r1
    5286:	c1 04       	cpc	r12, r1
    5288:	d1 04       	cpc	r13, r1
    528a:	41 f4       	brne	.+16     	; 0x529c <do_rand+0x2e>
    528c:	84 e2       	ldi	r24, 0x24	; 36
    528e:	a8 2e       	mov	r10, r24
    5290:	89 ed       	ldi	r24, 0xD9	; 217
    5292:	b8 2e       	mov	r11, r24
    5294:	8b e5       	ldi	r24, 0x5B	; 91
    5296:	c8 2e       	mov	r12, r24
    5298:	87 e0       	ldi	r24, 0x07	; 7
    529a:	d8 2e       	mov	r13, r24
    529c:	c6 01       	movw	r24, r12
    529e:	b5 01       	movw	r22, r10
    52a0:	2d e1       	ldi	r18, 0x1D	; 29
    52a2:	33 ef       	ldi	r19, 0xF3	; 243
    52a4:	41 e0       	ldi	r20, 0x01	; 1
    52a6:	50 e0       	ldi	r21, 0x00	; 0
    52a8:	e8 d1       	rcall	.+976    	; 0x567a <__divmodsi4>
    52aa:	27 ea       	ldi	r18, 0xA7	; 167
    52ac:	31 e4       	ldi	r19, 0x41	; 65
    52ae:	40 e0       	ldi	r20, 0x00	; 0
    52b0:	50 e0       	ldi	r21, 0x00	; 0
    52b2:	39 de       	rcall	.-910    	; 0x4f26 <__mulsi3>
    52b4:	7b 01       	movw	r14, r22
    52b6:	8c 01       	movw	r16, r24
    52b8:	c6 01       	movw	r24, r12
    52ba:	b5 01       	movw	r22, r10
    52bc:	2d e1       	ldi	r18, 0x1D	; 29
    52be:	33 ef       	ldi	r19, 0xF3	; 243
    52c0:	41 e0       	ldi	r20, 0x01	; 1
    52c2:	50 e0       	ldi	r21, 0x00	; 0
    52c4:	da d1       	rcall	.+948    	; 0x567a <__divmodsi4>
    52c6:	ca 01       	movw	r24, r20
    52c8:	b9 01       	movw	r22, r18
    52ca:	2c ee       	ldi	r18, 0xEC	; 236
    52cc:	34 ef       	ldi	r19, 0xF4	; 244
    52ce:	4f ef       	ldi	r20, 0xFF	; 255
    52d0:	5f ef       	ldi	r21, 0xFF	; 255
    52d2:	29 de       	rcall	.-942    	; 0x4f26 <__mulsi3>
    52d4:	6e 0d       	add	r22, r14
    52d6:	7f 1d       	adc	r23, r15
    52d8:	80 1f       	adc	r24, r16
    52da:	91 1f       	adc	r25, r17
    52dc:	97 ff       	sbrs	r25, 7
    52de:	04 c0       	rjmp	.+8      	; 0x52e8 <do_rand+0x7a>
    52e0:	61 50       	subi	r22, 0x01	; 1
    52e2:	70 40       	sbci	r23, 0x00	; 0
    52e4:	80 40       	sbci	r24, 0x00	; 0
    52e6:	90 48       	sbci	r25, 0x80	; 128
    52e8:	68 83       	st	Y, r22
    52ea:	79 83       	std	Y+1, r23	; 0x01
    52ec:	8a 83       	std	Y+2, r24	; 0x02
    52ee:	9b 83       	std	Y+3, r25	; 0x03
    52f0:	9b 01       	movw	r18, r22
    52f2:	3f 77       	andi	r19, 0x7F	; 127
    52f4:	c9 01       	movw	r24, r18
    52f6:	cd b7       	in	r28, 0x3d	; 61
    52f8:	de b7       	in	r29, 0x3e	; 62
    52fa:	ea e0       	ldi	r30, 0x0A	; 10
    52fc:	8c ce       	rjmp	.-744    	; 0x5016 <__epilogue_restores__+0x10>

000052fe <rand_r>:
    52fe:	b7 df       	rcall	.-146    	; 0x526e <do_rand>
    5300:	08 95       	ret

00005302 <rand>:
    5302:	82 ea       	ldi	r24, 0xA2	; 162
    5304:	91 e0       	ldi	r25, 0x01	; 1
    5306:	b3 df       	rcall	.-154    	; 0x526e <do_rand>
    5308:	08 95       	ret

0000530a <srand>:
    530a:	a0 e0       	ldi	r26, 0x00	; 0
    530c:	b0 e0       	ldi	r27, 0x00	; 0
    530e:	80 93 a2 01 	sts	0x01A2, r24
    5312:	90 93 a3 01 	sts	0x01A3, r25
    5316:	a0 93 a4 01 	sts	0x01A4, r26
    531a:	b0 93 a5 01 	sts	0x01A5, r27
    531e:	08 95       	ret

00005320 <__ftoa_engine>:
    5320:	28 30       	cpi	r18, 0x08	; 8
    5322:	08 f0       	brcs	.+2      	; 0x5326 <__ftoa_engine+0x6>
    5324:	27 e0       	ldi	r18, 0x07	; 7
    5326:	33 27       	eor	r19, r19
    5328:	da 01       	movw	r26, r20
    532a:	99 0f       	add	r25, r25
    532c:	31 1d       	adc	r19, r1
    532e:	87 fd       	sbrc	r24, 7
    5330:	91 60       	ori	r25, 0x01	; 1
    5332:	00 96       	adiw	r24, 0x00	; 0
    5334:	61 05       	cpc	r22, r1
    5336:	71 05       	cpc	r23, r1
    5338:	39 f4       	brne	.+14     	; 0x5348 <__ftoa_engine+0x28>
    533a:	32 60       	ori	r19, 0x02	; 2
    533c:	2e 5f       	subi	r18, 0xFE	; 254
    533e:	3d 93       	st	X+, r19
    5340:	30 e3       	ldi	r19, 0x30	; 48
    5342:	2a 95       	dec	r18
    5344:	e1 f7       	brne	.-8      	; 0x533e <__ftoa_engine+0x1e>
    5346:	08 95       	ret
    5348:	9f 3f       	cpi	r25, 0xFF	; 255
    534a:	30 f0       	brcs	.+12     	; 0x5358 <__ftoa_engine+0x38>
    534c:	80 38       	cpi	r24, 0x80	; 128
    534e:	71 05       	cpc	r23, r1
    5350:	61 05       	cpc	r22, r1
    5352:	09 f0       	breq	.+2      	; 0x5356 <__ftoa_engine+0x36>
    5354:	3c 5f       	subi	r19, 0xFC	; 252
    5356:	3c 5f       	subi	r19, 0xFC	; 252
    5358:	3d 93       	st	X+, r19
    535a:	91 30       	cpi	r25, 0x01	; 1
    535c:	08 f0       	brcs	.+2      	; 0x5360 <__ftoa_engine+0x40>
    535e:	80 68       	ori	r24, 0x80	; 128
    5360:	91 1d       	adc	r25, r1
    5362:	df 93       	push	r29
    5364:	cf 93       	push	r28
    5366:	1f 93       	push	r17
    5368:	0f 93       	push	r16
    536a:	ff 92       	push	r15
    536c:	ef 92       	push	r14
    536e:	19 2f       	mov	r17, r25
    5370:	98 7f       	andi	r25, 0xF8	; 248
    5372:	96 95       	lsr	r25
    5374:	e9 2f       	mov	r30, r25
    5376:	96 95       	lsr	r25
    5378:	96 95       	lsr	r25
    537a:	e9 0f       	add	r30, r25
    537c:	ff 27       	eor	r31, r31
    537e:	ef 53       	subi	r30, 0x3F	; 63
    5380:	fa 4f       	sbci	r31, 0xFA	; 250
    5382:	99 27       	eor	r25, r25
    5384:	33 27       	eor	r19, r19
    5386:	ee 24       	eor	r14, r14
    5388:	ff 24       	eor	r15, r15
    538a:	a7 01       	movw	r20, r14
    538c:	e7 01       	movw	r28, r14
    538e:	05 90       	lpm	r0, Z+
    5390:	08 94       	sec
    5392:	07 94       	ror	r0
    5394:	28 f4       	brcc	.+10     	; 0x53a0 <__ftoa_engine+0x80>
    5396:	36 0f       	add	r19, r22
    5398:	e7 1e       	adc	r14, r23
    539a:	f8 1e       	adc	r15, r24
    539c:	49 1f       	adc	r20, r25
    539e:	51 1d       	adc	r21, r1
    53a0:	66 0f       	add	r22, r22
    53a2:	77 1f       	adc	r23, r23
    53a4:	88 1f       	adc	r24, r24
    53a6:	99 1f       	adc	r25, r25
    53a8:	06 94       	lsr	r0
    53aa:	a1 f7       	brne	.-24     	; 0x5394 <__ftoa_engine+0x74>
    53ac:	05 90       	lpm	r0, Z+
    53ae:	07 94       	ror	r0
    53b0:	28 f4       	brcc	.+10     	; 0x53bc <__ftoa_engine+0x9c>
    53b2:	e7 0e       	add	r14, r23
    53b4:	f8 1e       	adc	r15, r24
    53b6:	49 1f       	adc	r20, r25
    53b8:	56 1f       	adc	r21, r22
    53ba:	c1 1d       	adc	r28, r1
    53bc:	77 0f       	add	r23, r23
    53be:	88 1f       	adc	r24, r24
    53c0:	99 1f       	adc	r25, r25
    53c2:	66 1f       	adc	r22, r22
    53c4:	06 94       	lsr	r0
    53c6:	a1 f7       	brne	.-24     	; 0x53b0 <__ftoa_engine+0x90>
    53c8:	05 90       	lpm	r0, Z+
    53ca:	07 94       	ror	r0
    53cc:	28 f4       	brcc	.+10     	; 0x53d8 <__ftoa_engine+0xb8>
    53ce:	f8 0e       	add	r15, r24
    53d0:	49 1f       	adc	r20, r25
    53d2:	56 1f       	adc	r21, r22
    53d4:	c7 1f       	adc	r28, r23
    53d6:	d1 1d       	adc	r29, r1
    53d8:	88 0f       	add	r24, r24
    53da:	99 1f       	adc	r25, r25
    53dc:	66 1f       	adc	r22, r22
    53de:	77 1f       	adc	r23, r23
    53e0:	06 94       	lsr	r0
    53e2:	a1 f7       	brne	.-24     	; 0x53cc <__ftoa_engine+0xac>
    53e4:	05 90       	lpm	r0, Z+
    53e6:	07 94       	ror	r0
    53e8:	20 f4       	brcc	.+8      	; 0x53f2 <__ftoa_engine+0xd2>
    53ea:	49 0f       	add	r20, r25
    53ec:	56 1f       	adc	r21, r22
    53ee:	c7 1f       	adc	r28, r23
    53f0:	d8 1f       	adc	r29, r24
    53f2:	99 0f       	add	r25, r25
    53f4:	66 1f       	adc	r22, r22
    53f6:	77 1f       	adc	r23, r23
    53f8:	88 1f       	adc	r24, r24
    53fa:	06 94       	lsr	r0
    53fc:	a9 f7       	brne	.-22     	; 0x53e8 <__ftoa_engine+0xc8>
    53fe:	84 91       	lpm	r24, Z+
    5400:	10 95       	com	r17
    5402:	17 70       	andi	r17, 0x07	; 7
    5404:	41 f0       	breq	.+16     	; 0x5416 <__ftoa_engine+0xf6>
    5406:	d6 95       	lsr	r29
    5408:	c7 95       	ror	r28
    540a:	57 95       	ror	r21
    540c:	47 95       	ror	r20
    540e:	f7 94       	ror	r15
    5410:	e7 94       	ror	r14
    5412:	1a 95       	dec	r17
    5414:	c1 f7       	brne	.-16     	; 0x5406 <__ftoa_engine+0xe6>
    5416:	e7 e6       	ldi	r30, 0x67	; 103
    5418:	f5 e0       	ldi	r31, 0x05	; 5
    541a:	68 94       	set
    541c:	15 90       	lpm	r1, Z+
    541e:	15 91       	lpm	r17, Z+
    5420:	35 91       	lpm	r19, Z+
    5422:	65 91       	lpm	r22, Z+
    5424:	95 91       	lpm	r25, Z+
    5426:	05 90       	lpm	r0, Z+
    5428:	7f e2       	ldi	r23, 0x2F	; 47
    542a:	73 95       	inc	r23
    542c:	e1 18       	sub	r14, r1
    542e:	f1 0a       	sbc	r15, r17
    5430:	43 0b       	sbc	r20, r19
    5432:	56 0b       	sbc	r21, r22
    5434:	c9 0b       	sbc	r28, r25
    5436:	d0 09       	sbc	r29, r0
    5438:	c0 f7       	brcc	.-16     	; 0x542a <__ftoa_engine+0x10a>
    543a:	e1 0c       	add	r14, r1
    543c:	f1 1e       	adc	r15, r17
    543e:	43 1f       	adc	r20, r19
    5440:	56 1f       	adc	r21, r22
    5442:	c9 1f       	adc	r28, r25
    5444:	d0 1d       	adc	r29, r0
    5446:	7e f4       	brtc	.+30     	; 0x5466 <__ftoa_engine+0x146>
    5448:	70 33       	cpi	r23, 0x30	; 48
    544a:	11 f4       	brne	.+4      	; 0x5450 <__ftoa_engine+0x130>
    544c:	8a 95       	dec	r24
    544e:	e6 cf       	rjmp	.-52     	; 0x541c <__ftoa_engine+0xfc>
    5450:	e8 94       	clt
    5452:	01 50       	subi	r16, 0x01	; 1
    5454:	30 f0       	brcs	.+12     	; 0x5462 <__ftoa_engine+0x142>
    5456:	08 0f       	add	r16, r24
    5458:	0a f4       	brpl	.+2      	; 0x545c <__ftoa_engine+0x13c>
    545a:	00 27       	eor	r16, r16
    545c:	02 17       	cp	r16, r18
    545e:	08 f4       	brcc	.+2      	; 0x5462 <__ftoa_engine+0x142>
    5460:	20 2f       	mov	r18, r16
    5462:	23 95       	inc	r18
    5464:	02 2f       	mov	r16, r18
    5466:	7a 33       	cpi	r23, 0x3A	; 58
    5468:	28 f0       	brcs	.+10     	; 0x5474 <__ftoa_engine+0x154>
    546a:	79 e3       	ldi	r23, 0x39	; 57
    546c:	7d 93       	st	X+, r23
    546e:	2a 95       	dec	r18
    5470:	e9 f7       	brne	.-6      	; 0x546c <__ftoa_engine+0x14c>
    5472:	10 c0       	rjmp	.+32     	; 0x5494 <__ftoa_engine+0x174>
    5474:	7d 93       	st	X+, r23
    5476:	2a 95       	dec	r18
    5478:	89 f6       	brne	.-94     	; 0x541c <__ftoa_engine+0xfc>
    547a:	06 94       	lsr	r0
    547c:	97 95       	ror	r25
    547e:	67 95       	ror	r22
    5480:	37 95       	ror	r19
    5482:	17 95       	ror	r17
    5484:	17 94       	ror	r1
    5486:	e1 18       	sub	r14, r1
    5488:	f1 0a       	sbc	r15, r17
    548a:	43 0b       	sbc	r20, r19
    548c:	56 0b       	sbc	r21, r22
    548e:	c9 0b       	sbc	r28, r25
    5490:	d0 09       	sbc	r29, r0
    5492:	98 f0       	brcs	.+38     	; 0x54ba <__ftoa_engine+0x19a>
    5494:	23 95       	inc	r18
    5496:	7e 91       	ld	r23, -X
    5498:	73 95       	inc	r23
    549a:	7a 33       	cpi	r23, 0x3A	; 58
    549c:	08 f0       	brcs	.+2      	; 0x54a0 <__ftoa_engine+0x180>
    549e:	70 e3       	ldi	r23, 0x30	; 48
    54a0:	7c 93       	st	X, r23
    54a2:	20 13       	cpse	r18, r16
    54a4:	b8 f7       	brcc	.-18     	; 0x5494 <__ftoa_engine+0x174>
    54a6:	7e 91       	ld	r23, -X
    54a8:	70 61       	ori	r23, 0x10	; 16
    54aa:	7d 93       	st	X+, r23
    54ac:	30 f0       	brcs	.+12     	; 0x54ba <__ftoa_engine+0x19a>
    54ae:	83 95       	inc	r24
    54b0:	71 e3       	ldi	r23, 0x31	; 49
    54b2:	7d 93       	st	X+, r23
    54b4:	70 e3       	ldi	r23, 0x30	; 48
    54b6:	2a 95       	dec	r18
    54b8:	e1 f7       	brne	.-8      	; 0x54b2 <__ftoa_engine+0x192>
    54ba:	11 24       	eor	r1, r1
    54bc:	ef 90       	pop	r14
    54be:	ff 90       	pop	r15
    54c0:	0f 91       	pop	r16
    54c2:	1f 91       	pop	r17
    54c4:	cf 91       	pop	r28
    54c6:	df 91       	pop	r29
    54c8:	99 27       	eor	r25, r25
    54ca:	87 fd       	sbrc	r24, 7
    54cc:	90 95       	com	r25
    54ce:	08 95       	ret

000054d0 <strnlen_P>:
    54d0:	fc 01       	movw	r30, r24
    54d2:	05 90       	lpm	r0, Z+
    54d4:	61 50       	subi	r22, 0x01	; 1
    54d6:	70 40       	sbci	r23, 0x00	; 0
    54d8:	01 10       	cpse	r0, r1
    54da:	d8 f7       	brcc	.-10     	; 0x54d2 <strnlen_P+0x2>
    54dc:	80 95       	com	r24
    54de:	90 95       	com	r25
    54e0:	8e 0f       	add	r24, r30
    54e2:	9f 1f       	adc	r25, r31
    54e4:	08 95       	ret

000054e6 <strnlen>:
    54e6:	fc 01       	movw	r30, r24
    54e8:	61 50       	subi	r22, 0x01	; 1
    54ea:	70 40       	sbci	r23, 0x00	; 0
    54ec:	01 90       	ld	r0, Z+
    54ee:	01 10       	cpse	r0, r1
    54f0:	d8 f7       	brcc	.-10     	; 0x54e8 <strnlen+0x2>
    54f2:	80 95       	com	r24
    54f4:	90 95       	com	r25
    54f6:	8e 0f       	add	r24, r30
    54f8:	9f 1f       	adc	r25, r31
    54fa:	08 95       	ret

000054fc <fputc>:
    54fc:	0f 93       	push	r16
    54fe:	1f 93       	push	r17
    5500:	cf 93       	push	r28
    5502:	df 93       	push	r29
    5504:	8c 01       	movw	r16, r24
    5506:	eb 01       	movw	r28, r22
    5508:	8b 81       	ldd	r24, Y+3	; 0x03
    550a:	81 ff       	sbrs	r24, 1
    550c:	1b c0       	rjmp	.+54     	; 0x5544 <fputc+0x48>
    550e:	82 ff       	sbrs	r24, 2
    5510:	0d c0       	rjmp	.+26     	; 0x552c <fputc+0x30>
    5512:	2e 81       	ldd	r18, Y+6	; 0x06
    5514:	3f 81       	ldd	r19, Y+7	; 0x07
    5516:	8c 81       	ldd	r24, Y+4	; 0x04
    5518:	9d 81       	ldd	r25, Y+5	; 0x05
    551a:	28 17       	cp	r18, r24
    551c:	39 07       	cpc	r19, r25
    551e:	64 f4       	brge	.+24     	; 0x5538 <fputc+0x3c>
    5520:	e8 81       	ld	r30, Y
    5522:	f9 81       	ldd	r31, Y+1	; 0x01
    5524:	01 93       	st	Z+, r16
    5526:	f9 83       	std	Y+1, r31	; 0x01
    5528:	e8 83       	st	Y, r30
    552a:	06 c0       	rjmp	.+12     	; 0x5538 <fputc+0x3c>
    552c:	e8 85       	ldd	r30, Y+8	; 0x08
    552e:	f9 85       	ldd	r31, Y+9	; 0x09
    5530:	80 2f       	mov	r24, r16
    5532:	09 95       	icall
    5534:	89 2b       	or	r24, r25
    5536:	31 f4       	brne	.+12     	; 0x5544 <fputc+0x48>
    5538:	8e 81       	ldd	r24, Y+6	; 0x06
    553a:	9f 81       	ldd	r25, Y+7	; 0x07
    553c:	01 96       	adiw	r24, 0x01	; 1
    553e:	9f 83       	std	Y+7, r25	; 0x07
    5540:	8e 83       	std	Y+6, r24	; 0x06
    5542:	02 c0       	rjmp	.+4      	; 0x5548 <fputc+0x4c>
    5544:	0f ef       	ldi	r16, 0xFF	; 255
    5546:	1f ef       	ldi	r17, 0xFF	; 255
    5548:	c8 01       	movw	r24, r16
    554a:	df 91       	pop	r29
    554c:	cf 91       	pop	r28
    554e:	1f 91       	pop	r17
    5550:	0f 91       	pop	r16
    5552:	08 95       	ret

00005554 <puts>:
    5554:	0f 93       	push	r16
    5556:	1f 93       	push	r17
    5558:	cf 93       	push	r28
    555a:	df 93       	push	r29
    555c:	8c 01       	movw	r16, r24
    555e:	e0 91 a1 04 	lds	r30, 0x04A1
    5562:	f0 91 a2 04 	lds	r31, 0x04A2
    5566:	83 81       	ldd	r24, Z+3	; 0x03
    5568:	81 ff       	sbrs	r24, 1
    556a:	21 c0       	rjmp	.+66     	; 0x55ae <puts+0x5a>
    556c:	c0 e0       	ldi	r28, 0x00	; 0
    556e:	d0 e0       	ldi	r29, 0x00	; 0
    5570:	0d c0       	rjmp	.+26     	; 0x558c <puts+0x38>
    5572:	e0 91 a1 04 	lds	r30, 0x04A1
    5576:	f0 91 a2 04 	lds	r31, 0x04A2
    557a:	20 85       	ldd	r18, Z+8	; 0x08
    557c:	31 85       	ldd	r19, Z+9	; 0x09
    557e:	bf 01       	movw	r22, r30
    5580:	f9 01       	movw	r30, r18
    5582:	09 95       	icall
    5584:	89 2b       	or	r24, r25
    5586:	11 f0       	breq	.+4      	; 0x558c <puts+0x38>
    5588:	cf ef       	ldi	r28, 0xFF	; 255
    558a:	df ef       	ldi	r29, 0xFF	; 255
    558c:	f8 01       	movw	r30, r16
    558e:	81 91       	ld	r24, Z+
    5590:	8f 01       	movw	r16, r30
    5592:	88 23       	and	r24, r24
    5594:	71 f7       	brne	.-36     	; 0x5572 <puts+0x1e>
    5596:	e0 91 a1 04 	lds	r30, 0x04A1
    559a:	f0 91 a2 04 	lds	r31, 0x04A2
    559e:	20 85       	ldd	r18, Z+8	; 0x08
    55a0:	31 85       	ldd	r19, Z+9	; 0x09
    55a2:	8a e0       	ldi	r24, 0x0A	; 10
    55a4:	bf 01       	movw	r22, r30
    55a6:	f9 01       	movw	r30, r18
    55a8:	09 95       	icall
    55aa:	89 2b       	or	r24, r25
    55ac:	11 f0       	breq	.+4      	; 0x55b2 <puts+0x5e>
    55ae:	cf ef       	ldi	r28, 0xFF	; 255
    55b0:	df ef       	ldi	r29, 0xFF	; 255
    55b2:	ce 01       	movw	r24, r28
    55b4:	df 91       	pop	r29
    55b6:	cf 91       	pop	r28
    55b8:	1f 91       	pop	r17
    55ba:	0f 91       	pop	r16
    55bc:	08 95       	ret

000055be <__ultoa_invert>:
    55be:	fa 01       	movw	r30, r20
    55c0:	aa 27       	eor	r26, r26
    55c2:	28 30       	cpi	r18, 0x08	; 8
    55c4:	51 f1       	breq	.+84     	; 0x561a <__ultoa_invert+0x5c>
    55c6:	20 31       	cpi	r18, 0x10	; 16
    55c8:	81 f1       	breq	.+96     	; 0x562a <__ultoa_invert+0x6c>
    55ca:	e8 94       	clt
    55cc:	6f 93       	push	r22
    55ce:	6e 7f       	andi	r22, 0xFE	; 254
    55d0:	6e 5f       	subi	r22, 0xFE	; 254
    55d2:	7f 4f       	sbci	r23, 0xFF	; 255
    55d4:	8f 4f       	sbci	r24, 0xFF	; 255
    55d6:	9f 4f       	sbci	r25, 0xFF	; 255
    55d8:	af 4f       	sbci	r26, 0xFF	; 255
    55da:	b1 e0       	ldi	r27, 0x01	; 1
    55dc:	3e d0       	rcall	.+124    	; 0x565a <__ultoa_invert+0x9c>
    55de:	b4 e0       	ldi	r27, 0x04	; 4
    55e0:	3c d0       	rcall	.+120    	; 0x565a <__ultoa_invert+0x9c>
    55e2:	67 0f       	add	r22, r23
    55e4:	78 1f       	adc	r23, r24
    55e6:	89 1f       	adc	r24, r25
    55e8:	9a 1f       	adc	r25, r26
    55ea:	a1 1d       	adc	r26, r1
    55ec:	68 0f       	add	r22, r24
    55ee:	79 1f       	adc	r23, r25
    55f0:	8a 1f       	adc	r24, r26
    55f2:	91 1d       	adc	r25, r1
    55f4:	a1 1d       	adc	r26, r1
    55f6:	6a 0f       	add	r22, r26
    55f8:	71 1d       	adc	r23, r1
    55fa:	81 1d       	adc	r24, r1
    55fc:	91 1d       	adc	r25, r1
    55fe:	a1 1d       	adc	r26, r1
    5600:	20 d0       	rcall	.+64     	; 0x5642 <__ultoa_invert+0x84>
    5602:	09 f4       	brne	.+2      	; 0x5606 <__ultoa_invert+0x48>
    5604:	68 94       	set
    5606:	3f 91       	pop	r19
    5608:	2a e0       	ldi	r18, 0x0A	; 10
    560a:	26 9f       	mul	r18, r22
    560c:	11 24       	eor	r1, r1
    560e:	30 19       	sub	r19, r0
    5610:	30 5d       	subi	r19, 0xD0	; 208
    5612:	31 93       	st	Z+, r19
    5614:	de f6       	brtc	.-74     	; 0x55cc <__ultoa_invert+0xe>
    5616:	cf 01       	movw	r24, r30
    5618:	08 95       	ret
    561a:	46 2f       	mov	r20, r22
    561c:	47 70       	andi	r20, 0x07	; 7
    561e:	40 5d       	subi	r20, 0xD0	; 208
    5620:	41 93       	st	Z+, r20
    5622:	b3 e0       	ldi	r27, 0x03	; 3
    5624:	0f d0       	rcall	.+30     	; 0x5644 <__ultoa_invert+0x86>
    5626:	c9 f7       	brne	.-14     	; 0x561a <__ultoa_invert+0x5c>
    5628:	f6 cf       	rjmp	.-20     	; 0x5616 <__ultoa_invert+0x58>
    562a:	46 2f       	mov	r20, r22
    562c:	4f 70       	andi	r20, 0x0F	; 15
    562e:	40 5d       	subi	r20, 0xD0	; 208
    5630:	4a 33       	cpi	r20, 0x3A	; 58
    5632:	18 f0       	brcs	.+6      	; 0x563a <__ultoa_invert+0x7c>
    5634:	49 5d       	subi	r20, 0xD9	; 217
    5636:	31 fd       	sbrc	r19, 1
    5638:	40 52       	subi	r20, 0x20	; 32
    563a:	41 93       	st	Z+, r20
    563c:	02 d0       	rcall	.+4      	; 0x5642 <__ultoa_invert+0x84>
    563e:	a9 f7       	brne	.-22     	; 0x562a <__ultoa_invert+0x6c>
    5640:	ea cf       	rjmp	.-44     	; 0x5616 <__ultoa_invert+0x58>
    5642:	b4 e0       	ldi	r27, 0x04	; 4
    5644:	a6 95       	lsr	r26
    5646:	97 95       	ror	r25
    5648:	87 95       	ror	r24
    564a:	77 95       	ror	r23
    564c:	67 95       	ror	r22
    564e:	ba 95       	dec	r27
    5650:	c9 f7       	brne	.-14     	; 0x5644 <__ultoa_invert+0x86>
    5652:	00 97       	sbiw	r24, 0x00	; 0
    5654:	61 05       	cpc	r22, r1
    5656:	71 05       	cpc	r23, r1
    5658:	08 95       	ret
    565a:	9b 01       	movw	r18, r22
    565c:	ac 01       	movw	r20, r24
    565e:	0a 2e       	mov	r0, r26
    5660:	06 94       	lsr	r0
    5662:	57 95       	ror	r21
    5664:	47 95       	ror	r20
    5666:	37 95       	ror	r19
    5668:	27 95       	ror	r18
    566a:	ba 95       	dec	r27
    566c:	c9 f7       	brne	.-14     	; 0x5660 <__ultoa_invert+0xa2>
    566e:	62 0f       	add	r22, r18
    5670:	73 1f       	adc	r23, r19
    5672:	84 1f       	adc	r24, r20
    5674:	95 1f       	adc	r25, r21
    5676:	a0 1d       	adc	r26, r0
    5678:	08 95       	ret

0000567a <__divmodsi4>:
    567a:	97 fb       	bst	r25, 7
    567c:	09 2e       	mov	r0, r25
    567e:	05 26       	eor	r0, r21
    5680:	0e d0       	rcall	.+28     	; 0x569e <__divmodsi4_neg1>
    5682:	57 fd       	sbrc	r21, 7
    5684:	04 d0       	rcall	.+8      	; 0x568e <__divmodsi4_neg2>
    5686:	81 dc       	rcall	.-1790   	; 0x4f8a <__udivmodsi4>
    5688:	0a d0       	rcall	.+20     	; 0x569e <__divmodsi4_neg1>
    568a:	00 1c       	adc	r0, r0
    568c:	38 f4       	brcc	.+14     	; 0x569c <__divmodsi4_exit>

0000568e <__divmodsi4_neg2>:
    568e:	50 95       	com	r21
    5690:	40 95       	com	r20
    5692:	30 95       	com	r19
    5694:	21 95       	neg	r18
    5696:	3f 4f       	sbci	r19, 0xFF	; 255
    5698:	4f 4f       	sbci	r20, 0xFF	; 255
    569a:	5f 4f       	sbci	r21, 0xFF	; 255

0000569c <__divmodsi4_exit>:
    569c:	08 95       	ret

0000569e <__divmodsi4_neg1>:
    569e:	f6 f7       	brtc	.-4      	; 0x569c <__divmodsi4_exit>
    56a0:	90 95       	com	r25
    56a2:	80 95       	com	r24
    56a4:	70 95       	com	r23
    56a6:	61 95       	neg	r22
    56a8:	7f 4f       	sbci	r23, 0xFF	; 255
    56aa:	8f 4f       	sbci	r24, 0xFF	; 255
    56ac:	9f 4f       	sbci	r25, 0xFF	; 255
    56ae:	08 95       	ret

000056b0 <_exit>:
    56b0:	f8 94       	cli

000056b2 <__stop_program>:
    56b2:	ff cf       	rjmp	.-2      	; 0x56b2 <__stop_program>
