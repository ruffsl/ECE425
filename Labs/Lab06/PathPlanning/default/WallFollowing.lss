
WallFollowing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000118  00800100  0000618e  00006222  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000618e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000030d  00800218  00800218  0000633a  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  0000633a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000003ad  00000000  00000000  0000637a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001279  00000000  00000000  00006727  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000281  00000000  00000000  000079a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ed1  00000000  00000000  00007c21  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000240  00000000  00000000  00008af4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000b98  00000000  00000000  00008d34  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000d61  00000000  00000000  000098cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 31 03 	jmp	0x662	; 0x662 <__ctors_end>
       4:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       8:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      10:	0c 94 97 1c 	jmp	0x392e	; 0x392e <__vector_4>
      14:	0c 94 c0 1c 	jmp	0x3980	; 0x3980 <__vector_5>
      18:	0c 94 e9 1c 	jmp	0x39d2	; 0x39d2 <__vector_6>
      1c:	0c 94 12 1d 	jmp	0x3a24	; 0x3a24 <__vector_7>
      20:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      24:	0c 94 78 1b 	jmp	0x36f0	; 0x36f0 <__vector_9>
      28:	0c 94 a1 1b 	jmp	0x3742	; 0x3742 <__vector_10>
      2c:	0c 94 ca 1b 	jmp	0x3794	; 0x3794 <__vector_11>
      30:	0c 94 45 1c 	jmp	0x388a	; 0x388a <__vector_12>
      34:	0c 94 f3 1b 	jmp	0x37e6	; 0x37e6 <__vector_13>
      38:	0c 94 1c 1c 	jmp	0x3838	; 0x3838 <__vector_14>
      3c:	0c 94 6e 1c 	jmp	0x38dc	; 0x38dc <__vector_15>
      40:	0c 94 fd 1a 	jmp	0x35fa	; 0x35fa <__vector_16>
      44:	0c 94 26 1b 	jmp	0x364c	; 0x364c <__vector_17>
      48:	0c 94 4f 1b 	jmp	0x369e	; 0x369e <__vector_18>
      4c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      50:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      54:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      58:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      5c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      60:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      64:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      68:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      6c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      70:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      74:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      78:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      7c:	62 18       	sub	r6, r2
      7e:	65 18       	sub	r6, r5
      80:	68 18       	sub	r6, r8
      82:	6b 18       	sub	r6, r11
      84:	74 18       	sub	r7, r4
      86:	6e 18       	sub	r6, r14
      88:	71 18       	sub	r7, r1
      8a:	77 18       	sub	r7, r7
      8c:	7a 18       	sub	r7, r10
      8e:	7d 18       	sub	r7, r13
      90:	80 18       	sub	r8, r0
      92:	83 18       	sub	r8, r3
      94:	86 18       	sub	r8, r6
      96:	89 18       	sub	r8, r9
      98:	8c 18       	sub	r8, r12
      9a:	8f 18       	sub	r8, r15
      9c:	92 18       	sub	r9, r2
      9e:	95 18       	sub	r9, r5
      a0:	98 18       	sub	r9, r8
      a2:	a9 18       	sub	r10, r9
      a4:	ac 18       	sub	r10, r12
      a6:	af 18       	sub	r10, r15
      a8:	b2 18       	sub	r11, r2
      aa:	bb 18       	sub	r11, r11
      ac:	b5 18       	sub	r11, r5
      ae:	b8 18       	sub	r11, r8
      b0:	be 18       	sub	r11, r14
      b2:	c1 18       	sub	r12, r1
      b4:	c4 18       	sub	r12, r4
      b6:	c7 18       	sub	r12, r7
      b8:	ca 18       	sub	r12, r10
      ba:	cd 18       	sub	r12, r13
      bc:	d0 18       	sub	r13, r0
      be:	d3 18       	sub	r13, r3
      c0:	d6 18       	sub	r13, r6
      c2:	d9 18       	sub	r13, r9
      c4:	dc 18       	sub	r13, r12
      c6:	df 18       	sub	r13, r15
      c8:	07 63       	ori	r16, 0x37	; 55
      ca:	42 36       	cpi	r20, 0x62	; 98
      cc:	b7 9b       	sbis	0x16, 7	; 22
      ce:	d8 a7       	std	Y+40, r29	; 0x28
      d0:	1a 39       	cpi	r17, 0x9A	; 154
      d2:	68 56       	subi	r22, 0x68	; 104
      d4:	18 ae       	std	Y+56, r1	; 0x38
      d6:	ba ab       	std	Y+50, r27	; 0x32
      d8:	55 8c       	ldd	r5, Z+29	; 0x1d
      da:	1d 3c       	cpi	r17, 0xCD	; 205
      dc:	b7 cc       	rjmp	.-1682   	; 0xfffffa4c <__eeprom_end+0xff7efa4c>
      de:	57 63       	ori	r21, 0x37	; 55
      e0:	bd 6d       	ori	r27, 0xDD	; 221
      e2:	ed fd       	.word	0xfded	; ????
      e4:	75 3e       	cpi	r23, 0xE5	; 229
      e6:	f6 17       	cp	r31, r22
      e8:	72 31       	cpi	r23, 0x12	; 18
      ea:	bf 00       	.word	0x00bf	; ????
      ec:	00 00       	nop
      ee:	80 3f       	cpi	r24, 0xF0	; 240
      f0:	08 00       	.word	0x0008	; ????
      f2:	00 00       	nop
      f4:	be 92       	st	-X, r11
      f6:	24 49       	sbci	r18, 0x94	; 148
      f8:	12 3e       	cpi	r17, 0xE2	; 226
      fa:	ab aa       	std	Y+51, r10	; 0x33
      fc:	aa 2a       	or	r10, r26
      fe:	be cd       	rjmp	.-1156   	; 0xfffffc7c <__eeprom_end+0xff7efc7c>
     100:	cc cc       	rjmp	.-1640   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     102:	4c 3e       	cpi	r20, 0xEC	; 236
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	be ab       	std	Y+54, r27	; 0x36
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	aa 3e       	cpi	r26, 0xEA	; 234
     10e:	00 00       	nop
     110:	00 00       	nop
     112:	bf 00       	.word	0x00bf	; ????
     114:	00 00       	nop
     116:	80 3f       	cpi	r24, 0xF0	; 240
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	00 08       	sbc	r0, r0
     11e:	41 78       	andi	r20, 0x81	; 129
     120:	d3 bb       	out	0x13, r29	; 19
     122:	43 87       	std	Z+11, r20	; 0x0b
     124:	d1 13       	cpse	r29, r17
     126:	3d 19       	sub	r19, r13
     128:	0e 3c       	cpi	r16, 0xCE	; 206
     12a:	c3 bd       	out	0x23, r28	; 35
     12c:	42 82       	std	Z+2, r4	; 0x02
     12e:	ad 2b       	or	r26, r29
     130:	3e 68       	ori	r19, 0x8E	; 142
     132:	ec 82       	std	Y+4, r14	; 0x04
     134:	76 be       	out	0x36, r7	; 54
     136:	d9 8f       	std	Y+25, r29	; 0x19
     138:	e1 a9       	ldd	r30, Z+49	; 0x31
     13a:	3e 4c       	sbci	r19, 0xCE	; 206
     13c:	80 ef       	ldi	r24, 0xF0	; 240
     13e:	ff be       	out	0x3f, r15	; 63
     140:	01 c4       	rjmp	.+2050   	; 0x944 <read_pixel_1+0x44>
     142:	ff 7f       	andi	r31, 0xFF	; 255
     144:	3f 00       	.word	0x003f	; ????
     146:	00 00       	nop
	...

0000014a <char_bitmap>:
     14a:	16 05 01 00 00 00 00 00 00 00 fa 00 00 00 e0 00     ................
     15a:	e0 00 28 fe 28 fe 28 24 54 fe 54 48 c4 c8 10 26     ..(.(.($T.TH...&
     16a:	46 6c 92 aa 44 a0 00 a0 c0 00 00 00 38 44 82 00     Fl..D.......8D..
     17a:	00 82 44 38 00 28 10 7c 10 28 10 10 7c 10 10 00     ..D8.(.|.(..|...
     18a:	0a 0c 00 00 10 10 10 10 10 00 06 06 00 00 04 08     ................
     19a:	10 20 40 7c 8a 92 a2 7c 00 42 fe 02 00 42 86 8a     . @|...|.B...B..
     1aa:	92 62 84 82 a2 d2 8c 18 28 48 fe 08 e4 a2 a2 a2     .b......(H......
     1ba:	9c 3c 52 92 92 0c 80 8e 90 a0 c0 6c 92 92 92 6c     .<R........l...l
     1ca:	60 92 92 94 78 00 6c 6c 00 00 00 6a 6c 00 00 10     `...x.ll...jl...
     1da:	28 44 82 00 28 28 28 28 28 00 82 44 28 10 40 80     (D..(((((..D(.@.
     1ea:	8a 90 60 4c 92 9e 82 7c 7e 88 88 88 7e fe 92 92     ..`L...|~...~...
     1fa:	92 6c 7c 82 82 82 44 fe 82 82 44 38 fe 92 92 92     .l|...D...D8....
     20a:	82 fe 90 90 90 80 7c 82 92 92 5e fe 10 10 10 fe     ......|...^.....
     21a:	00 82 fe 82 00 04 02 82 fc 80 fe 10 28 44 82 fe     ............(D..
     22a:	02 02 02 02 fe 40 30 40 fe fe 20 10 08 fe 7c 82     .....@0@.. ...|.
     23a:	82 82 7c fe 90 90 90 60 7c 82 8a 84 7a fe 90 98     ..|....`|...z...
     24a:	94 62 62 92 92 92 8c 80 80 fe 80 80 fc 02 02 02     .bb.............
     25a:	fc f8 04 02 04 f8 fc 02 1c 02 fc c6 28 10 28 c6     ............(.(.
     26a:	e0 10 0e 10 e0 86 8a 92 a2 c2 00 fe 82 82 00 40     ...............@
     27a:	20 10 08 04 00 82 82 fe 00 20 40 80 40 20 02 02      ........ @.@ ..
     28a:	02 02 02 00 80 40 20 00 04 2a 2a 2a 1e fe 12 22     .....@ ..***..."
     29a:	22 1c 1c 22 22 22 04 1c 22 22 12 fe 1c 2a 2a 2a     ".."""..""...***
     2aa:	18 10 7e 90 80 40 30 4a 4a 4a 7c fe 10 20 20 1e     ..~..@0JJJ|..  .
     2ba:	00 22 be 02 00 04 02 22 bc 00 fe 08 14 22 00 00     ."....."....."..
     2ca:	82 fe 02 00 3e 20 18 20 1e 3e 10 20 20 1e 1c 22     ....> . .>.  .."
     2da:	22 22 1c 3e 28 28 28 10 10 28 28 18 3e 3e 10 20     "".>(((..((.>>. 
     2ea:	20 10 12 2a 2a 2a 04 20 fc 22 02 04 3c 02 02 04      ..***. ."..<...
     2fa:	3e 38 04 02 04 38 3c 02 0c 02 3c 22 14 08 14 22     >8...8<...<"..."
     30a:	30 0a 0a 0a 3c 22 26 2a 32 22 00 10 6c 82 00 00     0...<"&*2"..l...
     31a:	00 fe 00 00 00 82 6c 10 00 08 10 10 08 10 00 00     ......l.........
     32a:	00 00 00 7f 81 81 81 7f 7f 83 83 83 7f 7f 87 87     ................
     33a:	87 7f 7f 8f 8f 8f 7f 7f 9f 9f 9f 7f 7f bf bf bf     ................
     34a:	7f 7f ff ff ff 7f 20 40 ff 40 20 62 15 17 15 65     ...... @.@ b...e
     35a:	00 fb fb 00 00                                      .....

0000035f <CEENBoT_Inc_logo_bitmap>:
     35f:	00 00 00 00 00 c0 ff 03 00 e0 ff 07 00 f0 ff 0f     ................
     36f:	00 f8 ff 1f 00 78 00 1e 00 78 00 1e 00 78 00 1e     .....x...x...x..
     37f:	00 78 00 1e 00 78 00 1e 00 78 00 1e 00 78 00 1e     .x...x...x...x..
     38f:	00 78 00 1e 00 78 00 1e 00 00 00 00 00 00 00 00     .x...x..........
     39f:	00 80 ff 03 00 e0 ff 07 00 f0 ff 0f 00 f8 ff 1f     ................
     3af:	00 f8 3c 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     ..<..x<..x<..x<.
     3bf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     3cf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     3df:	00 00 00 00 00 e0 ff 03 00 f0 ff 07 00 f8 ff 0f     ................
     3ef:	00 f8 ff 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .....x<..x<..x<.
     3ff:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     40f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     41f:	00 00 00 00 00 f8 ff 03 00 f8 ff 0f 00 f8 ff 1f     ................
     42f:	00 f8 ff 1f 00 00 00 1e 00 00 00 1e 00 00 80 1f     ................
     43f:	00 00 f0 1f 00 00 ff 0f 00 e0 ff 07 00 f0 ff 00     ................
     44f:	00 f8 0f 00 00 f8 00 00 00 78 00 00 00 78 00 00     .........x...x..
     45f:	00 f8 ff 1f 00 f8 ff 1f 00 f0 ff 1f 00 e0 ff 1f     ................
	...
     477:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     487:	00 78 00 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x...x<..x<..x<.
     497:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 f8 7e 1f     .x<..x<..x<...~.
     4a7:	00 f8 ff 1f 00 f0 ff 0f 00 e0 e7 03 00 00 00 00     ................
     4b7:	00 00 00 38 00 ee ff 6c 00 2a 80 45 00 3a 00 47     ...8...l.*.E.:.G
     4c7:	fc 03 ff 6c fc 83 ff 39 00 de ff 0b 7c d0 81 0b     ...l...9....|...
     4d7:	fc d0 81 0b c0 d0 81 0b fc d0 81 0b 7c de ff 0b     ............|...
     4e7:	00 82 ff 39 70 02 ff 6c f8 3a 00 47 dc 2a 80 45     ...9p..l.:.G.*.E
     4f7:	cc ee ff 6c cc 00 00 38 00 00 00 00 0c 00 00 1e     ...l...8........
     507:	0c 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     517:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     527:	00 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     537:	00 00 00 5e 00 00 00 40 00 00 00 7c 00 00 00 40     ...^...@...|...@
     547:	00 00 00 40 00 00 00 7c 00 00 00 30 00 00 00 10     ...@...|...0....
     557:	00 00 00 30 00 00 00 7c                             ...0...|

0000055f <__c.1790>:
     55f:	6e 61 6e 00                                         nan.

00000563 <__c.1788>:
     563:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     573:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     583:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     593:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     5a3:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     5b3:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     5c3:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     5d3:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     5e3:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     5f3:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     603:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     613:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     623:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     633:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     643:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     653:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

00000662 <__ctors_end>:
     662:	11 24       	eor	r1, r1
     664:	1f be       	out	0x3f, r1	; 63
     666:	cf ef       	ldi	r28, 0xFF	; 255
     668:	d8 e0       	ldi	r29, 0x08	; 8
     66a:	de bf       	out	0x3e, r29	; 62
     66c:	cd bf       	out	0x3d, r28	; 61

0000066e <__do_copy_data>:
     66e:	12 e0       	ldi	r17, 0x02	; 2
     670:	a0 e0       	ldi	r26, 0x00	; 0
     672:	b1 e0       	ldi	r27, 0x01	; 1
     674:	ee e8       	ldi	r30, 0x8E	; 142
     676:	f1 e6       	ldi	r31, 0x61	; 97
     678:	02 c0       	rjmp	.+4      	; 0x67e <.do_copy_data_start>

0000067a <.do_copy_data_loop>:
     67a:	05 90       	lpm	r0, Z+
     67c:	0d 92       	st	X+, r0

0000067e <.do_copy_data_start>:
     67e:	a8 31       	cpi	r26, 0x18	; 24
     680:	b1 07       	cpc	r27, r17
     682:	d9 f7       	brne	.-10     	; 0x67a <.do_copy_data_loop>

00000684 <__do_clear_bss>:
     684:	15 e0       	ldi	r17, 0x05	; 5
     686:	a8 e1       	ldi	r26, 0x18	; 24
     688:	b2 e0       	ldi	r27, 0x02	; 2
     68a:	01 c0       	rjmp	.+2      	; 0x68e <.do_clear_bss_start>

0000068c <.do_clear_bss_loop>:
     68c:	1d 92       	st	X+, r1

0000068e <.do_clear_bss_start>:
     68e:	a5 32       	cpi	r26, 0x25	; 37
     690:	b1 07       	cpc	r27, r17
     692:	e1 f7       	brne	.-8      	; 0x68c <.do_clear_bss_loop>
     694:	0e 94 0c 13 	call	0x2618	; 0x2618 <main>
     698:	0c 94 c5 30 	jmp	0x618a	; 0x618a <_exit>

0000069c <__bad_interrupt>:
     69c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006a0 <get_ambient_temp>:
* Output Return:	I2C_STATUS
* Overview:			Reads the ambient temperature
********************************************************************/

I2C_STATUS get_ambient_temp( unsigned char *ambient_temp )
{
     6a0:	1f 93       	push	r17
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6a8:	88 e6       	ldi	r24, 0x68	; 104
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     6b0:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     6b2:	88 23       	and	r24, r24
     6b4:	a1 f4       	brne	.+40     	; 0x6de <get_ambient_temp+0x3e>
	{

		// Send the register value (being 1).  This is
		// the register that contains the ambient temperature.
		i2c_stat = I2C_MSTR_send( __TPA81_AMBIENT );
     6b6:	81 e0       	ldi	r24, 0x01	; 1
     6b8:	0e 94 3b 1a 	call	0x3476	; 0x3476 <I2C_MSTR_send>
     6bc:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     6be:	88 23       	and	r24, r24
     6c0:	71 f4       	brne	.+28     	; 0x6de <get_ambient_temp+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     6c2:	88 e6       	ldi	r24, 0x68	; 104
     6c4:	61 e0       	ldi	r22, 0x01	; 1
     6c6:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     6ca:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     6cc:	88 23       	and	r24, r24
     6ce:	39 f4       	brne	.+14     	; 0x6de <get_ambient_temp+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( ambient_temp, FALSE );
     6d0:	ce 01       	movw	r24, r28
     6d2:	60 e0       	ldi	r22, 0x00	; 0
     6d4:	0e 94 0f 1a 	call	0x341e	; 0x341e <I2C_MSTR_get>
     6d8:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     6da:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*ambient_temp = 0;
     6dc:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     6de:	0e 94 a7 1a 	call	0x354e	; 0x354e <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_ambient_temp()
     6e2:	81 2f       	mov	r24, r17
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	1f 91       	pop	r17
     6ea:	08 95       	ret

000006ec <read_pixel_8>:
	return i2c_stat;
}

// get pixel eight
I2C_STATUS read_pixel_8( unsigned char *pixel_8)
{
     6ec:	1f 93       	push	r17
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6f4:	88 e6       	ldi	r24, 0x68	; 104
     6f6:	60 e0       	ldi	r22, 0x00	; 0
     6f8:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     6fc:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     6fe:	88 23       	and	r24, r24
     700:	a1 f4       	brne	.+40     	; 0x72a <read_pixel_8+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX8 );
     702:	89 e0       	ldi	r24, 0x09	; 9
     704:	0e 94 3b 1a 	call	0x3476	; 0x3476 <I2C_MSTR_send>
     708:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     70a:	88 23       	and	r24, r24
     70c:	71 f4       	brne	.+28     	; 0x72a <read_pixel_8+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     70e:	88 e6       	ldi	r24, 0x68	; 104
     710:	61 e0       	ldi	r22, 0x01	; 1
     712:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     716:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     718:	88 23       	and	r24, r24
     71a:	39 f4       	brne	.+14     	; 0x72a <read_pixel_8+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_8, FALSE );
     71c:	ce 01       	movw	r24, r28
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	0e 94 0f 1a 	call	0x341e	; 0x341e <I2C_MSTR_get>
     724:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     726:	81 11       	cpse	r24, r1
					*pixel_8 = 0;
     728:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     72a:	0e 94 a7 1a 	call	0x354e	; 0x354e <I2C_MSTR_stop>
	return i2c_stat;
}
     72e:	81 2f       	mov	r24, r17
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	1f 91       	pop	r17
     736:	08 95       	ret

00000738 <read_pixel_7>:
	return i2c_stat;
}

// get pixel seven
I2C_STATUS read_pixel_7( unsigned char *pixel_7)
{
     738:	1f 93       	push	r17
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     740:	88 e6       	ldi	r24, 0x68	; 104
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     748:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     74a:	88 23       	and	r24, r24
     74c:	a1 f4       	brne	.+40     	; 0x776 <read_pixel_7+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX7 );
     74e:	88 e0       	ldi	r24, 0x08	; 8
     750:	0e 94 3b 1a 	call	0x3476	; 0x3476 <I2C_MSTR_send>
     754:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     756:	88 23       	and	r24, r24
     758:	71 f4       	brne	.+28     	; 0x776 <read_pixel_7+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     75a:	88 e6       	ldi	r24, 0x68	; 104
     75c:	61 e0       	ldi	r22, 0x01	; 1
     75e:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     762:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     764:	88 23       	and	r24, r24
     766:	39 f4       	brne	.+14     	; 0x776 <read_pixel_7+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_7, FALSE );
     768:	ce 01       	movw	r24, r28
     76a:	60 e0       	ldi	r22, 0x00	; 0
     76c:	0e 94 0f 1a 	call	0x341e	; 0x341e <I2C_MSTR_get>
     770:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     772:	81 11       	cpse	r24, r1
					*pixel_7 = 0;
     774:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     776:	0e 94 a7 1a 	call	0x354e	; 0x354e <I2C_MSTR_stop>
	return i2c_stat;
}
     77a:	81 2f       	mov	r24, r17
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	1f 91       	pop	r17
     782:	08 95       	ret

00000784 <read_pixel_6>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel six
I2C_STATUS read_pixel_6( unsigned char *pixel_6)
{
     784:	1f 93       	push	r17
     786:	cf 93       	push	r28
     788:	df 93       	push	r29
     78a:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     78c:	88 e6       	ldi	r24, 0x68	; 104
     78e:	60 e0       	ldi	r22, 0x00	; 0
     790:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     794:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     796:	88 23       	and	r24, r24
     798:	a1 f4       	brne	.+40     	; 0x7c2 <read_pixel_6+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX6 );
     79a:	87 e0       	ldi	r24, 0x07	; 7
     79c:	0e 94 3b 1a 	call	0x3476	; 0x3476 <I2C_MSTR_send>
     7a0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7a2:	88 23       	and	r24, r24
     7a4:	71 f4       	brne	.+28     	; 0x7c2 <read_pixel_6+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7a6:	88 e6       	ldi	r24, 0x68	; 104
     7a8:	61 e0       	ldi	r22, 0x01	; 1
     7aa:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     7ae:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7b0:	88 23       	and	r24, r24
     7b2:	39 f4       	brne	.+14     	; 0x7c2 <read_pixel_6+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_6, FALSE );
     7b4:	ce 01       	movw	r24, r28
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	0e 94 0f 1a 	call	0x341e	; 0x341e <I2C_MSTR_get>
     7bc:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     7be:	81 11       	cpse	r24, r1
					*pixel_6 = 0;
     7c0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     7c2:	0e 94 a7 1a 	call	0x354e	; 0x354e <I2C_MSTR_stop>
	return i2c_stat;
}
     7c6:	81 2f       	mov	r24, r17
     7c8:	df 91       	pop	r29
     7ca:	cf 91       	pop	r28
     7cc:	1f 91       	pop	r17
     7ce:	08 95       	ret

000007d0 <read_pixel_5>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel five
I2C_STATUS read_pixel_5( unsigned char *pixel_5)
{
     7d0:	1f 93       	push	r17
     7d2:	cf 93       	push	r28
     7d4:	df 93       	push	r29
     7d6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     7d8:	88 e6       	ldi	r24, 0x68	; 104
     7da:	60 e0       	ldi	r22, 0x00	; 0
     7dc:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     7e0:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     7e2:	88 23       	and	r24, r24
     7e4:	a1 f4       	brne	.+40     	; 0x80e <read_pixel_5+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX5 );
     7e6:	86 e0       	ldi	r24, 0x06	; 6
     7e8:	0e 94 3b 1a 	call	0x3476	; 0x3476 <I2C_MSTR_send>
     7ec:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7ee:	88 23       	and	r24, r24
     7f0:	71 f4       	brne	.+28     	; 0x80e <read_pixel_5+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7f2:	88 e6       	ldi	r24, 0x68	; 104
     7f4:	61 e0       	ldi	r22, 0x01	; 1
     7f6:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     7fa:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7fc:	88 23       	and	r24, r24
     7fe:	39 f4       	brne	.+14     	; 0x80e <read_pixel_5+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_5, FALSE );
     800:	ce 01       	movw	r24, r28
     802:	60 e0       	ldi	r22, 0x00	; 0
     804:	0e 94 0f 1a 	call	0x341e	; 0x341e <I2C_MSTR_get>
     808:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     80a:	81 11       	cpse	r24, r1
					*pixel_5 = 0;
     80c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     80e:	0e 94 a7 1a 	call	0x354e	; 0x354e <I2C_MSTR_stop>
	return i2c_stat;
}
     812:	81 2f       	mov	r24, r17
     814:	df 91       	pop	r29
     816:	cf 91       	pop	r28
     818:	1f 91       	pop	r17
     81a:	08 95       	ret

0000081c <read_pixel_4>:
	return i2c_stat;
}

// get pixel four
I2C_STATUS read_pixel_4( unsigned char *pixel_4)
{
     81c:	1f 93       	push	r17
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     824:	88 e6       	ldi	r24, 0x68	; 104
     826:	60 e0       	ldi	r22, 0x00	; 0
     828:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     82c:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     82e:	88 23       	and	r24, r24
     830:	a1 f4       	brne	.+40     	; 0x85a <read_pixel_4+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX4 );
     832:	85 e0       	ldi	r24, 0x05	; 5
     834:	0e 94 3b 1a 	call	0x3476	; 0x3476 <I2C_MSTR_send>
     838:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     83a:	88 23       	and	r24, r24
     83c:	71 f4       	brne	.+28     	; 0x85a <read_pixel_4+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     83e:	88 e6       	ldi	r24, 0x68	; 104
     840:	61 e0       	ldi	r22, 0x01	; 1
     842:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     846:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     848:	88 23       	and	r24, r24
     84a:	39 f4       	brne	.+14     	; 0x85a <read_pixel_4+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_4, FALSE );
     84c:	ce 01       	movw	r24, r28
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	0e 94 0f 1a 	call	0x341e	; 0x341e <I2C_MSTR_get>
     854:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     856:	81 11       	cpse	r24, r1
					*pixel_4 = 0;
     858:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     85a:	0e 94 a7 1a 	call	0x354e	; 0x354e <I2C_MSTR_stop>
	return i2c_stat;
}
     85e:	81 2f       	mov	r24, r17
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	1f 91       	pop	r17
     866:	08 95       	ret

00000868 <read_pixel_3>:
	return i2c_stat;
}

// get pixel three
I2C_STATUS read_pixel_3( unsigned char *pixel_3)
{
     868:	1f 93       	push	r17
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     870:	88 e6       	ldi	r24, 0x68	; 104
     872:	60 e0       	ldi	r22, 0x00	; 0
     874:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     878:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     87a:	88 23       	and	r24, r24
     87c:	a1 f4       	brne	.+40     	; 0x8a6 <read_pixel_3+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX3 );
     87e:	84 e0       	ldi	r24, 0x04	; 4
     880:	0e 94 3b 1a 	call	0x3476	; 0x3476 <I2C_MSTR_send>
     884:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     886:	88 23       	and	r24, r24
     888:	71 f4       	brne	.+28     	; 0x8a6 <read_pixel_3+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     88a:	88 e6       	ldi	r24, 0x68	; 104
     88c:	61 e0       	ldi	r22, 0x01	; 1
     88e:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     892:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     894:	88 23       	and	r24, r24
     896:	39 f4       	brne	.+14     	; 0x8a6 <read_pixel_3+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_3, FALSE );
     898:	ce 01       	movw	r24, r28
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	0e 94 0f 1a 	call	0x341e	; 0x341e <I2C_MSTR_get>
     8a0:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8a2:	81 11       	cpse	r24, r1
					*pixel_3 = 0;
     8a4:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     8a6:	0e 94 a7 1a 	call	0x354e	; 0x354e <I2C_MSTR_stop>
	return i2c_stat;
}
     8aa:	81 2f       	mov	r24, r17
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	1f 91       	pop	r17
     8b2:	08 95       	ret

000008b4 <read_pixel_2>:
}


// get pixel two
I2C_STATUS read_pixel_2( unsigned char *pixel_2)
{
     8b4:	1f 93       	push	r17
     8b6:	cf 93       	push	r28
     8b8:	df 93       	push	r29
     8ba:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     8bc:	88 e6       	ldi	r24, 0x68	; 104
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     8c4:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     8c6:	88 23       	and	r24, r24
     8c8:	a1 f4       	brne	.+40     	; 0x8f2 <read_pixel_2+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX2 );
     8ca:	83 e0       	ldi	r24, 0x03	; 3
     8cc:	0e 94 3b 1a 	call	0x3476	; 0x3476 <I2C_MSTR_send>
     8d0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     8d2:	88 23       	and	r24, r24
     8d4:	71 f4       	brne	.+28     	; 0x8f2 <read_pixel_2+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     8d6:	88 e6       	ldi	r24, 0x68	; 104
     8d8:	61 e0       	ldi	r22, 0x01	; 1
     8da:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     8de:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     8e0:	88 23       	and	r24, r24
     8e2:	39 f4       	brne	.+14     	; 0x8f2 <read_pixel_2+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_2, FALSE );
     8e4:	ce 01       	movw	r24, r28
     8e6:	60 e0       	ldi	r22, 0x00	; 0
     8e8:	0e 94 0f 1a 	call	0x341e	; 0x341e <I2C_MSTR_get>
     8ec:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8ee:	81 11       	cpse	r24, r1
					*pixel_2 = 0;
     8f0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     8f2:	0e 94 a7 1a 	call	0x354e	; 0x354e <I2C_MSTR_stop>
	return i2c_stat;
}
     8f6:	81 2f       	mov	r24, r17
     8f8:	df 91       	pop	r29
     8fa:	cf 91       	pop	r28
     8fc:	1f 91       	pop	r17
     8fe:	08 95       	ret

00000900 <read_pixel_1>:
* Output Return:	I2C_STATUS
* Overview:			These are several pixel read values for each of the pixels
********************************************************************/
// get pixel one
I2C_STATUS read_pixel_1( unsigned char *pixel_1)
{
     900:	1f 93       	push	r17
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     908:	88 e6       	ldi	r24, 0x68	; 104
     90a:	60 e0       	ldi	r22, 0x00	; 0
     90c:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     910:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     912:	88 23       	and	r24, r24
     914:	a1 f4       	brne	.+40     	; 0x93e <read_pixel_1+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX1 );
     916:	82 e0       	ldi	r24, 0x02	; 2
     918:	0e 94 3b 1a 	call	0x3476	; 0x3476 <I2C_MSTR_send>
     91c:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     91e:	88 23       	and	r24, r24
     920:	71 f4       	brne	.+28     	; 0x93e <read_pixel_1+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     922:	88 e6       	ldi	r24, 0x68	; 104
     924:	61 e0       	ldi	r22, 0x01	; 1
     926:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     92a:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     92c:	88 23       	and	r24, r24
     92e:	39 f4       	brne	.+14     	; 0x93e <read_pixel_1+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_1, FALSE );
     930:	ce 01       	movw	r24, r28
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	0e 94 0f 1a 	call	0x341e	; 0x341e <I2C_MSTR_get>
     938:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     93a:	81 11       	cpse	r24, r1
					*pixel_1 = 0;
     93c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     93e:	0e 94 a7 1a 	call	0x354e	; 0x354e <I2C_MSTR_stop>
	return i2c_stat;
}
     942:	81 2f       	mov	r24, r17
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	1f 91       	pop	r17
     94a:	08 95       	ret

0000094c <get_revision>:
* Input Variables:	unsigned char revision
* Output Return:	I2C_STATUS
* Overview:			
********************************************************************/
I2C_STATUS get_revision( unsigned char *revision )
{
     94c:	1f 93       	push	r17
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
     952:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     954:	88 e6       	ldi	r24, 0x68	; 104
     956:	60 e0       	ldi	r22, 0x00	; 0
     958:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     95c:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     95e:	88 23       	and	r24, r24
     960:	a1 f4       	brne	.+40     	; 0x98a <get_revision+0x3e>
	{

		// Send the register value (being 0).  This is
		// the register that contains the software revision.
		i2c_stat = I2C_MSTR_send( __TPA81_REVISION );
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	0e 94 3b 1a 	call	0x3476	; 0x3476 <I2C_MSTR_send>
     968:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     96a:	88 23       	and	r24, r24
     96c:	71 f4       	brne	.+28     	; 0x98a <get_revision+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     96e:	88 e6       	ldi	r24, 0x68	; 104
     970:	61 e0       	ldi	r22, 0x01	; 1
     972:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <I2C_MSTR_start>
     976:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     978:	88 23       	and	r24, r24
     97a:	39 f4       	brne	.+14     	; 0x98a <get_revision+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( revision, FALSE );
     97c:	ce 01       	movw	r24, r28
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	0e 94 0f 1a 	call	0x341e	; 0x341e <I2C_MSTR_get>
     984:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     986:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*revision = 0;
     988:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     98a:	0e 94 a7 1a 	call	0x354e	; 0x354e <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_revision()
     98e:	81 2f       	mov	r24, r17
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	1f 91       	pop	r17
     996:	08 95       	ret

00000998 <getBackIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	0e 94 01 13 	call	0x2602	; 0x2602 <ADC_set_VREF>
	// Set the channel we will sample from.
	// Note: Swaped with frount IR for orientation
	ADC_set_channel(IRBACK_CHAN);
     99e:	85 e0       	ldi	r24, 0x05	; 5
     9a0:	0e 94 ca 12 	call	0x2594	; 0x2594 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9a4:	0e 94 ad 12 	call	0x255a	; 0x255a <ADC_sample>
     9a8:	a0 e0       	ldi	r26, 0x00	; 0
     9aa:	b0 e0       	ldi	r27, 0x00	; 0
     9ac:	bc 01       	movw	r22, r24
     9ae:	cd 01       	movw	r24, r26
     9b0:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <__floatunsisf>
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	40 ea       	ldi	r20, 0xA0	; 160
     9ba:	50 e4       	ldi	r21, 0x40	; 64
     9bc:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
     9c0:	9b 01       	movw	r18, r22
     9c2:	ac 01       	movw	r20, r24
     9c4:	60 e0       	ldi	r22, 0x00	; 0
     9c6:	70 e2       	ldi	r23, 0x20	; 32
     9c8:	86 e3       	ldi	r24, 0x36	; 54
     9ca:	95 e4       	ldi	r25, 0x45	; 69
     9cc:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
     9d0:	20 e0       	ldi	r18, 0x00	; 0
     9d2:	30 e0       	ldi	r19, 0x00	; 0
     9d4:	40 e8       	ldi	r20, 0x80	; 128
     9d6:	5f e3       	ldi	r21, 0x3F	; 63
     9d8:	0e 94 cc 25 	call	0x4b98	; 0x4b98 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     9dc:	08 95       	ret

000009de <getFrontIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     9de:	81 e0       	ldi	r24, 0x01	; 1
     9e0:	0e 94 01 13 	call	0x2602	; 0x2602 <ADC_set_VREF>
	// Set the channel we will sample from.
	// Note: Swaped with back IR for orientation
	ADC_set_channel(IRFRONT_CHAN);
     9e4:	87 e0       	ldi	r24, 0x07	; 7
     9e6:	0e 94 ca 12 	call	0x2594	; 0x2594 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9ea:	0e 94 ad 12 	call	0x255a	; 0x255a <ADC_sample>
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	bc 01       	movw	r22, r24
     9f4:	cd 01       	movw	r24, r26
     9f6:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <__floatunsisf>
     9fa:	20 e0       	ldi	r18, 0x00	; 0
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	40 ea       	ldi	r20, 0xA0	; 160
     a00:	50 e4       	ldi	r21, 0x40	; 64
     a02:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
     a06:	9b 01       	movw	r18, r22
     a08:	ac 01       	movw	r20, r24
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	70 e2       	ldi	r23, 0x20	; 32
     a0e:	86 e3       	ldi	r24, 0x36	; 54
     a10:	95 e4       	ldi	r25, 0x45	; 69
     a12:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	40 e8       	ldi	r20, 0x80	; 128
     a1c:	5f e3       	ldi	r21, 0x3F	; 63
     a1e:	0e 94 cc 25 	call	0x4b98	; 0x4b98 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a22:	08 95       	ret

00000a24 <getRightIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	0e 94 01 13 	call	0x2602	; 0x2602 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
     a2a:	83 e0       	ldi	r24, 0x03	; 3
     a2c:	0e 94 ca 12 	call	0x2594	; 0x2594 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a30:	0e 94 ad 12 	call	0x255a	; 0x255a <ADC_sample>
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	bc 01       	movw	r22, r24
     a3a:	cd 01       	movw	r24, r26
     a3c:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <__floatunsisf>
     a40:	20 e0       	ldi	r18, 0x00	; 0
     a42:	30 e0       	ldi	r19, 0x00	; 0
     a44:	40 ea       	ldi	r20, 0xA0	; 160
     a46:	50 e4       	ldi	r21, 0x40	; 64
     a48:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
     a4c:	9b 01       	movw	r18, r22
     a4e:	ac 01       	movw	r20, r24
     a50:	60 e0       	ldi	r22, 0x00	; 0
     a52:	70 e2       	ldi	r23, 0x20	; 32
     a54:	86 e3       	ldi	r24, 0x36	; 54
     a56:	95 e4       	ldi	r25, 0x45	; 69
     a58:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
     a5c:	20 e0       	ldi	r18, 0x00	; 0
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	40 e8       	ldi	r20, 0x80	; 128
     a62:	5f e3       	ldi	r21, 0x3F	; 63
     a64:	0e 94 cc 25 	call	0x4b98	; 0x4b98 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a68:	08 95       	ret

00000a6a <getLeftIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
 	ADC_set_VREF( ADC_VREF_AVCC );
     a6a:	81 e0       	ldi	r24, 0x01	; 1
     a6c:	0e 94 01 13 	call	0x2602	; 0x2602 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
     a70:	84 e0       	ldi	r24, 0x04	; 4
     a72:	0e 94 ca 12 	call	0x2594	; 0x2594 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a76:	0e 94 ad 12 	call	0x255a	; 0x255a <ADC_sample>
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	b0 e0       	ldi	r27, 0x00	; 0
     a7e:	bc 01       	movw	r22, r24
     a80:	cd 01       	movw	r24, r26
     a82:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <__floatunsisf>
     a86:	20 e0       	ldi	r18, 0x00	; 0
     a88:	30 e0       	ldi	r19, 0x00	; 0
     a8a:	40 ea       	ldi	r20, 0xA0	; 160
     a8c:	50 e4       	ldi	r21, 0x40	; 64
     a8e:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
     a92:	9b 01       	movw	r18, r22
     a94:	ac 01       	movw	r20, r24
     a96:	60 e0       	ldi	r22, 0x00	; 0
     a98:	70 e2       	ldi	r23, 0x20	; 32
     a9a:	86 e3       	ldi	r24, 0x36	; 54
     a9c:	95 e4       	ldi	r25, 0x45	; 69
     a9e:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	30 e0       	ldi	r19, 0x00	; 0
     aa6:	40 e8       	ldi	r20, 0x80	; 128
     aa8:	5f e3       	ldi	r21, 0x3F	; 63
     aaa:	0e 94 cc 25 	call	0x4b98	; 0x4b98 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     aae:	08 95       	ret

00000ab0 <getRightLight>:
********************************************************************/
float getRightLight( void )
{
	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	0e 94 01 13 	call	0x2602	; 0x2602 <ADC_set_VREF>
	ADC_set_channel( RIGHT_LIGHT_CHAN );
     ab6:	85 e0       	ldi	r24, 0x05	; 5
     ab8:	0e 94 ca 12 	call	0x2594	; 0x2594 <ADC_set_channel>
	adcsample = ADC_sample();
     abc:	0e 94 ad 12 	call	0x255a	; 0x255a <ADC_sample>
     ac0:	a0 e0       	ldi	r26, 0x00	; 0
     ac2:	b0 e0       	ldi	r27, 0x00	; 0
     ac4:	bc 01       	movw	r22, r24
     ac6:	cd 01       	movw	r24, r26
     ac8:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <__floatunsisf>
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	40 ea       	ldi	r20, 0xA0	; 160
     ad2:	5b e3       	ldi	r21, 0x3B	; 59
     ad4:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
	// LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * ( 5.0 / 1024 );
	// LCD_printf( "right: %f\n",voltage);
	return voltage;
}
     ad8:	08 95       	ret

00000ada <getLeftLight>:
float getLeftLight( void )
{

	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ada:	81 e0       	ldi	r24, 0x01	; 1
     adc:	0e 94 01 13 	call	0x2602	; 0x2602 <ADC_set_VREF>
	ADC_set_channel( LEFT_LIGHT_CHAN );
     ae0:	86 e0       	ldi	r24, 0x06	; 6
     ae2:	0e 94 ca 12 	call	0x2594	; 0x2594 <ADC_set_channel>
	adcsample = ADC_sample();
     ae6:	0e 94 ad 12 	call	0x255a	; 0x255a <ADC_sample>
     aea:	a0 e0       	ldi	r26, 0x00	; 0
     aec:	b0 e0       	ldi	r27, 0x00	; 0
     aee:	bc 01       	movw	r22, r24
     af0:	cd 01       	movw	r24, r26
     af2:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <__floatunsisf>
     af6:	20 e0       	ldi	r18, 0x00	; 0
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	40 ea       	ldi	r20, 0xA0	; 160
     afc:	5b e3       	ldi	r21, 0x3B	; 59
     afe:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * (5.0/ 1024.0 );
	// LCD_printf( "voltage: %f\n",voltage);
	return voltage;
}
     b02:	08 95       	ret

00000b04 <EnterTopoCommand>:
* Input Variables:	none
* Output Return:	int
* Overview:			Use a comment block like this before functions
********************************************************************/
int EnterTopoCommand( void ) 
{
     b04:	0f 93       	push	r16
     b06:	1f 93       	push	r17
    BOOL btnState1, btnState2, btnState3;//local variables - button states
	//int rtnValue=0;//return the button value
	int rtnValue=0;

	if((ATopstat.state=SUBSYS_OPEN))
     b08:	81 e0       	ldi	r24, 0x01	; 1
     b0a:	80 93 b7 02 	sts	0x02B7, r24
	{
       		// Get switch states.
		btnState1 = ATTINY_get_SW_state( ATTINY_SW3 );
     b0e:	80 e0       	ldi	r24, 0x00	; 0
     b10:	0e 94 13 19 	call	0x3226	; 0x3226 <ATTINY_get_SW_state>
     b14:	08 2f       	mov	r16, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
     b16:	81 e0       	ldi	r24, 0x01	; 1
     b18:	0e 94 13 19 	call	0x3226	; 0x3226 <ATTINY_get_SW_state>
     b1c:	18 2f       	mov	r17, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
     b1e:	82 e0       	ldi	r24, 0x02	; 2
     b20:	0e 94 13 19 	call	0x3226	; 0x3226 <ATTINY_get_SW_state>
		if( btnState1 == TRUE ) 
		{
			rtnValue=1;
			}//end if button 1 state open

		if( btnState2 == TRUE ) 
     b24:	11 30       	cpi	r17, 0x01	; 1
     b26:	19 f4       	brne	.+6      	; 0xb2e <EnterTopoCommand+0x2a>
     b28:	22 e0       	ldi	r18, 0x02	; 2
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	06 c0       	rjmp	.+12     	; 0xb3a <EnterTopoCommand+0x36>
     b2e:	20 e0       	ldi	r18, 0x00	; 0
     b30:	30 e0       	ldi	r19, 0x00	; 0
     b32:	01 30       	cpi	r16, 0x01	; 1
     b34:	11 f4       	brne	.+4      	; 0xb3a <EnterTopoCommand+0x36>
     b36:	21 e0       	ldi	r18, 0x01	; 1
     b38:	30 e0       	ldi	r19, 0x00	; 0
		{
			rtnValue=2;
		}//end if btn 2 open

		if ( btnState3 == TRUE ) 
     b3a:	81 30       	cpi	r24, 0x01	; 1
     b3c:	11 f4       	brne	.+4      	; 0xb42 <EnterTopoCommand+0x3e>
     b3e:	23 e0       	ldi	r18, 0x03	; 3
     b40:	30 e0       	ldi	r19, 0x00	; 0
			rtnValue=3;
		}//end if btn 3 open
		return rtnValue;
	}//end AT while

}//end the WaitButton() function
     b42:	c9 01       	movw	r24, r18
     b44:	1f 91       	pop	r17
     b46:	0f 91       	pop	r16
     b48:	08 95       	ret

00000b4a <WaitButton>:
* Input Variables:	none
* Output Return:	int
* Overview:			Use a comment block like this before functions
********************************************************************/
int WaitButton( void ) 
{
     b4a:	ff 92       	push	r15
     b4c:	0f 93       	push	r16
     b4e:	1f 93       	push	r17
     b50:	cf 93       	push	r28
     b52:	df 93       	push	r29
    BOOL btnState1, btnState2, btnState3;//local variables - button states
	//int rtnValue=0;//return the button value
	int rtnValue=0;

	LCD_clear();
     b54:	0e 94 15 13 	call	0x262a	; 0x262a <LCD_clear>

	if((ATopstat.state=SUBSYS_OPEN))
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	80 93 b7 02 	sts	0x02B7, r24
	{
       		// Get switch states.
		btnState1 = ATTINY_get_SW_state( ATTINY_SW3 );
     b5e:	80 e0       	ldi	r24, 0x00	; 0
     b60:	0e 94 13 19 	call	0x3226	; 0x3226 <ATTINY_get_SW_state>
     b64:	18 2f       	mov	r17, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	0e 94 13 19 	call	0x3226	; 0x3226 <ATTINY_get_SW_state>
     b6c:	08 2f       	mov	r16, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
     b6e:	82 e0       	ldi	r24, 0x02	; 2
     b70:	0e 94 13 19 	call	0x3226	; 0x3226 <ATTINY_get_SW_state>
     b74:	f8 2e       	mov	r15, r24
		//LCD_printf("btnStates: %d %d %d \n", btnState1, btnState2, btnState3);

		if( btnState1 == TRUE ) 
     b76:	11 30       	cpi	r17, 0x01	; 1
     b78:	19 f0       	breq	.+6      	; 0xb80 <WaitButton+0x36>
     b7a:	c0 e0       	ldi	r28, 0x00	; 0
     b7c:	d0 e0       	ldi	r29, 0x00	; 0
     b7e:	13 c0       	rjmp	.+38     	; 0xba6 <WaitButton+0x5c>
		{
			LCD_printf( "SW1: Pushed\n");
     b80:	80 e0       	ldi	r24, 0x00	; 0
     b82:	91 e0       	ldi	r25, 0x01	; 1
     b84:	0e 94 17 30 	call	0x602e	; 0x602e <puts>
			// TMRSRVC_delay(500);//wait 1 s

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b00100000 );//turn the red LED on
     b88:	80 e2       	ldi	r24, 0x20	; 32
     b8a:	0e 94 24 14 	call	0x2848	; 0x2848 <LED_set_pattern>
                	TMRSRVC_delay(500);//wait 2 seconds
     b8e:	84 ef       	ldi	r24, 0xF4	; 244
     b90:	91 e0       	ldi	r25, 0x01	; 1
     b92:	0e 94 b0 19 	call	0x3360	; 0x3360 <TMRSRVC_delay>
               		LED_clr_pattern( 0b01000000 );//turn the green LED off
     b96:	80 e4       	ldi	r24, 0x40	; 64
     b98:	0e 94 0f 14 	call	0x281e	; 0x281e <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b9c:	80 e2       	ldi	r24, 0x20	; 32
     b9e:	0e 94 0f 14 	call	0x281e	; 0x281e <LED_clr_pattern>
     ba2:	c1 e0       	ldi	r28, 0x01	; 1
     ba4:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=1;
			}//end if button 1 state open

		if( btnState2 == TRUE ) 
     ba6:	01 30       	cpi	r16, 0x01	; 1
     ba8:	99 f4       	brne	.+38     	; 0xbd0 <WaitButton+0x86>
		{
			LCD_printf( "SW2: Pushed\n");
     baa:	8c e0       	ldi	r24, 0x0C	; 12
     bac:	91 e0       	ldi	r25, 0x01	; 1
     bae:	0e 94 17 30 	call	0x602e	; 0x602e <puts>
			// TMRSRVC_delay(500);//wait 1 s

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     bb2:	80 e4       	ldi	r24, 0x40	; 64
     bb4:	0e 94 24 14 	call	0x2848	; 0x2848 <LED_set_pattern>
                	TMRSRVC_delay(500);//wait 2 seconds
     bb8:	84 ef       	ldi	r24, 0xF4	; 244
     bba:	91 e0       	ldi	r25, 0x01	; 1
     bbc:	0e 94 b0 19 	call	0x3360	; 0x3360 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     bc0:	80 e4       	ldi	r24, 0x40	; 64
     bc2:	0e 94 0f 14 	call	0x281e	; 0x281e <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     bc6:	80 e2       	ldi	r24, 0x20	; 32
     bc8:	0e 94 0f 14 	call	0x281e	; 0x281e <LED_clr_pattern>
     bcc:	c2 e0       	ldi	r28, 0x02	; 2
     bce:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=2;
		}//end if btn 2 open

		if ( btnState3 == TRUE ) 
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	f8 16       	cp	r15, r24
     bd4:	b1 f4       	brne	.+44     	; 0xc02 <WaitButton+0xb8>
		{
			LCD_printf( "SW3: Pushed\n");
     bd6:	88 e1       	ldi	r24, 0x18	; 24
     bd8:	91 e0       	ldi	r25, 0x01	; 1
     bda:	0e 94 17 30 	call	0x602e	; 0x602e <puts>
			// TMRSRVC_delay(500);//wait 1 s

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     bde:	80 e4       	ldi	r24, 0x40	; 64
     be0:	0e 94 24 14 	call	0x2848	; 0x2848 <LED_set_pattern>
                	LED_set_pattern( 0b00100000 );//turn the red LED on
     be4:	80 e2       	ldi	r24, 0x20	; 32
     be6:	0e 94 24 14 	call	0x2848	; 0x2848 <LED_set_pattern>
                	TMRSRVC_delay(500);//wait 2 seconds
     bea:	84 ef       	ldi	r24, 0xF4	; 244
     bec:	91 e0       	ldi	r25, 0x01	; 1
     bee:	0e 94 b0 19 	call	0x3360	; 0x3360 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     bf2:	80 e4       	ldi	r24, 0x40	; 64
     bf4:	0e 94 0f 14 	call	0x281e	; 0x281e <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     bf8:	80 e2       	ldi	r24, 0x20	; 32
     bfa:	0e 94 0f 14 	call	0x281e	; 0x281e <LED_clr_pattern>
     bfe:	c3 e0       	ldi	r28, 0x03	; 3
     c00:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=3;
		}//end if btn 3 open
            	LCD_clear();
     c02:	0e 94 15 13 	call	0x262a	; 0x262a <LCD_clear>
		return rtnValue;
	}//end AT while

}//end the WaitButton() function
     c06:	ce 01       	movw	r24, r28
     c08:	df 91       	pop	r29
     c0a:	cf 91       	pop	r28
     c0c:	1f 91       	pop	r17
     c0e:	0f 91       	pop	r16
     c10:	ff 90       	pop	r15
     c12:	08 95       	ret

00000c14 <prefilter>:
* Overview:			This appies a prefilter to the IR data by
*					storing the history of measurements within the
*					an arrayand calculating a running average
********************************************************************/
void prefilter(char reset)
{	
     c14:	2f 92       	push	r2
     c16:	3f 92       	push	r3
     c18:	4f 92       	push	r4
     c1a:	5f 92       	push	r5
     c1c:	6f 92       	push	r6
     c1e:	7f 92       	push	r7
     c20:	8f 92       	push	r8
     c22:	9f 92       	push	r9
     c24:	af 92       	push	r10
     c26:	bf 92       	push	r11
     c28:	cf 92       	push	r12
     c2a:	df 92       	push	r13
     c2c:	ef 92       	push	r14
     c2e:	ff 92       	push	r15
     c30:	0f 93       	push	r16
     c32:	1f 93       	push	r17
     c34:	df 93       	push	r29
     c36:	cf 93       	push	r28
     c38:	cd b7       	in	r28, 0x3d	; 61
     c3a:	de b7       	in	r29, 0x3e	; 62
     c3c:	64 97       	sbiw	r28, 0x14	; 20
     c3e:	0f b6       	in	r0, 0x3f	; 63
     c40:	f8 94       	cli
     c42:	de bf       	out	0x3e, r29	; 62
     c44:	0f be       	out	0x3f, r0	; 63
     c46:	cd bf       	out	0x3d, r28	; 61
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
     c48:	88 23       	and	r24, r24
     c4a:	39 f5       	brne	.+78     	; 0xc9a <prefilter+0x86>
     c4c:	88 e2       	ldi	r24, 0x28	; 40
     c4e:	93 e0       	ldi	r25, 0x03	; 3
     c50:	9c 8b       	std	Y+20, r25	; 0x14
     c52:	8b 8b       	std	Y+19, r24	; 0x13
     c54:	ab e9       	ldi	r26, 0x9B	; 155
     c56:	b4 e0       	ldi	r27, 0x04	; 4
     c58:	be 83       	std	Y+6, r27	; 0x06
     c5a:	ad 83       	std	Y+5, r26	; 0x05
     c5c:	e1 e2       	ldi	r30, 0x21	; 33
     c5e:	f4 e0       	ldi	r31, 0x04	; 4
     c60:	fc 83       	std	Y+4, r31	; 0x04
     c62:	eb 83       	std	Y+3, r30	; 0x03
     c64:	80 ea       	ldi	r24, 0xA0	; 160
     c66:	93 e0       	ldi	r25, 0x03	; 3
     c68:	9a 83       	std	Y+2, r25	; 0x02
     c6a:	89 83       	std	Y+1, r24	; 0x01
     c6c:	0f 2e       	mov	r0, r31
     c6e:	f0 e0       	ldi	r31, 0x00	; 0
     c70:	2f 2e       	mov	r2, r31
     c72:	f0 e0       	ldi	r31, 0x00	; 0
     c74:	3f 2e       	mov	r3, r31
     c76:	f0 e0       	ldi	r31, 0x00	; 0
     c78:	4f 2e       	mov	r4, r31
     c7a:	f0 e0       	ldi	r31, 0x00	; 0
     c7c:	5f 2e       	mov	r5, r31
     c7e:	f0 2d       	mov	r31, r0
     c80:	2f 86       	std	Y+15, r2	; 0x0f
     c82:	38 8a       	std	Y+16, r3	; 0x10
     c84:	49 8a       	std	Y+17, r4	; 0x11
     c86:	5a 8a       	std	Y+18, r5	; 0x12
     c88:	2b 86       	std	Y+11, r2	; 0x0b
     c8a:	3c 86       	std	Y+12, r3	; 0x0c
     c8c:	4d 86       	std	Y+13, r4	; 0x0d
     c8e:	5e 86       	std	Y+14, r5	; 0x0e
     c90:	2f 82       	std	Y+7, r2	; 0x07
     c92:	38 86       	std	Y+8, r3	; 0x08
     c94:	49 86       	std	Y+9, r4	; 0x09
     c96:	5a 86       	std	Y+10, r5	; 0x0a
     c98:	43 c0       	rjmp	.+134    	; 0xd20 <prefilter+0x10c>
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     c9a:	a0 90 20 02 	lds	r10, 0x0220
     c9e:	b0 90 21 02 	lds	r11, 0x0221
     ca2:	c0 90 22 02 	lds	r12, 0x0222
     ca6:	d0 90 23 02 	lds	r13, 0x0223
			rtIR_old[i] = rtIR;
     caa:	e0 90 24 02 	lds	r14, 0x0224
     cae:	f0 90 25 02 	lds	r15, 0x0225
     cb2:	00 91 26 02 	lds	r16, 0x0226
     cb6:	10 91 27 02 	lds	r17, 0x0227
			ftIR_old[i] = ftIR;
     cba:	20 90 28 02 	lds	r2, 0x0228
     cbe:	30 90 29 02 	lds	r3, 0x0229
     cc2:	40 90 2a 02 	lds	r4, 0x022A
     cc6:	50 90 2b 02 	lds	r5, 0x022B
			bkIR_old[i] = bkIR;
     cca:	20 91 2c 02 	lds	r18, 0x022C
     cce:	30 91 2d 02 	lds	r19, 0x022D
     cd2:	40 91 2e 02 	lds	r20, 0x022E
     cd6:	50 91 2f 02 	lds	r21, 0x022F
     cda:	80 e0       	ldi	r24, 0x00	; 0
     cdc:	90 e0       	ldi	r25, 0x00	; 0
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     cde:	fc 01       	movw	r30, r24
     ce0:	e8 54       	subi	r30, 0x48	; 72
     ce2:	fd 4f       	sbci	r31, 0xFD	; 253
     ce4:	a0 82       	st	Z, r10
     ce6:	b1 82       	std	Z+1, r11	; 0x01
     ce8:	c2 82       	std	Z+2, r12	; 0x02
     cea:	d3 82       	std	Z+3, r13	; 0x03
			rtIR_old[i] = rtIR;
     cec:	fc 01       	movw	r30, r24
     cee:	e5 5d       	subi	r30, 0xD5	; 213
     cf0:	fb 4f       	sbci	r31, 0xFB	; 251
     cf2:	e0 82       	st	Z, r14
     cf4:	f1 82       	std	Z+1, r15	; 0x01
     cf6:	02 83       	std	Z+2, r16	; 0x02
     cf8:	13 83       	std	Z+3, r17	; 0x03
			ftIR_old[i] = ftIR;
     cfa:	fc 01       	movw	r30, r24
     cfc:	ef 54       	subi	r30, 0x4F	; 79
     cfe:	fc 4f       	sbci	r31, 0xFC	; 252
     d00:	20 82       	st	Z, r2
     d02:	31 82       	std	Z+1, r3	; 0x01
     d04:	42 82       	std	Z+2, r4	; 0x02
     d06:	53 82       	std	Z+3, r5	; 0x03
			bkIR_old[i] = bkIR;
     d08:	fc 01       	movw	r30, r24
     d0a:	e0 5d       	subi	r30, 0xD0	; 208
     d0c:	fc 4f       	sbci	r31, 0xFC	; 252
     d0e:	20 83       	st	Z, r18
     d10:	31 83       	std	Z+1, r19	; 0x01
     d12:	42 83       	std	Z+2, r20	; 0x02
     d14:	53 83       	std	Z+3, r21	; 0x03
     d16:	04 96       	adiw	r24, 0x04	; 4
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
     d18:	88 37       	cpi	r24, 0x78	; 120
     d1a:	91 05       	cpc	r25, r1
     d1c:	01 f7       	brne	.-64     	; 0xcde <prefilter+0xca>
     d1e:	96 cf       	rjmp	.-212    	; 0xc4c <prefilter+0x38>
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
	{
		j = i - 1;
		ltIR_old[i] = ltIR_old[j];
     d20:	ab 89       	ldd	r26, Y+19	; 0x13
     d22:	bc 89       	ldd	r27, Y+20	; 0x14
     d24:	2d 91       	ld	r18, X+
     d26:	3d 91       	ld	r19, X+
     d28:	4d 91       	ld	r20, X+
     d2a:	5c 91       	ld	r21, X
     d2c:	13 97       	sbiw	r26, 0x03	; 3
     d2e:	fd 01       	movw	r30, r26
     d30:	24 83       	std	Z+4, r18	; 0x04
     d32:	35 83       	std	Z+5, r19	; 0x05
     d34:	46 83       	std	Z+6, r20	; 0x06
     d36:	57 83       	std	Z+7, r21	; 0x07
		rtIR_old[i] = rtIR_old[j];
     d38:	ad 81       	ldd	r26, Y+5	; 0x05
     d3a:	be 81       	ldd	r27, Y+6	; 0x06
     d3c:	ed 90       	ld	r14, X+
     d3e:	fd 90       	ld	r15, X+
     d40:	0d 91       	ld	r16, X+
     d42:	1c 91       	ld	r17, X
     d44:	13 97       	sbiw	r26, 0x03	; 3
     d46:	fd 01       	movw	r30, r26
     d48:	e4 82       	std	Z+4, r14	; 0x04
     d4a:	f5 82       	std	Z+5, r15	; 0x05
     d4c:	06 83       	std	Z+6, r16	; 0x06
     d4e:	17 83       	std	Z+7, r17	; 0x07
		ftIR_old[i] = ftIR_old[j];
     d50:	ab 81       	ldd	r26, Y+3	; 0x03
     d52:	bc 81       	ldd	r27, Y+4	; 0x04
     d54:	ad 90       	ld	r10, X+
     d56:	bd 90       	ld	r11, X+
     d58:	cd 90       	ld	r12, X+
     d5a:	dc 90       	ld	r13, X
     d5c:	13 97       	sbiw	r26, 0x03	; 3
     d5e:	fd 01       	movw	r30, r26
     d60:	a4 82       	std	Z+4, r10	; 0x04
     d62:	b5 82       	std	Z+5, r11	; 0x05
     d64:	c6 82       	std	Z+6, r12	; 0x06
     d66:	d7 82       	std	Z+7, r13	; 0x07
		bkIR_old[i] = bkIR_old[j];
     d68:	a9 81       	ldd	r26, Y+1	; 0x01
     d6a:	ba 81       	ldd	r27, Y+2	; 0x02
     d6c:	6d 90       	ld	r6, X+
     d6e:	7d 90       	ld	r7, X+
     d70:	8d 90       	ld	r8, X+
     d72:	9c 90       	ld	r9, X
     d74:	13 97       	sbiw	r26, 0x03	; 3
     d76:	fd 01       	movw	r30, r26
     d78:	64 82       	std	Z+4, r6	; 0x04
     d7a:	75 82       	std	Z+5, r7	; 0x05
     d7c:	86 82       	std	Z+6, r8	; 0x06
     d7e:	97 82       	std	Z+7, r9	; 0x07
		ltIR_new += ltIR_old[i];
     d80:	c2 01       	movw	r24, r4
     d82:	b1 01       	movw	r22, r2
     d84:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
     d88:	1b 01       	movw	r2, r22
     d8a:	2c 01       	movw	r4, r24
		rtIR_new += rtIR_old[i];
     d8c:	6f 85       	ldd	r22, Y+15	; 0x0f
     d8e:	78 89       	ldd	r23, Y+16	; 0x10
     d90:	89 89       	ldd	r24, Y+17	; 0x11
     d92:	9a 89       	ldd	r25, Y+18	; 0x12
     d94:	a8 01       	movw	r20, r16
     d96:	97 01       	movw	r18, r14
     d98:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
     d9c:	6f 87       	std	Y+15, r22	; 0x0f
     d9e:	78 8b       	std	Y+16, r23	; 0x10
     da0:	89 8b       	std	Y+17, r24	; 0x11
     da2:	9a 8b       	std	Y+18, r25	; 0x12
		ftIR_new += ftIR_old[i];
     da4:	6b 85       	ldd	r22, Y+11	; 0x0b
     da6:	7c 85       	ldd	r23, Y+12	; 0x0c
     da8:	8d 85       	ldd	r24, Y+13	; 0x0d
     daa:	9e 85       	ldd	r25, Y+14	; 0x0e
     dac:	a6 01       	movw	r20, r12
     dae:	95 01       	movw	r18, r10
     db0:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
     db4:	6b 87       	std	Y+11, r22	; 0x0b
     db6:	7c 87       	std	Y+12, r23	; 0x0c
     db8:	8d 87       	std	Y+13, r24	; 0x0d
     dba:	9e 87       	std	Y+14, r25	; 0x0e
		bkIR_new += bkIR_old[i];
     dbc:	6f 81       	ldd	r22, Y+7	; 0x07
     dbe:	78 85       	ldd	r23, Y+8	; 0x08
     dc0:	89 85       	ldd	r24, Y+9	; 0x09
     dc2:	9a 85       	ldd	r25, Y+10	; 0x0a
     dc4:	a4 01       	movw	r20, r8
     dc6:	93 01       	movw	r18, r6
     dc8:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
     dcc:	6f 83       	std	Y+7, r22	; 0x07
     dce:	78 87       	std	Y+8, r23	; 0x08
     dd0:	89 87       	std	Y+9, r24	; 0x09
     dd2:	9a 87       	std	Y+10, r25	; 0x0a
     dd4:	8b 89       	ldd	r24, Y+19	; 0x13
     dd6:	9c 89       	ldd	r25, Y+20	; 0x14
     dd8:	04 97       	sbiw	r24, 0x04	; 4
     dda:	9c 8b       	std	Y+20, r25	; 0x14
     ddc:	8b 8b       	std	Y+19, r24	; 0x13
     dde:	ad 81       	ldd	r26, Y+5	; 0x05
     de0:	be 81       	ldd	r27, Y+6	; 0x06
     de2:	14 97       	sbiw	r26, 0x04	; 4
     de4:	be 83       	std	Y+6, r27	; 0x06
     de6:	ad 83       	std	Y+5, r26	; 0x05
     de8:	eb 81       	ldd	r30, Y+3	; 0x03
     dea:	fc 81       	ldd	r31, Y+4	; 0x04
     dec:	34 97       	sbiw	r30, 0x04	; 4
     dee:	fc 83       	std	Y+4, r31	; 0x04
     df0:	eb 83       	std	Y+3, r30	; 0x03
     df2:	89 81       	ldd	r24, Y+1	; 0x01
     df4:	9a 81       	ldd	r25, Y+2	; 0x02
     df6:	04 97       	sbiw	r24, 0x04	; 4
     df8:	9a 83       	std	Y+2, r25	; 0x02
     dfa:	89 83       	std	Y+1, r24	; 0x01
	float ftIR_new = 0;
	float bkIR_new = 0;
	
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
     dfc:	ab 89       	ldd	r26, Y+19	; 0x13
     dfe:	bc 89       	ldd	r27, Y+20	; 0x14
     e00:	a0 5b       	subi	r26, 0xB0	; 176
     e02:	b2 40       	sbci	r27, 0x02	; 2
     e04:	09 f0       	breq	.+2      	; 0xe08 <prefilter+0x1f4>
     e06:	8c cf       	rjmp	.-232    	; 0xd20 <prefilter+0x10c>
		bkIR_new += bkIR_old[i];
	}
	
	// Set the current reading to the first element 
	// within the historical array
	ltIR_old[0] = ltIR;
     e08:	80 91 20 02 	lds	r24, 0x0220
     e0c:	90 91 21 02 	lds	r25, 0x0221
     e10:	a0 91 22 02 	lds	r26, 0x0222
     e14:	b0 91 23 02 	lds	r27, 0x0223
     e18:	eb 89       	ldd	r30, Y+19	; 0x13
     e1a:	fc 89       	ldd	r31, Y+20	; 0x14
     e1c:	80 87       	std	Z+8, r24	; 0x08
     e1e:	91 87       	std	Z+9, r25	; 0x09
     e20:	a2 87       	std	Z+10, r26	; 0x0a
     e22:	b3 87       	std	Z+11, r27	; 0x0b
	rtIR_old[0] = rtIR;
     e24:	80 91 24 02 	lds	r24, 0x0224
     e28:	90 91 25 02 	lds	r25, 0x0225
     e2c:	a0 91 26 02 	lds	r26, 0x0226
     e30:	b0 91 27 02 	lds	r27, 0x0227
     e34:	80 93 2b 04 	sts	0x042B, r24
     e38:	90 93 2c 04 	sts	0x042C, r25
     e3c:	a0 93 2d 04 	sts	0x042D, r26
     e40:	b0 93 2e 04 	sts	0x042E, r27
	ftIR_old[0] = ftIR;
     e44:	80 91 28 02 	lds	r24, 0x0228
     e48:	90 91 29 02 	lds	r25, 0x0229
     e4c:	a0 91 2a 02 	lds	r26, 0x022A
     e50:	b0 91 2b 02 	lds	r27, 0x022B
     e54:	80 93 b1 03 	sts	0x03B1, r24
     e58:	90 93 b2 03 	sts	0x03B2, r25
     e5c:	a0 93 b3 03 	sts	0x03B3, r26
     e60:	b0 93 b4 03 	sts	0x03B4, r27
	bkIR_old[0] = bkIR;
     e64:	80 91 2c 02 	lds	r24, 0x022C
     e68:	90 91 2d 02 	lds	r25, 0x022D
     e6c:	a0 91 2e 02 	lds	r26, 0x022E
     e70:	b0 91 2f 02 	lds	r27, 0x022F
     e74:	80 93 30 03 	sts	0x0330, r24
     e78:	90 93 31 03 	sts	0x0331, r25
     e7c:	a0 93 32 03 	sts	0x0332, r26
     e80:	b0 93 33 03 	sts	0x0333, r27
	
	// Calculate the average value within the array
	// and said that as the new current measurement
	ltIR = ltIR_new/PREFILTER_SIZE;
     e84:	c2 01       	movw	r24, r4
     e86:	b1 01       	movw	r22, r2
     e88:	20 e0       	ldi	r18, 0x00	; 0
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	40 ef       	ldi	r20, 0xF0	; 240
     e8e:	51 e4       	ldi	r21, 0x41	; 65
     e90:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
     e94:	60 93 20 02 	sts	0x0220, r22
     e98:	70 93 21 02 	sts	0x0221, r23
     e9c:	80 93 22 02 	sts	0x0222, r24
     ea0:	90 93 23 02 	sts	0x0223, r25
	rtIR = rtIR_new/PREFILTER_SIZE;
     ea4:	6f 85       	ldd	r22, Y+15	; 0x0f
     ea6:	78 89       	ldd	r23, Y+16	; 0x10
     ea8:	89 89       	ldd	r24, Y+17	; 0x11
     eaa:	9a 89       	ldd	r25, Y+18	; 0x12
     eac:	20 e0       	ldi	r18, 0x00	; 0
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	40 ef       	ldi	r20, 0xF0	; 240
     eb2:	51 e4       	ldi	r21, 0x41	; 65
     eb4:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
     eb8:	60 93 24 02 	sts	0x0224, r22
     ebc:	70 93 25 02 	sts	0x0225, r23
     ec0:	80 93 26 02 	sts	0x0226, r24
     ec4:	90 93 27 02 	sts	0x0227, r25
	ftIR = ftIR_new/PREFILTER_SIZE;
     ec8:	6b 85       	ldd	r22, Y+11	; 0x0b
     eca:	7c 85       	ldd	r23, Y+12	; 0x0c
     ecc:	8d 85       	ldd	r24, Y+13	; 0x0d
     ece:	9e 85       	ldd	r25, Y+14	; 0x0e
     ed0:	20 e0       	ldi	r18, 0x00	; 0
     ed2:	30 e0       	ldi	r19, 0x00	; 0
     ed4:	40 ef       	ldi	r20, 0xF0	; 240
     ed6:	51 e4       	ldi	r21, 0x41	; 65
     ed8:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
     edc:	60 93 28 02 	sts	0x0228, r22
     ee0:	70 93 29 02 	sts	0x0229, r23
     ee4:	80 93 2a 02 	sts	0x022A, r24
     ee8:	90 93 2b 02 	sts	0x022B, r25
	bkIR = bkIR_new/PREFILTER_SIZE;
     eec:	6f 81       	ldd	r22, Y+7	; 0x07
     eee:	78 85       	ldd	r23, Y+8	; 0x08
     ef0:	89 85       	ldd	r24, Y+9	; 0x09
     ef2:	9a 85       	ldd	r25, Y+10	; 0x0a
     ef4:	20 e0       	ldi	r18, 0x00	; 0
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	40 ef       	ldi	r20, 0xF0	; 240
     efa:	51 e4       	ldi	r21, 0x41	; 65
     efc:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
     f00:	60 93 2c 02 	sts	0x022C, r22
     f04:	70 93 2d 02 	sts	0x022D, r23
     f08:	80 93 2e 02 	sts	0x022E, r24
     f0c:	90 93 2f 02 	sts	0x022F, r25
}
     f10:	64 96       	adiw	r28, 0x14	; 20
     f12:	0f b6       	in	r0, 0x3f	; 63
     f14:	f8 94       	cli
     f16:	de bf       	out	0x3e, r29	; 62
     f18:	0f be       	out	0x3f, r0	; 63
     f1a:	cd bf       	out	0x3d, r28	; 61
     f1c:	cf 91       	pop	r28
     f1e:	df 91       	pop	r29
     f20:	1f 91       	pop	r17
     f22:	0f 91       	pop	r16
     f24:	ff 90       	pop	r15
     f26:	ef 90       	pop	r14
     f28:	df 90       	pop	r13
     f2a:	cf 90       	pop	r12
     f2c:	bf 90       	pop	r11
     f2e:	af 90       	pop	r10
     f30:	9f 90       	pop	r9
     f32:	8f 90       	pop	r8
     f34:	7f 90       	pop	r7
     f36:	6f 90       	pop	r6
     f38:	5f 90       	pop	r5
     f3a:	4f 90       	pop	r4
     f3c:	3f 90       	pop	r3
     f3e:	2f 90       	pop	r2
     f40:	08 95       	ret

00000f42 <pidController>:
* Output Return:	float
* Overview:			This computes the control effort using a PID 
*					controller approach
********************************************************************/
float pidController(float error, char reset )
{	
     f42:	6f 92       	push	r6
     f44:	7f 92       	push	r7
     f46:	8f 92       	push	r8
     f48:	9f 92       	push	r9
     f4a:	af 92       	push	r10
     f4c:	bf 92       	push	r11
     f4e:	cf 92       	push	r12
     f50:	df 92       	push	r13
     f52:	ef 92       	push	r14
     f54:	ff 92       	push	r15
     f56:	0f 93       	push	r16
     f58:	1f 93       	push	r17
     f5a:	3b 01       	movw	r6, r22
     f5c:	4c 01       	movw	r8, r24
	// Reset the integrator error if specified
	if(reset){
     f5e:	44 23       	and	r20, r20
     f60:	61 f0       	breq	.+24     	; 0xf7a <pidController+0x38>
		Ierror = 0;
     f62:	80 e0       	ldi	r24, 0x00	; 0
     f64:	90 e0       	ldi	r25, 0x00	; 0
     f66:	a0 e0       	ldi	r26, 0x00	; 0
     f68:	b0 e0       	ldi	r27, 0x00	; 0
     f6a:	80 93 18 02 	sts	0x0218, r24
     f6e:	90 93 19 02 	sts	0x0219, r25
     f72:	a0 93 1a 02 	sts	0x021A, r26
     f76:	b0 93 1b 02 	sts	0x021B, r27
	}
	// At the current error to the running sum
	Ierror += error;
     f7a:	c4 01       	movw	r24, r8
     f7c:	b3 01       	movw	r22, r6
     f7e:	20 91 18 02 	lds	r18, 0x0218
     f82:	30 91 19 02 	lds	r19, 0x0219
     f86:	40 91 1a 02 	lds	r20, 0x021A
     f8a:	50 91 1b 02 	lds	r21, 0x021B
     f8e:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
     f92:	5b 01       	movw	r10, r22
     f94:	6c 01       	movw	r12, r24
     f96:	60 93 18 02 	sts	0x0218, r22
     f9a:	70 93 19 02 	sts	0x0219, r23
     f9e:	80 93 1a 02 	sts	0x021A, r24
     fa2:	90 93 1b 02 	sts	0x021B, r25
     fa6:	c4 01       	movw	r24, r8
     fa8:	b3 01       	movw	r22, r6
     faa:	a4 01       	movw	r20, r8
     fac:	93 01       	movw	r18, r6
     fae:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
     fb2:	7b 01       	movw	r14, r22
     fb4:	8c 01       	movw	r16, r24
     fb6:	c4 01       	movw	r24, r8
     fb8:	b3 01       	movw	r22, r6
     fba:	20 91 1c 02 	lds	r18, 0x021C
     fbe:	30 91 1d 02 	lds	r19, 0x021D
     fc2:	40 91 1e 02 	lds	r20, 0x021E
     fc6:	50 91 1f 02 	lds	r21, 0x021F
     fca:	0e 94 cc 25 	call	0x4b98	; 0x4b98 <__subsf3>
     fce:	20 e0       	ldi	r18, 0x00	; 0
     fd0:	30 e0       	ldi	r19, 0x00	; 0
     fd2:	40 e0       	ldi	r20, 0x00	; 0
     fd4:	5f e3       	ldi	r21, 0x3F	; 63
     fd6:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
     fda:	9b 01       	movw	r18, r22
     fdc:	ac 01       	movw	r20, r24
     fde:	c8 01       	movw	r24, r16
     fe0:	b7 01       	movw	r22, r14
     fe2:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
     fe6:	7b 01       	movw	r14, r22
     fe8:	8c 01       	movw	r16, r24
     fea:	c6 01       	movw	r24, r12
     fec:	b5 01       	movw	r22, r10
     fee:	20 e0       	ldi	r18, 0x00	; 0
     ff0:	30 e0       	ldi	r19, 0x00	; 0
     ff2:	40 e0       	ldi	r20, 0x00	; 0
     ff4:	50 e0       	ldi	r21, 0x00	; 0
     ff6:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
     ffa:	9b 01       	movw	r18, r22
     ffc:	ac 01       	movw	r20, r24
     ffe:	c8 01       	movw	r24, r16
    1000:	b7 01       	movw	r22, r14
    1002:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
	
	// Use the PID controller approach to calculate the effort
	float effort = (KP*error) + (KD*(error-error_old)) + (KI*Ierror);
	
	return effort;	
}
    1006:	1f 91       	pop	r17
    1008:	0f 91       	pop	r16
    100a:	ff 90       	pop	r15
    100c:	ef 90       	pop	r14
    100e:	df 90       	pop	r13
    1010:	cf 90       	pop	r12
    1012:	bf 90       	pop	r11
    1014:	af 90       	pop	r10
    1016:	9f 90       	pop	r9
    1018:	8f 90       	pop	r8
    101a:	7f 90       	pop	r7
    101c:	6f 90       	pop	r6
    101e:	08 95       	ret

00001020 <check_threshhold>:
* Output Return:	char
* Overview:			This check the IR values to thresholds
********************************************************************/

char check_threshhold(float F, float B, float L, float R)
{
    1020:	2f 92       	push	r2
    1022:	6f 92       	push	r6
    1024:	7f 92       	push	r7
    1026:	8f 92       	push	r8
    1028:	9f 92       	push	r9
    102a:	af 92       	push	r10
    102c:	bf 92       	push	r11
    102e:	cf 92       	push	r12
    1030:	df 92       	push	r13
    1032:	ef 92       	push	r14
    1034:	ff 92       	push	r15
    1036:	0f 93       	push	r16
    1038:	1f 93       	push	r17
    103a:	df 93       	push	r29
    103c:	cf 93       	push	r28
    103e:	00 d0       	rcall	.+0      	; 0x1040 <check_threshhold+0x20>
    1040:	00 d0       	rcall	.+0      	; 0x1042 <check_threshhold+0x22>
    1042:	cd b7       	in	r28, 0x3d	; 61
    1044:	de b7       	in	r29, 0x3e	; 62
    1046:	69 83       	std	Y+1, r22	; 0x01
    1048:	7a 83       	std	Y+2, r23	; 0x02
    104a:	8b 83       	std	Y+3, r24	; 0x03
    104c:	9c 83       	std	Y+4, r25	; 0x04
	char check = 0;
	check += 0b00000001*(ftIR < F);
    104e:	60 90 28 02 	lds	r6, 0x0228
    1052:	70 90 29 02 	lds	r7, 0x0229
    1056:	80 90 2a 02 	lds	r8, 0x022A
    105a:	90 90 2b 02 	lds	r9, 0x022B
	check += 0b00000010*(bkIR < B);
    105e:	60 91 2c 02 	lds	r22, 0x022C
    1062:	70 91 2d 02 	lds	r23, 0x022D
    1066:	80 91 2e 02 	lds	r24, 0x022E
    106a:	90 91 2f 02 	lds	r25, 0x022F
    106e:	0e 94 31 26 	call	0x4c62	; 0x4c62 <__cmpsf2>
    1072:	28 2e       	mov	r2, r24
    1074:	22 1c       	adc	r2, r2
    1076:	22 24       	eor	r2, r2
    1078:	22 1c       	adc	r2, r2
    107a:	22 0c       	add	r2, r2
	check += 0b00000100*(ltIR < L);
    107c:	60 91 20 02 	lds	r22, 0x0220
    1080:	70 91 21 02 	lds	r23, 0x0221
    1084:	80 91 22 02 	lds	r24, 0x0222
    1088:	90 91 23 02 	lds	r25, 0x0223
    108c:	a8 01       	movw	r20, r16
    108e:	97 01       	movw	r18, r14
    1090:	0e 94 31 26 	call	0x4c62	; 0x4c62 <__cmpsf2>
    1094:	08 2f       	mov	r16, r24
    1096:	00 1f       	adc	r16, r16
    1098:	00 27       	eor	r16, r16
    109a:	00 1f       	adc	r16, r16
    109c:	00 0f       	add	r16, r16
    109e:	00 0f       	add	r16, r16
	check += 0b00001000*(rtIR < R);
    10a0:	60 91 24 02 	lds	r22, 0x0224
    10a4:	70 91 25 02 	lds	r23, 0x0225
    10a8:	80 91 26 02 	lds	r24, 0x0226
    10ac:	90 91 27 02 	lds	r25, 0x0227
    10b0:	a6 01       	movw	r20, r12
    10b2:	95 01       	movw	r18, r10
    10b4:	0e 94 31 26 	call	0x4c62	; 0x4c62 <__cmpsf2>
    10b8:	18 2f       	mov	r17, r24
    10ba:	11 1f       	adc	r17, r17
    10bc:	11 27       	eor	r17, r17
    10be:	11 1f       	adc	r17, r17
    10c0:	11 0f       	add	r17, r17
    10c2:	11 0f       	add	r17, r17
    10c4:	11 0f       	add	r17, r17

char check_threshhold(float F, float B, float L, float R)
{
	char check = 0;
	check += 0b00000001*(ftIR < F);
	check += 0b00000010*(bkIR < B);
    10c6:	ff 24       	eor	r15, r15
    10c8:	c4 01       	movw	r24, r8
    10ca:	b3 01       	movw	r22, r6
    10cc:	29 81       	ldd	r18, Y+1	; 0x01
    10ce:	3a 81       	ldd	r19, Y+2	; 0x02
    10d0:	4b 81       	ldd	r20, Y+3	; 0x03
    10d2:	5c 81       	ldd	r21, Y+4	; 0x04
    10d4:	0e 94 31 26 	call	0x4c62	; 0x4c62 <__cmpsf2>
    10d8:	88 23       	and	r24, r24
    10da:	14 f4       	brge	.+4      	; 0x10e0 <check_threshhold+0xc0>
    10dc:	ff 24       	eor	r15, r15
    10de:	f3 94       	inc	r15
    10e0:	2f 0c       	add	r2, r15
	check += 0b00000100*(ltIR < L);
    10e2:	20 0e       	add	r2, r16
	check += 0b00001000*(rtIR < R);
	return check;	
}
    10e4:	82 2d       	mov	r24, r2
    10e6:	81 0f       	add	r24, r17
    10e8:	0f 90       	pop	r0
    10ea:	0f 90       	pop	r0
    10ec:	0f 90       	pop	r0
    10ee:	0f 90       	pop	r0
    10f0:	cf 91       	pop	r28
    10f2:	df 91       	pop	r29
    10f4:	1f 91       	pop	r17
    10f6:	0f 91       	pop	r16
    10f8:	ff 90       	pop	r15
    10fa:	ef 90       	pop	r14
    10fc:	df 90       	pop	r13
    10fe:	cf 90       	pop	r12
    1100:	bf 90       	pop	r11
    1102:	af 90       	pop	r10
    1104:	9f 90       	pop	r9
    1106:	8f 90       	pop	r8
    1108:	7f 90       	pop	r7
    110a:	6f 90       	pop	r6
    110c:	2f 90       	pop	r2
    110e:	08 95       	ret

00001110 <move_arc__stnb>:
* Input Variables:	char
* Output Return:	int, int, int, int, BOOL
* Overview:			This moves the robot in any arc length
********************************************************************/
char move_arc__stnb(int arc_Radius, int arc_Length, int arc_Speed, int arc_Accel, BOOL arc_Brk)
{
    1110:	2f 92       	push	r2
    1112:	3f 92       	push	r3
    1114:	4f 92       	push	r4
    1116:	5f 92       	push	r5
    1118:	6f 92       	push	r6
    111a:	7f 92       	push	r7
    111c:	8f 92       	push	r8
    111e:	9f 92       	push	r9
    1120:	af 92       	push	r10
    1122:	bf 92       	push	r11
    1124:	cf 92       	push	r12
    1126:	df 92       	push	r13
    1128:	ef 92       	push	r14
    112a:	ff 92       	push	r15
    112c:	0f 93       	push	r16
    112e:	1f 93       	push	r17
    1130:	df 93       	push	r29
    1132:	cf 93       	push	r28
    1134:	cd b7       	in	r28, 0x3d	; 61
    1136:	de b7       	in	r29, 0x3e	; 62
    1138:	64 97       	sbiw	r28, 0x14	; 20
    113a:	0f b6       	in	r0, 0x3f	; 63
    113c:	f8 94       	cli
    113e:	de bf       	out	0x3e, r29	; 62
    1140:	0f be       	out	0x3f, r0	; 63
    1142:	cd bf       	out	0x3d, r28	; 61
    1144:	7c 01       	movw	r14, r24
    1146:	fb 01       	movw	r30, r22
    1148:	5a 01       	movw	r10, r20
    114a:	69 01       	movw	r12, r18
    114c:	20 2e       	mov	r2, r16
	
	BOOL step_Fwd_L = (arc_Length>0);
    114e:	33 24       	eor	r3, r3
    1150:	16 16       	cp	r1, r22
    1152:	17 06       	cpc	r1, r23
    1154:	14 f4       	brge	.+4      	; 0x115a <move_arc__stnb+0x4a>
    1156:	33 24       	eor	r3, r3
    1158:	33 94       	inc	r3
	BOOL step_Fwd_R = (arc_Length>0);
	int step_Num = arc_Length/D_STEP;
    115a:	bf 01       	movw	r22, r30
    115c:	88 27       	eor	r24, r24
    115e:	77 fd       	sbrc	r23, 7
    1160:	80 95       	com	r24
    1162:	98 2f       	mov	r25, r24
    1164:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1168:	69 87       	std	Y+9, r22	; 0x09
    116a:	7a 87       	std	Y+10, r23	; 0x0a
    116c:	8b 87       	std	Y+11, r24	; 0x0b
    116e:	9c 87       	std	Y+12, r25	; 0x0c
	int step_Speed = arc_Speed/D_STEP;
    1170:	b5 01       	movw	r22, r10
    1172:	88 27       	eor	r24, r24
    1174:	77 fd       	sbrc	r23, 7
    1176:	80 95       	com	r24
    1178:	98 2f       	mov	r25, r24
    117a:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    117e:	6d 83       	std	Y+5, r22	; 0x05
    1180:	7e 83       	std	Y+6, r23	; 0x06
    1182:	8f 83       	std	Y+7, r24	; 0x07
    1184:	98 87       	std	Y+8, r25	; 0x08
	int step_Accel = arc_Accel/D_STEP;
    1186:	b6 01       	movw	r22, r12
    1188:	88 27       	eor	r24, r24
    118a:	77 fd       	sbrc	r23, 7
    118c:	80 95       	com	r24
    118e:	98 2f       	mov	r25, r24
    1190:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1194:	69 83       	std	Y+1, r22	; 0x01
    1196:	7a 83       	std	Y+2, r23	; 0x02
    1198:	8b 83       	std	Y+3, r24	; 0x03
    119a:	9c 83       	std	Y+4, r25	; 0x04
		step_Fwd_L, step_Num, step_Speed, step_Accel, arc_Brk, // Left
		step_Fwd_R, step_Num, step_Speed, step_Accel, arc_Brk); // Right
		return SUCCESS;
	}
	
	if(arc_Radius == POINT_TURN){				
    119c:	e1 14       	cp	r14, r1
    119e:	f1 04       	cpc	r15, r1
    11a0:	09 f0       	breq	.+2      	; 0x11a4 <move_arc__stnb+0x94>
    11a2:	51 c0       	rjmp	.+162    	; 0x1246 <move_arc__stnb+0x136>
		STEPPER_move_stnb( STEPPER_BOTH, 
    11a4:	69 85       	ldd	r22, Y+9	; 0x09
    11a6:	7a 85       	ldd	r23, Y+10	; 0x0a
    11a8:	8b 85       	ldd	r24, Y+11	; 0x0b
    11aa:	9c 85       	ldd	r25, Y+12	; 0x0c
    11ac:	2c ed       	ldi	r18, 0xDC	; 220
    11ae:	38 eb       	ldi	r19, 0xB8	; 184
    11b0:	48 e0       	ldi	r20, 0x08	; 8
    11b2:	5e e3       	ldi	r21, 0x3E	; 62
    11b4:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    11b8:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    11bc:	5b 01       	movw	r10, r22
    11be:	6d 81       	ldd	r22, Y+5	; 0x05
    11c0:	7e 81       	ldd	r23, Y+6	; 0x06
    11c2:	8f 81       	ldd	r24, Y+7	; 0x07
    11c4:	98 85       	ldd	r25, Y+8	; 0x08
    11c6:	2c ed       	ldi	r18, 0xDC	; 220
    11c8:	38 eb       	ldi	r19, 0xB8	; 184
    11ca:	48 e0       	ldi	r20, 0x08	; 8
    11cc:	5e e3       	ldi	r21, 0x3E	; 62
    11ce:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    11d2:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    11d6:	8b 01       	movw	r16, r22
    11d8:	69 81       	ldd	r22, Y+1	; 0x01
    11da:	7a 81       	ldd	r23, Y+2	; 0x02
    11dc:	8b 81       	ldd	r24, Y+3	; 0x03
    11de:	9c 81       	ldd	r25, Y+4	; 0x04
    11e0:	2c ed       	ldi	r18, 0xDC	; 220
    11e2:	38 eb       	ldi	r19, 0xB8	; 184
    11e4:	48 e0       	ldi	r20, 0x08	; 8
    11e6:	5e e3       	ldi	r21, 0x3E	; 62
    11e8:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    11ec:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    11f0:	7b 01       	movw	r14, r22
    11f2:	8d b7       	in	r24, 0x3d	; 61
    11f4:	9e b7       	in	r25, 0x3e	; 62
    11f6:	09 97       	sbiw	r24, 0x09	; 9
    11f8:	0f b6       	in	r0, 0x3f	; 63
    11fa:	f8 94       	cli
    11fc:	9e bf       	out	0x3e, r25	; 62
    11fe:	0f be       	out	0x3f, r0	; 63
    1200:	8d bf       	out	0x3d, r24	; 61
    1202:	ed b7       	in	r30, 0x3d	; 61
    1204:	fe b7       	in	r31, 0x3e	; 62
    1206:	31 96       	adiw	r30, 0x01	; 1
    1208:	40 e0       	ldi	r20, 0x00	; 0
    120a:	33 20       	and	r3, r3
    120c:	09 f4       	brne	.+2      	; 0x1210 <move_arc__stnb+0x100>
    120e:	41 e0       	ldi	r20, 0x01	; 1
    1210:	b1 82       	std	Z+1, r11	; 0x01
    1212:	a0 82       	st	Z, r10
    1214:	13 83       	std	Z+3, r17	; 0x03
    1216:	02 83       	std	Z+2, r16	; 0x02
    1218:	f5 82       	std	Z+5, r15	; 0x05
    121a:	e4 82       	std	Z+4, r14	; 0x04
    121c:	26 82       	std	Z+6, r2	; 0x06
    121e:	10 86       	std	Z+8, r1	; 0x08
    1220:	17 82       	std	Z+7, r1	; 0x07
    1222:	81 e0       	ldi	r24, 0x01	; 1
    1224:	62 e0       	ldi	r22, 0x02	; 2
    1226:	95 01       	movw	r18, r10
    1228:	c2 2c       	mov	r12, r2
    122a:	aa 24       	eor	r10, r10
    122c:	bb 24       	eor	r11, r11
    122e:	83 2c       	mov	r8, r3
    1230:	0e 94 f6 15 	call	0x2bec	; 0x2bec <STEPPER_move>
    1234:	ed b7       	in	r30, 0x3d	; 61
    1236:	fe b7       	in	r31, 0x3e	; 62
    1238:	39 96       	adiw	r30, 0x09	; 9
    123a:	0f b6       	in	r0, 0x3f	; 63
    123c:	f8 94       	cli
    123e:	fe bf       	out	0x3e, r31	; 62
    1240:	0f be       	out	0x3f, r0	; 63
    1242:	ed bf       	out	0x3d, r30	; 61
    1244:	ce c1       	rjmp	.+924    	; 0x15e2 <move_arc__stnb+0x4d2>
    1246:	b7 01       	movw	r22, r14
    1248:	88 27       	eor	r24, r24
    124a:	77 fd       	sbrc	r23, 7
    124c:	80 95       	com	r24
    124e:	98 2f       	mov	r25, r24
	int step_Speed_L;
	int step_Speed_R;	
	int step_Accel_L;
	int step_Accel_R;
	
	if(arc_Radius > 0){
    1250:	1e 14       	cp	r1, r14
    1252:	1f 04       	cpc	r1, r15
    1254:	0c f0       	brlt	.+2      	; 0x1258 <move_arc__stnb+0x148>
    1256:	db c0       	rjmp	.+438    	; 0x140e <move_arc__stnb+0x2fe>
		arc_Length_L = arc_Length * (1 - WHEEL_BASE/arc_Radius);
    1258:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    125c:	7b 01       	movw	r14, r22
    125e:	8c 01       	movw	r16, r24
    1260:	66 e6       	ldi	r22, 0x66	; 102
    1262:	76 e6       	ldi	r23, 0x66	; 102
    1264:	8a ea       	ldi	r24, 0xAA	; 170
    1266:	91 ec       	ldi	r25, 0xC1	; 193
    1268:	a8 01       	movw	r20, r16
    126a:	97 01       	movw	r18, r14
    126c:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1270:	20 e0       	ldi	r18, 0x00	; 0
    1272:	30 e0       	ldi	r19, 0x00	; 0
    1274:	40 e8       	ldi	r20, 0x80	; 128
    1276:	5f e3       	ldi	r21, 0x3F	; 63
    1278:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
    127c:	5b 01       	movw	r10, r22
    127e:	6c 01       	movw	r12, r24
		arc_Length_R = arc_Length * (1 + WHEEL_BASE/arc_Radius);
    1280:	66 e6       	ldi	r22, 0x66	; 102
    1282:	76 e6       	ldi	r23, 0x66	; 102
    1284:	8a ea       	ldi	r24, 0xAA	; 170
    1286:	91 e4       	ldi	r25, 0x41	; 65
    1288:	a8 01       	movw	r20, r16
    128a:	97 01       	movw	r18, r14
    128c:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1290:	20 e0       	ldi	r18, 0x00	; 0
    1292:	30 e0       	ldi	r19, 0x00	; 0
    1294:	40 e8       	ldi	r20, 0x80	; 128
    1296:	5f e3       	ldi	r21, 0x3F	; 63
    1298:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
    129c:	7b 01       	movw	r14, r22
    129e:	8c 01       	movw	r16, r24
		arc_Accel_L = arc_Accel * (1 - WHEEL_BASE/arc_Radius);
		arc_Accel_R = arc_Accel * (1 + WHEEL_BASE/arc_Radius);
		step_Accel_L = arc_Accel_L/D_STEP;
		step_Accel_R = arc_Accel_R/D_STEP;
		
		STEPPER_move_stnb( STEPPER_BOTH, 
    12a0:	8d b7       	in	r24, 0x3d	; 61
    12a2:	9e b7       	in	r25, 0x3e	; 62
    12a4:	09 97       	sbiw	r24, 0x09	; 9
    12a6:	0f b6       	in	r0, 0x3f	; 63
    12a8:	f8 94       	cli
    12aa:	9e bf       	out	0x3e, r25	; 62
    12ac:	0f be       	out	0x3f, r0	; 63
    12ae:	8d bf       	out	0x3d, r24	; 61
    12b0:	8d b6       	in	r8, 0x3d	; 61
    12b2:	9e b6       	in	r9, 0x3e	; 62
    12b4:	08 94       	sec
    12b6:	81 1c       	adc	r8, r1
    12b8:	91 1c       	adc	r9, r1
    12ba:	69 85       	ldd	r22, Y+9	; 0x09
    12bc:	7a 85       	ldd	r23, Y+10	; 0x0a
    12be:	8b 85       	ldd	r24, Y+11	; 0x0b
    12c0:	9c 85       	ldd	r25, Y+12	; 0x0c
    12c2:	a6 01       	movw	r20, r12
    12c4:	95 01       	movw	r18, r10
    12c6:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    12ca:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    12ce:	88 27       	eor	r24, r24
    12d0:	77 fd       	sbrc	r23, 7
    12d2:	80 95       	com	r24
    12d4:	98 2f       	mov	r25, r24
    12d6:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    12da:	2c ed       	ldi	r18, 0xDC	; 220
    12dc:	38 eb       	ldi	r19, 0xB8	; 184
    12de:	48 e0       	ldi	r20, 0x08	; 8
    12e0:	5e e3       	ldi	r21, 0x3E	; 62
    12e2:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    12e6:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    12ea:	6d 87       	std	Y+13, r22	; 0x0d
    12ec:	7e 87       	std	Y+14, r23	; 0x0e
    12ee:	8f 87       	std	Y+15, r24	; 0x0f
    12f0:	98 8b       	std	Y+16, r25	; 0x10
    12f2:	6d 81       	ldd	r22, Y+5	; 0x05
    12f4:	7e 81       	ldd	r23, Y+6	; 0x06
    12f6:	8f 81       	ldd	r24, Y+7	; 0x07
    12f8:	98 85       	ldd	r25, Y+8	; 0x08
    12fa:	a6 01       	movw	r20, r12
    12fc:	95 01       	movw	r18, r10
    12fe:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    1302:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1306:	88 27       	eor	r24, r24
    1308:	77 fd       	sbrc	r23, 7
    130a:	80 95       	com	r24
    130c:	98 2f       	mov	r25, r24
    130e:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1312:	2c ed       	ldi	r18, 0xDC	; 220
    1314:	38 eb       	ldi	r19, 0xB8	; 184
    1316:	48 e0       	ldi	r20, 0x08	; 8
    1318:	5e e3       	ldi	r21, 0x3E	; 62
    131a:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    131e:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1322:	2b 01       	movw	r4, r22
    1324:	3c 01       	movw	r6, r24
    1326:	69 81       	ldd	r22, Y+1	; 0x01
    1328:	7a 81       	ldd	r23, Y+2	; 0x02
    132a:	8b 81       	ldd	r24, Y+3	; 0x03
    132c:	9c 81       	ldd	r25, Y+4	; 0x04
    132e:	a6 01       	movw	r20, r12
    1330:	95 01       	movw	r18, r10
    1332:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    1336:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    133a:	88 27       	eor	r24, r24
    133c:	77 fd       	sbrc	r23, 7
    133e:	80 95       	com	r24
    1340:	98 2f       	mov	r25, r24
    1342:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1346:	2c ed       	ldi	r18, 0xDC	; 220
    1348:	38 eb       	ldi	r19, 0xB8	; 184
    134a:	48 e0       	ldi	r20, 0x08	; 8
    134c:	5e e3       	ldi	r21, 0x3E	; 62
    134e:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1352:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1356:	5b 01       	movw	r10, r22
    1358:	6c 01       	movw	r12, r24
    135a:	69 85       	ldd	r22, Y+9	; 0x09
    135c:	7a 85       	ldd	r23, Y+10	; 0x0a
    135e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1360:	9c 85       	ldd	r25, Y+12	; 0x0c
    1362:	a8 01       	movw	r20, r16
    1364:	97 01       	movw	r18, r14
    1366:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    136a:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    136e:	88 27       	eor	r24, r24
    1370:	77 fd       	sbrc	r23, 7
    1372:	80 95       	com	r24
    1374:	98 2f       	mov	r25, r24
    1376:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    137a:	2c ed       	ldi	r18, 0xDC	; 220
    137c:	38 eb       	ldi	r19, 0xB8	; 184
    137e:	48 e0       	ldi	r20, 0x08	; 8
    1380:	5e e3       	ldi	r21, 0x3E	; 62
    1382:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1386:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    138a:	f4 01       	movw	r30, r8
    138c:	71 83       	std	Z+1, r23	; 0x01
    138e:	60 83       	st	Z, r22
    1390:	6d 81       	ldd	r22, Y+5	; 0x05
    1392:	7e 81       	ldd	r23, Y+6	; 0x06
    1394:	8f 81       	ldd	r24, Y+7	; 0x07
    1396:	98 85       	ldd	r25, Y+8	; 0x08
    1398:	a8 01       	movw	r20, r16
    139a:	97 01       	movw	r18, r14
    139c:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    13a0:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    13a4:	88 27       	eor	r24, r24
    13a6:	77 fd       	sbrc	r23, 7
    13a8:	80 95       	com	r24
    13aa:	98 2f       	mov	r25, r24
    13ac:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    13b0:	2c ed       	ldi	r18, 0xDC	; 220
    13b2:	38 eb       	ldi	r19, 0xB8	; 184
    13b4:	48 e0       	ldi	r20, 0x08	; 8
    13b6:	5e e3       	ldi	r21, 0x3E	; 62
    13b8:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    13bc:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    13c0:	f4 01       	movw	r30, r8
    13c2:	73 83       	std	Z+3, r23	; 0x03
    13c4:	62 83       	std	Z+2, r22	; 0x02
    13c6:	69 81       	ldd	r22, Y+1	; 0x01
    13c8:	7a 81       	ldd	r23, Y+2	; 0x02
    13ca:	8b 81       	ldd	r24, Y+3	; 0x03
    13cc:	9c 81       	ldd	r25, Y+4	; 0x04
    13ce:	a8 01       	movw	r20, r16
    13d0:	97 01       	movw	r18, r14
    13d2:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    13d6:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    13da:	88 27       	eor	r24, r24
    13dc:	77 fd       	sbrc	r23, 7
    13de:	80 95       	com	r24
    13e0:	98 2f       	mov	r25, r24
    13e2:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    13e6:	2c ed       	ldi	r18, 0xDC	; 220
    13e8:	38 eb       	ldi	r19, 0xB8	; 184
    13ea:	48 e0       	ldi	r20, 0x08	; 8
    13ec:	5e e3       	ldi	r21, 0x3E	; 62
    13ee:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    13f2:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    13f6:	f4 01       	movw	r30, r8
    13f8:	75 83       	std	Z+5, r23	; 0x05
    13fa:	64 83       	std	Z+4, r22	; 0x04
    13fc:	26 82       	std	Z+6, r2	; 0x06
    13fe:	10 86       	std	Z+8, r1	; 0x08
    1400:	17 82       	std	Z+7, r1	; 0x07
    1402:	81 e0       	ldi	r24, 0x01	; 1
    1404:	62 e0       	ldi	r22, 0x02	; 2
    1406:	43 2d       	mov	r20, r3
    1408:	2d 85       	ldd	r18, Y+13	; 0x0d
    140a:	3e 85       	ldd	r19, Y+14	; 0x0e
    140c:	da c0       	rjmp	.+436    	; 0x15c2 <move_arc__stnb+0x4b2>
		step_Fwd_R, step_Num_R, step_Speed_R, step_Accel_R, arc_Brk); // Right
		return SUCCESS;
	}	
	
	if(arc_Radius < 0){
		arc_Length_L = arc_Length * (1 + WHEEL_BASE/arc_Radius);
    140e:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1412:	7b 01       	movw	r14, r22
    1414:	8c 01       	movw	r16, r24
    1416:	66 e6       	ldi	r22, 0x66	; 102
    1418:	76 e6       	ldi	r23, 0x66	; 102
    141a:	8a ea       	ldi	r24, 0xAA	; 170
    141c:	91 e4       	ldi	r25, 0x41	; 65
    141e:	a8 01       	movw	r20, r16
    1420:	97 01       	movw	r18, r14
    1422:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1426:	20 e0       	ldi	r18, 0x00	; 0
    1428:	30 e0       	ldi	r19, 0x00	; 0
    142a:	40 e8       	ldi	r20, 0x80	; 128
    142c:	5f e3       	ldi	r21, 0x3F	; 63
    142e:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
    1432:	5b 01       	movw	r10, r22
    1434:	6c 01       	movw	r12, r24
		arc_Length_R = arc_Length * (1 - WHEEL_BASE/arc_Radius);
    1436:	66 e6       	ldi	r22, 0x66	; 102
    1438:	76 e6       	ldi	r23, 0x66	; 102
    143a:	8a ea       	ldi	r24, 0xAA	; 170
    143c:	91 ec       	ldi	r25, 0xC1	; 193
    143e:	a8 01       	movw	r20, r16
    1440:	97 01       	movw	r18, r14
    1442:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1446:	20 e0       	ldi	r18, 0x00	; 0
    1448:	30 e0       	ldi	r19, 0x00	; 0
    144a:	40 e8       	ldi	r20, 0x80	; 128
    144c:	5f e3       	ldi	r21, 0x3F	; 63
    144e:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
    1452:	7b 01       	movw	r14, r22
    1454:	8c 01       	movw	r16, r24
		arc_Accel_L = arc_Accel * (1 + WHEEL_BASE/arc_Radius);
		arc_Accel_R = arc_Accel * (1 - WHEEL_BASE/arc_Radius);
		step_Accel_L = arc_Accel_L/D_STEP;
		step_Accel_R = arc_Accel_R/D_STEP;
		
		STEPPER_move_stnb( STEPPER_BOTH, 
    1456:	ed b7       	in	r30, 0x3d	; 61
    1458:	fe b7       	in	r31, 0x3e	; 62
    145a:	39 97       	sbiw	r30, 0x09	; 9
    145c:	0f b6       	in	r0, 0x3f	; 63
    145e:	f8 94       	cli
    1460:	fe bf       	out	0x3e, r31	; 62
    1462:	0f be       	out	0x3f, r0	; 63
    1464:	ed bf       	out	0x3d, r30	; 61
    1466:	8d b6       	in	r8, 0x3d	; 61
    1468:	9e b6       	in	r9, 0x3e	; 62
    146a:	08 94       	sec
    146c:	81 1c       	adc	r8, r1
    146e:	91 1c       	adc	r9, r1
    1470:	69 85       	ldd	r22, Y+9	; 0x09
    1472:	7a 85       	ldd	r23, Y+10	; 0x0a
    1474:	8b 85       	ldd	r24, Y+11	; 0x0b
    1476:	9c 85       	ldd	r25, Y+12	; 0x0c
    1478:	a6 01       	movw	r20, r12
    147a:	95 01       	movw	r18, r10
    147c:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    1480:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1484:	88 27       	eor	r24, r24
    1486:	77 fd       	sbrc	r23, 7
    1488:	80 95       	com	r24
    148a:	98 2f       	mov	r25, r24
    148c:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1490:	2c ed       	ldi	r18, 0xDC	; 220
    1492:	38 eb       	ldi	r19, 0xB8	; 184
    1494:	48 e0       	ldi	r20, 0x08	; 8
    1496:	5e e3       	ldi	r21, 0x3E	; 62
    1498:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    149c:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    14a0:	69 8b       	std	Y+17, r22	; 0x11
    14a2:	7a 8b       	std	Y+18, r23	; 0x12
    14a4:	8b 8b       	std	Y+19, r24	; 0x13
    14a6:	9c 8b       	std	Y+20, r25	; 0x14
    14a8:	6d 81       	ldd	r22, Y+5	; 0x05
    14aa:	7e 81       	ldd	r23, Y+6	; 0x06
    14ac:	8f 81       	ldd	r24, Y+7	; 0x07
    14ae:	98 85       	ldd	r25, Y+8	; 0x08
    14b0:	a6 01       	movw	r20, r12
    14b2:	95 01       	movw	r18, r10
    14b4:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    14b8:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    14bc:	88 27       	eor	r24, r24
    14be:	77 fd       	sbrc	r23, 7
    14c0:	80 95       	com	r24
    14c2:	98 2f       	mov	r25, r24
    14c4:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    14c8:	2c ed       	ldi	r18, 0xDC	; 220
    14ca:	38 eb       	ldi	r19, 0xB8	; 184
    14cc:	48 e0       	ldi	r20, 0x08	; 8
    14ce:	5e e3       	ldi	r21, 0x3E	; 62
    14d0:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    14d4:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    14d8:	2b 01       	movw	r4, r22
    14da:	3c 01       	movw	r6, r24
    14dc:	69 81       	ldd	r22, Y+1	; 0x01
    14de:	7a 81       	ldd	r23, Y+2	; 0x02
    14e0:	8b 81       	ldd	r24, Y+3	; 0x03
    14e2:	9c 81       	ldd	r25, Y+4	; 0x04
    14e4:	a6 01       	movw	r20, r12
    14e6:	95 01       	movw	r18, r10
    14e8:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    14ec:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    14f0:	88 27       	eor	r24, r24
    14f2:	77 fd       	sbrc	r23, 7
    14f4:	80 95       	com	r24
    14f6:	98 2f       	mov	r25, r24
    14f8:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    14fc:	2c ed       	ldi	r18, 0xDC	; 220
    14fe:	38 eb       	ldi	r19, 0xB8	; 184
    1500:	48 e0       	ldi	r20, 0x08	; 8
    1502:	5e e3       	ldi	r21, 0x3E	; 62
    1504:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1508:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    150c:	5b 01       	movw	r10, r22
    150e:	6c 01       	movw	r12, r24
    1510:	69 85       	ldd	r22, Y+9	; 0x09
    1512:	7a 85       	ldd	r23, Y+10	; 0x0a
    1514:	8b 85       	ldd	r24, Y+11	; 0x0b
    1516:	9c 85       	ldd	r25, Y+12	; 0x0c
    1518:	a8 01       	movw	r20, r16
    151a:	97 01       	movw	r18, r14
    151c:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    1520:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1524:	88 27       	eor	r24, r24
    1526:	77 fd       	sbrc	r23, 7
    1528:	80 95       	com	r24
    152a:	98 2f       	mov	r25, r24
    152c:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1530:	2c ed       	ldi	r18, 0xDC	; 220
    1532:	38 eb       	ldi	r19, 0xB8	; 184
    1534:	48 e0       	ldi	r20, 0x08	; 8
    1536:	5e e3       	ldi	r21, 0x3E	; 62
    1538:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    153c:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1540:	f4 01       	movw	r30, r8
    1542:	71 83       	std	Z+1, r23	; 0x01
    1544:	60 83       	st	Z, r22
    1546:	6d 81       	ldd	r22, Y+5	; 0x05
    1548:	7e 81       	ldd	r23, Y+6	; 0x06
    154a:	8f 81       	ldd	r24, Y+7	; 0x07
    154c:	98 85       	ldd	r25, Y+8	; 0x08
    154e:	a8 01       	movw	r20, r16
    1550:	97 01       	movw	r18, r14
    1552:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    1556:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    155a:	88 27       	eor	r24, r24
    155c:	77 fd       	sbrc	r23, 7
    155e:	80 95       	com	r24
    1560:	98 2f       	mov	r25, r24
    1562:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1566:	2c ed       	ldi	r18, 0xDC	; 220
    1568:	38 eb       	ldi	r19, 0xB8	; 184
    156a:	48 e0       	ldi	r20, 0x08	; 8
    156c:	5e e3       	ldi	r21, 0x3E	; 62
    156e:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1572:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1576:	f4 01       	movw	r30, r8
    1578:	73 83       	std	Z+3, r23	; 0x03
    157a:	62 83       	std	Z+2, r22	; 0x02
    157c:	69 81       	ldd	r22, Y+1	; 0x01
    157e:	7a 81       	ldd	r23, Y+2	; 0x02
    1580:	8b 81       	ldd	r24, Y+3	; 0x03
    1582:	9c 81       	ldd	r25, Y+4	; 0x04
    1584:	a8 01       	movw	r20, r16
    1586:	97 01       	movw	r18, r14
    1588:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    158c:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1590:	88 27       	eor	r24, r24
    1592:	77 fd       	sbrc	r23, 7
    1594:	80 95       	com	r24
    1596:	98 2f       	mov	r25, r24
    1598:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    159c:	2c ed       	ldi	r18, 0xDC	; 220
    159e:	38 eb       	ldi	r19, 0xB8	; 184
    15a0:	48 e0       	ldi	r20, 0x08	; 8
    15a2:	5e e3       	ldi	r21, 0x3E	; 62
    15a4:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    15a8:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    15ac:	f4 01       	movw	r30, r8
    15ae:	75 83       	std	Z+5, r23	; 0x05
    15b0:	64 83       	std	Z+4, r22	; 0x04
    15b2:	26 82       	std	Z+6, r2	; 0x06
    15b4:	10 86       	std	Z+8, r1	; 0x08
    15b6:	17 82       	std	Z+7, r1	; 0x07
    15b8:	81 e0       	ldi	r24, 0x01	; 1
    15ba:	62 e0       	ldi	r22, 0x02	; 2
    15bc:	43 2d       	mov	r20, r3
    15be:	29 89       	ldd	r18, Y+17	; 0x11
    15c0:	3a 89       	ldd	r19, Y+18	; 0x12
    15c2:	82 01       	movw	r16, r4
    15c4:	75 01       	movw	r14, r10
    15c6:	c2 2c       	mov	r12, r2
    15c8:	aa 24       	eor	r10, r10
    15ca:	bb 24       	eor	r11, r11
    15cc:	83 2c       	mov	r8, r3
    15ce:	0e 94 f6 15 	call	0x2bec	; 0x2bec <STEPPER_move>
    15d2:	8d b7       	in	r24, 0x3d	; 61
    15d4:	9e b7       	in	r25, 0x3e	; 62
    15d6:	09 96       	adiw	r24, 0x09	; 9
    15d8:	0f b6       	in	r0, 0x3f	; 63
    15da:	f8 94       	cli
    15dc:	9e bf       	out	0x3e, r25	; 62
    15de:	0f be       	out	0x3f, r0	; 63
    15e0:	8d bf       	out	0x3d, r24	; 61
		step_Fwd_L, step_Num_L, step_Speed_L, step_Accel_L, arc_Brk, // Left
		step_Fwd_R, step_Num_R, step_Speed_R, step_Accel_R, arc_Brk); // Right
		return SUCCESS;
	}	
	return FIAL;
}
    15e2:	81 e0       	ldi	r24, 0x01	; 1
    15e4:	64 96       	adiw	r28, 0x14	; 20
    15e6:	0f b6       	in	r0, 0x3f	; 63
    15e8:	f8 94       	cli
    15ea:	de bf       	out	0x3e, r29	; 62
    15ec:	0f be       	out	0x3f, r0	; 63
    15ee:	cd bf       	out	0x3d, r28	; 61
    15f0:	cf 91       	pop	r28
    15f2:	df 91       	pop	r29
    15f4:	1f 91       	pop	r17
    15f6:	0f 91       	pop	r16
    15f8:	ff 90       	pop	r15
    15fa:	ef 90       	pop	r14
    15fc:	df 90       	pop	r13
    15fe:	cf 90       	pop	r12
    1600:	bf 90       	pop	r11
    1602:	af 90       	pop	r10
    1604:	9f 90       	pop	r9
    1606:	8f 90       	pop	r8
    1608:	7f 90       	pop	r7
    160a:	6f 90       	pop	r6
    160c:	5f 90       	pop	r5
    160e:	4f 90       	pop	r4
    1610:	3f 90       	pop	r3
    1612:	2f 90       	pop	r2
    1614:	08 95       	ret

00001616 <move_arc__stwt>:
* Input Variables:	char
* Output Return:	int, int, int, int, BOOL
* Overview:			This moves the robot in any arc length
********************************************************************/
char move_arc__stwt(int arc_Radius, int arc_Length, int arc_Speed, int arc_Accel, BOOL arc_Brk)
{
    1616:	2f 92       	push	r2
    1618:	3f 92       	push	r3
    161a:	4f 92       	push	r4
    161c:	5f 92       	push	r5
    161e:	6f 92       	push	r6
    1620:	7f 92       	push	r7
    1622:	8f 92       	push	r8
    1624:	9f 92       	push	r9
    1626:	af 92       	push	r10
    1628:	bf 92       	push	r11
    162a:	cf 92       	push	r12
    162c:	df 92       	push	r13
    162e:	ef 92       	push	r14
    1630:	ff 92       	push	r15
    1632:	0f 93       	push	r16
    1634:	1f 93       	push	r17
    1636:	df 93       	push	r29
    1638:	cf 93       	push	r28
    163a:	cd b7       	in	r28, 0x3d	; 61
    163c:	de b7       	in	r29, 0x3e	; 62
    163e:	64 97       	sbiw	r28, 0x14	; 20
    1640:	0f b6       	in	r0, 0x3f	; 63
    1642:	f8 94       	cli
    1644:	de bf       	out	0x3e, r29	; 62
    1646:	0f be       	out	0x3f, r0	; 63
    1648:	cd bf       	out	0x3d, r28	; 61
    164a:	7c 01       	movw	r14, r24
    164c:	fb 01       	movw	r30, r22
    164e:	5a 01       	movw	r10, r20
    1650:	69 01       	movw	r12, r18
    1652:	20 2e       	mov	r2, r16
	
	BOOL step_Fwd_L = (arc_Length>0);
    1654:	33 24       	eor	r3, r3
    1656:	16 16       	cp	r1, r22
    1658:	17 06       	cpc	r1, r23
    165a:	14 f4       	brge	.+4      	; 0x1660 <move_arc__stwt+0x4a>
    165c:	33 24       	eor	r3, r3
    165e:	33 94       	inc	r3
	BOOL step_Fwd_R = (arc_Length>0);
	int step_Num = arc_Length/D_STEP;
    1660:	bf 01       	movw	r22, r30
    1662:	88 27       	eor	r24, r24
    1664:	77 fd       	sbrc	r23, 7
    1666:	80 95       	com	r24
    1668:	98 2f       	mov	r25, r24
    166a:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    166e:	69 87       	std	Y+9, r22	; 0x09
    1670:	7a 87       	std	Y+10, r23	; 0x0a
    1672:	8b 87       	std	Y+11, r24	; 0x0b
    1674:	9c 87       	std	Y+12, r25	; 0x0c
	int step_Speed = arc_Speed/D_STEP;
    1676:	b5 01       	movw	r22, r10
    1678:	88 27       	eor	r24, r24
    167a:	77 fd       	sbrc	r23, 7
    167c:	80 95       	com	r24
    167e:	98 2f       	mov	r25, r24
    1680:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1684:	6d 83       	std	Y+5, r22	; 0x05
    1686:	7e 83       	std	Y+6, r23	; 0x06
    1688:	8f 83       	std	Y+7, r24	; 0x07
    168a:	98 87       	std	Y+8, r25	; 0x08
	int step_Accel = arc_Accel/D_STEP;
    168c:	b6 01       	movw	r22, r12
    168e:	88 27       	eor	r24, r24
    1690:	77 fd       	sbrc	r23, 7
    1692:	80 95       	com	r24
    1694:	98 2f       	mov	r25, r24
    1696:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    169a:	69 83       	std	Y+1, r22	; 0x01
    169c:	7a 83       	std	Y+2, r23	; 0x02
    169e:	8b 83       	std	Y+3, r24	; 0x03
    16a0:	9c 83       	std	Y+4, r25	; 0x04
		step_Fwd_L, step_Num, step_Speed, step_Accel, arc_Brk, // Left
		step_Fwd_R, step_Num, step_Speed, step_Accel, arc_Brk); // Right
		return SUCCESS;
	}
	
	if(arc_Radius == POINT_TURN){				
    16a2:	e1 14       	cp	r14, r1
    16a4:	f1 04       	cpc	r15, r1
    16a6:	09 f0       	breq	.+2      	; 0x16aa <move_arc__stwt+0x94>
    16a8:	51 c0       	rjmp	.+162    	; 0x174c <move_arc__stwt+0x136>
		STEPPER_move_stwt( STEPPER_BOTH, 
    16aa:	69 85       	ldd	r22, Y+9	; 0x09
    16ac:	7a 85       	ldd	r23, Y+10	; 0x0a
    16ae:	8b 85       	ldd	r24, Y+11	; 0x0b
    16b0:	9c 85       	ldd	r25, Y+12	; 0x0c
    16b2:	2c ed       	ldi	r18, 0xDC	; 220
    16b4:	38 eb       	ldi	r19, 0xB8	; 184
    16b6:	48 e0       	ldi	r20, 0x08	; 8
    16b8:	5e e3       	ldi	r21, 0x3E	; 62
    16ba:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    16be:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    16c2:	5b 01       	movw	r10, r22
    16c4:	6d 81       	ldd	r22, Y+5	; 0x05
    16c6:	7e 81       	ldd	r23, Y+6	; 0x06
    16c8:	8f 81       	ldd	r24, Y+7	; 0x07
    16ca:	98 85       	ldd	r25, Y+8	; 0x08
    16cc:	2c ed       	ldi	r18, 0xDC	; 220
    16ce:	38 eb       	ldi	r19, 0xB8	; 184
    16d0:	48 e0       	ldi	r20, 0x08	; 8
    16d2:	5e e3       	ldi	r21, 0x3E	; 62
    16d4:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    16d8:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    16dc:	8b 01       	movw	r16, r22
    16de:	69 81       	ldd	r22, Y+1	; 0x01
    16e0:	7a 81       	ldd	r23, Y+2	; 0x02
    16e2:	8b 81       	ldd	r24, Y+3	; 0x03
    16e4:	9c 81       	ldd	r25, Y+4	; 0x04
    16e6:	2c ed       	ldi	r18, 0xDC	; 220
    16e8:	38 eb       	ldi	r19, 0xB8	; 184
    16ea:	48 e0       	ldi	r20, 0x08	; 8
    16ec:	5e e3       	ldi	r21, 0x3E	; 62
    16ee:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    16f2:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    16f6:	7b 01       	movw	r14, r22
    16f8:	8d b7       	in	r24, 0x3d	; 61
    16fa:	9e b7       	in	r25, 0x3e	; 62
    16fc:	09 97       	sbiw	r24, 0x09	; 9
    16fe:	0f b6       	in	r0, 0x3f	; 63
    1700:	f8 94       	cli
    1702:	9e bf       	out	0x3e, r25	; 62
    1704:	0f be       	out	0x3f, r0	; 63
    1706:	8d bf       	out	0x3d, r24	; 61
    1708:	ed b7       	in	r30, 0x3d	; 61
    170a:	fe b7       	in	r31, 0x3e	; 62
    170c:	31 96       	adiw	r30, 0x01	; 1
    170e:	40 e0       	ldi	r20, 0x00	; 0
    1710:	33 20       	and	r3, r3
    1712:	09 f4       	brne	.+2      	; 0x1716 <move_arc__stwt+0x100>
    1714:	41 e0       	ldi	r20, 0x01	; 1
    1716:	b1 82       	std	Z+1, r11	; 0x01
    1718:	a0 82       	st	Z, r10
    171a:	13 83       	std	Z+3, r17	; 0x03
    171c:	02 83       	std	Z+2, r16	; 0x02
    171e:	f5 82       	std	Z+5, r15	; 0x05
    1720:	e4 82       	std	Z+4, r14	; 0x04
    1722:	26 82       	std	Z+6, r2	; 0x06
    1724:	10 86       	std	Z+8, r1	; 0x08
    1726:	17 82       	std	Z+7, r1	; 0x07
    1728:	80 e0       	ldi	r24, 0x00	; 0
    172a:	62 e0       	ldi	r22, 0x02	; 2
    172c:	95 01       	movw	r18, r10
    172e:	c2 2c       	mov	r12, r2
    1730:	aa 24       	eor	r10, r10
    1732:	bb 24       	eor	r11, r11
    1734:	83 2c       	mov	r8, r3
    1736:	0e 94 f6 15 	call	0x2bec	; 0x2bec <STEPPER_move>
    173a:	ed b7       	in	r30, 0x3d	; 61
    173c:	fe b7       	in	r31, 0x3e	; 62
    173e:	39 96       	adiw	r30, 0x09	; 9
    1740:	0f b6       	in	r0, 0x3f	; 63
    1742:	f8 94       	cli
    1744:	fe bf       	out	0x3e, r31	; 62
    1746:	0f be       	out	0x3f, r0	; 63
    1748:	ed bf       	out	0x3d, r30	; 61
    174a:	ce c1       	rjmp	.+924    	; 0x1ae8 <move_arc__stwt+0x4d2>
    174c:	b7 01       	movw	r22, r14
    174e:	88 27       	eor	r24, r24
    1750:	77 fd       	sbrc	r23, 7
    1752:	80 95       	com	r24
    1754:	98 2f       	mov	r25, r24
	int step_Speed_L;
	int step_Speed_R;	
	int step_Accel_L;
	int step_Accel_R;
	
	if(arc_Radius > 0){
    1756:	1e 14       	cp	r1, r14
    1758:	1f 04       	cpc	r1, r15
    175a:	0c f0       	brlt	.+2      	; 0x175e <move_arc__stwt+0x148>
    175c:	db c0       	rjmp	.+438    	; 0x1914 <move_arc__stwt+0x2fe>
		arc_Length_L = arc_Length * (1 - WHEEL_BASE/arc_Radius);
    175e:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1762:	7b 01       	movw	r14, r22
    1764:	8c 01       	movw	r16, r24
    1766:	66 e6       	ldi	r22, 0x66	; 102
    1768:	76 e6       	ldi	r23, 0x66	; 102
    176a:	8a ea       	ldi	r24, 0xAA	; 170
    176c:	91 ec       	ldi	r25, 0xC1	; 193
    176e:	a8 01       	movw	r20, r16
    1770:	97 01       	movw	r18, r14
    1772:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1776:	20 e0       	ldi	r18, 0x00	; 0
    1778:	30 e0       	ldi	r19, 0x00	; 0
    177a:	40 e8       	ldi	r20, 0x80	; 128
    177c:	5f e3       	ldi	r21, 0x3F	; 63
    177e:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
    1782:	5b 01       	movw	r10, r22
    1784:	6c 01       	movw	r12, r24
		arc_Length_R = arc_Length * (1 + WHEEL_BASE/arc_Radius);
    1786:	66 e6       	ldi	r22, 0x66	; 102
    1788:	76 e6       	ldi	r23, 0x66	; 102
    178a:	8a ea       	ldi	r24, 0xAA	; 170
    178c:	91 e4       	ldi	r25, 0x41	; 65
    178e:	a8 01       	movw	r20, r16
    1790:	97 01       	movw	r18, r14
    1792:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1796:	20 e0       	ldi	r18, 0x00	; 0
    1798:	30 e0       	ldi	r19, 0x00	; 0
    179a:	40 e8       	ldi	r20, 0x80	; 128
    179c:	5f e3       	ldi	r21, 0x3F	; 63
    179e:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
    17a2:	7b 01       	movw	r14, r22
    17a4:	8c 01       	movw	r16, r24
		arc_Accel_L = arc_Accel * (1 - WHEEL_BASE/arc_Radius);
		arc_Accel_R = arc_Accel * (1 + WHEEL_BASE/arc_Radius);
		step_Accel_L = arc_Accel_L/D_STEP;
		step_Accel_R = arc_Accel_R/D_STEP;
		
		STEPPER_move_stwt( STEPPER_BOTH, 
    17a6:	8d b7       	in	r24, 0x3d	; 61
    17a8:	9e b7       	in	r25, 0x3e	; 62
    17aa:	09 97       	sbiw	r24, 0x09	; 9
    17ac:	0f b6       	in	r0, 0x3f	; 63
    17ae:	f8 94       	cli
    17b0:	9e bf       	out	0x3e, r25	; 62
    17b2:	0f be       	out	0x3f, r0	; 63
    17b4:	8d bf       	out	0x3d, r24	; 61
    17b6:	8d b6       	in	r8, 0x3d	; 61
    17b8:	9e b6       	in	r9, 0x3e	; 62
    17ba:	08 94       	sec
    17bc:	81 1c       	adc	r8, r1
    17be:	91 1c       	adc	r9, r1
    17c0:	69 85       	ldd	r22, Y+9	; 0x09
    17c2:	7a 85       	ldd	r23, Y+10	; 0x0a
    17c4:	8b 85       	ldd	r24, Y+11	; 0x0b
    17c6:	9c 85       	ldd	r25, Y+12	; 0x0c
    17c8:	a6 01       	movw	r20, r12
    17ca:	95 01       	movw	r18, r10
    17cc:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    17d0:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    17d4:	88 27       	eor	r24, r24
    17d6:	77 fd       	sbrc	r23, 7
    17d8:	80 95       	com	r24
    17da:	98 2f       	mov	r25, r24
    17dc:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    17e0:	2c ed       	ldi	r18, 0xDC	; 220
    17e2:	38 eb       	ldi	r19, 0xB8	; 184
    17e4:	48 e0       	ldi	r20, 0x08	; 8
    17e6:	5e e3       	ldi	r21, 0x3E	; 62
    17e8:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    17ec:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    17f0:	6d 87       	std	Y+13, r22	; 0x0d
    17f2:	7e 87       	std	Y+14, r23	; 0x0e
    17f4:	8f 87       	std	Y+15, r24	; 0x0f
    17f6:	98 8b       	std	Y+16, r25	; 0x10
    17f8:	6d 81       	ldd	r22, Y+5	; 0x05
    17fa:	7e 81       	ldd	r23, Y+6	; 0x06
    17fc:	8f 81       	ldd	r24, Y+7	; 0x07
    17fe:	98 85       	ldd	r25, Y+8	; 0x08
    1800:	a6 01       	movw	r20, r12
    1802:	95 01       	movw	r18, r10
    1804:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    1808:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    180c:	88 27       	eor	r24, r24
    180e:	77 fd       	sbrc	r23, 7
    1810:	80 95       	com	r24
    1812:	98 2f       	mov	r25, r24
    1814:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1818:	2c ed       	ldi	r18, 0xDC	; 220
    181a:	38 eb       	ldi	r19, 0xB8	; 184
    181c:	48 e0       	ldi	r20, 0x08	; 8
    181e:	5e e3       	ldi	r21, 0x3E	; 62
    1820:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1824:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1828:	2b 01       	movw	r4, r22
    182a:	3c 01       	movw	r6, r24
    182c:	69 81       	ldd	r22, Y+1	; 0x01
    182e:	7a 81       	ldd	r23, Y+2	; 0x02
    1830:	8b 81       	ldd	r24, Y+3	; 0x03
    1832:	9c 81       	ldd	r25, Y+4	; 0x04
    1834:	a6 01       	movw	r20, r12
    1836:	95 01       	movw	r18, r10
    1838:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    183c:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1840:	88 27       	eor	r24, r24
    1842:	77 fd       	sbrc	r23, 7
    1844:	80 95       	com	r24
    1846:	98 2f       	mov	r25, r24
    1848:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    184c:	2c ed       	ldi	r18, 0xDC	; 220
    184e:	38 eb       	ldi	r19, 0xB8	; 184
    1850:	48 e0       	ldi	r20, 0x08	; 8
    1852:	5e e3       	ldi	r21, 0x3E	; 62
    1854:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1858:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    185c:	5b 01       	movw	r10, r22
    185e:	6c 01       	movw	r12, r24
    1860:	69 85       	ldd	r22, Y+9	; 0x09
    1862:	7a 85       	ldd	r23, Y+10	; 0x0a
    1864:	8b 85       	ldd	r24, Y+11	; 0x0b
    1866:	9c 85       	ldd	r25, Y+12	; 0x0c
    1868:	a8 01       	movw	r20, r16
    186a:	97 01       	movw	r18, r14
    186c:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    1870:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1874:	88 27       	eor	r24, r24
    1876:	77 fd       	sbrc	r23, 7
    1878:	80 95       	com	r24
    187a:	98 2f       	mov	r25, r24
    187c:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1880:	2c ed       	ldi	r18, 0xDC	; 220
    1882:	38 eb       	ldi	r19, 0xB8	; 184
    1884:	48 e0       	ldi	r20, 0x08	; 8
    1886:	5e e3       	ldi	r21, 0x3E	; 62
    1888:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    188c:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1890:	f4 01       	movw	r30, r8
    1892:	71 83       	std	Z+1, r23	; 0x01
    1894:	60 83       	st	Z, r22
    1896:	6d 81       	ldd	r22, Y+5	; 0x05
    1898:	7e 81       	ldd	r23, Y+6	; 0x06
    189a:	8f 81       	ldd	r24, Y+7	; 0x07
    189c:	98 85       	ldd	r25, Y+8	; 0x08
    189e:	a8 01       	movw	r20, r16
    18a0:	97 01       	movw	r18, r14
    18a2:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    18a6:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    18aa:	88 27       	eor	r24, r24
    18ac:	77 fd       	sbrc	r23, 7
    18ae:	80 95       	com	r24
    18b0:	98 2f       	mov	r25, r24
    18b2:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    18b6:	2c ed       	ldi	r18, 0xDC	; 220
    18b8:	38 eb       	ldi	r19, 0xB8	; 184
    18ba:	48 e0       	ldi	r20, 0x08	; 8
    18bc:	5e e3       	ldi	r21, 0x3E	; 62
    18be:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    18c2:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    18c6:	f4 01       	movw	r30, r8
    18c8:	73 83       	std	Z+3, r23	; 0x03
    18ca:	62 83       	std	Z+2, r22	; 0x02
    18cc:	69 81       	ldd	r22, Y+1	; 0x01
    18ce:	7a 81       	ldd	r23, Y+2	; 0x02
    18d0:	8b 81       	ldd	r24, Y+3	; 0x03
    18d2:	9c 81       	ldd	r25, Y+4	; 0x04
    18d4:	a8 01       	movw	r20, r16
    18d6:	97 01       	movw	r18, r14
    18d8:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    18dc:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    18e0:	88 27       	eor	r24, r24
    18e2:	77 fd       	sbrc	r23, 7
    18e4:	80 95       	com	r24
    18e6:	98 2f       	mov	r25, r24
    18e8:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    18ec:	2c ed       	ldi	r18, 0xDC	; 220
    18ee:	38 eb       	ldi	r19, 0xB8	; 184
    18f0:	48 e0       	ldi	r20, 0x08	; 8
    18f2:	5e e3       	ldi	r21, 0x3E	; 62
    18f4:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    18f8:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    18fc:	f4 01       	movw	r30, r8
    18fe:	75 83       	std	Z+5, r23	; 0x05
    1900:	64 83       	std	Z+4, r22	; 0x04
    1902:	26 82       	std	Z+6, r2	; 0x06
    1904:	10 86       	std	Z+8, r1	; 0x08
    1906:	17 82       	std	Z+7, r1	; 0x07
    1908:	80 e0       	ldi	r24, 0x00	; 0
    190a:	62 e0       	ldi	r22, 0x02	; 2
    190c:	43 2d       	mov	r20, r3
    190e:	2d 85       	ldd	r18, Y+13	; 0x0d
    1910:	3e 85       	ldd	r19, Y+14	; 0x0e
    1912:	da c0       	rjmp	.+436    	; 0x1ac8 <move_arc__stwt+0x4b2>
		step_Fwd_R, step_Num_R, step_Speed_R, step_Accel_R, arc_Brk); // Right
		return SUCCESS;
	}	
	
	if(arc_Radius < 0){
		arc_Length_L = arc_Length * (1 + WHEEL_BASE/arc_Radius);
    1914:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1918:	7b 01       	movw	r14, r22
    191a:	8c 01       	movw	r16, r24
    191c:	66 e6       	ldi	r22, 0x66	; 102
    191e:	76 e6       	ldi	r23, 0x66	; 102
    1920:	8a ea       	ldi	r24, 0xAA	; 170
    1922:	91 e4       	ldi	r25, 0x41	; 65
    1924:	a8 01       	movw	r20, r16
    1926:	97 01       	movw	r18, r14
    1928:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    192c:	20 e0       	ldi	r18, 0x00	; 0
    192e:	30 e0       	ldi	r19, 0x00	; 0
    1930:	40 e8       	ldi	r20, 0x80	; 128
    1932:	5f e3       	ldi	r21, 0x3F	; 63
    1934:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
    1938:	5b 01       	movw	r10, r22
    193a:	6c 01       	movw	r12, r24
		arc_Length_R = arc_Length * (1 - WHEEL_BASE/arc_Radius);
    193c:	66 e6       	ldi	r22, 0x66	; 102
    193e:	76 e6       	ldi	r23, 0x66	; 102
    1940:	8a ea       	ldi	r24, 0xAA	; 170
    1942:	91 ec       	ldi	r25, 0xC1	; 193
    1944:	a8 01       	movw	r20, r16
    1946:	97 01       	movw	r18, r14
    1948:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    194c:	20 e0       	ldi	r18, 0x00	; 0
    194e:	30 e0       	ldi	r19, 0x00	; 0
    1950:	40 e8       	ldi	r20, 0x80	; 128
    1952:	5f e3       	ldi	r21, 0x3F	; 63
    1954:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
    1958:	7b 01       	movw	r14, r22
    195a:	8c 01       	movw	r16, r24
		arc_Accel_L = arc_Accel * (1 + WHEEL_BASE/arc_Radius);
		arc_Accel_R = arc_Accel * (1 - WHEEL_BASE/arc_Radius);
		step_Accel_L = arc_Accel_L/D_STEP;
		step_Accel_R = arc_Accel_R/D_STEP;
		
		STEPPER_move_stwt( STEPPER_BOTH, 
    195c:	ed b7       	in	r30, 0x3d	; 61
    195e:	fe b7       	in	r31, 0x3e	; 62
    1960:	39 97       	sbiw	r30, 0x09	; 9
    1962:	0f b6       	in	r0, 0x3f	; 63
    1964:	f8 94       	cli
    1966:	fe bf       	out	0x3e, r31	; 62
    1968:	0f be       	out	0x3f, r0	; 63
    196a:	ed bf       	out	0x3d, r30	; 61
    196c:	8d b6       	in	r8, 0x3d	; 61
    196e:	9e b6       	in	r9, 0x3e	; 62
    1970:	08 94       	sec
    1972:	81 1c       	adc	r8, r1
    1974:	91 1c       	adc	r9, r1
    1976:	69 85       	ldd	r22, Y+9	; 0x09
    1978:	7a 85       	ldd	r23, Y+10	; 0x0a
    197a:	8b 85       	ldd	r24, Y+11	; 0x0b
    197c:	9c 85       	ldd	r25, Y+12	; 0x0c
    197e:	a6 01       	movw	r20, r12
    1980:	95 01       	movw	r18, r10
    1982:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    1986:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    198a:	88 27       	eor	r24, r24
    198c:	77 fd       	sbrc	r23, 7
    198e:	80 95       	com	r24
    1990:	98 2f       	mov	r25, r24
    1992:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1996:	2c ed       	ldi	r18, 0xDC	; 220
    1998:	38 eb       	ldi	r19, 0xB8	; 184
    199a:	48 e0       	ldi	r20, 0x08	; 8
    199c:	5e e3       	ldi	r21, 0x3E	; 62
    199e:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    19a2:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    19a6:	69 8b       	std	Y+17, r22	; 0x11
    19a8:	7a 8b       	std	Y+18, r23	; 0x12
    19aa:	8b 8b       	std	Y+19, r24	; 0x13
    19ac:	9c 8b       	std	Y+20, r25	; 0x14
    19ae:	6d 81       	ldd	r22, Y+5	; 0x05
    19b0:	7e 81       	ldd	r23, Y+6	; 0x06
    19b2:	8f 81       	ldd	r24, Y+7	; 0x07
    19b4:	98 85       	ldd	r25, Y+8	; 0x08
    19b6:	a6 01       	movw	r20, r12
    19b8:	95 01       	movw	r18, r10
    19ba:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    19be:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    19c2:	88 27       	eor	r24, r24
    19c4:	77 fd       	sbrc	r23, 7
    19c6:	80 95       	com	r24
    19c8:	98 2f       	mov	r25, r24
    19ca:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    19ce:	2c ed       	ldi	r18, 0xDC	; 220
    19d0:	38 eb       	ldi	r19, 0xB8	; 184
    19d2:	48 e0       	ldi	r20, 0x08	; 8
    19d4:	5e e3       	ldi	r21, 0x3E	; 62
    19d6:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    19da:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    19de:	2b 01       	movw	r4, r22
    19e0:	3c 01       	movw	r6, r24
    19e2:	69 81       	ldd	r22, Y+1	; 0x01
    19e4:	7a 81       	ldd	r23, Y+2	; 0x02
    19e6:	8b 81       	ldd	r24, Y+3	; 0x03
    19e8:	9c 81       	ldd	r25, Y+4	; 0x04
    19ea:	a6 01       	movw	r20, r12
    19ec:	95 01       	movw	r18, r10
    19ee:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    19f2:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    19f6:	88 27       	eor	r24, r24
    19f8:	77 fd       	sbrc	r23, 7
    19fa:	80 95       	com	r24
    19fc:	98 2f       	mov	r25, r24
    19fe:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1a02:	2c ed       	ldi	r18, 0xDC	; 220
    1a04:	38 eb       	ldi	r19, 0xB8	; 184
    1a06:	48 e0       	ldi	r20, 0x08	; 8
    1a08:	5e e3       	ldi	r21, 0x3E	; 62
    1a0a:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1a0e:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1a12:	5b 01       	movw	r10, r22
    1a14:	6c 01       	movw	r12, r24
    1a16:	69 85       	ldd	r22, Y+9	; 0x09
    1a18:	7a 85       	ldd	r23, Y+10	; 0x0a
    1a1a:	8b 85       	ldd	r24, Y+11	; 0x0b
    1a1c:	9c 85       	ldd	r25, Y+12	; 0x0c
    1a1e:	a8 01       	movw	r20, r16
    1a20:	97 01       	movw	r18, r14
    1a22:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    1a26:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1a2a:	88 27       	eor	r24, r24
    1a2c:	77 fd       	sbrc	r23, 7
    1a2e:	80 95       	com	r24
    1a30:	98 2f       	mov	r25, r24
    1a32:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1a36:	2c ed       	ldi	r18, 0xDC	; 220
    1a38:	38 eb       	ldi	r19, 0xB8	; 184
    1a3a:	48 e0       	ldi	r20, 0x08	; 8
    1a3c:	5e e3       	ldi	r21, 0x3E	; 62
    1a3e:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1a42:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1a46:	f4 01       	movw	r30, r8
    1a48:	71 83       	std	Z+1, r23	; 0x01
    1a4a:	60 83       	st	Z, r22
    1a4c:	6d 81       	ldd	r22, Y+5	; 0x05
    1a4e:	7e 81       	ldd	r23, Y+6	; 0x06
    1a50:	8f 81       	ldd	r24, Y+7	; 0x07
    1a52:	98 85       	ldd	r25, Y+8	; 0x08
    1a54:	a8 01       	movw	r20, r16
    1a56:	97 01       	movw	r18, r14
    1a58:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    1a5c:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1a60:	88 27       	eor	r24, r24
    1a62:	77 fd       	sbrc	r23, 7
    1a64:	80 95       	com	r24
    1a66:	98 2f       	mov	r25, r24
    1a68:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1a6c:	2c ed       	ldi	r18, 0xDC	; 220
    1a6e:	38 eb       	ldi	r19, 0xB8	; 184
    1a70:	48 e0       	ldi	r20, 0x08	; 8
    1a72:	5e e3       	ldi	r21, 0x3E	; 62
    1a74:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1a78:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1a7c:	f4 01       	movw	r30, r8
    1a7e:	73 83       	std	Z+3, r23	; 0x03
    1a80:	62 83       	std	Z+2, r22	; 0x02
    1a82:	69 81       	ldd	r22, Y+1	; 0x01
    1a84:	7a 81       	ldd	r23, Y+2	; 0x02
    1a86:	8b 81       	ldd	r24, Y+3	; 0x03
    1a88:	9c 81       	ldd	r25, Y+4	; 0x04
    1a8a:	a8 01       	movw	r20, r16
    1a8c:	97 01       	movw	r18, r14
    1a8e:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    1a92:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1a96:	88 27       	eor	r24, r24
    1a98:	77 fd       	sbrc	r23, 7
    1a9a:	80 95       	com	r24
    1a9c:	98 2f       	mov	r25, r24
    1a9e:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1aa2:	2c ed       	ldi	r18, 0xDC	; 220
    1aa4:	38 eb       	ldi	r19, 0xB8	; 184
    1aa6:	48 e0       	ldi	r20, 0x08	; 8
    1aa8:	5e e3       	ldi	r21, 0x3E	; 62
    1aaa:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1aae:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1ab2:	f4 01       	movw	r30, r8
    1ab4:	75 83       	std	Z+5, r23	; 0x05
    1ab6:	64 83       	std	Z+4, r22	; 0x04
    1ab8:	26 82       	std	Z+6, r2	; 0x06
    1aba:	10 86       	std	Z+8, r1	; 0x08
    1abc:	17 82       	std	Z+7, r1	; 0x07
    1abe:	80 e0       	ldi	r24, 0x00	; 0
    1ac0:	62 e0       	ldi	r22, 0x02	; 2
    1ac2:	43 2d       	mov	r20, r3
    1ac4:	29 89       	ldd	r18, Y+17	; 0x11
    1ac6:	3a 89       	ldd	r19, Y+18	; 0x12
    1ac8:	82 01       	movw	r16, r4
    1aca:	75 01       	movw	r14, r10
    1acc:	c2 2c       	mov	r12, r2
    1ace:	aa 24       	eor	r10, r10
    1ad0:	bb 24       	eor	r11, r11
    1ad2:	83 2c       	mov	r8, r3
    1ad4:	0e 94 f6 15 	call	0x2bec	; 0x2bec <STEPPER_move>
    1ad8:	8d b7       	in	r24, 0x3d	; 61
    1ada:	9e b7       	in	r25, 0x3e	; 62
    1adc:	09 96       	adiw	r24, 0x09	; 9
    1ade:	0f b6       	in	r0, 0x3f	; 63
    1ae0:	f8 94       	cli
    1ae2:	9e bf       	out	0x3e, r25	; 62
    1ae4:	0f be       	out	0x3f, r0	; 63
    1ae6:	8d bf       	out	0x3d, r24	; 61
		step_Fwd_L, step_Num_L, step_Speed_L, step_Accel_L, arc_Brk, // Left
		step_Fwd_R, step_Num_R, step_Speed_R, step_Accel_R, arc_Brk); // Right
		return SUCCESS;
	}	
	return FIAL;
}
    1ae8:	81 e0       	ldi	r24, 0x01	; 1
    1aea:	64 96       	adiw	r28, 0x14	; 20
    1aec:	0f b6       	in	r0, 0x3f	; 63
    1aee:	f8 94       	cli
    1af0:	de bf       	out	0x3e, r29	; 62
    1af2:	0f be       	out	0x3f, r0	; 63
    1af4:	cd bf       	out	0x3d, r28	; 61
    1af6:	cf 91       	pop	r28
    1af8:	df 91       	pop	r29
    1afa:	1f 91       	pop	r17
    1afc:	0f 91       	pop	r16
    1afe:	ff 90       	pop	r15
    1b00:	ef 90       	pop	r14
    1b02:	df 90       	pop	r13
    1b04:	cf 90       	pop	r12
    1b06:	bf 90       	pop	r11
    1b08:	af 90       	pop	r10
    1b0a:	9f 90       	pop	r9
    1b0c:	8f 90       	pop	r8
    1b0e:	7f 90       	pop	r7
    1b10:	6f 90       	pop	r6
    1b12:	5f 90       	pop	r5
    1b14:	4f 90       	pop	r4
    1b16:	3f 90       	pop	r3
    1b18:	2f 90       	pop	r2
    1b1a:	08 95       	ret

00001b1c <moveAway>:
* Input Variables:	none
* Output Return:	char
* Overview:			Use a comment block like this before functions
********************************************************************/
char moveAway ( void )
{	
    1b1c:	2f 92       	push	r2
    1b1e:	3f 92       	push	r3
    1b20:	4f 92       	push	r4
    1b22:	5f 92       	push	r5
    1b24:	6f 92       	push	r6
    1b26:	7f 92       	push	r7
    1b28:	8f 92       	push	r8
    1b2a:	9f 92       	push	r9
    1b2c:	af 92       	push	r10
    1b2e:	bf 92       	push	r11
    1b30:	cf 92       	push	r12
    1b32:	df 92       	push	r13
    1b34:	ef 92       	push	r14
    1b36:	ff 92       	push	r15
    1b38:	0f 93       	push	r16
    1b3a:	1f 93       	push	r17
    1b3c:	df 93       	push	r29
    1b3e:	cf 93       	push	r28
    1b40:	00 d0       	rcall	.+0      	; 0x1b42 <moveAway+0x26>
    1b42:	00 d0       	rcall	.+0      	; 0x1b44 <moveAway+0x28>
    1b44:	cd b7       	in	r28, 0x3d	; 61
    1b46:	de b7       	in	r29, 0x3e	; 62
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
    1b48:	60 90 28 02 	lds	r6, 0x0228
    1b4c:	70 90 29 02 	lds	r7, 0x0229
    1b50:	80 90 2a 02 	lds	r8, 0x022A
    1b54:	90 90 2b 02 	lds	r9, 0x022B
    1b58:	a0 90 2c 02 	lds	r10, 0x022C
    1b5c:	b0 90 2d 02 	lds	r11, 0x022D
    1b60:	c0 90 2e 02 	lds	r12, 0x022E
    1b64:	d0 90 2f 02 	lds	r13, 0x022F
	float moveX = rtIR - ltIR;
    1b68:	e0 90 24 02 	lds	r14, 0x0224
    1b6c:	f0 90 25 02 	lds	r15, 0x0225
    1b70:	00 91 26 02 	lds	r16, 0x0226
    1b74:	10 91 27 02 	lds	r17, 0x0227
    1b78:	80 91 20 02 	lds	r24, 0x0220
    1b7c:	90 91 21 02 	lds	r25, 0x0221
    1b80:	a0 91 22 02 	lds	r26, 0x0222
    1b84:	b0 91 23 02 	lds	r27, 0x0223
    1b88:	89 83       	std	Y+1, r24	; 0x01
    1b8a:	9a 83       	std	Y+2, r25	; 0x02
    1b8c:	ab 83       	std	Y+3, r26	; 0x03
    1b8e:	bc 83       	std	Y+4, r27	; 0x04
    1b90:	c8 01       	movw	r24, r16
    1b92:	b7 01       	movw	r22, r14
    1b94:	29 81       	ldd	r18, Y+1	; 0x01
    1b96:	3a 81       	ldd	r19, Y+2	; 0x02
    1b98:	4b 81       	ldd	r20, Y+3	; 0x03
    1b9a:	5c 81       	ldd	r21, Y+4	; 0x04
    1b9c:	0e 94 cc 25 	call	0x4b98	; 0x4b98 <__subsf3>
    1ba0:	1b 01       	movw	r2, r22
    1ba2:	2c 01       	movw	r4, r24
	
	// if the object is in front of us are behind us
	// move appropriately in the Y direction
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
    1ba4:	c4 01       	movw	r24, r8
    1ba6:	b3 01       	movw	r22, r6
    1ba8:	20 e0       	ldi	r18, 0x00	; 0
    1baa:	30 e0       	ldi	r19, 0x00	; 0
    1bac:	40 ee       	ldi	r20, 0xE0	; 224
    1bae:	50 e4       	ldi	r21, 0x40	; 64
    1bb0:	0e 94 31 26 	call	0x4c62	; 0x4c62 <__cmpsf2>
    1bb4:	87 fd       	sbrc	r24, 7
    1bb6:	0b c0       	rjmp	.+22     	; 0x1bce <moveAway+0xb2>
    1bb8:	c6 01       	movw	r24, r12
    1bba:	b5 01       	movw	r22, r10
    1bbc:	20 e0       	ldi	r18, 0x00	; 0
    1bbe:	30 e0       	ldi	r19, 0x00	; 0
    1bc0:	40 ee       	ldi	r20, 0xE0	; 224
    1bc2:	50 e4       	ldi	r21, 0x40	; 64
    1bc4:	0e 94 31 26 	call	0x4c62	; 0x4c62 <__cmpsf2>
    1bc8:	88 23       	and	r24, r24
    1bca:	0c f0       	brlt	.+2      	; 0x1bce <moveAway+0xb2>
    1bcc:	68 c0       	rjmp	.+208    	; 0x1c9e <moveAway+0x182>
{	
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
    1bce:	c4 01       	movw	r24, r8
    1bd0:	b3 01       	movw	r22, r6
    1bd2:	a6 01       	movw	r20, r12
    1bd4:	95 01       	movw	r18, r10
    1bd6:	0e 94 cc 25 	call	0x4b98	; 0x4b98 <__subsf3>
    1bda:	7b 01       	movw	r14, r22
    1bdc:	8c 01       	movw	r16, r24
	
	// if the object is in front of us are behind us
	// move appropriately in the Y direction
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
	{
			BOOL moveForward = (moveY >= 0);
    1bde:	77 24       	eor	r7, r7
    1be0:	20 e0       	ldi	r18, 0x00	; 0
    1be2:	30 e0       	ldi	r19, 0x00	; 0
    1be4:	40 e0       	ldi	r20, 0x00	; 0
    1be6:	50 e0       	ldi	r21, 0x00	; 0
    1be8:	0e 94 80 27 	call	0x4f00	; 0x4f00 <__gesf2>
    1bec:	88 23       	and	r24, r24
    1bee:	14 f0       	brlt	.+4      	; 0x1bf4 <moveAway+0xd8>
    1bf0:	77 24       	eor	r7, r7
    1bf2:	73 94       	inc	r7
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    1bf4:	c8 01       	movw	r24, r16
    1bf6:	b7 01       	movw	r22, r14
    1bf8:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1bfc:	9b 01       	movw	r18, r22
    1bfe:	77 ff       	sbrs	r23, 7
    1c00:	03 c0       	rjmp	.+6      	; 0x1c08 <moveAway+0xec>
    1c02:	30 95       	com	r19
    1c04:	21 95       	neg	r18
    1c06:	3f 4f       	sbci	r19, 0xFF	; 255
    1c08:	b9 01       	movw	r22, r18
    1c0a:	88 27       	eor	r24, r24
    1c0c:	77 fd       	sbrc	r23, 7
    1c0e:	80 95       	com	r24
    1c10:	98 2f       	mov	r25, r24
    1c12:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1c16:	6b 01       	movw	r12, r22
    1c18:	7c 01       	movw	r14, r24
    1c1a:	ad b7       	in	r26, 0x3d	; 61
    1c1c:	be b7       	in	r27, 0x3e	; 62
    1c1e:	19 97       	sbiw	r26, 0x09	; 9
    1c20:	0f b6       	in	r0, 0x3f	; 63
    1c22:	f8 94       	cli
    1c24:	be bf       	out	0x3e, r27	; 62
    1c26:	0f be       	out	0x3f, r0	; 63
    1c28:	ad bf       	out	0x3d, r26	; 61
    1c2a:	0d b7       	in	r16, 0x3d	; 61
    1c2c:	1e b7       	in	r17, 0x3e	; 62
    1c2e:	0f 5f       	subi	r16, 0xFF	; 255
    1c30:	1f 4f       	sbci	r17, 0xFF	; 255
    1c32:	a2 01       	movw	r20, r4
    1c34:	91 01       	movw	r18, r2
    1c36:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
    1c3a:	0e 94 a2 26 	call	0x4d44	; 0x4d44 <__fixunssfsi>
    1c3e:	4b 01       	movw	r8, r22
    1c40:	5c 01       	movw	r10, r24
    1c42:	82 e3       	ldi	r24, 0x32	; 50
    1c44:	90 e0       	ldi	r25, 0x00	; 0
    1c46:	f8 01       	movw	r30, r16
    1c48:	91 83       	std	Z+1, r25	; 0x01
    1c4a:	80 83       	st	Z, r24
    1c4c:	c7 01       	movw	r24, r14
    1c4e:	b6 01       	movw	r22, r12
    1c50:	a2 01       	movw	r20, r4
    1c52:	91 01       	movw	r18, r2
    1c54:	0e 94 cc 25 	call	0x4b98	; 0x4b98 <__subsf3>
    1c58:	0e 94 a2 26 	call	0x4d44	; 0x4d44 <__fixunssfsi>
    1c5c:	d8 01       	movw	r26, r16
    1c5e:	13 96       	adiw	r26, 0x03	; 3
    1c60:	7c 93       	st	X, r23
    1c62:	6e 93       	st	-X, r22
    1c64:	12 97       	sbiw	r26, 0x02	; 2
    1c66:	82 ec       	ldi	r24, 0xC2	; 194
    1c68:	91 e0       	ldi	r25, 0x01	; 1
    1c6a:	15 96       	adiw	r26, 0x05	; 5
    1c6c:	9c 93       	st	X, r25
    1c6e:	8e 93       	st	-X, r24
    1c70:	14 97       	sbiw	r26, 0x04	; 4
    1c72:	16 96       	adiw	r26, 0x06	; 6
    1c74:	1c 92       	st	X, r1
    1c76:	16 97       	sbiw	r26, 0x06	; 6
    1c78:	18 96       	adiw	r26, 0x08	; 8
    1c7a:	1c 92       	st	X, r1
    1c7c:	1e 92       	st	-X, r1
    1c7e:	17 97       	sbiw	r26, 0x07	; 7
    1c80:	81 e0       	ldi	r24, 0x01	; 1
    1c82:	62 e0       	ldi	r22, 0x02	; 2
    1c84:	47 2d       	mov	r20, r7
    1c86:	22 e3       	ldi	r18, 0x32	; 50
    1c88:	30 e0       	ldi	r19, 0x00	; 0
    1c8a:	84 01       	movw	r16, r8
    1c8c:	72 ec       	ldi	r23, 0xC2	; 194
    1c8e:	e7 2e       	mov	r14, r23
    1c90:	71 e0       	ldi	r23, 0x01	; 1
    1c92:	f7 2e       	mov	r15, r23
    1c94:	cc 24       	eor	r12, r12
    1c96:	aa 24       	eor	r10, r10
    1c98:	bb 24       	eor	r11, r11
    1c9a:	87 2c       	mov	r8, r7
    1c9c:	82 c0       	rjmp	.+260    	; 0x1da2 <moveAway+0x286>
			shyRobot = 1;
	}
	
	// if the object is on either side of the robot
	// rotate the robot appropriately
	else if ((rtIR < IR_OBST_R_THRESH))
    1c9e:	c8 01       	movw	r24, r16
    1ca0:	b7 01       	movw	r22, r14
    1ca2:	20 e0       	ldi	r18, 0x00	; 0
    1ca4:	30 e0       	ldi	r19, 0x00	; 0
    1ca6:	40 e2       	ldi	r20, 0x20	; 32
    1ca8:	51 e4       	ldi	r21, 0x41	; 65
    1caa:	0e 94 31 26 	call	0x4c62	; 0x4c62 <__cmpsf2>
    1cae:	88 23       	and	r24, r24
    1cb0:	b4 f5       	brge	.+108    	; 0x1d1e <moveAway+0x202>
	{
			// BOOL moveForwardR = ~(moveX <= 0);
			// BOOL moveForwardL = ~(moveX > 0);
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    1cb2:	c2 01       	movw	r24, r4
    1cb4:	b1 01       	movw	r22, r2
    1cb6:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1cba:	8b 01       	movw	r16, r22
    1cbc:	77 ff       	sbrs	r23, 7
    1cbe:	03 c0       	rjmp	.+6      	; 0x1cc6 <moveAway+0x1aa>
    1cc0:	10 95       	com	r17
    1cc2:	01 95       	neg	r16
    1cc4:	1f 4f       	sbci	r17, 0xFF	; 255
    1cc6:	2d b7       	in	r18, 0x3d	; 61
    1cc8:	3e b7       	in	r19, 0x3e	; 62
    1cca:	29 50       	subi	r18, 0x09	; 9
    1ccc:	30 40       	sbci	r19, 0x00	; 0
    1cce:	0f b6       	in	r0, 0x3f	; 63
    1cd0:	f8 94       	cli
    1cd2:	3e bf       	out	0x3e, r19	; 62
    1cd4:	0f be       	out	0x3f, r0	; 63
    1cd6:	2d bf       	out	0x3d, r18	; 61
    1cd8:	ed b7       	in	r30, 0x3d	; 61
    1cda:	fe b7       	in	r31, 0x3e	; 62
    1cdc:	31 96       	adiw	r30, 0x01	; 1
    1cde:	88 ec       	ldi	r24, 0xC8	; 200
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	ad b7       	in	r26, 0x3d	; 61
    1ce4:	be b7       	in	r27, 0x3e	; 62
    1ce6:	12 96       	adiw	r26, 0x02	; 2
    1ce8:	9c 93       	st	X, r25
    1cea:	8e 93       	st	-X, r24
    1cec:	11 97       	sbiw	r26, 0x01	; 1
    1cee:	13 83       	std	Z+3, r17	; 0x03
    1cf0:	02 83       	std	Z+2, r16	; 0x02
    1cf2:	82 ec       	ldi	r24, 0xC2	; 194
    1cf4:	91 e0       	ldi	r25, 0x01	; 1
    1cf6:	95 83       	std	Z+5, r25	; 0x05
    1cf8:	84 83       	std	Z+4, r24	; 0x04
    1cfa:	16 82       	std	Z+6, r1	; 0x06
    1cfc:	10 86       	std	Z+8, r1	; 0x08
    1cfe:	17 82       	std	Z+7, r1	; 0x07
    1d00:	81 e0       	ldi	r24, 0x01	; 1
    1d02:	62 e0       	ldi	r22, 0x02	; 2
    1d04:	40 e0       	ldi	r20, 0x00	; 0
    1d06:	28 ec       	ldi	r18, 0xC8	; 200
    1d08:	30 e0       	ldi	r19, 0x00	; 0
    1d0a:	52 ec       	ldi	r21, 0xC2	; 194
    1d0c:	e5 2e       	mov	r14, r21
    1d0e:	51 e0       	ldi	r21, 0x01	; 1
    1d10:	f5 2e       	mov	r15, r21
    1d12:	cc 24       	eor	r12, r12
    1d14:	aa 24       	eor	r10, r10
    1d16:	bb 24       	eor	r11, r11
    1d18:	88 24       	eor	r8, r8
    1d1a:	83 94       	inc	r8
    1d1c:	42 c0       	rjmp	.+132    	; 0x1da2 <moveAway+0x286>
			
			// if the robot was shy
			// state that fact
			shyRobot = 1;
	}
	else if ((ltIR < IR_OBST_L_THRESH))
    1d1e:	69 81       	ldd	r22, Y+1	; 0x01
    1d20:	7a 81       	ldd	r23, Y+2	; 0x02
    1d22:	8b 81       	ldd	r24, Y+3	; 0x03
    1d24:	9c 81       	ldd	r25, Y+4	; 0x04
    1d26:	20 e0       	ldi	r18, 0x00	; 0
    1d28:	30 e0       	ldi	r19, 0x00	; 0
    1d2a:	40 e2       	ldi	r20, 0x20	; 32
    1d2c:	51 e4       	ldi	r21, 0x41	; 65
    1d2e:	0e 94 31 26 	call	0x4c62	; 0x4c62 <__cmpsf2>
    1d32:	87 fd       	sbrc	r24, 7
    1d34:	02 c0       	rjmp	.+4      	; 0x1d3a <moveAway+0x21e>
    1d36:	80 e0       	ldi	r24, 0x00	; 0
    1d38:	3f c0       	rjmp	.+126    	; 0x1db8 <moveAway+0x29c>
	{
			// BOOL moveForwardR = ~(moveX <= 0);
			// BOOL moveForwardL = ~(moveX > 0);
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    1d3a:	c2 01       	movw	r24, r4
    1d3c:	b1 01       	movw	r22, r2
    1d3e:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1d42:	8b 01       	movw	r16, r22
    1d44:	77 ff       	sbrs	r23, 7
    1d46:	03 c0       	rjmp	.+6      	; 0x1d4e <moveAway+0x232>
    1d48:	10 95       	com	r17
    1d4a:	01 95       	neg	r16
    1d4c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d4e:	2d b7       	in	r18, 0x3d	; 61
    1d50:	3e b7       	in	r19, 0x3e	; 62
    1d52:	29 50       	subi	r18, 0x09	; 9
    1d54:	30 40       	sbci	r19, 0x00	; 0
    1d56:	0f b6       	in	r0, 0x3f	; 63
    1d58:	f8 94       	cli
    1d5a:	3e bf       	out	0x3e, r19	; 62
    1d5c:	0f be       	out	0x3f, r0	; 63
    1d5e:	2d bf       	out	0x3d, r18	; 61
    1d60:	ed b7       	in	r30, 0x3d	; 61
    1d62:	fe b7       	in	r31, 0x3e	; 62
    1d64:	31 96       	adiw	r30, 0x01	; 1
    1d66:	88 ec       	ldi	r24, 0xC8	; 200
    1d68:	90 e0       	ldi	r25, 0x00	; 0
    1d6a:	ad b7       	in	r26, 0x3d	; 61
    1d6c:	be b7       	in	r27, 0x3e	; 62
    1d6e:	12 96       	adiw	r26, 0x02	; 2
    1d70:	9c 93       	st	X, r25
    1d72:	8e 93       	st	-X, r24
    1d74:	11 97       	sbiw	r26, 0x01	; 1
    1d76:	13 83       	std	Z+3, r17	; 0x03
    1d78:	02 83       	std	Z+2, r16	; 0x02
    1d7a:	82 ec       	ldi	r24, 0xC2	; 194
    1d7c:	91 e0       	ldi	r25, 0x01	; 1
    1d7e:	95 83       	std	Z+5, r25	; 0x05
    1d80:	84 83       	std	Z+4, r24	; 0x04
    1d82:	16 82       	std	Z+6, r1	; 0x06
    1d84:	10 86       	std	Z+8, r1	; 0x08
    1d86:	17 82       	std	Z+7, r1	; 0x07
    1d88:	81 e0       	ldi	r24, 0x01	; 1
    1d8a:	62 e0       	ldi	r22, 0x02	; 2
    1d8c:	41 e0       	ldi	r20, 0x01	; 1
    1d8e:	28 ec       	ldi	r18, 0xC8	; 200
    1d90:	30 e0       	ldi	r19, 0x00	; 0
    1d92:	92 ec       	ldi	r25, 0xC2	; 194
    1d94:	e9 2e       	mov	r14, r25
    1d96:	91 e0       	ldi	r25, 0x01	; 1
    1d98:	f9 2e       	mov	r15, r25
    1d9a:	cc 24       	eor	r12, r12
    1d9c:	aa 24       	eor	r10, r10
    1d9e:	bb 24       	eor	r11, r11
    1da0:	88 24       	eor	r8, r8
    1da2:	0e 94 f6 15 	call	0x2bec	; 0x2bec <STEPPER_move>
    1da6:	81 e0       	ldi	r24, 0x01	; 1
    1da8:	ed b7       	in	r30, 0x3d	; 61
    1daa:	fe b7       	in	r31, 0x3e	; 62
    1dac:	39 96       	adiw	r30, 0x09	; 9
    1dae:	0f b6       	in	r0, 0x3f	; 63
    1db0:	f8 94       	cli
    1db2:	fe bf       	out	0x3e, r31	; 62
    1db4:	0f be       	out	0x3f, r0	; 63
    1db6:	ed bf       	out	0x3d, r30	; 61
			// state that fact
			shyRobot = 1;
	}
	
	return shyRobot;
}
    1db8:	0f 90       	pop	r0
    1dba:	0f 90       	pop	r0
    1dbc:	0f 90       	pop	r0
    1dbe:	0f 90       	pop	r0
    1dc0:	cf 91       	pop	r28
    1dc2:	df 91       	pop	r29
    1dc4:	1f 91       	pop	r17
    1dc6:	0f 91       	pop	r16
    1dc8:	ff 90       	pop	r15
    1dca:	ef 90       	pop	r14
    1dcc:	df 90       	pop	r13
    1dce:	cf 90       	pop	r12
    1dd0:	bf 90       	pop	r11
    1dd2:	af 90       	pop	r10
    1dd4:	9f 90       	pop	r9
    1dd6:	8f 90       	pop	r8
    1dd8:	7f 90       	pop	r7
    1dda:	6f 90       	pop	r6
    1ddc:	5f 90       	pop	r5
    1dde:	4f 90       	pop	r4
    1de0:	3f 90       	pop	r3
    1de2:	2f 90       	pop	r2
    1de4:	08 95       	ret

00001de6 <moveWall>:
* Overview:			This function searches for walls and adjust the 
*					robots differential steering to attempts to
*					follow them
********************************************************************/
char moveWall( void )
{	
    1de6:	2f 92       	push	r2
    1de8:	3f 92       	push	r3
    1dea:	4f 92       	push	r4
    1dec:	5f 92       	push	r5
    1dee:	6f 92       	push	r6
    1df0:	7f 92       	push	r7
    1df2:	8f 92       	push	r8
    1df4:	9f 92       	push	r9
    1df6:	af 92       	push	r10
    1df8:	bf 92       	push	r11
    1dfa:	cf 92       	push	r12
    1dfc:	df 92       	push	r13
    1dfe:	ef 92       	push	r14
    1e00:	ff 92       	push	r15
    1e02:	0f 93       	push	r16
    1e04:	1f 93       	push	r17
	// Check for walls
	BOOL isWall = (ftIR < IR_WALL_F_THRESH)|(bkIR < IR_WALL_B_THRESH)|(rtIR < IR_WALL_R_THRESH)|(ltIR < IR_WALL_L_THRESH);
    1e06:	e0 90 28 02 	lds	r14, 0x0228
    1e0a:	f0 90 29 02 	lds	r15, 0x0229
    1e0e:	00 91 2a 02 	lds	r16, 0x022A
    1e12:	10 91 2b 02 	lds	r17, 0x022B
    1e16:	33 24       	eor	r3, r3
    1e18:	c8 01       	movw	r24, r16
    1e1a:	b7 01       	movw	r22, r14
    1e1c:	20 e0       	ldi	r18, 0x00	; 0
    1e1e:	30 e0       	ldi	r19, 0x00	; 0
    1e20:	48 eb       	ldi	r20, 0xB8	; 184
    1e22:	51 e4       	ldi	r21, 0x41	; 65
    1e24:	0e 94 31 26 	call	0x4c62	; 0x4c62 <__cmpsf2>
    1e28:	88 23       	and	r24, r24
    1e2a:	14 f4       	brge	.+4      	; 0x1e30 <moveWall+0x4a>
    1e2c:	33 24       	eor	r3, r3
    1e2e:	33 94       	inc	r3
    1e30:	a0 90 24 02 	lds	r10, 0x0224
    1e34:	b0 90 25 02 	lds	r11, 0x0225
    1e38:	c0 90 26 02 	lds	r12, 0x0226
    1e3c:	d0 90 27 02 	lds	r13, 0x0227
    1e40:	40 90 20 02 	lds	r4, 0x0220
    1e44:	50 90 21 02 	lds	r5, 0x0221
    1e48:	60 90 22 02 	lds	r6, 0x0222
    1e4c:	70 90 23 02 	lds	r7, 0x0223
    1e50:	88 24       	eor	r8, r8
    1e52:	60 91 2c 02 	lds	r22, 0x022C
    1e56:	70 91 2d 02 	lds	r23, 0x022D
    1e5a:	80 91 2e 02 	lds	r24, 0x022E
    1e5e:	90 91 2f 02 	lds	r25, 0x022F
    1e62:	20 e0       	ldi	r18, 0x00	; 0
    1e64:	30 e0       	ldi	r19, 0x00	; 0
    1e66:	48 eb       	ldi	r20, 0xB8	; 184
    1e68:	51 e4       	ldi	r21, 0x41	; 65
    1e6a:	0e 94 31 26 	call	0x4c62	; 0x4c62 <__cmpsf2>
    1e6e:	88 23       	and	r24, r24
    1e70:	14 f4       	brge	.+4      	; 0x1e76 <moveWall+0x90>
    1e72:	88 24       	eor	r8, r8
    1e74:	83 94       	inc	r8
    1e76:	93 2c       	mov	r9, r3
    1e78:	98 28       	or	r9, r8
    1e7a:	88 24       	eor	r8, r8
    1e7c:	c6 01       	movw	r24, r12
    1e7e:	b5 01       	movw	r22, r10
    1e80:	20 e0       	ldi	r18, 0x00	; 0
    1e82:	30 e0       	ldi	r19, 0x00	; 0
    1e84:	40 ea       	ldi	r20, 0xA0	; 160
    1e86:	51 e4       	ldi	r21, 0x41	; 65
    1e88:	0e 94 31 26 	call	0x4c62	; 0x4c62 <__cmpsf2>
    1e8c:	88 23       	and	r24, r24
    1e8e:	14 f4       	brge	.+4      	; 0x1e94 <moveWall+0xae>
    1e90:	88 24       	eor	r8, r8
    1e92:	83 94       	inc	r8
    1e94:	98 28       	or	r9, r8
    1e96:	88 24       	eor	r8, r8
    1e98:	c3 01       	movw	r24, r6
    1e9a:	b2 01       	movw	r22, r4
    1e9c:	20 e0       	ldi	r18, 0x00	; 0
    1e9e:	30 e0       	ldi	r19, 0x00	; 0
    1ea0:	40 ea       	ldi	r20, 0xA0	; 160
    1ea2:	51 e4       	ldi	r21, 0x41	; 65
    1ea4:	0e 94 31 26 	call	0x4c62	; 0x4c62 <__cmpsf2>
    1ea8:	88 23       	and	r24, r24
    1eaa:	14 f4       	brge	.+4      	; 0x1eb0 <moveWall+0xca>
    1eac:	88 24       	eor	r8, r8
    1eae:	83 94       	inc	r8
    1eb0:	29 2c       	mov	r2, r9
    1eb2:	28 28       	or	r2, r8
	if(!isWall){	
    1eb4:	09 f4       	brne	.+2      	; 0x1eb8 <moveWall+0xd2>
    1eb6:	fd c0       	rjmp	.+506    	; 0x20b2 <moveWall+0x2cc>
	// A variable that contains the logic of which wall is imaginary
	BOOL isLEFT;
	
	// If there is no wall on our right side
	// place an imaginary wall just within the threshold
	if(rtIR>IR_WALL_R_THRESH){
    1eb8:	c6 01       	movw	r24, r12
    1eba:	b5 01       	movw	r22, r10
    1ebc:	20 e0       	ldi	r18, 0x00	; 0
    1ebe:	30 e0       	ldi	r19, 0x00	; 0
    1ec0:	40 ea       	ldi	r20, 0xA0	; 160
    1ec2:	51 e4       	ldi	r21, 0x41	; 65
    1ec4:	0e 94 80 27 	call	0x4f00	; 0x4f00 <__gesf2>
    1ec8:	18 16       	cp	r1, r24
    1eca:	64 f4       	brge	.+24     	; 0x1ee4 <moveWall+0xfe>
		rtIR = IR_WALL_R_THRESH-15;
    1ecc:	80 e0       	ldi	r24, 0x00	; 0
    1ece:	90 e0       	ldi	r25, 0x00	; 0
    1ed0:	a0 ea       	ldi	r26, 0xA0	; 160
    1ed2:	b0 e4       	ldi	r27, 0x40	; 64
    1ed4:	80 93 24 02 	sts	0x0224, r24
    1ed8:	90 93 25 02 	sts	0x0225, r25
    1edc:	a0 93 26 02 	sts	0x0226, r26
    1ee0:	b0 93 27 02 	sts	0x0227, r27
		isLEFT = 0;
	}
	// If there is no wall on our left side
	// place an imaginary wall just within the threshold
	if(ltIR>IR_WALL_L_THRESH){
    1ee4:	c3 01       	movw	r24, r6
    1ee6:	b2 01       	movw	r22, r4
    1ee8:	20 e0       	ldi	r18, 0x00	; 0
    1eea:	30 e0       	ldi	r19, 0x00	; 0
    1eec:	40 ea       	ldi	r20, 0xA0	; 160
    1eee:	51 e4       	ldi	r21, 0x41	; 65
    1ef0:	0e 94 80 27 	call	0x4f00	; 0x4f00 <__gesf2>
    1ef4:	18 16       	cp	r1, r24
    1ef6:	14 f0       	brlt	.+4      	; 0x1efc <moveWall+0x116>
    1ef8:	80 e0       	ldi	r24, 0x00	; 0
    1efa:	0d c0       	rjmp	.+26     	; 0x1f16 <moveWall+0x130>
		ltIR = IR_WALL_L_THRESH-15;
    1efc:	80 e0       	ldi	r24, 0x00	; 0
    1efe:	90 e0       	ldi	r25, 0x00	; 0
    1f00:	a0 ea       	ldi	r26, 0xA0	; 160
    1f02:	b0 e4       	ldi	r27, 0x40	; 64
    1f04:	80 93 20 02 	sts	0x0220, r24
    1f08:	90 93 21 02 	sts	0x0221, r25
    1f0c:	a0 93 22 02 	sts	0x0222, r26
    1f10:	b0 93 23 02 	sts	0x0223, r27
    1f14:	81 e0       	ldi	r24, 0x01	; 1
	}
	
	float error;
	
	// Check to see if the wall exists in front of the robot
	if(ftIR < IR_WALL_F_THRESH)
    1f16:	33 20       	and	r3, r3
    1f18:	21 f1       	breq	.+72     	; 0x1f62 <moveWall+0x17c>
	{
		// if the imaginary wall was on the left side
		// then biased the error so that when the robot encounters
		// an upcoming corner, the robot will turn away from both walls
		if (isLEFT)
    1f1a:	88 23       	and	r24, r24
    1f1c:	29 f0       	breq	.+10     	; 0x1f28 <moveWall+0x142>
		{
			error = rtIR - (ltIR + (1000/ftIR));
    1f1e:	60 e0       	ldi	r22, 0x00	; 0
    1f20:	70 e0       	ldi	r23, 0x00	; 0
    1f22:	8a e7       	ldi	r24, 0x7A	; 122
    1f24:	94 e4       	ldi	r25, 0x44	; 68
    1f26:	04 c0       	rjmp	.+8      	; 0x1f30 <moveWall+0x14a>
		}
		// biased the error appropriately for the inverse situation
		else 
		{
			error = rtIR - (ltIR - (1000/ftIR));
    1f28:	60 e0       	ldi	r22, 0x00	; 0
    1f2a:	70 e0       	ldi	r23, 0x00	; 0
    1f2c:	8a e7       	ldi	r24, 0x7A	; 122
    1f2e:	94 ec       	ldi	r25, 0xC4	; 196
    1f30:	a8 01       	movw	r20, r16
    1f32:	97 01       	movw	r18, r14
    1f34:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1f38:	20 91 20 02 	lds	r18, 0x0220
    1f3c:	30 91 21 02 	lds	r19, 0x0221
    1f40:	40 91 22 02 	lds	r20, 0x0222
    1f44:	50 91 23 02 	lds	r21, 0x0223
    1f48:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
    1f4c:	9b 01       	movw	r18, r22
    1f4e:	ac 01       	movw	r20, r24
    1f50:	60 91 24 02 	lds	r22, 0x0224
    1f54:	70 91 25 02 	lds	r23, 0x0225
    1f58:	80 91 26 02 	lds	r24, 0x0226
    1f5c:	90 91 27 02 	lds	r25, 0x0227
    1f60:	10 c0       	rjmp	.+32     	; 0x1f82 <moveWall+0x19c>
	// the air is simply the right distance minus the left left distance
	// this ensures symmetry that the robot will follow in between the two walls
	// either one real and one imaginary, or both real
	else 
	{
		error = rtIR - ltIR;
    1f62:	60 91 24 02 	lds	r22, 0x0224
    1f66:	70 91 25 02 	lds	r23, 0x0225
    1f6a:	80 91 26 02 	lds	r24, 0x0226
    1f6e:	90 91 27 02 	lds	r25, 0x0227
    1f72:	20 91 20 02 	lds	r18, 0x0220
    1f76:	30 91 21 02 	lds	r19, 0x0221
    1f7a:	40 91 22 02 	lds	r20, 0x0222
    1f7e:	50 91 23 02 	lds	r21, 0x0223
    1f82:	0e 94 cc 25 	call	0x4b98	; 0x4b98 <__subsf3>
    1f86:	e6 2f       	mov	r30, r22
	}

	// Use the PID controller function to calculate error
	float effort = pidController(error, 0);
    1f88:	2e 2f       	mov	r18, r30
    1f8a:	37 2f       	mov	r19, r23
    1f8c:	48 2f       	mov	r20, r24
    1f8e:	59 2f       	mov	r21, r25
    1f90:	b9 01       	movw	r22, r18
    1f92:	ca 01       	movw	r24, r20
    1f94:	40 e0       	ldi	r20, 0x00	; 0
    1f96:	0e 94 a1 07 	call	0xf42	; 0xf42 <pidController>
    1f9a:	6b 01       	movw	r12, r22
    1f9c:	7c 01       	movw	r14, r24
	
	// Limit the control effort to the max allowable effort
	if((abs(effort) > MAX_EFFORT)&(effort!=0)){
    1f9e:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <__fixsfsi>
    1fa2:	8b 01       	movw	r16, r22
    1fa4:	77 ff       	sbrs	r23, 7
    1fa6:	03 c0       	rjmp	.+6      	; 0x1fae <moveWall+0x1c8>
    1fa8:	10 95       	com	r17
    1faa:	01 95       	neg	r16
    1fac:	1f 4f       	sbci	r17, 0xFF	; 255
    1fae:	05 36       	cpi	r16, 0x65	; 101
    1fb0:	11 05       	cpc	r17, r1
    1fb2:	fc f0       	brlt	.+62     	; 0x1ff2 <moveWall+0x20c>
    1fb4:	c7 01       	movw	r24, r14
    1fb6:	b6 01       	movw	r22, r12
    1fb8:	20 e0       	ldi	r18, 0x00	; 0
    1fba:	30 e0       	ldi	r19, 0x00	; 0
    1fbc:	40 e0       	ldi	r20, 0x00	; 0
    1fbe:	50 e0       	ldi	r21, 0x00	; 0
    1fc0:	0e 94 31 26 	call	0x4c62	; 0x4c62 <__cmpsf2>
    1fc4:	88 23       	and	r24, r24
    1fc6:	a9 f0       	breq	.+42     	; 0x1ff2 <moveWall+0x20c>
		effort = MAX_EFFORT*(effort/abs(effort));
    1fc8:	b8 01       	movw	r22, r16
    1fca:	88 27       	eor	r24, r24
    1fcc:	77 fd       	sbrc	r23, 7
    1fce:	80 95       	com	r24
    1fd0:	98 2f       	mov	r25, r24
    1fd2:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    1fd6:	9b 01       	movw	r18, r22
    1fd8:	ac 01       	movw	r20, r24
    1fda:	c7 01       	movw	r24, r14
    1fdc:	b6 01       	movw	r22, r12
    1fde:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    1fe2:	20 e0       	ldi	r18, 0x00	; 0
    1fe4:	30 e0       	ldi	r19, 0x00	; 0
    1fe6:	48 ec       	ldi	r20, 0xC8	; 200
    1fe8:	52 e4       	ldi	r21, 0x42	; 66
    1fea:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    1fee:	6b 01       	movw	r12, r22
    1ff0:	7c 01       	movw	r14, r24
	}
	
	// Calculate the stepper speeds for each wheel using a ratio
	float stepper_speed_L = MAX_SPEED/2 + (MAX_SPEED/2)*(effort/MAX_EFFORT);
    1ff2:	c7 01       	movw	r24, r14
    1ff4:	b6 01       	movw	r22, r12
    1ff6:	20 e0       	ldi	r18, 0x00	; 0
    1ff8:	30 e0       	ldi	r19, 0x00	; 0
    1ffa:	48 ec       	ldi	r20, 0xC8	; 200
    1ffc:	52 e4       	ldi	r21, 0x42	; 66
    1ffe:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    2002:	6b 01       	movw	r12, r22
    2004:	7c 01       	movw	r14, r24
	float stepper_speed_R = MAX_SPEED/2 - (MAX_SPEED/2)*(effort/MAX_EFFORT);
	
	// Move with wall
	STEPPER_move_stnb( STEPPER_BOTH, 
    2006:	8d b7       	in	r24, 0x3d	; 61
    2008:	9e b7       	in	r25, 0x3e	; 62
    200a:	09 97       	sbiw	r24, 0x09	; 9
    200c:	0f b6       	in	r0, 0x3f	; 63
    200e:	f8 94       	cli
    2010:	9e bf       	out	0x3e, r25	; 62
    2012:	0f be       	out	0x3f, r0	; 63
    2014:	8d bf       	out	0x3d, r24	; 61
    2016:	0d b7       	in	r16, 0x3d	; 61
    2018:	1e b7       	in	r17, 0x3e	; 62
    201a:	0f 5f       	subi	r16, 0xFF	; 255
    201c:	1f 4f       	sbci	r17, 0xFF	; 255
    201e:	c7 01       	movw	r24, r14
    2020:	b6 01       	movw	r22, r12
    2022:	20 e0       	ldi	r18, 0x00	; 0
    2024:	30 e0       	ldi	r19, 0x00	; 0
    2026:	48 ec       	ldi	r20, 0xC8	; 200
    2028:	52 e4       	ldi	r21, 0x42	; 66
    202a:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    202e:	20 e0       	ldi	r18, 0x00	; 0
    2030:	30 e0       	ldi	r19, 0x00	; 0
    2032:	48 ec       	ldi	r20, 0xC8	; 200
    2034:	52 e4       	ldi	r21, 0x42	; 66
    2036:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
    203a:	0e 94 a2 26 	call	0x4d44	; 0x4d44 <__fixunssfsi>
    203e:	4b 01       	movw	r8, r22
    2040:	5c 01       	movw	r10, r24
    2042:	82 e3       	ldi	r24, 0x32	; 50
    2044:	90 e0       	ldi	r25, 0x00	; 0
    2046:	f8 01       	movw	r30, r16
    2048:	91 83       	std	Z+1, r25	; 0x01
    204a:	80 83       	st	Z, r24
    204c:	c7 01       	movw	r24, r14
    204e:	b6 01       	movw	r22, r12
    2050:	20 e0       	ldi	r18, 0x00	; 0
    2052:	30 e0       	ldi	r19, 0x00	; 0
    2054:	48 ec       	ldi	r20, 0xC8	; 200
    2056:	52 ec       	ldi	r21, 0xC2	; 194
    2058:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    205c:	20 e0       	ldi	r18, 0x00	; 0
    205e:	30 e0       	ldi	r19, 0x00	; 0
    2060:	48 ec       	ldi	r20, 0xC8	; 200
    2062:	52 e4       	ldi	r21, 0x42	; 66
    2064:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__addsf3>
    2068:	0e 94 a2 26 	call	0x4d44	; 0x4d44 <__fixunssfsi>
    206c:	f8 01       	movw	r30, r16
    206e:	73 83       	std	Z+3, r23	; 0x03
    2070:	62 83       	std	Z+2, r22	; 0x02
    2072:	82 ec       	ldi	r24, 0xC2	; 194
    2074:	91 e0       	ldi	r25, 0x01	; 1
    2076:	95 83       	std	Z+5, r25	; 0x05
    2078:	84 83       	std	Z+4, r24	; 0x04
    207a:	16 82       	std	Z+6, r1	; 0x06
    207c:	10 86       	std	Z+8, r1	; 0x08
    207e:	17 82       	std	Z+7, r1	; 0x07
    2080:	81 e0       	ldi	r24, 0x01	; 1
    2082:	62 e0       	ldi	r22, 0x02	; 2
    2084:	41 e0       	ldi	r20, 0x01	; 1
    2086:	22 e3       	ldi	r18, 0x32	; 50
    2088:	30 e0       	ldi	r19, 0x00	; 0
    208a:	84 01       	movw	r16, r8
    208c:	e2 ec       	ldi	r30, 0xC2	; 194
    208e:	ee 2e       	mov	r14, r30
    2090:	e1 e0       	ldi	r30, 0x01	; 1
    2092:	fe 2e       	mov	r15, r30
    2094:	cc 24       	eor	r12, r12
    2096:	aa 24       	eor	r10, r10
    2098:	bb 24       	eor	r11, r11
    209a:	88 24       	eor	r8, r8
    209c:	83 94       	inc	r8
    209e:	0e 94 f6 15 	call	0x2bec	; 0x2bec <STEPPER_move>
    20a2:	8d b7       	in	r24, 0x3d	; 61
    20a4:	9e b7       	in	r25, 0x3e	; 62
    20a6:	09 96       	adiw	r24, 0x09	; 9
    20a8:	0f b6       	in	r0, 0x3f	; 63
    20aa:	f8 94       	cli
    20ac:	9e bf       	out	0x3e, r25	; 62
    20ae:	0f be       	out	0x3f, r0	; 63
    20b0:	8d bf       	out	0x3d, r24	; 61
	// debug LCP print statement
	// LCD_clear();
	// LCD_printf("bkIR: %3.2f\nmoveWall\nError: %3f\nEffort: %3f\n", bkIR, error, effort);
	return isWall;
	
}
    20b2:	82 2d       	mov	r24, r2
    20b4:	1f 91       	pop	r17
    20b6:	0f 91       	pop	r16
    20b8:	ff 90       	pop	r15
    20ba:	ef 90       	pop	r14
    20bc:	df 90       	pop	r13
    20be:	cf 90       	pop	r12
    20c0:	bf 90       	pop	r11
    20c2:	af 90       	pop	r10
    20c4:	9f 90       	pop	r9
    20c6:	8f 90       	pop	r8
    20c8:	7f 90       	pop	r7
    20ca:	6f 90       	pop	r6
    20cc:	5f 90       	pop	r5
    20ce:	4f 90       	pop	r4
    20d0:	3f 90       	pop	r3
    20d2:	2f 90       	pop	r2
    20d4:	08 95       	ret

000020d6 <checkContactIR>:
* Output Return:	none
* Overview:			Acquires status of contact sensors
********************************************************************/
void checkContactIR(void)
{
	unsigned char sensors = ATTINY_get_sensors();
    20d6:	0e 94 e2 18 	call	0x31c4	; 0x31c4 <ATTINY_get_sensors>
	rightContact = 0b00000001 & sensors;
    20da:	28 2f       	mov	r18, r24
    20dc:	21 70       	andi	r18, 0x01	; 1
    20de:	20 93 29 04 	sts	0x0429, r18
	leftContact =  (0b00000010 & sensors)>>1;
    20e2:	90 e0       	ldi	r25, 0x00	; 0
    20e4:	82 70       	andi	r24, 0x02	; 2
    20e6:	90 70       	andi	r25, 0x00	; 0
    20e8:	95 95       	asr	r25
    20ea:	87 95       	ror	r24
    20ec:	80 93 2a 04 	sts	0x042A, r24
	
	
}
    20f0:	08 95       	ret

000020f2 <checkLightSensor>:
*					sensors values sequentially
********************************************************************/
void checkLightSensor( void )
{
	// Update both light sensor variables
	rightLightVolt = getRightLight();
    20f2:	0e 94 58 05 	call	0xab0	; 0xab0 <getRightLight>
    20f6:	60 93 30 02 	sts	0x0230, r22
    20fa:	70 93 31 02 	sts	0x0231, r23
    20fe:	80 93 32 02 	sts	0x0232, r24
    2102:	90 93 33 02 	sts	0x0233, r25
	leftLightVolt = getLeftLight();
    2106:	0e 94 6d 05 	call	0xada	; 0xada <getLeftLight>
    210a:	60 93 34 02 	sts	0x0234, r22
    210e:	70 93 35 02 	sts	0x0235, r23
    2112:	80 93 36 02 	sts	0x0236, r24
    2116:	90 93 37 02 	sts	0x0237, r25
	// LCD_printf("R Voltage: %3.2f\nL Voltage: %3.2f\n\n\n", voltageR, voltageL);
	// TMRSRVC_delay(2000);//wait 2 seconds
	// LCD_clear();
}
    211a:	08 95       	ret

0000211c <checkIR>:
*					finding sensor values sequentially
********************************************************************/
void checkIR( void )
{
	// Update all IR values
	ftIR = getFrontIR();
    211c:	0e 94 ef 04 	call	0x9de	; 0x9de <getFrontIR>
    2120:	60 93 28 02 	sts	0x0228, r22
    2124:	70 93 29 02 	sts	0x0229, r23
    2128:	80 93 2a 02 	sts	0x022A, r24
    212c:	90 93 2b 02 	sts	0x022B, r25
	bkIR = getBackIR();
    2130:	0e 94 cc 04 	call	0x998	; 0x998 <getBackIR>
    2134:	60 93 2c 02 	sts	0x022C, r22
    2138:	70 93 2d 02 	sts	0x022D, r23
    213c:	80 93 2e 02 	sts	0x022E, r24
    2140:	90 93 2f 02 	sts	0x022F, r25
	ltIR = getLeftIR();
    2144:	0e 94 35 05 	call	0xa6a	; 0xa6a <getLeftIR>
    2148:	60 93 20 02 	sts	0x0220, r22
    214c:	70 93 21 02 	sts	0x0221, r23
    2150:	80 93 22 02 	sts	0x0222, r24
    2154:	90 93 23 02 	sts	0x0223, r25
	rtIR = getRightIR();
    2158:	0e 94 12 05 	call	0xa24	; 0xa24 <getRightIR>
    215c:	60 93 24 02 	sts	0x0224, r22
    2160:	70 93 25 02 	sts	0x0225, r23
    2164:	80 93 26 02 	sts	0x0226, r24
    2168:	90 93 27 02 	sts	0x0227, r25
}
    216c:	08 95       	ret

0000216e <moveWander>:
* Output Return:	none
* Overview:			This function checks for walls and moves the 
*					robot randomly if walls are not detected
********************************************************************/
char moveWander ( void )
{	
    216e:	8f 92       	push	r8
    2170:	af 92       	push	r10
    2172:	bf 92       	push	r11
    2174:	cf 92       	push	r12
    2176:	df 92       	push	r13
    2178:	ef 92       	push	r14
    217a:	ff 92       	push	r15
    217c:	0f 93       	push	r16
    217e:	1f 93       	push	r17
    2180:	cf 93       	push	r28
    2182:	df 93       	push	r29
	// notify that we have
	char isWander = 1;
	
	// if we are wondering
	// first check the current progress of our wondering
	STEPPER_STEPS curr_steps = STEPPER_get_nSteps();
    2184:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <STEPPER_get_nSteps>
	
	
	// IF my motion is complete do another random motion
	if ((curr_steps.left == 0)&(curr_steps.right == 0))
    2188:	67 2b       	or	r22, r23
    218a:	09 f0       	breq	.+2      	; 0x218e <moveWander+0x20>
    218c:	76 c0       	rjmp	.+236    	; 0x227a <moveWander+0x10c>
    218e:	89 2b       	or	r24, r25
    2190:	09 f0       	breq	.+2      	; 0x2194 <moveWander+0x26>
    2192:	73 c0       	rjmp	.+230    	; 0x227a <moveWander+0x10c>
	{
		// create random values for wheel position and wheel speed
		int moveRand = rand()%400+400;
    2194:	0e 94 dc 2e 	call	0x5db8	; 0x5db8 <rand>
    2198:	8c 01       	movw	r16, r24
		float turnRandR = rand()%200+200;
    219a:	0e 94 dc 2e 	call	0x5db8	; 0x5db8 <rand>
    219e:	ec 01       	movw	r28, r24
		float turnRandL = rand()%200+200;
    21a0:	0e 94 dc 2e 	call	0x5db8	; 0x5db8 <rand>
    21a4:	7c 01       	movw	r14, r24
		
		// Weight the chance that we will go forward slightly more
		// so that the robot may possibly traverse farther
		BOOL direction = ~((rand()%10)>7);
    21a6:	0e 94 dc 2e 	call	0x5db8	; 0x5db8 <rand>
    21aa:	20 e0       	ldi	r18, 0x00	; 0
    21ac:	6a e0       	ldi	r22, 0x0A	; 10
    21ae:	70 e0       	ldi	r23, 0x00	; 0
    21b0:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <__divmodhi4>
    21b4:	08 97       	sbiw	r24, 0x08	; 8
    21b6:	0c f0       	brlt	.+2      	; 0x21ba <moveWander+0x4c>
    21b8:	21 e0       	ldi	r18, 0x01	; 1
    21ba:	82 2e       	mov	r8, r18
    21bc:	80 94       	com	r8
				
		// Move.
		STEPPER_move_stnb( STEPPER_BOTH, 
    21be:	c8 01       	movw	r24, r16
    21c0:	60 e9       	ldi	r22, 0x90	; 144
    21c2:	71 e0       	ldi	r23, 0x01	; 1
    21c4:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <__divmodhi4>
    21c8:	b0 e9       	ldi	r27, 0x90	; 144
    21ca:	ab 2e       	mov	r10, r27
    21cc:	b1 e0       	ldi	r27, 0x01	; 1
    21ce:	bb 2e       	mov	r11, r27
    21d0:	a8 0e       	add	r10, r24
    21d2:	b9 1e       	adc	r11, r25
    21d4:	8d b7       	in	r24, 0x3d	; 61
    21d6:	9e b7       	in	r25, 0x3e	; 62
    21d8:	09 97       	sbiw	r24, 0x09	; 9
    21da:	0f b6       	in	r0, 0x3f	; 63
    21dc:	f8 94       	cli
    21de:	9e bf       	out	0x3e, r25	; 62
    21e0:	0f be       	out	0x3f, r0	; 63
    21e2:	8d bf       	out	0x3d, r24	; 61
    21e4:	0d b7       	in	r16, 0x3d	; 61
    21e6:	1e b7       	in	r17, 0x3e	; 62
    21e8:	0f 5f       	subi	r16, 0xFF	; 255
    21ea:	1f 4f       	sbci	r17, 0xFF	; 255
    21ec:	c7 01       	movw	r24, r14
    21ee:	68 ec       	ldi	r22, 0xC8	; 200
    21f0:	70 e0       	ldi	r23, 0x00	; 0
    21f2:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <__divmodhi4>
    21f6:	88 53       	subi	r24, 0x38	; 56
    21f8:	9f 4f       	sbci	r25, 0xFF	; 255
    21fa:	aa 27       	eor	r26, r26
    21fc:	97 fd       	sbrc	r25, 7
    21fe:	a0 95       	com	r26
    2200:	ba 2f       	mov	r27, r26
    2202:	bc 01       	movw	r22, r24
    2204:	cd 01       	movw	r24, r26
    2206:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    220a:	0e 94 a2 26 	call	0x4d44	; 0x4d44 <__fixunssfsi>
    220e:	6b 01       	movw	r12, r22
    2210:	7c 01       	movw	r14, r24
    2212:	f8 01       	movw	r30, r16
    2214:	b1 82       	std	Z+1, r11	; 0x01
    2216:	a0 82       	st	Z, r10
    2218:	ce 01       	movw	r24, r28
    221a:	68 ec       	ldi	r22, 0xC8	; 200
    221c:	70 e0       	ldi	r23, 0x00	; 0
    221e:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <__divmodhi4>
    2222:	88 53       	subi	r24, 0x38	; 56
    2224:	9f 4f       	sbci	r25, 0xFF	; 255
    2226:	aa 27       	eor	r26, r26
    2228:	97 fd       	sbrc	r25, 7
    222a:	a0 95       	com	r26
    222c:	ba 2f       	mov	r27, r26
    222e:	bc 01       	movw	r22, r24
    2230:	cd 01       	movw	r24, r26
    2232:	0e 94 d0 26 	call	0x4da0	; 0x4da0 <__floatsisf>
    2236:	0e 94 a2 26 	call	0x4d44	; 0x4d44 <__fixunssfsi>
    223a:	f8 01       	movw	r30, r16
    223c:	73 83       	std	Z+3, r23	; 0x03
    223e:	62 83       	std	Z+2, r22	; 0x02
    2240:	82 ec       	ldi	r24, 0xC2	; 194
    2242:	91 e0       	ldi	r25, 0x01	; 1
    2244:	95 83       	std	Z+5, r25	; 0x05
    2246:	84 83       	std	Z+4, r24	; 0x04
    2248:	16 82       	std	Z+6, r1	; 0x06
    224a:	10 86       	std	Z+8, r1	; 0x08
    224c:	17 82       	std	Z+7, r1	; 0x07
    224e:	81 e0       	ldi	r24, 0x01	; 1
    2250:	62 e0       	ldi	r22, 0x02	; 2
    2252:	48 2d       	mov	r20, r8
    2254:	95 01       	movw	r18, r10
    2256:	86 01       	movw	r16, r12
    2258:	a2 ec       	ldi	r26, 0xC2	; 194
    225a:	ea 2e       	mov	r14, r26
    225c:	a1 e0       	ldi	r26, 0x01	; 1
    225e:	fa 2e       	mov	r15, r26
    2260:	cc 24       	eor	r12, r12
    2262:	aa 24       	eor	r10, r10
    2264:	bb 24       	eor	r11, r11
    2266:	0e 94 f6 15 	call	0x2bec	; 0x2bec <STEPPER_move>
    226a:	8d b7       	in	r24, 0x3d	; 61
    226c:	9e b7       	in	r25, 0x3e	; 62
    226e:	09 96       	adiw	r24, 0x09	; 9
    2270:	0f b6       	in	r0, 0x3f	; 63
    2272:	f8 94       	cli
    2274:	9e bf       	out	0x3e, r25	; 62
    2276:	0f be       	out	0x3f, r0	; 63
    2278:	8d bf       	out	0x3d, r24	; 61
		// debug LCP print statement
		// LCD_clear();
		// LCD_printf("moveWander\nmoveRand: %3d\nturnRandR: %3d\nturnRandL: %3d\n",moveRand,turnRandR,turnRandL);
		}
	return isWander;
}
    227a:	81 e0       	ldi	r24, 0x01	; 1
    227c:	df 91       	pop	r29
    227e:	cf 91       	pop	r28
    2280:	1f 91       	pop	r17
    2282:	0f 91       	pop	r16
    2284:	ff 90       	pop	r15
    2286:	ef 90       	pop	r14
    2288:	df 90       	pop	r13
    228a:	cf 90       	pop	r12
    228c:	bf 90       	pop	r11
    228e:	af 90       	pop	r10
    2290:	8f 90       	pop	r8
    2292:	08 95       	ret

00002294 <moveWorld>:
* Input Variables:	void
* Output Return:	char
* Overview:		    Moves robot through the world
********************************************************************/
char moveWorld( void )
{	
    2294:	1f 93       	push	r17
	char currentMove = moveCommands[currentMoveWorld];
    2296:	e0 91 39 02 	lds	r30, 0x0239
    229a:	f0 e0       	ldi	r31, 0x00	; 0
    229c:	e8 55       	subi	r30, 0x58	; 88
    229e:	fc 4f       	sbci	r31, 0xFC	; 252
    22a0:	10 81       	ld	r17, Z
	LCD_clear();
    22a2:	0e 94 15 13 	call	0x262a	; 0x262a <LCD_clear>
	switch(currentMove){
    22a6:	12 30       	cpi	r17, 0x02	; 2
    22a8:	41 f0       	breq	.+16     	; 0x22ba <moveWorld+0x26>
    22aa:	13 30       	cpi	r17, 0x03	; 3
    22ac:	51 f0       	breq	.+20     	; 0x22c2 <moveWorld+0x2e>
    22ae:	11 30       	cpi	r17, 0x01	; 1
    22b0:	61 f4       	brne	.+24     	; 0x22ca <moveWorld+0x36>
		case 1:
			LCD_printf("Left");
    22b2:	00 d0       	rcall	.+0      	; 0x22b4 <moveWorld+0x20>
    22b4:	84 e2       	ldi	r24, 0x24	; 36
    22b6:	91 e0       	ldi	r25, 0x01	; 1
    22b8:	0b c0       	rjmp	.+22     	; 0x22d0 <moveWorld+0x3c>
			break;
		case 2:
			LCD_printf("Forward");
    22ba:	00 d0       	rcall	.+0      	; 0x22bc <moveWorld+0x28>
    22bc:	89 e2       	ldi	r24, 0x29	; 41
    22be:	91 e0       	ldi	r25, 0x01	; 1
    22c0:	07 c0       	rjmp	.+14     	; 0x22d0 <moveWorld+0x3c>
			break;
		case 3:
			LCD_printf("Right");
    22c2:	00 d0       	rcall	.+0      	; 0x22c4 <moveWorld+0x30>
    22c4:	81 e3       	ldi	r24, 0x31	; 49
    22c6:	91 e0       	ldi	r25, 0x01	; 1
    22c8:	03 c0       	rjmp	.+6      	; 0x22d0 <moveWorld+0x3c>
			break;
		default:
			LCD_printf("What?!");
    22ca:	00 d0       	rcall	.+0      	; 0x22cc <moveWorld+0x38>
    22cc:	87 e3       	ldi	r24, 0x37	; 55
    22ce:	91 e0       	ldi	r25, 0x01	; 1
    22d0:	ed b7       	in	r30, 0x3d	; 61
    22d2:	fe b7       	in	r31, 0x3e	; 62
    22d4:	92 83       	std	Z+2, r25	; 0x02
    22d6:	81 83       	std	Z+1, r24	; 0x01
    22d8:	0e 94 05 30 	call	0x600a	; 0x600a <printf>
    22dc:	0f 90       	pop	r0
    22de:	0f 90       	pop	r0
			break;
	}
	TMRSRVC_delay(1000);//wait 1 seconds
    22e0:	88 ee       	ldi	r24, 0xE8	; 232
    22e2:	93 e0       	ldi	r25, 0x03	; 3
    22e4:	0e 94 b0 19 	call	0x3360	; 0x3360 <TMRSRVC_delay>
	currentMoveWorld += 1;
    22e8:	80 91 39 02 	lds	r24, 0x0239
    22ec:	8f 5f       	subi	r24, 0xFF	; 255
    22ee:	80 93 39 02 	sts	0x0239, r24
	return 1;
}
    22f2:	81 e0       	ldi	r24, 0x01	; 1
    22f4:	1f 91       	pop	r17
    22f6:	08 95       	ret

000022f8 <moveBehavior>:
* Overview:		    This is the flow for the behavior of the robot
********************************************************************/
char moveBehavior( int behavior)
{
	// Check the moveAway behavior for obstacles
	if(moveAway()){
    22f8:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <moveAway>
    22fc:	88 23       	and	r24, r24
    22fe:	71 f0       	breq	.+28     	; 0x231c <moveBehavior+0x24>
		Ierror = 0;
    2300:	80 e0       	ldi	r24, 0x00	; 0
    2302:	90 e0       	ldi	r25, 0x00	; 0
    2304:	a0 e0       	ldi	r26, 0x00	; 0
    2306:	b0 e0       	ldi	r27, 0x00	; 0
    2308:	80 93 18 02 	sts	0x0218, r24
    230c:	90 93 19 02 	sts	0x0219, r25
    2310:	a0 93 1a 02 	sts	0x021A, r26
    2314:	b0 93 1b 02 	sts	0x021B, r27
    2318:	81 e0       	ldi	r24, 0x01	; 1
    231a:	08 95       	ret
		return 1; 
	}
	
	if(moveWorld()){
    231c:	0e 94 4a 11 	call	0x2294	; 0x2294 <moveWorld>
    2320:	88 23       	and	r24, r24
    2322:	71 f0       	breq	.+28     	; 0x2340 <moveBehavior+0x48>
		Ierror = 0;
    2324:	80 e0       	ldi	r24, 0x00	; 0
    2326:	90 e0       	ldi	r25, 0x00	; 0
    2328:	a0 e0       	ldi	r26, 0x00	; 0
    232a:	b0 e0       	ldi	r27, 0x00	; 0
    232c:	80 93 18 02 	sts	0x0218, r24
    2330:	90 93 19 02 	sts	0x0219, r25
    2334:	a0 93 1a 02 	sts	0x021A, r26
    2338:	b0 93 1b 02 	sts	0x021B, r27
    233c:	82 e0       	ldi	r24, 0x02	; 2
    233e:	08 95       	ret
		return 2; 
	}
	
	if(moveWallFlagStatus){
    2340:	80 91 38 02 	lds	r24, 0x0238
    2344:	88 23       	and	r24, r24
    2346:	91 f0       	breq	.+36     	; 0x236c <moveBehavior+0x74>
		// Run the moveWall behavior
		if(moveWall()){
    2348:	0e 94 f3 0e 	call	0x1de6	; 0x1de6 <moveWall>
    234c:	88 23       	and	r24, r24
    234e:	71 f0       	breq	.+28     	; 0x236c <moveBehavior+0x74>
			Ierror = 0;
    2350:	80 e0       	ldi	r24, 0x00	; 0
    2352:	90 e0       	ldi	r25, 0x00	; 0
    2354:	a0 e0       	ldi	r26, 0x00	; 0
    2356:	b0 e0       	ldi	r27, 0x00	; 0
    2358:	80 93 18 02 	sts	0x0218, r24
    235c:	90 93 19 02 	sts	0x0219, r25
    2360:	a0 93 1a 02 	sts	0x021A, r26
    2364:	b0 93 1b 02 	sts	0x021B, r27
    2368:	83 e0       	ldi	r24, 0x03	; 3
    236a:	08 95       	ret
			return 3;
    236c:	80 e0       	ldi	r24, 0x00	; 0
		}
	}
	return 0;	
}
    236e:	08 95       	ret

00002370 <movesInput>:
* Output Return:	void
* Overview:			Stores the button values pressed by user into an
*					array of max size 32.
********************************************************************/
void movesInput( void )
{
    2370:	cf 92       	push	r12
    2372:	df 92       	push	r13
    2374:	ff 92       	push	r15
    2376:	0f 93       	push	r16
    2378:	1f 93       	push	r17
    237a:	cf 93       	push	r28
    237c:	df 93       	push	r29
    237e:	01 e0       	ldi	r16, 0x01	; 1
    2380:	ff 24       	eor	r15, r15
    2382:	f3 94       	inc	r15
    2384:	c0 e0       	ldi	r28, 0x00	; 0
    2386:	d0 e0       	ldi	r29, 0x00	; 0
		}
		
		moveCommands[ii] = btnHolder;
		
		LCD_clear();
		LCD_printf("Old Command: %i\nNew Command: %i\nCommand Num %i\n\n",btnHolderOld,btnHolder,ii);
    2388:	1e e3       	ldi	r17, 0x3E	; 62
    238a:	c1 2e       	mov	r12, r17
    238c:	11 e0       	ldi	r17, 0x01	; 1
    238e:	d1 2e       	mov	r13, r17
    2390:	3a c0       	rjmp	.+116    	; 0x2406 <movesInput+0x96>
	unsigned char btnHolderOld = UNPRESSED;
		
	for (unsigned char ii = 0; ii < MAX_MOVE_SIZE; ii++){
		// while NO buttons are pressed
		while(btnHolder == UNPRESSED){
			btnHolder = WaitButton();
    2392:	0e 94 a5 05 	call	0xb4a	; 0xb4a <WaitButton>
    2396:	18 2f       	mov	r17, r24
	unsigned char btnHolder = UNPRESSED;
	unsigned char btnHolderOld = UNPRESSED;
		
	for (unsigned char ii = 0; ii < MAX_MOVE_SIZE; ii++){
		// while NO buttons are pressed
		while(btnHolder == UNPRESSED){
    2398:	11 30       	cpi	r17, 0x01	; 1
    239a:	d9 f3       	breq	.-10     	; 0x2392 <movesInput+0x22>
			btnHolder = WaitButton();
		}
		
		moveCommands[ii] = btnHolder;
    239c:	fe 01       	movw	r30, r28
    239e:	e8 55       	subi	r30, 0x58	; 88
    23a0:	fc 4f       	sbci	r31, 0xFC	; 252
    23a2:	10 83       	st	Z, r17
		
		LCD_clear();
    23a4:	0e 94 15 13 	call	0x262a	; 0x262a <LCD_clear>
		LCD_printf("Old Command: %i\nNew Command: %i\nCommand Num %i\n\n",btnHolderOld,btnHolder,ii);
    23a8:	8d b7       	in	r24, 0x3d	; 61
    23aa:	9e b7       	in	r25, 0x3e	; 62
    23ac:	08 97       	sbiw	r24, 0x08	; 8
    23ae:	0f b6       	in	r0, 0x3f	; 63
    23b0:	f8 94       	cli
    23b2:	9e bf       	out	0x3e, r25	; 62
    23b4:	0f be       	out	0x3f, r0	; 63
    23b6:	8d bf       	out	0x3d, r24	; 61
    23b8:	ed b7       	in	r30, 0x3d	; 61
    23ba:	fe b7       	in	r31, 0x3e	; 62
    23bc:	31 96       	adiw	r30, 0x01	; 1
    23be:	ad b7       	in	r26, 0x3d	; 61
    23c0:	be b7       	in	r27, 0x3e	; 62
    23c2:	12 96       	adiw	r26, 0x02	; 2
    23c4:	dc 92       	st	X, r13
    23c6:	ce 92       	st	-X, r12
    23c8:	11 97       	sbiw	r26, 0x01	; 1
    23ca:	f2 82       	std	Z+2, r15	; 0x02
    23cc:	13 82       	std	Z+3, r1	; 0x03
    23ce:	14 83       	std	Z+4, r17	; 0x04
    23d0:	15 82       	std	Z+5, r1	; 0x05
    23d2:	d7 83       	std	Z+7, r29	; 0x07
    23d4:	c6 83       	std	Z+6, r28	; 0x06
    23d6:	0e 94 05 30 	call	0x600a	; 0x600a <printf>
    23da:	8d b7       	in	r24, 0x3d	; 61
    23dc:	9e b7       	in	r25, 0x3e	; 62
    23de:	08 96       	adiw	r24, 0x08	; 8
    23e0:	0f b6       	in	r0, 0x3f	; 63
    23e2:	f8 94       	cli
    23e4:	9e bf       	out	0x3e, r25	; 62
    23e6:	0f be       	out	0x3f, r0	; 63
    23e8:	8d bf       	out	0x3d, r24	; 61
		btnHolderOld = btnHolder;		
		
		while(btnHolder == btnHolderOld){
			btnHolder = WaitButton();
    23ea:	0e 94 a5 05 	call	0xb4a	; 0xb4a <WaitButton>
    23ee:	08 2f       	mov	r16, r24
		
		LCD_clear();
		LCD_printf("Old Command: %i\nNew Command: %i\nCommand Num %i\n\n",btnHolderOld,btnHolder,ii);
		btnHolderOld = btnHolder;		
		
		while(btnHolder == btnHolderOld){
    23f0:	81 17       	cp	r24, r17
    23f2:	d9 f3       	breq	.-10     	; 0x23ea <movesInput+0x7a>
			btnHolder = WaitButton();
		}
		TMRSRVC_delay(100);	//wait 0.5 seconds
    23f4:	84 e6       	ldi	r24, 0x64	; 100
    23f6:	90 e0       	ldi	r25, 0x00	; 0
    23f8:	0e 94 b0 19 	call	0x3360	; 0x3360 <TMRSRVC_delay>
    23fc:	21 96       	adiw	r28, 0x01	; 1
    23fe:	f1 2e       	mov	r15, r17
{
	// Initialize a button holder
	unsigned char btnHolder = UNPRESSED;
	unsigned char btnHolderOld = UNPRESSED;
		
	for (unsigned char ii = 0; ii < MAX_MOVE_SIZE; ii++){
    2400:	c9 30       	cpi	r28, 0x09	; 9
    2402:	d1 05       	cpc	r29, r1
    2404:	11 f0       	breq	.+4      	; 0x240a <movesInput+0x9a>
    2406:	10 2f       	mov	r17, r16
    2408:	c7 cf       	rjmp	.-114    	; 0x2398 <movesInput+0x28>
		while(btnHolder == btnHolderOld){
			btnHolder = WaitButton();
		}
		TMRSRVC_delay(100);	//wait 0.5 seconds
	}
}
    240a:	df 91       	pop	r29
    240c:	cf 91       	pop	r28
    240e:	1f 91       	pop	r17
    2410:	0f 91       	pop	r16
    2412:	ff 90       	pop	r15
    2414:	df 90       	pop	r13
    2416:	cf 90       	pop	r12
    2418:	08 95       	ret

0000241a <worldInput>:
* Output Return:	void
* Overview:			Allows the user to initialize the location of
*					the robot 
********************************************************************/
void worldInput( void )
{
    241a:	ff 92       	push	r15
    241c:	0f 93       	push	r16
    241e:	1f 93       	push	r17
    2420:	cf 93       	push	r28
    2422:	df 93       	push	r29
    2424:	11 e0       	ldi	r17, 0x01	; 1
    2426:	ff 24       	eor	r15, r15
		
		currentCellWorld = currentCellWorld << 1;
		currentCellWorld += (btnHolder-1);
				
		LCD_clear();
		LCD_printf("Current World Cell:\n%u\n\n",currentCellWorld);
    2428:	cf e6       	ldi	r28, 0x6F	; 111
    242a:	d1 e0       	ldi	r29, 0x01	; 1
    242c:	30 c0       	rjmp	.+96     	; 0x248e <worldInput+0x74>
	unsigned char btnHolderOld = UNPRESSED;
		
	for (unsigned char i = 0; i < WORLD_ROW_SIZE; i++){
		// while NO buttons are pressed
		while(btnHolder == UNPRESSED){
			btnHolder = WaitButton();
    242e:	0e 94 a5 05 	call	0xb4a	; 0xb4a <WaitButton>
    2432:	08 2f       	mov	r16, r24
	unsigned char btnHolder = UNPRESSED;
	unsigned char btnHolderOld = UNPRESSED;
		
	for (unsigned char i = 0; i < WORLD_ROW_SIZE; i++){
		// while NO buttons are pressed
		while(btnHolder == UNPRESSED){
    2434:	01 30       	cpi	r16, 0x01	; 1
    2436:	d9 f3       	breq	.-10     	; 0x242e <worldInput+0x14>
			btnHolder = WaitButton();
		}
		
		currentCellWorld = currentCellWorld << 1;
		currentCellWorld += (btnHolder-1);
    2438:	80 91 3a 02 	lds	r24, 0x023A
    243c:	88 0f       	add	r24, r24
    243e:	81 50       	subi	r24, 0x01	; 1
    2440:	80 0f       	add	r24, r16
    2442:	80 93 3a 02 	sts	0x023A, r24
				
		LCD_clear();
    2446:	0e 94 15 13 	call	0x262a	; 0x262a <LCD_clear>
		LCD_printf("Current World Cell:\n%u\n\n",currentCellWorld);
    244a:	00 d0       	rcall	.+0      	; 0x244c <worldInput+0x32>
    244c:	00 d0       	rcall	.+0      	; 0x244e <worldInput+0x34>
    244e:	ed b7       	in	r30, 0x3d	; 61
    2450:	fe b7       	in	r31, 0x3e	; 62
    2452:	31 96       	adiw	r30, 0x01	; 1
    2454:	ad b7       	in	r26, 0x3d	; 61
    2456:	be b7       	in	r27, 0x3e	; 62
    2458:	12 96       	adiw	r26, 0x02	; 2
    245a:	dc 93       	st	X, r29
    245c:	ce 93       	st	-X, r28
    245e:	11 97       	sbiw	r26, 0x01	; 1
    2460:	80 91 3a 02 	lds	r24, 0x023A
    2464:	82 83       	std	Z+2, r24	; 0x02
    2466:	13 82       	std	Z+3, r1	; 0x03
    2468:	0e 94 05 30 	call	0x600a	; 0x600a <printf>
    246c:	0f 90       	pop	r0
    246e:	0f 90       	pop	r0
    2470:	0f 90       	pop	r0
    2472:	0f 90       	pop	r0
		btnHolderOld = btnHolder;		
		
		while(btnHolder == btnHolderOld){
			btnHolder = WaitButton();
    2474:	0e 94 a5 05 	call	0xb4a	; 0xb4a <WaitButton>
    2478:	18 2f       	mov	r17, r24
				
		LCD_clear();
		LCD_printf("Current World Cell:\n%u\n\n",currentCellWorld);
		btnHolderOld = btnHolder;		
		
		while(btnHolder == btnHolderOld){
    247a:	80 17       	cp	r24, r16
    247c:	d9 f3       	breq	.-10     	; 0x2474 <worldInput+0x5a>
			btnHolder = WaitButton();
		}
		TMRSRVC_delay(100);	//wait 0.5 seconds
    247e:	84 e6       	ldi	r24, 0x64	; 100
    2480:	90 e0       	ldi	r25, 0x00	; 0
    2482:	0e 94 b0 19 	call	0x3360	; 0x3360 <TMRSRVC_delay>
{
	// Initialize a button holder
	unsigned char btnHolder = UNPRESSED;
	unsigned char btnHolderOld = UNPRESSED;
		
	for (unsigned char i = 0; i < WORLD_ROW_SIZE; i++){
    2486:	f3 94       	inc	r15
    2488:	b4 e0       	ldi	r27, 0x04	; 4
    248a:	fb 16       	cp	r15, r27
    248c:	11 f0       	breq	.+4      	; 0x2492 <worldInput+0x78>
    248e:	01 2f       	mov	r16, r17
    2490:	d1 cf       	rjmp	.-94     	; 0x2434 <worldInput+0x1a>
		while(btnHolder == btnHolderOld){
			btnHolder = WaitButton();
		}
		TMRSRVC_delay(100);	//wait 0.5 seconds
	}
}
    2492:	df 91       	pop	r29
    2494:	cf 91       	pop	r28
    2496:	1f 91       	pop	r17
    2498:	0f 91       	pop	r16
    249a:	ff 90       	pop	r15
    249c:	08 95       	ret

0000249e <CBOT_main>:
* Function:        void CBOT_main( void )
********************************************************************/

void CBOT_main( void )
{
	ATopstat = ATTINY_open();//open the tiny microcontroller
    249e:	0e 94 61 19 	call	0x32c2	; 0x32c2 <ATTINY_open>
    24a2:	90 93 b7 02 	sts	0x02B7, r25
    24a6:	80 93 b6 02 	sts	0x02B6, r24
	LEopstat = LED_open(); //open the LED module
    24aa:	0e 94 1b 14 	call	0x2836	; 0x2836 <LED_open>
    24ae:	90 93 b5 02 	sts	0x02B5, r25
    24b2:	80 93 b4 02 	sts	0x02B4, r24
	LCopstat = LCD_open(); //open the LCD module
    24b6:	0e 94 32 13 	call	0x2664	; 0x2664 <LCD_open>
    24ba:	90 93 b3 02 	sts	0x02B3, r25
    24be:	80 93 b2 02 	sts	0x02B2, r24
	STEPPER_open(); // Open STEPPER module for use
    24c2:	0e 94 9d 16 	call	0x2d3a	; 0x2d3a <STEPPER_open>
	SPKR_open(SPKR_BEEP_MODE);//open the speaker in beep mode
    24c6:	81 e0       	ldi	r24, 0x01	; 1
    24c8:	0e 94 21 15 	call	0x2a42	; 0x2a42 <SPKR_open>
	
	LED_open();
    24cc:	0e 94 1b 14 	call	0x2836	; 0x2836 <LED_open>
	I2C_open();
    24d0:	0e 94 bb 1a 	call	0x3576	; 0x3576 <I2C_open>
	ADC_open();//open the ADC module
    24d4:	0e 94 9f 12 	call	0x253e	; 0x253e <ADC_open>
 	ADC_set_VREF( ADC_VREF_AVCC );// Set the Voltage Reference first so VREF=5V.
    24d8:	81 e0       	ldi	r24, 0x01	; 1
    24da:	0e 94 01 13 	call	0x2602	; 0x2602 <ADC_set_VREF>

	// Initialize IR Values and Reset Prefilter
	checkIR();
    24de:	0e 94 8e 10 	call	0x211c	; 0x211c <checkIR>
	prefilter(1);
    24e2:	81 e0       	ldi	r24, 0x01	; 1
    24e4:	0e 94 0a 06 	call	0xc14	; 0xc14 <prefilter>
	
	
	LCD_printf("ENTER move commands\n\n\n\n");
    24e8:	88 e8       	ldi	r24, 0x88	; 136
    24ea:	91 e0       	ldi	r25, 0x01	; 1
    24ec:	0e 94 17 30 	call	0x602e	; 0x602e <puts>
	TMRSRVC_delay(1000);//wait 1 seconds
    24f0:	88 ee       	ldi	r24, 0xE8	; 232
    24f2:	93 e0       	ldi	r25, 0x03	; 3
    24f4:	0e 94 b0 19 	call	0x3360	; 0x3360 <TMRSRVC_delay>
	LCD_clear();
    24f8:	0e 94 15 13 	call	0x262a	; 0x262a <LCD_clear>
	movesInput();
    24fc:	0e 94 b8 11 	call	0x2370	; 0x2370 <movesInput>
	TMRSRVC_delay(1000);//wait 1 seconds
    2500:	88 ee       	ldi	r24, 0xE8	; 232
    2502:	93 e0       	ldi	r25, 0x03	; 3
    2504:	0e 94 b0 19 	call	0x3360	; 0x3360 <TMRSRVC_delay>
	LCD_clear();
    2508:	0e 94 15 13 	call	0x262a	; 0x262a <LCD_clear>
	
	LCD_printf("ENTER current location\n\n\n\n");	
    250c:	8f e9       	ldi	r24, 0x9F	; 159
    250e:	91 e0       	ldi	r25, 0x01	; 1
    2510:	0e 94 17 30 	call	0x602e	; 0x602e <puts>
	TMRSRVC_delay(1000);//wait 1 seconds
    2514:	88 ee       	ldi	r24, 0xE8	; 232
    2516:	93 e0       	ldi	r25, 0x03	; 3
    2518:	0e 94 b0 19 	call	0x3360	; 0x3360 <TMRSRVC_delay>
	LCD_clear();
    251c:	0e 94 15 13 	call	0x262a	; 0x262a <LCD_clear>
	worldInput();
    2520:	0e 94 0d 12 	call	0x241a	; 0x241a <worldInput>
	TMRSRVC_delay(3000);//wait 3 seconds
    2524:	88 eb       	ldi	r24, 0xB8	; 184
    2526:	9b e0       	ldi	r25, 0x0B	; 11
    2528:	0e 94 b0 19 	call	0x3360	; 0x3360 <TMRSRVC_delay>
	LCD_clear();
    252c:	0e 94 15 13 	call	0x262a	; 0x262a <LCD_clear>
	// Infinite loop
	while (1)
    {
		// update the sensor values
		// checkLightSensor();
		checkIR();
    2530:	0e 94 8e 10 	call	0x211c	; 0x211c <checkIR>
		checkContactIR();
    2534:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <checkContactIR>
		// LCD_printf("FrontIR = %3.2f\nBackIR = %3.2f\nLeftIR = %3.2f\nRightIR = %3.2f\n", ftIR,bkIR,ltIR,rtIR);
		// TMRSRVC_delay(1000);//wait 1 seconds
		
		// run the moveBehavior FSM
		// moveBehavior(1);
		moveWorld();	
    2538:	0e 94 4a 11 	call	0x2294	; 0x2294 <moveWorld>
    253c:	f9 cf       	rjmp	.-14     	; 0x2530 <CBOT_main+0x92>

0000253e <ADC_open>:
    253e:	8f e0       	ldi	r24, 0x0F	; 15
    2540:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    2544:	88 23       	and	r24, r24
    2546:	31 f4       	brne	.+12     	; 0x2554 <ADC_open+0x16>
    2548:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <__ADC_init>
    254c:	8f e0       	ldi	r24, 0x0F	; 15
    254e:	61 e0       	ldi	r22, 0x01	; 1
    2550:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    2554:	8f e0       	ldi	r24, 0x0F	; 15
    2556:	91 e0       	ldi	r25, 0x01	; 1
    2558:	08 95       	ret

0000255a <ADC_sample>:
    255a:	8f e0       	ldi	r24, 0x0F	; 15
    255c:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    2560:	81 30       	cpi	r24, 0x01	; 1
    2562:	19 f0       	breq	.+6      	; 0x256a <ADC_sample+0x10>
    2564:	20 e0       	ldi	r18, 0x00	; 0
    2566:	30 e0       	ldi	r19, 0x00	; 0
    2568:	13 c0       	rjmp	.+38     	; 0x2590 <ADC_sample+0x36>
    256a:	80 91 7a 00 	lds	r24, 0x007A
    256e:	80 64       	ori	r24, 0x40	; 64
    2570:	80 93 7a 00 	sts	0x007A, r24
    2574:	80 91 7a 00 	lds	r24, 0x007A
    2578:	86 fd       	sbrc	r24, 6
    257a:	fc cf       	rjmp	.-8      	; 0x2574 <ADC_sample+0x1a>
    257c:	30 91 78 00 	lds	r19, 0x0078
    2580:	20 91 79 00 	lds	r18, 0x0079
    2584:	92 2f       	mov	r25, r18
    2586:	80 e0       	ldi	r24, 0x00	; 0
    2588:	23 2f       	mov	r18, r19
    258a:	30 e0       	ldi	r19, 0x00	; 0
    258c:	28 2b       	or	r18, r24
    258e:	39 2b       	or	r19, r25
    2590:	c9 01       	movw	r24, r18
    2592:	08 95       	ret

00002594 <ADC_set_channel>:
    2594:	58 2f       	mov	r21, r24
    2596:	80 91 b9 01 	lds	r24, 0x01B9
    259a:	88 30       	cpi	r24, 0x08	; 8
    259c:	d8 f4       	brcc	.+54     	; 0x25d4 <ADC_set_channel+0x40>
    259e:	40 91 7e 00 	lds	r20, 0x007E
    25a2:	21 e0       	ldi	r18, 0x01	; 1
    25a4:	30 e0       	ldi	r19, 0x00	; 0
    25a6:	b9 01       	movw	r22, r18
    25a8:	02 c0       	rjmp	.+4      	; 0x25ae <ADC_set_channel+0x1a>
    25aa:	66 0f       	add	r22, r22
    25ac:	77 1f       	adc	r23, r23
    25ae:	8a 95       	dec	r24
    25b0:	e2 f7       	brpl	.-8      	; 0x25aa <ADC_set_channel+0x16>
    25b2:	cb 01       	movw	r24, r22
    25b4:	80 95       	com	r24
    25b6:	84 23       	and	r24, r20
    25b8:	80 93 7e 00 	sts	0x007E, r24
    25bc:	80 91 7e 00 	lds	r24, 0x007E
    25c0:	05 2e       	mov	r0, r21
    25c2:	02 c0       	rjmp	.+4      	; 0x25c8 <ADC_set_channel+0x34>
    25c4:	22 0f       	add	r18, r18
    25c6:	33 1f       	adc	r19, r19
    25c8:	0a 94       	dec	r0
    25ca:	e2 f7       	brpl	.-8      	; 0x25c4 <ADC_set_channel+0x30>
    25cc:	82 2b       	or	r24, r18
    25ce:	80 93 7e 00 	sts	0x007E, r24
    25d2:	0d c0       	rjmp	.+26     	; 0x25ee <ADC_set_channel+0x5a>
    25d4:	20 91 7e 00 	lds	r18, 0x007E
    25d8:	81 e0       	ldi	r24, 0x01	; 1
    25da:	90 e0       	ldi	r25, 0x00	; 0
    25dc:	05 2e       	mov	r0, r21
    25de:	02 c0       	rjmp	.+4      	; 0x25e4 <ADC_set_channel+0x50>
    25e0:	88 0f       	add	r24, r24
    25e2:	99 1f       	adc	r25, r25
    25e4:	0a 94       	dec	r0
    25e6:	e2 f7       	brpl	.-8      	; 0x25e0 <ADC_set_channel+0x4c>
    25e8:	28 2b       	or	r18, r24
    25ea:	20 93 7e 00 	sts	0x007E, r18
    25ee:	50 93 b9 01 	sts	0x01B9, r21
    25f2:	80 91 7c 00 	lds	r24, 0x007C
    25f6:	5f 71       	andi	r21, 0x1F	; 31
    25f8:	80 7e       	andi	r24, 0xE0	; 224
    25fa:	85 2b       	or	r24, r21
    25fc:	80 93 7c 00 	sts	0x007C, r24
    2600:	08 95       	ret

00002602 <ADC_set_VREF>:
    2602:	ec e7       	ldi	r30, 0x7C	; 124
    2604:	f0 e0       	ldi	r31, 0x00	; 0
    2606:	90 81       	ld	r25, Z
    2608:	82 95       	swap	r24
    260a:	88 0f       	add	r24, r24
    260c:	88 0f       	add	r24, r24
    260e:	80 7c       	andi	r24, 0xC0	; 192
    2610:	9f 73       	andi	r25, 0x3F	; 63
    2612:	98 2b       	or	r25, r24
    2614:	90 83       	st	Z, r25
    2616:	08 95       	ret

00002618 <main>:
    2618:	0e 94 fb 1a 	call	0x35f6	; 0x35f6 <CBOT_ISR_init>
    261c:	0e 94 ed 1a 	call	0x35da	; 0x35da <CBOT_init>
    2620:	0e 94 4f 12 	call	0x249e	; 0x249e <CBOT_main>
    2624:	80 e0       	ldi	r24, 0x00	; 0
    2626:	90 e0       	ldi	r25, 0x00	; 0
    2628:	08 95       	ret

0000262a <LCD_clear>:
    262a:	0f 93       	push	r16
    262c:	1f 93       	push	r17
    262e:	80 e4       	ldi	r24, 0x40	; 64
    2630:	60 e0       	ldi	r22, 0x00	; 0
    2632:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    2636:	00 e0       	ldi	r16, 0x00	; 0
    2638:	80 2f       	mov	r24, r16
    263a:	60 e0       	ldi	r22, 0x00	; 0
    263c:	0e 94 db 13 	call	0x27b6	; 0x27b6 <LCD_set_PGC_addr>
    2640:	10 e0       	ldi	r17, 0x00	; 0
    2642:	80 e0       	ldi	r24, 0x00	; 0
    2644:	61 e0       	ldi	r22, 0x01	; 1
    2646:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    264a:	1f 5f       	subi	r17, 0xFF	; 255
    264c:	10 38       	cpi	r17, 0x80	; 128
    264e:	c9 f7       	brne	.-14     	; 0x2642 <LCD_clear+0x18>
    2650:	0f 5f       	subi	r16, 0xFF	; 255
    2652:	04 30       	cpi	r16, 0x04	; 4
    2654:	89 f7       	brne	.-30     	; 0x2638 <LCD_clear+0xe>
    2656:	83 e0       	ldi	r24, 0x03	; 3
    2658:	60 e0       	ldi	r22, 0x00	; 0
    265a:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <LCD_set_next_PGC>
    265e:	1f 91       	pop	r17
    2660:	0f 91       	pop	r16
    2662:	08 95       	ret

00002664 <LCD_open>:
    2664:	0f 93       	push	r16
    2666:	1f 93       	push	r17
    2668:	82 e0       	ldi	r24, 0x02	; 2
    266a:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    266e:	88 23       	and	r24, r24
    2670:	11 f4       	brne	.+4      	; 0x2676 <LCD_open+0x12>
    2672:	82 e0       	ldi	r24, 0x02	; 2
    2674:	06 c0       	rjmp	.+12     	; 0x2682 <LCD_open+0x1e>
    2676:	81 e0       	ldi	r24, 0x01	; 1
    2678:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    267c:	88 23       	and	r24, r24
    267e:	19 f4       	brne	.+6      	; 0x2686 <LCD_open+0x22>
    2680:	81 e0       	ldi	r24, 0x01	; 1
    2682:	90 e0       	ldi	r25, 0x00	; 0
    2684:	6d c0       	rjmp	.+218    	; 0x2760 <LCD_open+0xfc>
    2686:	0e 94 63 1d 	call	0x3ac6	; 0x3ac6 <__LCD_init>
    268a:	85 e0       	ldi	r24, 0x05	; 5
    268c:	61 e0       	ldi	r22, 0x01	; 1
    268e:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    2692:	8e ea       	ldi	r24, 0xAE	; 174
    2694:	60 e0       	ldi	r22, 0x00	; 0
    2696:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    269a:	82 ea       	ldi	r24, 0xA2	; 162
    269c:	60 e0       	ldi	r22, 0x00	; 0
    269e:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    26a2:	80 ea       	ldi	r24, 0xA0	; 160
    26a4:	60 e0       	ldi	r22, 0x00	; 0
    26a6:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    26aa:	00 e5       	ldi	r16, 0x50	; 80
    26ac:	13 ec       	ldi	r17, 0xC3	; 195
    26ae:	c8 01       	movw	r24, r16
    26b0:	01 97       	sbiw	r24, 0x01	; 1
    26b2:	f1 f7       	brne	.-4      	; 0x26b0 <LCD_open+0x4c>
    26b4:	80 ec       	ldi	r24, 0xC0	; 192
    26b6:	60 e0       	ldi	r22, 0x00	; 0
    26b8:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    26bc:	8f e2       	ldi	r24, 0x2F	; 47
    26be:	60 e0       	ldi	r22, 0x00	; 0
    26c0:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    26c4:	81 e8       	ldi	r24, 0x81	; 129
    26c6:	60 e0       	ldi	r22, 0x00	; 0
    26c8:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    26cc:	86 e1       	ldi	r24, 0x16	; 22
    26ce:	60 e0       	ldi	r22, 0x00	; 0
    26d0:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    26d4:	82 e2       	ldi	r24, 0x22	; 34
    26d6:	60 e0       	ldi	r22, 0x00	; 0
    26d8:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    26dc:	c8 01       	movw	r24, r16
    26de:	01 97       	sbiw	r24, 0x01	; 1
    26e0:	f1 f7       	brne	.-4      	; 0x26de <LCD_open+0x7a>
    26e2:	8f ea       	ldi	r24, 0xAF	; 175
    26e4:	60 e0       	ldi	r22, 0x00	; 0
    26e6:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    26ea:	86 ea       	ldi	r24, 0xA6	; 166
    26ec:	60 e0       	ldi	r22, 0x00	; 0
    26ee:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    26f2:	85 ea       	ldi	r24, 0xA5	; 165
    26f4:	60 e0       	ldi	r22, 0x00	; 0
    26f6:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    26fa:	80 e0       	ldi	r24, 0x00	; 0
    26fc:	90 e0       	ldi	r25, 0x00	; 0
    26fe:	28 e8       	ldi	r18, 0x88	; 136
    2700:	33 e1       	ldi	r19, 0x13	; 19
    2702:	f9 01       	movw	r30, r18
    2704:	31 97       	sbiw	r30, 0x01	; 1
    2706:	f1 f7       	brne	.-4      	; 0x2704 <LCD_open+0xa0>
    2708:	01 96       	adiw	r24, 0x01	; 1
    270a:	43 e0       	ldi	r20, 0x03	; 3
    270c:	88 3e       	cpi	r24, 0xE8	; 232
    270e:	94 07       	cpc	r25, r20
    2710:	c1 f7       	brne	.-16     	; 0x2702 <LCD_open+0x9e>
    2712:	83 eb       	ldi	r24, 0xB3	; 179
    2714:	60 e0       	ldi	r22, 0x00	; 0
    2716:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    271a:	80 e4       	ldi	r24, 0x40	; 64
    271c:	60 e0       	ldi	r22, 0x00	; 0
    271e:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    2722:	83 e0       	ldi	r24, 0x03	; 3
    2724:	60 e0       	ldi	r22, 0x00	; 0
    2726:	0e 94 db 13 	call	0x27b6	; 0x27b6 <LCD_set_PGC_addr>
    272a:	83 e0       	ldi	r24, 0x03	; 3
    272c:	60 e0       	ldi	r22, 0x00	; 0
    272e:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <LCD_set_next_PGC>
    2732:	10 92 f1 04 	sts	0x04F1, r1
    2736:	10 92 f3 04 	sts	0x04F3, r1
    273a:	10 92 f2 04 	sts	0x04F2, r1
    273e:	88 ec       	ldi	r24, 0xC8	; 200
    2740:	91 e0       	ldi	r25, 0x01	; 1
    2742:	90 93 22 05 	sts	0x0522, r25
    2746:	80 93 21 05 	sts	0x0521, r24
    274a:	88 e1       	ldi	r24, 0x18	; 24
    274c:	0e 94 b3 13 	call	0x2766	; 0x2766 <LCD_set_backlight>
    2750:	0e 94 15 13 	call	0x262a	; 0x262a <LCD_clear>
    2754:	84 ea       	ldi	r24, 0xA4	; 164
    2756:	60 e0       	ldi	r22, 0x00	; 0
    2758:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    275c:	85 e0       	ldi	r24, 0x05	; 5
    275e:	91 e0       	ldi	r25, 0x01	; 1
    2760:	1f 91       	pop	r17
    2762:	0f 91       	pop	r16
    2764:	08 95       	ret

00002766 <LCD_set_backlight>:
    2766:	1f 93       	push	r17
    2768:	18 2f       	mov	r17, r24
    276a:	85 e0       	ldi	r24, 0x05	; 5
    276c:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    2770:	81 30       	cpi	r24, 0x01	; 1
    2772:	c1 f4       	brne	.+48     	; 0x27a4 <LCD_set_backlight+0x3e>
    2774:	87 e0       	ldi	r24, 0x07	; 7
    2776:	0e 94 30 14 	call	0x2860	; 0x2860 <SPI_set_slave_addr>
    277a:	82 e0       	ldi	r24, 0x02	; 2
    277c:	6a e0       	ldi	r22, 0x0A	; 10
    277e:	0e 94 81 14 	call	0x2902	; 0x2902 <SPI_transmit>
    2782:	82 e0       	ldi	r24, 0x02	; 2
    2784:	61 eb       	ldi	r22, 0xB1	; 177
    2786:	0e 94 81 14 	call	0x2902	; 0x2902 <SPI_transmit>
    278a:	61 2f       	mov	r22, r17
    278c:	11 32       	cpi	r17, 0x21	; 33
    278e:	08 f0       	brcs	.+2      	; 0x2792 <LCD_set_backlight+0x2c>
    2790:	60 e2       	ldi	r22, 0x20	; 32
    2792:	82 e0       	ldi	r24, 0x02	; 2
    2794:	0e 94 81 14 	call	0x2902	; 0x2902 <SPI_transmit>
    2798:	89 ee       	ldi	r24, 0xE9	; 233
    279a:	8a 95       	dec	r24
    279c:	f1 f7       	brne	.-4      	; 0x279a <LCD_set_backlight+0x34>
    279e:	87 e0       	ldi	r24, 0x07	; 7
    27a0:	0e 94 30 14 	call	0x2860	; 0x2860 <SPI_set_slave_addr>
    27a4:	1f 91       	pop	r17
    27a6:	08 95       	ret

000027a8 <LCD_set_next_PGC>:
    27a8:	83 70       	andi	r24, 0x03	; 3
    27aa:	6f 77       	andi	r22, 0x7F	; 127
    27ac:	60 93 ef 04 	sts	0x04EF, r22
    27b0:	80 93 f0 04 	sts	0x04F0, r24
    27b4:	08 95       	ret

000027b6 <LCD_set_PGC_addr>:
    27b6:	0f 93       	push	r16
    27b8:	1f 93       	push	r17
    27ba:	06 2f       	mov	r16, r22
    27bc:	16 2f       	mov	r17, r22
    27be:	1f 77       	andi	r17, 0x7F	; 127
    27c0:	83 70       	andi	r24, 0x03	; 3
    27c2:	80 6b       	ori	r24, 0xB0	; 176
    27c4:	60 e0       	ldi	r22, 0x00	; 0
    27c6:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    27ca:	12 95       	swap	r17
    27cc:	1f 70       	andi	r17, 0x0F	; 15
    27ce:	81 2f       	mov	r24, r17
    27d0:	80 61       	ori	r24, 0x10	; 16
    27d2:	60 e0       	ldi	r22, 0x00	; 0
    27d4:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    27d8:	80 2f       	mov	r24, r16
    27da:	8f 70       	andi	r24, 0x0F	; 15
    27dc:	60 e0       	ldi	r22, 0x00	; 0
    27de:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    27e2:	1f 91       	pop	r17
    27e4:	0f 91       	pop	r16
    27e6:	08 95       	ret

000027e8 <LCD_write>:
    27e8:	0f 93       	push	r16
    27ea:	1f 93       	push	r17
    27ec:	08 2f       	mov	r16, r24
    27ee:	16 2f       	mov	r17, r22
    27f0:	85 e0       	ldi	r24, 0x05	; 5
    27f2:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    27f6:	81 30       	cpi	r24, 0x01	; 1
    27f8:	79 f4       	brne	.+30     	; 0x2818 <LCD_write+0x30>
    27fa:	11 23       	and	r17, r17
    27fc:	19 f0       	breq	.+6      	; 0x2804 <LCD_write+0x1c>
    27fe:	11 30       	cpi	r17, 0x01	; 1
    2800:	21 f4       	brne	.+8      	; 0x280a <LCD_write+0x22>
    2802:	02 c0       	rjmp	.+4      	; 0x2808 <LCD_write+0x20>
    2804:	2b 98       	cbi	0x05, 3	; 5
    2806:	01 c0       	rjmp	.+2      	; 0x280a <LCD_write+0x22>
    2808:	2b 9a       	sbi	0x05, 3	; 5
    280a:	86 e0       	ldi	r24, 0x06	; 6
    280c:	8a 95       	dec	r24
    280e:	f1 f7       	brne	.-4      	; 0x280c <LCD_write+0x24>
    2810:	80 e0       	ldi	r24, 0x00	; 0
    2812:	60 2f       	mov	r22, r16
    2814:	0e 94 81 14 	call	0x2902	; 0x2902 <SPI_transmit>
    2818:	1f 91       	pop	r17
    281a:	0f 91       	pop	r16
    281c:	08 95       	ret

0000281e <LED_clr_pattern>:
    281e:	1f 93       	push	r17
    2820:	18 2f       	mov	r17, r24
    2822:	86 e0       	ldi	r24, 0x06	; 6
    2824:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    2828:	81 30       	cpi	r24, 0x01	; 1
    282a:	19 f4       	brne	.+6      	; 0x2832 <LED_clr_pattern+0x14>
    282c:	81 2f       	mov	r24, r17
    282e:	0e 94 12 1e 	call	0x3c24	; 0x3c24 <__LED_clr_pattern>
    2832:	1f 91       	pop	r17
    2834:	08 95       	ret

00002836 <LED_open>:
    2836:	0e 94 17 1e 	call	0x3c2e	; 0x3c2e <__LED_init>
    283a:	86 e0       	ldi	r24, 0x06	; 6
    283c:	61 e0       	ldi	r22, 0x01	; 1
    283e:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    2842:	86 e0       	ldi	r24, 0x06	; 6
    2844:	91 e0       	ldi	r25, 0x01	; 1
    2846:	08 95       	ret

00002848 <LED_set_pattern>:
    2848:	1f 93       	push	r17
    284a:	18 2f       	mov	r17, r24
    284c:	86 e0       	ldi	r24, 0x06	; 6
    284e:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    2852:	81 30       	cpi	r24, 0x01	; 1
    2854:	19 f4       	brne	.+6      	; 0x285c <LED_set_pattern+0x14>
    2856:	81 2f       	mov	r24, r17
    2858:	0e 94 1a 1e 	call	0x3c34	; 0x3c34 <__LED_set_pattern>
    285c:	1f 91       	pop	r17
    285e:	08 95       	ret

00002860 <SPI_set_slave_addr>:
    2860:	1f 93       	push	r17
    2862:	18 2f       	mov	r17, r24
    2864:	82 e0       	ldi	r24, 0x02	; 2
    2866:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    286a:	81 30       	cpi	r24, 0x01	; 1
    286c:	09 f0       	breq	.+2      	; 0x2870 <SPI_set_slave_addr+0x10>
    286e:	47 c0       	rjmp	.+142    	; 0x28fe <SPI_set_slave_addr+0x9e>
    2870:	91 2f       	mov	r25, r17
    2872:	97 70       	andi	r25, 0x07	; 7
    2874:	80 91 f4 04 	lds	r24, 0x04F4
    2878:	98 17       	cp	r25, r24
    287a:	09 f4       	brne	.+2      	; 0x287e <SPI_set_slave_addr+0x1e>
    287c:	40 c0       	rjmp	.+128    	; 0x28fe <SPI_set_slave_addr+0x9e>
    287e:	90 93 f4 04 	sts	0x04F4, r25
    2882:	85 b1       	in	r24, 0x05	; 5
    2884:	88 7f       	andi	r24, 0xF8	; 248
    2886:	89 2b       	or	r24, r25
    2888:	85 b9       	out	0x05, r24	; 5
    288a:	93 30       	cpi	r25, 0x03	; 3
    288c:	11 f1       	breq	.+68     	; 0x28d2 <SPI_set_slave_addr+0x72>
    288e:	94 30       	cpi	r25, 0x04	; 4
    2890:	28 f4       	brcc	.+10     	; 0x289c <SPI_set_slave_addr+0x3c>
    2892:	91 30       	cpi	r25, 0x01	; 1
    2894:	51 f0       	breq	.+20     	; 0x28aa <SPI_set_slave_addr+0x4a>
    2896:	92 30       	cpi	r25, 0x02	; 2
    2898:	90 f4       	brcc	.+36     	; 0x28be <SPI_set_slave_addr+0x5e>
    289a:	0c c0       	rjmp	.+24     	; 0x28b4 <SPI_set_slave_addr+0x54>
    289c:	95 30       	cpi	r25, 0x05	; 5
    289e:	19 f1       	breq	.+70     	; 0x28e6 <SPI_set_slave_addr+0x86>
    28a0:	95 30       	cpi	r25, 0x05	; 5
    28a2:	e0 f0       	brcs	.+56     	; 0x28dc <SPI_set_slave_addr+0x7c>
    28a4:	96 30       	cpi	r25, 0x06	; 6
    28a6:	21 f5       	brne	.+72     	; 0x28f0 <SPI_set_slave_addr+0x90>
    28a8:	0f c0       	rjmp	.+30     	; 0x28c8 <SPI_set_slave_addr+0x68>
    28aa:	e0 91 8d 02 	lds	r30, 0x028D
    28ae:	f0 91 8e 02 	lds	r31, 0x028E
    28b2:	22 c0       	rjmp	.+68     	; 0x28f8 <SPI_set_slave_addr+0x98>
    28b4:	e0 91 8b 02 	lds	r30, 0x028B
    28b8:	f0 91 8c 02 	lds	r31, 0x028C
    28bc:	1d c0       	rjmp	.+58     	; 0x28f8 <SPI_set_slave_addr+0x98>
    28be:	e0 91 8f 02 	lds	r30, 0x028F
    28c2:	f0 91 90 02 	lds	r31, 0x0290
    28c6:	18 c0       	rjmp	.+48     	; 0x28f8 <SPI_set_slave_addr+0x98>
    28c8:	e0 91 97 02 	lds	r30, 0x0297
    28cc:	f0 91 98 02 	lds	r31, 0x0298
    28d0:	13 c0       	rjmp	.+38     	; 0x28f8 <SPI_set_slave_addr+0x98>
    28d2:	e0 91 91 02 	lds	r30, 0x0291
    28d6:	f0 91 92 02 	lds	r31, 0x0292
    28da:	0e c0       	rjmp	.+28     	; 0x28f8 <SPI_set_slave_addr+0x98>
    28dc:	e0 91 93 02 	lds	r30, 0x0293
    28e0:	f0 91 94 02 	lds	r31, 0x0294
    28e4:	09 c0       	rjmp	.+18     	; 0x28f8 <SPI_set_slave_addr+0x98>
    28e6:	e0 91 95 02 	lds	r30, 0x0295
    28ea:	f0 91 96 02 	lds	r31, 0x0296
    28ee:	04 c0       	rjmp	.+8      	; 0x28f8 <SPI_set_slave_addr+0x98>
    28f0:	e0 91 99 02 	lds	r30, 0x0299
    28f4:	f0 91 9a 02 	lds	r31, 0x029A
    28f8:	30 97       	sbiw	r30, 0x00	; 0
    28fa:	09 f0       	breq	.+2      	; 0x28fe <SPI_set_slave_addr+0x9e>
    28fc:	09 95       	icall
    28fe:	1f 91       	pop	r17
    2900:	08 95       	ret

00002902 <SPI_transmit>:
    2902:	1f 93       	push	r17
    2904:	16 2f       	mov	r17, r22
    2906:	0e 94 30 14 	call	0x2860	; 0x2860 <SPI_set_slave_addr>
    290a:	82 e0       	ldi	r24, 0x02	; 2
    290c:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    2910:	81 30       	cpi	r24, 0x01	; 1
    2912:	21 f4       	brne	.+8      	; 0x291c <SPI_transmit+0x1a>
    2914:	1e bd       	out	0x2e, r17	; 46
    2916:	0d b4       	in	r0, 0x2d	; 45
    2918:	07 fe       	sbrs	r0, 7
    291a:	fd cf       	rjmp	.-6      	; 0x2916 <SPI_transmit+0x14>
    291c:	1f 91       	pop	r17
    291e:	08 95       	ret

00002920 <__SPKR_set_up_freq_LUT>:
    2920:	0f 93       	push	r16
    2922:	1f 93       	push	r17
    2924:	cf 93       	push	r28
    2926:	df 93       	push	r29
    2928:	80 e2       	ldi	r24, 0x20	; 32
    292a:	91 e0       	ldi	r25, 0x01	; 1
    292c:	0e 94 8d 2d 	call	0x5b1a	; 0x5b1a <malloc>
    2930:	9c 01       	movw	r18, r24
    2932:	90 93 aa 02 	sts	0x02AA, r25
    2936:	80 93 a9 02 	sts	0x02A9, r24
    293a:	89 2b       	or	r24, r25
    293c:	11 f4       	brne	.+4      	; 0x2942 <__SPKR_set_up_freq_LUT+0x22>
    293e:	80 e0       	ldi	r24, 0x00	; 0
    2940:	39 c0       	rjmp	.+114    	; 0x29b4 <__SPKR_set_up_freq_LUT+0x94>
    2942:	89 01       	movw	r16, r18
    2944:	c0 e0       	ldi	r28, 0x00	; 0
    2946:	d0 e0       	ldi	r29, 0x00	; 0
    2948:	be 01       	movw	r22, r28
    294a:	80 e0       	ldi	r24, 0x00	; 0
    294c:	90 e0       	ldi	r25, 0x00	; 0
    294e:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <__floatunsisf>
    2952:	20 e0       	ldi	r18, 0x00	; 0
    2954:	30 e0       	ldi	r19, 0x00	; 0
    2956:	40 ea       	ldi	r20, 0xA0	; 160
    2958:	51 e4       	ldi	r21, 0x41	; 65
    295a:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divsf3>
    295e:	27 ef       	ldi	r18, 0xF7	; 247
    2960:	35 e7       	ldi	r19, 0x75	; 117
    2962:	40 e0       	ldi	r20, 0x00	; 0
    2964:	5f e3       	ldi	r21, 0x3F	; 63
    2966:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    296a:	9b 01       	movw	r18, r22
    296c:	ac 01       	movw	r20, r24
    296e:	60 e0       	ldi	r22, 0x00	; 0
    2970:	70 e0       	ldi	r23, 0x00	; 0
    2972:	80 e2       	ldi	r24, 0x20	; 32
    2974:	91 e4       	ldi	r25, 0x41	; 65
    2976:	0e 94 21 28 	call	0x5042	; 0x5042 <pow>
    297a:	9b 01       	movw	r18, r22
    297c:	ac 01       	movw	r20, r24
    297e:	ca 01       	movw	r24, r20
    2980:	b9 01       	movw	r22, r18
    2982:	2d ec       	ldi	r18, 0xCD	; 205
    2984:	3c ec       	ldi	r19, 0xCC	; 204
    2986:	42 e8       	ldi	r20, 0x82	; 130
    2988:	51 e4       	ldi	r21, 0x41	; 65
    298a:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <__mulsf3>
    298e:	0e 94 84 27 	call	0x4f08	; 0x4f08 <lrint>
    2992:	2a e0       	ldi	r18, 0x0A	; 10
    2994:	30 e0       	ldi	r19, 0x00	; 0
    2996:	40 e0       	ldi	r20, 0x00	; 0
    2998:	50 e0       	ldi	r21, 0x00	; 0
    299a:	0e 94 ee 2c 	call	0x59dc	; 0x59dc <__mulsi3>
    299e:	f8 01       	movw	r30, r16
    29a0:	61 93       	st	Z+, r22
    29a2:	71 93       	st	Z+, r23
    29a4:	81 93       	st	Z+, r24
    29a6:	91 93       	st	Z+, r25
    29a8:	8f 01       	movw	r16, r30
    29aa:	21 96       	adiw	r28, 0x01	; 1
    29ac:	c8 34       	cpi	r28, 0x48	; 72
    29ae:	d1 05       	cpc	r29, r1
    29b0:	59 f6       	brne	.-106    	; 0x2948 <__SPKR_set_up_freq_LUT+0x28>
    29b2:	81 e0       	ldi	r24, 0x01	; 1
    29b4:	df 91       	pop	r29
    29b6:	cf 91       	pop	r28
    29b8:	1f 91       	pop	r17
    29ba:	0f 91       	pop	r16
    29bc:	08 95       	ret

000029be <__SPKR_open_beep_mode>:
    29be:	8a e0       	ldi	r24, 0x0A	; 10
    29c0:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    29c4:	88 23       	and	r24, r24
    29c6:	71 f4       	brne	.+28     	; 0x29e4 <__SPKR_open_beep_mode+0x26>
    29c8:	10 92 a6 02 	sts	0x02A6, r1
    29cc:	10 92 a5 02 	sts	0x02A5, r1
    29d0:	81 e0       	ldi	r24, 0x01	; 1
    29d2:	0e 94 55 1f 	call	0x3eaa	; 0x3eaa <__SPKR_init>
    29d6:	81 e0       	ldi	r24, 0x01	; 1
    29d8:	80 93 9c 02 	sts	0x029C, r24
    29dc:	8a e0       	ldi	r24, 0x0A	; 10
    29de:	61 e0       	ldi	r22, 0x01	; 1
    29e0:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    29e4:	8a e0       	ldi	r24, 0x0A	; 10
    29e6:	91 e0       	ldi	r25, 0x01	; 1
    29e8:	08 95       	ret

000029ea <__SPKR_open_tone_mode>:
    29ea:	1f 93       	push	r17
    29ec:	8b e0       	ldi	r24, 0x0B	; 11
    29ee:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    29f2:	88 23       	and	r24, r24
    29f4:	11 f0       	breq	.+4      	; 0x29fa <__SPKR_open_tone_mode+0x10>
    29f6:	90 e0       	ldi	r25, 0x00	; 0
    29f8:	21 c0       	rjmp	.+66     	; 0x2a3c <__SPKR_open_tone_mode+0x52>
    29fa:	89 e0       	ldi	r24, 0x09	; 9
    29fc:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    2a00:	88 23       	and	r24, r24
    2a02:	d9 f4       	brne	.+54     	; 0x2a3a <__SPKR_open_tone_mode+0x50>
    2a04:	0e 94 90 14 	call	0x2920	; 0x2920 <__SPKR_set_up_freq_LUT>
    2a08:	18 2f       	mov	r17, r24
    2a0a:	81 30       	cpi	r24, 0x01	; 1
    2a0c:	b1 f4       	brne	.+44     	; 0x2a3a <__SPKR_open_tone_mode+0x50>
    2a0e:	10 92 9d 02 	sts	0x029D, r1
    2a12:	10 92 9e 02 	sts	0x029E, r1
    2a16:	10 92 9f 02 	sts	0x029F, r1
    2a1a:	10 92 a0 02 	sts	0x02A0, r1
    2a1e:	8d e0       	ldi	r24, 0x0D	; 13
    2a20:	68 ed       	ldi	r22, 0xD8	; 216
    2a22:	7e e1       	ldi	r23, 0x1E	; 30
    2a24:	0e 94 3b 1d 	call	0x3a76	; 0x3a76 <ISR_attach>
    2a28:	82 e0       	ldi	r24, 0x02	; 2
    2a2a:	0e 94 55 1f 	call	0x3eaa	; 0x3eaa <__SPKR_init>
    2a2e:	10 93 9b 02 	sts	0x029B, r17
    2a32:	89 e0       	ldi	r24, 0x09	; 9
    2a34:	61 e0       	ldi	r22, 0x01	; 1
    2a36:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    2a3a:	91 e0       	ldi	r25, 0x01	; 1
    2a3c:	89 e0       	ldi	r24, 0x09	; 9
    2a3e:	1f 91       	pop	r17
    2a40:	08 95       	ret

00002a42 <SPKR_open>:
    2a42:	81 30       	cpi	r24, 0x01	; 1
    2a44:	29 f0       	breq	.+10     	; 0x2a50 <SPKR_open+0xe>
    2a46:	82 30       	cpi	r24, 0x02	; 2
    2a48:	31 f0       	breq	.+12     	; 0x2a56 <SPKR_open+0x14>
    2a4a:	90 e0       	ldi	r25, 0x00	; 0
    2a4c:	89 e0       	ldi	r24, 0x09	; 9
    2a4e:	08 95       	ret
    2a50:	0e 94 df 14 	call	0x29be	; 0x29be <__SPKR_open_beep_mode>
    2a54:	08 95       	ret
    2a56:	0e 94 f5 14 	call	0x29ea	; 0x29ea <__SPKR_open_tone_mode>
    2a5a:	08 95       	ret

00002a5c <STEPPER_get_nSteps>:
    2a5c:	80 91 b5 04 	lds	r24, 0x04B5
    2a60:	90 91 b6 04 	lds	r25, 0x04B6
    2a64:	20 91 b7 04 	lds	r18, 0x04B7
    2a68:	30 91 b8 04 	lds	r19, 0x04B8
    2a6c:	bc 01       	movw	r22, r24
    2a6e:	c9 01       	movw	r24, r18
    2a70:	08 95       	ret

00002a72 <STEPPER_stepmode>:
    2a72:	2f 92       	push	r2
    2a74:	3f 92       	push	r3
    2a76:	4f 92       	push	r4
    2a78:	5f 92       	push	r5
    2a7a:	6f 92       	push	r6
    2a7c:	7f 92       	push	r7
    2a7e:	8f 92       	push	r8
    2a80:	9f 92       	push	r9
    2a82:	af 92       	push	r10
    2a84:	bf 92       	push	r11
    2a86:	cf 92       	push	r12
    2a88:	df 92       	push	r13
    2a8a:	ef 92       	push	r14
    2a8c:	ff 92       	push	r15
    2a8e:	0f 93       	push	r16
    2a90:	1f 93       	push	r17
    2a92:	df 93       	push	r29
    2a94:	cf 93       	push	r28
    2a96:	cd b7       	in	r28, 0x3d	; 61
    2a98:	de b7       	in	r29, 0x3e	; 62
    2a9a:	58 2e       	mov	r5, r24
    2a9c:	96 2e       	mov	r9, r22
    2a9e:	44 2e       	mov	r4, r20
    2aa0:	39 01       	movw	r6, r18
    2aa2:	3c 2c       	mov	r3, r12
    2aa4:	c9 8c       	ldd	r12, Y+25	; 0x19
    2aa6:	da 8c       	ldd	r13, Y+26	; 0x1a
    2aa8:	2b 8c       	ldd	r2, Y+27	; 0x1b
    2aaa:	81 e0       	ldi	r24, 0x01	; 1
    2aac:	68 17       	cp	r22, r24
    2aae:	39 f1       	breq	.+78     	; 0x2afe <STEPPER_stepmode+0x8c>
    2ab0:	68 17       	cp	r22, r24
    2ab2:	28 f0       	brcs	.+10     	; 0x2abe <STEPPER_stepmode+0x4c>
    2ab4:	92 e0       	ldi	r25, 0x02	; 2
    2ab6:	69 17       	cp	r22, r25
    2ab8:	09 f0       	breq	.+2      	; 0x2abc <STEPPER_stepmode+0x4a>
    2aba:	85 c0       	rjmp	.+266    	; 0x2bc6 <STEPPER_stepmode+0x154>
    2abc:	49 c0       	rjmp	.+146    	; 0x2b50 <STEPPER_stepmode+0xde>
    2abe:	80 e0       	ldi	r24, 0x00	; 0
    2ac0:	61 e0       	ldi	r22, 0x01	; 1
    2ac2:	0e 94 42 17 	call	0x2e84	; 0x2e84 <STEPPER_set_mode>
    2ac6:	80 e0       	ldi	r24, 0x00	; 0
    2ac8:	b7 01       	movw	r22, r14
    2aca:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <STEPPER_set_accel>
    2ace:	80 e0       	ldi	r24, 0x00	; 0
    2ad0:	64 2d       	mov	r22, r4
    2ad2:	a3 01       	movw	r20, r6
    2ad4:	98 01       	movw	r18, r16
    2ad6:	03 2d       	mov	r16, r3
    2ad8:	ee 24       	eor	r14, r14
    2ada:	e3 94       	inc	r14
    2adc:	ea ed       	ldi	r30, 0xDA	; 218
    2ade:	ce 2e       	mov	r12, r30
    2ae0:	e4 e0       	ldi	r30, 0x04	; 4
    2ae2:	de 2e       	mov	r13, r30
    2ae4:	0e 94 79 17 	call	0x2ef2	; 0x2ef2 <STEPPER_step>
    2ae8:	55 20       	and	r5, r5
    2aea:	09 f0       	breq	.+2      	; 0x2aee <STEPPER_stepmode+0x7c>
    2aec:	6c c0       	rjmp	.+216    	; 0x2bc6 <STEPPER_stepmode+0x154>
    2aee:	00 d0       	rcall	.+0      	; 0x2af0 <STEPPER_stepmode+0x7e>
    2af0:	0f 92       	push	r0
    2af2:	ed b7       	in	r30, 0x3d	; 61
    2af4:	fe b7       	in	r31, 0x3e	; 62
    2af6:	11 82       	std	Z+1, r1	; 0x01
    2af8:	b3 82       	std	Z+3, r11	; 0x03
    2afa:	a2 82       	std	Z+2, r10	; 0x02
    2afc:	23 c0       	rjmp	.+70     	; 0x2b44 <STEPPER_stepmode+0xd2>
    2afe:	81 e0       	ldi	r24, 0x01	; 1
    2b00:	61 e0       	ldi	r22, 0x01	; 1
    2b02:	0e 94 42 17 	call	0x2e84	; 0x2e84 <STEPPER_set_mode>
    2b06:	81 e0       	ldi	r24, 0x01	; 1
    2b08:	b6 01       	movw	r22, r12
    2b0a:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <STEPPER_set_accel>
    2b0e:	81 e0       	ldi	r24, 0x01	; 1
    2b10:	68 2d       	mov	r22, r8
    2b12:	4d 89       	ldd	r20, Y+21	; 0x15
    2b14:	5e 89       	ldd	r21, Y+22	; 0x16
    2b16:	2f 89       	ldd	r18, Y+23	; 0x17
    2b18:	38 8d       	ldd	r19, Y+24	; 0x18
    2b1a:	02 2d       	mov	r16, r2
    2b1c:	ee 24       	eor	r14, r14
    2b1e:	e3 94       	inc	r14
    2b20:	7a ed       	ldi	r23, 0xDA	; 218
    2b22:	c7 2e       	mov	r12, r23
    2b24:	74 e0       	ldi	r23, 0x04	; 4
    2b26:	d7 2e       	mov	r13, r23
    2b28:	0e 94 79 17 	call	0x2ef2	; 0x2ef2 <STEPPER_step>
    2b2c:	55 20       	and	r5, r5
    2b2e:	09 f0       	breq	.+2      	; 0x2b32 <STEPPER_stepmode+0xc0>
    2b30:	4a c0       	rjmp	.+148    	; 0x2bc6 <STEPPER_stepmode+0x154>
    2b32:	00 d0       	rcall	.+0      	; 0x2b34 <STEPPER_stepmode+0xc2>
    2b34:	0f 92       	push	r0
    2b36:	ed b7       	in	r30, 0x3d	; 61
    2b38:	fe b7       	in	r31, 0x3e	; 62
    2b3a:	91 82       	std	Z+1, r9	; 0x01
    2b3c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2b3e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2b40:	93 83       	std	Z+3, r25	; 0x03
    2b42:	82 83       	std	Z+2, r24	; 0x02
    2b44:	0e 94 05 18 	call	0x300a	; 0x300a <STEPPER_wait_and_then>
    2b48:	0f 90       	pop	r0
    2b4a:	0f 90       	pop	r0
    2b4c:	0f 90       	pop	r0
    2b4e:	3b c0       	rjmp	.+118    	; 0x2bc6 <STEPPER_stepmode+0x154>
    2b50:	82 e0       	ldi	r24, 0x02	; 2
    2b52:	61 e0       	ldi	r22, 0x01	; 1
    2b54:	0e 94 42 17 	call	0x2e84	; 0x2e84 <STEPPER_set_mode>
    2b58:	80 e0       	ldi	r24, 0x00	; 0
    2b5a:	b7 01       	movw	r22, r14
    2b5c:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <STEPPER_set_accel>
    2b60:	81 e0       	ldi	r24, 0x01	; 1
    2b62:	b6 01       	movw	r22, r12
    2b64:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <STEPPER_set_accel>
    2b68:	80 e0       	ldi	r24, 0x00	; 0
    2b6a:	64 2d       	mov	r22, r4
    2b6c:	a3 01       	movw	r20, r6
    2b6e:	98 01       	movw	r18, r16
    2b70:	03 2d       	mov	r16, r3
    2b72:	ee 24       	eor	r14, r14
    2b74:	e3 94       	inc	r14
    2b76:	9a ed       	ldi	r25, 0xDA	; 218
    2b78:	c9 2e       	mov	r12, r25
    2b7a:	94 e0       	ldi	r25, 0x04	; 4
    2b7c:	d9 2e       	mov	r13, r25
    2b7e:	0e 94 79 17 	call	0x2ef2	; 0x2ef2 <STEPPER_step>
    2b82:	81 e0       	ldi	r24, 0x01	; 1
    2b84:	68 2d       	mov	r22, r8
    2b86:	4d 89       	ldd	r20, Y+21	; 0x15
    2b88:	5e 89       	ldd	r21, Y+22	; 0x16
    2b8a:	2f 89       	ldd	r18, Y+23	; 0x17
    2b8c:	38 8d       	ldd	r19, Y+24	; 0x18
    2b8e:	02 2d       	mov	r16, r2
    2b90:	0e 94 79 17 	call	0x2ef2	; 0x2ef2 <STEPPER_step>
    2b94:	55 20       	and	r5, r5
    2b96:	b9 f4       	brne	.+46     	; 0x2bc6 <STEPPER_stepmode+0x154>
    2b98:	00 d0       	rcall	.+0      	; 0x2b9a <STEPPER_stepmode+0x128>
    2b9a:	00 d0       	rcall	.+0      	; 0x2b9c <STEPPER_stepmode+0x12a>
    2b9c:	0f 92       	push	r0
    2b9e:	ad b7       	in	r26, 0x3d	; 61
    2ba0:	be b7       	in	r27, 0x3e	; 62
    2ba2:	11 96       	adiw	r26, 0x01	; 1
    2ba4:	ed b7       	in	r30, 0x3d	; 61
    2ba6:	fe b7       	in	r31, 0x3e	; 62
    2ba8:	91 82       	std	Z+1, r9	; 0x01
    2baa:	fd 01       	movw	r30, r26
    2bac:	b2 82       	std	Z+2, r11	; 0x02
    2bae:	a1 82       	std	Z+1, r10	; 0x01
    2bb0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2bb2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2bb4:	94 83       	std	Z+4, r25	; 0x04
    2bb6:	83 83       	std	Z+3, r24	; 0x03
    2bb8:	0e 94 05 18 	call	0x300a	; 0x300a <STEPPER_wait_and_then>
    2bbc:	0f 90       	pop	r0
    2bbe:	0f 90       	pop	r0
    2bc0:	0f 90       	pop	r0
    2bc2:	0f 90       	pop	r0
    2bc4:	0f 90       	pop	r0
    2bc6:	cf 91       	pop	r28
    2bc8:	df 91       	pop	r29
    2bca:	1f 91       	pop	r17
    2bcc:	0f 91       	pop	r16
    2bce:	ff 90       	pop	r15
    2bd0:	ef 90       	pop	r14
    2bd2:	df 90       	pop	r13
    2bd4:	cf 90       	pop	r12
    2bd6:	bf 90       	pop	r11
    2bd8:	af 90       	pop	r10
    2bda:	9f 90       	pop	r9
    2bdc:	8f 90       	pop	r8
    2bde:	7f 90       	pop	r7
    2be0:	6f 90       	pop	r6
    2be2:	5f 90       	pop	r5
    2be4:	4f 90       	pop	r4
    2be6:	3f 90       	pop	r3
    2be8:	2f 90       	pop	r2
    2bea:	08 95       	ret

00002bec <STEPPER_move>:
    2bec:	6f 92       	push	r6
    2bee:	7f 92       	push	r7
    2bf0:	8f 92       	push	r8
    2bf2:	9f 92       	push	r9
    2bf4:	af 92       	push	r10
    2bf6:	bf 92       	push	r11
    2bf8:	cf 92       	push	r12
    2bfa:	df 92       	push	r13
    2bfc:	ef 92       	push	r14
    2bfe:	ff 92       	push	r15
    2c00:	0f 93       	push	r16
    2c02:	1f 93       	push	r17
    2c04:	df 93       	push	r29
    2c06:	cf 93       	push	r28
    2c08:	cd b7       	in	r28, 0x3d	; 61
    2c0a:	de b7       	in	r29, 0x3e	; 62
    2c0c:	94 2e       	mov	r9, r20
    2c0e:	7c 2d       	mov	r23, r12
    2c10:	d5 01       	movw	r26, r10
    2c12:	49 89       	ldd	r20, Y+17	; 0x11
    2c14:	5a 89       	ldd	r21, Y+18	; 0x12
    2c16:	ab 88       	ldd	r10, Y+19	; 0x13
    2c18:	bc 88       	ldd	r11, Y+20	; 0x14
    2c1a:	cd 88       	ldd	r12, Y+21	; 0x15
    2c1c:	de 88       	ldd	r13, Y+22	; 0x16
    2c1e:	9f 89       	ldd	r25, Y+23	; 0x17
    2c20:	81 30       	cpi	r24, 0x01	; 1
    2c22:	09 f4       	brne	.+2      	; 0x2c26 <STEPPER_move+0x3a>
    2c24:	57 c0       	rjmp	.+174    	; 0x2cd4 <STEPPER_move+0xe8>
    2c26:	81 30       	cpi	r24, 0x01	; 1
    2c28:	b8 f1       	brcs	.+110    	; 0x2c98 <STEPPER_move+0xac>
    2c2a:	82 30       	cpi	r24, 0x02	; 2
    2c2c:	09 f0       	breq	.+2      	; 0x2c30 <STEPPER_move+0x44>
    2c2e:	76 c0       	rjmp	.+236    	; 0x2d1c <STEPPER_move+0x130>
    2c30:	61 30       	cpi	r22, 0x01	; 1
    2c32:	91 f0       	breq	.+36     	; 0x2c58 <STEPPER_move+0x6c>
    2c34:	61 30       	cpi	r22, 0x01	; 1
    2c36:	20 f0       	brcs	.+8      	; 0x2c40 <STEPPER_move+0x54>
    2c38:	62 30       	cpi	r22, 0x02	; 2
    2c3a:	09 f0       	breq	.+2      	; 0x2c3e <STEPPER_move+0x52>
    2c3c:	6f c0       	rjmp	.+222    	; 0x2d1c <STEPPER_move+0x130>
    2c3e:	15 c0       	rjmp	.+42     	; 0x2c6a <STEPPER_move+0x7e>
    2c40:	80 e0       	ldi	r24, 0x00	; 0
    2c42:	60 e0       	ldi	r22, 0x00	; 0
    2c44:	0e 94 42 17 	call	0x2e84	; 0x2e84 <STEPPER_set_mode>
    2c48:	80 e0       	ldi	r24, 0x00	; 0
    2c4a:	b7 01       	movw	r22, r14
    2c4c:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <STEPPER_set_accel>
    2c50:	80 e0       	ldi	r24, 0x00	; 0
    2c52:	69 2d       	mov	r22, r9
    2c54:	a8 01       	movw	r20, r16
    2c56:	1d c0       	rjmp	.+58     	; 0x2c92 <STEPPER_move+0xa6>
    2c58:	81 e0       	ldi	r24, 0x01	; 1
    2c5a:	60 e0       	ldi	r22, 0x00	; 0
    2c5c:	0e 94 42 17 	call	0x2e84	; 0x2e84 <STEPPER_set_mode>
    2c60:	81 e0       	ldi	r24, 0x01	; 1
    2c62:	b6 01       	movw	r22, r12
    2c64:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <STEPPER_set_accel>
    2c68:	11 c0       	rjmp	.+34     	; 0x2c8c <STEPPER_move+0xa0>
    2c6a:	82 e0       	ldi	r24, 0x02	; 2
    2c6c:	60 e0       	ldi	r22, 0x00	; 0
    2c6e:	0e 94 42 17 	call	0x2e84	; 0x2e84 <STEPPER_set_mode>
    2c72:	80 e0       	ldi	r24, 0x00	; 0
    2c74:	b7 01       	movw	r22, r14
    2c76:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <STEPPER_set_accel>
    2c7a:	81 e0       	ldi	r24, 0x01	; 1
    2c7c:	b6 01       	movw	r22, r12
    2c7e:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <STEPPER_set_accel>
    2c82:	80 e0       	ldi	r24, 0x00	; 0
    2c84:	69 2d       	mov	r22, r9
    2c86:	a8 01       	movw	r20, r16
    2c88:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <STEPPER_run>
    2c8c:	81 e0       	ldi	r24, 0x01	; 1
    2c8e:	68 2d       	mov	r22, r8
    2c90:	a5 01       	movw	r20, r10
    2c92:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <STEPPER_run>
    2c96:	42 c0       	rjmp	.+132    	; 0x2d1c <STEPPER_move+0x130>
    2c98:	ed b7       	in	r30, 0x3d	; 61
    2c9a:	fe b7       	in	r31, 0x3e	; 62
    2c9c:	39 97       	sbiw	r30, 0x09	; 9
    2c9e:	0f b6       	in	r0, 0x3f	; 63
    2ca0:	f8 94       	cli
    2ca2:	fe bf       	out	0x3e, r31	; 62
    2ca4:	0f be       	out	0x3f, r0	; 63
    2ca6:	ed bf       	out	0x3d, r30	; 61
    2ca8:	6d b6       	in	r6, 0x3d	; 61
    2caa:	7e b6       	in	r7, 0x3e	; 62
    2cac:	08 94       	sec
    2cae:	61 1c       	adc	r6, r1
    2cb0:	71 1c       	adc	r7, r1
    2cb2:	52 83       	std	Z+2, r21	; 0x02
    2cb4:	41 83       	std	Z+1, r20	; 0x01
    2cb6:	f3 01       	movw	r30, r6
    2cb8:	b3 82       	std	Z+3, r11	; 0x03
    2cba:	a2 82       	std	Z+2, r10	; 0x02
    2cbc:	d5 82       	std	Z+5, r13	; 0x05
    2cbe:	c4 82       	std	Z+4, r12	; 0x04
    2cc0:	96 83       	std	Z+6, r25	; 0x06
    2cc2:	88 8d       	ldd	r24, Y+24	; 0x18
    2cc4:	99 8d       	ldd	r25, Y+25	; 0x19
    2cc6:	90 87       	std	Z+8, r25	; 0x08
    2cc8:	87 83       	std	Z+7, r24	; 0x07
    2cca:	80 e0       	ldi	r24, 0x00	; 0
    2ccc:	49 2d       	mov	r20, r9
    2cce:	c7 2e       	mov	r12, r23
    2cd0:	5d 01       	movw	r10, r26
    2cd2:	1a c0       	rjmp	.+52     	; 0x2d08 <STEPPER_move+0x11c>
    2cd4:	ed b7       	in	r30, 0x3d	; 61
    2cd6:	fe b7       	in	r31, 0x3e	; 62
    2cd8:	39 97       	sbiw	r30, 0x09	; 9
    2cda:	0f b6       	in	r0, 0x3f	; 63
    2cdc:	f8 94       	cli
    2cde:	fe bf       	out	0x3e, r31	; 62
    2ce0:	0f be       	out	0x3f, r0	; 63
    2ce2:	ed bf       	out	0x3d, r30	; 61
    2ce4:	ad b7       	in	r26, 0x3d	; 61
    2ce6:	be b7       	in	r27, 0x3e	; 62
    2ce8:	11 96       	adiw	r26, 0x01	; 1
    2cea:	52 83       	std	Z+2, r21	; 0x02
    2cec:	41 83       	std	Z+1, r20	; 0x01
    2cee:	fd 01       	movw	r30, r26
    2cf0:	b3 82       	std	Z+3, r11	; 0x03
    2cf2:	a2 82       	std	Z+2, r10	; 0x02
    2cf4:	d5 82       	std	Z+5, r13	; 0x05
    2cf6:	c4 82       	std	Z+4, r12	; 0x04
    2cf8:	96 83       	std	Z+6, r25	; 0x06
    2cfa:	10 86       	std	Z+8, r1	; 0x08
    2cfc:	17 82       	std	Z+7, r1	; 0x07
    2cfe:	81 e0       	ldi	r24, 0x01	; 1
    2d00:	49 2d       	mov	r20, r9
    2d02:	c7 2e       	mov	r12, r23
    2d04:	aa 24       	eor	r10, r10
    2d06:	bb 24       	eor	r11, r11
    2d08:	0e 94 39 15 	call	0x2a72	; 0x2a72 <STEPPER_stepmode>
    2d0c:	8d b7       	in	r24, 0x3d	; 61
    2d0e:	9e b7       	in	r25, 0x3e	; 62
    2d10:	09 96       	adiw	r24, 0x09	; 9
    2d12:	0f b6       	in	r0, 0x3f	; 63
    2d14:	f8 94       	cli
    2d16:	9e bf       	out	0x3e, r25	; 62
    2d18:	0f be       	out	0x3f, r0	; 63
    2d1a:	8d bf       	out	0x3d, r24	; 61
    2d1c:	cf 91       	pop	r28
    2d1e:	df 91       	pop	r29
    2d20:	1f 91       	pop	r17
    2d22:	0f 91       	pop	r16
    2d24:	ff 90       	pop	r15
    2d26:	ef 90       	pop	r14
    2d28:	df 90       	pop	r13
    2d2a:	cf 90       	pop	r12
    2d2c:	bf 90       	pop	r11
    2d2e:	af 90       	pop	r10
    2d30:	9f 90       	pop	r9
    2d32:	8f 90       	pop	r8
    2d34:	7f 90       	pop	r7
    2d36:	6f 90       	pop	r6
    2d38:	08 95       	ret

00002d3a <STEPPER_open>:
    2d3a:	0e 94 e7 1f 	call	0x3fce	; 0x3fce <__STEPPER_init>
    2d3e:	81 e0       	ldi	r24, 0x01	; 1
    2d40:	80 93 d9 04 	sts	0x04D9, r24
    2d44:	e3 ea       	ldi	r30, 0xA3	; 163
    2d46:	f4 e0       	ldi	r31, 0x04	; 4
    2d48:	11 92       	st	Z+, r1
    2d4a:	11 92       	st	Z+, r1
    2d4c:	11 82       	std	Z+1, r1	; 0x01
    2d4e:	10 82       	st	Z, r1
    2d50:	32 96       	adiw	r30, 0x02	; 2
    2d52:	11 82       	std	Z+1, r1	; 0x01
    2d54:	10 82       	st	Z, r1
    2d56:	32 96       	adiw	r30, 0x02	; 2
    2d58:	11 82       	std	Z+1, r1	; 0x01
    2d5a:	10 82       	st	Z, r1
    2d5c:	32 96       	adiw	r30, 0x02	; 2
    2d5e:	11 82       	std	Z+1, r1	; 0x01
    2d60:	10 82       	st	Z, r1
    2d62:	32 96       	adiw	r30, 0x02	; 2
    2d64:	11 82       	std	Z+1, r1	; 0x01
    2d66:	10 82       	st	Z, r1
    2d68:	32 96       	adiw	r30, 0x02	; 2
    2d6a:	11 82       	std	Z+1, r1	; 0x01
    2d6c:	10 82       	st	Z, r1
    2d6e:	32 96       	adiw	r30, 0x02	; 2
    2d70:	11 82       	std	Z+1, r1	; 0x01
    2d72:	10 82       	st	Z, r1
    2d74:	32 96       	adiw	r30, 0x02	; 2
    2d76:	11 82       	std	Z+1, r1	; 0x01
    2d78:	10 82       	st	Z, r1
    2d7a:	32 96       	adiw	r30, 0x02	; 2
    2d7c:	11 82       	std	Z+1, r1	; 0x01
    2d7e:	10 82       	st	Z, r1
    2d80:	32 96       	adiw	r30, 0x02	; 2
    2d82:	11 82       	std	Z+1, r1	; 0x01
    2d84:	10 82       	st	Z, r1
    2d86:	32 96       	adiw	r30, 0x02	; 2
    2d88:	11 82       	std	Z+1, r1	; 0x01
    2d8a:	10 82       	st	Z, r1
    2d8c:	32 96       	adiw	r30, 0x02	; 2
    2d8e:	11 82       	std	Z+1, r1	; 0x01
    2d90:	10 82       	st	Z, r1
    2d92:	36 96       	adiw	r30, 0x06	; 6
    2d94:	11 92       	st	Z+, r1
    2d96:	11 92       	st	Z+, r1
    2d98:	11 92       	st	Z+, r1
    2d9a:	10 82       	st	Z, r1
    2d9c:	32 96       	adiw	r30, 0x02	; 2
    2d9e:	11 92       	st	Z+, r1
    2da0:	11 92       	st	Z+, r1
    2da2:	11 92       	st	Z+, r1
    2da4:	11 92       	st	Z+, r1
    2da6:	11 92       	st	Z+, r1
    2da8:	11 92       	st	Z+, r1
    2daa:	11 92       	st	Z+, r1
    2dac:	11 82       	std	Z+1, r1	; 0x01
    2dae:	10 82       	st	Z, r1
    2db0:	32 96       	adiw	r30, 0x02	; 2
    2db2:	11 82       	std	Z+1, r1	; 0x01
    2db4:	10 82       	st	Z, r1
    2db6:	32 96       	adiw	r30, 0x02	; 2
    2db8:	11 82       	std	Z+1, r1	; 0x01
    2dba:	10 82       	st	Z, r1
    2dbc:	32 96       	adiw	r30, 0x02	; 2
    2dbe:	11 82       	std	Z+1, r1	; 0x01
    2dc0:	10 82       	st	Z, r1
    2dc2:	76 97       	sbiw	r30, 0x16	; 22
    2dc4:	11 82       	std	Z+1, r1	; 0x01
    2dc6:	10 82       	st	Z, r1
    2dc8:	32 96       	adiw	r30, 0x02	; 2
    2dca:	11 82       	std	Z+1, r1	; 0x01
    2dcc:	10 82       	st	Z, r1
    2dce:	10 92 d8 04 	sts	0x04D8, r1
    2dd2:	10 92 d7 04 	sts	0x04D7, r1
    2dd6:	10 92 d9 04 	sts	0x04D9, r1
    2dda:	87 e0       	ldi	r24, 0x07	; 7
    2ddc:	61 e0       	ldi	r22, 0x01	; 1
    2dde:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    2de2:	87 e0       	ldi	r24, 0x07	; 7
    2de4:	91 e0       	ldi	r25, 0x01	; 1
    2de6:	08 95       	ret

00002de8 <STEPPER_run>:
    2de8:	ef 92       	push	r14
    2dea:	ff 92       	push	r15
    2dec:	0f 93       	push	r16
    2dee:	1f 93       	push	r17
    2df0:	18 2f       	mov	r17, r24
    2df2:	06 2f       	mov	r16, r22
    2df4:	7a 01       	movw	r14, r20
    2df6:	60 e0       	ldi	r22, 0x00	; 0
    2df8:	0e 94 42 17 	call	0x2e84	; 0x2e84 <STEPPER_set_mode>
    2dfc:	81 2f       	mov	r24, r17
    2dfe:	60 2f       	mov	r22, r16
    2e00:	0e 94 2d 17 	call	0x2e5a	; 0x2e5a <STEPPER_set_dir>
    2e04:	81 2f       	mov	r24, r17
    2e06:	b7 01       	movw	r22, r14
    2e08:	0e 94 57 17 	call	0x2eae	; 0x2eae <STEPPER_set_speed>
    2e0c:	1f 91       	pop	r17
    2e0e:	0f 91       	pop	r16
    2e10:	ff 90       	pop	r15
    2e12:	ef 90       	pop	r14
    2e14:	08 95       	ret

00002e16 <STEPPER_set_accel>:
    2e16:	48 2f       	mov	r20, r24
    2e18:	81 e0       	ldi	r24, 0x01	; 1
    2e1a:	80 93 d9 04 	sts	0x04D9, r24
    2e1e:	cb 01       	movw	r24, r22
    2e20:	23 e0       	ldi	r18, 0x03	; 3
    2e22:	69 3e       	cpi	r22, 0xE9	; 233
    2e24:	72 07       	cpc	r23, r18
    2e26:	10 f0       	brcs	.+4      	; 0x2e2c <STEPPER_set_accel+0x16>
    2e28:	88 ee       	ldi	r24, 0xE8	; 232
    2e2a:	93 e0       	ldi	r25, 0x03	; 3
    2e2c:	41 30       	cpi	r20, 0x01	; 1
    2e2e:	71 f0       	breq	.+28     	; 0x2e4c <STEPPER_set_accel+0x36>
    2e30:	41 30       	cpi	r20, 0x01	; 1
    2e32:	18 f0       	brcs	.+6      	; 0x2e3a <STEPPER_set_accel+0x24>
    2e34:	42 30       	cpi	r20, 0x02	; 2
    2e36:	71 f4       	brne	.+28     	; 0x2e54 <STEPPER_set_accel+0x3e>
    2e38:	05 c0       	rjmp	.+10     	; 0x2e44 <STEPPER_set_accel+0x2e>
    2e3a:	90 93 ae 04 	sts	0x04AE, r25
    2e3e:	80 93 ad 04 	sts	0x04AD, r24
    2e42:	08 c0       	rjmp	.+16     	; 0x2e54 <STEPPER_set_accel+0x3e>
    2e44:	90 93 ae 04 	sts	0x04AE, r25
    2e48:	80 93 ad 04 	sts	0x04AD, r24
    2e4c:	90 93 b0 04 	sts	0x04B0, r25
    2e50:	80 93 af 04 	sts	0x04AF, r24
    2e54:	10 92 d9 04 	sts	0x04D9, r1
    2e58:	08 95       	ret

00002e5a <STEPPER_set_dir>:
    2e5a:	98 2f       	mov	r25, r24
    2e5c:	81 e0       	ldi	r24, 0x01	; 1
    2e5e:	80 93 d9 04 	sts	0x04D9, r24
    2e62:	91 30       	cpi	r25, 0x01	; 1
    2e64:	51 f0       	breq	.+20     	; 0x2e7a <STEPPER_set_dir+0x20>
    2e66:	91 30       	cpi	r25, 0x01	; 1
    2e68:	18 f0       	brcs	.+6      	; 0x2e70 <STEPPER_set_dir+0x16>
    2e6a:	92 30       	cpi	r25, 0x02	; 2
    2e6c:	41 f4       	brne	.+16     	; 0x2e7e <STEPPER_set_dir+0x24>
    2e6e:	03 c0       	rjmp	.+6      	; 0x2e76 <STEPPER_set_dir+0x1c>
    2e70:	60 93 c6 04 	sts	0x04C6, r22
    2e74:	04 c0       	rjmp	.+8      	; 0x2e7e <STEPPER_set_dir+0x24>
    2e76:	60 93 c6 04 	sts	0x04C6, r22
    2e7a:	60 93 c7 04 	sts	0x04C7, r22
    2e7e:	10 92 d9 04 	sts	0x04D9, r1
    2e82:	08 95       	ret

00002e84 <STEPPER_set_mode>:
    2e84:	98 2f       	mov	r25, r24
    2e86:	81 e0       	ldi	r24, 0x01	; 1
    2e88:	80 93 d9 04 	sts	0x04D9, r24
    2e8c:	91 30       	cpi	r25, 0x01	; 1
    2e8e:	51 f0       	breq	.+20     	; 0x2ea4 <STEPPER_set_mode+0x20>
    2e90:	91 30       	cpi	r25, 0x01	; 1
    2e92:	18 f0       	brcs	.+6      	; 0x2e9a <STEPPER_set_mode+0x16>
    2e94:	92 30       	cpi	r25, 0x02	; 2
    2e96:	41 f4       	brne	.+16     	; 0x2ea8 <STEPPER_set_mode+0x24>
    2e98:	03 c0       	rjmp	.+6      	; 0x2ea0 <STEPPER_set_mode+0x1c>
    2e9a:	60 93 a3 04 	sts	0x04A3, r22
    2e9e:	04 c0       	rjmp	.+8      	; 0x2ea8 <STEPPER_set_mode+0x24>
    2ea0:	60 93 a3 04 	sts	0x04A3, r22
    2ea4:	60 93 a4 04 	sts	0x04A4, r22
    2ea8:	10 92 d9 04 	sts	0x04D9, r1
    2eac:	08 95       	ret

00002eae <STEPPER_set_speed>:
    2eae:	48 2f       	mov	r20, r24
    2eb0:	81 e0       	ldi	r24, 0x01	; 1
    2eb2:	80 93 d9 04 	sts	0x04D9, r24
    2eb6:	cb 01       	movw	r24, r22
    2eb8:	21 e0       	ldi	r18, 0x01	; 1
    2eba:	61 39       	cpi	r22, 0x91	; 145
    2ebc:	72 07       	cpc	r23, r18
    2ebe:	10 f0       	brcs	.+4      	; 0x2ec4 <STEPPER_set_speed+0x16>
    2ec0:	80 e9       	ldi	r24, 0x90	; 144
    2ec2:	91 e0       	ldi	r25, 0x01	; 1
    2ec4:	41 30       	cpi	r20, 0x01	; 1
    2ec6:	71 f0       	breq	.+28     	; 0x2ee4 <STEPPER_set_speed+0x36>
    2ec8:	41 30       	cpi	r20, 0x01	; 1
    2eca:	18 f0       	brcs	.+6      	; 0x2ed2 <STEPPER_set_speed+0x24>
    2ecc:	42 30       	cpi	r20, 0x02	; 2
    2ece:	71 f4       	brne	.+28     	; 0x2eec <STEPPER_set_speed+0x3e>
    2ed0:	05 c0       	rjmp	.+10     	; 0x2edc <STEPPER_set_speed+0x2e>
    2ed2:	90 93 a6 04 	sts	0x04A6, r25
    2ed6:	80 93 a5 04 	sts	0x04A5, r24
    2eda:	08 c0       	rjmp	.+16     	; 0x2eec <STEPPER_set_speed+0x3e>
    2edc:	90 93 a6 04 	sts	0x04A6, r25
    2ee0:	80 93 a5 04 	sts	0x04A5, r24
    2ee4:	90 93 a8 04 	sts	0x04A8, r25
    2ee8:	80 93 a7 04 	sts	0x04A7, r24
    2eec:	10 92 d9 04 	sts	0x04D9, r1
    2ef0:	08 95       	ret

00002ef2 <STEPPER_step>:
    2ef2:	8f 92       	push	r8
    2ef4:	9f 92       	push	r9
    2ef6:	af 92       	push	r10
    2ef8:	bf 92       	push	r11
    2efa:	cf 92       	push	r12
    2efc:	df 92       	push	r13
    2efe:	ef 92       	push	r14
    2f00:	ff 92       	push	r15
    2f02:	0f 93       	push	r16
    2f04:	1f 93       	push	r17
    2f06:	cf 93       	push	r28
    2f08:	df 93       	push	r29
    2f0a:	18 2f       	mov	r17, r24
    2f0c:	f6 2e       	mov	r15, r22
    2f0e:	5a 01       	movw	r10, r20
    2f10:	49 01       	movw	r8, r18
    2f12:	e6 01       	movw	r28, r12
    2f14:	61 e0       	ldi	r22, 0x01	; 1
    2f16:	0e 94 42 17 	call	0x2e84	; 0x2e84 <STEPPER_set_mode>
    2f1a:	81 2f       	mov	r24, r17
    2f1c:	b5 01       	movw	r22, r10
    2f1e:	a4 01       	movw	r20, r8
    2f20:	0e 94 21 20 	call	0x4042	; 0x4042 <STEPPER_setup_decels>
    2f24:	81 2f       	mov	r24, r17
    2f26:	6f 2d       	mov	r22, r15
    2f28:	0e 94 2d 17 	call	0x2e5a	; 0x2e5a <STEPPER_set_dir>
    2f2c:	81 2f       	mov	r24, r17
    2f2e:	60 2f       	mov	r22, r16
    2f30:	0e 94 0c 20 	call	0x4018	; 0x4018 <STEPPER_set_stop_mode>
    2f34:	81 2f       	mov	r24, r17
    2f36:	b5 01       	movw	r22, r10
    2f38:	0e 94 f1 1f 	call	0x3fe2	; 0x3fe2 <STEPPER_set_steps>
    2f3c:	c1 14       	cp	r12, r1
    2f3e:	d1 04       	cpc	r13, r1
    2f40:	99 f0       	breq	.+38     	; 0x2f68 <STEPPER_step+0x76>
    2f42:	11 30       	cpi	r17, 0x01	; 1
    2f44:	49 f0       	breq	.+18     	; 0x2f58 <STEPPER_step+0x66>
    2f46:	11 30       	cpi	r17, 0x01	; 1
    2f48:	18 f0       	brcs	.+6      	; 0x2f50 <STEPPER_step+0x5e>
    2f4a:	12 30       	cpi	r17, 0x02	; 2
    2f4c:	69 f4       	brne	.+26     	; 0x2f68 <STEPPER_step+0x76>
    2f4e:	06 c0       	rjmp	.+12     	; 0x2f5c <STEPPER_step+0x6a>
    2f50:	18 82       	st	Y, r1
    2f52:	10 92 d5 04 	sts	0x04D5, r1
    2f56:	08 c0       	rjmp	.+16     	; 0x2f68 <STEPPER_step+0x76>
    2f58:	19 82       	std	Y+1, r1	; 0x01
    2f5a:	04 c0       	rjmp	.+8      	; 0x2f64 <STEPPER_step+0x72>
    2f5c:	18 82       	st	Y, r1
    2f5e:	19 82       	std	Y+1, r1	; 0x01
    2f60:	10 92 d5 04 	sts	0x04D5, r1
    2f64:	10 92 d6 04 	sts	0x04D6, r1
    2f68:	d0 93 d8 04 	sts	0x04D8, r29
    2f6c:	c0 93 d7 04 	sts	0x04D7, r28
    2f70:	ee 20       	and	r14, r14
    2f72:	b9 f5       	brne	.+110    	; 0x2fe2 <STEPPER_step+0xf0>
    2f74:	8b e3       	ldi	r24, 0x3B	; 59
    2f76:	92 e0       	ldi	r25, 0x02	; 2
    2f78:	90 93 d8 04 	sts	0x04D8, r25
    2f7c:	80 93 d7 04 	sts	0x04D7, r24
    2f80:	81 2f       	mov	r24, r17
    2f82:	b4 01       	movw	r22, r8
    2f84:	0e 94 57 17 	call	0x2eae	; 0x2eae <STEPPER_set_speed>
    2f88:	81 2f       	mov	r24, r17
    2f8a:	0e 94 d2 1f 	call	0x3fa4	; 0x3fa4 <STEPPER_go>
    2f8e:	11 30       	cpi	r17, 0x01	; 1
    2f90:	71 f0       	breq	.+28     	; 0x2fae <STEPPER_step+0xbc>
    2f92:	11 30       	cpi	r17, 0x01	; 1
    2f94:	18 f0       	brcs	.+6      	; 0x2f9c <STEPPER_step+0xaa>
    2f96:	12 30       	cpi	r17, 0x02	; 2
    2f98:	59 f5       	brne	.+86     	; 0x2ff0 <STEPPER_step+0xfe>
    2f9a:	12 c0       	rjmp	.+36     	; 0x2fc0 <STEPPER_step+0xce>
    2f9c:	10 92 3b 02 	sts	0x023B, r1
    2fa0:	10 92 d5 04 	sts	0x04D5, r1
    2fa4:	80 91 3b 02 	lds	r24, 0x023B
    2fa8:	88 23       	and	r24, r24
    2faa:	e1 f3       	breq	.-8      	; 0x2fa4 <STEPPER_step+0xb2>
    2fac:	21 c0       	rjmp	.+66     	; 0x2ff0 <STEPPER_step+0xfe>
    2fae:	10 92 3c 02 	sts	0x023C, r1
    2fb2:	10 92 d6 04 	sts	0x04D6, r1
    2fb6:	80 91 3c 02 	lds	r24, 0x023C
    2fba:	88 23       	and	r24, r24
    2fbc:	e1 f3       	breq	.-8      	; 0x2fb6 <STEPPER_step+0xc4>
    2fbe:	18 c0       	rjmp	.+48     	; 0x2ff0 <STEPPER_step+0xfe>
    2fc0:	10 92 3b 02 	sts	0x023B, r1
    2fc4:	10 92 3c 02 	sts	0x023C, r1
    2fc8:	10 92 d5 04 	sts	0x04D5, r1
    2fcc:	10 92 d6 04 	sts	0x04D6, r1
    2fd0:	80 91 3b 02 	lds	r24, 0x023B
    2fd4:	88 23       	and	r24, r24
    2fd6:	e1 f3       	breq	.-8      	; 0x2fd0 <STEPPER_step+0xde>
    2fd8:	80 91 3c 02 	lds	r24, 0x023C
    2fdc:	88 23       	and	r24, r24
    2fde:	c1 f3       	breq	.-16     	; 0x2fd0 <STEPPER_step+0xde>
    2fe0:	07 c0       	rjmp	.+14     	; 0x2ff0 <STEPPER_step+0xfe>
    2fe2:	81 2f       	mov	r24, r17
    2fe4:	b4 01       	movw	r22, r8
    2fe6:	0e 94 57 17 	call	0x2eae	; 0x2eae <STEPPER_set_speed>
    2fea:	81 2f       	mov	r24, r17
    2fec:	0e 94 d2 1f 	call	0x3fa4	; 0x3fa4 <STEPPER_go>
    2ff0:	df 91       	pop	r29
    2ff2:	cf 91       	pop	r28
    2ff4:	1f 91       	pop	r17
    2ff6:	0f 91       	pop	r16
    2ff8:	ff 90       	pop	r15
    2ffa:	ef 90       	pop	r14
    2ffc:	df 90       	pop	r13
    2ffe:	cf 90       	pop	r12
    3000:	bf 90       	pop	r11
    3002:	af 90       	pop	r10
    3004:	9f 90       	pop	r9
    3006:	8f 90       	pop	r8
    3008:	08 95       	ret

0000300a <STEPPER_wait_and_then>:
    300a:	cf 92       	push	r12
    300c:	df 92       	push	r13
    300e:	ef 92       	push	r14
    3010:	ff 92       	push	r15
    3012:	0f 93       	push	r16
    3014:	1f 93       	push	r17
    3016:	df 93       	push	r29
    3018:	cf 93       	push	r28
    301a:	cd b7       	in	r28, 0x3d	; 61
    301c:	de b7       	in	r29, 0x3e	; 62
    301e:	8b 85       	ldd	r24, Y+11	; 0x0b
    3020:	81 30       	cpi	r24, 0x01	; 1
    3022:	61 f0       	breq	.+24     	; 0x303c <STEPPER_wait_and_then+0x32>
    3024:	81 30       	cpi	r24, 0x01	; 1
    3026:	18 f0       	brcs	.+6      	; 0x302e <STEPPER_wait_and_then+0x24>
    3028:	82 30       	cpi	r24, 0x02	; 2
    302a:	a1 f5       	brne	.+104    	; 0x3094 <STEPPER_wait_and_then+0x8a>
    302c:	11 c0       	rjmp	.+34     	; 0x3050 <STEPPER_wait_and_then+0x46>
    302e:	ec 85       	ldd	r30, Y+12	; 0x0c
    3030:	fd 85       	ldd	r31, Y+13	; 0x0d
    3032:	80 91 da 04 	lds	r24, 0x04DA
    3036:	88 23       	and	r24, r24
    3038:	e1 f3       	breq	.-8      	; 0x3032 <STEPPER_wait_and_then+0x28>
    303a:	06 c0       	rjmp	.+12     	; 0x3048 <STEPPER_wait_and_then+0x3e>
    303c:	ec 85       	ldd	r30, Y+12	; 0x0c
    303e:	fd 85       	ldd	r31, Y+13	; 0x0d
    3040:	80 91 db 04 	lds	r24, 0x04DB
    3044:	88 23       	and	r24, r24
    3046:	e1 f3       	breq	.-8      	; 0x3040 <STEPPER_wait_and_then+0x36>
    3048:	30 97       	sbiw	r30, 0x00	; 0
    304a:	21 f1       	breq	.+72     	; 0x3094 <STEPPER_wait_and_then+0x8a>
    304c:	09 95       	icall
    304e:	22 c0       	rjmp	.+68     	; 0x3094 <STEPPER_wait_and_then+0x8a>
    3050:	cc 84       	ldd	r12, Y+12	; 0x0c
    3052:	dd 84       	ldd	r13, Y+13	; 0x0d
    3054:	ee 84       	ldd	r14, Y+14	; 0x0e
    3056:	ff 84       	ldd	r15, Y+15	; 0x0f
    3058:	00 e0       	ldi	r16, 0x00	; 0
    305a:	10 e0       	ldi	r17, 0x00	; 0
    305c:	00 23       	and	r16, r16
    305e:	51 f4       	brne	.+20     	; 0x3074 <STEPPER_wait_and_then+0x6a>
    3060:	80 91 da 04 	lds	r24, 0x04DA
    3064:	88 23       	and	r24, r24
    3066:	31 f0       	breq	.+12     	; 0x3074 <STEPPER_wait_and_then+0x6a>
    3068:	c1 14       	cp	r12, r1
    306a:	d1 04       	cpc	r13, r1
    306c:	11 f0       	breq	.+4      	; 0x3072 <STEPPER_wait_and_then+0x68>
    306e:	f6 01       	movw	r30, r12
    3070:	09 95       	icall
    3072:	01 e0       	ldi	r16, 0x01	; 1
    3074:	11 23       	and	r17, r17
    3076:	51 f4       	brne	.+20     	; 0x308c <STEPPER_wait_and_then+0x82>
    3078:	80 91 db 04 	lds	r24, 0x04DB
    307c:	88 23       	and	r24, r24
    307e:	31 f0       	breq	.+12     	; 0x308c <STEPPER_wait_and_then+0x82>
    3080:	e1 14       	cp	r14, r1
    3082:	f1 04       	cpc	r15, r1
    3084:	11 f0       	breq	.+4      	; 0x308a <STEPPER_wait_and_then+0x80>
    3086:	f7 01       	movw	r30, r14
    3088:	09 95       	icall
    308a:	11 e0       	ldi	r17, 0x01	; 1
    308c:	00 23       	and	r16, r16
    308e:	31 f3       	breq	.-52     	; 0x305c <STEPPER_wait_and_then+0x52>
    3090:	11 23       	and	r17, r17
    3092:	21 f3       	breq	.-56     	; 0x305c <STEPPER_wait_and_then+0x52>
    3094:	cf 91       	pop	r28
    3096:	df 91       	pop	r29
    3098:	1f 91       	pop	r17
    309a:	0f 91       	pop	r16
    309c:	ff 90       	pop	r15
    309e:	ef 90       	pop	r14
    30a0:	df 90       	pop	r13
    30a2:	cf 90       	pop	r12
    30a4:	08 95       	ret

000030a6 <SYS_get_state>:
    30a6:	e8 2f       	mov	r30, r24
    30a8:	f0 e0       	ldi	r31, 0x00	; 0
    30aa:	e3 31       	cpi	r30, 0x13	; 19
    30ac:	f1 05       	cpc	r31, r1
    30ae:	40 f4       	brcc	.+16     	; 0x30c0 <SYS_get_state+0x1a>
    30b0:	e2 5c       	subi	r30, 0xC2	; 194
    30b2:	ff 4f       	sbci	r31, 0xFF	; 255
    30b4:	ee 0f       	add	r30, r30
    30b6:	ff 1f       	adc	r31, r31
    30b8:	05 90       	lpm	r0, Z+
    30ba:	f4 91       	lpm	r31, Z+
    30bc:	e0 2d       	mov	r30, r0
    30be:	09 94       	ijmp
    30c0:	80 e0       	ldi	r24, 0x00	; 0
    30c2:	08 95       	ret
    30c4:	80 91 dc 04 	lds	r24, 0x04DC
    30c8:	08 95       	ret
    30ca:	80 91 dd 04 	lds	r24, 0x04DD
    30ce:	08 95       	ret
    30d0:	80 91 de 04 	lds	r24, 0x04DE
    30d4:	08 95       	ret
    30d6:	80 91 df 04 	lds	r24, 0x04DF
    30da:	08 95       	ret
    30dc:	80 91 e0 04 	lds	r24, 0x04E0
    30e0:	08 95       	ret
    30e2:	80 91 e2 04 	lds	r24, 0x04E2
    30e6:	08 95       	ret
    30e8:	80 91 e1 04 	lds	r24, 0x04E1
    30ec:	08 95       	ret
    30ee:	80 91 e3 04 	lds	r24, 0x04E3
    30f2:	08 95       	ret
    30f4:	80 91 e4 04 	lds	r24, 0x04E4
    30f8:	08 95       	ret
    30fa:	80 91 e5 04 	lds	r24, 0x04E5
    30fe:	08 95       	ret
    3100:	80 91 e6 04 	lds	r24, 0x04E6
    3104:	08 95       	ret
    3106:	80 91 e7 04 	lds	r24, 0x04E7
    310a:	08 95       	ret
    310c:	80 91 e8 04 	lds	r24, 0x04E8
    3110:	08 95       	ret
    3112:	80 91 e9 04 	lds	r24, 0x04E9
    3116:	08 95       	ret
    3118:	80 91 ea 04 	lds	r24, 0x04EA
    311c:	08 95       	ret
    311e:	80 91 eb 04 	lds	r24, 0x04EB
    3122:	08 95       	ret
    3124:	80 91 ec 04 	lds	r24, 0x04EC
    3128:	08 95       	ret
    312a:	80 91 ed 04 	lds	r24, 0x04ED
    312e:	08 95       	ret
    3130:	80 91 ee 04 	lds	r24, 0x04EE
    3134:	08 95       	ret

00003136 <SYS_set_state>:
    3136:	e8 2f       	mov	r30, r24
    3138:	f0 e0       	ldi	r31, 0x00	; 0
    313a:	e3 31       	cpi	r30, 0x13	; 19
    313c:	f1 05       	cpc	r31, r1
    313e:	08 f0       	brcs	.+2      	; 0x3142 <SYS_set_state+0xc>
    3140:	40 c0       	rjmp	.+128    	; 0x31c2 <SYS_set_state+0x8c>
    3142:	ef 5a       	subi	r30, 0xAF	; 175
    3144:	ff 4f       	sbci	r31, 0xFF	; 255
    3146:	ee 0f       	add	r30, r30
    3148:	ff 1f       	adc	r31, r31
    314a:	05 90       	lpm	r0, Z+
    314c:	f4 91       	lpm	r31, Z+
    314e:	e0 2d       	mov	r30, r0
    3150:	09 94       	ijmp
    3152:	60 93 dc 04 	sts	0x04DC, r22
    3156:	08 95       	ret
    3158:	60 93 dd 04 	sts	0x04DD, r22
    315c:	08 95       	ret
    315e:	60 93 de 04 	sts	0x04DE, r22
    3162:	08 95       	ret
    3164:	60 93 df 04 	sts	0x04DF, r22
    3168:	08 95       	ret
    316a:	60 93 e0 04 	sts	0x04E0, r22
    316e:	08 95       	ret
    3170:	60 93 e2 04 	sts	0x04E2, r22
    3174:	08 95       	ret
    3176:	60 93 e1 04 	sts	0x04E1, r22
    317a:	08 95       	ret
    317c:	60 93 e3 04 	sts	0x04E3, r22
    3180:	08 95       	ret
    3182:	60 93 e4 04 	sts	0x04E4, r22
    3186:	08 95       	ret
    3188:	60 93 e5 04 	sts	0x04E5, r22
    318c:	08 95       	ret
    318e:	60 93 e6 04 	sts	0x04E6, r22
    3192:	08 95       	ret
    3194:	60 93 e7 04 	sts	0x04E7, r22
    3198:	08 95       	ret
    319a:	60 93 e8 04 	sts	0x04E8, r22
    319e:	08 95       	ret
    31a0:	60 93 e9 04 	sts	0x04E9, r22
    31a4:	08 95       	ret
    31a6:	60 93 ea 04 	sts	0x04EA, r22
    31aa:	08 95       	ret
    31ac:	60 93 eb 04 	sts	0x04EB, r22
    31b0:	08 95       	ret
    31b2:	60 93 ec 04 	sts	0x04EC, r22
    31b6:	08 95       	ret
    31b8:	60 93 ed 04 	sts	0x04ED, r22
    31bc:	08 95       	ret
    31be:	60 93 ec 04 	sts	0x04EC, r22
    31c2:	08 95       	ret

000031c4 <ATTINY_get_sensors>:
    31c4:	0f 93       	push	r16
    31c6:	1f 93       	push	r17
    31c8:	81 e0       	ldi	r24, 0x01	; 1
    31ca:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    31ce:	81 30       	cpi	r24, 0x01	; 1
    31d0:	11 f0       	breq	.+4      	; 0x31d6 <ATTINY_get_sensors+0x12>
    31d2:	00 e0       	ldi	r16, 0x00	; 0
    31d4:	24 c0       	rjmp	.+72     	; 0x321e <ATTINY_get_sensors+0x5a>
    31d6:	87 e0       	ldi	r24, 0x07	; 7
    31d8:	0e 94 30 14 	call	0x2860	; 0x2860 <SPI_set_slave_addr>
    31dc:	82 e0       	ldi	r24, 0x02	; 2
    31de:	6a e0       	ldi	r22, 0x0A	; 10
    31e0:	0e 94 81 14 	call	0x2902	; 0x2902 <SPI_transmit>
    31e4:	82 e0       	ldi	r24, 0x02	; 2
    31e6:	62 eb       	ldi	r22, 0xB2	; 178
    31e8:	0e 94 81 14 	call	0x2902	; 0x2902 <SPI_transmit>
    31ec:	18 ec       	ldi	r17, 0xC8	; 200
    31ee:	81 2f       	mov	r24, r17
    31f0:	8a 95       	dec	r24
    31f2:	f1 f7       	brne	.-4      	; 0x31f0 <ATTINY_get_sensors+0x2c>
    31f4:	82 e0       	ldi	r24, 0x02	; 2
    31f6:	60 e0       	ldi	r22, 0x00	; 0
    31f8:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <SPI_receive>
    31fc:	08 2f       	mov	r16, r24
    31fe:	81 2f       	mov	r24, r17
    3200:	8a 95       	dec	r24
    3202:	f1 f7       	brne	.-4      	; 0x3200 <ATTINY_get_sensors+0x3c>
    3204:	82 e0       	ldi	r24, 0x02	; 2
    3206:	60 e0       	ldi	r22, 0x00	; 0
    3208:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <SPI_receive>
    320c:	1a 95       	dec	r17
    320e:	f1 f7       	brne	.-4      	; 0x320c <ATTINY_get_sensors+0x48>
    3210:	87 e0       	ldi	r24, 0x07	; 7
    3212:	0e 94 30 14 	call	0x2860	; 0x2860 <SPI_set_slave_addr>
    3216:	88 e8       	ldi	r24, 0x88	; 136
    3218:	93 e1       	ldi	r25, 0x13	; 19
    321a:	01 97       	sbiw	r24, 0x01	; 1
    321c:	f1 f7       	brne	.-4      	; 0x321a <ATTINY_get_sensors+0x56>
    321e:	80 2f       	mov	r24, r16
    3220:	1f 91       	pop	r17
    3222:	0f 91       	pop	r16
    3224:	08 95       	ret

00003226 <ATTINY_get_SW_state>:
    3226:	1f 93       	push	r17
    3228:	cf 93       	push	r28
    322a:	df 93       	push	r29
    322c:	18 2f       	mov	r17, r24
    322e:	80 91 3e 02 	lds	r24, 0x023E
    3232:	88 23       	and	r24, r24
    3234:	41 f0       	breq	.+16     	; 0x3246 <ATTINY_get_SW_state+0x20>
    3236:	80 91 48 02 	lds	r24, 0x0248
    323a:	88 23       	and	r24, r24
    323c:	99 f0       	breq	.+38     	; 0x3264 <ATTINY_get_SW_state+0x3e>
    323e:	10 92 3e 02 	sts	0x023E, r1
    3242:	10 92 48 02 	sts	0x0248, r1
    3246:	0e 94 e2 18 	call	0x31c4	; 0x31c4 <ATTINY_get_sensors>
    324a:	80 93 3d 02 	sts	0x023D, r24
    324e:	82 e4       	ldi	r24, 0x42	; 66
    3250:	92 e0       	ldi	r25, 0x02	; 2
    3252:	61 e0       	ldi	r22, 0x01	; 1
    3254:	40 e0       	ldi	r20, 0x00	; 0
    3256:	22 e3       	ldi	r18, 0x32	; 50
    3258:	30 e0       	ldi	r19, 0x00	; 0
    325a:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <TMRSRVC_new>
    325e:	81 e0       	ldi	r24, 0x01	; 1
    3260:	80 93 3e 02 	sts	0x023E, r24
    3264:	90 91 3d 02 	lds	r25, 0x023D
    3268:	a1 2f       	mov	r26, r17
    326a:	b0 e0       	ldi	r27, 0x00	; 0
    326c:	ed 01       	movw	r28, r26
    326e:	ce 53       	subi	r28, 0x3E	; 62
    3270:	de 4f       	sbci	r29, 0xFE	; 254
    3272:	88 81       	ld	r24, Y
    3274:	88 23       	and	r24, r24
    3276:	69 f0       	breq	.+26     	; 0x3292 <ATTINY_get_SW_state+0x6c>
    3278:	fd 01       	movw	r30, r26
    327a:	eb 53       	subi	r30, 0x3B	; 59
    327c:	fe 4f       	sbci	r31, 0xFE	; 254
    327e:	80 81       	ld	r24, Z
    3280:	98 23       	and	r25, r24
    3282:	c1 f0       	breq	.+48     	; 0x32b4 <ATTINY_get_SW_state+0x8e>
    3284:	fd 01       	movw	r30, r26
    3286:	e1 5c       	subi	r30, 0xC1	; 193
    3288:	fd 4f       	sbci	r31, 0xFD	; 253
    328a:	81 e0       	ldi	r24, 0x01	; 1
    328c:	80 83       	st	Z, r24
    328e:	18 82       	st	Y, r1
    3290:	11 c0       	rjmp	.+34     	; 0x32b4 <ATTINY_get_SW_state+0x8e>
    3292:	fd 01       	movw	r30, r26
    3294:	e1 5c       	subi	r30, 0xC1	; 193
    3296:	fd 4f       	sbci	r31, 0xFD	; 253
    3298:	80 81       	ld	r24, Z
    329a:	81 11       	cpse	r24, r1
    329c:	10 82       	st	Z, r1
    329e:	fd 01       	movw	r30, r26
    32a0:	eb 53       	subi	r30, 0x3B	; 59
    32a2:	fe 4f       	sbci	r31, 0xFE	; 254
    32a4:	80 81       	ld	r24, Z
    32a6:	98 23       	and	r25, r24
    32a8:	29 f4       	brne	.+10     	; 0x32b4 <ATTINY_get_SW_state+0x8e>
    32aa:	fd 01       	movw	r30, r26
    32ac:	ee 53       	subi	r30, 0x3E	; 62
    32ae:	fe 4f       	sbci	r31, 0xFE	; 254
    32b0:	81 e0       	ldi	r24, 0x01	; 1
    32b2:	80 83       	st	Z, r24
    32b4:	a1 5c       	subi	r26, 0xC1	; 193
    32b6:	bd 4f       	sbci	r27, 0xFD	; 253
    32b8:	8c 91       	ld	r24, X
    32ba:	df 91       	pop	r29
    32bc:	cf 91       	pop	r28
    32be:	1f 91       	pop	r17
    32c0:	08 95       	ret

000032c2 <ATTINY_open>:
    32c2:	82 e0       	ldi	r24, 0x02	; 2
    32c4:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    32c8:	88 23       	and	r24, r24
    32ca:	19 f4       	brne	.+6      	; 0x32d2 <ATTINY_open+0x10>
    32cc:	90 e0       	ldi	r25, 0x00	; 0
    32ce:	82 e0       	ldi	r24, 0x02	; 2
    32d0:	08 95       	ret
    32d2:	10 92 0a 05 	sts	0x050A, r1
    32d6:	10 92 09 05 	sts	0x0509, r1
    32da:	10 92 0c 05 	sts	0x050C, r1
    32de:	10 92 0b 05 	sts	0x050B, r1
    32e2:	10 92 0e 05 	sts	0x050E, r1
    32e6:	10 92 0d 05 	sts	0x050D, r1
    32ea:	10 92 10 05 	sts	0x0510, r1
    32ee:	10 92 0f 05 	sts	0x050F, r1
    32f2:	10 92 12 05 	sts	0x0512, r1
    32f6:	10 92 11 05 	sts	0x0511, r1
    32fa:	80 e9       	ldi	r24, 0x90	; 144
    32fc:	91 e0       	ldi	r25, 0x01	; 1
    32fe:	90 93 f6 04 	sts	0x04F6, r25
    3302:	80 93 f5 04 	sts	0x04F5, r24
    3306:	90 93 f8 04 	sts	0x04F8, r25
    330a:	80 93 f7 04 	sts	0x04F7, r24
    330e:	90 93 fa 04 	sts	0x04FA, r25
    3312:	80 93 f9 04 	sts	0x04F9, r24
    3316:	90 93 fc 04 	sts	0x04FC, r25
    331a:	80 93 fb 04 	sts	0x04FB, r24
    331e:	90 93 fe 04 	sts	0x04FE, r25
    3322:	80 93 fd 04 	sts	0x04FD, r24
    3326:	84 e3       	ldi	r24, 0x34	; 52
    3328:	98 e0       	ldi	r25, 0x08	; 8
    332a:	90 93 00 05 	sts	0x0500, r25
    332e:	80 93 ff 04 	sts	0x04FF, r24
    3332:	90 93 02 05 	sts	0x0502, r25
    3336:	80 93 01 05 	sts	0x0501, r24
    333a:	90 93 04 05 	sts	0x0504, r25
    333e:	80 93 03 05 	sts	0x0503, r24
    3342:	90 93 06 05 	sts	0x0506, r25
    3346:	80 93 05 05 	sts	0x0505, r24
    334a:	90 93 08 05 	sts	0x0508, r25
    334e:	80 93 07 05 	sts	0x0507, r24
    3352:	81 e0       	ldi	r24, 0x01	; 1
    3354:	61 e0       	ldi	r22, 0x01	; 1
    3356:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    335a:	91 e0       	ldi	r25, 0x01	; 1
    335c:	81 e0       	ldi	r24, 0x01	; 1
    335e:	08 95       	ret

00003360 <TMRSRVC_delay>:
    3360:	df 93       	push	r29
    3362:	cf 93       	push	r28
    3364:	cd b7       	in	r28, 0x3d	; 61
    3366:	de b7       	in	r29, 0x3e	; 62
    3368:	29 97       	sbiw	r28, 0x09	; 9
    336a:	0f b6       	in	r0, 0x3f	; 63
    336c:	f8 94       	cli
    336e:	de bf       	out	0x3e, r29	; 62
    3370:	0f be       	out	0x3f, r0	; 63
    3372:	cd bf       	out	0x3d, r28	; 61
    3374:	9c 01       	movw	r18, r24
    3376:	ce 01       	movw	r24, r28
    3378:	01 96       	adiw	r24, 0x01	; 1
    337a:	61 e0       	ldi	r22, 0x01	; 1
    337c:	40 e0       	ldi	r20, 0x00	; 0
    337e:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <TMRSRVC_new>
    3382:	98 2f       	mov	r25, r24
    3384:	88 23       	and	r24, r24
    3386:	19 f4       	brne	.+6      	; 0x338e <TMRSRVC_delay+0x2e>
    3388:	8f 81       	ldd	r24, Y+7	; 0x07
    338a:	88 23       	and	r24, r24
    338c:	e9 f3       	breq	.-6      	; 0x3388 <TMRSRVC_delay+0x28>
    338e:	89 2f       	mov	r24, r25
    3390:	29 96       	adiw	r28, 0x09	; 9
    3392:	0f b6       	in	r0, 0x3f	; 63
    3394:	f8 94       	cli
    3396:	de bf       	out	0x3e, r29	; 62
    3398:	0f be       	out	0x3f, r0	; 63
    339a:	cd bf       	out	0x3d, r28	; 61
    339c:	cf 91       	pop	r28
    339e:	df 91       	pop	r29
    33a0:	08 95       	ret

000033a2 <TMRSRVC_new>:
    33a2:	ef 92       	push	r14
    33a4:	ff 92       	push	r15
    33a6:	0f 93       	push	r16
    33a8:	1f 93       	push	r17
    33aa:	cf 93       	push	r28
    33ac:	df 93       	push	r29
    33ae:	ec 01       	movw	r28, r24
    33b0:	f6 2e       	mov	r15, r22
    33b2:	e4 2e       	mov	r14, r20
    33b4:	89 01       	movw	r16, r18
    33b6:	88 e0       	ldi	r24, 0x08	; 8
    33b8:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    33bc:	81 30       	cpi	r24, 0x01	; 1
    33be:	11 f0       	breq	.+4      	; 0x33c4 <TMRSRVC_new+0x22>
    33c0:	81 e0       	ldi	r24, 0x01	; 1
    33c2:	26 c0       	rjmp	.+76     	; 0x3410 <TMRSRVC_new+0x6e>
    33c4:	84 e0       	ldi	r24, 0x04	; 4
    33c6:	90 e0       	ldi	r25, 0x00	; 0
    33c8:	0e 94 8d 2d 	call	0x5b1a	; 0x5b1a <malloc>
    33cc:	fc 01       	movw	r30, r24
    33ce:	00 97       	sbiw	r24, 0x00	; 0
    33d0:	11 f4       	brne	.+4      	; 0x33d6 <TMRSRVC_new+0x34>
    33d2:	82 e0       	ldi	r24, 0x02	; 2
    33d4:	1d c0       	rjmp	.+58     	; 0x3410 <TMRSRVC_new+0x6e>
    33d6:	f9 82       	std	Y+1, r15	; 0x01
    33d8:	f0 fc       	sbrc	r15, 0
    33da:	1e 82       	std	Y+6, r1	; 0x06
    33dc:	81 e0       	ldi	r24, 0x01	; 1
    33de:	e8 16       	cp	r14, r24
    33e0:	19 f4       	brne	.+6      	; 0x33e8 <TMRSRVC_new+0x46>
    33e2:	89 81       	ldd	r24, Y+1	; 0x01
    33e4:	84 60       	ori	r24, 0x04	; 4
    33e6:	89 83       	std	Y+1, r24	; 0x01
    33e8:	89 81       	ldd	r24, Y+1	; 0x01
    33ea:	88 60       	ori	r24, 0x08	; 8
    33ec:	89 83       	std	Y+1, r24	; 0x01
    33ee:	1b 83       	std	Y+3, r17	; 0x03
    33f0:	0a 83       	std	Y+2, r16	; 0x02
    33f2:	1d 83       	std	Y+5, r17	; 0x05
    33f4:	0c 83       	std	Y+4, r16	; 0x04
    33f6:	d1 83       	std	Z+1, r29	; 0x01
    33f8:	c0 83       	st	Z, r28
    33fa:	13 82       	std	Z+3, r1	; 0x03
    33fc:	12 82       	std	Z+2, r1	; 0x02
    33fe:	81 e0       	ldi	r24, 0x01	; 1
    3400:	80 93 ab 02 	sts	0x02AB, r24
    3404:	cf 01       	movw	r24, r30
    3406:	0e 94 81 20 	call	0x4102	; 0x4102 <TMRSRVC_insert>
    340a:	10 92 ab 02 	sts	0x02AB, r1
    340e:	80 e0       	ldi	r24, 0x00	; 0
    3410:	df 91       	pop	r29
    3412:	cf 91       	pop	r28
    3414:	1f 91       	pop	r17
    3416:	0f 91       	pop	r16
    3418:	ff 90       	pop	r15
    341a:	ef 90       	pop	r14
    341c:	08 95       	ret

0000341e <I2C_MSTR_get>:
    341e:	fc 01       	movw	r30, r24
    3420:	80 91 16 05 	lds	r24, 0x0516
    3424:	81 30       	cpi	r24, 0x01	; 1
    3426:	11 f0       	breq	.+4      	; 0x342c <I2C_MSTR_get+0xe>
    3428:	85 e0       	ldi	r24, 0x05	; 5
    342a:	08 95       	ret
    342c:	80 91 17 05 	lds	r24, 0x0517
    3430:	81 30       	cpi	r24, 0x01	; 1
    3432:	11 f0       	breq	.+4      	; 0x3438 <I2C_MSTR_get+0x1a>
    3434:	8a e0       	ldi	r24, 0x0A	; 10
    3436:	08 95       	ret
    3438:	61 30       	cpi	r22, 0x01	; 1
    343a:	11 f4       	brne	.+4      	; 0x3440 <I2C_MSTR_get+0x22>
    343c:	84 ec       	ldi	r24, 0xC4	; 196
    343e:	01 c0       	rjmp	.+2      	; 0x3442 <I2C_MSTR_get+0x24>
    3440:	84 e8       	ldi	r24, 0x84	; 132
    3442:	80 93 bc 00 	sts	0x00BC, r24
    3446:	80 91 bc 00 	lds	r24, 0x00BC
    344a:	87 ff       	sbrs	r24, 7
    344c:	fc cf       	rjmp	.-8      	; 0x3446 <I2C_MSTR_get+0x28>
    344e:	61 30       	cpi	r22, 0x01	; 1
    3450:	31 f4       	brne	.+12     	; 0x345e <I2C_MSTR_get+0x40>
    3452:	80 91 b9 00 	lds	r24, 0x00B9
    3456:	88 7f       	andi	r24, 0xF8	; 248
    3458:	80 35       	cpi	r24, 0x50	; 80
    345a:	59 f4       	brne	.+22     	; 0x3472 <I2C_MSTR_get+0x54>
    345c:	05 c0       	rjmp	.+10     	; 0x3468 <I2C_MSTR_get+0x4a>
    345e:	80 91 b9 00 	lds	r24, 0x00B9
    3462:	88 7f       	andi	r24, 0xF8	; 248
    3464:	88 35       	cpi	r24, 0x58	; 88
    3466:	29 f4       	brne	.+10     	; 0x3472 <I2C_MSTR_get+0x54>
    3468:	80 91 bb 00 	lds	r24, 0x00BB
    346c:	80 83       	st	Z, r24
    346e:	80 e0       	ldi	r24, 0x00	; 0
    3470:	08 95       	ret
    3472:	82 e0       	ldi	r24, 0x02	; 2
    3474:	08 95       	ret

00003476 <I2C_MSTR_send>:
    3476:	98 2f       	mov	r25, r24
    3478:	80 91 16 05 	lds	r24, 0x0516
    347c:	81 30       	cpi	r24, 0x01	; 1
    347e:	11 f0       	breq	.+4      	; 0x3484 <I2C_MSTR_send+0xe>
    3480:	85 e0       	ldi	r24, 0x05	; 5
    3482:	08 95       	ret
    3484:	80 91 17 05 	lds	r24, 0x0517
    3488:	81 30       	cpi	r24, 0x01	; 1
    348a:	11 f0       	breq	.+4      	; 0x3490 <I2C_MSTR_send+0x1a>
    348c:	8a e0       	ldi	r24, 0x0A	; 10
    348e:	08 95       	ret
    3490:	90 93 bb 00 	sts	0x00BB, r25
    3494:	84 e8       	ldi	r24, 0x84	; 132
    3496:	80 93 bc 00 	sts	0x00BC, r24
    349a:	80 91 bc 00 	lds	r24, 0x00BC
    349e:	87 ff       	sbrs	r24, 7
    34a0:	fc cf       	rjmp	.-8      	; 0x349a <I2C_MSTR_send+0x24>
    34a2:	80 91 b9 00 	lds	r24, 0x00B9
    34a6:	90 e0       	ldi	r25, 0x00	; 0
    34a8:	88 7f       	andi	r24, 0xF8	; 248
    34aa:	90 70       	andi	r25, 0x00	; 0
    34ac:	88 32       	cpi	r24, 0x28	; 40
    34ae:	91 05       	cpc	r25, r1
    34b0:	21 f0       	breq	.+8      	; 0x34ba <I2C_MSTR_send+0x44>
    34b2:	c0 97       	sbiw	r24, 0x30	; 48
    34b4:	21 f4       	brne	.+8      	; 0x34be <I2C_MSTR_send+0x48>
    34b6:	83 e0       	ldi	r24, 0x03	; 3
    34b8:	08 95       	ret
    34ba:	80 e0       	ldi	r24, 0x00	; 0
    34bc:	08 95       	ret
    34be:	8c e0       	ldi	r24, 0x0C	; 12
    34c0:	08 95       	ret

000034c2 <I2C_MSTR_start>:
    34c2:	98 2f       	mov	r25, r24
    34c4:	20 91 16 05 	lds	r18, 0x0516
    34c8:	21 30       	cpi	r18, 0x01	; 1
    34ca:	11 f0       	breq	.+4      	; 0x34d0 <I2C_MSTR_start+0xe>
    34cc:	85 e0       	ldi	r24, 0x05	; 5
    34ce:	08 95       	ret
    34d0:	80 91 18 05 	lds	r24, 0x0518
    34d4:	81 30       	cpi	r24, 0x01	; 1
    34d6:	11 f4       	brne	.+4      	; 0x34dc <I2C_MSTR_start+0x1a>
    34d8:	89 e0       	ldi	r24, 0x09	; 9
    34da:	08 95       	ret
    34dc:	20 93 17 05 	sts	0x0517, r18
    34e0:	84 ea       	ldi	r24, 0xA4	; 164
    34e2:	80 93 bc 00 	sts	0x00BC, r24
    34e6:	80 91 bc 00 	lds	r24, 0x00BC
    34ea:	87 ff       	sbrs	r24, 7
    34ec:	fc cf       	rjmp	.-8      	; 0x34e6 <I2C_MSTR_start+0x24>
    34ee:	80 91 b9 00 	lds	r24, 0x00B9
    34f2:	88 7f       	andi	r24, 0xF8	; 248
    34f4:	88 30       	cpi	r24, 0x08	; 8
    34f6:	39 f0       	breq	.+14     	; 0x3506 <I2C_MSTR_start+0x44>
    34f8:	80 91 b9 00 	lds	r24, 0x00B9
    34fc:	88 7f       	andi	r24, 0xF8	; 248
    34fe:	80 31       	cpi	r24, 0x10	; 16
    3500:	11 f0       	breq	.+4      	; 0x3506 <I2C_MSTR_start+0x44>
    3502:	81 e0       	ldi	r24, 0x01	; 1
    3504:	08 95       	ret
    3506:	61 30       	cpi	r22, 0x01	; 1
    3508:	19 f4       	brne	.+6      	; 0x3510 <I2C_MSTR_start+0x4e>
    350a:	99 0f       	add	r25, r25
    350c:	91 60       	ori	r25, 0x01	; 1
    350e:	03 c0       	rjmp	.+6      	; 0x3516 <I2C_MSTR_start+0x54>
    3510:	66 23       	and	r22, r22
    3512:	19 f4       	brne	.+6      	; 0x351a <I2C_MSTR_start+0x58>
    3514:	99 0f       	add	r25, r25
    3516:	90 93 bb 00 	sts	0x00BB, r25
    351a:	84 e8       	ldi	r24, 0x84	; 132
    351c:	80 93 bc 00 	sts	0x00BC, r24
    3520:	80 91 bc 00 	lds	r24, 0x00BC
    3524:	87 ff       	sbrs	r24, 7
    3526:	fc cf       	rjmp	.-8      	; 0x3520 <I2C_MSTR_start+0x5e>
    3528:	61 30       	cpi	r22, 0x01	; 1
    352a:	31 f4       	brne	.+12     	; 0x3538 <I2C_MSTR_start+0x76>
    352c:	80 91 b9 00 	lds	r24, 0x00B9
    3530:	88 7f       	andi	r24, 0xF8	; 248
    3532:	80 34       	cpi	r24, 0x40	; 64
    3534:	41 f4       	brne	.+16     	; 0x3546 <I2C_MSTR_start+0x84>
    3536:	09 c0       	rjmp	.+18     	; 0x354a <I2C_MSTR_start+0x88>
    3538:	66 23       	and	r22, r22
    353a:	39 f4       	brne	.+14     	; 0x354a <I2C_MSTR_start+0x88>
    353c:	80 91 b9 00 	lds	r24, 0x00B9
    3540:	88 7f       	andi	r24, 0xF8	; 248
    3542:	88 31       	cpi	r24, 0x18	; 24
    3544:	11 f0       	breq	.+4      	; 0x354a <I2C_MSTR_start+0x88>
    3546:	82 e0       	ldi	r24, 0x02	; 2
    3548:	08 95       	ret
    354a:	80 e0       	ldi	r24, 0x00	; 0
    354c:	08 95       	ret

0000354e <I2C_MSTR_stop>:
    354e:	80 91 17 05 	lds	r24, 0x0517
    3552:	81 30       	cpi	r24, 0x01	; 1
    3554:	11 f0       	breq	.+4      	; 0x355a <I2C_MSTR_stop+0xc>
    3556:	8a e0       	ldi	r24, 0x0A	; 10
    3558:	08 95       	ret
    355a:	80 91 19 05 	lds	r24, 0x0519
    355e:	81 30       	cpi	r24, 0x01	; 1
    3560:	29 f4       	brne	.+10     	; 0x356c <I2C_MSTR_stop+0x1e>
    3562:	85 e9       	ldi	r24, 0x95	; 149
    3564:	80 93 bc 00 	sts	0x00BC, r24
    3568:	80 e0       	ldi	r24, 0x00	; 0
    356a:	08 95       	ret
    356c:	84 e9       	ldi	r24, 0x94	; 148
    356e:	80 93 bc 00 	sts	0x00BC, r24
    3572:	80 e0       	ldi	r24, 0x00	; 0
    3574:	08 95       	ret

00003576 <I2C_open>:
    3576:	82 e1       	ldi	r24, 0x12	; 18
    3578:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    357c:	88 23       	and	r24, r24
    357e:	b1 f4       	brne	.+44     	; 0x35ac <I2C_open+0x36>
    3580:	10 92 16 05 	sts	0x0516, r1
    3584:	10 92 17 05 	sts	0x0517, r1
    3588:	10 92 18 05 	sts	0x0518, r1
    358c:	10 92 19 05 	sts	0x0519, r1
    3590:	10 92 1a 05 	sts	0x051A, r1
    3594:	0e 94 1d 21 	call	0x423a	; 0x423a <__I2C_init>
    3598:	87 e1       	ldi	r24, 0x17	; 23
    359a:	60 e0       	ldi	r22, 0x00	; 0
    359c:	0e 94 d9 1a 	call	0x35b2	; 0x35b2 <I2C_set_BRG>
    35a0:	0e 94 13 21 	call	0x4226	; 0x4226 <I2C_enable>
    35a4:	82 e1       	ldi	r24, 0x12	; 18
    35a6:	61 e0       	ldi	r22, 0x01	; 1
    35a8:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    35ac:	82 e1       	ldi	r24, 0x12	; 18
    35ae:	90 e0       	ldi	r25, 0x00	; 0
    35b0:	08 95       	ret

000035b2 <I2C_set_BRG>:
    35b2:	63 70       	andi	r22, 0x03	; 3
    35b4:	60 93 b9 00 	sts	0x00B9, r22
    35b8:	80 93 b8 00 	sts	0x00B8, r24
    35bc:	81 e0       	ldi	r24, 0x01	; 1
    35be:	80 93 16 05 	sts	0x0516, r24
    35c2:	08 95       	ret

000035c4 <__ADC_init>:
    35c4:	8f e1       	ldi	r24, 0x1F	; 31
    35c6:	80 93 7c 00 	sts	0x007C, r24
    35ca:	ea e7       	ldi	r30, 0x7A	; 122
    35cc:	f0 e0       	ldi	r31, 0x00	; 0
    35ce:	87 e0       	ldi	r24, 0x07	; 7
    35d0:	80 83       	st	Z, r24
    35d2:	80 81       	ld	r24, Z
    35d4:	80 68       	ori	r24, 0x80	; 128
    35d6:	80 83       	st	Z, r24
    35d8:	08 95       	ret

000035da <CBOT_init>:
    35da:	0e 94 5e 20 	call	0x40bc	; 0x40bc <SYS_init>
    35de:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <ATMEGA_open>
    35e2:	0e 94 4f 1d 	call	0x3a9e	; 0x3a9e <ISR_open>
    35e6:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <TMRSRVC_open>
    35ea:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <SPI_open>
    35ee:	0e 94 61 19 	call	0x32c2	; 0x32c2 <ATTINY_open>
    35f2:	78 94       	sei
    35f4:	08 95       	ret

000035f6 <CBOT_ISR_init>:
    35f6:	00 00       	nop
    35f8:	08 95       	ret

000035fa <__vector_16>:
    35fa:	1f 92       	push	r1
    35fc:	0f 92       	push	r0
    35fe:	0f b6       	in	r0, 0x3f	; 63
    3600:	0f 92       	push	r0
    3602:	11 24       	eor	r1, r1
    3604:	2f 93       	push	r18
    3606:	3f 93       	push	r19
    3608:	4f 93       	push	r20
    360a:	5f 93       	push	r21
    360c:	6f 93       	push	r22
    360e:	7f 93       	push	r23
    3610:	8f 93       	push	r24
    3612:	9f 93       	push	r25
    3614:	af 93       	push	r26
    3616:	bf 93       	push	r27
    3618:	ef 93       	push	r30
    361a:	ff 93       	push	r31
    361c:	e0 91 6b 02 	lds	r30, 0x026B
    3620:	f0 91 6c 02 	lds	r31, 0x026C
    3624:	30 97       	sbiw	r30, 0x00	; 0
    3626:	09 f0       	breq	.+2      	; 0x362a <__vector_16+0x30>
    3628:	09 95       	icall
    362a:	ff 91       	pop	r31
    362c:	ef 91       	pop	r30
    362e:	bf 91       	pop	r27
    3630:	af 91       	pop	r26
    3632:	9f 91       	pop	r25
    3634:	8f 91       	pop	r24
    3636:	7f 91       	pop	r23
    3638:	6f 91       	pop	r22
    363a:	5f 91       	pop	r21
    363c:	4f 91       	pop	r20
    363e:	3f 91       	pop	r19
    3640:	2f 91       	pop	r18
    3642:	0f 90       	pop	r0
    3644:	0f be       	out	0x3f, r0	; 63
    3646:	0f 90       	pop	r0
    3648:	1f 90       	pop	r1
    364a:	18 95       	reti

0000364c <__vector_17>:
    364c:	1f 92       	push	r1
    364e:	0f 92       	push	r0
    3650:	0f b6       	in	r0, 0x3f	; 63
    3652:	0f 92       	push	r0
    3654:	11 24       	eor	r1, r1
    3656:	2f 93       	push	r18
    3658:	3f 93       	push	r19
    365a:	4f 93       	push	r20
    365c:	5f 93       	push	r21
    365e:	6f 93       	push	r22
    3660:	7f 93       	push	r23
    3662:	8f 93       	push	r24
    3664:	9f 93       	push	r25
    3666:	af 93       	push	r26
    3668:	bf 93       	push	r27
    366a:	ef 93       	push	r30
    366c:	ff 93       	push	r31
    366e:	e0 91 6d 02 	lds	r30, 0x026D
    3672:	f0 91 6e 02 	lds	r31, 0x026E
    3676:	30 97       	sbiw	r30, 0x00	; 0
    3678:	09 f0       	breq	.+2      	; 0x367c <__vector_17+0x30>
    367a:	09 95       	icall
    367c:	ff 91       	pop	r31
    367e:	ef 91       	pop	r30
    3680:	bf 91       	pop	r27
    3682:	af 91       	pop	r26
    3684:	9f 91       	pop	r25
    3686:	8f 91       	pop	r24
    3688:	7f 91       	pop	r23
    368a:	6f 91       	pop	r22
    368c:	5f 91       	pop	r21
    368e:	4f 91       	pop	r20
    3690:	3f 91       	pop	r19
    3692:	2f 91       	pop	r18
    3694:	0f 90       	pop	r0
    3696:	0f be       	out	0x3f, r0	; 63
    3698:	0f 90       	pop	r0
    369a:	1f 90       	pop	r1
    369c:	18 95       	reti

0000369e <__vector_18>:
    369e:	1f 92       	push	r1
    36a0:	0f 92       	push	r0
    36a2:	0f b6       	in	r0, 0x3f	; 63
    36a4:	0f 92       	push	r0
    36a6:	11 24       	eor	r1, r1
    36a8:	2f 93       	push	r18
    36aa:	3f 93       	push	r19
    36ac:	4f 93       	push	r20
    36ae:	5f 93       	push	r21
    36b0:	6f 93       	push	r22
    36b2:	7f 93       	push	r23
    36b4:	8f 93       	push	r24
    36b6:	9f 93       	push	r25
    36b8:	af 93       	push	r26
    36ba:	bf 93       	push	r27
    36bc:	ef 93       	push	r30
    36be:	ff 93       	push	r31
    36c0:	e0 91 6f 02 	lds	r30, 0x026F
    36c4:	f0 91 70 02 	lds	r31, 0x0270
    36c8:	30 97       	sbiw	r30, 0x00	; 0
    36ca:	09 f0       	breq	.+2      	; 0x36ce <__vector_18+0x30>
    36cc:	09 95       	icall
    36ce:	ff 91       	pop	r31
    36d0:	ef 91       	pop	r30
    36d2:	bf 91       	pop	r27
    36d4:	af 91       	pop	r26
    36d6:	9f 91       	pop	r25
    36d8:	8f 91       	pop	r24
    36da:	7f 91       	pop	r23
    36dc:	6f 91       	pop	r22
    36de:	5f 91       	pop	r21
    36e0:	4f 91       	pop	r20
    36e2:	3f 91       	pop	r19
    36e4:	2f 91       	pop	r18
    36e6:	0f 90       	pop	r0
    36e8:	0f be       	out	0x3f, r0	; 63
    36ea:	0f 90       	pop	r0
    36ec:	1f 90       	pop	r1
    36ee:	18 95       	reti

000036f0 <__vector_9>:
    36f0:	1f 92       	push	r1
    36f2:	0f 92       	push	r0
    36f4:	0f b6       	in	r0, 0x3f	; 63
    36f6:	0f 92       	push	r0
    36f8:	11 24       	eor	r1, r1
    36fa:	2f 93       	push	r18
    36fc:	3f 93       	push	r19
    36fe:	4f 93       	push	r20
    3700:	5f 93       	push	r21
    3702:	6f 93       	push	r22
    3704:	7f 93       	push	r23
    3706:	8f 93       	push	r24
    3708:	9f 93       	push	r25
    370a:	af 93       	push	r26
    370c:	bf 93       	push	r27
    370e:	ef 93       	push	r30
    3710:	ff 93       	push	r31
    3712:	e0 91 5d 02 	lds	r30, 0x025D
    3716:	f0 91 5e 02 	lds	r31, 0x025E
    371a:	30 97       	sbiw	r30, 0x00	; 0
    371c:	09 f0       	breq	.+2      	; 0x3720 <__vector_9+0x30>
    371e:	09 95       	icall
    3720:	ff 91       	pop	r31
    3722:	ef 91       	pop	r30
    3724:	bf 91       	pop	r27
    3726:	af 91       	pop	r26
    3728:	9f 91       	pop	r25
    372a:	8f 91       	pop	r24
    372c:	7f 91       	pop	r23
    372e:	6f 91       	pop	r22
    3730:	5f 91       	pop	r21
    3732:	4f 91       	pop	r20
    3734:	3f 91       	pop	r19
    3736:	2f 91       	pop	r18
    3738:	0f 90       	pop	r0
    373a:	0f be       	out	0x3f, r0	; 63
    373c:	0f 90       	pop	r0
    373e:	1f 90       	pop	r1
    3740:	18 95       	reti

00003742 <__vector_10>:
    3742:	1f 92       	push	r1
    3744:	0f 92       	push	r0
    3746:	0f b6       	in	r0, 0x3f	; 63
    3748:	0f 92       	push	r0
    374a:	11 24       	eor	r1, r1
    374c:	2f 93       	push	r18
    374e:	3f 93       	push	r19
    3750:	4f 93       	push	r20
    3752:	5f 93       	push	r21
    3754:	6f 93       	push	r22
    3756:	7f 93       	push	r23
    3758:	8f 93       	push	r24
    375a:	9f 93       	push	r25
    375c:	af 93       	push	r26
    375e:	bf 93       	push	r27
    3760:	ef 93       	push	r30
    3762:	ff 93       	push	r31
    3764:	e0 91 5f 02 	lds	r30, 0x025F
    3768:	f0 91 60 02 	lds	r31, 0x0260
    376c:	30 97       	sbiw	r30, 0x00	; 0
    376e:	09 f0       	breq	.+2      	; 0x3772 <__vector_10+0x30>
    3770:	09 95       	icall
    3772:	ff 91       	pop	r31
    3774:	ef 91       	pop	r30
    3776:	bf 91       	pop	r27
    3778:	af 91       	pop	r26
    377a:	9f 91       	pop	r25
    377c:	8f 91       	pop	r24
    377e:	7f 91       	pop	r23
    3780:	6f 91       	pop	r22
    3782:	5f 91       	pop	r21
    3784:	4f 91       	pop	r20
    3786:	3f 91       	pop	r19
    3788:	2f 91       	pop	r18
    378a:	0f 90       	pop	r0
    378c:	0f be       	out	0x3f, r0	; 63
    378e:	0f 90       	pop	r0
    3790:	1f 90       	pop	r1
    3792:	18 95       	reti

00003794 <__vector_11>:
    3794:	1f 92       	push	r1
    3796:	0f 92       	push	r0
    3798:	0f b6       	in	r0, 0x3f	; 63
    379a:	0f 92       	push	r0
    379c:	11 24       	eor	r1, r1
    379e:	2f 93       	push	r18
    37a0:	3f 93       	push	r19
    37a2:	4f 93       	push	r20
    37a4:	5f 93       	push	r21
    37a6:	6f 93       	push	r22
    37a8:	7f 93       	push	r23
    37aa:	8f 93       	push	r24
    37ac:	9f 93       	push	r25
    37ae:	af 93       	push	r26
    37b0:	bf 93       	push	r27
    37b2:	ef 93       	push	r30
    37b4:	ff 93       	push	r31
    37b6:	e0 91 61 02 	lds	r30, 0x0261
    37ba:	f0 91 62 02 	lds	r31, 0x0262
    37be:	30 97       	sbiw	r30, 0x00	; 0
    37c0:	09 f0       	breq	.+2      	; 0x37c4 <__vector_11+0x30>
    37c2:	09 95       	icall
    37c4:	ff 91       	pop	r31
    37c6:	ef 91       	pop	r30
    37c8:	bf 91       	pop	r27
    37ca:	af 91       	pop	r26
    37cc:	9f 91       	pop	r25
    37ce:	8f 91       	pop	r24
    37d0:	7f 91       	pop	r23
    37d2:	6f 91       	pop	r22
    37d4:	5f 91       	pop	r21
    37d6:	4f 91       	pop	r20
    37d8:	3f 91       	pop	r19
    37da:	2f 91       	pop	r18
    37dc:	0f 90       	pop	r0
    37de:	0f be       	out	0x3f, r0	; 63
    37e0:	0f 90       	pop	r0
    37e2:	1f 90       	pop	r1
    37e4:	18 95       	reti

000037e6 <__vector_13>:
    37e6:	1f 92       	push	r1
    37e8:	0f 92       	push	r0
    37ea:	0f b6       	in	r0, 0x3f	; 63
    37ec:	0f 92       	push	r0
    37ee:	11 24       	eor	r1, r1
    37f0:	2f 93       	push	r18
    37f2:	3f 93       	push	r19
    37f4:	4f 93       	push	r20
    37f6:	5f 93       	push	r21
    37f8:	6f 93       	push	r22
    37fa:	7f 93       	push	r23
    37fc:	8f 93       	push	r24
    37fe:	9f 93       	push	r25
    3800:	af 93       	push	r26
    3802:	bf 93       	push	r27
    3804:	ef 93       	push	r30
    3806:	ff 93       	push	r31
    3808:	e0 91 65 02 	lds	r30, 0x0265
    380c:	f0 91 66 02 	lds	r31, 0x0266
    3810:	30 97       	sbiw	r30, 0x00	; 0
    3812:	09 f0       	breq	.+2      	; 0x3816 <__vector_13+0x30>
    3814:	09 95       	icall
    3816:	ff 91       	pop	r31
    3818:	ef 91       	pop	r30
    381a:	bf 91       	pop	r27
    381c:	af 91       	pop	r26
    381e:	9f 91       	pop	r25
    3820:	8f 91       	pop	r24
    3822:	7f 91       	pop	r23
    3824:	6f 91       	pop	r22
    3826:	5f 91       	pop	r21
    3828:	4f 91       	pop	r20
    382a:	3f 91       	pop	r19
    382c:	2f 91       	pop	r18
    382e:	0f 90       	pop	r0
    3830:	0f be       	out	0x3f, r0	; 63
    3832:	0f 90       	pop	r0
    3834:	1f 90       	pop	r1
    3836:	18 95       	reti

00003838 <__vector_14>:
    3838:	1f 92       	push	r1
    383a:	0f 92       	push	r0
    383c:	0f b6       	in	r0, 0x3f	; 63
    383e:	0f 92       	push	r0
    3840:	11 24       	eor	r1, r1
    3842:	2f 93       	push	r18
    3844:	3f 93       	push	r19
    3846:	4f 93       	push	r20
    3848:	5f 93       	push	r21
    384a:	6f 93       	push	r22
    384c:	7f 93       	push	r23
    384e:	8f 93       	push	r24
    3850:	9f 93       	push	r25
    3852:	af 93       	push	r26
    3854:	bf 93       	push	r27
    3856:	ef 93       	push	r30
    3858:	ff 93       	push	r31
    385a:	e0 91 67 02 	lds	r30, 0x0267
    385e:	f0 91 68 02 	lds	r31, 0x0268
    3862:	30 97       	sbiw	r30, 0x00	; 0
    3864:	09 f0       	breq	.+2      	; 0x3868 <__vector_14+0x30>
    3866:	09 95       	icall
    3868:	ff 91       	pop	r31
    386a:	ef 91       	pop	r30
    386c:	bf 91       	pop	r27
    386e:	af 91       	pop	r26
    3870:	9f 91       	pop	r25
    3872:	8f 91       	pop	r24
    3874:	7f 91       	pop	r23
    3876:	6f 91       	pop	r22
    3878:	5f 91       	pop	r21
    387a:	4f 91       	pop	r20
    387c:	3f 91       	pop	r19
    387e:	2f 91       	pop	r18
    3880:	0f 90       	pop	r0
    3882:	0f be       	out	0x3f, r0	; 63
    3884:	0f 90       	pop	r0
    3886:	1f 90       	pop	r1
    3888:	18 95       	reti

0000388a <__vector_12>:
    388a:	1f 92       	push	r1
    388c:	0f 92       	push	r0
    388e:	0f b6       	in	r0, 0x3f	; 63
    3890:	0f 92       	push	r0
    3892:	11 24       	eor	r1, r1
    3894:	2f 93       	push	r18
    3896:	3f 93       	push	r19
    3898:	4f 93       	push	r20
    389a:	5f 93       	push	r21
    389c:	6f 93       	push	r22
    389e:	7f 93       	push	r23
    38a0:	8f 93       	push	r24
    38a2:	9f 93       	push	r25
    38a4:	af 93       	push	r26
    38a6:	bf 93       	push	r27
    38a8:	ef 93       	push	r30
    38aa:	ff 93       	push	r31
    38ac:	e0 91 63 02 	lds	r30, 0x0263
    38b0:	f0 91 64 02 	lds	r31, 0x0264
    38b4:	30 97       	sbiw	r30, 0x00	; 0
    38b6:	09 f0       	breq	.+2      	; 0x38ba <__vector_12+0x30>
    38b8:	09 95       	icall
    38ba:	ff 91       	pop	r31
    38bc:	ef 91       	pop	r30
    38be:	bf 91       	pop	r27
    38c0:	af 91       	pop	r26
    38c2:	9f 91       	pop	r25
    38c4:	8f 91       	pop	r24
    38c6:	7f 91       	pop	r23
    38c8:	6f 91       	pop	r22
    38ca:	5f 91       	pop	r21
    38cc:	4f 91       	pop	r20
    38ce:	3f 91       	pop	r19
    38d0:	2f 91       	pop	r18
    38d2:	0f 90       	pop	r0
    38d4:	0f be       	out	0x3f, r0	; 63
    38d6:	0f 90       	pop	r0
    38d8:	1f 90       	pop	r1
    38da:	18 95       	reti

000038dc <__vector_15>:
    38dc:	1f 92       	push	r1
    38de:	0f 92       	push	r0
    38e0:	0f b6       	in	r0, 0x3f	; 63
    38e2:	0f 92       	push	r0
    38e4:	11 24       	eor	r1, r1
    38e6:	2f 93       	push	r18
    38e8:	3f 93       	push	r19
    38ea:	4f 93       	push	r20
    38ec:	5f 93       	push	r21
    38ee:	6f 93       	push	r22
    38f0:	7f 93       	push	r23
    38f2:	8f 93       	push	r24
    38f4:	9f 93       	push	r25
    38f6:	af 93       	push	r26
    38f8:	bf 93       	push	r27
    38fa:	ef 93       	push	r30
    38fc:	ff 93       	push	r31
    38fe:	e0 91 69 02 	lds	r30, 0x0269
    3902:	f0 91 6a 02 	lds	r31, 0x026A
    3906:	30 97       	sbiw	r30, 0x00	; 0
    3908:	09 f0       	breq	.+2      	; 0x390c <__vector_15+0x30>
    390a:	09 95       	icall
    390c:	ff 91       	pop	r31
    390e:	ef 91       	pop	r30
    3910:	bf 91       	pop	r27
    3912:	af 91       	pop	r26
    3914:	9f 91       	pop	r25
    3916:	8f 91       	pop	r24
    3918:	7f 91       	pop	r23
    391a:	6f 91       	pop	r22
    391c:	5f 91       	pop	r21
    391e:	4f 91       	pop	r20
    3920:	3f 91       	pop	r19
    3922:	2f 91       	pop	r18
    3924:	0f 90       	pop	r0
    3926:	0f be       	out	0x3f, r0	; 63
    3928:	0f 90       	pop	r0
    392a:	1f 90       	pop	r1
    392c:	18 95       	reti

0000392e <__vector_4>:
    392e:	1f 92       	push	r1
    3930:	0f 92       	push	r0
    3932:	0f b6       	in	r0, 0x3f	; 63
    3934:	0f 92       	push	r0
    3936:	11 24       	eor	r1, r1
    3938:	2f 93       	push	r18
    393a:	3f 93       	push	r19
    393c:	4f 93       	push	r20
    393e:	5f 93       	push	r21
    3940:	6f 93       	push	r22
    3942:	7f 93       	push	r23
    3944:	8f 93       	push	r24
    3946:	9f 93       	push	r25
    3948:	af 93       	push	r26
    394a:	bf 93       	push	r27
    394c:	ef 93       	push	r30
    394e:	ff 93       	push	r31
    3950:	e0 91 53 02 	lds	r30, 0x0253
    3954:	f0 91 54 02 	lds	r31, 0x0254
    3958:	30 97       	sbiw	r30, 0x00	; 0
    395a:	09 f0       	breq	.+2      	; 0x395e <__vector_4+0x30>
    395c:	09 95       	icall
    395e:	ff 91       	pop	r31
    3960:	ef 91       	pop	r30
    3962:	bf 91       	pop	r27
    3964:	af 91       	pop	r26
    3966:	9f 91       	pop	r25
    3968:	8f 91       	pop	r24
    396a:	7f 91       	pop	r23
    396c:	6f 91       	pop	r22
    396e:	5f 91       	pop	r21
    3970:	4f 91       	pop	r20
    3972:	3f 91       	pop	r19
    3974:	2f 91       	pop	r18
    3976:	0f 90       	pop	r0
    3978:	0f be       	out	0x3f, r0	; 63
    397a:	0f 90       	pop	r0
    397c:	1f 90       	pop	r1
    397e:	18 95       	reti

00003980 <__vector_5>:
    3980:	1f 92       	push	r1
    3982:	0f 92       	push	r0
    3984:	0f b6       	in	r0, 0x3f	; 63
    3986:	0f 92       	push	r0
    3988:	11 24       	eor	r1, r1
    398a:	2f 93       	push	r18
    398c:	3f 93       	push	r19
    398e:	4f 93       	push	r20
    3990:	5f 93       	push	r21
    3992:	6f 93       	push	r22
    3994:	7f 93       	push	r23
    3996:	8f 93       	push	r24
    3998:	9f 93       	push	r25
    399a:	af 93       	push	r26
    399c:	bf 93       	push	r27
    399e:	ef 93       	push	r30
    39a0:	ff 93       	push	r31
    39a2:	e0 91 55 02 	lds	r30, 0x0255
    39a6:	f0 91 56 02 	lds	r31, 0x0256
    39aa:	30 97       	sbiw	r30, 0x00	; 0
    39ac:	09 f0       	breq	.+2      	; 0x39b0 <__vector_5+0x30>
    39ae:	09 95       	icall
    39b0:	ff 91       	pop	r31
    39b2:	ef 91       	pop	r30
    39b4:	bf 91       	pop	r27
    39b6:	af 91       	pop	r26
    39b8:	9f 91       	pop	r25
    39ba:	8f 91       	pop	r24
    39bc:	7f 91       	pop	r23
    39be:	6f 91       	pop	r22
    39c0:	5f 91       	pop	r21
    39c2:	4f 91       	pop	r20
    39c4:	3f 91       	pop	r19
    39c6:	2f 91       	pop	r18
    39c8:	0f 90       	pop	r0
    39ca:	0f be       	out	0x3f, r0	; 63
    39cc:	0f 90       	pop	r0
    39ce:	1f 90       	pop	r1
    39d0:	18 95       	reti

000039d2 <__vector_6>:
    39d2:	1f 92       	push	r1
    39d4:	0f 92       	push	r0
    39d6:	0f b6       	in	r0, 0x3f	; 63
    39d8:	0f 92       	push	r0
    39da:	11 24       	eor	r1, r1
    39dc:	2f 93       	push	r18
    39de:	3f 93       	push	r19
    39e0:	4f 93       	push	r20
    39e2:	5f 93       	push	r21
    39e4:	6f 93       	push	r22
    39e6:	7f 93       	push	r23
    39e8:	8f 93       	push	r24
    39ea:	9f 93       	push	r25
    39ec:	af 93       	push	r26
    39ee:	bf 93       	push	r27
    39f0:	ef 93       	push	r30
    39f2:	ff 93       	push	r31
    39f4:	e0 91 57 02 	lds	r30, 0x0257
    39f8:	f0 91 58 02 	lds	r31, 0x0258
    39fc:	30 97       	sbiw	r30, 0x00	; 0
    39fe:	09 f0       	breq	.+2      	; 0x3a02 <__vector_6+0x30>
    3a00:	09 95       	icall
    3a02:	ff 91       	pop	r31
    3a04:	ef 91       	pop	r30
    3a06:	bf 91       	pop	r27
    3a08:	af 91       	pop	r26
    3a0a:	9f 91       	pop	r25
    3a0c:	8f 91       	pop	r24
    3a0e:	7f 91       	pop	r23
    3a10:	6f 91       	pop	r22
    3a12:	5f 91       	pop	r21
    3a14:	4f 91       	pop	r20
    3a16:	3f 91       	pop	r19
    3a18:	2f 91       	pop	r18
    3a1a:	0f 90       	pop	r0
    3a1c:	0f be       	out	0x3f, r0	; 63
    3a1e:	0f 90       	pop	r0
    3a20:	1f 90       	pop	r1
    3a22:	18 95       	reti

00003a24 <__vector_7>:
    3a24:	1f 92       	push	r1
    3a26:	0f 92       	push	r0
    3a28:	0f b6       	in	r0, 0x3f	; 63
    3a2a:	0f 92       	push	r0
    3a2c:	11 24       	eor	r1, r1
    3a2e:	2f 93       	push	r18
    3a30:	3f 93       	push	r19
    3a32:	4f 93       	push	r20
    3a34:	5f 93       	push	r21
    3a36:	6f 93       	push	r22
    3a38:	7f 93       	push	r23
    3a3a:	8f 93       	push	r24
    3a3c:	9f 93       	push	r25
    3a3e:	af 93       	push	r26
    3a40:	bf 93       	push	r27
    3a42:	ef 93       	push	r30
    3a44:	ff 93       	push	r31
    3a46:	e0 91 59 02 	lds	r30, 0x0259
    3a4a:	f0 91 5a 02 	lds	r31, 0x025A
    3a4e:	30 97       	sbiw	r30, 0x00	; 0
    3a50:	09 f0       	breq	.+2      	; 0x3a54 <__vector_7+0x30>
    3a52:	09 95       	icall
    3a54:	ff 91       	pop	r31
    3a56:	ef 91       	pop	r30
    3a58:	bf 91       	pop	r27
    3a5a:	af 91       	pop	r26
    3a5c:	9f 91       	pop	r25
    3a5e:	8f 91       	pop	r24
    3a60:	7f 91       	pop	r23
    3a62:	6f 91       	pop	r22
    3a64:	5f 91       	pop	r21
    3a66:	4f 91       	pop	r20
    3a68:	3f 91       	pop	r19
    3a6a:	2f 91       	pop	r18
    3a6c:	0f 90       	pop	r0
    3a6e:	0f be       	out	0x3f, r0	; 63
    3a70:	0f 90       	pop	r0
    3a72:	1f 90       	pop	r1
    3a74:	18 95       	reti

00003a76 <ISR_attach>:
    3a76:	e8 2f       	mov	r30, r24
    3a78:	80 32       	cpi	r24, 0x20	; 32
    3a7a:	68 f4       	brcc	.+26     	; 0x3a96 <ISR_attach+0x20>
    3a7c:	80 51       	subi	r24, 0x10	; 16
    3a7e:	83 30       	cpi	r24, 0x03	; 3
    3a80:	50 f0       	brcs	.+20     	; 0x3a96 <ISR_attach+0x20>
    3a82:	f0 e0       	ldi	r31, 0x00	; 0
    3a84:	ee 0f       	add	r30, r30
    3a86:	ff 1f       	adc	r31, r31
    3a88:	e5 5b       	subi	r30, 0xB5	; 181
    3a8a:	fd 4f       	sbci	r31, 0xFD	; 253
    3a8c:	20 81       	ld	r18, Z
    3a8e:	31 81       	ldd	r19, Z+1	; 0x01
    3a90:	71 83       	std	Z+1, r23	; 0x01
    3a92:	60 83       	st	Z, r22
    3a94:	02 c0       	rjmp	.+4      	; 0x3a9a <ISR_attach+0x24>
    3a96:	20 e0       	ldi	r18, 0x00	; 0
    3a98:	30 e0       	ldi	r19, 0x00	; 0
    3a9a:	c9 01       	movw	r24, r18
    3a9c:	08 95       	ret

00003a9e <ISR_open>:
    3a9e:	80 e1       	ldi	r24, 0x10	; 16
    3aa0:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    3aa4:	88 23       	and	r24, r24
    3aa6:	61 f4       	brne	.+24     	; 0x3ac0 <ISR_open+0x22>
    3aa8:	eb e4       	ldi	r30, 0x4B	; 75
    3aaa:	f2 e0       	ldi	r31, 0x02	; 2
    3aac:	11 92       	st	Z+, r1
    3aae:	11 92       	st	Z+, r1
    3ab0:	82 e0       	ldi	r24, 0x02	; 2
    3ab2:	eb 38       	cpi	r30, 0x8B	; 139
    3ab4:	f8 07       	cpc	r31, r24
    3ab6:	d1 f7       	brne	.-12     	; 0x3aac <ISR_open+0xe>
    3ab8:	80 e1       	ldi	r24, 0x10	; 16
    3aba:	61 e0       	ldi	r22, 0x01	; 1
    3abc:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    3ac0:	80 e1       	ldi	r24, 0x10	; 16
    3ac2:	91 e0       	ldi	r25, 0x01	; 1
    3ac4:	08 95       	ret

00003ac6 <__LCD_init>:
    3ac6:	23 9a       	sbi	0x04, 3	; 4
    3ac8:	08 95       	ret

00003aca <__LCD_putchar>:
    3aca:	ff 92       	push	r15
    3acc:	0f 93       	push	r16
    3ace:	1f 93       	push	r17
    3ad0:	cf 93       	push	r28
    3ad2:	df 93       	push	r29
    3ad4:	f8 2e       	mov	r15, r24
    3ad6:	8a e0       	ldi	r24, 0x0A	; 10
    3ad8:	f8 16       	cp	r15, r24
    3ada:	b1 f0       	breq	.+44     	; 0x3b08 <__LCD_putchar+0x3e>
    3adc:	8f 15       	cp	r24, r15
    3ade:	48 f0       	brcs	.+18     	; 0x3af2 <__LCD_putchar+0x28>
    3ae0:	e8 e0       	ldi	r30, 0x08	; 8
    3ae2:	fe 16       	cp	r15, r30
    3ae4:	b9 f1       	breq	.+110    	; 0x3b54 <__LCD_putchar+0x8a>
    3ae6:	ef 15       	cp	r30, r15
    3ae8:	38 f1       	brcs	.+78     	; 0x3b38 <__LCD_putchar+0x6e>
    3aea:	f7 e0       	ldi	r31, 0x07	; 7
    3aec:	ff 16       	cp	r15, r31
    3aee:	51 f4       	brne	.+20     	; 0x3b04 <__LCD_putchar+0x3a>
    3af0:	3b c0       	rjmp	.+118    	; 0x3b68 <__LCD_putchar+0x9e>
    3af2:	8d e0       	ldi	r24, 0x0D	; 13
    3af4:	f8 16       	cp	r15, r24
    3af6:	59 f0       	breq	.+22     	; 0x3b0e <__LCD_putchar+0x44>
    3af8:	eb e1       	ldi	r30, 0x1B	; 27
    3afa:	fe 16       	cp	r15, r30
    3afc:	89 f0       	breq	.+34     	; 0x3b20 <__LCD_putchar+0x56>
    3afe:	fc e0       	ldi	r31, 0x0C	; 12
    3b00:	ff 16       	cp	r15, r31
    3b02:	41 f0       	breq	.+16     	; 0x3b14 <__LCD_putchar+0x4a>
    3b04:	01 e0       	ldi	r16, 0x01	; 1
    3b06:	41 c0       	rjmp	.+130    	; 0x3b8a <__LCD_putchar+0xc0>
    3b08:	10 92 ef 04 	sts	0x04EF, r1
    3b0c:	03 c0       	rjmp	.+6      	; 0x3b14 <__LCD_putchar+0x4a>
    3b0e:	10 92 ef 04 	sts	0x04EF, r1
    3b12:	3a c0       	rjmp	.+116    	; 0x3b88 <__LCD_putchar+0xbe>
    3b14:	80 91 f0 04 	lds	r24, 0x04F0
    3b18:	81 50       	subi	r24, 0x01	; 1
    3b1a:	80 93 f0 04 	sts	0x04F0, r24
    3b1e:	34 c0       	rjmp	.+104    	; 0x3b88 <__LCD_putchar+0xbe>
    3b20:	0e 94 15 13 	call	0x262a	; 0x262a <LCD_clear>
    3b24:	14 c0       	rjmp	.+40     	; 0x3b4e <__LCD_putchar+0x84>
    3b26:	80 e0       	ldi	r24, 0x00	; 0
    3b28:	61 e0       	ldi	r22, 0x01	; 1
    3b2a:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    3b2e:	80 91 ef 04 	lds	r24, 0x04EF
    3b32:	8f 5f       	subi	r24, 0xFF	; 255
    3b34:	80 93 ef 04 	sts	0x04EF, r24
    3b38:	80 91 ef 04 	lds	r24, 0x04EF
    3b3c:	87 ff       	sbrs	r24, 7
    3b3e:	f3 cf       	rjmp	.-26     	; 0x3b26 <__LCD_putchar+0x5c>
    3b40:	10 92 ef 04 	sts	0x04EF, r1
    3b44:	80 91 f0 04 	lds	r24, 0x04F0
    3b48:	81 50       	subi	r24, 0x01	; 1
    3b4a:	80 93 f0 04 	sts	0x04F0, r24
    3b4e:	00 e0       	ldi	r16, 0x00	; 0
    3b50:	11 e0       	ldi	r17, 0x01	; 1
    3b52:	1c c0       	rjmp	.+56     	; 0x3b8c <__LCD_putchar+0xc2>
    3b54:	80 91 ef 04 	lds	r24, 0x04EF
    3b58:	88 23       	and	r24, r24
    3b5a:	b1 f0       	breq	.+44     	; 0x3b88 <__LCD_putchar+0xbe>
    3b5c:	80 91 ef 04 	lds	r24, 0x04EF
    3b60:	86 50       	subi	r24, 0x06	; 6
    3b62:	80 93 ef 04 	sts	0x04EF, r24
    3b66:	10 c0       	rjmp	.+32     	; 0x3b88 <__LCD_putchar+0xbe>
    3b68:	81 e0       	ldi	r24, 0x01	; 1
    3b6a:	0e 94 21 15 	call	0x2a42	; 0x2a42 <SPKR_open>
    3b6e:	64 ef       	ldi	r22, 0xF4	; 244
    3b70:	71 e0       	ldi	r23, 0x01	; 1
    3b72:	80 e0       	ldi	r24, 0x00	; 0
    3b74:	90 e0       	ldi	r25, 0x00	; 0
    3b76:	4d e7       	ldi	r20, 0x7D	; 125
    3b78:	50 e0       	ldi	r21, 0x00	; 0
    3b7a:	24 e6       	ldi	r18, 0x64	; 100
    3b7c:	30 e0       	ldi	r19, 0x00	; 0
    3b7e:	0e 94 7f 1f 	call	0x3efe	; 0x3efe <SPKR_play_beep>
    3b82:	81 e0       	ldi	r24, 0x01	; 1
    3b84:	0e 94 4b 1f 	call	0x3e96	; 0x3e96 <SPKR_close>
    3b88:	00 e0       	ldi	r16, 0x00	; 0
    3b8a:	10 e0       	ldi	r17, 0x00	; 0
    3b8c:	80 91 f0 04 	lds	r24, 0x04F0
    3b90:	60 91 ef 04 	lds	r22, 0x04EF
    3b94:	0e 94 db 13 	call	0x27b6	; 0x27b6 <LCD_set_PGC_addr>
    3b98:	00 23       	and	r16, r16
    3b9a:	51 f1       	breq	.+84     	; 0x3bf0 <__LCD_putchar+0x126>
    3b9c:	85 e0       	ldi	r24, 0x05	; 5
    3b9e:	f8 9e       	mul	r15, r24
    3ba0:	c0 01       	movw	r24, r0
    3ba2:	11 24       	eor	r1, r1
    3ba4:	ec 01       	movw	r28, r24
    3ba6:	c3 55       	subi	r28, 0x53	; 83
    3ba8:	df 4f       	sbci	r29, 0xFF	; 255
    3baa:	8c 01       	movw	r16, r24
    3bac:	0e 54       	subi	r16, 0x4E	; 78
    3bae:	1f 4f       	sbci	r17, 0xFF	; 255
    3bb0:	fe 01       	movw	r30, r28
    3bb2:	84 91       	lpm	r24, Z+
    3bb4:	61 e0       	ldi	r22, 0x01	; 1
    3bb6:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    3bba:	21 96       	adiw	r28, 0x01	; 1
    3bbc:	c0 17       	cp	r28, r16
    3bbe:	d1 07       	cpc	r29, r17
    3bc0:	b9 f7       	brne	.-18     	; 0x3bb0 <__LCD_putchar+0xe6>
    3bc2:	80 e0       	ldi	r24, 0x00	; 0
    3bc4:	61 e0       	ldi	r22, 0x01	; 1
    3bc6:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <LCD_write>
    3bca:	80 91 ef 04 	lds	r24, 0x04EF
    3bce:	8a 5f       	subi	r24, 0xFA	; 250
    3bd0:	80 93 ef 04 	sts	0x04EF, r24
    3bd4:	80 91 ef 04 	lds	r24, 0x04EF
    3bd8:	90 e0       	ldi	r25, 0x00	; 0
    3bda:	8c 37       	cpi	r24, 0x7C	; 124
    3bdc:	91 05       	cpc	r25, r1
    3bde:	3c f0       	brlt	.+14     	; 0x3bee <__LCD_putchar+0x124>
    3be0:	10 92 ef 04 	sts	0x04EF, r1
    3be4:	80 91 f0 04 	lds	r24, 0x04F0
    3be8:	81 50       	subi	r24, 0x01	; 1
    3bea:	80 93 f0 04 	sts	0x04F0, r24
    3bee:	11 e0       	ldi	r17, 0x01	; 1
    3bf0:	80 91 f0 04 	lds	r24, 0x04F0
    3bf4:	83 70       	andi	r24, 0x03	; 3
    3bf6:	80 93 f0 04 	sts	0x04F0, r24
    3bfa:	11 30       	cpi	r17, 0x01	; 1
    3bfc:	59 f4       	brne	.+22     	; 0x3c14 <__LCD_putchar+0x14a>
    3bfe:	80 91 f1 04 	lds	r24, 0x04F1
    3c02:	81 30       	cpi	r24, 0x01	; 1
    3c04:	39 f4       	brne	.+14     	; 0x3c14 <__LCD_putchar+0x14a>
    3c06:	e0 91 f2 04 	lds	r30, 0x04F2
    3c0a:	f0 91 f3 04 	lds	r31, 0x04F3
    3c0e:	30 97       	sbiw	r30, 0x00	; 0
    3c10:	09 f0       	breq	.+2      	; 0x3c14 <__LCD_putchar+0x14a>
    3c12:	09 95       	icall
    3c14:	80 e0       	ldi	r24, 0x00	; 0
    3c16:	90 e0       	ldi	r25, 0x00	; 0
    3c18:	df 91       	pop	r29
    3c1a:	cf 91       	pop	r28
    3c1c:	1f 91       	pop	r17
    3c1e:	0f 91       	pop	r16
    3c20:	ff 90       	pop	r15
    3c22:	08 95       	ret

00003c24 <__LED_clr_pattern>:
    3c24:	85 fd       	sbrc	r24, 5
    3c26:	5d 98       	cbi	0x0b, 5	; 11
    3c28:	86 fd       	sbrc	r24, 6
    3c2a:	5e 98       	cbi	0x0b, 6	; 11
    3c2c:	08 95       	ret

00003c2e <__LED_init>:
    3c2e:	55 9a       	sbi	0x0a, 5	; 10
    3c30:	56 9a       	sbi	0x0a, 6	; 10
    3c32:	08 95       	ret

00003c34 <__LED_set_pattern>:
    3c34:	85 fd       	sbrc	r24, 5
    3c36:	5d 9a       	sbi	0x0b, 5	; 11
    3c38:	86 fd       	sbrc	r24, 6
    3c3a:	5e 9a       	sbi	0x0b, 6	; 11
    3c3c:	08 95       	ret

00003c3e <ATMEGA_open>:
    3c3e:	80 e0       	ldi	r24, 0x00	; 0
    3c40:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    3c44:	88 23       	and	r24, r24
    3c46:	51 f4       	brne	.+20     	; 0x3c5c <ATMEGA_open+0x1e>
    3c48:	f8 94       	cli
    3c4a:	0e 94 31 21 	call	0x4262	; 0x4262 <__ATMEGA_init>
    3c4e:	81 e0       	ldi	r24, 0x01	; 1
    3c50:	0e 94 31 1e 	call	0x3c62	; 0x3c62 <ATMEGA_set_clk_mode>
    3c54:	80 e0       	ldi	r24, 0x00	; 0
    3c56:	61 e0       	ldi	r22, 0x01	; 1
    3c58:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    3c5c:	80 e0       	ldi	r24, 0x00	; 0
    3c5e:	91 e0       	ldi	r25, 0x01	; 1
    3c60:	08 95       	ret

00003c62 <ATMEGA_set_clk_mode>:
    3c62:	81 30       	cpi	r24, 0x01	; 1
    3c64:	49 f0       	breq	.+18     	; 0x3c78 <ATMEGA_set_clk_mode+0x16>
    3c66:	f8 94       	cli
    3c68:	81 30       	cpi	r24, 0x01	; 1
    3c6a:	20 f1       	brcs	.+72     	; 0x3cb4 <ATMEGA_set_clk_mode+0x52>
    3c6c:	82 30       	cpi	r24, 0x02	; 2
    3c6e:	b1 f0       	breq	.+44     	; 0x3c9c <ATMEGA_set_clk_mode+0x3a>
    3c70:	83 30       	cpi	r24, 0x03	; 3
    3c72:	09 f0       	breq	.+2      	; 0x3c76 <ATMEGA_set_clk_mode+0x14>
    3c74:	45 c0       	rjmp	.+138    	; 0x3d00 <ATMEGA_set_clk_mode+0x9e>
    3c76:	17 c0       	rjmp	.+46     	; 0x3ca6 <ATMEGA_set_clk_mode+0x44>
    3c78:	2c 9a       	sbi	0x05, 4	; 5
    3c7a:	80 e8       	ldi	r24, 0x80	; 128
    3c7c:	80 93 61 00 	sts	0x0061, r24
    3c80:	10 92 61 00 	sts	0x0061, r1
    3c84:	80 e0       	ldi	r24, 0x00	; 0
    3c86:	90 e0       	ldi	r25, 0x00	; 0
    3c88:	00 00       	nop
    3c8a:	01 96       	adiw	r24, 0x01	; 1
    3c8c:	88 32       	cpi	r24, 0x28	; 40
    3c8e:	91 05       	cpc	r25, r1
    3c90:	d9 f7       	brne	.-10     	; 0x3c88 <ATMEGA_set_clk_mode+0x26>
    3c92:	10 92 68 00 	sts	0x0068, r1
    3c96:	10 92 6b 00 	sts	0x006B, r1
    3c9a:	08 95       	ret
    3c9c:	80 e8       	ldi	r24, 0x80	; 128
    3c9e:	80 93 61 00 	sts	0x0061, r24
    3ca2:	83 e0       	ldi	r24, 0x03	; 3
    3ca4:	04 c0       	rjmp	.+8      	; 0x3cae <ATMEGA_set_clk_mode+0x4c>
    3ca6:	80 e8       	ldi	r24, 0x80	; 128
    3ca8:	80 93 61 00 	sts	0x0061, r24
    3cac:	88 e0       	ldi	r24, 0x08	; 8
    3cae:	80 93 61 00 	sts	0x0061, r24
    3cb2:	28 c0       	rjmp	.+80     	; 0x3d04 <ATMEGA_set_clk_mode+0xa2>
    3cb4:	80 e0       	ldi	r24, 0x00	; 0
    3cb6:	90 e0       	ldi	r25, 0x00	; 0
    3cb8:	00 00       	nop
    3cba:	01 96       	adiw	r24, 0x01	; 1
    3cbc:	2d e6       	ldi	r18, 0x6D	; 109
    3cbe:	80 36       	cpi	r24, 0x60	; 96
    3cc0:	92 07       	cpc	r25, r18
    3cc2:	d1 f7       	brne	.-12     	; 0x3cb8 <ATMEGA_set_clk_mode+0x56>
    3cc4:	2c 98       	cbi	0x05, 4	; 5
    3cc6:	80 e0       	ldi	r24, 0x00	; 0
    3cc8:	90 e0       	ldi	r25, 0x00	; 0
    3cca:	00 00       	nop
    3ccc:	01 96       	adiw	r24, 0x01	; 1
    3cce:	2d e6       	ldi	r18, 0x6D	; 109
    3cd0:	80 36       	cpi	r24, 0x60	; 96
    3cd2:	92 07       	cpc	r25, r18
    3cd4:	d1 f7       	brne	.-12     	; 0x3cca <ATMEGA_set_clk_mode+0x68>
    3cd6:	10 92 7a 00 	sts	0x007A, r1
    3cda:	8f ef       	ldi	r24, 0xFF	; 255
    3cdc:	80 93 64 00 	sts	0x0064, r24
    3ce0:	80 91 68 00 	lds	r24, 0x0068
    3ce4:	81 60       	ori	r24, 0x01	; 1
    3ce6:	80 93 68 00 	sts	0x0068, r24
    3cea:	80 91 6b 00 	lds	r24, 0x006B
    3cee:	84 60       	ori	r24, 0x04	; 4
    3cf0:	80 93 6b 00 	sts	0x006B, r24
    3cf4:	78 94       	sei
    3cf6:	83 b7       	in	r24, 0x33	; 51
    3cf8:	81 60       	ori	r24, 0x01	; 1
    3cfa:	83 bf       	out	0x33, r24	; 51
    3cfc:	88 95       	sleep
    3cfe:	08 95       	ret
    3d00:	82 30       	cpi	r24, 0x02	; 2
    3d02:	08 f0       	brcs	.+2      	; 0x3d06 <ATMEGA_set_clk_mode+0xa4>
    3d04:	78 94       	sei
    3d06:	08 95       	ret

00003d08 <SPI_open>:
    3d08:	0f 93       	push	r16
    3d0a:	1f 93       	push	r17
    3d0c:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__SPI_init>
    3d10:	80 e0       	ldi	r24, 0x00	; 0
    3d12:	6c e4       	ldi	r22, 0x4C	; 76
    3d14:	71 e2       	ldi	r23, 0x21	; 33
    3d16:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <SPI_set_config_func>
    3d1a:	81 e0       	ldi	r24, 0x01	; 1
    3d1c:	64 e4       	ldi	r22, 0x44	; 68
    3d1e:	71 e2       	ldi	r23, 0x21	; 33
    3d20:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <SPI_set_config_func>
    3d24:	82 e0       	ldi	r24, 0x02	; 2
    3d26:	6c e3       	ldi	r22, 0x3C	; 60
    3d28:	71 e2       	ldi	r23, 0x21	; 33
    3d2a:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <SPI_set_config_func>
    3d2e:	86 e0       	ldi	r24, 0x06	; 6
    3d30:	64 e5       	ldi	r22, 0x54	; 84
    3d32:	71 e2       	ldi	r23, 0x21	; 33
    3d34:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <SPI_set_config_func>
    3d38:	04 e3       	ldi	r16, 0x34	; 52
    3d3a:	11 e2       	ldi	r17, 0x21	; 33
    3d3c:	83 e0       	ldi	r24, 0x03	; 3
    3d3e:	b8 01       	movw	r22, r16
    3d40:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <SPI_set_config_func>
    3d44:	84 e0       	ldi	r24, 0x04	; 4
    3d46:	b8 01       	movw	r22, r16
    3d48:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <SPI_set_config_func>
    3d4c:	85 e0       	ldi	r24, 0x05	; 5
    3d4e:	b8 01       	movw	r22, r16
    3d50:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <SPI_set_config_func>
    3d54:	87 e0       	ldi	r24, 0x07	; 7
    3d56:	b8 01       	movw	r22, r16
    3d58:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <SPI_set_config_func>
    3d5c:	82 e0       	ldi	r24, 0x02	; 2
    3d5e:	61 e0       	ldi	r22, 0x01	; 1
    3d60:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    3d64:	8f ef       	ldi	r24, 0xFF	; 255
    3d66:	80 93 f4 04 	sts	0x04F4, r24
    3d6a:	87 e0       	ldi	r24, 0x07	; 7
    3d6c:	0e 94 30 14 	call	0x2860	; 0x2860 <SPI_set_slave_addr>
    3d70:	82 e0       	ldi	r24, 0x02	; 2
    3d72:	91 e0       	ldi	r25, 0x01	; 1
    3d74:	1f 91       	pop	r17
    3d76:	0f 91       	pop	r16
    3d78:	08 95       	ret

00003d7a <SPI_receive>:
    3d7a:	1f 93       	push	r17
    3d7c:	16 2f       	mov	r17, r22
    3d7e:	0e 94 30 14 	call	0x2860	; 0x2860 <SPI_set_slave_addr>
    3d82:	82 e0       	ldi	r24, 0x02	; 2
    3d84:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    3d88:	81 30       	cpi	r24, 0x01	; 1
    3d8a:	11 f0       	breq	.+4      	; 0x3d90 <SPI_receive+0x16>
    3d8c:	80 e0       	ldi	r24, 0x00	; 0
    3d8e:	05 c0       	rjmp	.+10     	; 0x3d9a <SPI_receive+0x20>
    3d90:	1e bd       	out	0x2e, r17	; 46
    3d92:	0d b4       	in	r0, 0x2d	; 45
    3d94:	07 fe       	sbrs	r0, 7
    3d96:	fd cf       	rjmp	.-6      	; 0x3d92 <SPI_receive+0x18>
    3d98:	8e b5       	in	r24, 0x2e	; 46
    3d9a:	1f 91       	pop	r17
    3d9c:	08 95       	ret

00003d9e <SPI_set_config_func>:
    3d9e:	e8 2f       	mov	r30, r24
    3da0:	f0 e0       	ldi	r31, 0x00	; 0
    3da2:	ee 0f       	add	r30, r30
    3da4:	ff 1f       	adc	r31, r31
    3da6:	e5 57       	subi	r30, 0x75	; 117
    3da8:	fd 4f       	sbci	r31, 0xFD	; 253
    3daa:	71 83       	std	Z+1, r23	; 0x01
    3dac:	60 83       	st	Z, r22
    3dae:	08 95       	ret

00003db0 <__SPKR_TIMER1_COMPA_vect>:
    3db0:	0e 94 db 1e 	call	0x3db6	; 0x3db6 <SPKR_clk>
    3db4:	08 95       	ret

00003db6 <SPKR_clk>:
    3db6:	80 91 9d 02 	lds	r24, 0x029D
    3dba:	90 91 9e 02 	lds	r25, 0x029E
    3dbe:	a0 91 9f 02 	lds	r26, 0x029F
    3dc2:	b0 91 a0 02 	lds	r27, 0x02A0
    3dc6:	20 91 a1 02 	lds	r18, 0x02A1
    3dca:	30 91 a2 02 	lds	r19, 0x02A2
    3dce:	40 91 a3 02 	lds	r20, 0x02A3
    3dd2:	50 91 a4 02 	lds	r21, 0x02A4
    3dd6:	28 0f       	add	r18, r24
    3dd8:	39 1f       	adc	r19, r25
    3dda:	4a 1f       	adc	r20, r26
    3ddc:	5b 1f       	adc	r21, r27
    3dde:	20 93 9d 02 	sts	0x029D, r18
    3de2:	30 93 9e 02 	sts	0x029E, r19
    3de6:	40 93 9f 02 	sts	0x029F, r20
    3dea:	50 93 a0 02 	sts	0x02A0, r21
    3dee:	80 91 9d 02 	lds	r24, 0x029D
    3df2:	90 91 9e 02 	lds	r25, 0x029E
    3df6:	a0 91 9f 02 	lds	r26, 0x029F
    3dfa:	b0 91 a0 02 	lds	r27, 0x02A0
    3dfe:	88 51       	subi	r24, 0x18	; 24
    3e00:	96 4f       	sbci	r25, 0xF6	; 246
    3e02:	a0 40       	sbci	r26, 0x00	; 0
    3e04:	b0 40       	sbci	r27, 0x00	; 0
    3e06:	bc f0       	brlt	.+46     	; 0x3e36 <SPKR_clk+0x80>
    3e08:	8b b1       	in	r24, 0x0b	; 11
    3e0a:	80 58       	subi	r24, 0x80	; 128
    3e0c:	8b b9       	out	0x0b, r24	; 11
    3e0e:	80 91 9d 02 	lds	r24, 0x029D
    3e12:	90 91 9e 02 	lds	r25, 0x029E
    3e16:	a0 91 9f 02 	lds	r26, 0x029F
    3e1a:	b0 91 a0 02 	lds	r27, 0x02A0
    3e1e:	88 51       	subi	r24, 0x18	; 24
    3e20:	96 4f       	sbci	r25, 0xF6	; 246
    3e22:	a0 40       	sbci	r26, 0x00	; 0
    3e24:	b0 40       	sbci	r27, 0x00	; 0
    3e26:	80 93 9d 02 	sts	0x029D, r24
    3e2a:	90 93 9e 02 	sts	0x029E, r25
    3e2e:	a0 93 9f 02 	sts	0x029F, r26
    3e32:	b0 93 a0 02 	sts	0x02A0, r27
    3e36:	08 95       	ret

00003e38 <__SPKR_close_beep_mode>:
    3e38:	8a e0       	ldi	r24, 0x0A	; 10
    3e3a:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    3e3e:	81 30       	cpi	r24, 0x01	; 1
    3e40:	41 f4       	brne	.+16     	; 0x3e52 <__SPKR_close_beep_mode+0x1a>
    3e42:	0e 94 7b 21 	call	0x42f6	; 0x42f6 <__SPKR_close>
    3e46:	10 92 9c 02 	sts	0x029C, r1
    3e4a:	8a e0       	ldi	r24, 0x0A	; 10
    3e4c:	60 e0       	ldi	r22, 0x00	; 0
    3e4e:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    3e52:	08 95       	ret

00003e54 <__SPKR_close_tone_mode>:
    3e54:	89 e0       	ldi	r24, 0x09	; 9
    3e56:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    3e5a:	81 30       	cpi	r24, 0x01	; 1
    3e5c:	d9 f4       	brne	.+54     	; 0x3e94 <__SPKR_close_tone_mode+0x40>
    3e5e:	80 91 9b 02 	lds	r24, 0x029B
    3e62:	88 23       	and	r24, r24
    3e64:	11 f0       	breq	.+4      	; 0x3e6a <__SPKR_close_tone_mode+0x16>
    3e66:	0e 94 cc 1f 	call	0x3f98	; 0x3f98 <__SPKR_stop>
    3e6a:	82 e0       	ldi	r24, 0x02	; 2
    3e6c:	0e 94 7b 21 	call	0x42f6	; 0x42f6 <__SPKR_close>
    3e70:	80 91 a9 02 	lds	r24, 0x02A9
    3e74:	90 91 aa 02 	lds	r25, 0x02AA
    3e78:	00 97       	sbiw	r24, 0x00	; 0
    3e7a:	31 f0       	breq	.+12     	; 0x3e88 <__SPKR_close_tone_mode+0x34>
    3e7c:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <free>
    3e80:	10 92 aa 02 	sts	0x02AA, r1
    3e84:	10 92 a9 02 	sts	0x02A9, r1
    3e88:	10 92 9b 02 	sts	0x029B, r1
    3e8c:	89 e0       	ldi	r24, 0x09	; 9
    3e8e:	60 e0       	ldi	r22, 0x00	; 0
    3e90:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    3e94:	08 95       	ret

00003e96 <SPKR_close>:
    3e96:	81 30       	cpi	r24, 0x01	; 1
    3e98:	29 f0       	breq	.+10     	; 0x3ea4 <SPKR_close+0xe>
    3e9a:	82 30       	cpi	r24, 0x02	; 2
    3e9c:	29 f4       	brne	.+10     	; 0x3ea8 <SPKR_close+0x12>
    3e9e:	0e 94 2a 1f 	call	0x3e54	; 0x3e54 <__SPKR_close_tone_mode>
    3ea2:	08 95       	ret
    3ea4:	0e 94 1c 1f 	call	0x3e38	; 0x3e38 <__SPKR_close_beep_mode>
    3ea8:	08 95       	ret

00003eaa <__SPKR_init>:
    3eaa:	98 2f       	mov	r25, r24
    3eac:	80 91 9b 02 	lds	r24, 0x029B
    3eb0:	88 23       	and	r24, r24
    3eb2:	31 f4       	brne	.+12     	; 0x3ec0 <__SPKR_init+0x16>
    3eb4:	80 91 9c 02 	lds	r24, 0x029C
    3eb8:	88 23       	and	r24, r24
    3eba:	11 f4       	brne	.+4      	; 0x3ec0 <__SPKR_init+0x16>
    3ebc:	57 9a       	sbi	0x0a, 7	; 10
    3ebe:	5f 98       	cbi	0x0b, 7	; 11
    3ec0:	80 91 9b 02 	lds	r24, 0x029B
    3ec4:	88 23       	and	r24, r24
    3ec6:	d1 f4       	brne	.+52     	; 0x3efc <__SPKR_init+0x52>
    3ec8:	92 30       	cpi	r25, 0x02	; 2
    3eca:	c1 f4       	brne	.+48     	; 0x3efc <__SPKR_init+0x52>
    3ecc:	10 92 80 00 	sts	0x0080, r1
    3ed0:	10 92 81 00 	sts	0x0081, r1
    3ed4:	80 91 81 00 	lds	r24, 0x0081
    3ed8:	88 60       	ori	r24, 0x08	; 8
    3eda:	80 93 81 00 	sts	0x0081, r24
    3ede:	80 91 81 00 	lds	r24, 0x0081
    3ee2:	81 60       	ori	r24, 0x01	; 1
    3ee4:	80 93 81 00 	sts	0x0081, r24
    3ee8:	10 92 85 00 	sts	0x0085, r1
    3eec:	10 92 84 00 	sts	0x0084, r1
    3ef0:	81 e0       	ldi	r24, 0x01	; 1
    3ef2:	80 93 89 00 	sts	0x0089, r24
    3ef6:	80 e9       	ldi	r24, 0x90	; 144
    3ef8:	80 93 88 00 	sts	0x0088, r24
    3efc:	08 95       	ret

00003efe <SPKR_play_beep>:
    3efe:	8f 92       	push	r8
    3f00:	9f 92       	push	r9
    3f02:	af 92       	push	r10
    3f04:	bf 92       	push	r11
    3f06:	cf 92       	push	r12
    3f08:	df 92       	push	r13
    3f0a:	ef 92       	push	r14
    3f0c:	ff 92       	push	r15
    3f0e:	0f 93       	push	r16
    3f10:	1f 93       	push	r17
    3f12:	cf 93       	push	r28
    3f14:	df 93       	push	r29
    3f16:	4b 01       	movw	r8, r22
    3f18:	5c 01       	movw	r10, r24
    3f1a:	ea 01       	movw	r28, r20
    3f1c:	b9 01       	movw	r22, r18
    3f1e:	21 15       	cp	r18, r1
    3f20:	31 05       	cpc	r19, r1
    3f22:	39 f1       	breq	.+78     	; 0x3f72 <SPKR_play_beep+0x74>
    3f24:	9e 01       	movw	r18, r28
    3f26:	44 27       	eor	r20, r20
    3f28:	37 fd       	sbrc	r19, 7
    3f2a:	40 95       	com	r20
    3f2c:	54 2f       	mov	r21, r20
    3f2e:	65 36       	cpi	r22, 0x65	; 101
    3f30:	71 05       	cpc	r23, r1
    3f32:	10 f0       	brcs	.+4      	; 0x3f38 <SPKR_play_beep+0x3a>
    3f34:	64 e6       	ldi	r22, 0x64	; 100
    3f36:	70 e0       	ldi	r23, 0x00	; 0
    3f38:	80 e0       	ldi	r24, 0x00	; 0
    3f3a:	90 e0       	ldi	r25, 0x00	; 0
    3f3c:	0e 94 ee 2c 	call	0x59dc	; 0x59dc <__mulsi3>
    3f40:	24 e6       	ldi	r18, 0x64	; 100
    3f42:	30 e0       	ldi	r19, 0x00	; 0
    3f44:	40 e0       	ldi	r20, 0x00	; 0
    3f46:	50 e0       	ldi	r21, 0x00	; 0
    3f48:	0e 94 20 2d 	call	0x5a40	; 0x5a40 <__udivmodsi4>
    3f4c:	79 01       	movw	r14, r18
    3f4e:	8a 01       	movw	r16, r20
    3f50:	c5 01       	movw	r24, r10
    3f52:	b4 01       	movw	r22, r8
    3f54:	0e 94 64 21 	call	0x42c8	; 0x42c8 <SPKR_beep>
    3f58:	c7 01       	movw	r24, r14
    3f5a:	0e 94 b0 19 	call	0x3360	; 0x3360 <TMRSRVC_delay>
    3f5e:	60 e0       	ldi	r22, 0x00	; 0
    3f60:	70 e0       	ldi	r23, 0x00	; 0
    3f62:	80 e0       	ldi	r24, 0x00	; 0
    3f64:	90 e0       	ldi	r25, 0x00	; 0
    3f66:	0e 94 64 21 	call	0x42c8	; 0x42c8 <SPKR_beep>
    3f6a:	ce 01       	movw	r24, r28
    3f6c:	8e 19       	sub	r24, r14
    3f6e:	9f 09       	sbc	r25, r15
    3f70:	04 c0       	rjmp	.+8      	; 0x3f7a <SPKR_play_beep+0x7c>
    3f72:	41 15       	cp	r20, r1
    3f74:	51 05       	cpc	r21, r1
    3f76:	19 f0       	breq	.+6      	; 0x3f7e <SPKR_play_beep+0x80>
    3f78:	ca 01       	movw	r24, r20
    3f7a:	0e 94 b0 19 	call	0x3360	; 0x3360 <TMRSRVC_delay>
    3f7e:	df 91       	pop	r29
    3f80:	cf 91       	pop	r28
    3f82:	1f 91       	pop	r17
    3f84:	0f 91       	pop	r16
    3f86:	ff 90       	pop	r15
    3f88:	ef 90       	pop	r14
    3f8a:	df 90       	pop	r13
    3f8c:	cf 90       	pop	r12
    3f8e:	bf 90       	pop	r11
    3f90:	af 90       	pop	r10
    3f92:	9f 90       	pop	r9
    3f94:	8f 90       	pop	r8
    3f96:	08 95       	ret

00003f98 <__SPKR_stop>:
    3f98:	ef e6       	ldi	r30, 0x6F	; 111
    3f9a:	f0 e0       	ldi	r31, 0x00	; 0
    3f9c:	80 81       	ld	r24, Z
    3f9e:	8d 7f       	andi	r24, 0xFD	; 253
    3fa0:	80 83       	st	Z, r24
    3fa2:	08 95       	ret

00003fa4 <STEPPER_go>:
    3fa4:	98 2f       	mov	r25, r24
    3fa6:	81 e0       	ldi	r24, 0x01	; 1
    3fa8:	80 93 d9 04 	sts	0x04D9, r24
    3fac:	91 30       	cpi	r25, 0x01	; 1
    3fae:	51 f0       	breq	.+20     	; 0x3fc4 <STEPPER_go+0x20>
    3fb0:	91 30       	cpi	r25, 0x01	; 1
    3fb2:	18 f0       	brcs	.+6      	; 0x3fba <STEPPER_go+0x16>
    3fb4:	92 30       	cpi	r25, 0x02	; 2
    3fb6:	41 f4       	brne	.+16     	; 0x3fc8 <STEPPER_go+0x24>
    3fb8:	03 c0       	rjmp	.+6      	; 0x3fc0 <STEPPER_go+0x1c>
    3fba:	10 92 c1 04 	sts	0x04C1, r1
    3fbe:	04 c0       	rjmp	.+8      	; 0x3fc8 <STEPPER_go+0x24>
    3fc0:	10 92 c1 04 	sts	0x04C1, r1
    3fc4:	10 92 c2 04 	sts	0x04C2, r1
    3fc8:	10 92 d9 04 	sts	0x04D9, r1
    3fcc:	08 95       	ret

00003fce <__STEPPER_init>:
    3fce:	3a 9a       	sbi	0x07, 2	; 7
    3fd0:	3b 9a       	sbi	0x07, 3	; 7
    3fd2:	3c 9a       	sbi	0x07, 4	; 7
    3fd4:	3d 9a       	sbi	0x07, 5	; 7
    3fd6:	3e 9a       	sbi	0x07, 6	; 7
    3fd8:	3f 9a       	sbi	0x07, 7	; 7
    3fda:	88 b1       	in	r24, 0x08	; 8
    3fdc:	83 70       	andi	r24, 0x03	; 3
    3fde:	88 b9       	out	0x08, r24	; 8
    3fe0:	08 95       	ret

00003fe2 <STEPPER_set_steps>:
    3fe2:	98 2f       	mov	r25, r24
    3fe4:	81 e0       	ldi	r24, 0x01	; 1
    3fe6:	80 93 d9 04 	sts	0x04D9, r24
    3fea:	91 30       	cpi	r25, 0x01	; 1
    3fec:	71 f0       	breq	.+28     	; 0x400a <STEPPER_set_steps+0x28>
    3fee:	91 30       	cpi	r25, 0x01	; 1
    3ff0:	18 f0       	brcs	.+6      	; 0x3ff8 <STEPPER_set_steps+0x16>
    3ff2:	92 30       	cpi	r25, 0x02	; 2
    3ff4:	71 f4       	brne	.+28     	; 0x4012 <STEPPER_set_steps+0x30>
    3ff6:	05 c0       	rjmp	.+10     	; 0x4002 <STEPPER_set_steps+0x20>
    3ff8:	70 93 b6 04 	sts	0x04B6, r23
    3ffc:	60 93 b5 04 	sts	0x04B5, r22
    4000:	08 c0       	rjmp	.+16     	; 0x4012 <STEPPER_set_steps+0x30>
    4002:	70 93 b6 04 	sts	0x04B6, r23
    4006:	60 93 b5 04 	sts	0x04B5, r22
    400a:	70 93 b8 04 	sts	0x04B8, r23
    400e:	60 93 b7 04 	sts	0x04B7, r22
    4012:	10 92 d9 04 	sts	0x04D9, r1
    4016:	08 95       	ret

00004018 <STEPPER_set_stop_mode>:
    4018:	98 2f       	mov	r25, r24
    401a:	81 e0       	ldi	r24, 0x01	; 1
    401c:	80 93 d9 04 	sts	0x04D9, r24
    4020:	91 30       	cpi	r25, 0x01	; 1
    4022:	51 f0       	breq	.+20     	; 0x4038 <STEPPER_set_stop_mode+0x20>
    4024:	91 30       	cpi	r25, 0x01	; 1
    4026:	18 f0       	brcs	.+6      	; 0x402e <STEPPER_set_stop_mode+0x16>
    4028:	92 30       	cpi	r25, 0x02	; 2
    402a:	41 f4       	brne	.+16     	; 0x403c <STEPPER_set_stop_mode+0x24>
    402c:	03 c0       	rjmp	.+6      	; 0x4034 <STEPPER_set_stop_mode+0x1c>
    402e:	60 93 c3 04 	sts	0x04C3, r22
    4032:	04 c0       	rjmp	.+8      	; 0x403c <STEPPER_set_stop_mode+0x24>
    4034:	60 93 c3 04 	sts	0x04C3, r22
    4038:	60 93 c4 04 	sts	0x04C4, r22
    403c:	10 92 d9 04 	sts	0x04D9, r1
    4040:	08 95       	ret

00004042 <STEPPER_setup_decels>:
    4042:	0f 93       	push	r16
    4044:	1f 93       	push	r17
    4046:	cf 93       	push	r28
    4048:	df 93       	push	r29
    404a:	eb 01       	movw	r28, r22
    404c:	8a 01       	movw	r16, r20
    404e:	81 30       	cpi	r24, 0x01	; 1
    4050:	01 f1       	breq	.+64     	; 0x4092 <STEPPER_setup_decels+0x50>
    4052:	81 30       	cpi	r24, 0x01	; 1
    4054:	18 f0       	brcs	.+6      	; 0x405c <STEPPER_setup_decels+0x1a>
    4056:	82 30       	cpi	r24, 0x02	; 2
    4058:	61 f5       	brne	.+88     	; 0x40b2 <STEPPER_setup_decels+0x70>
    405a:	0d c0       	rjmp	.+26     	; 0x4076 <STEPPER_setup_decels+0x34>
    405c:	80 91 ad 04 	lds	r24, 0x04AD
    4060:	90 91 ae 04 	lds	r25, 0x04AE
    4064:	89 2b       	or	r24, r25
    4066:	11 f0       	breq	.+4      	; 0x406c <STEPPER_setup_decels+0x2a>
    4068:	80 e0       	ldi	r24, 0x00	; 0
    406a:	1a c0       	rjmp	.+52     	; 0x40a0 <STEPPER_setup_decels+0x5e>
    406c:	10 92 ba 04 	sts	0x04BA, r1
    4070:	10 92 b9 04 	sts	0x04B9, r1
    4074:	1e c0       	rjmp	.+60     	; 0x40b2 <STEPPER_setup_decels+0x70>
    4076:	80 91 ad 04 	lds	r24, 0x04AD
    407a:	90 91 ae 04 	lds	r25, 0x04AE
    407e:	89 2b       	or	r24, r25
    4080:	21 f0       	breq	.+8      	; 0x408a <STEPPER_setup_decels+0x48>
    4082:	80 e0       	ldi	r24, 0x00	; 0
    4084:	0e 94 97 21 	call	0x432e	; 0x432e <STEPPER_set_decel_step_values>
    4088:	04 c0       	rjmp	.+8      	; 0x4092 <STEPPER_setup_decels+0x50>
    408a:	10 92 ba 04 	sts	0x04BA, r1
    408e:	10 92 b9 04 	sts	0x04B9, r1
    4092:	80 91 af 04 	lds	r24, 0x04AF
    4096:	90 91 b0 04 	lds	r25, 0x04B0
    409a:	89 2b       	or	r24, r25
    409c:	31 f0       	breq	.+12     	; 0x40aa <STEPPER_setup_decels+0x68>
    409e:	81 e0       	ldi	r24, 0x01	; 1
    40a0:	be 01       	movw	r22, r28
    40a2:	a8 01       	movw	r20, r16
    40a4:	0e 94 97 21 	call	0x432e	; 0x432e <STEPPER_set_decel_step_values>
    40a8:	04 c0       	rjmp	.+8      	; 0x40b2 <STEPPER_setup_decels+0x70>
    40aa:	10 92 bc 04 	sts	0x04BC, r1
    40ae:	10 92 bb 04 	sts	0x04BB, r1
    40b2:	df 91       	pop	r29
    40b4:	cf 91       	pop	r28
    40b6:	1f 91       	pop	r17
    40b8:	0f 91       	pop	r16
    40ba:	08 95       	ret

000040bc <SYS_init>:
    40bc:	10 92 dc 04 	sts	0x04DC, r1
    40c0:	10 92 dd 04 	sts	0x04DD, r1
    40c4:	10 92 e1 04 	sts	0x04E1, r1
    40c8:	10 92 de 04 	sts	0x04DE, r1
    40cc:	10 92 e0 04 	sts	0x04E0, r1
    40d0:	10 92 e2 04 	sts	0x04E2, r1
    40d4:	10 92 e3 04 	sts	0x04E3, r1
    40d8:	10 92 e4 04 	sts	0x04E4, r1
    40dc:	10 92 e5 04 	sts	0x04E5, r1
    40e0:	10 92 e6 04 	sts	0x04E6, r1
    40e4:	10 92 e7 04 	sts	0x04E7, r1
    40e8:	10 92 e8 04 	sts	0x04E8, r1
    40ec:	10 92 e9 04 	sts	0x04E9, r1
    40f0:	10 92 ea 04 	sts	0x04EA, r1
    40f4:	10 92 eb 04 	sts	0x04EB, r1
    40f8:	10 92 ec 04 	sts	0x04EC, r1
    40fc:	10 92 ed 04 	sts	0x04ED, r1
    4100:	08 95       	ret

00004102 <TMRSRVC_insert>:
    4102:	cf 92       	push	r12
    4104:	df 92       	push	r13
    4106:	ef 92       	push	r14
    4108:	ff 92       	push	r15
    410a:	0f 93       	push	r16
    410c:	1f 93       	push	r17
    410e:	cf 93       	push	r28
    4110:	df 93       	push	r29
    4112:	ec 01       	movw	r28, r24
    4114:	80 91 13 05 	lds	r24, 0x0513
    4118:	88 23       	and	r24, r24
    411a:	39 f4       	brne	.+14     	; 0x412a <TMRSRVC_insert+0x28>
    411c:	d0 93 15 05 	sts	0x0515, r29
    4120:	c0 93 14 05 	sts	0x0514, r28
    4124:	0e 94 0f 21 	call	0x421e	; 0x421e <TMRSRVC_start>
    4128:	47 c0       	rjmp	.+142    	; 0x41b8 <TMRSRVC_insert+0xb6>
    412a:	c0 90 14 05 	lds	r12, 0x0514
    412e:	d0 90 15 05 	lds	r13, 0x0515
    4132:	00 e0       	ldi	r16, 0x00	; 0
    4134:	10 e0       	ldi	r17, 0x00	; 0
    4136:	ee 24       	eor	r14, r14
    4138:	ff 24       	eor	r15, r15
    413a:	37 c0       	rjmp	.+110    	; 0x41aa <TMRSRVC_insert+0xa8>
    413c:	a8 81       	ld	r26, Y
    413e:	b9 81       	ldd	r27, Y+1	; 0x01
    4140:	fd 01       	movw	r30, r26
    4142:	64 81       	ldd	r22, Z+4	; 0x04
    4144:	75 81       	ldd	r23, Z+5	; 0x05
    4146:	f6 01       	movw	r30, r12
    4148:	40 81       	ld	r20, Z
    414a:	51 81       	ldd	r21, Z+1	; 0x01
    414c:	fa 01       	movw	r30, r20
    414e:	84 81       	ldd	r24, Z+4	; 0x04
    4150:	95 81       	ldd	r25, Z+5	; 0x05
    4152:	9b 01       	movw	r18, r22
    4154:	28 1b       	sub	r18, r24
    4156:	39 0b       	sbc	r19, r25
    4158:	37 ff       	sbrs	r19, 7
    415a:	0f c0       	rjmp	.+30     	; 0x417a <TMRSRVC_insert+0x78>
    415c:	86 1b       	sub	r24, r22
    415e:	97 0b       	sbc	r25, r23
    4160:	95 83       	std	Z+5, r25	; 0x05
    4162:	84 83       	std	Z+4, r24	; 0x04
    4164:	db 82       	std	Y+3, r13	; 0x03
    4166:	ca 82       	std	Y+2, r12	; 0x02
    4168:	01 2b       	or	r16, r17
    416a:	29 f4       	brne	.+10     	; 0x4176 <TMRSRVC_insert+0x74>
    416c:	d0 93 15 05 	sts	0x0515, r29
    4170:	c0 93 14 05 	sts	0x0514, r28
    4174:	21 c0       	rjmp	.+66     	; 0x41b8 <TMRSRVC_insert+0xb6>
    4176:	f7 01       	movw	r30, r14
    4178:	0c c0       	rjmp	.+24     	; 0x4192 <TMRSRVC_insert+0x90>
    417a:	f6 01       	movw	r30, r12
    417c:	82 81       	ldd	r24, Z+2	; 0x02
    417e:	93 81       	ldd	r25, Z+3	; 0x03
    4180:	21 15       	cp	r18, r1
    4182:	31 05       	cpc	r19, r1
    4184:	49 f4       	brne	.+18     	; 0x4198 <TMRSRVC_insert+0x96>
    4186:	fd 01       	movw	r30, r26
    4188:	15 82       	std	Z+5, r1	; 0x05
    418a:	14 82       	std	Z+4, r1	; 0x04
    418c:	9b 83       	std	Y+3, r25	; 0x03
    418e:	8a 83       	std	Y+2, r24	; 0x02
    4190:	f6 01       	movw	r30, r12
    4192:	d3 83       	std	Z+3, r29	; 0x03
    4194:	c2 83       	std	Z+2, r28	; 0x02
    4196:	10 c0       	rjmp	.+32     	; 0x41b8 <TMRSRVC_insert+0xb6>
    4198:	fd 01       	movw	r30, r26
    419a:	35 83       	std	Z+5, r19	; 0x05
    419c:	24 83       	std	Z+4, r18	; 0x04
    419e:	00 97       	sbiw	r24, 0x00	; 0
    41a0:	b9 f3       	breq	.-18     	; 0x4190 <TMRSRVC_insert+0x8e>
    41a2:	0f 5f       	subi	r16, 0xFF	; 255
    41a4:	1f 4f       	sbci	r17, 0xFF	; 255
    41a6:	76 01       	movw	r14, r12
    41a8:	6c 01       	movw	r12, r24
    41aa:	80 91 13 05 	lds	r24, 0x0513
    41ae:	90 e0       	ldi	r25, 0x00	; 0
    41b0:	08 17       	cp	r16, r24
    41b2:	19 07       	cpc	r17, r25
    41b4:	18 f2       	brcs	.-122    	; 0x413c <TMRSRVC_insert+0x3a>
    41b6:	ec cf       	rjmp	.-40     	; 0x4190 <TMRSRVC_insert+0x8e>
    41b8:	80 91 13 05 	lds	r24, 0x0513
    41bc:	8f 5f       	subi	r24, 0xFF	; 255
    41be:	80 93 13 05 	sts	0x0513, r24
    41c2:	df 91       	pop	r29
    41c4:	cf 91       	pop	r28
    41c6:	1f 91       	pop	r17
    41c8:	0f 91       	pop	r16
    41ca:	ff 90       	pop	r15
    41cc:	ef 90       	pop	r14
    41ce:	df 90       	pop	r13
    41d0:	cf 90       	pop	r12
    41d2:	08 95       	ret

000041d4 <TMRSRVC_open>:
    41d4:	88 e0       	ldi	r24, 0x08	; 8
    41d6:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    41da:	88 23       	and	r24, r24
    41dc:	b9 f4       	brne	.+46     	; 0x420c <TMRSRVC_open+0x38>
    41de:	10 92 13 05 	sts	0x0513, r1
    41e2:	10 92 15 05 	sts	0x0515, r1
    41e6:	10 92 14 05 	sts	0x0514, r1
    41ea:	10 92 ab 02 	sts	0x02AB, r1
    41ee:	10 92 ac 02 	sts	0x02AC, r1
    41f2:	80 e1       	ldi	r24, 0x10	; 16
    41f4:	64 e0       	ldi	r22, 0x04	; 4
    41f6:	72 e2       	ldi	r23, 0x22	; 34
    41f8:	0e 94 20 21 	call	0x4240	; 0x4240 <__ISR_attach>
    41fc:	0e 94 0b 22 	call	0x4416	; 0x4416 <__TMRSRVC_init>
    4200:	0e 94 09 21 	call	0x4212	; 0x4212 <__TMRSRVC_start>
    4204:	88 e0       	ldi	r24, 0x08	; 8
    4206:	61 e0       	ldi	r22, 0x01	; 1
    4208:	0e 94 9b 18 	call	0x3136	; 0x3136 <SYS_set_state>
    420c:	88 e0       	ldi	r24, 0x08	; 8
    420e:	91 e0       	ldi	r25, 0x01	; 1
    4210:	08 95       	ret

00004212 <__TMRSRVC_start>:
    4212:	ee e6       	ldi	r30, 0x6E	; 110
    4214:	f0 e0       	ldi	r31, 0x00	; 0
    4216:	80 81       	ld	r24, Z
    4218:	82 60       	ori	r24, 0x02	; 2
    421a:	80 83       	st	Z, r24
    421c:	08 95       	ret

0000421e <TMRSRVC_start>:
    421e:	81 e0       	ldi	r24, 0x01	; 1
    4220:	80 93 ac 02 	sts	0x02AC, r24
    4224:	08 95       	ret

00004226 <I2C_enable>:
    4226:	80 91 16 05 	lds	r24, 0x0516
    422a:	81 30       	cpi	r24, 0x01	; 1
    422c:	29 f4       	brne	.+10     	; 0x4238 <I2C_enable+0x12>
    422e:	80 91 bc 00 	lds	r24, 0x00BC
    4232:	84 60       	ori	r24, 0x04	; 4
    4234:	80 93 bc 00 	sts	0x00BC, r24
    4238:	08 95       	ret

0000423a <__I2C_init>:
    423a:	38 98       	cbi	0x07, 0	; 7
    423c:	39 98       	cbi	0x07, 1	; 7
    423e:	08 95       	ret

00004240 <__ISR_attach>:
    4240:	80 32       	cpi	r24, 0x20	; 32
    4242:	18 f0       	brcs	.+6      	; 0x424a <__ISR_attach+0xa>
    4244:	20 e0       	ldi	r18, 0x00	; 0
    4246:	30 e0       	ldi	r19, 0x00	; 0
    4248:	0a c0       	rjmp	.+20     	; 0x425e <__ISR_attach+0x1e>
    424a:	e8 2f       	mov	r30, r24
    424c:	f0 e0       	ldi	r31, 0x00	; 0
    424e:	ee 0f       	add	r30, r30
    4250:	ff 1f       	adc	r31, r31
    4252:	e5 5b       	subi	r30, 0xB5	; 181
    4254:	fd 4f       	sbci	r31, 0xFD	; 253
    4256:	20 81       	ld	r18, Z
    4258:	31 81       	ldd	r19, Z+1	; 0x01
    425a:	71 83       	std	Z+1, r23	; 0x01
    425c:	60 83       	st	Z, r22
    425e:	c9 01       	movw	r24, r18
    4260:	08 95       	ret

00004262 <__ATMEGA_init>:
    4262:	24 9a       	sbi	0x04, 4	; 4
    4264:	2c 9a       	sbi	0x05, 4	; 5
    4266:	08 95       	ret

00004268 <SPI_default_config>:
    4268:	83 e5       	ldi	r24, 0x53	; 83
    426a:	8c bd       	out	0x2c, r24	; 44
    426c:	81 e0       	ldi	r24, 0x01	; 1
    426e:	8d bd       	out	0x2d, r24	; 45
    4270:	8d e0       	ldi	r24, 0x0D	; 13
    4272:	8a 95       	dec	r24
    4274:	f1 f7       	brne	.-4      	; 0x4272 <SPI_default_config+0xa>
    4276:	08 95       	ret

00004278 <SPI_ATtiny0_config>:
    4278:	83 e5       	ldi	r24, 0x53	; 83
    427a:	8c bd       	out	0x2c, r24	; 44
    427c:	1d bc       	out	0x2d, r1	; 45
    427e:	84 ef       	ldi	r24, 0xF4	; 244
    4280:	91 e0       	ldi	r25, 0x01	; 1
    4282:	01 97       	sbiw	r24, 0x01	; 1
    4284:	f1 f7       	brne	.-4      	; 0x4282 <SPI_ATtiny0_config+0xa>
    4286:	08 95       	ret

00004288 <SPI_PSXC_config>:
    4288:	8f e7       	ldi	r24, 0x7F	; 127
    428a:	8c bd       	out	0x2c, r24	; 44
    428c:	1d bc       	out	0x2d, r1	; 45
    428e:	84 ef       	ldi	r24, 0xF4	; 244
    4290:	91 e0       	ldi	r25, 0x01	; 1
    4292:	01 97       	sbiw	r24, 0x01	; 1
    4294:	f1 f7       	brne	.-4      	; 0x4292 <SPI_PSXC_config+0xa>
    4296:	08 95       	ret

00004298 <SPI_LCD_config>:
    4298:	83 e5       	ldi	r24, 0x53	; 83
    429a:	8c bd       	out	0x2c, r24	; 44
    429c:	81 e0       	ldi	r24, 0x01	; 1
    429e:	8d bd       	out	0x2d, r24	; 45
    42a0:	8d e0       	ldi	r24, 0x0D	; 13
    42a2:	8a 95       	dec	r24
    42a4:	f1 f7       	brne	.-4      	; 0x42a2 <SPI_LCD_config+0xa>
    42a6:	08 95       	ret

000042a8 <SPI_FLASH_config>:
    42a8:	83 e5       	ldi	r24, 0x53	; 83
    42aa:	8c bd       	out	0x2c, r24	; 44
    42ac:	81 e0       	ldi	r24, 0x01	; 1
    42ae:	8d bd       	out	0x2d, r24	; 45
    42b0:	84 ef       	ldi	r24, 0xF4	; 244
    42b2:	91 e0       	ldi	r25, 0x01	; 1
    42b4:	01 97       	sbiw	r24, 0x01	; 1
    42b6:	f1 f7       	brne	.-4      	; 0x42b4 <SPI_FLASH_config+0xc>
    42b8:	08 95       	ret

000042ba <__SPI_init>:
    42ba:	25 9a       	sbi	0x04, 5	; 4
    42bc:	26 98       	cbi	0x04, 6	; 4
    42be:	27 9a       	sbi	0x04, 7	; 4
    42c0:	20 9a       	sbi	0x04, 0	; 4
    42c2:	21 9a       	sbi	0x04, 1	; 4
    42c4:	22 9a       	sbi	0x04, 2	; 4
    42c6:	08 95       	ret

000042c8 <SPKR_beep>:
    42c8:	9b 01       	movw	r18, r22
    42ca:	ac 01       	movw	r20, r24
    42cc:	80 91 9c 02 	lds	r24, 0x029C
    42d0:	88 23       	and	r24, r24
    42d2:	81 f0       	breq	.+32     	; 0x42f4 <SPKR_beep+0x2c>
    42d4:	da 01       	movw	r26, r20
    42d6:	c9 01       	movw	r24, r18
    42d8:	88 0f       	add	r24, r24
    42da:	99 1f       	adc	r25, r25
    42dc:	aa 1f       	adc	r26, r26
    42de:	bb 1f       	adc	r27, r27
    42e0:	90 93 a8 02 	sts	0x02A8, r25
    42e4:	80 93 a7 02 	sts	0x02A7, r24
    42e8:	21 15       	cp	r18, r1
    42ea:	31 05       	cpc	r19, r1
    42ec:	41 05       	cpc	r20, r1
    42ee:	51 05       	cpc	r21, r1
    42f0:	09 f4       	brne	.+2      	; 0x42f4 <SPKR_beep+0x2c>
    42f2:	5f 98       	cbi	0x0b, 7	; 11
    42f4:	08 95       	ret

000042f6 <__SPKR_close>:
    42f6:	82 30       	cpi	r24, 0x02	; 2
    42f8:	29 f4       	brne	.+10     	; 0x4304 <__SPKR_close+0xe>
    42fa:	80 91 81 00 	lds	r24, 0x0081
    42fe:	8e 7f       	andi	r24, 0xFE	; 254
    4300:	80 93 81 00 	sts	0x0081, r24
    4304:	80 91 9b 02 	lds	r24, 0x029B
    4308:	81 30       	cpi	r24, 0x01	; 1
    430a:	31 f4       	brne	.+12     	; 0x4318 <__SPKR_close+0x22>
    430c:	80 91 9c 02 	lds	r24, 0x029C
    4310:	81 30       	cpi	r24, 0x01	; 1
    4312:	11 f4       	brne	.+4      	; 0x4318 <__SPKR_close+0x22>
    4314:	00 00       	nop
    4316:	08 95       	ret
    4318:	80 91 9b 02 	lds	r24, 0x029B
    431c:	81 30       	cpi	r24, 0x01	; 1
    431e:	21 f0       	breq	.+8      	; 0x4328 <__SPKR_close+0x32>
    4320:	80 91 9c 02 	lds	r24, 0x029C
    4324:	81 30       	cpi	r24, 0x01	; 1
    4326:	11 f4       	brne	.+4      	; 0x432c <__SPKR_close+0x36>
    4328:	5f 98       	cbi	0x0b, 7	; 11
    432a:	57 98       	cbi	0x0a, 7	; 10
    432c:	08 95       	ret

0000432e <STEPPER_set_decel_step_values>:
    432e:	ef 92       	push	r14
    4330:	ff 92       	push	r15
    4332:	0f 93       	push	r16
    4334:	1f 93       	push	r17
    4336:	cf 93       	push	r28
    4338:	df 93       	push	r29
    433a:	eb 01       	movw	r28, r22
    433c:	88 23       	and	r24, r24
    433e:	21 f0       	breq	.+8      	; 0x4348 <STEPPER_set_decel_step_values+0x1a>
    4340:	81 30       	cpi	r24, 0x01	; 1
    4342:	09 f0       	breq	.+2      	; 0x4346 <STEPPER_set_decel_step_values+0x18>
    4344:	5a c0       	rjmp	.+180    	; 0x43fa <STEPPER_set_decel_step_values+0xcc>
    4346:	2d c0       	rjmp	.+90     	; 0x43a2 <STEPPER_set_decel_step_values+0x74>
    4348:	9a 01       	movw	r18, r20
    434a:	40 e0       	ldi	r20, 0x00	; 0
    434c:	50 e0       	ldi	r21, 0x00	; 0
    434e:	ca 01       	movw	r24, r20
    4350:	b9 01       	movw	r22, r18
    4352:	0e 94 ee 2c 	call	0x59dc	; 0x59dc <__mulsi3>
    4356:	20 91 ad 04 	lds	r18, 0x04AD
    435a:	30 91 ae 04 	lds	r19, 0x04AE
    435e:	22 0f       	add	r18, r18
    4360:	33 1f       	adc	r19, r19
    4362:	40 e0       	ldi	r20, 0x00	; 0
    4364:	50 e0       	ldi	r21, 0x00	; 0
    4366:	0e 94 20 2d 	call	0x5a40	; 0x5a40 <__udivmodsi4>
    436a:	79 01       	movw	r14, r18
    436c:	8a 01       	movw	r16, r20
    436e:	a8 01       	movw	r20, r16
    4370:	97 01       	movw	r18, r14
    4372:	22 0f       	add	r18, r18
    4374:	33 1f       	adc	r19, r19
    4376:	44 1f       	adc	r20, r20
    4378:	55 1f       	adc	r21, r21
    437a:	ce 01       	movw	r24, r28
    437c:	a0 e0       	ldi	r26, 0x00	; 0
    437e:	b0 e0       	ldi	r27, 0x00	; 0
    4380:	82 17       	cp	r24, r18
    4382:	93 07       	cpc	r25, r19
    4384:	a4 07       	cpc	r26, r20
    4386:	b5 07       	cpc	r27, r21
    4388:	28 f0       	brcs	.+10     	; 0x4394 <STEPPER_set_decel_step_values+0x66>
    438a:	f0 92 ba 04 	sts	0x04BA, r15
    438e:	e0 92 b9 04 	sts	0x04B9, r14
    4392:	33 c0       	rjmp	.+102    	; 0x43fa <STEPPER_set_decel_step_values+0xcc>
    4394:	d6 95       	lsr	r29
    4396:	c7 95       	ror	r28
    4398:	d0 93 ba 04 	sts	0x04BA, r29
    439c:	c0 93 b9 04 	sts	0x04B9, r28
    43a0:	2c c0       	rjmp	.+88     	; 0x43fa <STEPPER_set_decel_step_values+0xcc>
    43a2:	9a 01       	movw	r18, r20
    43a4:	40 e0       	ldi	r20, 0x00	; 0
    43a6:	50 e0       	ldi	r21, 0x00	; 0
    43a8:	ca 01       	movw	r24, r20
    43aa:	b9 01       	movw	r22, r18
    43ac:	0e 94 ee 2c 	call	0x59dc	; 0x59dc <__mulsi3>
    43b0:	20 91 af 04 	lds	r18, 0x04AF
    43b4:	30 91 b0 04 	lds	r19, 0x04B0
    43b8:	22 0f       	add	r18, r18
    43ba:	33 1f       	adc	r19, r19
    43bc:	40 e0       	ldi	r20, 0x00	; 0
    43be:	50 e0       	ldi	r21, 0x00	; 0
    43c0:	0e 94 20 2d 	call	0x5a40	; 0x5a40 <__udivmodsi4>
    43c4:	79 01       	movw	r14, r18
    43c6:	8a 01       	movw	r16, r20
    43c8:	a8 01       	movw	r20, r16
    43ca:	97 01       	movw	r18, r14
    43cc:	22 0f       	add	r18, r18
    43ce:	33 1f       	adc	r19, r19
    43d0:	44 1f       	adc	r20, r20
    43d2:	55 1f       	adc	r21, r21
    43d4:	ce 01       	movw	r24, r28
    43d6:	a0 e0       	ldi	r26, 0x00	; 0
    43d8:	b0 e0       	ldi	r27, 0x00	; 0
    43da:	82 17       	cp	r24, r18
    43dc:	93 07       	cpc	r25, r19
    43de:	a4 07       	cpc	r26, r20
    43e0:	b5 07       	cpc	r27, r21
    43e2:	28 f0       	brcs	.+10     	; 0x43ee <STEPPER_set_decel_step_values+0xc0>
    43e4:	f0 92 bc 04 	sts	0x04BC, r15
    43e8:	e0 92 bb 04 	sts	0x04BB, r14
    43ec:	06 c0       	rjmp	.+12     	; 0x43fa <STEPPER_set_decel_step_values+0xcc>
    43ee:	d6 95       	lsr	r29
    43f0:	c7 95       	ror	r28
    43f2:	d0 93 bc 04 	sts	0x04BC, r29
    43f6:	c0 93 bb 04 	sts	0x04BB, r28
    43fa:	df 91       	pop	r29
    43fc:	cf 91       	pop	r28
    43fe:	1f 91       	pop	r17
    4400:	0f 91       	pop	r16
    4402:	ff 90       	pop	r15
    4404:	ef 90       	pop	r14
    4406:	08 95       	ret

00004408 <__TIMER0_COMPA_vect>:
    4408:	0e 94 14 22 	call	0x4428	; 0x4428 <TMRSRVC_tick>
    440c:	0e 94 54 22 	call	0x44a8	; 0x44a8 <STEPPER_clk>
    4410:	0e 94 2d 22 	call	0x445a	; 0x445a <SPKR_beep_clk>
    4414:	08 95       	ret

00004416 <__TMRSRVC_init>:
    4416:	84 b5       	in	r24, 0x24	; 36
    4418:	82 60       	ori	r24, 0x02	; 2
    441a:	84 bd       	out	0x24, r24	; 36
    441c:	85 b5       	in	r24, 0x25	; 37
    441e:	84 60       	ori	r24, 0x04	; 4
    4420:	85 bd       	out	0x25, r24	; 37
    4422:	8e e4       	ldi	r24, 0x4E	; 78
    4424:	87 bd       	out	0x27, r24	; 39
    4426:	08 95       	ret

00004428 <TMRSRVC_tick>:
    4428:	88 e0       	ldi	r24, 0x08	; 8
    442a:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    442e:	88 23       	and	r24, r24
    4430:	11 f4       	brne	.+4      	; 0x4436 <TMRSRVC_tick+0xe>
    4432:	84 e0       	ldi	r24, 0x04	; 4
    4434:	08 95       	ret
    4436:	80 91 ac 02 	lds	r24, 0x02AC
    443a:	88 23       	and	r24, r24
    443c:	11 f4       	brne	.+4      	; 0x4442 <TMRSRVC_tick+0x1a>
    443e:	83 e0       	ldi	r24, 0x03	; 3
    4440:	08 95       	ret
    4442:	80 91 ab 02 	lds	r24, 0x02AB
    4446:	88 23       	and	r24, r24
    4448:	11 f0       	breq	.+4      	; 0x444e <TMRSRVC_tick+0x26>
    444a:	82 e0       	ldi	r24, 0x02	; 2
    444c:	08 95       	ret
    444e:	0e 94 c6 24 	call	0x498c	; 0x498c <TMRSRVC_process>
    4452:	81 30       	cpi	r24, 0x01	; 1
    4454:	e1 f3       	breq	.-8      	; 0x444e <TMRSRVC_tick+0x26>
    4456:	80 e0       	ldi	r24, 0x00	; 0
    4458:	08 95       	ret

0000445a <SPKR_beep_clk>:
    445a:	80 91 9c 02 	lds	r24, 0x029C
    445e:	81 30       	cpi	r24, 0x01	; 1
    4460:	11 f5       	brne	.+68     	; 0x44a6 <SPKR_beep_clk+0x4c>
    4462:	80 91 a5 02 	lds	r24, 0x02A5
    4466:	90 91 a6 02 	lds	r25, 0x02A6
    446a:	20 91 a7 02 	lds	r18, 0x02A7
    446e:	30 91 a8 02 	lds	r19, 0x02A8
    4472:	28 0f       	add	r18, r24
    4474:	39 1f       	adc	r19, r25
    4476:	30 93 a6 02 	sts	0x02A6, r19
    447a:	20 93 a5 02 	sts	0x02A5, r18
    447e:	80 91 a5 02 	lds	r24, 0x02A5
    4482:	90 91 a6 02 	lds	r25, 0x02A6
    4486:	88 5e       	subi	r24, 0xE8	; 232
    4488:	93 40       	sbci	r25, 0x03	; 3
    448a:	6c f0       	brlt	.+26     	; 0x44a6 <SPKR_beep_clk+0x4c>
    448c:	8b b1       	in	r24, 0x0b	; 11
    448e:	80 58       	subi	r24, 0x80	; 128
    4490:	8b b9       	out	0x0b, r24	; 11
    4492:	80 91 a5 02 	lds	r24, 0x02A5
    4496:	90 91 a6 02 	lds	r25, 0x02A6
    449a:	88 5e       	subi	r24, 0xE8	; 232
    449c:	93 40       	sbci	r25, 0x03	; 3
    449e:	90 93 a6 02 	sts	0x02A6, r25
    44a2:	80 93 a5 02 	sts	0x02A5, r24
    44a6:	08 95       	ret

000044a8 <STEPPER_clk>:
    44a8:	87 e0       	ldi	r24, 0x07	; 7
    44aa:	0e 94 53 18 	call	0x30a6	; 0x30a6 <SYS_get_state>
    44ae:	81 30       	cpi	r24, 0x01	; 1
    44b0:	09 f0       	breq	.+2      	; 0x44b4 <STEPPER_clk+0xc>
    44b2:	aa c0       	rjmp	.+340    	; 0x4608 <STEPPER_clk+0x160>
    44b4:	80 91 ad 04 	lds	r24, 0x04AD
    44b8:	90 91 ae 04 	lds	r25, 0x04AE
    44bc:	89 2b       	or	r24, r25
    44be:	09 f1       	breq	.+66     	; 0x4502 <STEPPER_clk+0x5a>
    44c0:	80 91 d1 04 	lds	r24, 0x04D1
    44c4:	90 91 d2 04 	lds	r25, 0x04D2
    44c8:	20 91 ad 04 	lds	r18, 0x04AD
    44cc:	30 91 ae 04 	lds	r19, 0x04AE
    44d0:	82 0f       	add	r24, r18
    44d2:	93 1f       	adc	r25, r19
    44d4:	90 93 d2 04 	sts	0x04D2, r25
    44d8:	80 93 d1 04 	sts	0x04D1, r24
    44dc:	80 91 d1 04 	lds	r24, 0x04D1
    44e0:	90 91 d2 04 	lds	r25, 0x04D2
    44e4:	88 5e       	subi	r24, 0xE8	; 232
    44e6:	93 40       	sbci	r25, 0x03	; 3
    44e8:	a4 f0       	brlt	.+40     	; 0x4512 <STEPPER_clk+0x6a>
    44ea:	80 91 d1 04 	lds	r24, 0x04D1
    44ee:	90 91 d2 04 	lds	r25, 0x04D2
    44f2:	88 5e       	subi	r24, 0xE8	; 232
    44f4:	93 40       	sbci	r25, 0x03	; 3
    44f6:	90 93 d2 04 	sts	0x04D2, r25
    44fa:	80 93 d1 04 	sts	0x04D1, r24
    44fe:	41 e0       	ldi	r20, 0x01	; 1
    4500:	09 c0       	rjmp	.+18     	; 0x4514 <STEPPER_clk+0x6c>
    4502:	80 91 a5 04 	lds	r24, 0x04A5
    4506:	90 91 a6 04 	lds	r25, 0x04A6
    450a:	90 93 aa 04 	sts	0x04AA, r25
    450e:	80 93 a9 04 	sts	0x04A9, r24
    4512:	40 e0       	ldi	r20, 0x00	; 0
    4514:	80 91 af 04 	lds	r24, 0x04AF
    4518:	90 91 b0 04 	lds	r25, 0x04B0
    451c:	89 2b       	or	r24, r25
    451e:	09 f1       	breq	.+66     	; 0x4562 <STEPPER_clk+0xba>
    4520:	80 91 d3 04 	lds	r24, 0x04D3
    4524:	90 91 d4 04 	lds	r25, 0x04D4
    4528:	20 91 af 04 	lds	r18, 0x04AF
    452c:	30 91 b0 04 	lds	r19, 0x04B0
    4530:	82 0f       	add	r24, r18
    4532:	93 1f       	adc	r25, r19
    4534:	90 93 d4 04 	sts	0x04D4, r25
    4538:	80 93 d3 04 	sts	0x04D3, r24
    453c:	80 91 d3 04 	lds	r24, 0x04D3
    4540:	90 91 d4 04 	lds	r25, 0x04D4
    4544:	88 5e       	subi	r24, 0xE8	; 232
    4546:	93 40       	sbci	r25, 0x03	; 3
    4548:	a4 f0       	brlt	.+40     	; 0x4572 <STEPPER_clk+0xca>
    454a:	80 91 d3 04 	lds	r24, 0x04D3
    454e:	90 91 d4 04 	lds	r25, 0x04D4
    4552:	88 5e       	subi	r24, 0xE8	; 232
    4554:	93 40       	sbci	r25, 0x03	; 3
    4556:	90 93 d4 04 	sts	0x04D4, r25
    455a:	80 93 d3 04 	sts	0x04D3, r24
    455e:	61 e0       	ldi	r22, 0x01	; 1
    4560:	09 c0       	rjmp	.+18     	; 0x4574 <STEPPER_clk+0xcc>
    4562:	80 91 a7 04 	lds	r24, 0x04A7
    4566:	90 91 a8 04 	lds	r25, 0x04A8
    456a:	90 93 ac 04 	sts	0x04AC, r25
    456e:	80 93 ab 04 	sts	0x04AB, r24
    4572:	60 e0       	ldi	r22, 0x00	; 0
    4574:	84 2f       	mov	r24, r20
    4576:	0e 94 05 23 	call	0x460a	; 0x460a <STEPPER_process_accel>
    457a:	80 91 cd 04 	lds	r24, 0x04CD
    457e:	90 91 ce 04 	lds	r25, 0x04CE
    4582:	20 91 a9 04 	lds	r18, 0x04A9
    4586:	30 91 aa 04 	lds	r19, 0x04AA
    458a:	28 0f       	add	r18, r24
    458c:	39 1f       	adc	r19, r25
    458e:	30 93 ce 04 	sts	0x04CE, r19
    4592:	20 93 cd 04 	sts	0x04CD, r18
    4596:	80 91 cd 04 	lds	r24, 0x04CD
    459a:	90 91 ce 04 	lds	r25, 0x04CE
    459e:	88 5e       	subi	r24, 0xE8	; 232
    45a0:	93 40       	sbci	r25, 0x03	; 3
    45a2:	14 f4       	brge	.+4      	; 0x45a8 <STEPPER_clk+0x100>
    45a4:	40 e0       	ldi	r20, 0x00	; 0
    45a6:	0b c0       	rjmp	.+22     	; 0x45be <STEPPER_clk+0x116>
    45a8:	80 91 cd 04 	lds	r24, 0x04CD
    45ac:	90 91 ce 04 	lds	r25, 0x04CE
    45b0:	88 5e       	subi	r24, 0xE8	; 232
    45b2:	93 40       	sbci	r25, 0x03	; 3
    45b4:	90 93 ce 04 	sts	0x04CE, r25
    45b8:	80 93 cd 04 	sts	0x04CD, r24
    45bc:	41 e0       	ldi	r20, 0x01	; 1
    45be:	80 91 cf 04 	lds	r24, 0x04CF
    45c2:	90 91 d0 04 	lds	r25, 0x04D0
    45c6:	20 91 ab 04 	lds	r18, 0x04AB
    45ca:	30 91 ac 04 	lds	r19, 0x04AC
    45ce:	28 0f       	add	r18, r24
    45d0:	39 1f       	adc	r19, r25
    45d2:	30 93 d0 04 	sts	0x04D0, r19
    45d6:	20 93 cf 04 	sts	0x04CF, r18
    45da:	80 91 cf 04 	lds	r24, 0x04CF
    45de:	90 91 d0 04 	lds	r25, 0x04D0
    45e2:	88 5e       	subi	r24, 0xE8	; 232
    45e4:	93 40       	sbci	r25, 0x03	; 3
    45e6:	14 f4       	brge	.+4      	; 0x45ec <STEPPER_clk+0x144>
    45e8:	60 e0       	ldi	r22, 0x00	; 0
    45ea:	0b c0       	rjmp	.+22     	; 0x4602 <STEPPER_clk+0x15a>
    45ec:	80 91 cf 04 	lds	r24, 0x04CF
    45f0:	90 91 d0 04 	lds	r25, 0x04D0
    45f4:	88 5e       	subi	r24, 0xE8	; 232
    45f6:	93 40       	sbci	r25, 0x03	; 3
    45f8:	90 93 d0 04 	sts	0x04D0, r25
    45fc:	80 93 cf 04 	sts	0x04CF, r24
    4600:	61 e0       	ldi	r22, 0x01	; 1
    4602:	84 2f       	mov	r24, r20
    4604:	0e 94 4a 23 	call	0x4694	; 0x4694 <STEPPER_process_run_mode>
    4608:	08 95       	ret

0000460a <STEPPER_process_accel>:
    460a:	88 23       	and	r24, r24
    460c:	f1 f0       	breq	.+60     	; 0x464a <STEPPER_process_accel+0x40>
    460e:	20 91 a5 04 	lds	r18, 0x04A5
    4612:	30 91 a6 04 	lds	r19, 0x04A6
    4616:	80 91 a9 04 	lds	r24, 0x04A9
    461a:	90 91 aa 04 	lds	r25, 0x04AA
    461e:	28 1b       	sub	r18, r24
    4620:	39 0b       	sbc	r19, r25
    4622:	12 16       	cp	r1, r18
    4624:	13 06       	cpc	r1, r19
    4626:	34 f4       	brge	.+12     	; 0x4634 <STEPPER_process_accel+0x2a>
    4628:	80 91 a9 04 	lds	r24, 0x04A9
    462c:	90 91 aa 04 	lds	r25, 0x04AA
    4630:	01 96       	adiw	r24, 0x01	; 1
    4632:	07 c0       	rjmp	.+14     	; 0x4642 <STEPPER_process_accel+0x38>
    4634:	23 2b       	or	r18, r19
    4636:	49 f0       	breq	.+18     	; 0x464a <STEPPER_process_accel+0x40>
    4638:	80 91 a9 04 	lds	r24, 0x04A9
    463c:	90 91 aa 04 	lds	r25, 0x04AA
    4640:	01 97       	sbiw	r24, 0x01	; 1
    4642:	90 93 aa 04 	sts	0x04AA, r25
    4646:	80 93 a9 04 	sts	0x04A9, r24
    464a:	66 23       	and	r22, r22
    464c:	11 f1       	breq	.+68     	; 0x4692 <STEPPER_process_accel+0x88>
    464e:	20 91 a7 04 	lds	r18, 0x04A7
    4652:	30 91 a8 04 	lds	r19, 0x04A8
    4656:	80 91 ab 04 	lds	r24, 0x04AB
    465a:	90 91 ac 04 	lds	r25, 0x04AC
    465e:	28 1b       	sub	r18, r24
    4660:	39 0b       	sbc	r19, r25
    4662:	12 16       	cp	r1, r18
    4664:	13 06       	cpc	r1, r19
    4666:	54 f4       	brge	.+20     	; 0x467c <STEPPER_process_accel+0x72>
    4668:	80 91 ab 04 	lds	r24, 0x04AB
    466c:	90 91 ac 04 	lds	r25, 0x04AC
    4670:	01 96       	adiw	r24, 0x01	; 1
    4672:	90 93 ac 04 	sts	0x04AC, r25
    4676:	80 93 ab 04 	sts	0x04AB, r24
    467a:	08 95       	ret
    467c:	23 2b       	or	r18, r19
    467e:	49 f0       	breq	.+18     	; 0x4692 <STEPPER_process_accel+0x88>
    4680:	80 91 ab 04 	lds	r24, 0x04AB
    4684:	90 91 ac 04 	lds	r25, 0x04AC
    4688:	01 97       	sbiw	r24, 0x01	; 1
    468a:	90 93 ac 04 	sts	0x04AC, r25
    468e:	80 93 ab 04 	sts	0x04AB, r24
    4692:	08 95       	ret

00004694 <STEPPER_process_run_mode>:
    4694:	0f 93       	push	r16
    4696:	1f 93       	push	r17
    4698:	18 2f       	mov	r17, r24
    469a:	06 2f       	mov	r16, r22
    469c:	80 91 d9 04 	lds	r24, 0x04D9
    46a0:	88 23       	and	r24, r24
    46a2:	09 f0       	breq	.+2      	; 0x46a6 <STEPPER_process_run_mode+0x12>
    46a4:	e7 c0       	rjmp	.+462    	; 0x4874 <STEPPER_process_run_mode+0x1e0>
    46a6:	80 91 c1 04 	lds	r24, 0x04C1
    46aa:	88 23       	and	r24, r24
    46ac:	09 f0       	breq	.+2      	; 0x46b0 <STEPPER_process_run_mode+0x1c>
    46ae:	5a c0       	rjmp	.+180    	; 0x4764 <STEPPER_process_run_mode+0xd0>
    46b0:	80 91 a9 04 	lds	r24, 0x04A9
    46b4:	90 91 aa 04 	lds	r25, 0x04AA
    46b8:	89 2b       	or	r24, r25
    46ba:	e9 f4       	brne	.+58     	; 0x46f6 <STEPPER_process_run_mode+0x62>
    46bc:	80 91 ad 02 	lds	r24, 0x02AD
    46c0:	83 7e       	andi	r24, 0xE3	; 227
    46c2:	80 93 ad 02 	sts	0x02AD, r24
    46c6:	10 92 ca 04 	sts	0x04CA, r1
    46ca:	80 91 d5 04 	lds	r24, 0x04D5
    46ce:	88 23       	and	r24, r24
    46d0:	09 f4       	brne	.+2      	; 0x46d4 <STEPPER_process_run_mode+0x40>
    46d2:	5d c0       	rjmp	.+186    	; 0x478e <STEPPER_process_run_mode+0xfa>
    46d4:	60 91 c3 04 	lds	r22, 0x04C3
    46d8:	80 e0       	ldi	r24, 0x00	; 0
    46da:	0e 94 a1 24 	call	0x4942	; 0x4942 <STEPPER_stop>
    46de:	e0 91 d7 04 	lds	r30, 0x04D7
    46e2:	f0 91 d8 04 	lds	r31, 0x04D8
    46e6:	30 97       	sbiw	r30, 0x00	; 0
    46e8:	09 f4       	brne	.+2      	; 0x46ec <STEPPER_process_run_mode+0x58>
    46ea:	51 c0       	rjmp	.+162    	; 0x478e <STEPPER_process_run_mode+0xfa>
    46ec:	81 e0       	ldi	r24, 0x01	; 1
    46ee:	80 83       	st	Z, r24
    46f0:	10 92 d5 04 	sts	0x04D5, r1
    46f4:	4c c0       	rjmp	.+152    	; 0x478e <STEPPER_process_run_mode+0xfa>
    46f6:	80 91 a3 04 	lds	r24, 0x04A3
    46fa:	81 30       	cpi	r24, 0x01	; 1
    46fc:	41 f4       	brne	.+16     	; 0x470e <STEPPER_process_run_mode+0x7a>
    46fe:	80 91 b5 04 	lds	r24, 0x04B5
    4702:	90 91 b6 04 	lds	r25, 0x04B6
    4706:	01 97       	sbiw	r24, 0x01	; 1
    4708:	11 f4       	brne	.+4      	; 0x470e <STEPPER_process_run_mode+0x7a>
    470a:	11 e0       	ldi	r17, 0x01	; 1
    470c:	02 c0       	rjmp	.+4      	; 0x4712 <STEPPER_process_run_mode+0x7e>
    470e:	11 23       	and	r17, r17
    4710:	f1 f1       	breq	.+124    	; 0x478e <STEPPER_process_run_mode+0xfa>
    4712:	e0 91 c8 04 	lds	r30, 0x04C8
    4716:	f0 e0       	ldi	r31, 0x00	; 0
    4718:	e6 54       	subi	r30, 0x46	; 70
    471a:	fe 4f       	sbci	r31, 0xFE	; 254
    471c:	90 91 ad 02 	lds	r25, 0x02AD
    4720:	93 7e       	andi	r25, 0xE3	; 227
    4722:	80 81       	ld	r24, Z
    4724:	89 2b       	or	r24, r25
    4726:	80 93 ad 02 	sts	0x02AD, r24
    472a:	80 91 c6 04 	lds	r24, 0x04C6
    472e:	88 23       	and	r24, r24
    4730:	21 f4       	brne	.+8      	; 0x473a <STEPPER_process_run_mode+0xa6>
    4732:	80 91 c8 04 	lds	r24, 0x04C8
    4736:	8f 5f       	subi	r24, 0xFF	; 255
    4738:	03 c0       	rjmp	.+6      	; 0x4740 <STEPPER_process_run_mode+0xac>
    473a:	80 91 c8 04 	lds	r24, 0x04C8
    473e:	81 50       	subi	r24, 0x01	; 1
    4740:	80 93 c8 04 	sts	0x04C8, r24
    4744:	80 91 c8 04 	lds	r24, 0x04C8
    4748:	83 70       	andi	r24, 0x03	; 3
    474a:	80 93 c8 04 	sts	0x04C8, r24
    474e:	81 e0       	ldi	r24, 0x01	; 1
    4750:	80 93 ca 04 	sts	0x04CA, r24
    4754:	80 91 a3 04 	lds	r24, 0x04A3
    4758:	81 30       	cpi	r24, 0x01	; 1
    475a:	c9 f4       	brne	.+50     	; 0x478e <STEPPER_process_run_mode+0xfa>
    475c:	80 e0       	ldi	r24, 0x00	; 0
    475e:	0e 94 4d 24 	call	0x489a	; 0x489a <STEPPER_process_step_mode>
    4762:	15 c0       	rjmp	.+42     	; 0x478e <STEPPER_process_run_mode+0xfa>
    4764:	90 91 ad 02 	lds	r25, 0x02AD
    4768:	93 7e       	andi	r25, 0xE3	; 227
    476a:	90 93 ad 02 	sts	0x02AD, r25
    476e:	e0 91 c8 04 	lds	r30, 0x04C8
    4772:	f0 e0       	ldi	r31, 0x00	; 0
    4774:	e6 54       	subi	r30, 0x46	; 70
    4776:	fe 4f       	sbci	r31, 0xFE	; 254
    4778:	80 81       	ld	r24, Z
    477a:	89 2b       	or	r24, r25
    477c:	80 93 ad 02 	sts	0x02AD, r24
    4780:	82 e0       	ldi	r24, 0x02	; 2
    4782:	80 93 ca 04 	sts	0x04CA, r24
    4786:	10 92 aa 04 	sts	0x04AA, r1
    478a:	10 92 a9 04 	sts	0x04A9, r1
    478e:	80 91 c2 04 	lds	r24, 0x04C2
    4792:	88 23       	and	r24, r24
    4794:	09 f0       	breq	.+2      	; 0x4798 <STEPPER_process_run_mode+0x104>
    4796:	59 c0       	rjmp	.+178    	; 0x484a <STEPPER_process_run_mode+0x1b6>
    4798:	80 91 ab 04 	lds	r24, 0x04AB
    479c:	90 91 ac 04 	lds	r25, 0x04AC
    47a0:	89 2b       	or	r24, r25
    47a2:	e9 f4       	brne	.+58     	; 0x47de <STEPPER_process_run_mode+0x14a>
    47a4:	80 91 ad 02 	lds	r24, 0x02AD
    47a8:	8f 71       	andi	r24, 0x1F	; 31
    47aa:	80 93 ad 02 	sts	0x02AD, r24
    47ae:	10 92 cb 04 	sts	0x04CB, r1
    47b2:	80 91 d6 04 	lds	r24, 0x04D6
    47b6:	88 23       	and	r24, r24
    47b8:	09 f4       	brne	.+2      	; 0x47bc <STEPPER_process_run_mode+0x128>
    47ba:	5c c0       	rjmp	.+184    	; 0x4874 <STEPPER_process_run_mode+0x1e0>
    47bc:	60 91 c4 04 	lds	r22, 0x04C4
    47c0:	81 e0       	ldi	r24, 0x01	; 1
    47c2:	0e 94 a1 24 	call	0x4942	; 0x4942 <STEPPER_stop>
    47c6:	e0 91 d7 04 	lds	r30, 0x04D7
    47ca:	f0 91 d8 04 	lds	r31, 0x04D8
    47ce:	30 97       	sbiw	r30, 0x00	; 0
    47d0:	09 f4       	brne	.+2      	; 0x47d4 <STEPPER_process_run_mode+0x140>
    47d2:	50 c0       	rjmp	.+160    	; 0x4874 <STEPPER_process_run_mode+0x1e0>
    47d4:	81 e0       	ldi	r24, 0x01	; 1
    47d6:	81 83       	std	Z+1, r24	; 0x01
    47d8:	10 92 d6 04 	sts	0x04D6, r1
    47dc:	4b c0       	rjmp	.+150    	; 0x4874 <STEPPER_process_run_mode+0x1e0>
    47de:	80 91 a4 04 	lds	r24, 0x04A4
    47e2:	81 30       	cpi	r24, 0x01	; 1
    47e4:	41 f4       	brne	.+16     	; 0x47f6 <STEPPER_process_run_mode+0x162>
    47e6:	80 91 b7 04 	lds	r24, 0x04B7
    47ea:	90 91 b8 04 	lds	r25, 0x04B8
    47ee:	01 97       	sbiw	r24, 0x01	; 1
    47f0:	11 f4       	brne	.+4      	; 0x47f6 <STEPPER_process_run_mode+0x162>
    47f2:	01 e0       	ldi	r16, 0x01	; 1
    47f4:	02 c0       	rjmp	.+4      	; 0x47fa <STEPPER_process_run_mode+0x166>
    47f6:	00 23       	and	r16, r16
    47f8:	e9 f1       	breq	.+122    	; 0x4874 <STEPPER_process_run_mode+0x1e0>
    47fa:	e0 91 c9 04 	lds	r30, 0x04C9
    47fe:	f0 e0       	ldi	r31, 0x00	; 0
    4800:	e2 54       	subi	r30, 0x42	; 66
    4802:	fe 4f       	sbci	r31, 0xFE	; 254
    4804:	90 91 ad 02 	lds	r25, 0x02AD
    4808:	9f 71       	andi	r25, 0x1F	; 31
    480a:	80 81       	ld	r24, Z
    480c:	89 2b       	or	r24, r25
    480e:	80 93 ad 02 	sts	0x02AD, r24
    4812:	80 91 c7 04 	lds	r24, 0x04C7
    4816:	88 23       	and	r24, r24
    4818:	21 f4       	brne	.+8      	; 0x4822 <STEPPER_process_run_mode+0x18e>
    481a:	80 91 c9 04 	lds	r24, 0x04C9
    481e:	8f 5f       	subi	r24, 0xFF	; 255
    4820:	03 c0       	rjmp	.+6      	; 0x4828 <STEPPER_process_run_mode+0x194>
    4822:	80 91 c9 04 	lds	r24, 0x04C9
    4826:	81 50       	subi	r24, 0x01	; 1
    4828:	80 93 c9 04 	sts	0x04C9, r24
    482c:	80 91 c9 04 	lds	r24, 0x04C9
    4830:	83 70       	andi	r24, 0x03	; 3
    4832:	80 93 c9 04 	sts	0x04C9, r24
    4836:	81 e0       	ldi	r24, 0x01	; 1
    4838:	80 93 cb 04 	sts	0x04CB, r24
    483c:	80 91 a4 04 	lds	r24, 0x04A4
    4840:	81 30       	cpi	r24, 0x01	; 1
    4842:	c1 f4       	brne	.+48     	; 0x4874 <STEPPER_process_run_mode+0x1e0>
    4844:	0e 94 4d 24 	call	0x489a	; 0x489a <STEPPER_process_step_mode>
    4848:	15 c0       	rjmp	.+42     	; 0x4874 <STEPPER_process_run_mode+0x1e0>
    484a:	90 91 ad 02 	lds	r25, 0x02AD
    484e:	9f 71       	andi	r25, 0x1F	; 31
    4850:	90 93 ad 02 	sts	0x02AD, r25
    4854:	e0 91 c9 04 	lds	r30, 0x04C9
    4858:	f0 e0       	ldi	r31, 0x00	; 0
    485a:	e2 54       	subi	r30, 0x42	; 66
    485c:	fe 4f       	sbci	r31, 0xFE	; 254
    485e:	80 81       	ld	r24, Z
    4860:	89 2b       	or	r24, r25
    4862:	80 93 ad 02 	sts	0x02AD, r24
    4866:	82 e0       	ldi	r24, 0x02	; 2
    4868:	80 93 cb 04 	sts	0x04CB, r24
    486c:	10 92 ac 04 	sts	0x04AC, r1
    4870:	10 92 ab 04 	sts	0x04AB, r1
    4874:	80 91 cc 04 	lds	r24, 0x04CC
    4878:	88 23       	and	r24, r24
    487a:	31 f4       	brne	.+12     	; 0x4888 <STEPPER_process_run_mode+0x1f4>
    487c:	8d ea       	ldi	r24, 0xAD	; 173
    487e:	92 e0       	ldi	r25, 0x02	; 2
    4880:	61 2f       	mov	r22, r17
    4882:	40 2f       	mov	r20, r16
    4884:	0e 94 34 25 	call	0x4a68	; 0x4a68 <STEPPER_process_pwm>
    4888:	88 b1       	in	r24, 0x08	; 8
    488a:	83 70       	andi	r24, 0x03	; 3
    488c:	90 91 ad 02 	lds	r25, 0x02AD
    4890:	89 2b       	or	r24, r25
    4892:	88 b9       	out	0x08, r24	; 8
    4894:	1f 91       	pop	r17
    4896:	0f 91       	pop	r16
    4898:	08 95       	ret

0000489a <STEPPER_process_step_mode>:
    489a:	88 23       	and	r24, r24
    489c:	21 f0       	breq	.+8      	; 0x48a6 <STEPPER_process_step_mode+0xc>
    489e:	81 30       	cpi	r24, 0x01	; 1
    48a0:	09 f0       	breq	.+2      	; 0x48a4 <STEPPER_process_step_mode+0xa>
    48a2:	4e c0       	rjmp	.+156    	; 0x4940 <STEPPER_process_step_mode+0xa6>
    48a4:	27 c0       	rjmp	.+78     	; 0x48f4 <STEPPER_process_step_mode+0x5a>
    48a6:	80 91 b5 04 	lds	r24, 0x04B5
    48aa:	90 91 b6 04 	lds	r25, 0x04B6
    48ae:	89 2b       	or	r24, r25
    48b0:	49 f0       	breq	.+18     	; 0x48c4 <STEPPER_process_step_mode+0x2a>
    48b2:	80 91 b5 04 	lds	r24, 0x04B5
    48b6:	90 91 b6 04 	lds	r25, 0x04B6
    48ba:	01 97       	sbiw	r24, 0x01	; 1
    48bc:	90 93 b6 04 	sts	0x04B6, r25
    48c0:	80 93 b5 04 	sts	0x04B5, r24
    48c4:	80 91 d5 04 	lds	r24, 0x04D5
    48c8:	88 23       	and	r24, r24
    48ca:	d1 f5       	brne	.+116    	; 0x4940 <STEPPER_process_step_mode+0xa6>
    48cc:	20 91 b5 04 	lds	r18, 0x04B5
    48d0:	30 91 b6 04 	lds	r19, 0x04B6
    48d4:	80 91 b9 04 	lds	r24, 0x04B9
    48d8:	90 91 ba 04 	lds	r25, 0x04BA
    48dc:	28 17       	cp	r18, r24
    48de:	39 07       	cpc	r19, r25
    48e0:	79 f5       	brne	.+94     	; 0x4940 <STEPPER_process_step_mode+0xa6>
    48e2:	80 e0       	ldi	r24, 0x00	; 0
    48e4:	60 e0       	ldi	r22, 0x00	; 0
    48e6:	70 e0       	ldi	r23, 0x00	; 0
    48e8:	0e 94 57 17 	call	0x2eae	; 0x2eae <STEPPER_set_speed>
    48ec:	81 e0       	ldi	r24, 0x01	; 1
    48ee:	80 93 d5 04 	sts	0x04D5, r24
    48f2:	08 95       	ret
    48f4:	80 91 b7 04 	lds	r24, 0x04B7
    48f8:	90 91 b8 04 	lds	r25, 0x04B8
    48fc:	89 2b       	or	r24, r25
    48fe:	49 f0       	breq	.+18     	; 0x4912 <STEPPER_process_step_mode+0x78>
    4900:	80 91 b7 04 	lds	r24, 0x04B7
    4904:	90 91 b8 04 	lds	r25, 0x04B8
    4908:	01 97       	sbiw	r24, 0x01	; 1
    490a:	90 93 b8 04 	sts	0x04B8, r25
    490e:	80 93 b7 04 	sts	0x04B7, r24
    4912:	80 91 d6 04 	lds	r24, 0x04D6
    4916:	88 23       	and	r24, r24
    4918:	99 f4       	brne	.+38     	; 0x4940 <STEPPER_process_step_mode+0xa6>
    491a:	20 91 b7 04 	lds	r18, 0x04B7
    491e:	30 91 b8 04 	lds	r19, 0x04B8
    4922:	80 91 bb 04 	lds	r24, 0x04BB
    4926:	90 91 bc 04 	lds	r25, 0x04BC
    492a:	28 17       	cp	r18, r24
    492c:	39 07       	cpc	r19, r25
    492e:	41 f4       	brne	.+16     	; 0x4940 <STEPPER_process_step_mode+0xa6>
    4930:	81 e0       	ldi	r24, 0x01	; 1
    4932:	60 e0       	ldi	r22, 0x00	; 0
    4934:	70 e0       	ldi	r23, 0x00	; 0
    4936:	0e 94 57 17 	call	0x2eae	; 0x2eae <STEPPER_set_speed>
    493a:	81 e0       	ldi	r24, 0x01	; 1
    493c:	80 93 d6 04 	sts	0x04D6, r24
    4940:	08 95       	ret

00004942 <STEPPER_stop>:
    4942:	0f 93       	push	r16
    4944:	1f 93       	push	r17
    4946:	18 2f       	mov	r17, r24
    4948:	06 2f       	mov	r16, r22
    494a:	66 23       	and	r22, r22
    494c:	49 f4       	brne	.+18     	; 0x4960 <STEPPER_stop+0x1e>
    494e:	60 e0       	ldi	r22, 0x00	; 0
    4950:	70 e0       	ldi	r23, 0x00	; 0
    4952:	0e 94 57 17 	call	0x2eae	; 0x2eae <STEPPER_set_speed>
    4956:	81 2f       	mov	r24, r17
    4958:	60 e0       	ldi	r22, 0x00	; 0
    495a:	70 e0       	ldi	r23, 0x00	; 0
    495c:	0e 94 f1 1f 	call	0x3fe2	; 0x3fe2 <STEPPER_set_steps>
    4960:	81 e0       	ldi	r24, 0x01	; 1
    4962:	80 93 d9 04 	sts	0x04D9, r24
    4966:	11 30       	cpi	r17, 0x01	; 1
    4968:	51 f0       	breq	.+20     	; 0x497e <STEPPER_stop+0x3c>
    496a:	11 30       	cpi	r17, 0x01	; 1
    496c:	18 f0       	brcs	.+6      	; 0x4974 <STEPPER_stop+0x32>
    496e:	12 30       	cpi	r17, 0x02	; 2
    4970:	41 f4       	brne	.+16     	; 0x4982 <STEPPER_stop+0x40>
    4972:	03 c0       	rjmp	.+6      	; 0x497a <STEPPER_stop+0x38>
    4974:	00 93 c1 04 	sts	0x04C1, r16
    4978:	04 c0       	rjmp	.+8      	; 0x4982 <STEPPER_stop+0x40>
    497a:	00 93 c1 04 	sts	0x04C1, r16
    497e:	00 93 c2 04 	sts	0x04C2, r16
    4982:	10 92 d9 04 	sts	0x04D9, r1
    4986:	1f 91       	pop	r17
    4988:	0f 91       	pop	r16
    498a:	08 95       	ret

0000498c <TMRSRVC_process>:
    498c:	ff 92       	push	r15
    498e:	0f 93       	push	r16
    4990:	1f 93       	push	r17
    4992:	cf 93       	push	r28
    4994:	df 93       	push	r29
    4996:	80 91 13 05 	lds	r24, 0x0513
    499a:	88 23       	and	r24, r24
    499c:	09 f4       	brne	.+2      	; 0x49a0 <TMRSRVC_process+0x14>
    499e:	59 c0       	rjmp	.+178    	; 0x4a52 <TMRSRVC_process+0xc6>
    49a0:	00 91 14 05 	lds	r16, 0x0514
    49a4:	10 91 15 05 	lds	r17, 0x0515
    49a8:	f8 01       	movw	r30, r16
    49aa:	c0 81       	ld	r28, Z
    49ac:	d1 81       	ldd	r29, Z+1	; 0x01
    49ae:	8c 81       	ldd	r24, Y+4	; 0x04
    49b0:	9d 81       	ldd	r25, Y+5	; 0x05
    49b2:	01 97       	sbiw	r24, 0x01	; 1
    49b4:	9d 83       	std	Y+5, r25	; 0x05
    49b6:	8c 83       	std	Y+4, r24	; 0x04
    49b8:	18 16       	cp	r1, r24
    49ba:	19 06       	cpc	r1, r25
    49bc:	0c f4       	brge	.+2      	; 0x49c0 <TMRSRVC_process+0x34>
    49be:	49 c0       	rjmp	.+146    	; 0x4a52 <TMRSRVC_process+0xc6>
    49c0:	89 81       	ldd	r24, Y+1	; 0x01
    49c2:	80 ff       	sbrs	r24, 0
    49c4:	05 c0       	rjmp	.+10     	; 0x49d0 <TMRSRVC_process+0x44>
    49c6:	8e 81       	ldd	r24, Y+6	; 0x06
    49c8:	88 23       	and	r24, r24
    49ca:	11 f4       	brne	.+4      	; 0x49d0 <TMRSRVC_process+0x44>
    49cc:	81 e0       	ldi	r24, 0x01	; 1
    49ce:	8e 83       	std	Y+6, r24	; 0x06
    49d0:	89 81       	ldd	r24, Y+1	; 0x01
    49d2:	81 ff       	sbrs	r24, 1
    49d4:	03 c0       	rjmp	.+6      	; 0x49dc <TMRSRVC_process+0x50>
    49d6:	ef 81       	ldd	r30, Y+7	; 0x07
    49d8:	f8 85       	ldd	r31, Y+8	; 0x08
    49da:	09 95       	icall
    49dc:	80 91 13 05 	lds	r24, 0x0513
    49e0:	82 30       	cpi	r24, 0x02	; 2
    49e2:	a8 f0       	brcs	.+42     	; 0x4a0e <TMRSRVC_process+0x82>
    49e4:	f8 01       	movw	r30, r16
    49e6:	82 81       	ldd	r24, Z+2	; 0x02
    49e8:	93 81       	ldd	r25, Z+3	; 0x03
    49ea:	90 93 15 05 	sts	0x0515, r25
    49ee:	80 93 14 05 	sts	0x0514, r24
    49f2:	13 82       	std	Z+3, r1	; 0x03
    49f4:	12 82       	std	Z+2, r1	; 0x02
    49f6:	e0 91 00 00 	lds	r30, 0x0000
    49fa:	f0 91 01 00 	lds	r31, 0x0001
    49fe:	84 81       	ldd	r24, Z+4	; 0x04
    4a00:	95 81       	ldd	r25, Z+5	; 0x05
    4a02:	18 16       	cp	r1, r24
    4a04:	19 06       	cpc	r1, r25
    4a06:	3c f0       	brlt	.+14     	; 0x4a16 <TMRSRVC_process+0x8a>
    4a08:	ff 24       	eor	r15, r15
    4a0a:	f3 94       	inc	r15
    4a0c:	05 c0       	rjmp	.+10     	; 0x4a18 <TMRSRVC_process+0x8c>
    4a0e:	10 92 15 05 	sts	0x0515, r1
    4a12:	10 92 14 05 	sts	0x0514, r1
    4a16:	ff 24       	eor	r15, r15
    4a18:	80 91 13 05 	lds	r24, 0x0513
    4a1c:	81 50       	subi	r24, 0x01	; 1
    4a1e:	80 93 13 05 	sts	0x0513, r24
    4a22:	80 91 13 05 	lds	r24, 0x0513
    4a26:	88 23       	and	r24, r24
    4a28:	11 f4       	brne	.+4      	; 0x4a2e <TMRSRVC_process+0xa2>
    4a2a:	0e 94 31 25 	call	0x4a62	; 0x4a62 <TMRSRVC_stop>
    4a2e:	89 81       	ldd	r24, Y+1	; 0x01
    4a30:	82 ff       	sbrs	r24, 2
    4a32:	08 c0       	rjmp	.+16     	; 0x4a44 <TMRSRVC_process+0xb8>
    4a34:	8a 81       	ldd	r24, Y+2	; 0x02
    4a36:	9b 81       	ldd	r25, Y+3	; 0x03
    4a38:	9d 83       	std	Y+5, r25	; 0x05
    4a3a:	8c 83       	std	Y+4, r24	; 0x04
    4a3c:	c8 01       	movw	r24, r16
    4a3e:	0e 94 81 20 	call	0x4102	; 0x4102 <TMRSRVC_insert>
    4a42:	08 c0       	rjmp	.+16     	; 0x4a54 <TMRSRVC_process+0xc8>
    4a44:	c8 01       	movw	r24, r16
    4a46:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <free>
    4a4a:	89 81       	ldd	r24, Y+1	; 0x01
    4a4c:	8f 7e       	andi	r24, 0xEF	; 239
    4a4e:	89 83       	std	Y+1, r24	; 0x01
    4a50:	01 c0       	rjmp	.+2      	; 0x4a54 <TMRSRVC_process+0xc8>
    4a52:	ff 24       	eor	r15, r15
    4a54:	8f 2d       	mov	r24, r15
    4a56:	df 91       	pop	r29
    4a58:	cf 91       	pop	r28
    4a5a:	1f 91       	pop	r17
    4a5c:	0f 91       	pop	r16
    4a5e:	ff 90       	pop	r15
    4a60:	08 95       	ret

00004a62 <TMRSRVC_stop>:
    4a62:	10 92 ac 02 	sts	0x02AC, r1
    4a66:	08 95       	ret

00004a68 <STEPPER_process_pwm>:
    4a68:	fc 01       	movw	r30, r24
    4a6a:	80 91 ca 04 	lds	r24, 0x04CA
    4a6e:	82 30       	cpi	r24, 0x02	; 2
    4a70:	69 f4       	brne	.+26     	; 0x4a8c <STEPPER_process_pwm+0x24>
    4a72:	80 91 b1 02 	lds	r24, 0x02B1
    4a76:	91 e0       	ldi	r25, 0x01	; 1
    4a78:	89 27       	eor	r24, r25
    4a7a:	80 93 b1 02 	sts	0x02B1, r24
    4a7e:	88 23       	and	r24, r24
    4a80:	09 f0       	breq	.+2      	; 0x4a84 <STEPPER_process_pwm+0x1c>
    4a82:	3e c0       	rjmp	.+124    	; 0x4b00 <STEPPER_process_pwm+0x98>
    4a84:	80 81       	ld	r24, Z
    4a86:	83 7e       	andi	r24, 0xE3	; 227
    4a88:	80 83       	st	Z, r24
    4a8a:	3a c0       	rjmp	.+116    	; 0x4b00 <STEPPER_process_pwm+0x98>
    4a8c:	80 91 a9 04 	lds	r24, 0x04A9
    4a90:	90 91 aa 04 	lds	r25, 0x04AA
    4a94:	c3 97       	sbiw	r24, 0x33	; 51
    4a96:	a4 f5       	brge	.+104    	; 0x4b00 <STEPPER_process_pwm+0x98>
    4a98:	66 23       	and	r22, r22
    4a9a:	d1 f0       	breq	.+52     	; 0x4ad0 <STEPPER_process_pwm+0x68>
    4a9c:	20 91 a9 04 	lds	r18, 0x04A9
    4aa0:	30 91 aa 04 	lds	r19, 0x04AA
    4aa4:	80 e6       	ldi	r24, 0x60	; 96
    4aa6:	90 e0       	ldi	r25, 0x00	; 0
    4aa8:	bc 01       	movw	r22, r24
    4aaa:	26 9f       	mul	r18, r22
    4aac:	c0 01       	movw	r24, r0
    4aae:	27 9f       	mul	r18, r23
    4ab0:	90 0d       	add	r25, r0
    4ab2:	36 9f       	mul	r19, r22
    4ab4:	90 0d       	add	r25, r0
    4ab6:	11 24       	eor	r1, r1
    4ab8:	88 0f       	add	r24, r24
    4aba:	89 2f       	mov	r24, r25
    4abc:	88 1f       	adc	r24, r24
    4abe:	99 0b       	sbc	r25, r25
    4ac0:	90 93 be 04 	sts	0x04BE, r25
    4ac4:	80 93 bd 04 	sts	0x04BD, r24
    4ac8:	81 e0       	ldi	r24, 0x01	; 1
    4aca:	80 93 af 02 	sts	0x02AF, r24
    4ace:	18 c0       	rjmp	.+48     	; 0x4b00 <STEPPER_process_pwm+0x98>
    4ad0:	80 91 af 02 	lds	r24, 0x02AF
    4ad4:	88 23       	and	r24, r24
    4ad6:	a1 f0       	breq	.+40     	; 0x4b00 <STEPPER_process_pwm+0x98>
    4ad8:	80 91 bd 04 	lds	r24, 0x04BD
    4adc:	90 91 be 04 	lds	r25, 0x04BE
    4ae0:	01 97       	sbiw	r24, 0x01	; 1
    4ae2:	90 93 be 04 	sts	0x04BE, r25
    4ae6:	80 93 bd 04 	sts	0x04BD, r24
    4aea:	80 91 bd 04 	lds	r24, 0x04BD
    4aee:	90 91 be 04 	lds	r25, 0x04BE
    4af2:	89 2b       	or	r24, r25
    4af4:	29 f4       	brne	.+10     	; 0x4b00 <STEPPER_process_pwm+0x98>
    4af6:	80 81       	ld	r24, Z
    4af8:	83 7e       	andi	r24, 0xE3	; 227
    4afa:	80 83       	st	Z, r24
    4afc:	10 92 af 02 	sts	0x02AF, r1
    4b00:	80 91 cb 04 	lds	r24, 0x04CB
    4b04:	82 30       	cpi	r24, 0x02	; 2
    4b06:	69 f4       	brne	.+26     	; 0x4b22 <STEPPER_process_pwm+0xba>
    4b08:	80 91 b0 02 	lds	r24, 0x02B0
    4b0c:	91 e0       	ldi	r25, 0x01	; 1
    4b0e:	89 27       	eor	r24, r25
    4b10:	80 93 b0 02 	sts	0x02B0, r24
    4b14:	88 23       	and	r24, r24
    4b16:	09 f0       	breq	.+2      	; 0x4b1a <STEPPER_process_pwm+0xb2>
    4b18:	3e c0       	rjmp	.+124    	; 0x4b96 <STEPPER_process_pwm+0x12e>
    4b1a:	80 81       	ld	r24, Z
    4b1c:	8f 71       	andi	r24, 0x1F	; 31
    4b1e:	80 83       	st	Z, r24
    4b20:	08 95       	ret
    4b22:	80 91 ab 04 	lds	r24, 0x04AB
    4b26:	90 91 ac 04 	lds	r25, 0x04AC
    4b2a:	c3 97       	sbiw	r24, 0x33	; 51
    4b2c:	a4 f5       	brge	.+104    	; 0x4b96 <STEPPER_process_pwm+0x12e>
    4b2e:	44 23       	and	r20, r20
    4b30:	d1 f0       	breq	.+52     	; 0x4b66 <STEPPER_process_pwm+0xfe>
    4b32:	20 91 ab 04 	lds	r18, 0x04AB
    4b36:	30 91 ac 04 	lds	r19, 0x04AC
    4b3a:	80 e6       	ldi	r24, 0x60	; 96
    4b3c:	90 e0       	ldi	r25, 0x00	; 0
    4b3e:	ac 01       	movw	r20, r24
    4b40:	24 9f       	mul	r18, r20
    4b42:	c0 01       	movw	r24, r0
    4b44:	25 9f       	mul	r18, r21
    4b46:	90 0d       	add	r25, r0
    4b48:	34 9f       	mul	r19, r20
    4b4a:	90 0d       	add	r25, r0
    4b4c:	11 24       	eor	r1, r1
    4b4e:	88 0f       	add	r24, r24
    4b50:	89 2f       	mov	r24, r25
    4b52:	88 1f       	adc	r24, r24
    4b54:	99 0b       	sbc	r25, r25
    4b56:	90 93 c0 04 	sts	0x04C0, r25
    4b5a:	80 93 bf 04 	sts	0x04BF, r24
    4b5e:	81 e0       	ldi	r24, 0x01	; 1
    4b60:	80 93 ae 02 	sts	0x02AE, r24
    4b64:	08 95       	ret
    4b66:	80 91 ae 02 	lds	r24, 0x02AE
    4b6a:	88 23       	and	r24, r24
    4b6c:	a1 f0       	breq	.+40     	; 0x4b96 <STEPPER_process_pwm+0x12e>
    4b6e:	80 91 bf 04 	lds	r24, 0x04BF
    4b72:	90 91 c0 04 	lds	r25, 0x04C0
    4b76:	01 97       	sbiw	r24, 0x01	; 1
    4b78:	90 93 c0 04 	sts	0x04C0, r25
    4b7c:	80 93 bf 04 	sts	0x04BF, r24
    4b80:	80 91 bf 04 	lds	r24, 0x04BF
    4b84:	90 91 c0 04 	lds	r25, 0x04C0
    4b88:	89 2b       	or	r24, r25
    4b8a:	29 f4       	brne	.+10     	; 0x4b96 <STEPPER_process_pwm+0x12e>
    4b8c:	80 81       	ld	r24, Z
    4b8e:	8f 71       	andi	r24, 0x1F	; 31
    4b90:	80 83       	st	Z, r24
    4b92:	10 92 ae 02 	sts	0x02AE, r1
    4b96:	08 95       	ret

00004b98 <__subsf3>:
    4b98:	50 58       	subi	r21, 0x80	; 128

00004b9a <__addsf3>:
    4b9a:	bb 27       	eor	r27, r27
    4b9c:	aa 27       	eor	r26, r26
    4b9e:	0e d0       	rcall	.+28     	; 0x4bbc <__addsf3x>
    4ba0:	75 c1       	rjmp	.+746    	; 0x4e8c <__fp_round>
    4ba2:	66 d1       	rcall	.+716    	; 0x4e70 <__fp_pscA>
    4ba4:	30 f0       	brcs	.+12     	; 0x4bb2 <__addsf3+0x18>
    4ba6:	6b d1       	rcall	.+726    	; 0x4e7e <__fp_pscB>
    4ba8:	20 f0       	brcs	.+8      	; 0x4bb2 <__addsf3+0x18>
    4baa:	31 f4       	brne	.+12     	; 0x4bb8 <__addsf3+0x1e>
    4bac:	9f 3f       	cpi	r25, 0xFF	; 255
    4bae:	11 f4       	brne	.+4      	; 0x4bb4 <__addsf3+0x1a>
    4bb0:	1e f4       	brtc	.+6      	; 0x4bb8 <__addsf3+0x1e>
    4bb2:	5b c1       	rjmp	.+694    	; 0x4e6a <__fp_nan>
    4bb4:	0e f4       	brtc	.+2      	; 0x4bb8 <__addsf3+0x1e>
    4bb6:	e0 95       	com	r30
    4bb8:	e7 fb       	bst	r30, 7
    4bba:	51 c1       	rjmp	.+674    	; 0x4e5e <__fp_inf>

00004bbc <__addsf3x>:
    4bbc:	e9 2f       	mov	r30, r25
    4bbe:	77 d1       	rcall	.+750    	; 0x4eae <__fp_split3>
    4bc0:	80 f3       	brcs	.-32     	; 0x4ba2 <__addsf3+0x8>
    4bc2:	ba 17       	cp	r27, r26
    4bc4:	62 07       	cpc	r22, r18
    4bc6:	73 07       	cpc	r23, r19
    4bc8:	84 07       	cpc	r24, r20
    4bca:	95 07       	cpc	r25, r21
    4bcc:	18 f0       	brcs	.+6      	; 0x4bd4 <__addsf3x+0x18>
    4bce:	71 f4       	brne	.+28     	; 0x4bec <__addsf3x+0x30>
    4bd0:	9e f5       	brtc	.+102    	; 0x4c38 <__addsf3x+0x7c>
    4bd2:	8f c1       	rjmp	.+798    	; 0x4ef2 <__fp_zero>
    4bd4:	0e f4       	brtc	.+2      	; 0x4bd8 <__addsf3x+0x1c>
    4bd6:	e0 95       	com	r30
    4bd8:	0b 2e       	mov	r0, r27
    4bda:	ba 2f       	mov	r27, r26
    4bdc:	a0 2d       	mov	r26, r0
    4bde:	0b 01       	movw	r0, r22
    4be0:	b9 01       	movw	r22, r18
    4be2:	90 01       	movw	r18, r0
    4be4:	0c 01       	movw	r0, r24
    4be6:	ca 01       	movw	r24, r20
    4be8:	a0 01       	movw	r20, r0
    4bea:	11 24       	eor	r1, r1
    4bec:	ff 27       	eor	r31, r31
    4bee:	59 1b       	sub	r21, r25
    4bf0:	99 f0       	breq	.+38     	; 0x4c18 <__addsf3x+0x5c>
    4bf2:	59 3f       	cpi	r21, 0xF9	; 249
    4bf4:	50 f4       	brcc	.+20     	; 0x4c0a <__addsf3x+0x4e>
    4bf6:	50 3e       	cpi	r21, 0xE0	; 224
    4bf8:	68 f1       	brcs	.+90     	; 0x4c54 <__addsf3x+0x98>
    4bfa:	1a 16       	cp	r1, r26
    4bfc:	f0 40       	sbci	r31, 0x00	; 0
    4bfe:	a2 2f       	mov	r26, r18
    4c00:	23 2f       	mov	r18, r19
    4c02:	34 2f       	mov	r19, r20
    4c04:	44 27       	eor	r20, r20
    4c06:	58 5f       	subi	r21, 0xF8	; 248
    4c08:	f3 cf       	rjmp	.-26     	; 0x4bf0 <__addsf3x+0x34>
    4c0a:	46 95       	lsr	r20
    4c0c:	37 95       	ror	r19
    4c0e:	27 95       	ror	r18
    4c10:	a7 95       	ror	r26
    4c12:	f0 40       	sbci	r31, 0x00	; 0
    4c14:	53 95       	inc	r21
    4c16:	c9 f7       	brne	.-14     	; 0x4c0a <__addsf3x+0x4e>
    4c18:	7e f4       	brtc	.+30     	; 0x4c38 <__addsf3x+0x7c>
    4c1a:	1f 16       	cp	r1, r31
    4c1c:	ba 0b       	sbc	r27, r26
    4c1e:	62 0b       	sbc	r22, r18
    4c20:	73 0b       	sbc	r23, r19
    4c22:	84 0b       	sbc	r24, r20
    4c24:	ba f0       	brmi	.+46     	; 0x4c54 <__addsf3x+0x98>
    4c26:	91 50       	subi	r25, 0x01	; 1
    4c28:	a1 f0       	breq	.+40     	; 0x4c52 <__addsf3x+0x96>
    4c2a:	ff 0f       	add	r31, r31
    4c2c:	bb 1f       	adc	r27, r27
    4c2e:	66 1f       	adc	r22, r22
    4c30:	77 1f       	adc	r23, r23
    4c32:	88 1f       	adc	r24, r24
    4c34:	c2 f7       	brpl	.-16     	; 0x4c26 <__addsf3x+0x6a>
    4c36:	0e c0       	rjmp	.+28     	; 0x4c54 <__addsf3x+0x98>
    4c38:	ba 0f       	add	r27, r26
    4c3a:	62 1f       	adc	r22, r18
    4c3c:	73 1f       	adc	r23, r19
    4c3e:	84 1f       	adc	r24, r20
    4c40:	48 f4       	brcc	.+18     	; 0x4c54 <__addsf3x+0x98>
    4c42:	87 95       	ror	r24
    4c44:	77 95       	ror	r23
    4c46:	67 95       	ror	r22
    4c48:	b7 95       	ror	r27
    4c4a:	f7 95       	ror	r31
    4c4c:	9e 3f       	cpi	r25, 0xFE	; 254
    4c4e:	08 f0       	brcs	.+2      	; 0x4c52 <__addsf3x+0x96>
    4c50:	b3 cf       	rjmp	.-154    	; 0x4bb8 <__addsf3+0x1e>
    4c52:	93 95       	inc	r25
    4c54:	88 0f       	add	r24, r24
    4c56:	08 f0       	brcs	.+2      	; 0x4c5a <__addsf3x+0x9e>
    4c58:	99 27       	eor	r25, r25
    4c5a:	ee 0f       	add	r30, r30
    4c5c:	97 95       	ror	r25
    4c5e:	87 95       	ror	r24
    4c60:	08 95       	ret

00004c62 <__cmpsf2>:
    4c62:	d9 d0       	rcall	.+434    	; 0x4e16 <__fp_cmp>
    4c64:	08 f4       	brcc	.+2      	; 0x4c68 <__cmpsf2+0x6>
    4c66:	81 e0       	ldi	r24, 0x01	; 1
    4c68:	08 95       	ret

00004c6a <__divsf3>:
    4c6a:	0c d0       	rcall	.+24     	; 0x4c84 <__divsf3x>
    4c6c:	0f c1       	rjmp	.+542    	; 0x4e8c <__fp_round>
    4c6e:	07 d1       	rcall	.+526    	; 0x4e7e <__fp_pscB>
    4c70:	40 f0       	brcs	.+16     	; 0x4c82 <__divsf3+0x18>
    4c72:	fe d0       	rcall	.+508    	; 0x4e70 <__fp_pscA>
    4c74:	30 f0       	brcs	.+12     	; 0x4c82 <__divsf3+0x18>
    4c76:	21 f4       	brne	.+8      	; 0x4c80 <__divsf3+0x16>
    4c78:	5f 3f       	cpi	r21, 0xFF	; 255
    4c7a:	19 f0       	breq	.+6      	; 0x4c82 <__divsf3+0x18>
    4c7c:	f0 c0       	rjmp	.+480    	; 0x4e5e <__fp_inf>
    4c7e:	51 11       	cpse	r21, r1
    4c80:	39 c1       	rjmp	.+626    	; 0x4ef4 <__fp_szero>
    4c82:	f3 c0       	rjmp	.+486    	; 0x4e6a <__fp_nan>

00004c84 <__divsf3x>:
    4c84:	14 d1       	rcall	.+552    	; 0x4eae <__fp_split3>
    4c86:	98 f3       	brcs	.-26     	; 0x4c6e <__divsf3+0x4>

00004c88 <__divsf3_pse>:
    4c88:	99 23       	and	r25, r25
    4c8a:	c9 f3       	breq	.-14     	; 0x4c7e <__divsf3+0x14>
    4c8c:	55 23       	and	r21, r21
    4c8e:	b1 f3       	breq	.-20     	; 0x4c7c <__divsf3+0x12>
    4c90:	95 1b       	sub	r25, r21
    4c92:	55 0b       	sbc	r21, r21
    4c94:	bb 27       	eor	r27, r27
    4c96:	aa 27       	eor	r26, r26
    4c98:	62 17       	cp	r22, r18
    4c9a:	73 07       	cpc	r23, r19
    4c9c:	84 07       	cpc	r24, r20
    4c9e:	38 f0       	brcs	.+14     	; 0x4cae <__divsf3_pse+0x26>
    4ca0:	9f 5f       	subi	r25, 0xFF	; 255
    4ca2:	5f 4f       	sbci	r21, 0xFF	; 255
    4ca4:	22 0f       	add	r18, r18
    4ca6:	33 1f       	adc	r19, r19
    4ca8:	44 1f       	adc	r20, r20
    4caa:	aa 1f       	adc	r26, r26
    4cac:	a9 f3       	breq	.-22     	; 0x4c98 <__divsf3_pse+0x10>
    4cae:	33 d0       	rcall	.+102    	; 0x4d16 <__divsf3_pse+0x8e>
    4cb0:	0e 2e       	mov	r0, r30
    4cb2:	3a f0       	brmi	.+14     	; 0x4cc2 <__divsf3_pse+0x3a>
    4cb4:	e0 e8       	ldi	r30, 0x80	; 128
    4cb6:	30 d0       	rcall	.+96     	; 0x4d18 <__divsf3_pse+0x90>
    4cb8:	91 50       	subi	r25, 0x01	; 1
    4cba:	50 40       	sbci	r21, 0x00	; 0
    4cbc:	e6 95       	lsr	r30
    4cbe:	00 1c       	adc	r0, r0
    4cc0:	ca f7       	brpl	.-14     	; 0x4cb4 <__divsf3_pse+0x2c>
    4cc2:	29 d0       	rcall	.+82     	; 0x4d16 <__divsf3_pse+0x8e>
    4cc4:	fe 2f       	mov	r31, r30
    4cc6:	27 d0       	rcall	.+78     	; 0x4d16 <__divsf3_pse+0x8e>
    4cc8:	66 0f       	add	r22, r22
    4cca:	77 1f       	adc	r23, r23
    4ccc:	88 1f       	adc	r24, r24
    4cce:	bb 1f       	adc	r27, r27
    4cd0:	26 17       	cp	r18, r22
    4cd2:	37 07       	cpc	r19, r23
    4cd4:	48 07       	cpc	r20, r24
    4cd6:	ab 07       	cpc	r26, r27
    4cd8:	b0 e8       	ldi	r27, 0x80	; 128
    4cda:	09 f0       	breq	.+2      	; 0x4cde <__divsf3_pse+0x56>
    4cdc:	bb 0b       	sbc	r27, r27
    4cde:	80 2d       	mov	r24, r0
    4ce0:	bf 01       	movw	r22, r30
    4ce2:	ff 27       	eor	r31, r31
    4ce4:	93 58       	subi	r25, 0x83	; 131
    4ce6:	5f 4f       	sbci	r21, 0xFF	; 255
    4ce8:	2a f0       	brmi	.+10     	; 0x4cf4 <__divsf3_pse+0x6c>
    4cea:	9e 3f       	cpi	r25, 0xFE	; 254
    4cec:	51 05       	cpc	r21, r1
    4cee:	68 f0       	brcs	.+26     	; 0x4d0a <__divsf3_pse+0x82>
    4cf0:	b6 c0       	rjmp	.+364    	; 0x4e5e <__fp_inf>
    4cf2:	00 c1       	rjmp	.+512    	; 0x4ef4 <__fp_szero>
    4cf4:	5f 3f       	cpi	r21, 0xFF	; 255
    4cf6:	ec f3       	brlt	.-6      	; 0x4cf2 <__divsf3_pse+0x6a>
    4cf8:	98 3e       	cpi	r25, 0xE8	; 232
    4cfa:	dc f3       	brlt	.-10     	; 0x4cf2 <__divsf3_pse+0x6a>
    4cfc:	86 95       	lsr	r24
    4cfe:	77 95       	ror	r23
    4d00:	67 95       	ror	r22
    4d02:	b7 95       	ror	r27
    4d04:	f7 95       	ror	r31
    4d06:	9f 5f       	subi	r25, 0xFF	; 255
    4d08:	c9 f7       	brne	.-14     	; 0x4cfc <__divsf3_pse+0x74>
    4d0a:	88 0f       	add	r24, r24
    4d0c:	91 1d       	adc	r25, r1
    4d0e:	96 95       	lsr	r25
    4d10:	87 95       	ror	r24
    4d12:	97 f9       	bld	r25, 7
    4d14:	08 95       	ret
    4d16:	e1 e0       	ldi	r30, 0x01	; 1
    4d18:	66 0f       	add	r22, r22
    4d1a:	77 1f       	adc	r23, r23
    4d1c:	88 1f       	adc	r24, r24
    4d1e:	bb 1f       	adc	r27, r27
    4d20:	62 17       	cp	r22, r18
    4d22:	73 07       	cpc	r23, r19
    4d24:	84 07       	cpc	r24, r20
    4d26:	ba 07       	cpc	r27, r26
    4d28:	20 f0       	brcs	.+8      	; 0x4d32 <__divsf3_pse+0xaa>
    4d2a:	62 1b       	sub	r22, r18
    4d2c:	73 0b       	sbc	r23, r19
    4d2e:	84 0b       	sbc	r24, r20
    4d30:	ba 0b       	sbc	r27, r26
    4d32:	ee 1f       	adc	r30, r30
    4d34:	88 f7       	brcc	.-30     	; 0x4d18 <__divsf3_pse+0x90>
    4d36:	e0 95       	com	r30
    4d38:	08 95       	ret

00004d3a <__fixsfsi>:
    4d3a:	04 d0       	rcall	.+8      	; 0x4d44 <__fixunssfsi>
    4d3c:	68 94       	set
    4d3e:	b1 11       	cpse	r27, r1
    4d40:	d9 c0       	rjmp	.+434    	; 0x4ef4 <__fp_szero>
    4d42:	08 95       	ret

00004d44 <__fixunssfsi>:
    4d44:	bc d0       	rcall	.+376    	; 0x4ebe <__fp_splitA>
    4d46:	88 f0       	brcs	.+34     	; 0x4d6a <__fixunssfsi+0x26>
    4d48:	9f 57       	subi	r25, 0x7F	; 127
    4d4a:	90 f0       	brcs	.+36     	; 0x4d70 <__fixunssfsi+0x2c>
    4d4c:	b9 2f       	mov	r27, r25
    4d4e:	99 27       	eor	r25, r25
    4d50:	b7 51       	subi	r27, 0x17	; 23
    4d52:	a0 f0       	brcs	.+40     	; 0x4d7c <__fixunssfsi+0x38>
    4d54:	d1 f0       	breq	.+52     	; 0x4d8a <__fixunssfsi+0x46>
    4d56:	66 0f       	add	r22, r22
    4d58:	77 1f       	adc	r23, r23
    4d5a:	88 1f       	adc	r24, r24
    4d5c:	99 1f       	adc	r25, r25
    4d5e:	1a f0       	brmi	.+6      	; 0x4d66 <__fixunssfsi+0x22>
    4d60:	ba 95       	dec	r27
    4d62:	c9 f7       	brne	.-14     	; 0x4d56 <__fixunssfsi+0x12>
    4d64:	12 c0       	rjmp	.+36     	; 0x4d8a <__fixunssfsi+0x46>
    4d66:	b1 30       	cpi	r27, 0x01	; 1
    4d68:	81 f0       	breq	.+32     	; 0x4d8a <__fixunssfsi+0x46>
    4d6a:	c3 d0       	rcall	.+390    	; 0x4ef2 <__fp_zero>
    4d6c:	b1 e0       	ldi	r27, 0x01	; 1
    4d6e:	08 95       	ret
    4d70:	c0 c0       	rjmp	.+384    	; 0x4ef2 <__fp_zero>
    4d72:	67 2f       	mov	r22, r23
    4d74:	78 2f       	mov	r23, r24
    4d76:	88 27       	eor	r24, r24
    4d78:	b8 5f       	subi	r27, 0xF8	; 248
    4d7a:	39 f0       	breq	.+14     	; 0x4d8a <__fixunssfsi+0x46>
    4d7c:	b9 3f       	cpi	r27, 0xF9	; 249
    4d7e:	cc f3       	brlt	.-14     	; 0x4d72 <__fixunssfsi+0x2e>
    4d80:	86 95       	lsr	r24
    4d82:	77 95       	ror	r23
    4d84:	67 95       	ror	r22
    4d86:	b3 95       	inc	r27
    4d88:	d9 f7       	brne	.-10     	; 0x4d80 <__fixunssfsi+0x3c>
    4d8a:	3e f4       	brtc	.+14     	; 0x4d9a <__fixunssfsi+0x56>
    4d8c:	90 95       	com	r25
    4d8e:	80 95       	com	r24
    4d90:	70 95       	com	r23
    4d92:	61 95       	neg	r22
    4d94:	7f 4f       	sbci	r23, 0xFF	; 255
    4d96:	8f 4f       	sbci	r24, 0xFF	; 255
    4d98:	9f 4f       	sbci	r25, 0xFF	; 255
    4d9a:	08 95       	ret

00004d9c <__floatunsisf>:
    4d9c:	e8 94       	clt
    4d9e:	09 c0       	rjmp	.+18     	; 0x4db2 <__floatsisf+0x12>

00004da0 <__floatsisf>:
    4da0:	97 fb       	bst	r25, 7
    4da2:	3e f4       	brtc	.+14     	; 0x4db2 <__floatsisf+0x12>
    4da4:	90 95       	com	r25
    4da6:	80 95       	com	r24
    4da8:	70 95       	com	r23
    4daa:	61 95       	neg	r22
    4dac:	7f 4f       	sbci	r23, 0xFF	; 255
    4dae:	8f 4f       	sbci	r24, 0xFF	; 255
    4db0:	9f 4f       	sbci	r25, 0xFF	; 255
    4db2:	99 23       	and	r25, r25
    4db4:	a9 f0       	breq	.+42     	; 0x4de0 <__floatsisf+0x40>
    4db6:	f9 2f       	mov	r31, r25
    4db8:	96 e9       	ldi	r25, 0x96	; 150
    4dba:	bb 27       	eor	r27, r27
    4dbc:	93 95       	inc	r25
    4dbe:	f6 95       	lsr	r31
    4dc0:	87 95       	ror	r24
    4dc2:	77 95       	ror	r23
    4dc4:	67 95       	ror	r22
    4dc6:	b7 95       	ror	r27
    4dc8:	f1 11       	cpse	r31, r1
    4dca:	f8 cf       	rjmp	.-16     	; 0x4dbc <__floatsisf+0x1c>
    4dcc:	fa f4       	brpl	.+62     	; 0x4e0c <__floatsisf+0x6c>
    4dce:	bb 0f       	add	r27, r27
    4dd0:	11 f4       	brne	.+4      	; 0x4dd6 <__floatsisf+0x36>
    4dd2:	60 ff       	sbrs	r22, 0
    4dd4:	1b c0       	rjmp	.+54     	; 0x4e0c <__floatsisf+0x6c>
    4dd6:	6f 5f       	subi	r22, 0xFF	; 255
    4dd8:	7f 4f       	sbci	r23, 0xFF	; 255
    4dda:	8f 4f       	sbci	r24, 0xFF	; 255
    4ddc:	9f 4f       	sbci	r25, 0xFF	; 255
    4dde:	16 c0       	rjmp	.+44     	; 0x4e0c <__floatsisf+0x6c>
    4de0:	88 23       	and	r24, r24
    4de2:	11 f0       	breq	.+4      	; 0x4de8 <__floatsisf+0x48>
    4de4:	96 e9       	ldi	r25, 0x96	; 150
    4de6:	11 c0       	rjmp	.+34     	; 0x4e0a <__floatsisf+0x6a>
    4de8:	77 23       	and	r23, r23
    4dea:	21 f0       	breq	.+8      	; 0x4df4 <__floatsisf+0x54>
    4dec:	9e e8       	ldi	r25, 0x8E	; 142
    4dee:	87 2f       	mov	r24, r23
    4df0:	76 2f       	mov	r23, r22
    4df2:	05 c0       	rjmp	.+10     	; 0x4dfe <__floatsisf+0x5e>
    4df4:	66 23       	and	r22, r22
    4df6:	71 f0       	breq	.+28     	; 0x4e14 <__floatsisf+0x74>
    4df8:	96 e8       	ldi	r25, 0x86	; 134
    4dfa:	86 2f       	mov	r24, r22
    4dfc:	70 e0       	ldi	r23, 0x00	; 0
    4dfe:	60 e0       	ldi	r22, 0x00	; 0
    4e00:	2a f0       	brmi	.+10     	; 0x4e0c <__floatsisf+0x6c>
    4e02:	9a 95       	dec	r25
    4e04:	66 0f       	add	r22, r22
    4e06:	77 1f       	adc	r23, r23
    4e08:	88 1f       	adc	r24, r24
    4e0a:	da f7       	brpl	.-10     	; 0x4e02 <__floatsisf+0x62>
    4e0c:	88 0f       	add	r24, r24
    4e0e:	96 95       	lsr	r25
    4e10:	87 95       	ror	r24
    4e12:	97 f9       	bld	r25, 7
    4e14:	08 95       	ret

00004e16 <__fp_cmp>:
    4e16:	99 0f       	add	r25, r25
    4e18:	00 08       	sbc	r0, r0
    4e1a:	55 0f       	add	r21, r21
    4e1c:	aa 0b       	sbc	r26, r26
    4e1e:	e0 e8       	ldi	r30, 0x80	; 128
    4e20:	fe ef       	ldi	r31, 0xFE	; 254
    4e22:	16 16       	cp	r1, r22
    4e24:	17 06       	cpc	r1, r23
    4e26:	e8 07       	cpc	r30, r24
    4e28:	f9 07       	cpc	r31, r25
    4e2a:	c0 f0       	brcs	.+48     	; 0x4e5c <__fp_cmp+0x46>
    4e2c:	12 16       	cp	r1, r18
    4e2e:	13 06       	cpc	r1, r19
    4e30:	e4 07       	cpc	r30, r20
    4e32:	f5 07       	cpc	r31, r21
    4e34:	98 f0       	brcs	.+38     	; 0x4e5c <__fp_cmp+0x46>
    4e36:	62 1b       	sub	r22, r18
    4e38:	73 0b       	sbc	r23, r19
    4e3a:	84 0b       	sbc	r24, r20
    4e3c:	95 0b       	sbc	r25, r21
    4e3e:	39 f4       	brne	.+14     	; 0x4e4e <__fp_cmp+0x38>
    4e40:	0a 26       	eor	r0, r26
    4e42:	61 f0       	breq	.+24     	; 0x4e5c <__fp_cmp+0x46>
    4e44:	23 2b       	or	r18, r19
    4e46:	24 2b       	or	r18, r20
    4e48:	25 2b       	or	r18, r21
    4e4a:	21 f4       	brne	.+8      	; 0x4e54 <__fp_cmp+0x3e>
    4e4c:	08 95       	ret
    4e4e:	0a 26       	eor	r0, r26
    4e50:	09 f4       	brne	.+2      	; 0x4e54 <__fp_cmp+0x3e>
    4e52:	a1 40       	sbci	r26, 0x01	; 1
    4e54:	a6 95       	lsr	r26
    4e56:	8f ef       	ldi	r24, 0xFF	; 255
    4e58:	81 1d       	adc	r24, r1
    4e5a:	81 1d       	adc	r24, r1
    4e5c:	08 95       	ret

00004e5e <__fp_inf>:
    4e5e:	97 f9       	bld	r25, 7
    4e60:	9f 67       	ori	r25, 0x7F	; 127
    4e62:	80 e8       	ldi	r24, 0x80	; 128
    4e64:	70 e0       	ldi	r23, 0x00	; 0
    4e66:	60 e0       	ldi	r22, 0x00	; 0
    4e68:	08 95       	ret

00004e6a <__fp_nan>:
    4e6a:	9f ef       	ldi	r25, 0xFF	; 255
    4e6c:	80 ec       	ldi	r24, 0xC0	; 192
    4e6e:	08 95       	ret

00004e70 <__fp_pscA>:
    4e70:	00 24       	eor	r0, r0
    4e72:	0a 94       	dec	r0
    4e74:	16 16       	cp	r1, r22
    4e76:	17 06       	cpc	r1, r23
    4e78:	18 06       	cpc	r1, r24
    4e7a:	09 06       	cpc	r0, r25
    4e7c:	08 95       	ret

00004e7e <__fp_pscB>:
    4e7e:	00 24       	eor	r0, r0
    4e80:	0a 94       	dec	r0
    4e82:	12 16       	cp	r1, r18
    4e84:	13 06       	cpc	r1, r19
    4e86:	14 06       	cpc	r1, r20
    4e88:	05 06       	cpc	r0, r21
    4e8a:	08 95       	ret

00004e8c <__fp_round>:
    4e8c:	09 2e       	mov	r0, r25
    4e8e:	03 94       	inc	r0
    4e90:	00 0c       	add	r0, r0
    4e92:	11 f4       	brne	.+4      	; 0x4e98 <__fp_round+0xc>
    4e94:	88 23       	and	r24, r24
    4e96:	52 f0       	brmi	.+20     	; 0x4eac <__fp_round+0x20>
    4e98:	bb 0f       	add	r27, r27
    4e9a:	40 f4       	brcc	.+16     	; 0x4eac <__fp_round+0x20>
    4e9c:	bf 2b       	or	r27, r31
    4e9e:	11 f4       	brne	.+4      	; 0x4ea4 <__fp_round+0x18>
    4ea0:	60 ff       	sbrs	r22, 0
    4ea2:	04 c0       	rjmp	.+8      	; 0x4eac <__fp_round+0x20>
    4ea4:	6f 5f       	subi	r22, 0xFF	; 255
    4ea6:	7f 4f       	sbci	r23, 0xFF	; 255
    4ea8:	8f 4f       	sbci	r24, 0xFF	; 255
    4eaa:	9f 4f       	sbci	r25, 0xFF	; 255
    4eac:	08 95       	ret

00004eae <__fp_split3>:
    4eae:	57 fd       	sbrc	r21, 7
    4eb0:	90 58       	subi	r25, 0x80	; 128
    4eb2:	44 0f       	add	r20, r20
    4eb4:	55 1f       	adc	r21, r21
    4eb6:	59 f0       	breq	.+22     	; 0x4ece <__fp_splitA+0x10>
    4eb8:	5f 3f       	cpi	r21, 0xFF	; 255
    4eba:	71 f0       	breq	.+28     	; 0x4ed8 <__fp_splitA+0x1a>
    4ebc:	47 95       	ror	r20

00004ebe <__fp_splitA>:
    4ebe:	88 0f       	add	r24, r24
    4ec0:	97 fb       	bst	r25, 7
    4ec2:	99 1f       	adc	r25, r25
    4ec4:	61 f0       	breq	.+24     	; 0x4ede <__fp_splitA+0x20>
    4ec6:	9f 3f       	cpi	r25, 0xFF	; 255
    4ec8:	79 f0       	breq	.+30     	; 0x4ee8 <__fp_splitA+0x2a>
    4eca:	87 95       	ror	r24
    4ecc:	08 95       	ret
    4ece:	12 16       	cp	r1, r18
    4ed0:	13 06       	cpc	r1, r19
    4ed2:	14 06       	cpc	r1, r20
    4ed4:	55 1f       	adc	r21, r21
    4ed6:	f2 cf       	rjmp	.-28     	; 0x4ebc <__fp_split3+0xe>
    4ed8:	46 95       	lsr	r20
    4eda:	f1 df       	rcall	.-30     	; 0x4ebe <__fp_splitA>
    4edc:	08 c0       	rjmp	.+16     	; 0x4eee <__fp_splitA+0x30>
    4ede:	16 16       	cp	r1, r22
    4ee0:	17 06       	cpc	r1, r23
    4ee2:	18 06       	cpc	r1, r24
    4ee4:	99 1f       	adc	r25, r25
    4ee6:	f1 cf       	rjmp	.-30     	; 0x4eca <__fp_splitA+0xc>
    4ee8:	86 95       	lsr	r24
    4eea:	71 05       	cpc	r23, r1
    4eec:	61 05       	cpc	r22, r1
    4eee:	08 94       	sec
    4ef0:	08 95       	ret

00004ef2 <__fp_zero>:
    4ef2:	e8 94       	clt

00004ef4 <__fp_szero>:
    4ef4:	bb 27       	eor	r27, r27
    4ef6:	66 27       	eor	r22, r22
    4ef8:	77 27       	eor	r23, r23
    4efa:	cb 01       	movw	r24, r22
    4efc:	97 f9       	bld	r25, 7
    4efe:	08 95       	ret

00004f00 <__gesf2>:
    4f00:	8a df       	rcall	.-236    	; 0x4e16 <__fp_cmp>
    4f02:	08 f4       	brcc	.+2      	; 0x4f06 <__gesf2+0x6>
    4f04:	8f ef       	ldi	r24, 0xFF	; 255
    4f06:	08 95       	ret

00004f08 <lrint>:
    4f08:	da df       	rcall	.-76     	; 0x4ebe <__fp_splitA>
    4f0a:	a8 f1       	brcs	.+106    	; 0x4f76 <lrint+0x6e>
    4f0c:	9e 57       	subi	r25, 0x7E	; 126
    4f0e:	a8 f1       	brcs	.+106    	; 0x4f7a <lrint+0x72>
    4f10:	98 51       	subi	r25, 0x18	; 24
    4f12:	60 f0       	brcs	.+24     	; 0x4f2c <lrint+0x24>
    4f14:	39 f1       	breq	.+78     	; 0x4f64 <lrint+0x5c>
    4f16:	98 30       	cpi	r25, 0x08	; 8
    4f18:	70 f5       	brcc	.+92     	; 0x4f76 <lrint+0x6e>
    4f1a:	09 2e       	mov	r0, r25
    4f1c:	99 27       	eor	r25, r25
    4f1e:	66 0f       	add	r22, r22
    4f20:	77 1f       	adc	r23, r23
    4f22:	88 1f       	adc	r24, r24
    4f24:	99 1f       	adc	r25, r25
    4f26:	0a 94       	dec	r0
    4f28:	d1 f7       	brne	.-12     	; 0x4f1e <lrint+0x16>
    4f2a:	1c c0       	rjmp	.+56     	; 0x4f64 <lrint+0x5c>
    4f2c:	bb 27       	eor	r27, r27
    4f2e:	99 3f       	cpi	r25, 0xF9	; 249
    4f30:	4c f4       	brge	.+18     	; 0x4f44 <lrint+0x3c>
    4f32:	b1 11       	cpse	r27, r1
    4f34:	b1 e0       	ldi	r27, 0x01	; 1
    4f36:	b6 2b       	or	r27, r22
    4f38:	67 2f       	mov	r22, r23
    4f3a:	78 2f       	mov	r23, r24
    4f3c:	88 27       	eor	r24, r24
    4f3e:	98 5f       	subi	r25, 0xF8	; 248
    4f40:	b1 f7       	brne	.-20     	; 0x4f2e <lrint+0x26>
    4f42:	08 c0       	rjmp	.+16     	; 0x4f54 <lrint+0x4c>
    4f44:	86 95       	lsr	r24
    4f46:	77 95       	ror	r23
    4f48:	67 95       	ror	r22
    4f4a:	b7 95       	ror	r27
    4f4c:	08 f4       	brcc	.+2      	; 0x4f50 <lrint+0x48>
    4f4e:	b1 60       	ori	r27, 0x01	; 1
    4f50:	93 95       	inc	r25
    4f52:	c1 f7       	brne	.-16     	; 0x4f44 <lrint+0x3c>
    4f54:	bb 0f       	add	r27, r27
    4f56:	30 f4       	brcc	.+12     	; 0x4f64 <lrint+0x5c>
    4f58:	11 f4       	brne	.+4      	; 0x4f5e <lrint+0x56>
    4f5a:	60 ff       	sbrs	r22, 0
    4f5c:	03 c0       	rjmp	.+6      	; 0x4f64 <lrint+0x5c>
    4f5e:	6f 5f       	subi	r22, 0xFF	; 255
    4f60:	7f 4f       	sbci	r23, 0xFF	; 255
    4f62:	8f 4f       	sbci	r24, 0xFF	; 255
    4f64:	3e f4       	brtc	.+14     	; 0x4f74 <lrint+0x6c>
    4f66:	90 95       	com	r25
    4f68:	80 95       	com	r24
    4f6a:	70 95       	com	r23
    4f6c:	61 95       	neg	r22
    4f6e:	7f 4f       	sbci	r23, 0xFF	; 255
    4f70:	8f 4f       	sbci	r24, 0xFF	; 255
    4f72:	9f 4f       	sbci	r25, 0xFF	; 255
    4f74:	08 95       	ret
    4f76:	68 94       	set
    4f78:	bd cf       	rjmp	.-134    	; 0x4ef4 <__fp_szero>
    4f7a:	bb cf       	rjmp	.-138    	; 0x4ef2 <__fp_zero>

00004f7c <__mulsf3>:
    4f7c:	0b d0       	rcall	.+22     	; 0x4f94 <__mulsf3x>
    4f7e:	86 cf       	rjmp	.-244    	; 0x4e8c <__fp_round>
    4f80:	77 df       	rcall	.-274    	; 0x4e70 <__fp_pscA>
    4f82:	28 f0       	brcs	.+10     	; 0x4f8e <__mulsf3+0x12>
    4f84:	7c df       	rcall	.-264    	; 0x4e7e <__fp_pscB>
    4f86:	18 f0       	brcs	.+6      	; 0x4f8e <__mulsf3+0x12>
    4f88:	95 23       	and	r25, r21
    4f8a:	09 f0       	breq	.+2      	; 0x4f8e <__mulsf3+0x12>
    4f8c:	68 cf       	rjmp	.-304    	; 0x4e5e <__fp_inf>
    4f8e:	6d cf       	rjmp	.-294    	; 0x4e6a <__fp_nan>
    4f90:	11 24       	eor	r1, r1
    4f92:	b0 cf       	rjmp	.-160    	; 0x4ef4 <__fp_szero>

00004f94 <__mulsf3x>:
    4f94:	8c df       	rcall	.-232    	; 0x4eae <__fp_split3>
    4f96:	a0 f3       	brcs	.-24     	; 0x4f80 <__mulsf3+0x4>

00004f98 <__mulsf3_pse>:
    4f98:	95 9f       	mul	r25, r21
    4f9a:	d1 f3       	breq	.-12     	; 0x4f90 <__mulsf3+0x14>
    4f9c:	95 0f       	add	r25, r21
    4f9e:	50 e0       	ldi	r21, 0x00	; 0
    4fa0:	55 1f       	adc	r21, r21
    4fa2:	62 9f       	mul	r22, r18
    4fa4:	f0 01       	movw	r30, r0
    4fa6:	72 9f       	mul	r23, r18
    4fa8:	bb 27       	eor	r27, r27
    4faa:	f0 0d       	add	r31, r0
    4fac:	b1 1d       	adc	r27, r1
    4fae:	63 9f       	mul	r22, r19
    4fb0:	aa 27       	eor	r26, r26
    4fb2:	f0 0d       	add	r31, r0
    4fb4:	b1 1d       	adc	r27, r1
    4fb6:	aa 1f       	adc	r26, r26
    4fb8:	64 9f       	mul	r22, r20
    4fba:	66 27       	eor	r22, r22
    4fbc:	b0 0d       	add	r27, r0
    4fbe:	a1 1d       	adc	r26, r1
    4fc0:	66 1f       	adc	r22, r22
    4fc2:	82 9f       	mul	r24, r18
    4fc4:	22 27       	eor	r18, r18
    4fc6:	b0 0d       	add	r27, r0
    4fc8:	a1 1d       	adc	r26, r1
    4fca:	62 1f       	adc	r22, r18
    4fcc:	73 9f       	mul	r23, r19
    4fce:	b0 0d       	add	r27, r0
    4fd0:	a1 1d       	adc	r26, r1
    4fd2:	62 1f       	adc	r22, r18
    4fd4:	83 9f       	mul	r24, r19
    4fd6:	a0 0d       	add	r26, r0
    4fd8:	61 1d       	adc	r22, r1
    4fda:	22 1f       	adc	r18, r18
    4fdc:	74 9f       	mul	r23, r20
    4fde:	33 27       	eor	r19, r19
    4fe0:	a0 0d       	add	r26, r0
    4fe2:	61 1d       	adc	r22, r1
    4fe4:	23 1f       	adc	r18, r19
    4fe6:	84 9f       	mul	r24, r20
    4fe8:	60 0d       	add	r22, r0
    4fea:	21 1d       	adc	r18, r1
    4fec:	82 2f       	mov	r24, r18
    4fee:	76 2f       	mov	r23, r22
    4ff0:	6a 2f       	mov	r22, r26
    4ff2:	11 24       	eor	r1, r1
    4ff4:	9f 57       	subi	r25, 0x7F	; 127
    4ff6:	50 40       	sbci	r21, 0x00	; 0
    4ff8:	8a f0       	brmi	.+34     	; 0x501c <__mulsf3_pse+0x84>
    4ffa:	e1 f0       	breq	.+56     	; 0x5034 <__mulsf3_pse+0x9c>
    4ffc:	88 23       	and	r24, r24
    4ffe:	4a f0       	brmi	.+18     	; 0x5012 <__mulsf3_pse+0x7a>
    5000:	ee 0f       	add	r30, r30
    5002:	ff 1f       	adc	r31, r31
    5004:	bb 1f       	adc	r27, r27
    5006:	66 1f       	adc	r22, r22
    5008:	77 1f       	adc	r23, r23
    500a:	88 1f       	adc	r24, r24
    500c:	91 50       	subi	r25, 0x01	; 1
    500e:	50 40       	sbci	r21, 0x00	; 0
    5010:	a9 f7       	brne	.-22     	; 0x4ffc <__mulsf3_pse+0x64>
    5012:	9e 3f       	cpi	r25, 0xFE	; 254
    5014:	51 05       	cpc	r21, r1
    5016:	70 f0       	brcs	.+28     	; 0x5034 <__mulsf3_pse+0x9c>
    5018:	22 cf       	rjmp	.-444    	; 0x4e5e <__fp_inf>
    501a:	6c cf       	rjmp	.-296    	; 0x4ef4 <__fp_szero>
    501c:	5f 3f       	cpi	r21, 0xFF	; 255
    501e:	ec f3       	brlt	.-6      	; 0x501a <__mulsf3_pse+0x82>
    5020:	98 3e       	cpi	r25, 0xE8	; 232
    5022:	dc f3       	brlt	.-10     	; 0x501a <__mulsf3_pse+0x82>
    5024:	86 95       	lsr	r24
    5026:	77 95       	ror	r23
    5028:	67 95       	ror	r22
    502a:	b7 95       	ror	r27
    502c:	f7 95       	ror	r31
    502e:	e7 95       	ror	r30
    5030:	9f 5f       	subi	r25, 0xFF	; 255
    5032:	c1 f7       	brne	.-16     	; 0x5024 <__mulsf3_pse+0x8c>
    5034:	fe 2b       	or	r31, r30
    5036:	88 0f       	add	r24, r24
    5038:	91 1d       	adc	r25, r1
    503a:	96 95       	lsr	r25
    503c:	87 95       	ror	r24
    503e:	97 f9       	bld	r25, 7
    5040:	08 95       	ret

00005042 <pow>:
    5042:	fa 01       	movw	r30, r20
    5044:	ee 0f       	add	r30, r30
    5046:	ff 1f       	adc	r31, r31
    5048:	30 96       	adiw	r30, 0x00	; 0
    504a:	21 05       	cpc	r18, r1
    504c:	31 05       	cpc	r19, r1
    504e:	99 f1       	breq	.+102    	; 0x50b6 <pow+0x74>
    5050:	61 15       	cp	r22, r1
    5052:	71 05       	cpc	r23, r1
    5054:	61 f4       	brne	.+24     	; 0x506e <pow+0x2c>
    5056:	80 38       	cpi	r24, 0x80	; 128
    5058:	bf e3       	ldi	r27, 0x3F	; 63
    505a:	9b 07       	cpc	r25, r27
    505c:	49 f1       	breq	.+82     	; 0x50b0 <pow+0x6e>
    505e:	68 94       	set
    5060:	90 38       	cpi	r25, 0x80	; 128
    5062:	81 05       	cpc	r24, r1
    5064:	61 f0       	breq	.+24     	; 0x507e <pow+0x3c>
    5066:	80 38       	cpi	r24, 0x80	; 128
    5068:	bf ef       	ldi	r27, 0xFF	; 255
    506a:	9b 07       	cpc	r25, r27
    506c:	41 f0       	breq	.+16     	; 0x507e <pow+0x3c>
    506e:	99 23       	and	r25, r25
    5070:	42 f5       	brpl	.+80     	; 0x50c2 <pow+0x80>
    5072:	ff 3f       	cpi	r31, 0xFF	; 255
    5074:	e1 05       	cpc	r30, r1
    5076:	31 05       	cpc	r19, r1
    5078:	21 05       	cpc	r18, r1
    507a:	11 f1       	breq	.+68     	; 0x50c0 <pow+0x7e>
    507c:	e8 94       	clt
    507e:	08 94       	sec
    5080:	e7 95       	ror	r30
    5082:	d9 01       	movw	r26, r18
    5084:	aa 23       	and	r26, r26
    5086:	29 f4       	brne	.+10     	; 0x5092 <pow+0x50>
    5088:	ab 2f       	mov	r26, r27
    508a:	be 2f       	mov	r27, r30
    508c:	f8 5f       	subi	r31, 0xF8	; 248
    508e:	d0 f3       	brcs	.-12     	; 0x5084 <pow+0x42>
    5090:	10 c0       	rjmp	.+32     	; 0x50b2 <pow+0x70>
    5092:	ff 5f       	subi	r31, 0xFF	; 255
    5094:	70 f4       	brcc	.+28     	; 0x50b2 <pow+0x70>
    5096:	a6 95       	lsr	r26
    5098:	e0 f7       	brcc	.-8      	; 0x5092 <pow+0x50>
    509a:	f7 39       	cpi	r31, 0x97	; 151
    509c:	50 f0       	brcs	.+20     	; 0x50b2 <pow+0x70>
    509e:	19 f0       	breq	.+6      	; 0x50a6 <pow+0x64>
    50a0:	ff 3a       	cpi	r31, 0xAF	; 175
    50a2:	38 f4       	brcc	.+14     	; 0x50b2 <pow+0x70>
    50a4:	9f 77       	andi	r25, 0x7F	; 127
    50a6:	9f 93       	push	r25
    50a8:	0c d0       	rcall	.+24     	; 0x50c2 <pow+0x80>
    50aa:	0f 90       	pop	r0
    50ac:	07 fc       	sbrc	r0, 7
    50ae:	90 58       	subi	r25, 0x80	; 128
    50b0:	08 95       	ret
    50b2:	3e f0       	brts	.+14     	; 0x50c2 <pow+0x80>
    50b4:	da ce       	rjmp	.-588    	; 0x4e6a <__fp_nan>
    50b6:	60 e0       	ldi	r22, 0x00	; 0
    50b8:	70 e0       	ldi	r23, 0x00	; 0
    50ba:	80 e8       	ldi	r24, 0x80	; 128
    50bc:	9f e3       	ldi	r25, 0x3F	; 63
    50be:	08 95       	ret
    50c0:	4f e7       	ldi	r20, 0x7F	; 127
    50c2:	9f 77       	andi	r25, 0x7F	; 127
    50c4:	5f 93       	push	r21
    50c6:	4f 93       	push	r20
    50c8:	3f 93       	push	r19
    50ca:	2f 93       	push	r18
    50cc:	9e d0       	rcall	.+316    	; 0x520a <log>
    50ce:	2f 91       	pop	r18
    50d0:	3f 91       	pop	r19
    50d2:	4f 91       	pop	r20
    50d4:	5f 91       	pop	r21
    50d6:	52 df       	rcall	.-348    	; 0x4f7c <__mulsf3>
    50d8:	05 c0       	rjmp	.+10     	; 0x50e4 <exp>
    50da:	19 f4       	brne	.+6      	; 0x50e2 <pow+0xa0>
    50dc:	0e f0       	brts	.+2      	; 0x50e0 <pow+0x9e>
    50de:	bf ce       	rjmp	.-642    	; 0x4e5e <__fp_inf>
    50e0:	08 cf       	rjmp	.-496    	; 0x4ef2 <__fp_zero>
    50e2:	c3 ce       	rjmp	.-634    	; 0x4e6a <__fp_nan>

000050e4 <exp>:
    50e4:	ec de       	rcall	.-552    	; 0x4ebe <__fp_splitA>
    50e6:	c8 f3       	brcs	.-14     	; 0x50da <pow+0x98>
    50e8:	96 38       	cpi	r25, 0x86	; 134
    50ea:	c0 f7       	brcc	.-16     	; 0x50dc <pow+0x9a>
    50ec:	07 f8       	bld	r0, 7
    50ee:	0f 92       	push	r0
    50f0:	e8 94       	clt
    50f2:	2b e3       	ldi	r18, 0x3B	; 59
    50f4:	3a ea       	ldi	r19, 0xAA	; 170
    50f6:	48 eb       	ldi	r20, 0xB8	; 184
    50f8:	5f e7       	ldi	r21, 0x7F	; 127
    50fa:	4e df       	rcall	.-356    	; 0x4f98 <__mulsf3_pse>
    50fc:	0f 92       	push	r0
    50fe:	0f 92       	push	r0
    5100:	0f 92       	push	r0
    5102:	4d b7       	in	r20, 0x3d	; 61
    5104:	5e b7       	in	r21, 0x3e	; 62
    5106:	0f 92       	push	r0
    5108:	c0 d0       	rcall	.+384    	; 0x528a <modf>
    510a:	e8 ec       	ldi	r30, 0xC8	; 200
    510c:	f0 e0       	ldi	r31, 0x00	; 0
    510e:	16 d0       	rcall	.+44     	; 0x513c <__fp_powser>
    5110:	4f 91       	pop	r20
    5112:	5f 91       	pop	r21
    5114:	ef 91       	pop	r30
    5116:	ff 91       	pop	r31
    5118:	e5 95       	asr	r30
    511a:	ee 1f       	adc	r30, r30
    511c:	ff 1f       	adc	r31, r31
    511e:	49 f0       	breq	.+18     	; 0x5132 <exp+0x4e>
    5120:	fe 57       	subi	r31, 0x7E	; 126
    5122:	e0 68       	ori	r30, 0x80	; 128
    5124:	44 27       	eor	r20, r20
    5126:	ee 0f       	add	r30, r30
    5128:	44 1f       	adc	r20, r20
    512a:	fa 95       	dec	r31
    512c:	e1 f7       	brne	.-8      	; 0x5126 <exp+0x42>
    512e:	41 95       	neg	r20
    5130:	55 0b       	sbc	r21, r21
    5132:	32 d0       	rcall	.+100    	; 0x5198 <ldexp>
    5134:	0f 90       	pop	r0
    5136:	07 fe       	sbrs	r0, 7
    5138:	26 c0       	rjmp	.+76     	; 0x5186 <inverse>
    513a:	08 95       	ret

0000513c <__fp_powser>:
    513c:	df 93       	push	r29
    513e:	cf 93       	push	r28
    5140:	1f 93       	push	r17
    5142:	0f 93       	push	r16
    5144:	ff 92       	push	r15
    5146:	ef 92       	push	r14
    5148:	df 92       	push	r13
    514a:	7b 01       	movw	r14, r22
    514c:	8c 01       	movw	r16, r24
    514e:	68 94       	set
    5150:	05 c0       	rjmp	.+10     	; 0x515c <__fp_powser+0x20>
    5152:	da 2e       	mov	r13, r26
    5154:	ef 01       	movw	r28, r30
    5156:	1e df       	rcall	.-452    	; 0x4f94 <__mulsf3x>
    5158:	fe 01       	movw	r30, r28
    515a:	e8 94       	clt
    515c:	a5 91       	lpm	r26, Z+
    515e:	25 91       	lpm	r18, Z+
    5160:	35 91       	lpm	r19, Z+
    5162:	45 91       	lpm	r20, Z+
    5164:	55 91       	lpm	r21, Z+
    5166:	ae f3       	brts	.-22     	; 0x5152 <__fp_powser+0x16>
    5168:	ef 01       	movw	r28, r30
    516a:	28 dd       	rcall	.-1456   	; 0x4bbc <__addsf3x>
    516c:	fe 01       	movw	r30, r28
    516e:	97 01       	movw	r18, r14
    5170:	a8 01       	movw	r20, r16
    5172:	da 94       	dec	r13
    5174:	79 f7       	brne	.-34     	; 0x5154 <__fp_powser+0x18>
    5176:	df 90       	pop	r13
    5178:	ef 90       	pop	r14
    517a:	ff 90       	pop	r15
    517c:	0f 91       	pop	r16
    517e:	1f 91       	pop	r17
    5180:	cf 91       	pop	r28
    5182:	df 91       	pop	r29
    5184:	08 95       	ret

00005186 <inverse>:
    5186:	9b 01       	movw	r18, r22
    5188:	ac 01       	movw	r20, r24
    518a:	60 e0       	ldi	r22, 0x00	; 0
    518c:	70 e0       	ldi	r23, 0x00	; 0
    518e:	80 e8       	ldi	r24, 0x80	; 128
    5190:	9f e3       	ldi	r25, 0x3F	; 63
    5192:	6b cd       	rjmp	.-1322   	; 0x4c6a <__divsf3>
    5194:	64 ce       	rjmp	.-824    	; 0x4e5e <__fp_inf>
    5196:	ac c0       	rjmp	.+344    	; 0x52f0 <__fp_mpack>

00005198 <ldexp>:
    5198:	92 de       	rcall	.-732    	; 0x4ebe <__fp_splitA>
    519a:	e8 f3       	brcs	.-6      	; 0x5196 <inverse+0x10>
    519c:	99 23       	and	r25, r25
    519e:	d9 f3       	breq	.-10     	; 0x5196 <inverse+0x10>
    51a0:	94 0f       	add	r25, r20
    51a2:	51 1d       	adc	r21, r1
    51a4:	bb f3       	brvs	.-18     	; 0x5194 <inverse+0xe>
    51a6:	91 50       	subi	r25, 0x01	; 1
    51a8:	50 40       	sbci	r21, 0x00	; 0
    51aa:	94 f0       	brlt	.+36     	; 0x51d0 <ldexp+0x38>
    51ac:	59 f0       	breq	.+22     	; 0x51c4 <ldexp+0x2c>
    51ae:	88 23       	and	r24, r24
    51b0:	32 f0       	brmi	.+12     	; 0x51be <ldexp+0x26>
    51b2:	66 0f       	add	r22, r22
    51b4:	77 1f       	adc	r23, r23
    51b6:	88 1f       	adc	r24, r24
    51b8:	91 50       	subi	r25, 0x01	; 1
    51ba:	50 40       	sbci	r21, 0x00	; 0
    51bc:	c1 f7       	brne	.-16     	; 0x51ae <ldexp+0x16>
    51be:	9e 3f       	cpi	r25, 0xFE	; 254
    51c0:	51 05       	cpc	r21, r1
    51c2:	44 f7       	brge	.-48     	; 0x5194 <inverse+0xe>
    51c4:	88 0f       	add	r24, r24
    51c6:	91 1d       	adc	r25, r1
    51c8:	96 95       	lsr	r25
    51ca:	87 95       	ror	r24
    51cc:	97 f9       	bld	r25, 7
    51ce:	08 95       	ret
    51d0:	5f 3f       	cpi	r21, 0xFF	; 255
    51d2:	ac f0       	brlt	.+42     	; 0x51fe <ldexp+0x66>
    51d4:	98 3e       	cpi	r25, 0xE8	; 232
    51d6:	9c f0       	brlt	.+38     	; 0x51fe <ldexp+0x66>
    51d8:	bb 27       	eor	r27, r27
    51da:	86 95       	lsr	r24
    51dc:	77 95       	ror	r23
    51de:	67 95       	ror	r22
    51e0:	b7 95       	ror	r27
    51e2:	08 f4       	brcc	.+2      	; 0x51e6 <ldexp+0x4e>
    51e4:	b1 60       	ori	r27, 0x01	; 1
    51e6:	93 95       	inc	r25
    51e8:	c1 f7       	brne	.-16     	; 0x51da <ldexp+0x42>
    51ea:	bb 0f       	add	r27, r27
    51ec:	58 f7       	brcc	.-42     	; 0x51c4 <ldexp+0x2c>
    51ee:	11 f4       	brne	.+4      	; 0x51f4 <ldexp+0x5c>
    51f0:	60 ff       	sbrs	r22, 0
    51f2:	e8 cf       	rjmp	.-48     	; 0x51c4 <ldexp+0x2c>
    51f4:	6f 5f       	subi	r22, 0xFF	; 255
    51f6:	7f 4f       	sbci	r23, 0xFF	; 255
    51f8:	8f 4f       	sbci	r24, 0xFF	; 255
    51fa:	9f 4f       	sbci	r25, 0xFF	; 255
    51fc:	e3 cf       	rjmp	.-58     	; 0x51c4 <ldexp+0x2c>
    51fe:	7a ce       	rjmp	.-780    	; 0x4ef4 <__fp_szero>
    5200:	0e f0       	brts	.+2      	; 0x5204 <ldexp+0x6c>
    5202:	76 c0       	rjmp	.+236    	; 0x52f0 <__fp_mpack>
    5204:	32 ce       	rjmp	.-924    	; 0x4e6a <__fp_nan>
    5206:	68 94       	set
    5208:	2a ce       	rjmp	.-940    	; 0x4e5e <__fp_inf>

0000520a <log>:
    520a:	59 de       	rcall	.-846    	; 0x4ebe <__fp_splitA>
    520c:	c8 f3       	brcs	.-14     	; 0x5200 <ldexp+0x68>
    520e:	99 23       	and	r25, r25
    5210:	d1 f3       	breq	.-12     	; 0x5206 <ldexp+0x6e>
    5212:	c6 f3       	brts	.-16     	; 0x5204 <ldexp+0x6c>
    5214:	df 93       	push	r29
    5216:	cf 93       	push	r28
    5218:	1f 93       	push	r17
    521a:	0f 93       	push	r16
    521c:	ff 92       	push	r15
    521e:	c9 2f       	mov	r28, r25
    5220:	dd 27       	eor	r29, r29
    5222:	88 23       	and	r24, r24
    5224:	2a f0       	brmi	.+10     	; 0x5230 <log+0x26>
    5226:	21 97       	sbiw	r28, 0x01	; 1
    5228:	66 0f       	add	r22, r22
    522a:	77 1f       	adc	r23, r23
    522c:	88 1f       	adc	r24, r24
    522e:	da f7       	brpl	.-10     	; 0x5226 <log+0x1c>
    5230:	20 e0       	ldi	r18, 0x00	; 0
    5232:	30 e0       	ldi	r19, 0x00	; 0
    5234:	40 e8       	ldi	r20, 0x80	; 128
    5236:	5f eb       	ldi	r21, 0xBF	; 191
    5238:	9f e3       	ldi	r25, 0x3F	; 63
    523a:	88 39       	cpi	r24, 0x98	; 152
    523c:	20 f0       	brcs	.+8      	; 0x5246 <log+0x3c>
    523e:	80 3e       	cpi	r24, 0xE0	; 224
    5240:	30 f0       	brcs	.+12     	; 0x524e <log+0x44>
    5242:	21 96       	adiw	r28, 0x01	; 1
    5244:	8f 77       	andi	r24, 0x7F	; 127
    5246:	a9 dc       	rcall	.-1710   	; 0x4b9a <__addsf3>
    5248:	e0 ef       	ldi	r30, 0xF0	; 240
    524a:	f0 e0       	ldi	r31, 0x00	; 0
    524c:	03 c0       	rjmp	.+6      	; 0x5254 <log+0x4a>
    524e:	a5 dc       	rcall	.-1718   	; 0x4b9a <__addsf3>
    5250:	ed e1       	ldi	r30, 0x1D	; 29
    5252:	f1 e0       	ldi	r31, 0x01	; 1
    5254:	73 df       	rcall	.-282    	; 0x513c <__fp_powser>
    5256:	8b 01       	movw	r16, r22
    5258:	be 01       	movw	r22, r28
    525a:	ec 01       	movw	r28, r24
    525c:	fb 2e       	mov	r15, r27
    525e:	6f 57       	subi	r22, 0x7F	; 127
    5260:	71 09       	sbc	r23, r1
    5262:	75 95       	asr	r23
    5264:	77 1f       	adc	r23, r23
    5266:	88 0b       	sbc	r24, r24
    5268:	99 0b       	sbc	r25, r25
    526a:	9a dd       	rcall	.-1228   	; 0x4da0 <__floatsisf>
    526c:	28 e1       	ldi	r18, 0x18	; 24
    526e:	32 e7       	ldi	r19, 0x72	; 114
    5270:	41 e3       	ldi	r20, 0x31	; 49
    5272:	5f e3       	ldi	r21, 0x3F	; 63
    5274:	8f de       	rcall	.-738    	; 0x4f94 <__mulsf3x>
    5276:	af 2d       	mov	r26, r15
    5278:	98 01       	movw	r18, r16
    527a:	ae 01       	movw	r20, r28
    527c:	ff 90       	pop	r15
    527e:	0f 91       	pop	r16
    5280:	1f 91       	pop	r17
    5282:	cf 91       	pop	r28
    5284:	df 91       	pop	r29
    5286:	9a dc       	rcall	.-1740   	; 0x4bbc <__addsf3x>
    5288:	01 ce       	rjmp	.-1022   	; 0x4e8c <__fp_round>

0000528a <modf>:
    528a:	fa 01       	movw	r30, r20
    528c:	dc 01       	movw	r26, r24
    528e:	aa 0f       	add	r26, r26
    5290:	bb 1f       	adc	r27, r27
    5292:	9b 01       	movw	r18, r22
    5294:	ac 01       	movw	r20, r24
    5296:	bf 57       	subi	r27, 0x7F	; 127
    5298:	28 f4       	brcc	.+10     	; 0x52a4 <modf+0x1a>
    529a:	22 27       	eor	r18, r18
    529c:	33 27       	eor	r19, r19
    529e:	44 27       	eor	r20, r20
    52a0:	50 78       	andi	r21, 0x80	; 128
    52a2:	1f c0       	rjmp	.+62     	; 0x52e2 <modf+0x58>
    52a4:	b7 51       	subi	r27, 0x17	; 23
    52a6:	88 f4       	brcc	.+34     	; 0x52ca <modf+0x40>
    52a8:	ab 2f       	mov	r26, r27
    52aa:	00 24       	eor	r0, r0
    52ac:	46 95       	lsr	r20
    52ae:	37 95       	ror	r19
    52b0:	27 95       	ror	r18
    52b2:	01 1c       	adc	r0, r1
    52b4:	a3 95       	inc	r26
    52b6:	d2 f3       	brmi	.-12     	; 0x52ac <modf+0x22>
    52b8:	00 20       	and	r0, r0
    52ba:	69 f0       	breq	.+26     	; 0x52d6 <modf+0x4c>
    52bc:	22 0f       	add	r18, r18
    52be:	33 1f       	adc	r19, r19
    52c0:	44 1f       	adc	r20, r20
    52c2:	b3 95       	inc	r27
    52c4:	da f3       	brmi	.-10     	; 0x52bc <modf+0x32>
    52c6:	0d d0       	rcall	.+26     	; 0x52e2 <modf+0x58>
    52c8:	67 cc       	rjmp	.-1842   	; 0x4b98 <__subsf3>
    52ca:	61 30       	cpi	r22, 0x01	; 1
    52cc:	71 05       	cpc	r23, r1
    52ce:	a0 e8       	ldi	r26, 0x80	; 128
    52d0:	8a 07       	cpc	r24, r26
    52d2:	b9 46       	sbci	r27, 0x69	; 105
    52d4:	30 f4       	brcc	.+12     	; 0x52e2 <modf+0x58>
    52d6:	9b 01       	movw	r18, r22
    52d8:	ac 01       	movw	r20, r24
    52da:	66 27       	eor	r22, r22
    52dc:	77 27       	eor	r23, r23
    52de:	88 27       	eor	r24, r24
    52e0:	90 78       	andi	r25, 0x80	; 128
    52e2:	30 96       	adiw	r30, 0x00	; 0
    52e4:	21 f0       	breq	.+8      	; 0x52ee <modf+0x64>
    52e6:	20 83       	st	Z, r18
    52e8:	31 83       	std	Z+1, r19	; 0x01
    52ea:	42 83       	std	Z+2, r20	; 0x02
    52ec:	53 83       	std	Z+3, r21	; 0x03
    52ee:	08 95       	ret

000052f0 <__fp_mpack>:
    52f0:	9f 3f       	cpi	r25, 0xFF	; 255
    52f2:	31 f0       	breq	.+12     	; 0x5300 <__fp_mpack_finite+0xc>

000052f4 <__fp_mpack_finite>:
    52f4:	91 50       	subi	r25, 0x01	; 1
    52f6:	20 f4       	brcc	.+8      	; 0x5300 <__fp_mpack_finite+0xc>
    52f8:	87 95       	ror	r24
    52fa:	77 95       	ror	r23
    52fc:	67 95       	ror	r22
    52fe:	b7 95       	ror	r27
    5300:	88 0f       	add	r24, r24
    5302:	91 1d       	adc	r25, r1
    5304:	96 95       	lsr	r25
    5306:	87 95       	ror	r24
    5308:	97 f9       	bld	r25, 7
    530a:	08 95       	ret

0000530c <vfprintf>:
    530c:	a1 e1       	ldi	r26, 0x11	; 17
    530e:	b0 e0       	ldi	r27, 0x00	; 0
    5310:	eb e8       	ldi	r30, 0x8B	; 139
    5312:	f9 e2       	ldi	r31, 0x29	; 41
    5314:	b7 c3       	rjmp	.+1902   	; 0x5a84 <__prologue_saves__>
    5316:	3c 01       	movw	r6, r24
    5318:	7f 87       	std	Y+15, r23	; 0x0f
    531a:	6e 87       	std	Y+14, r22	; 0x0e
    531c:	6a 01       	movw	r12, r20
    531e:	fc 01       	movw	r30, r24
    5320:	17 82       	std	Z+7, r1	; 0x07
    5322:	16 82       	std	Z+6, r1	; 0x06
    5324:	83 81       	ldd	r24, Z+3	; 0x03
    5326:	81 fd       	sbrc	r24, 1
    5328:	03 c0       	rjmp	.+6      	; 0x5330 <vfprintf+0x24>
    532a:	6f ef       	ldi	r22, 0xFF	; 255
    532c:	7f ef       	ldi	r23, 0xFF	; 255
    532e:	52 c3       	rjmp	.+1700   	; 0x59d4 <vfprintf+0x6c8>
    5330:	9e 01       	movw	r18, r28
    5332:	2f 5f       	subi	r18, 0xFF	; 255
    5334:	3f 4f       	sbci	r19, 0xFF	; 255
    5336:	39 8b       	std	Y+17, r19	; 0x11
    5338:	28 8b       	std	Y+16, r18	; 0x10
    533a:	f3 01       	movw	r30, r6
    533c:	23 81       	ldd	r18, Z+3	; 0x03
    533e:	ee 85       	ldd	r30, Y+14	; 0x0e
    5340:	ff 85       	ldd	r31, Y+15	; 0x0f
    5342:	23 fd       	sbrc	r18, 3
    5344:	85 91       	lpm	r24, Z+
    5346:	23 ff       	sbrs	r18, 3
    5348:	81 91       	ld	r24, Z+
    534a:	ff 87       	std	Y+15, r31	; 0x0f
    534c:	ee 87       	std	Y+14, r30	; 0x0e
    534e:	88 23       	and	r24, r24
    5350:	09 f4       	brne	.+2      	; 0x5354 <vfprintf+0x48>
    5352:	3d c3       	rjmp	.+1658   	; 0x59ce <vfprintf+0x6c2>
    5354:	85 32       	cpi	r24, 0x25	; 37
    5356:	51 f4       	brne	.+20     	; 0x536c <vfprintf+0x60>
    5358:	ee 85       	ldd	r30, Y+14	; 0x0e
    535a:	ff 85       	ldd	r31, Y+15	; 0x0f
    535c:	23 fd       	sbrc	r18, 3
    535e:	85 91       	lpm	r24, Z+
    5360:	23 ff       	sbrs	r18, 3
    5362:	81 91       	ld	r24, Z+
    5364:	ff 87       	std	Y+15, r31	; 0x0f
    5366:	ee 87       	std	Y+14, r30	; 0x0e
    5368:	85 32       	cpi	r24, 0x25	; 37
    536a:	21 f4       	brne	.+8      	; 0x5374 <vfprintf+0x68>
    536c:	90 e0       	ldi	r25, 0x00	; 0
    536e:	b3 01       	movw	r22, r6
    5370:	20 d6       	rcall	.+3136   	; 0x5fb2 <fputc>
    5372:	e3 cf       	rjmp	.-58     	; 0x533a <vfprintf+0x2e>
    5374:	98 2f       	mov	r25, r24
    5376:	10 e0       	ldi	r17, 0x00	; 0
    5378:	88 24       	eor	r8, r8
    537a:	99 24       	eor	r9, r9
    537c:	10 32       	cpi	r17, 0x20	; 32
    537e:	b0 f4       	brcc	.+44     	; 0x53ac <vfprintf+0xa0>
    5380:	9b 32       	cpi	r25, 0x2B	; 43
    5382:	69 f0       	breq	.+26     	; 0x539e <vfprintf+0x92>
    5384:	9c 32       	cpi	r25, 0x2C	; 44
    5386:	28 f4       	brcc	.+10     	; 0x5392 <vfprintf+0x86>
    5388:	90 32       	cpi	r25, 0x20	; 32
    538a:	51 f0       	breq	.+20     	; 0x53a0 <vfprintf+0x94>
    538c:	93 32       	cpi	r25, 0x23	; 35
    538e:	71 f4       	brne	.+28     	; 0x53ac <vfprintf+0xa0>
    5390:	0b c0       	rjmp	.+22     	; 0x53a8 <vfprintf+0x9c>
    5392:	9d 32       	cpi	r25, 0x2D	; 45
    5394:	39 f0       	breq	.+14     	; 0x53a4 <vfprintf+0x98>
    5396:	90 33       	cpi	r25, 0x30	; 48
    5398:	49 f4       	brne	.+18     	; 0x53ac <vfprintf+0xa0>
    539a:	11 60       	ori	r17, 0x01	; 1
    539c:	28 c0       	rjmp	.+80     	; 0x53ee <vfprintf+0xe2>
    539e:	12 60       	ori	r17, 0x02	; 2
    53a0:	14 60       	ori	r17, 0x04	; 4
    53a2:	25 c0       	rjmp	.+74     	; 0x53ee <vfprintf+0xe2>
    53a4:	18 60       	ori	r17, 0x08	; 8
    53a6:	23 c0       	rjmp	.+70     	; 0x53ee <vfprintf+0xe2>
    53a8:	10 61       	ori	r17, 0x10	; 16
    53aa:	21 c0       	rjmp	.+66     	; 0x53ee <vfprintf+0xe2>
    53ac:	17 fd       	sbrc	r17, 7
    53ae:	2a c0       	rjmp	.+84     	; 0x5404 <vfprintf+0xf8>
    53b0:	89 2f       	mov	r24, r25
    53b2:	80 53       	subi	r24, 0x30	; 48
    53b4:	8a 30       	cpi	r24, 0x0A	; 10
    53b6:	78 f4       	brcc	.+30     	; 0x53d6 <vfprintf+0xca>
    53b8:	16 ff       	sbrs	r17, 6
    53ba:	06 c0       	rjmp	.+12     	; 0x53c8 <vfprintf+0xbc>
    53bc:	fa e0       	ldi	r31, 0x0A	; 10
    53be:	9f 9e       	mul	r9, r31
    53c0:	90 2c       	mov	r9, r0
    53c2:	11 24       	eor	r1, r1
    53c4:	98 0e       	add	r9, r24
    53c6:	13 c0       	rjmp	.+38     	; 0x53ee <vfprintf+0xe2>
    53c8:	3a e0       	ldi	r19, 0x0A	; 10
    53ca:	83 9e       	mul	r8, r19
    53cc:	80 2c       	mov	r8, r0
    53ce:	11 24       	eor	r1, r1
    53d0:	88 0e       	add	r8, r24
    53d2:	10 62       	ori	r17, 0x20	; 32
    53d4:	0c c0       	rjmp	.+24     	; 0x53ee <vfprintf+0xe2>
    53d6:	9e 32       	cpi	r25, 0x2E	; 46
    53d8:	21 f4       	brne	.+8      	; 0x53e2 <vfprintf+0xd6>
    53da:	16 fd       	sbrc	r17, 6
    53dc:	f8 c2       	rjmp	.+1520   	; 0x59ce <vfprintf+0x6c2>
    53de:	10 64       	ori	r17, 0x40	; 64
    53e0:	06 c0       	rjmp	.+12     	; 0x53ee <vfprintf+0xe2>
    53e2:	9c 36       	cpi	r25, 0x6C	; 108
    53e4:	11 f4       	brne	.+4      	; 0x53ea <vfprintf+0xde>
    53e6:	10 68       	ori	r17, 0x80	; 128
    53e8:	02 c0       	rjmp	.+4      	; 0x53ee <vfprintf+0xe2>
    53ea:	98 36       	cpi	r25, 0x68	; 104
    53ec:	59 f4       	brne	.+22     	; 0x5404 <vfprintf+0xf8>
    53ee:	ee 85       	ldd	r30, Y+14	; 0x0e
    53f0:	ff 85       	ldd	r31, Y+15	; 0x0f
    53f2:	23 fd       	sbrc	r18, 3
    53f4:	95 91       	lpm	r25, Z+
    53f6:	23 ff       	sbrs	r18, 3
    53f8:	91 91       	ld	r25, Z+
    53fa:	ff 87       	std	Y+15, r31	; 0x0f
    53fc:	ee 87       	std	Y+14, r30	; 0x0e
    53fe:	99 23       	and	r25, r25
    5400:	09 f0       	breq	.+2      	; 0x5404 <vfprintf+0xf8>
    5402:	bc cf       	rjmp	.-136    	; 0x537c <vfprintf+0x70>
    5404:	89 2f       	mov	r24, r25
    5406:	85 54       	subi	r24, 0x45	; 69
    5408:	83 30       	cpi	r24, 0x03	; 3
    540a:	20 f4       	brcc	.+8      	; 0x5414 <vfprintf+0x108>
    540c:	81 2f       	mov	r24, r17
    540e:	80 61       	ori	r24, 0x10	; 16
    5410:	90 5e       	subi	r25, 0xE0	; 224
    5412:	07 c0       	rjmp	.+14     	; 0x5422 <vfprintf+0x116>
    5414:	89 2f       	mov	r24, r25
    5416:	85 56       	subi	r24, 0x65	; 101
    5418:	83 30       	cpi	r24, 0x03	; 3
    541a:	08 f0       	brcs	.+2      	; 0x541e <vfprintf+0x112>
    541c:	8f c1       	rjmp	.+798    	; 0x573c <vfprintf+0x430>
    541e:	81 2f       	mov	r24, r17
    5420:	8f 7e       	andi	r24, 0xEF	; 239
    5422:	86 fd       	sbrc	r24, 6
    5424:	02 c0       	rjmp	.+4      	; 0x542a <vfprintf+0x11e>
    5426:	76 e0       	ldi	r23, 0x06	; 6
    5428:	97 2e       	mov	r9, r23
    542a:	6f e3       	ldi	r22, 0x3F	; 63
    542c:	f6 2e       	mov	r15, r22
    542e:	f8 22       	and	r15, r24
    5430:	95 36       	cpi	r25, 0x65	; 101
    5432:	19 f4       	brne	.+6      	; 0x543a <vfprintf+0x12e>
    5434:	f0 e4       	ldi	r31, 0x40	; 64
    5436:	ff 2a       	or	r15, r31
    5438:	07 c0       	rjmp	.+14     	; 0x5448 <vfprintf+0x13c>
    543a:	96 36       	cpi	r25, 0x66	; 102
    543c:	19 f4       	brne	.+6      	; 0x5444 <vfprintf+0x138>
    543e:	20 e8       	ldi	r18, 0x80	; 128
    5440:	f2 2a       	or	r15, r18
    5442:	02 c0       	rjmp	.+4      	; 0x5448 <vfprintf+0x13c>
    5444:	91 10       	cpse	r9, r1
    5446:	9a 94       	dec	r9
    5448:	f7 fe       	sbrs	r15, 7
    544a:	0a c0       	rjmp	.+20     	; 0x5460 <vfprintf+0x154>
    544c:	3b e3       	ldi	r19, 0x3B	; 59
    544e:	39 15       	cp	r19, r9
    5450:	18 f4       	brcc	.+6      	; 0x5458 <vfprintf+0x14c>
    5452:	5c e3       	ldi	r21, 0x3C	; 60
    5454:	b5 2e       	mov	r11, r21
    5456:	02 c0       	rjmp	.+4      	; 0x545c <vfprintf+0x150>
    5458:	b9 2c       	mov	r11, r9
    545a:	b3 94       	inc	r11
    545c:	27 e0       	ldi	r18, 0x07	; 7
    545e:	09 c0       	rjmp	.+18     	; 0x5472 <vfprintf+0x166>
    5460:	47 e0       	ldi	r20, 0x07	; 7
    5462:	49 15       	cp	r20, r9
    5464:	20 f4       	brcc	.+8      	; 0x546e <vfprintf+0x162>
    5466:	bb 24       	eor	r11, r11
    5468:	47 e0       	ldi	r20, 0x07	; 7
    546a:	94 2e       	mov	r9, r20
    546c:	f7 cf       	rjmp	.-18     	; 0x545c <vfprintf+0x150>
    546e:	29 2d       	mov	r18, r9
    5470:	bb 24       	eor	r11, r11
    5472:	c6 01       	movw	r24, r12
    5474:	04 96       	adiw	r24, 0x04	; 4
    5476:	9d 87       	std	Y+13, r25	; 0x0d
    5478:	8c 87       	std	Y+12, r24	; 0x0c
    547a:	f6 01       	movw	r30, r12
    547c:	60 81       	ld	r22, Z
    547e:	71 81       	ldd	r23, Z+1	; 0x01
    5480:	82 81       	ldd	r24, Z+2	; 0x02
    5482:	93 81       	ldd	r25, Z+3	; 0x03
    5484:	ae 01       	movw	r20, r28
    5486:	4f 5f       	subi	r20, 0xFF	; 255
    5488:	5f 4f       	sbci	r21, 0xFF	; 255
    548a:	0b 2d       	mov	r16, r11
    548c:	a4 d4       	rcall	.+2376   	; 0x5dd6 <__ftoa_engine>
    548e:	6c 01       	movw	r12, r24
    5490:	09 81       	ldd	r16, Y+1	; 0x01
    5492:	20 2e       	mov	r2, r16
    5494:	33 24       	eor	r3, r3
    5496:	00 ff       	sbrs	r16, 0
    5498:	04 c0       	rjmp	.+8      	; 0x54a2 <vfprintf+0x196>
    549a:	03 fd       	sbrc	r16, 3
    549c:	02 c0       	rjmp	.+4      	; 0x54a2 <vfprintf+0x196>
    549e:	1d e2       	ldi	r17, 0x2D	; 45
    54a0:	09 c0       	rjmp	.+18     	; 0x54b4 <vfprintf+0x1a8>
    54a2:	f1 fe       	sbrs	r15, 1
    54a4:	02 c0       	rjmp	.+4      	; 0x54aa <vfprintf+0x19e>
    54a6:	1b e2       	ldi	r17, 0x2B	; 43
    54a8:	05 c0       	rjmp	.+10     	; 0x54b4 <vfprintf+0x1a8>
    54aa:	f2 fc       	sbrc	r15, 2
    54ac:	02 c0       	rjmp	.+4      	; 0x54b2 <vfprintf+0x1a6>
    54ae:	10 e0       	ldi	r17, 0x00	; 0
    54b0:	01 c0       	rjmp	.+2      	; 0x54b4 <vfprintf+0x1a8>
    54b2:	10 e2       	ldi	r17, 0x20	; 32
    54b4:	c1 01       	movw	r24, r2
    54b6:	8c 70       	andi	r24, 0x0C	; 12
    54b8:	90 70       	andi	r25, 0x00	; 0
    54ba:	89 2b       	or	r24, r25
    54bc:	a1 f1       	breq	.+104    	; 0x5526 <vfprintf+0x21a>
    54be:	11 23       	and	r17, r17
    54c0:	11 f4       	brne	.+4      	; 0x54c6 <vfprintf+0x1ba>
    54c2:	83 e0       	ldi	r24, 0x03	; 3
    54c4:	01 c0       	rjmp	.+2      	; 0x54c8 <vfprintf+0x1bc>
    54c6:	84 e0       	ldi	r24, 0x04	; 4
    54c8:	88 15       	cp	r24, r8
    54ca:	10 f0       	brcs	.+4      	; 0x54d0 <vfprintf+0x1c4>
    54cc:	88 24       	eor	r8, r8
    54ce:	09 c0       	rjmp	.+18     	; 0x54e2 <vfprintf+0x1d6>
    54d0:	88 1a       	sub	r8, r24
    54d2:	f3 fc       	sbrc	r15, 3
    54d4:	06 c0       	rjmp	.+12     	; 0x54e2 <vfprintf+0x1d6>
    54d6:	80 e2       	ldi	r24, 0x20	; 32
    54d8:	90 e0       	ldi	r25, 0x00	; 0
    54da:	b3 01       	movw	r22, r6
    54dc:	6a d5       	rcall	.+2772   	; 0x5fb2 <fputc>
    54de:	8a 94       	dec	r8
    54e0:	d1 f7       	brne	.-12     	; 0x54d6 <vfprintf+0x1ca>
    54e2:	11 23       	and	r17, r17
    54e4:	21 f0       	breq	.+8      	; 0x54ee <vfprintf+0x1e2>
    54e6:	81 2f       	mov	r24, r17
    54e8:	90 e0       	ldi	r25, 0x00	; 0
    54ea:	b3 01       	movw	r22, r6
    54ec:	62 d5       	rcall	.+2756   	; 0x5fb2 <fputc>
    54ee:	23 fe       	sbrs	r2, 3
    54f0:	03 c0       	rjmp	.+6      	; 0x54f8 <vfprintf+0x1ec>
    54f2:	0f e5       	ldi	r16, 0x5F	; 95
    54f4:	15 e0       	ldi	r17, 0x05	; 5
    54f6:	0d c0       	rjmp	.+26     	; 0x5512 <vfprintf+0x206>
    54f8:	03 e6       	ldi	r16, 0x63	; 99
    54fa:	15 e0       	ldi	r17, 0x05	; 5
    54fc:	0a c0       	rjmp	.+20     	; 0x5512 <vfprintf+0x206>
    54fe:	e1 14       	cp	r14, r1
    5500:	f1 04       	cpc	r15, r1
    5502:	09 f0       	breq	.+2      	; 0x5506 <vfprintf+0x1fa>
    5504:	80 52       	subi	r24, 0x20	; 32
    5506:	90 e0       	ldi	r25, 0x00	; 0
    5508:	b3 01       	movw	r22, r6
    550a:	53 d5       	rcall	.+2726   	; 0x5fb2 <fputc>
    550c:	0f 5f       	subi	r16, 0xFF	; 255
    550e:	1f 4f       	sbci	r17, 0xFF	; 255
    5510:	05 c0       	rjmp	.+10     	; 0x551c <vfprintf+0x210>
    5512:	ef 2c       	mov	r14, r15
    5514:	ff 24       	eor	r15, r15
    5516:	f0 e1       	ldi	r31, 0x10	; 16
    5518:	ef 22       	and	r14, r31
    551a:	ff 24       	eor	r15, r15
    551c:	f8 01       	movw	r30, r16
    551e:	84 91       	lpm	r24, Z+
    5520:	88 23       	and	r24, r24
    5522:	69 f7       	brne	.-38     	; 0x54fe <vfprintf+0x1f2>
    5524:	08 c1       	rjmp	.+528    	; 0x5736 <vfprintf+0x42a>
    5526:	f7 fe       	sbrs	r15, 7
    5528:	12 c0       	rjmp	.+36     	; 0x554e <vfprintf+0x242>
    552a:	bc 0c       	add	r11, r12
    552c:	24 fe       	sbrs	r2, 4
    552e:	04 c0       	rjmp	.+8      	; 0x5538 <vfprintf+0x22c>
    5530:	8a 81       	ldd	r24, Y+2	; 0x02
    5532:	81 33       	cpi	r24, 0x31	; 49
    5534:	09 f4       	brne	.+2      	; 0x5538 <vfprintf+0x22c>
    5536:	ba 94       	dec	r11
    5538:	1b 14       	cp	r1, r11
    553a:	1c f0       	brlt	.+6      	; 0x5542 <vfprintf+0x236>
    553c:	bb 24       	eor	r11, r11
    553e:	b3 94       	inc	r11
    5540:	2d c0       	rjmp	.+90     	; 0x559c <vfprintf+0x290>
    5542:	f8 e0       	ldi	r31, 0x08	; 8
    5544:	fb 15       	cp	r31, r11
    5546:	50 f5       	brcc	.+84     	; 0x559c <vfprintf+0x290>
    5548:	38 e0       	ldi	r19, 0x08	; 8
    554a:	b3 2e       	mov	r11, r19
    554c:	27 c0       	rjmp	.+78     	; 0x559c <vfprintf+0x290>
    554e:	f6 fc       	sbrc	r15, 6
    5550:	25 c0       	rjmp	.+74     	; 0x559c <vfprintf+0x290>
    5552:	89 2d       	mov	r24, r9
    5554:	90 e0       	ldi	r25, 0x00	; 0
    5556:	8c 15       	cp	r24, r12
    5558:	9d 05       	cpc	r25, r13
    555a:	4c f0       	brlt	.+18     	; 0x556e <vfprintf+0x262>
    555c:	2c ef       	ldi	r18, 0xFC	; 252
    555e:	c2 16       	cp	r12, r18
    5560:	2f ef       	ldi	r18, 0xFF	; 255
    5562:	d2 06       	cpc	r13, r18
    5564:	24 f0       	brlt	.+8      	; 0x556e <vfprintf+0x262>
    5566:	30 e8       	ldi	r19, 0x80	; 128
    5568:	f3 2a       	or	r15, r19
    556a:	01 c0       	rjmp	.+2      	; 0x556e <vfprintf+0x262>
    556c:	9a 94       	dec	r9
    556e:	99 20       	and	r9, r9
    5570:	49 f0       	breq	.+18     	; 0x5584 <vfprintf+0x278>
    5572:	e2 e0       	ldi	r30, 0x02	; 2
    5574:	f0 e0       	ldi	r31, 0x00	; 0
    5576:	ec 0f       	add	r30, r28
    5578:	fd 1f       	adc	r31, r29
    557a:	e9 0d       	add	r30, r9
    557c:	f1 1d       	adc	r31, r1
    557e:	80 81       	ld	r24, Z
    5580:	80 33       	cpi	r24, 0x30	; 48
    5582:	a1 f3       	breq	.-24     	; 0x556c <vfprintf+0x260>
    5584:	f7 fe       	sbrs	r15, 7
    5586:	0a c0       	rjmp	.+20     	; 0x559c <vfprintf+0x290>
    5588:	b9 2c       	mov	r11, r9
    558a:	b3 94       	inc	r11
    558c:	89 2d       	mov	r24, r9
    558e:	90 e0       	ldi	r25, 0x00	; 0
    5590:	c8 16       	cp	r12, r24
    5592:	d9 06       	cpc	r13, r25
    5594:	14 f0       	brlt	.+4      	; 0x559a <vfprintf+0x28e>
    5596:	99 24       	eor	r9, r9
    5598:	01 c0       	rjmp	.+2      	; 0x559c <vfprintf+0x290>
    559a:	9c 18       	sub	r9, r12
    559c:	f7 fc       	sbrc	r15, 7
    559e:	03 c0       	rjmp	.+6      	; 0x55a6 <vfprintf+0x29a>
    55a0:	25 e0       	ldi	r18, 0x05	; 5
    55a2:	30 e0       	ldi	r19, 0x00	; 0
    55a4:	09 c0       	rjmp	.+18     	; 0x55b8 <vfprintf+0x2ac>
    55a6:	1c 14       	cp	r1, r12
    55a8:	1d 04       	cpc	r1, r13
    55aa:	1c f0       	brlt	.+6      	; 0x55b2 <vfprintf+0x2a6>
    55ac:	21 e0       	ldi	r18, 0x01	; 1
    55ae:	30 e0       	ldi	r19, 0x00	; 0
    55b0:	03 c0       	rjmp	.+6      	; 0x55b8 <vfprintf+0x2ac>
    55b2:	96 01       	movw	r18, r12
    55b4:	2f 5f       	subi	r18, 0xFF	; 255
    55b6:	3f 4f       	sbci	r19, 0xFF	; 255
    55b8:	11 23       	and	r17, r17
    55ba:	11 f0       	breq	.+4      	; 0x55c0 <vfprintf+0x2b4>
    55bc:	2f 5f       	subi	r18, 0xFF	; 255
    55be:	3f 4f       	sbci	r19, 0xFF	; 255
    55c0:	99 20       	and	r9, r9
    55c2:	29 f0       	breq	.+10     	; 0x55ce <vfprintf+0x2c2>
    55c4:	89 2d       	mov	r24, r9
    55c6:	90 e0       	ldi	r25, 0x00	; 0
    55c8:	01 96       	adiw	r24, 0x01	; 1
    55ca:	28 0f       	add	r18, r24
    55cc:	39 1f       	adc	r19, r25
    55ce:	88 2d       	mov	r24, r8
    55d0:	90 e0       	ldi	r25, 0x00	; 0
    55d2:	28 17       	cp	r18, r24
    55d4:	39 07       	cpc	r19, r25
    55d6:	14 f0       	brlt	.+4      	; 0x55dc <vfprintf+0x2d0>
    55d8:	88 24       	eor	r8, r8
    55da:	01 c0       	rjmp	.+2      	; 0x55de <vfprintf+0x2d2>
    55dc:	82 1a       	sub	r8, r18
    55de:	4f 2c       	mov	r4, r15
    55e0:	55 24       	eor	r5, r5
    55e2:	c2 01       	movw	r24, r4
    55e4:	89 70       	andi	r24, 0x09	; 9
    55e6:	90 70       	andi	r25, 0x00	; 0
    55e8:	89 2b       	or	r24, r25
    55ea:	31 f0       	breq	.+12     	; 0x55f8 <vfprintf+0x2ec>
    55ec:	07 c0       	rjmp	.+14     	; 0x55fc <vfprintf+0x2f0>
    55ee:	80 e2       	ldi	r24, 0x20	; 32
    55f0:	90 e0       	ldi	r25, 0x00	; 0
    55f2:	b3 01       	movw	r22, r6
    55f4:	de d4       	rcall	.+2492   	; 0x5fb2 <fputc>
    55f6:	8a 94       	dec	r8
    55f8:	88 20       	and	r8, r8
    55fa:	c9 f7       	brne	.-14     	; 0x55ee <vfprintf+0x2e2>
    55fc:	11 23       	and	r17, r17
    55fe:	21 f0       	breq	.+8      	; 0x5608 <vfprintf+0x2fc>
    5600:	81 2f       	mov	r24, r17
    5602:	90 e0       	ldi	r25, 0x00	; 0
    5604:	b3 01       	movw	r22, r6
    5606:	d5 d4       	rcall	.+2474   	; 0x5fb2 <fputc>
    5608:	43 fe       	sbrs	r4, 3
    560a:	06 c0       	rjmp	.+12     	; 0x5618 <vfprintf+0x30c>
    560c:	07 c0       	rjmp	.+14     	; 0x561c <vfprintf+0x310>
    560e:	80 e3       	ldi	r24, 0x30	; 48
    5610:	90 e0       	ldi	r25, 0x00	; 0
    5612:	b3 01       	movw	r22, r6
    5614:	ce d4       	rcall	.+2460   	; 0x5fb2 <fputc>
    5616:	8a 94       	dec	r8
    5618:	88 20       	and	r8, r8
    561a:	c9 f7       	brne	.-14     	; 0x560e <vfprintf+0x302>
    561c:	f7 fe       	sbrs	r15, 7
    561e:	44 c0       	rjmp	.+136    	; 0x56a8 <vfprintf+0x39c>
    5620:	86 01       	movw	r16, r12
    5622:	d7 fe       	sbrs	r13, 7
    5624:	02 c0       	rjmp	.+4      	; 0x562a <vfprintf+0x31e>
    5626:	00 e0       	ldi	r16, 0x00	; 0
    5628:	10 e0       	ldi	r17, 0x00	; 0
    562a:	76 01       	movw	r14, r12
    562c:	08 94       	sec
    562e:	e1 1c       	adc	r14, r1
    5630:	f1 1c       	adc	r15, r1
    5632:	e0 1a       	sub	r14, r16
    5634:	f1 0a       	sbc	r15, r17
    5636:	41 e0       	ldi	r20, 0x01	; 1
    5638:	50 e0       	ldi	r21, 0x00	; 0
    563a:	4c 0f       	add	r20, r28
    563c:	5d 1f       	adc	r21, r29
    563e:	e4 0e       	add	r14, r20
    5640:	f5 1e       	adc	r15, r21
    5642:	26 01       	movw	r4, r12
    5644:	4b 18       	sub	r4, r11
    5646:	51 08       	sbc	r5, r1
    5648:	89 2d       	mov	r24, r9
    564a:	90 e0       	ldi	r25, 0x00	; 0
    564c:	aa 24       	eor	r10, r10
    564e:	bb 24       	eor	r11, r11
    5650:	a8 1a       	sub	r10, r24
    5652:	b9 0a       	sbc	r11, r25
    5654:	5f ef       	ldi	r21, 0xFF	; 255
    5656:	0f 3f       	cpi	r16, 0xFF	; 255
    5658:	15 07       	cpc	r17, r21
    565a:	21 f4       	brne	.+8      	; 0x5664 <vfprintf+0x358>
    565c:	8e e2       	ldi	r24, 0x2E	; 46
    565e:	90 e0       	ldi	r25, 0x00	; 0
    5660:	b3 01       	movw	r22, r6
    5662:	a7 d4       	rcall	.+2382   	; 0x5fb2 <fputc>
    5664:	c0 16       	cp	r12, r16
    5666:	d1 06       	cpc	r13, r17
    5668:	34 f0       	brlt	.+12     	; 0x5676 <vfprintf+0x36a>
    566a:	40 16       	cp	r4, r16
    566c:	51 06       	cpc	r5, r17
    566e:	1c f4       	brge	.+6      	; 0x5676 <vfprintf+0x36a>
    5670:	f7 01       	movw	r30, r14
    5672:	80 81       	ld	r24, Z
    5674:	01 c0       	rjmp	.+2      	; 0x5678 <vfprintf+0x36c>
    5676:	80 e3       	ldi	r24, 0x30	; 48
    5678:	01 50       	subi	r16, 0x01	; 1
    567a:	10 40       	sbci	r17, 0x00	; 0
    567c:	08 94       	sec
    567e:	e1 1c       	adc	r14, r1
    5680:	f1 1c       	adc	r15, r1
    5682:	0a 15       	cp	r16, r10
    5684:	1b 05       	cpc	r17, r11
    5686:	24 f0       	brlt	.+8      	; 0x5690 <vfprintf+0x384>
    5688:	90 e0       	ldi	r25, 0x00	; 0
    568a:	b3 01       	movw	r22, r6
    568c:	92 d4       	rcall	.+2340   	; 0x5fb2 <fputc>
    568e:	e2 cf       	rjmp	.-60     	; 0x5654 <vfprintf+0x348>
    5690:	0c 15       	cp	r16, r12
    5692:	1d 05       	cpc	r17, r13
    5694:	39 f4       	brne	.+14     	; 0x56a4 <vfprintf+0x398>
    5696:	9a 81       	ldd	r25, Y+2	; 0x02
    5698:	96 33       	cpi	r25, 0x36	; 54
    569a:	18 f4       	brcc	.+6      	; 0x56a2 <vfprintf+0x396>
    569c:	95 33       	cpi	r25, 0x35	; 53
    569e:	11 f4       	brne	.+4      	; 0x56a4 <vfprintf+0x398>
    56a0:	24 fe       	sbrs	r2, 4
    56a2:	81 e3       	ldi	r24, 0x31	; 49
    56a4:	90 e0       	ldi	r25, 0x00	; 0
    56a6:	45 c0       	rjmp	.+138    	; 0x5732 <vfprintf+0x426>
    56a8:	8a 81       	ldd	r24, Y+2	; 0x02
    56aa:	81 33       	cpi	r24, 0x31	; 49
    56ac:	09 f0       	breq	.+2      	; 0x56b0 <vfprintf+0x3a4>
    56ae:	0f 7e       	andi	r16, 0xEF	; 239
    56b0:	90 e0       	ldi	r25, 0x00	; 0
    56b2:	b3 01       	movw	r22, r6
    56b4:	7e d4       	rcall	.+2300   	; 0x5fb2 <fputc>
    56b6:	99 20       	and	r9, r9
    56b8:	91 f0       	breq	.+36     	; 0x56de <vfprintf+0x3d2>
    56ba:	8e e2       	ldi	r24, 0x2E	; 46
    56bc:	90 e0       	ldi	r25, 0x00	; 0
    56be:	b3 01       	movw	r22, r6
    56c0:	78 d4       	rcall	.+2288   	; 0x5fb2 <fputc>
    56c2:	12 e0       	ldi	r17, 0x02	; 2
    56c4:	e1 e0       	ldi	r30, 0x01	; 1
    56c6:	f0 e0       	ldi	r31, 0x00	; 0
    56c8:	ec 0f       	add	r30, r28
    56ca:	fd 1f       	adc	r31, r29
    56cc:	e1 0f       	add	r30, r17
    56ce:	f1 1d       	adc	r31, r1
    56d0:	1f 5f       	subi	r17, 0xFF	; 255
    56d2:	80 81       	ld	r24, Z
    56d4:	90 e0       	ldi	r25, 0x00	; 0
    56d6:	b3 01       	movw	r22, r6
    56d8:	6c d4       	rcall	.+2264   	; 0x5fb2 <fputc>
    56da:	9a 94       	dec	r9
    56dc:	99 f7       	brne	.-26     	; 0x56c4 <vfprintf+0x3b8>
    56de:	44 fc       	sbrc	r4, 4
    56e0:	03 c0       	rjmp	.+6      	; 0x56e8 <vfprintf+0x3dc>
    56e2:	85 e6       	ldi	r24, 0x65	; 101
    56e4:	90 e0       	ldi	r25, 0x00	; 0
    56e6:	02 c0       	rjmp	.+4      	; 0x56ec <vfprintf+0x3e0>
    56e8:	85 e4       	ldi	r24, 0x45	; 69
    56ea:	90 e0       	ldi	r25, 0x00	; 0
    56ec:	b3 01       	movw	r22, r6
    56ee:	61 d4       	rcall	.+2242   	; 0x5fb2 <fputc>
    56f0:	d7 fc       	sbrc	r13, 7
    56f2:	05 c0       	rjmp	.+10     	; 0x56fe <vfprintf+0x3f2>
    56f4:	c1 14       	cp	r12, r1
    56f6:	d1 04       	cpc	r13, r1
    56f8:	41 f4       	brne	.+16     	; 0x570a <vfprintf+0x3fe>
    56fa:	04 ff       	sbrs	r16, 4
    56fc:	06 c0       	rjmp	.+12     	; 0x570a <vfprintf+0x3fe>
    56fe:	d0 94       	com	r13
    5700:	c1 94       	neg	r12
    5702:	d1 08       	sbc	r13, r1
    5704:	d3 94       	inc	r13
    5706:	8d e2       	ldi	r24, 0x2D	; 45
    5708:	01 c0       	rjmp	.+2      	; 0x570c <vfprintf+0x400>
    570a:	8b e2       	ldi	r24, 0x2B	; 43
    570c:	90 e0       	ldi	r25, 0x00	; 0
    570e:	b3 01       	movw	r22, r6
    5710:	50 d4       	rcall	.+2208   	; 0x5fb2 <fputc>
    5712:	80 e3       	ldi	r24, 0x30	; 48
    5714:	05 c0       	rjmp	.+10     	; 0x5720 <vfprintf+0x414>
    5716:	8f 5f       	subi	r24, 0xFF	; 255
    5718:	26 ef       	ldi	r18, 0xF6	; 246
    571a:	3f ef       	ldi	r19, 0xFF	; 255
    571c:	c2 0e       	add	r12, r18
    571e:	d3 1e       	adc	r13, r19
    5720:	3a e0       	ldi	r19, 0x0A	; 10
    5722:	c3 16       	cp	r12, r19
    5724:	d1 04       	cpc	r13, r1
    5726:	bc f7       	brge	.-18     	; 0x5716 <vfprintf+0x40a>
    5728:	90 e0       	ldi	r25, 0x00	; 0
    572a:	b3 01       	movw	r22, r6
    572c:	42 d4       	rcall	.+2180   	; 0x5fb2 <fputc>
    572e:	c6 01       	movw	r24, r12
    5730:	c0 96       	adiw	r24, 0x30	; 48
    5732:	b3 01       	movw	r22, r6
    5734:	3e d4       	rcall	.+2172   	; 0x5fb2 <fputc>
    5736:	cc 84       	ldd	r12, Y+12	; 0x0c
    5738:	dd 84       	ldd	r13, Y+13	; 0x0d
    573a:	46 c1       	rjmp	.+652    	; 0x59c8 <vfprintf+0x6bc>
    573c:	93 36       	cpi	r25, 0x63	; 99
    573e:	31 f0       	breq	.+12     	; 0x574c <vfprintf+0x440>
    5740:	93 37       	cpi	r25, 0x73	; 115
    5742:	99 f0       	breq	.+38     	; 0x576a <vfprintf+0x45e>
    5744:	93 35       	cpi	r25, 0x53	; 83
    5746:	09 f0       	breq	.+2      	; 0x574a <vfprintf+0x43e>
    5748:	55 c0       	rjmp	.+170    	; 0x57f4 <vfprintf+0x4e8>
    574a:	22 c0       	rjmp	.+68     	; 0x5790 <vfprintf+0x484>
    574c:	f6 01       	movw	r30, r12
    574e:	80 81       	ld	r24, Z
    5750:	89 83       	std	Y+1, r24	; 0x01
    5752:	5e 01       	movw	r10, r28
    5754:	08 94       	sec
    5756:	a1 1c       	adc	r10, r1
    5758:	b1 1c       	adc	r11, r1
    575a:	22 e0       	ldi	r18, 0x02	; 2
    575c:	30 e0       	ldi	r19, 0x00	; 0
    575e:	c2 0e       	add	r12, r18
    5760:	d3 1e       	adc	r13, r19
    5762:	21 e0       	ldi	r18, 0x01	; 1
    5764:	e2 2e       	mov	r14, r18
    5766:	f1 2c       	mov	r15, r1
    5768:	11 c0       	rjmp	.+34     	; 0x578c <vfprintf+0x480>
    576a:	f6 01       	movw	r30, r12
    576c:	a0 80       	ld	r10, Z
    576e:	b1 80       	ldd	r11, Z+1	; 0x01
    5770:	16 fd       	sbrc	r17, 6
    5772:	03 c0       	rjmp	.+6      	; 0x577a <vfprintf+0x46e>
    5774:	6f ef       	ldi	r22, 0xFF	; 255
    5776:	7f ef       	ldi	r23, 0xFF	; 255
    5778:	02 c0       	rjmp	.+4      	; 0x577e <vfprintf+0x472>
    577a:	69 2d       	mov	r22, r9
    577c:	70 e0       	ldi	r23, 0x00	; 0
    577e:	22 e0       	ldi	r18, 0x02	; 2
    5780:	30 e0       	ldi	r19, 0x00	; 0
    5782:	c2 0e       	add	r12, r18
    5784:	d3 1e       	adc	r13, r19
    5786:	c5 01       	movw	r24, r10
    5788:	09 d4       	rcall	.+2066   	; 0x5f9c <strnlen>
    578a:	7c 01       	movw	r14, r24
    578c:	1f 77       	andi	r17, 0x7F	; 127
    578e:	12 c0       	rjmp	.+36     	; 0x57b4 <vfprintf+0x4a8>
    5790:	f6 01       	movw	r30, r12
    5792:	a0 80       	ld	r10, Z
    5794:	b1 80       	ldd	r11, Z+1	; 0x01
    5796:	16 fd       	sbrc	r17, 6
    5798:	03 c0       	rjmp	.+6      	; 0x57a0 <vfprintf+0x494>
    579a:	6f ef       	ldi	r22, 0xFF	; 255
    579c:	7f ef       	ldi	r23, 0xFF	; 255
    579e:	02 c0       	rjmp	.+4      	; 0x57a4 <vfprintf+0x498>
    57a0:	69 2d       	mov	r22, r9
    57a2:	70 e0       	ldi	r23, 0x00	; 0
    57a4:	22 e0       	ldi	r18, 0x02	; 2
    57a6:	30 e0       	ldi	r19, 0x00	; 0
    57a8:	c2 0e       	add	r12, r18
    57aa:	d3 1e       	adc	r13, r19
    57ac:	c5 01       	movw	r24, r10
    57ae:	eb d3       	rcall	.+2006   	; 0x5f86 <strnlen_P>
    57b0:	7c 01       	movw	r14, r24
    57b2:	10 68       	ori	r17, 0x80	; 128
    57b4:	13 ff       	sbrs	r17, 3
    57b6:	06 c0       	rjmp	.+12     	; 0x57c4 <vfprintf+0x4b8>
    57b8:	19 c0       	rjmp	.+50     	; 0x57ec <vfprintf+0x4e0>
    57ba:	80 e2       	ldi	r24, 0x20	; 32
    57bc:	90 e0       	ldi	r25, 0x00	; 0
    57be:	b3 01       	movw	r22, r6
    57c0:	f8 d3       	rcall	.+2032   	; 0x5fb2 <fputc>
    57c2:	8a 94       	dec	r8
    57c4:	88 2d       	mov	r24, r8
    57c6:	90 e0       	ldi	r25, 0x00	; 0
    57c8:	e8 16       	cp	r14, r24
    57ca:	f9 06       	cpc	r15, r25
    57cc:	b0 f3       	brcs	.-20     	; 0x57ba <vfprintf+0x4ae>
    57ce:	0e c0       	rjmp	.+28     	; 0x57ec <vfprintf+0x4e0>
    57d0:	f5 01       	movw	r30, r10
    57d2:	17 fd       	sbrc	r17, 7
    57d4:	85 91       	lpm	r24, Z+
    57d6:	17 ff       	sbrs	r17, 7
    57d8:	81 91       	ld	r24, Z+
    57da:	5f 01       	movw	r10, r30
    57dc:	90 e0       	ldi	r25, 0x00	; 0
    57de:	b3 01       	movw	r22, r6
    57e0:	e8 d3       	rcall	.+2000   	; 0x5fb2 <fputc>
    57e2:	81 10       	cpse	r8, r1
    57e4:	8a 94       	dec	r8
    57e6:	08 94       	sec
    57e8:	e1 08       	sbc	r14, r1
    57ea:	f1 08       	sbc	r15, r1
    57ec:	e1 14       	cp	r14, r1
    57ee:	f1 04       	cpc	r15, r1
    57f0:	79 f7       	brne	.-34     	; 0x57d0 <vfprintf+0x4c4>
    57f2:	ea c0       	rjmp	.+468    	; 0x59c8 <vfprintf+0x6bc>
    57f4:	94 36       	cpi	r25, 0x64	; 100
    57f6:	11 f0       	breq	.+4      	; 0x57fc <vfprintf+0x4f0>
    57f8:	99 36       	cpi	r25, 0x69	; 105
    57fa:	81 f5       	brne	.+96     	; 0x585c <vfprintf+0x550>
    57fc:	17 ff       	sbrs	r17, 7
    57fe:	08 c0       	rjmp	.+16     	; 0x5810 <vfprintf+0x504>
    5800:	f6 01       	movw	r30, r12
    5802:	20 81       	ld	r18, Z
    5804:	31 81       	ldd	r19, Z+1	; 0x01
    5806:	42 81       	ldd	r20, Z+2	; 0x02
    5808:	53 81       	ldd	r21, Z+3	; 0x03
    580a:	84 e0       	ldi	r24, 0x04	; 4
    580c:	90 e0       	ldi	r25, 0x00	; 0
    580e:	0a c0       	rjmp	.+20     	; 0x5824 <vfprintf+0x518>
    5810:	f6 01       	movw	r30, r12
    5812:	80 81       	ld	r24, Z
    5814:	91 81       	ldd	r25, Z+1	; 0x01
    5816:	9c 01       	movw	r18, r24
    5818:	44 27       	eor	r20, r20
    581a:	37 fd       	sbrc	r19, 7
    581c:	40 95       	com	r20
    581e:	54 2f       	mov	r21, r20
    5820:	82 e0       	ldi	r24, 0x02	; 2
    5822:	90 e0       	ldi	r25, 0x00	; 0
    5824:	c8 0e       	add	r12, r24
    5826:	d9 1e       	adc	r13, r25
    5828:	9f e6       	ldi	r25, 0x6F	; 111
    582a:	f9 2e       	mov	r15, r25
    582c:	f1 22       	and	r15, r17
    582e:	57 ff       	sbrs	r21, 7
    5830:	09 c0       	rjmp	.+18     	; 0x5844 <vfprintf+0x538>
    5832:	50 95       	com	r21
    5834:	40 95       	com	r20
    5836:	30 95       	com	r19
    5838:	21 95       	neg	r18
    583a:	3f 4f       	sbci	r19, 0xFF	; 255
    583c:	4f 4f       	sbci	r20, 0xFF	; 255
    583e:	5f 4f       	sbci	r21, 0xFF	; 255
    5840:	90 e8       	ldi	r25, 0x80	; 128
    5842:	f9 2a       	or	r15, r25
    5844:	ca 01       	movw	r24, r20
    5846:	b9 01       	movw	r22, r18
    5848:	ae 01       	movw	r20, r28
    584a:	4f 5f       	subi	r20, 0xFF	; 255
    584c:	5f 4f       	sbci	r21, 0xFF	; 255
    584e:	2a e0       	ldi	r18, 0x0A	; 10
    5850:	30 e0       	ldi	r19, 0x00	; 0
    5852:	22 d4       	rcall	.+2116   	; 0x6098 <__ultoa_invert>
    5854:	e8 2e       	mov	r14, r24
    5856:	e8 89       	ldd	r30, Y+16	; 0x10
    5858:	ee 1a       	sub	r14, r30
    585a:	40 c0       	rjmp	.+128    	; 0x58dc <vfprintf+0x5d0>
    585c:	95 37       	cpi	r25, 0x75	; 117
    585e:	21 f4       	brne	.+8      	; 0x5868 <vfprintf+0x55c>
    5860:	1f 7e       	andi	r17, 0xEF	; 239
    5862:	2a e0       	ldi	r18, 0x0A	; 10
    5864:	30 e0       	ldi	r19, 0x00	; 0
    5866:	1c c0       	rjmp	.+56     	; 0x58a0 <vfprintf+0x594>
    5868:	19 7f       	andi	r17, 0xF9	; 249
    586a:	9f 36       	cpi	r25, 0x6F	; 111
    586c:	61 f0       	breq	.+24     	; 0x5886 <vfprintf+0x57a>
    586e:	90 37       	cpi	r25, 0x70	; 112
    5870:	20 f4       	brcc	.+8      	; 0x587a <vfprintf+0x56e>
    5872:	98 35       	cpi	r25, 0x58	; 88
    5874:	09 f0       	breq	.+2      	; 0x5878 <vfprintf+0x56c>
    5876:	ab c0       	rjmp	.+342    	; 0x59ce <vfprintf+0x6c2>
    5878:	0f c0       	rjmp	.+30     	; 0x5898 <vfprintf+0x58c>
    587a:	90 37       	cpi	r25, 0x70	; 112
    587c:	39 f0       	breq	.+14     	; 0x588c <vfprintf+0x580>
    587e:	98 37       	cpi	r25, 0x78	; 120
    5880:	09 f0       	breq	.+2      	; 0x5884 <vfprintf+0x578>
    5882:	a5 c0       	rjmp	.+330    	; 0x59ce <vfprintf+0x6c2>
    5884:	04 c0       	rjmp	.+8      	; 0x588e <vfprintf+0x582>
    5886:	28 e0       	ldi	r18, 0x08	; 8
    5888:	30 e0       	ldi	r19, 0x00	; 0
    588a:	0a c0       	rjmp	.+20     	; 0x58a0 <vfprintf+0x594>
    588c:	10 61       	ori	r17, 0x10	; 16
    588e:	14 fd       	sbrc	r17, 4
    5890:	14 60       	ori	r17, 0x04	; 4
    5892:	20 e1       	ldi	r18, 0x10	; 16
    5894:	30 e0       	ldi	r19, 0x00	; 0
    5896:	04 c0       	rjmp	.+8      	; 0x58a0 <vfprintf+0x594>
    5898:	14 fd       	sbrc	r17, 4
    589a:	16 60       	ori	r17, 0x06	; 6
    589c:	20 e1       	ldi	r18, 0x10	; 16
    589e:	32 e0       	ldi	r19, 0x02	; 2
    58a0:	17 ff       	sbrs	r17, 7
    58a2:	08 c0       	rjmp	.+16     	; 0x58b4 <vfprintf+0x5a8>
    58a4:	f6 01       	movw	r30, r12
    58a6:	60 81       	ld	r22, Z
    58a8:	71 81       	ldd	r23, Z+1	; 0x01
    58aa:	82 81       	ldd	r24, Z+2	; 0x02
    58ac:	93 81       	ldd	r25, Z+3	; 0x03
    58ae:	44 e0       	ldi	r20, 0x04	; 4
    58b0:	50 e0       	ldi	r21, 0x00	; 0
    58b2:	08 c0       	rjmp	.+16     	; 0x58c4 <vfprintf+0x5b8>
    58b4:	f6 01       	movw	r30, r12
    58b6:	80 81       	ld	r24, Z
    58b8:	91 81       	ldd	r25, Z+1	; 0x01
    58ba:	bc 01       	movw	r22, r24
    58bc:	80 e0       	ldi	r24, 0x00	; 0
    58be:	90 e0       	ldi	r25, 0x00	; 0
    58c0:	42 e0       	ldi	r20, 0x02	; 2
    58c2:	50 e0       	ldi	r21, 0x00	; 0
    58c4:	c4 0e       	add	r12, r20
    58c6:	d5 1e       	adc	r13, r21
    58c8:	ae 01       	movw	r20, r28
    58ca:	4f 5f       	subi	r20, 0xFF	; 255
    58cc:	5f 4f       	sbci	r21, 0xFF	; 255
    58ce:	e4 d3       	rcall	.+1992   	; 0x6098 <__ultoa_invert>
    58d0:	e8 2e       	mov	r14, r24
    58d2:	58 89       	ldd	r21, Y+16	; 0x10
    58d4:	e5 1a       	sub	r14, r21
    58d6:	8f e7       	ldi	r24, 0x7F	; 127
    58d8:	f8 2e       	mov	r15, r24
    58da:	f1 22       	and	r15, r17
    58dc:	f6 fe       	sbrs	r15, 6
    58de:	0b c0       	rjmp	.+22     	; 0x58f6 <vfprintf+0x5ea>
    58e0:	8e ef       	ldi	r24, 0xFE	; 254
    58e2:	f8 22       	and	r15, r24
    58e4:	e9 14       	cp	r14, r9
    58e6:	38 f4       	brcc	.+14     	; 0x58f6 <vfprintf+0x5ea>
    58e8:	f4 fe       	sbrs	r15, 4
    58ea:	07 c0       	rjmp	.+14     	; 0x58fa <vfprintf+0x5ee>
    58ec:	f2 fc       	sbrc	r15, 2
    58ee:	05 c0       	rjmp	.+10     	; 0x58fa <vfprintf+0x5ee>
    58f0:	9f ee       	ldi	r25, 0xEF	; 239
    58f2:	f9 22       	and	r15, r25
    58f4:	02 c0       	rjmp	.+4      	; 0x58fa <vfprintf+0x5ee>
    58f6:	1e 2d       	mov	r17, r14
    58f8:	01 c0       	rjmp	.+2      	; 0x58fc <vfprintf+0x5f0>
    58fa:	19 2d       	mov	r17, r9
    58fc:	f4 fe       	sbrs	r15, 4
    58fe:	0d c0       	rjmp	.+26     	; 0x591a <vfprintf+0x60e>
    5900:	fe 01       	movw	r30, r28
    5902:	ee 0d       	add	r30, r14
    5904:	f1 1d       	adc	r31, r1
    5906:	80 81       	ld	r24, Z
    5908:	80 33       	cpi	r24, 0x30	; 48
    590a:	19 f4       	brne	.+6      	; 0x5912 <vfprintf+0x606>
    590c:	e9 ee       	ldi	r30, 0xE9	; 233
    590e:	fe 22       	and	r15, r30
    5910:	08 c0       	rjmp	.+16     	; 0x5922 <vfprintf+0x616>
    5912:	1f 5f       	subi	r17, 0xFF	; 255
    5914:	f2 fe       	sbrs	r15, 2
    5916:	05 c0       	rjmp	.+10     	; 0x5922 <vfprintf+0x616>
    5918:	03 c0       	rjmp	.+6      	; 0x5920 <vfprintf+0x614>
    591a:	8f 2d       	mov	r24, r15
    591c:	86 78       	andi	r24, 0x86	; 134
    591e:	09 f0       	breq	.+2      	; 0x5922 <vfprintf+0x616>
    5920:	1f 5f       	subi	r17, 0xFF	; 255
    5922:	0f 2d       	mov	r16, r15
    5924:	f3 fc       	sbrc	r15, 3
    5926:	13 c0       	rjmp	.+38     	; 0x594e <vfprintf+0x642>
    5928:	f0 fe       	sbrs	r15, 0
    592a:	0e c0       	rjmp	.+28     	; 0x5948 <vfprintf+0x63c>
    592c:	18 15       	cp	r17, r8
    592e:	10 f0       	brcs	.+4      	; 0x5934 <vfprintf+0x628>
    5930:	9e 2c       	mov	r9, r14
    5932:	0a c0       	rjmp	.+20     	; 0x5948 <vfprintf+0x63c>
    5934:	9e 2c       	mov	r9, r14
    5936:	98 0c       	add	r9, r8
    5938:	91 1a       	sub	r9, r17
    593a:	18 2d       	mov	r17, r8
    593c:	05 c0       	rjmp	.+10     	; 0x5948 <vfprintf+0x63c>
    593e:	80 e2       	ldi	r24, 0x20	; 32
    5940:	90 e0       	ldi	r25, 0x00	; 0
    5942:	b3 01       	movw	r22, r6
    5944:	36 d3       	rcall	.+1644   	; 0x5fb2 <fputc>
    5946:	1f 5f       	subi	r17, 0xFF	; 255
    5948:	18 15       	cp	r17, r8
    594a:	c8 f3       	brcs	.-14     	; 0x593e <vfprintf+0x632>
    594c:	04 c0       	rjmp	.+8      	; 0x5956 <vfprintf+0x64a>
    594e:	18 15       	cp	r17, r8
    5950:	10 f4       	brcc	.+4      	; 0x5956 <vfprintf+0x64a>
    5952:	81 1a       	sub	r8, r17
    5954:	01 c0       	rjmp	.+2      	; 0x5958 <vfprintf+0x64c>
    5956:	88 24       	eor	r8, r8
    5958:	04 ff       	sbrs	r16, 4
    595a:	0e c0       	rjmp	.+28     	; 0x5978 <vfprintf+0x66c>
    595c:	80 e3       	ldi	r24, 0x30	; 48
    595e:	90 e0       	ldi	r25, 0x00	; 0
    5960:	b3 01       	movw	r22, r6
    5962:	27 d3       	rcall	.+1614   	; 0x5fb2 <fputc>
    5964:	02 ff       	sbrs	r16, 2
    5966:	1b c0       	rjmp	.+54     	; 0x599e <vfprintf+0x692>
    5968:	01 fd       	sbrc	r16, 1
    596a:	03 c0       	rjmp	.+6      	; 0x5972 <vfprintf+0x666>
    596c:	88 e7       	ldi	r24, 0x78	; 120
    596e:	90 e0       	ldi	r25, 0x00	; 0
    5970:	0e c0       	rjmp	.+28     	; 0x598e <vfprintf+0x682>
    5972:	88 e5       	ldi	r24, 0x58	; 88
    5974:	90 e0       	ldi	r25, 0x00	; 0
    5976:	0b c0       	rjmp	.+22     	; 0x598e <vfprintf+0x682>
    5978:	80 2f       	mov	r24, r16
    597a:	86 78       	andi	r24, 0x86	; 134
    597c:	81 f0       	breq	.+32     	; 0x599e <vfprintf+0x692>
    597e:	01 ff       	sbrs	r16, 1
    5980:	02 c0       	rjmp	.+4      	; 0x5986 <vfprintf+0x67a>
    5982:	8b e2       	ldi	r24, 0x2B	; 43
    5984:	01 c0       	rjmp	.+2      	; 0x5988 <vfprintf+0x67c>
    5986:	80 e2       	ldi	r24, 0x20	; 32
    5988:	f7 fc       	sbrc	r15, 7
    598a:	8d e2       	ldi	r24, 0x2D	; 45
    598c:	90 e0       	ldi	r25, 0x00	; 0
    598e:	b3 01       	movw	r22, r6
    5990:	10 d3       	rcall	.+1568   	; 0x5fb2 <fputc>
    5992:	05 c0       	rjmp	.+10     	; 0x599e <vfprintf+0x692>
    5994:	80 e3       	ldi	r24, 0x30	; 48
    5996:	90 e0       	ldi	r25, 0x00	; 0
    5998:	b3 01       	movw	r22, r6
    599a:	0b d3       	rcall	.+1558   	; 0x5fb2 <fputc>
    599c:	9a 94       	dec	r9
    599e:	e9 14       	cp	r14, r9
    59a0:	c8 f3       	brcs	.-14     	; 0x5994 <vfprintf+0x688>
    59a2:	ea 94       	dec	r14
    59a4:	e1 e0       	ldi	r30, 0x01	; 1
    59a6:	f0 e0       	ldi	r31, 0x00	; 0
    59a8:	ec 0f       	add	r30, r28
    59aa:	fd 1f       	adc	r31, r29
    59ac:	ee 0d       	add	r30, r14
    59ae:	f1 1d       	adc	r31, r1
    59b0:	80 81       	ld	r24, Z
    59b2:	90 e0       	ldi	r25, 0x00	; 0
    59b4:	b3 01       	movw	r22, r6
    59b6:	fd d2       	rcall	.+1530   	; 0x5fb2 <fputc>
    59b8:	ee 20       	and	r14, r14
    59ba:	99 f7       	brne	.-26     	; 0x59a2 <vfprintf+0x696>
    59bc:	05 c0       	rjmp	.+10     	; 0x59c8 <vfprintf+0x6bc>
    59be:	80 e2       	ldi	r24, 0x20	; 32
    59c0:	90 e0       	ldi	r25, 0x00	; 0
    59c2:	b3 01       	movw	r22, r6
    59c4:	f6 d2       	rcall	.+1516   	; 0x5fb2 <fputc>
    59c6:	8a 94       	dec	r8
    59c8:	88 20       	and	r8, r8
    59ca:	c9 f7       	brne	.-14     	; 0x59be <vfprintf+0x6b2>
    59cc:	b6 cc       	rjmp	.-1684   	; 0x533a <vfprintf+0x2e>
    59ce:	f3 01       	movw	r30, r6
    59d0:	66 81       	ldd	r22, Z+6	; 0x06
    59d2:	77 81       	ldd	r23, Z+7	; 0x07
    59d4:	cb 01       	movw	r24, r22
    59d6:	61 96       	adiw	r28, 0x11	; 17
    59d8:	e2 e1       	ldi	r30, 0x12	; 18
    59da:	70 c0       	rjmp	.+224    	; 0x5abc <__epilogue_restores__>

000059dc <__mulsi3>:
    59dc:	62 9f       	mul	r22, r18
    59de:	d0 01       	movw	r26, r0
    59e0:	73 9f       	mul	r23, r19
    59e2:	f0 01       	movw	r30, r0
    59e4:	82 9f       	mul	r24, r18
    59e6:	e0 0d       	add	r30, r0
    59e8:	f1 1d       	adc	r31, r1
    59ea:	64 9f       	mul	r22, r20
    59ec:	e0 0d       	add	r30, r0
    59ee:	f1 1d       	adc	r31, r1
    59f0:	92 9f       	mul	r25, r18
    59f2:	f0 0d       	add	r31, r0
    59f4:	83 9f       	mul	r24, r19
    59f6:	f0 0d       	add	r31, r0
    59f8:	74 9f       	mul	r23, r20
    59fa:	f0 0d       	add	r31, r0
    59fc:	65 9f       	mul	r22, r21
    59fe:	f0 0d       	add	r31, r0
    5a00:	99 27       	eor	r25, r25
    5a02:	72 9f       	mul	r23, r18
    5a04:	b0 0d       	add	r27, r0
    5a06:	e1 1d       	adc	r30, r1
    5a08:	f9 1f       	adc	r31, r25
    5a0a:	63 9f       	mul	r22, r19
    5a0c:	b0 0d       	add	r27, r0
    5a0e:	e1 1d       	adc	r30, r1
    5a10:	f9 1f       	adc	r31, r25
    5a12:	bd 01       	movw	r22, r26
    5a14:	cf 01       	movw	r24, r30
    5a16:	11 24       	eor	r1, r1
    5a18:	08 95       	ret

00005a1a <__divmodhi4>:
    5a1a:	97 fb       	bst	r25, 7
    5a1c:	09 2e       	mov	r0, r25
    5a1e:	07 26       	eor	r0, r23
    5a20:	0a d0       	rcall	.+20     	; 0x5a36 <__divmodhi4_neg1>
    5a22:	77 fd       	sbrc	r23, 7
    5a24:	04 d0       	rcall	.+8      	; 0x5a2e <__divmodhi4_neg2>
    5a26:	65 d0       	rcall	.+202    	; 0x5af2 <__udivmodhi4>
    5a28:	06 d0       	rcall	.+12     	; 0x5a36 <__divmodhi4_neg1>
    5a2a:	00 20       	and	r0, r0
    5a2c:	1a f4       	brpl	.+6      	; 0x5a34 <__divmodhi4_exit>

00005a2e <__divmodhi4_neg2>:
    5a2e:	70 95       	com	r23
    5a30:	61 95       	neg	r22
    5a32:	7f 4f       	sbci	r23, 0xFF	; 255

00005a34 <__divmodhi4_exit>:
    5a34:	08 95       	ret

00005a36 <__divmodhi4_neg1>:
    5a36:	f6 f7       	brtc	.-4      	; 0x5a34 <__divmodhi4_exit>
    5a38:	90 95       	com	r25
    5a3a:	81 95       	neg	r24
    5a3c:	9f 4f       	sbci	r25, 0xFF	; 255
    5a3e:	08 95       	ret

00005a40 <__udivmodsi4>:
    5a40:	a1 e2       	ldi	r26, 0x21	; 33
    5a42:	1a 2e       	mov	r1, r26
    5a44:	aa 1b       	sub	r26, r26
    5a46:	bb 1b       	sub	r27, r27
    5a48:	fd 01       	movw	r30, r26
    5a4a:	0d c0       	rjmp	.+26     	; 0x5a66 <__udivmodsi4_ep>

00005a4c <__udivmodsi4_loop>:
    5a4c:	aa 1f       	adc	r26, r26
    5a4e:	bb 1f       	adc	r27, r27
    5a50:	ee 1f       	adc	r30, r30
    5a52:	ff 1f       	adc	r31, r31
    5a54:	a2 17       	cp	r26, r18
    5a56:	b3 07       	cpc	r27, r19
    5a58:	e4 07       	cpc	r30, r20
    5a5a:	f5 07       	cpc	r31, r21
    5a5c:	20 f0       	brcs	.+8      	; 0x5a66 <__udivmodsi4_ep>
    5a5e:	a2 1b       	sub	r26, r18
    5a60:	b3 0b       	sbc	r27, r19
    5a62:	e4 0b       	sbc	r30, r20
    5a64:	f5 0b       	sbc	r31, r21

00005a66 <__udivmodsi4_ep>:
    5a66:	66 1f       	adc	r22, r22
    5a68:	77 1f       	adc	r23, r23
    5a6a:	88 1f       	adc	r24, r24
    5a6c:	99 1f       	adc	r25, r25
    5a6e:	1a 94       	dec	r1
    5a70:	69 f7       	brne	.-38     	; 0x5a4c <__udivmodsi4_loop>
    5a72:	60 95       	com	r22
    5a74:	70 95       	com	r23
    5a76:	80 95       	com	r24
    5a78:	90 95       	com	r25
    5a7a:	9b 01       	movw	r18, r22
    5a7c:	ac 01       	movw	r20, r24
    5a7e:	bd 01       	movw	r22, r26
    5a80:	cf 01       	movw	r24, r30
    5a82:	08 95       	ret

00005a84 <__prologue_saves__>:
    5a84:	2f 92       	push	r2
    5a86:	3f 92       	push	r3
    5a88:	4f 92       	push	r4
    5a8a:	5f 92       	push	r5
    5a8c:	6f 92       	push	r6
    5a8e:	7f 92       	push	r7
    5a90:	8f 92       	push	r8
    5a92:	9f 92       	push	r9
    5a94:	af 92       	push	r10
    5a96:	bf 92       	push	r11
    5a98:	cf 92       	push	r12
    5a9a:	df 92       	push	r13
    5a9c:	ef 92       	push	r14
    5a9e:	ff 92       	push	r15
    5aa0:	0f 93       	push	r16
    5aa2:	1f 93       	push	r17
    5aa4:	cf 93       	push	r28
    5aa6:	df 93       	push	r29
    5aa8:	cd b7       	in	r28, 0x3d	; 61
    5aaa:	de b7       	in	r29, 0x3e	; 62
    5aac:	ca 1b       	sub	r28, r26
    5aae:	db 0b       	sbc	r29, r27
    5ab0:	0f b6       	in	r0, 0x3f	; 63
    5ab2:	f8 94       	cli
    5ab4:	de bf       	out	0x3e, r29	; 62
    5ab6:	0f be       	out	0x3f, r0	; 63
    5ab8:	cd bf       	out	0x3d, r28	; 61
    5aba:	09 94       	ijmp

00005abc <__epilogue_restores__>:
    5abc:	2a 88       	ldd	r2, Y+18	; 0x12
    5abe:	39 88       	ldd	r3, Y+17	; 0x11
    5ac0:	48 88       	ldd	r4, Y+16	; 0x10
    5ac2:	5f 84       	ldd	r5, Y+15	; 0x0f
    5ac4:	6e 84       	ldd	r6, Y+14	; 0x0e
    5ac6:	7d 84       	ldd	r7, Y+13	; 0x0d
    5ac8:	8c 84       	ldd	r8, Y+12	; 0x0c
    5aca:	9b 84       	ldd	r9, Y+11	; 0x0b
    5acc:	aa 84       	ldd	r10, Y+10	; 0x0a
    5ace:	b9 84       	ldd	r11, Y+9	; 0x09
    5ad0:	c8 84       	ldd	r12, Y+8	; 0x08
    5ad2:	df 80       	ldd	r13, Y+7	; 0x07
    5ad4:	ee 80       	ldd	r14, Y+6	; 0x06
    5ad6:	fd 80       	ldd	r15, Y+5	; 0x05
    5ad8:	0c 81       	ldd	r16, Y+4	; 0x04
    5ada:	1b 81       	ldd	r17, Y+3	; 0x03
    5adc:	aa 81       	ldd	r26, Y+2	; 0x02
    5ade:	b9 81       	ldd	r27, Y+1	; 0x01
    5ae0:	ce 0f       	add	r28, r30
    5ae2:	d1 1d       	adc	r29, r1
    5ae4:	0f b6       	in	r0, 0x3f	; 63
    5ae6:	f8 94       	cli
    5ae8:	de bf       	out	0x3e, r29	; 62
    5aea:	0f be       	out	0x3f, r0	; 63
    5aec:	cd bf       	out	0x3d, r28	; 61
    5aee:	ed 01       	movw	r28, r26
    5af0:	08 95       	ret

00005af2 <__udivmodhi4>:
    5af2:	aa 1b       	sub	r26, r26
    5af4:	bb 1b       	sub	r27, r27
    5af6:	51 e1       	ldi	r21, 0x11	; 17
    5af8:	07 c0       	rjmp	.+14     	; 0x5b08 <__udivmodhi4_ep>

00005afa <__udivmodhi4_loop>:
    5afa:	aa 1f       	adc	r26, r26
    5afc:	bb 1f       	adc	r27, r27
    5afe:	a6 17       	cp	r26, r22
    5b00:	b7 07       	cpc	r27, r23
    5b02:	10 f0       	brcs	.+4      	; 0x5b08 <__udivmodhi4_ep>
    5b04:	a6 1b       	sub	r26, r22
    5b06:	b7 0b       	sbc	r27, r23

00005b08 <__udivmodhi4_ep>:
    5b08:	88 1f       	adc	r24, r24
    5b0a:	99 1f       	adc	r25, r25
    5b0c:	5a 95       	dec	r21
    5b0e:	a9 f7       	brne	.-22     	; 0x5afa <__udivmodhi4_loop>
    5b10:	80 95       	com	r24
    5b12:	90 95       	com	r25
    5b14:	bc 01       	movw	r22, r24
    5b16:	cd 01       	movw	r24, r26
    5b18:	08 95       	ret

00005b1a <malloc>:
    5b1a:	cf 93       	push	r28
    5b1c:	df 93       	push	r29
    5b1e:	bc 01       	movw	r22, r24
    5b20:	82 30       	cpi	r24, 0x02	; 2
    5b22:	91 05       	cpc	r25, r1
    5b24:	10 f4       	brcc	.+4      	; 0x5b2a <malloc+0x10>
    5b26:	62 e0       	ldi	r22, 0x02	; 2
    5b28:	70 e0       	ldi	r23, 0x00	; 0
    5b2a:	a0 91 1d 05 	lds	r26, 0x051D
    5b2e:	b0 91 1e 05 	lds	r27, 0x051E
    5b32:	ed 01       	movw	r28, r26
    5b34:	e0 e0       	ldi	r30, 0x00	; 0
    5b36:	f0 e0       	ldi	r31, 0x00	; 0
    5b38:	40 e0       	ldi	r20, 0x00	; 0
    5b3a:	50 e0       	ldi	r21, 0x00	; 0
    5b3c:	21 c0       	rjmp	.+66     	; 0x5b80 <malloc+0x66>
    5b3e:	88 81       	ld	r24, Y
    5b40:	99 81       	ldd	r25, Y+1	; 0x01
    5b42:	86 17       	cp	r24, r22
    5b44:	97 07       	cpc	r25, r23
    5b46:	69 f4       	brne	.+26     	; 0x5b62 <malloc+0x48>
    5b48:	8a 81       	ldd	r24, Y+2	; 0x02
    5b4a:	9b 81       	ldd	r25, Y+3	; 0x03
    5b4c:	30 97       	sbiw	r30, 0x00	; 0
    5b4e:	19 f0       	breq	.+6      	; 0x5b56 <malloc+0x3c>
    5b50:	93 83       	std	Z+3, r25	; 0x03
    5b52:	82 83       	std	Z+2, r24	; 0x02
    5b54:	04 c0       	rjmp	.+8      	; 0x5b5e <malloc+0x44>
    5b56:	90 93 1e 05 	sts	0x051E, r25
    5b5a:	80 93 1d 05 	sts	0x051D, r24
    5b5e:	fe 01       	movw	r30, r28
    5b60:	34 c0       	rjmp	.+104    	; 0x5bca <malloc+0xb0>
    5b62:	68 17       	cp	r22, r24
    5b64:	79 07       	cpc	r23, r25
    5b66:	38 f4       	brcc	.+14     	; 0x5b76 <malloc+0x5c>
    5b68:	41 15       	cp	r20, r1
    5b6a:	51 05       	cpc	r21, r1
    5b6c:	19 f0       	breq	.+6      	; 0x5b74 <malloc+0x5a>
    5b6e:	84 17       	cp	r24, r20
    5b70:	95 07       	cpc	r25, r21
    5b72:	08 f4       	brcc	.+2      	; 0x5b76 <malloc+0x5c>
    5b74:	ac 01       	movw	r20, r24
    5b76:	fe 01       	movw	r30, r28
    5b78:	8a 81       	ldd	r24, Y+2	; 0x02
    5b7a:	9b 81       	ldd	r25, Y+3	; 0x03
    5b7c:	9c 01       	movw	r18, r24
    5b7e:	e9 01       	movw	r28, r18
    5b80:	20 97       	sbiw	r28, 0x00	; 0
    5b82:	e9 f6       	brne	.-70     	; 0x5b3e <malloc+0x24>
    5b84:	41 15       	cp	r20, r1
    5b86:	51 05       	cpc	r21, r1
    5b88:	a9 f1       	breq	.+106    	; 0x5bf4 <malloc+0xda>
    5b8a:	ca 01       	movw	r24, r20
    5b8c:	86 1b       	sub	r24, r22
    5b8e:	97 0b       	sbc	r25, r23
    5b90:	04 97       	sbiw	r24, 0x04	; 4
    5b92:	08 f4       	brcc	.+2      	; 0x5b96 <malloc+0x7c>
    5b94:	ba 01       	movw	r22, r20
    5b96:	e0 e0       	ldi	r30, 0x00	; 0
    5b98:	f0 e0       	ldi	r31, 0x00	; 0
    5b9a:	2a c0       	rjmp	.+84     	; 0x5bf0 <malloc+0xd6>
    5b9c:	8d 91       	ld	r24, X+
    5b9e:	9c 91       	ld	r25, X
    5ba0:	11 97       	sbiw	r26, 0x01	; 1
    5ba2:	84 17       	cp	r24, r20
    5ba4:	95 07       	cpc	r25, r21
    5ba6:	f9 f4       	brne	.+62     	; 0x5be6 <malloc+0xcc>
    5ba8:	64 17       	cp	r22, r20
    5baa:	75 07       	cpc	r23, r21
    5bac:	81 f4       	brne	.+32     	; 0x5bce <malloc+0xb4>
    5bae:	12 96       	adiw	r26, 0x02	; 2
    5bb0:	8d 91       	ld	r24, X+
    5bb2:	9c 91       	ld	r25, X
    5bb4:	13 97       	sbiw	r26, 0x03	; 3
    5bb6:	30 97       	sbiw	r30, 0x00	; 0
    5bb8:	19 f0       	breq	.+6      	; 0x5bc0 <malloc+0xa6>
    5bba:	93 83       	std	Z+3, r25	; 0x03
    5bbc:	82 83       	std	Z+2, r24	; 0x02
    5bbe:	04 c0       	rjmp	.+8      	; 0x5bc8 <malloc+0xae>
    5bc0:	90 93 1e 05 	sts	0x051E, r25
    5bc4:	80 93 1d 05 	sts	0x051D, r24
    5bc8:	fd 01       	movw	r30, r26
    5bca:	32 96       	adiw	r30, 0x02	; 2
    5bcc:	4f c0       	rjmp	.+158    	; 0x5c6c <malloc+0x152>
    5bce:	ca 01       	movw	r24, r20
    5bd0:	86 1b       	sub	r24, r22
    5bd2:	97 0b       	sbc	r25, r23
    5bd4:	fd 01       	movw	r30, r26
    5bd6:	e8 0f       	add	r30, r24
    5bd8:	f9 1f       	adc	r31, r25
    5bda:	61 93       	st	Z+, r22
    5bdc:	71 93       	st	Z+, r23
    5bde:	02 97       	sbiw	r24, 0x02	; 2
    5be0:	8d 93       	st	X+, r24
    5be2:	9c 93       	st	X, r25
    5be4:	43 c0       	rjmp	.+134    	; 0x5c6c <malloc+0x152>
    5be6:	fd 01       	movw	r30, r26
    5be8:	82 81       	ldd	r24, Z+2	; 0x02
    5bea:	93 81       	ldd	r25, Z+3	; 0x03
    5bec:	9c 01       	movw	r18, r24
    5bee:	d9 01       	movw	r26, r18
    5bf0:	10 97       	sbiw	r26, 0x00	; 0
    5bf2:	a1 f6       	brne	.-88     	; 0x5b9c <malloc+0x82>
    5bf4:	80 91 1b 05 	lds	r24, 0x051B
    5bf8:	90 91 1c 05 	lds	r25, 0x051C
    5bfc:	89 2b       	or	r24, r25
    5bfe:	41 f4       	brne	.+16     	; 0x5c10 <malloc+0xf6>
    5c00:	80 91 10 02 	lds	r24, 0x0210
    5c04:	90 91 11 02 	lds	r25, 0x0211
    5c08:	90 93 1c 05 	sts	0x051C, r25
    5c0c:	80 93 1b 05 	sts	0x051B, r24
    5c10:	40 91 12 02 	lds	r20, 0x0212
    5c14:	50 91 13 02 	lds	r21, 0x0213
    5c18:	41 15       	cp	r20, r1
    5c1a:	51 05       	cpc	r21, r1
    5c1c:	41 f4       	brne	.+16     	; 0x5c2e <malloc+0x114>
    5c1e:	4d b7       	in	r20, 0x3d	; 61
    5c20:	5e b7       	in	r21, 0x3e	; 62
    5c22:	80 91 0e 02 	lds	r24, 0x020E
    5c26:	90 91 0f 02 	lds	r25, 0x020F
    5c2a:	48 1b       	sub	r20, r24
    5c2c:	59 0b       	sbc	r21, r25
    5c2e:	20 91 1b 05 	lds	r18, 0x051B
    5c32:	30 91 1c 05 	lds	r19, 0x051C
    5c36:	24 17       	cp	r18, r20
    5c38:	35 07       	cpc	r19, r21
    5c3a:	b0 f4       	brcc	.+44     	; 0x5c68 <malloc+0x14e>
    5c3c:	ca 01       	movw	r24, r20
    5c3e:	82 1b       	sub	r24, r18
    5c40:	93 0b       	sbc	r25, r19
    5c42:	86 17       	cp	r24, r22
    5c44:	97 07       	cpc	r25, r23
    5c46:	80 f0       	brcs	.+32     	; 0x5c68 <malloc+0x14e>
    5c48:	ab 01       	movw	r20, r22
    5c4a:	4e 5f       	subi	r20, 0xFE	; 254
    5c4c:	5f 4f       	sbci	r21, 0xFF	; 255
    5c4e:	84 17       	cp	r24, r20
    5c50:	95 07       	cpc	r25, r21
    5c52:	50 f0       	brcs	.+20     	; 0x5c68 <malloc+0x14e>
    5c54:	42 0f       	add	r20, r18
    5c56:	53 1f       	adc	r21, r19
    5c58:	50 93 1c 05 	sts	0x051C, r21
    5c5c:	40 93 1b 05 	sts	0x051B, r20
    5c60:	f9 01       	movw	r30, r18
    5c62:	61 93       	st	Z+, r22
    5c64:	71 93       	st	Z+, r23
    5c66:	02 c0       	rjmp	.+4      	; 0x5c6c <malloc+0x152>
    5c68:	e0 e0       	ldi	r30, 0x00	; 0
    5c6a:	f0 e0       	ldi	r31, 0x00	; 0
    5c6c:	cf 01       	movw	r24, r30
    5c6e:	df 91       	pop	r29
    5c70:	cf 91       	pop	r28
    5c72:	08 95       	ret

00005c74 <free>:
    5c74:	cf 93       	push	r28
    5c76:	df 93       	push	r29
    5c78:	00 97       	sbiw	r24, 0x00	; 0
    5c7a:	09 f4       	brne	.+2      	; 0x5c7e <free+0xa>
    5c7c:	50 c0       	rjmp	.+160    	; 0x5d1e <free+0xaa>
    5c7e:	ec 01       	movw	r28, r24
    5c80:	22 97       	sbiw	r28, 0x02	; 2
    5c82:	1b 82       	std	Y+3, r1	; 0x03
    5c84:	1a 82       	std	Y+2, r1	; 0x02
    5c86:	a0 91 1d 05 	lds	r26, 0x051D
    5c8a:	b0 91 1e 05 	lds	r27, 0x051E
    5c8e:	10 97       	sbiw	r26, 0x00	; 0
    5c90:	09 f1       	breq	.+66     	; 0x5cd4 <free+0x60>
    5c92:	40 e0       	ldi	r20, 0x00	; 0
    5c94:	50 e0       	ldi	r21, 0x00	; 0
    5c96:	ac 17       	cp	r26, r28
    5c98:	bd 07       	cpc	r27, r29
    5c9a:	08 f1       	brcs	.+66     	; 0x5cde <free+0x6a>
    5c9c:	bb 83       	std	Y+3, r27	; 0x03
    5c9e:	aa 83       	std	Y+2, r26	; 0x02
    5ca0:	fe 01       	movw	r30, r28
    5ca2:	21 91       	ld	r18, Z+
    5ca4:	31 91       	ld	r19, Z+
    5ca6:	e2 0f       	add	r30, r18
    5ca8:	f3 1f       	adc	r31, r19
    5caa:	ae 17       	cp	r26, r30
    5cac:	bf 07       	cpc	r27, r31
    5cae:	79 f4       	brne	.+30     	; 0x5cce <free+0x5a>
    5cb0:	8d 91       	ld	r24, X+
    5cb2:	9c 91       	ld	r25, X
    5cb4:	11 97       	sbiw	r26, 0x01	; 1
    5cb6:	28 0f       	add	r18, r24
    5cb8:	39 1f       	adc	r19, r25
    5cba:	2e 5f       	subi	r18, 0xFE	; 254
    5cbc:	3f 4f       	sbci	r19, 0xFF	; 255
    5cbe:	39 83       	std	Y+1, r19	; 0x01
    5cc0:	28 83       	st	Y, r18
    5cc2:	12 96       	adiw	r26, 0x02	; 2
    5cc4:	8d 91       	ld	r24, X+
    5cc6:	9c 91       	ld	r25, X
    5cc8:	13 97       	sbiw	r26, 0x03	; 3
    5cca:	9b 83       	std	Y+3, r25	; 0x03
    5ccc:	8a 83       	std	Y+2, r24	; 0x02
    5cce:	41 15       	cp	r20, r1
    5cd0:	51 05       	cpc	r21, r1
    5cd2:	71 f4       	brne	.+28     	; 0x5cf0 <free+0x7c>
    5cd4:	d0 93 1e 05 	sts	0x051E, r29
    5cd8:	c0 93 1d 05 	sts	0x051D, r28
    5cdc:	20 c0       	rjmp	.+64     	; 0x5d1e <free+0xaa>
    5cde:	12 96       	adiw	r26, 0x02	; 2
    5ce0:	8d 91       	ld	r24, X+
    5ce2:	9c 91       	ld	r25, X
    5ce4:	13 97       	sbiw	r26, 0x03	; 3
    5ce6:	ad 01       	movw	r20, r26
    5ce8:	00 97       	sbiw	r24, 0x00	; 0
    5cea:	11 f0       	breq	.+4      	; 0x5cf0 <free+0x7c>
    5cec:	dc 01       	movw	r26, r24
    5cee:	d3 cf       	rjmp	.-90     	; 0x5c96 <free+0x22>
    5cf0:	fa 01       	movw	r30, r20
    5cf2:	d3 83       	std	Z+3, r29	; 0x03
    5cf4:	c2 83       	std	Z+2, r28	; 0x02
    5cf6:	21 91       	ld	r18, Z+
    5cf8:	31 91       	ld	r19, Z+
    5cfa:	e2 0f       	add	r30, r18
    5cfc:	f3 1f       	adc	r31, r19
    5cfe:	ce 17       	cp	r28, r30
    5d00:	df 07       	cpc	r29, r31
    5d02:	69 f4       	brne	.+26     	; 0x5d1e <free+0xaa>
    5d04:	88 81       	ld	r24, Y
    5d06:	99 81       	ldd	r25, Y+1	; 0x01
    5d08:	28 0f       	add	r18, r24
    5d0a:	39 1f       	adc	r19, r25
    5d0c:	2e 5f       	subi	r18, 0xFE	; 254
    5d0e:	3f 4f       	sbci	r19, 0xFF	; 255
    5d10:	fa 01       	movw	r30, r20
    5d12:	31 83       	std	Z+1, r19	; 0x01
    5d14:	20 83       	st	Z, r18
    5d16:	8a 81       	ldd	r24, Y+2	; 0x02
    5d18:	9b 81       	ldd	r25, Y+3	; 0x03
    5d1a:	93 83       	std	Z+3, r25	; 0x03
    5d1c:	82 83       	std	Z+2, r24	; 0x02
    5d1e:	df 91       	pop	r29
    5d20:	cf 91       	pop	r28
    5d22:	08 95       	ret

00005d24 <do_rand>:
    5d24:	a0 e0       	ldi	r26, 0x00	; 0
    5d26:	b0 e0       	ldi	r27, 0x00	; 0
    5d28:	e7 e9       	ldi	r30, 0x97	; 151
    5d2a:	fe e2       	ldi	r31, 0x2E	; 46
    5d2c:	b3 ce       	rjmp	.-666    	; 0x5a94 <__prologue_saves__+0x10>
    5d2e:	ec 01       	movw	r28, r24
    5d30:	a8 80       	ld	r10, Y
    5d32:	b9 80       	ldd	r11, Y+1	; 0x01
    5d34:	ca 80       	ldd	r12, Y+2	; 0x02
    5d36:	db 80       	ldd	r13, Y+3	; 0x03
    5d38:	a1 14       	cp	r10, r1
    5d3a:	b1 04       	cpc	r11, r1
    5d3c:	c1 04       	cpc	r12, r1
    5d3e:	d1 04       	cpc	r13, r1
    5d40:	41 f4       	brne	.+16     	; 0x5d52 <do_rand+0x2e>
    5d42:	84 e2       	ldi	r24, 0x24	; 36
    5d44:	a8 2e       	mov	r10, r24
    5d46:	89 ed       	ldi	r24, 0xD9	; 217
    5d48:	b8 2e       	mov	r11, r24
    5d4a:	8b e5       	ldi	r24, 0x5B	; 91
    5d4c:	c8 2e       	mov	r12, r24
    5d4e:	87 e0       	ldi	r24, 0x07	; 7
    5d50:	d8 2e       	mov	r13, r24
    5d52:	c6 01       	movw	r24, r12
    5d54:	b5 01       	movw	r22, r10
    5d56:	2d e1       	ldi	r18, 0x1D	; 29
    5d58:	33 ef       	ldi	r19, 0xF3	; 243
    5d5a:	41 e0       	ldi	r20, 0x01	; 1
    5d5c:	50 e0       	ldi	r21, 0x00	; 0
    5d5e:	fa d1       	rcall	.+1012   	; 0x6154 <__divmodsi4>
    5d60:	27 ea       	ldi	r18, 0xA7	; 167
    5d62:	31 e4       	ldi	r19, 0x41	; 65
    5d64:	40 e0       	ldi	r20, 0x00	; 0
    5d66:	50 e0       	ldi	r21, 0x00	; 0
    5d68:	39 de       	rcall	.-910    	; 0x59dc <__mulsi3>
    5d6a:	7b 01       	movw	r14, r22
    5d6c:	8c 01       	movw	r16, r24
    5d6e:	c6 01       	movw	r24, r12
    5d70:	b5 01       	movw	r22, r10
    5d72:	2d e1       	ldi	r18, 0x1D	; 29
    5d74:	33 ef       	ldi	r19, 0xF3	; 243
    5d76:	41 e0       	ldi	r20, 0x01	; 1
    5d78:	50 e0       	ldi	r21, 0x00	; 0
    5d7a:	ec d1       	rcall	.+984    	; 0x6154 <__divmodsi4>
    5d7c:	ca 01       	movw	r24, r20
    5d7e:	b9 01       	movw	r22, r18
    5d80:	2c ee       	ldi	r18, 0xEC	; 236
    5d82:	34 ef       	ldi	r19, 0xF4	; 244
    5d84:	4f ef       	ldi	r20, 0xFF	; 255
    5d86:	5f ef       	ldi	r21, 0xFF	; 255
    5d88:	29 de       	rcall	.-942    	; 0x59dc <__mulsi3>
    5d8a:	6e 0d       	add	r22, r14
    5d8c:	7f 1d       	adc	r23, r15
    5d8e:	80 1f       	adc	r24, r16
    5d90:	91 1f       	adc	r25, r17
    5d92:	97 ff       	sbrs	r25, 7
    5d94:	04 c0       	rjmp	.+8      	; 0x5d9e <do_rand+0x7a>
    5d96:	61 50       	subi	r22, 0x01	; 1
    5d98:	70 40       	sbci	r23, 0x00	; 0
    5d9a:	80 40       	sbci	r24, 0x00	; 0
    5d9c:	90 48       	sbci	r25, 0x80	; 128
    5d9e:	68 83       	st	Y, r22
    5da0:	79 83       	std	Y+1, r23	; 0x01
    5da2:	8a 83       	std	Y+2, r24	; 0x02
    5da4:	9b 83       	std	Y+3, r25	; 0x03
    5da6:	9b 01       	movw	r18, r22
    5da8:	3f 77       	andi	r19, 0x7F	; 127
    5daa:	c9 01       	movw	r24, r18
    5dac:	cd b7       	in	r28, 0x3d	; 61
    5dae:	de b7       	in	r29, 0x3e	; 62
    5db0:	ea e0       	ldi	r30, 0x0A	; 10
    5db2:	8c ce       	rjmp	.-744    	; 0x5acc <__epilogue_restores__+0x10>

00005db4 <rand_r>:
    5db4:	b7 df       	rcall	.-146    	; 0x5d24 <do_rand>
    5db6:	08 95       	ret

00005db8 <rand>:
    5db8:	84 e1       	ldi	r24, 0x14	; 20
    5dba:	92 e0       	ldi	r25, 0x02	; 2
    5dbc:	b3 df       	rcall	.-154    	; 0x5d24 <do_rand>
    5dbe:	08 95       	ret

00005dc0 <srand>:
    5dc0:	a0 e0       	ldi	r26, 0x00	; 0
    5dc2:	b0 e0       	ldi	r27, 0x00	; 0
    5dc4:	80 93 14 02 	sts	0x0214, r24
    5dc8:	90 93 15 02 	sts	0x0215, r25
    5dcc:	a0 93 16 02 	sts	0x0216, r26
    5dd0:	b0 93 17 02 	sts	0x0217, r27
    5dd4:	08 95       	ret

00005dd6 <__ftoa_engine>:
    5dd6:	28 30       	cpi	r18, 0x08	; 8
    5dd8:	08 f0       	brcs	.+2      	; 0x5ddc <__ftoa_engine+0x6>
    5dda:	27 e0       	ldi	r18, 0x07	; 7
    5ddc:	33 27       	eor	r19, r19
    5dde:	da 01       	movw	r26, r20
    5de0:	99 0f       	add	r25, r25
    5de2:	31 1d       	adc	r19, r1
    5de4:	87 fd       	sbrc	r24, 7
    5de6:	91 60       	ori	r25, 0x01	; 1
    5de8:	00 96       	adiw	r24, 0x00	; 0
    5dea:	61 05       	cpc	r22, r1
    5dec:	71 05       	cpc	r23, r1
    5dee:	39 f4       	brne	.+14     	; 0x5dfe <__ftoa_engine+0x28>
    5df0:	32 60       	ori	r19, 0x02	; 2
    5df2:	2e 5f       	subi	r18, 0xFE	; 254
    5df4:	3d 93       	st	X+, r19
    5df6:	30 e3       	ldi	r19, 0x30	; 48
    5df8:	2a 95       	dec	r18
    5dfa:	e1 f7       	brne	.-8      	; 0x5df4 <__ftoa_engine+0x1e>
    5dfc:	08 95       	ret
    5dfe:	9f 3f       	cpi	r25, 0xFF	; 255
    5e00:	30 f0       	brcs	.+12     	; 0x5e0e <__ftoa_engine+0x38>
    5e02:	80 38       	cpi	r24, 0x80	; 128
    5e04:	71 05       	cpc	r23, r1
    5e06:	61 05       	cpc	r22, r1
    5e08:	09 f0       	breq	.+2      	; 0x5e0c <__ftoa_engine+0x36>
    5e0a:	3c 5f       	subi	r19, 0xFC	; 252
    5e0c:	3c 5f       	subi	r19, 0xFC	; 252
    5e0e:	3d 93       	st	X+, r19
    5e10:	91 30       	cpi	r25, 0x01	; 1
    5e12:	08 f0       	brcs	.+2      	; 0x5e16 <__ftoa_engine+0x40>
    5e14:	80 68       	ori	r24, 0x80	; 128
    5e16:	91 1d       	adc	r25, r1
    5e18:	df 93       	push	r29
    5e1a:	cf 93       	push	r28
    5e1c:	1f 93       	push	r17
    5e1e:	0f 93       	push	r16
    5e20:	ff 92       	push	r15
    5e22:	ef 92       	push	r14
    5e24:	19 2f       	mov	r17, r25
    5e26:	98 7f       	andi	r25, 0xF8	; 248
    5e28:	96 95       	lsr	r25
    5e2a:	e9 2f       	mov	r30, r25
    5e2c:	96 95       	lsr	r25
    5e2e:	96 95       	lsr	r25
    5e30:	e9 0f       	add	r30, r25
    5e32:	ff 27       	eor	r31, r31
    5e34:	ef 53       	subi	r30, 0x3F	; 63
    5e36:	fa 4f       	sbci	r31, 0xFA	; 250
    5e38:	99 27       	eor	r25, r25
    5e3a:	33 27       	eor	r19, r19
    5e3c:	ee 24       	eor	r14, r14
    5e3e:	ff 24       	eor	r15, r15
    5e40:	a7 01       	movw	r20, r14
    5e42:	e7 01       	movw	r28, r14
    5e44:	05 90       	lpm	r0, Z+
    5e46:	08 94       	sec
    5e48:	07 94       	ror	r0
    5e4a:	28 f4       	brcc	.+10     	; 0x5e56 <__ftoa_engine+0x80>
    5e4c:	36 0f       	add	r19, r22
    5e4e:	e7 1e       	adc	r14, r23
    5e50:	f8 1e       	adc	r15, r24
    5e52:	49 1f       	adc	r20, r25
    5e54:	51 1d       	adc	r21, r1
    5e56:	66 0f       	add	r22, r22
    5e58:	77 1f       	adc	r23, r23
    5e5a:	88 1f       	adc	r24, r24
    5e5c:	99 1f       	adc	r25, r25
    5e5e:	06 94       	lsr	r0
    5e60:	a1 f7       	brne	.-24     	; 0x5e4a <__ftoa_engine+0x74>
    5e62:	05 90       	lpm	r0, Z+
    5e64:	07 94       	ror	r0
    5e66:	28 f4       	brcc	.+10     	; 0x5e72 <__ftoa_engine+0x9c>
    5e68:	e7 0e       	add	r14, r23
    5e6a:	f8 1e       	adc	r15, r24
    5e6c:	49 1f       	adc	r20, r25
    5e6e:	56 1f       	adc	r21, r22
    5e70:	c1 1d       	adc	r28, r1
    5e72:	77 0f       	add	r23, r23
    5e74:	88 1f       	adc	r24, r24
    5e76:	99 1f       	adc	r25, r25
    5e78:	66 1f       	adc	r22, r22
    5e7a:	06 94       	lsr	r0
    5e7c:	a1 f7       	brne	.-24     	; 0x5e66 <__ftoa_engine+0x90>
    5e7e:	05 90       	lpm	r0, Z+
    5e80:	07 94       	ror	r0
    5e82:	28 f4       	brcc	.+10     	; 0x5e8e <__ftoa_engine+0xb8>
    5e84:	f8 0e       	add	r15, r24
    5e86:	49 1f       	adc	r20, r25
    5e88:	56 1f       	adc	r21, r22
    5e8a:	c7 1f       	adc	r28, r23
    5e8c:	d1 1d       	adc	r29, r1
    5e8e:	88 0f       	add	r24, r24
    5e90:	99 1f       	adc	r25, r25
    5e92:	66 1f       	adc	r22, r22
    5e94:	77 1f       	adc	r23, r23
    5e96:	06 94       	lsr	r0
    5e98:	a1 f7       	brne	.-24     	; 0x5e82 <__ftoa_engine+0xac>
    5e9a:	05 90       	lpm	r0, Z+
    5e9c:	07 94       	ror	r0
    5e9e:	20 f4       	brcc	.+8      	; 0x5ea8 <__ftoa_engine+0xd2>
    5ea0:	49 0f       	add	r20, r25
    5ea2:	56 1f       	adc	r21, r22
    5ea4:	c7 1f       	adc	r28, r23
    5ea6:	d8 1f       	adc	r29, r24
    5ea8:	99 0f       	add	r25, r25
    5eaa:	66 1f       	adc	r22, r22
    5eac:	77 1f       	adc	r23, r23
    5eae:	88 1f       	adc	r24, r24
    5eb0:	06 94       	lsr	r0
    5eb2:	a9 f7       	brne	.-22     	; 0x5e9e <__ftoa_engine+0xc8>
    5eb4:	84 91       	lpm	r24, Z+
    5eb6:	10 95       	com	r17
    5eb8:	17 70       	andi	r17, 0x07	; 7
    5eba:	41 f0       	breq	.+16     	; 0x5ecc <__ftoa_engine+0xf6>
    5ebc:	d6 95       	lsr	r29
    5ebe:	c7 95       	ror	r28
    5ec0:	57 95       	ror	r21
    5ec2:	47 95       	ror	r20
    5ec4:	f7 94       	ror	r15
    5ec6:	e7 94       	ror	r14
    5ec8:	1a 95       	dec	r17
    5eca:	c1 f7       	brne	.-16     	; 0x5ebc <__ftoa_engine+0xe6>
    5ecc:	e7 e6       	ldi	r30, 0x67	; 103
    5ece:	f5 e0       	ldi	r31, 0x05	; 5
    5ed0:	68 94       	set
    5ed2:	15 90       	lpm	r1, Z+
    5ed4:	15 91       	lpm	r17, Z+
    5ed6:	35 91       	lpm	r19, Z+
    5ed8:	65 91       	lpm	r22, Z+
    5eda:	95 91       	lpm	r25, Z+
    5edc:	05 90       	lpm	r0, Z+
    5ede:	7f e2       	ldi	r23, 0x2F	; 47
    5ee0:	73 95       	inc	r23
    5ee2:	e1 18       	sub	r14, r1
    5ee4:	f1 0a       	sbc	r15, r17
    5ee6:	43 0b       	sbc	r20, r19
    5ee8:	56 0b       	sbc	r21, r22
    5eea:	c9 0b       	sbc	r28, r25
    5eec:	d0 09       	sbc	r29, r0
    5eee:	c0 f7       	brcc	.-16     	; 0x5ee0 <__ftoa_engine+0x10a>
    5ef0:	e1 0c       	add	r14, r1
    5ef2:	f1 1e       	adc	r15, r17
    5ef4:	43 1f       	adc	r20, r19
    5ef6:	56 1f       	adc	r21, r22
    5ef8:	c9 1f       	adc	r28, r25
    5efa:	d0 1d       	adc	r29, r0
    5efc:	7e f4       	brtc	.+30     	; 0x5f1c <__ftoa_engine+0x146>
    5efe:	70 33       	cpi	r23, 0x30	; 48
    5f00:	11 f4       	brne	.+4      	; 0x5f06 <__ftoa_engine+0x130>
    5f02:	8a 95       	dec	r24
    5f04:	e6 cf       	rjmp	.-52     	; 0x5ed2 <__ftoa_engine+0xfc>
    5f06:	e8 94       	clt
    5f08:	01 50       	subi	r16, 0x01	; 1
    5f0a:	30 f0       	brcs	.+12     	; 0x5f18 <__ftoa_engine+0x142>
    5f0c:	08 0f       	add	r16, r24
    5f0e:	0a f4       	brpl	.+2      	; 0x5f12 <__ftoa_engine+0x13c>
    5f10:	00 27       	eor	r16, r16
    5f12:	02 17       	cp	r16, r18
    5f14:	08 f4       	brcc	.+2      	; 0x5f18 <__ftoa_engine+0x142>
    5f16:	20 2f       	mov	r18, r16
    5f18:	23 95       	inc	r18
    5f1a:	02 2f       	mov	r16, r18
    5f1c:	7a 33       	cpi	r23, 0x3A	; 58
    5f1e:	28 f0       	brcs	.+10     	; 0x5f2a <__ftoa_engine+0x154>
    5f20:	79 e3       	ldi	r23, 0x39	; 57
    5f22:	7d 93       	st	X+, r23
    5f24:	2a 95       	dec	r18
    5f26:	e9 f7       	brne	.-6      	; 0x5f22 <__ftoa_engine+0x14c>
    5f28:	10 c0       	rjmp	.+32     	; 0x5f4a <__ftoa_engine+0x174>
    5f2a:	7d 93       	st	X+, r23
    5f2c:	2a 95       	dec	r18
    5f2e:	89 f6       	brne	.-94     	; 0x5ed2 <__ftoa_engine+0xfc>
    5f30:	06 94       	lsr	r0
    5f32:	97 95       	ror	r25
    5f34:	67 95       	ror	r22
    5f36:	37 95       	ror	r19
    5f38:	17 95       	ror	r17
    5f3a:	17 94       	ror	r1
    5f3c:	e1 18       	sub	r14, r1
    5f3e:	f1 0a       	sbc	r15, r17
    5f40:	43 0b       	sbc	r20, r19
    5f42:	56 0b       	sbc	r21, r22
    5f44:	c9 0b       	sbc	r28, r25
    5f46:	d0 09       	sbc	r29, r0
    5f48:	98 f0       	brcs	.+38     	; 0x5f70 <__ftoa_engine+0x19a>
    5f4a:	23 95       	inc	r18
    5f4c:	7e 91       	ld	r23, -X
    5f4e:	73 95       	inc	r23
    5f50:	7a 33       	cpi	r23, 0x3A	; 58
    5f52:	08 f0       	brcs	.+2      	; 0x5f56 <__ftoa_engine+0x180>
    5f54:	70 e3       	ldi	r23, 0x30	; 48
    5f56:	7c 93       	st	X, r23
    5f58:	20 13       	cpse	r18, r16
    5f5a:	b8 f7       	brcc	.-18     	; 0x5f4a <__ftoa_engine+0x174>
    5f5c:	7e 91       	ld	r23, -X
    5f5e:	70 61       	ori	r23, 0x10	; 16
    5f60:	7d 93       	st	X+, r23
    5f62:	30 f0       	brcs	.+12     	; 0x5f70 <__ftoa_engine+0x19a>
    5f64:	83 95       	inc	r24
    5f66:	71 e3       	ldi	r23, 0x31	; 49
    5f68:	7d 93       	st	X+, r23
    5f6a:	70 e3       	ldi	r23, 0x30	; 48
    5f6c:	2a 95       	dec	r18
    5f6e:	e1 f7       	brne	.-8      	; 0x5f68 <__ftoa_engine+0x192>
    5f70:	11 24       	eor	r1, r1
    5f72:	ef 90       	pop	r14
    5f74:	ff 90       	pop	r15
    5f76:	0f 91       	pop	r16
    5f78:	1f 91       	pop	r17
    5f7a:	cf 91       	pop	r28
    5f7c:	df 91       	pop	r29
    5f7e:	99 27       	eor	r25, r25
    5f80:	87 fd       	sbrc	r24, 7
    5f82:	90 95       	com	r25
    5f84:	08 95       	ret

00005f86 <strnlen_P>:
    5f86:	fc 01       	movw	r30, r24
    5f88:	05 90       	lpm	r0, Z+
    5f8a:	61 50       	subi	r22, 0x01	; 1
    5f8c:	70 40       	sbci	r23, 0x00	; 0
    5f8e:	01 10       	cpse	r0, r1
    5f90:	d8 f7       	brcc	.-10     	; 0x5f88 <strnlen_P+0x2>
    5f92:	80 95       	com	r24
    5f94:	90 95       	com	r25
    5f96:	8e 0f       	add	r24, r30
    5f98:	9f 1f       	adc	r25, r31
    5f9a:	08 95       	ret

00005f9c <strnlen>:
    5f9c:	fc 01       	movw	r30, r24
    5f9e:	61 50       	subi	r22, 0x01	; 1
    5fa0:	70 40       	sbci	r23, 0x00	; 0
    5fa2:	01 90       	ld	r0, Z+
    5fa4:	01 10       	cpse	r0, r1
    5fa6:	d8 f7       	brcc	.-10     	; 0x5f9e <strnlen+0x2>
    5fa8:	80 95       	com	r24
    5faa:	90 95       	com	r25
    5fac:	8e 0f       	add	r24, r30
    5fae:	9f 1f       	adc	r25, r31
    5fb0:	08 95       	ret

00005fb2 <fputc>:
    5fb2:	0f 93       	push	r16
    5fb4:	1f 93       	push	r17
    5fb6:	cf 93       	push	r28
    5fb8:	df 93       	push	r29
    5fba:	8c 01       	movw	r16, r24
    5fbc:	eb 01       	movw	r28, r22
    5fbe:	8b 81       	ldd	r24, Y+3	; 0x03
    5fc0:	81 ff       	sbrs	r24, 1
    5fc2:	1b c0       	rjmp	.+54     	; 0x5ffa <fputc+0x48>
    5fc4:	82 ff       	sbrs	r24, 2
    5fc6:	0d c0       	rjmp	.+26     	; 0x5fe2 <fputc+0x30>
    5fc8:	2e 81       	ldd	r18, Y+6	; 0x06
    5fca:	3f 81       	ldd	r19, Y+7	; 0x07
    5fcc:	8c 81       	ldd	r24, Y+4	; 0x04
    5fce:	9d 81       	ldd	r25, Y+5	; 0x05
    5fd0:	28 17       	cp	r18, r24
    5fd2:	39 07       	cpc	r19, r25
    5fd4:	64 f4       	brge	.+24     	; 0x5fee <fputc+0x3c>
    5fd6:	e8 81       	ld	r30, Y
    5fd8:	f9 81       	ldd	r31, Y+1	; 0x01
    5fda:	01 93       	st	Z+, r16
    5fdc:	f9 83       	std	Y+1, r31	; 0x01
    5fde:	e8 83       	st	Y, r30
    5fe0:	06 c0       	rjmp	.+12     	; 0x5fee <fputc+0x3c>
    5fe2:	e8 85       	ldd	r30, Y+8	; 0x08
    5fe4:	f9 85       	ldd	r31, Y+9	; 0x09
    5fe6:	80 2f       	mov	r24, r16
    5fe8:	09 95       	icall
    5fea:	89 2b       	or	r24, r25
    5fec:	31 f4       	brne	.+12     	; 0x5ffa <fputc+0x48>
    5fee:	8e 81       	ldd	r24, Y+6	; 0x06
    5ff0:	9f 81       	ldd	r25, Y+7	; 0x07
    5ff2:	01 96       	adiw	r24, 0x01	; 1
    5ff4:	9f 83       	std	Y+7, r25	; 0x07
    5ff6:	8e 83       	std	Y+6, r24	; 0x06
    5ff8:	02 c0       	rjmp	.+4      	; 0x5ffe <fputc+0x4c>
    5ffa:	0f ef       	ldi	r16, 0xFF	; 255
    5ffc:	1f ef       	ldi	r17, 0xFF	; 255
    5ffe:	c8 01       	movw	r24, r16
    6000:	df 91       	pop	r29
    6002:	cf 91       	pop	r28
    6004:	1f 91       	pop	r17
    6006:	0f 91       	pop	r16
    6008:	08 95       	ret

0000600a <printf>:
    600a:	a0 e0       	ldi	r26, 0x00	; 0
    600c:	b0 e0       	ldi	r27, 0x00	; 0
    600e:	ea e0       	ldi	r30, 0x0A	; 10
    6010:	f0 e3       	ldi	r31, 0x30	; 48
    6012:	48 cd       	rjmp	.-1392   	; 0x5aa4 <__prologue_saves__+0x20>
    6014:	fe 01       	movw	r30, r28
    6016:	35 96       	adiw	r30, 0x05	; 5
    6018:	61 91       	ld	r22, Z+
    601a:	71 91       	ld	r23, Z+
    601c:	80 91 21 05 	lds	r24, 0x0521
    6020:	90 91 22 05 	lds	r25, 0x0522
    6024:	af 01       	movw	r20, r30
    6026:	72 d9       	rcall	.-3356   	; 0x530c <vfprintf>
    6028:	20 96       	adiw	r28, 0x00	; 0
    602a:	e2 e0       	ldi	r30, 0x02	; 2
    602c:	57 cd       	rjmp	.-1362   	; 0x5adc <__epilogue_restores__+0x20>

0000602e <puts>:
    602e:	0f 93       	push	r16
    6030:	1f 93       	push	r17
    6032:	cf 93       	push	r28
    6034:	df 93       	push	r29
    6036:	8c 01       	movw	r16, r24
    6038:	e0 91 21 05 	lds	r30, 0x0521
    603c:	f0 91 22 05 	lds	r31, 0x0522
    6040:	83 81       	ldd	r24, Z+3	; 0x03
    6042:	81 ff       	sbrs	r24, 1
    6044:	21 c0       	rjmp	.+66     	; 0x6088 <puts+0x5a>
    6046:	c0 e0       	ldi	r28, 0x00	; 0
    6048:	d0 e0       	ldi	r29, 0x00	; 0
    604a:	0d c0       	rjmp	.+26     	; 0x6066 <puts+0x38>
    604c:	e0 91 21 05 	lds	r30, 0x0521
    6050:	f0 91 22 05 	lds	r31, 0x0522
    6054:	20 85       	ldd	r18, Z+8	; 0x08
    6056:	31 85       	ldd	r19, Z+9	; 0x09
    6058:	bf 01       	movw	r22, r30
    605a:	f9 01       	movw	r30, r18
    605c:	09 95       	icall
    605e:	89 2b       	or	r24, r25
    6060:	11 f0       	breq	.+4      	; 0x6066 <puts+0x38>
    6062:	cf ef       	ldi	r28, 0xFF	; 255
    6064:	df ef       	ldi	r29, 0xFF	; 255
    6066:	f8 01       	movw	r30, r16
    6068:	81 91       	ld	r24, Z+
    606a:	8f 01       	movw	r16, r30
    606c:	88 23       	and	r24, r24
    606e:	71 f7       	brne	.-36     	; 0x604c <puts+0x1e>
    6070:	e0 91 21 05 	lds	r30, 0x0521
    6074:	f0 91 22 05 	lds	r31, 0x0522
    6078:	20 85       	ldd	r18, Z+8	; 0x08
    607a:	31 85       	ldd	r19, Z+9	; 0x09
    607c:	8a e0       	ldi	r24, 0x0A	; 10
    607e:	bf 01       	movw	r22, r30
    6080:	f9 01       	movw	r30, r18
    6082:	09 95       	icall
    6084:	89 2b       	or	r24, r25
    6086:	11 f0       	breq	.+4      	; 0x608c <puts+0x5e>
    6088:	cf ef       	ldi	r28, 0xFF	; 255
    608a:	df ef       	ldi	r29, 0xFF	; 255
    608c:	ce 01       	movw	r24, r28
    608e:	df 91       	pop	r29
    6090:	cf 91       	pop	r28
    6092:	1f 91       	pop	r17
    6094:	0f 91       	pop	r16
    6096:	08 95       	ret

00006098 <__ultoa_invert>:
    6098:	fa 01       	movw	r30, r20
    609a:	aa 27       	eor	r26, r26
    609c:	28 30       	cpi	r18, 0x08	; 8
    609e:	51 f1       	breq	.+84     	; 0x60f4 <__ultoa_invert+0x5c>
    60a0:	20 31       	cpi	r18, 0x10	; 16
    60a2:	81 f1       	breq	.+96     	; 0x6104 <__ultoa_invert+0x6c>
    60a4:	e8 94       	clt
    60a6:	6f 93       	push	r22
    60a8:	6e 7f       	andi	r22, 0xFE	; 254
    60aa:	6e 5f       	subi	r22, 0xFE	; 254
    60ac:	7f 4f       	sbci	r23, 0xFF	; 255
    60ae:	8f 4f       	sbci	r24, 0xFF	; 255
    60b0:	9f 4f       	sbci	r25, 0xFF	; 255
    60b2:	af 4f       	sbci	r26, 0xFF	; 255
    60b4:	b1 e0       	ldi	r27, 0x01	; 1
    60b6:	3e d0       	rcall	.+124    	; 0x6134 <__ultoa_invert+0x9c>
    60b8:	b4 e0       	ldi	r27, 0x04	; 4
    60ba:	3c d0       	rcall	.+120    	; 0x6134 <__ultoa_invert+0x9c>
    60bc:	67 0f       	add	r22, r23
    60be:	78 1f       	adc	r23, r24
    60c0:	89 1f       	adc	r24, r25
    60c2:	9a 1f       	adc	r25, r26
    60c4:	a1 1d       	adc	r26, r1
    60c6:	68 0f       	add	r22, r24
    60c8:	79 1f       	adc	r23, r25
    60ca:	8a 1f       	adc	r24, r26
    60cc:	91 1d       	adc	r25, r1
    60ce:	a1 1d       	adc	r26, r1
    60d0:	6a 0f       	add	r22, r26
    60d2:	71 1d       	adc	r23, r1
    60d4:	81 1d       	adc	r24, r1
    60d6:	91 1d       	adc	r25, r1
    60d8:	a1 1d       	adc	r26, r1
    60da:	20 d0       	rcall	.+64     	; 0x611c <__ultoa_invert+0x84>
    60dc:	09 f4       	brne	.+2      	; 0x60e0 <__ultoa_invert+0x48>
    60de:	68 94       	set
    60e0:	3f 91       	pop	r19
    60e2:	2a e0       	ldi	r18, 0x0A	; 10
    60e4:	26 9f       	mul	r18, r22
    60e6:	11 24       	eor	r1, r1
    60e8:	30 19       	sub	r19, r0
    60ea:	30 5d       	subi	r19, 0xD0	; 208
    60ec:	31 93       	st	Z+, r19
    60ee:	de f6       	brtc	.-74     	; 0x60a6 <__ultoa_invert+0xe>
    60f0:	cf 01       	movw	r24, r30
    60f2:	08 95       	ret
    60f4:	46 2f       	mov	r20, r22
    60f6:	47 70       	andi	r20, 0x07	; 7
    60f8:	40 5d       	subi	r20, 0xD0	; 208
    60fa:	41 93       	st	Z+, r20
    60fc:	b3 e0       	ldi	r27, 0x03	; 3
    60fe:	0f d0       	rcall	.+30     	; 0x611e <__ultoa_invert+0x86>
    6100:	c9 f7       	brne	.-14     	; 0x60f4 <__ultoa_invert+0x5c>
    6102:	f6 cf       	rjmp	.-20     	; 0x60f0 <__ultoa_invert+0x58>
    6104:	46 2f       	mov	r20, r22
    6106:	4f 70       	andi	r20, 0x0F	; 15
    6108:	40 5d       	subi	r20, 0xD0	; 208
    610a:	4a 33       	cpi	r20, 0x3A	; 58
    610c:	18 f0       	brcs	.+6      	; 0x6114 <__ultoa_invert+0x7c>
    610e:	49 5d       	subi	r20, 0xD9	; 217
    6110:	31 fd       	sbrc	r19, 1
    6112:	40 52       	subi	r20, 0x20	; 32
    6114:	41 93       	st	Z+, r20
    6116:	02 d0       	rcall	.+4      	; 0x611c <__ultoa_invert+0x84>
    6118:	a9 f7       	brne	.-22     	; 0x6104 <__ultoa_invert+0x6c>
    611a:	ea cf       	rjmp	.-44     	; 0x60f0 <__ultoa_invert+0x58>
    611c:	b4 e0       	ldi	r27, 0x04	; 4
    611e:	a6 95       	lsr	r26
    6120:	97 95       	ror	r25
    6122:	87 95       	ror	r24
    6124:	77 95       	ror	r23
    6126:	67 95       	ror	r22
    6128:	ba 95       	dec	r27
    612a:	c9 f7       	brne	.-14     	; 0x611e <__ultoa_invert+0x86>
    612c:	00 97       	sbiw	r24, 0x00	; 0
    612e:	61 05       	cpc	r22, r1
    6130:	71 05       	cpc	r23, r1
    6132:	08 95       	ret
    6134:	9b 01       	movw	r18, r22
    6136:	ac 01       	movw	r20, r24
    6138:	0a 2e       	mov	r0, r26
    613a:	06 94       	lsr	r0
    613c:	57 95       	ror	r21
    613e:	47 95       	ror	r20
    6140:	37 95       	ror	r19
    6142:	27 95       	ror	r18
    6144:	ba 95       	dec	r27
    6146:	c9 f7       	brne	.-14     	; 0x613a <__ultoa_invert+0xa2>
    6148:	62 0f       	add	r22, r18
    614a:	73 1f       	adc	r23, r19
    614c:	84 1f       	adc	r24, r20
    614e:	95 1f       	adc	r25, r21
    6150:	a0 1d       	adc	r26, r0
    6152:	08 95       	ret

00006154 <__divmodsi4>:
    6154:	97 fb       	bst	r25, 7
    6156:	09 2e       	mov	r0, r25
    6158:	05 26       	eor	r0, r21
    615a:	0e d0       	rcall	.+28     	; 0x6178 <__divmodsi4_neg1>
    615c:	57 fd       	sbrc	r21, 7
    615e:	04 d0       	rcall	.+8      	; 0x6168 <__divmodsi4_neg2>
    6160:	6f dc       	rcall	.-1826   	; 0x5a40 <__udivmodsi4>
    6162:	0a d0       	rcall	.+20     	; 0x6178 <__divmodsi4_neg1>
    6164:	00 1c       	adc	r0, r0
    6166:	38 f4       	brcc	.+14     	; 0x6176 <__divmodsi4_exit>

00006168 <__divmodsi4_neg2>:
    6168:	50 95       	com	r21
    616a:	40 95       	com	r20
    616c:	30 95       	com	r19
    616e:	21 95       	neg	r18
    6170:	3f 4f       	sbci	r19, 0xFF	; 255
    6172:	4f 4f       	sbci	r20, 0xFF	; 255
    6174:	5f 4f       	sbci	r21, 0xFF	; 255

00006176 <__divmodsi4_exit>:
    6176:	08 95       	ret

00006178 <__divmodsi4_neg1>:
    6178:	f6 f7       	brtc	.-4      	; 0x6176 <__divmodsi4_exit>
    617a:	90 95       	com	r25
    617c:	80 95       	com	r24
    617e:	70 95       	com	r23
    6180:	61 95       	neg	r22
    6182:	7f 4f       	sbci	r23, 0xFF	; 255
    6184:	8f 4f       	sbci	r24, 0xFF	; 255
    6186:	9f 4f       	sbci	r25, 0xFF	; 255
    6188:	08 95       	ret

0000618a <_exit>:
    618a:	f8 94       	cli

0000618c <__stop_program>:
    618c:	ff cf       	rjmp	.-2      	; 0x618c <__stop_program>
