
WallFollowing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
<<<<<<< HEAD
  0 .data         00000118  00800100  0000617e  00006212  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000617e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000030d  00800218  00800218  0000632a  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  0000632a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000003ad  00000000  00000000  0000636a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000127a  00000000  00000000  00006717  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000281  00000000  00000000  00007991  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ee1  00000000  00000000  00007c12  2**0
=======
  0 .data         00000148  00800100  00006446  000064da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006446  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000319  00800248  00800248  00006622  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  00006622  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000041d  00000000  00000000  00006662  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001409  00000000  00000000  00006a7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002f9  00000000  00000000  00007e88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001051  00000000  00000000  00008181  2**0
>>>>>>> Lab6 Code
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000270  00000000  00000000  000091d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000c41  00000000  00000000  00009444  2**0
                  CONTENTS, READONLY, DEBUGGING
<<<<<<< HEAD
 10 .debug_loc    00000d56  00000000  00000000  000098cc  2**0
=======
 10 .debug_loc    00000f58  00000000  00000000  0000a085  2**0
>>>>>>> Lab6 Code
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 31 03 	jmp	0x662	; 0x662 <__ctors_end>
       4:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       8:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
<<<<<<< HEAD
      10:	0c 94 8f 1c 	jmp	0x391e	; 0x391e <__vector_4>
      14:	0c 94 b8 1c 	jmp	0x3970	; 0x3970 <__vector_5>
      18:	0c 94 e1 1c 	jmp	0x39c2	; 0x39c2 <__vector_6>
      1c:	0c 94 0a 1d 	jmp	0x3a14	; 0x3a14 <__vector_7>
      20:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      24:	0c 94 70 1b 	jmp	0x36e0	; 0x36e0 <__vector_9>
      28:	0c 94 99 1b 	jmp	0x3732	; 0x3732 <__vector_10>
      2c:	0c 94 c2 1b 	jmp	0x3784	; 0x3784 <__vector_11>
      30:	0c 94 3d 1c 	jmp	0x387a	; 0x387a <__vector_12>
      34:	0c 94 eb 1b 	jmp	0x37d6	; 0x37d6 <__vector_13>
      38:	0c 94 14 1c 	jmp	0x3828	; 0x3828 <__vector_14>
      3c:	0c 94 66 1c 	jmp	0x38cc	; 0x38cc <__vector_15>
      40:	0c 94 f5 1a 	jmp	0x35ea	; 0x35ea <__vector_16>
      44:	0c 94 1e 1b 	jmp	0x363c	; 0x363c <__vector_17>
      48:	0c 94 47 1b 	jmp	0x368e	; 0x368e <__vector_18>
=======
      10:	0c 94 f3 1d 	jmp	0x3be6	; 0x3be6 <__vector_4>
      14:	0c 94 1c 1e 	jmp	0x3c38	; 0x3c38 <__vector_5>
      18:	0c 94 45 1e 	jmp	0x3c8a	; 0x3c8a <__vector_6>
      1c:	0c 94 6e 1e 	jmp	0x3cdc	; 0x3cdc <__vector_7>
      20:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      24:	0c 94 d4 1c 	jmp	0x39a8	; 0x39a8 <__vector_9>
      28:	0c 94 fd 1c 	jmp	0x39fa	; 0x39fa <__vector_10>
      2c:	0c 94 26 1d 	jmp	0x3a4c	; 0x3a4c <__vector_11>
      30:	0c 94 a1 1d 	jmp	0x3b42	; 0x3b42 <__vector_12>
      34:	0c 94 4f 1d 	jmp	0x3a9e	; 0x3a9e <__vector_13>
      38:	0c 94 78 1d 	jmp	0x3af0	; 0x3af0 <__vector_14>
      3c:	0c 94 ca 1d 	jmp	0x3b94	; 0x3b94 <__vector_15>
      40:	0c 94 59 1c 	jmp	0x38b2	; 0x38b2 <__vector_16>
      44:	0c 94 82 1c 	jmp	0x3904	; 0x3904 <__vector_17>
      48:	0c 94 ab 1c 	jmp	0x3956	; 0x3956 <__vector_18>
>>>>>>> Lab6 Code
      4c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      50:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      54:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      58:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      5c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      60:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      64:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      68:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      6c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      70:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      74:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      78:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
<<<<<<< HEAD
      7c:	5a 18       	sub	r5, r10
      7e:	5d 18       	sub	r5, r13
      80:	60 18       	sub	r6, r0
      82:	63 18       	sub	r6, r3
      84:	6c 18       	sub	r6, r12
      86:	66 18       	sub	r6, r6
      88:	69 18       	sub	r6, r9
      8a:	6f 18       	sub	r6, r15
      8c:	72 18       	sub	r7, r2
      8e:	75 18       	sub	r7, r5
      90:	78 18       	sub	r7, r8
      92:	7b 18       	sub	r7, r11
      94:	7e 18       	sub	r7, r14
      96:	81 18       	sub	r8, r1
      98:	84 18       	sub	r8, r4
      9a:	87 18       	sub	r8, r7
      9c:	8a 18       	sub	r8, r10
      9e:	8d 18       	sub	r8, r13
      a0:	90 18       	sub	r9, r0
      a2:	a1 18       	sub	r10, r1
      a4:	a4 18       	sub	r10, r4
      a6:	a7 18       	sub	r10, r7
      a8:	aa 18       	sub	r10, r10
      aa:	b3 18       	sub	r11, r3
      ac:	ad 18       	sub	r10, r13
      ae:	b0 18       	sub	r11, r0
      b0:	b6 18       	sub	r11, r6
      b2:	b9 18       	sub	r11, r9
      b4:	bc 18       	sub	r11, r12
      b6:	bf 18       	sub	r11, r15
      b8:	c2 18       	sub	r12, r2
      ba:	c5 18       	sub	r12, r5
      bc:	c8 18       	sub	r12, r8
      be:	cb 18       	sub	r12, r11
      c0:	ce 18       	sub	r12, r14
      c2:	d1 18       	sub	r13, r1
      c4:	d4 18       	sub	r13, r4
      c6:	d7 18       	sub	r13, r7
=======
      7c:	be 19       	sub	r27, r14
      7e:	c1 19       	sub	r28, r1
      80:	c4 19       	sub	r28, r4
      82:	c7 19       	sub	r28, r7
      84:	d0 19       	sub	r29, r0
      86:	ca 19       	sub	r28, r10
      88:	cd 19       	sub	r28, r13
      8a:	d3 19       	sub	r29, r3
      8c:	d6 19       	sub	r29, r6
      8e:	d9 19       	sub	r29, r9
      90:	dc 19       	sub	r29, r12
      92:	df 19       	sub	r29, r15
      94:	e2 19       	sub	r30, r2
      96:	e5 19       	sub	r30, r5
      98:	e8 19       	sub	r30, r8
      9a:	eb 19       	sub	r30, r11
      9c:	ee 19       	sub	r30, r14
      9e:	f1 19       	sub	r31, r1
      a0:	f4 19       	sub	r31, r4
      a2:	05 1a       	sub	r0, r21
      a4:	08 1a       	sub	r0, r24
      a6:	0b 1a       	sub	r0, r27
      a8:	0e 1a       	sub	r0, r30
      aa:	17 1a       	sub	r1, r23
      ac:	11 1a       	sub	r1, r17
      ae:	14 1a       	sub	r1, r20
      b0:	1a 1a       	sub	r1, r26
      b2:	1d 1a       	sub	r1, r29
      b4:	20 1a       	sub	r2, r16
      b6:	23 1a       	sub	r2, r19
      b8:	26 1a       	sub	r2, r22
      ba:	29 1a       	sub	r2, r25
      bc:	2c 1a       	sub	r2, r28
      be:	2f 1a       	sub	r2, r31
      c0:	32 1a       	sub	r3, r18
      c2:	35 1a       	sub	r3, r21
      c4:	38 1a       	sub	r3, r24
      c6:	3b 1a       	sub	r3, r27
>>>>>>> Lab6 Code
      c8:	07 63       	ori	r16, 0x37	; 55
      ca:	42 36       	cpi	r20, 0x62	; 98
      cc:	b7 9b       	sbis	0x16, 7	; 22
      ce:	d8 a7       	std	Y+40, r29	; 0x28
      d0:	1a 39       	cpi	r17, 0x9A	; 154
      d2:	68 56       	subi	r22, 0x68	; 104
      d4:	18 ae       	std	Y+56, r1	; 0x38
      d6:	ba ab       	std	Y+50, r27	; 0x32
      d8:	55 8c       	ldd	r5, Z+29	; 0x1d
      da:	1d 3c       	cpi	r17, 0xCD	; 205
      dc:	b7 cc       	rjmp	.-1682   	; 0xfffffa4c <__eeprom_end+0xff7efa4c>
      de:	57 63       	ori	r21, 0x37	; 55
      e0:	bd 6d       	ori	r27, 0xDD	; 221
      e2:	ed fd       	.word	0xfded	; ????
      e4:	75 3e       	cpi	r23, 0xE5	; 229
      e6:	f6 17       	cp	r31, r22
      e8:	72 31       	cpi	r23, 0x12	; 18
      ea:	bf 00       	.word	0x00bf	; ????
      ec:	00 00       	nop
      ee:	80 3f       	cpi	r24, 0xF0	; 240
      f0:	08 00       	.word	0x0008	; ????
      f2:	00 00       	nop
      f4:	be 92       	st	-X, r11
      f6:	24 49       	sbci	r18, 0x94	; 148
      f8:	12 3e       	cpi	r17, 0xE2	; 226
      fa:	ab aa       	std	Y+51, r10	; 0x33
      fc:	aa 2a       	or	r10, r26
      fe:	be cd       	rjmp	.-1156   	; 0xfffffc7c <__eeprom_end+0xff7efc7c>
     100:	cc cc       	rjmp	.-1640   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     102:	4c 3e       	cpi	r20, 0xEC	; 236
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	be ab       	std	Y+54, r27	; 0x36
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	aa 3e       	cpi	r26, 0xEA	; 234
     10e:	00 00       	nop
     110:	00 00       	nop
     112:	bf 00       	.word	0x00bf	; ????
     114:	00 00       	nop
     116:	80 3f       	cpi	r24, 0xF0	; 240
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	00 08       	sbc	r0, r0
     11e:	41 78       	andi	r20, 0x81	; 129
     120:	d3 bb       	out	0x13, r29	; 19
     122:	43 87       	std	Z+11, r20	; 0x0b
     124:	d1 13       	cpse	r29, r17
     126:	3d 19       	sub	r19, r13
     128:	0e 3c       	cpi	r16, 0xCE	; 206
     12a:	c3 bd       	out	0x23, r28	; 35
     12c:	42 82       	std	Z+2, r4	; 0x02
     12e:	ad 2b       	or	r26, r29
     130:	3e 68       	ori	r19, 0x8E	; 142
     132:	ec 82       	std	Y+4, r14	; 0x04
     134:	76 be       	out	0x36, r7	; 54
     136:	d9 8f       	std	Y+25, r29	; 0x19
     138:	e1 a9       	ldd	r30, Z+49	; 0x31
     13a:	3e 4c       	sbci	r19, 0xCE	; 206
     13c:	80 ef       	ldi	r24, 0xF0	; 240
     13e:	ff be       	out	0x3f, r15	; 63
     140:	01 c4       	rjmp	.+2050   	; 0x944 <read_pixel_1+0x44>
     142:	ff 7f       	andi	r31, 0xFF	; 255
     144:	3f 00       	.word	0x003f	; ????
     146:	00 00       	nop
	...

0000014a <char_bitmap>:
     14a:	16 05 01 00 00 00 00 00 00 00 fa 00 00 00 e0 00     ................
     15a:	e0 00 28 fe 28 fe 28 24 54 fe 54 48 c4 c8 10 26     ..(.(.($T.TH...&
     16a:	46 6c 92 aa 44 a0 00 a0 c0 00 00 00 38 44 82 00     Fl..D.......8D..
     17a:	00 82 44 38 00 28 10 7c 10 28 10 10 7c 10 10 00     ..D8.(.|.(..|...
     18a:	0a 0c 00 00 10 10 10 10 10 00 06 06 00 00 04 08     ................
     19a:	10 20 40 7c 8a 92 a2 7c 00 42 fe 02 00 42 86 8a     . @|...|.B...B..
     1aa:	92 62 84 82 a2 d2 8c 18 28 48 fe 08 e4 a2 a2 a2     .b......(H......
     1ba:	9c 3c 52 92 92 0c 80 8e 90 a0 c0 6c 92 92 92 6c     .<R........l...l
     1ca:	60 92 92 94 78 00 6c 6c 00 00 00 6a 6c 00 00 10     `...x.ll...jl...
     1da:	28 44 82 00 28 28 28 28 28 00 82 44 28 10 40 80     (D..(((((..D(.@.
     1ea:	8a 90 60 4c 92 9e 82 7c 7e 88 88 88 7e fe 92 92     ..`L...|~...~...
     1fa:	92 6c 7c 82 82 82 44 fe 82 82 44 38 fe 92 92 92     .l|...D...D8....
     20a:	82 fe 90 90 90 80 7c 82 92 92 5e fe 10 10 10 fe     ......|...^.....
     21a:	00 82 fe 82 00 04 02 82 fc 80 fe 10 28 44 82 fe     ............(D..
     22a:	02 02 02 02 fe 40 30 40 fe fe 20 10 08 fe 7c 82     .....@0@.. ...|.
     23a:	82 82 7c fe 90 90 90 60 7c 82 8a 84 7a fe 90 98     ..|....`|...z...
     24a:	94 62 62 92 92 92 8c 80 80 fe 80 80 fc 02 02 02     .bb.............
     25a:	fc f8 04 02 04 f8 fc 02 1c 02 fc c6 28 10 28 c6     ............(.(.
     26a:	e0 10 0e 10 e0 86 8a 92 a2 c2 00 fe 82 82 00 40     ...............@
     27a:	20 10 08 04 00 82 82 fe 00 20 40 80 40 20 02 02      ........ @.@ ..
     28a:	02 02 02 00 80 40 20 00 04 2a 2a 2a 1e fe 12 22     .....@ ..***..."
     29a:	22 1c 1c 22 22 22 04 1c 22 22 12 fe 1c 2a 2a 2a     ".."""..""...***
     2aa:	18 10 7e 90 80 40 30 4a 4a 4a 7c fe 10 20 20 1e     ..~..@0JJJ|..  .
     2ba:	00 22 be 02 00 04 02 22 bc 00 fe 08 14 22 00 00     ."....."....."..
     2ca:	82 fe 02 00 3e 20 18 20 1e 3e 10 20 20 1e 1c 22     ....> . .>.  .."
     2da:	22 22 1c 3e 28 28 28 10 10 28 28 18 3e 3e 10 20     "".>(((..((.>>. 
     2ea:	20 10 12 2a 2a 2a 04 20 fc 22 02 04 3c 02 02 04      ..***. ."..<...
     2fa:	3e 38 04 02 04 38 3c 02 0c 02 3c 22 14 08 14 22     >8...8<...<"..."
     30a:	30 0a 0a 0a 3c 22 26 2a 32 22 00 10 6c 82 00 00     0...<"&*2"..l...
     31a:	00 fe 00 00 00 82 6c 10 00 08 10 10 08 10 00 00     ......l.........
     32a:	00 00 00 7f 81 81 81 7f 7f 83 83 83 7f 7f 87 87     ................
     33a:	87 7f 7f 8f 8f 8f 7f 7f 9f 9f 9f 7f 7f bf bf bf     ................
     34a:	7f 7f ff ff ff 7f 20 40 ff 40 20 62 15 17 15 65     ...... @.@ b...e
     35a:	00 fb fb 00 00                                      .....

0000035f <CEENBoT_Inc_logo_bitmap>:
     35f:	00 00 00 00 00 c0 ff 03 00 e0 ff 07 00 f0 ff 0f     ................
     36f:	00 f8 ff 1f 00 78 00 1e 00 78 00 1e 00 78 00 1e     .....x...x...x..
     37f:	00 78 00 1e 00 78 00 1e 00 78 00 1e 00 78 00 1e     .x...x...x...x..
     38f:	00 78 00 1e 00 78 00 1e 00 00 00 00 00 00 00 00     .x...x..........
     39f:	00 80 ff 03 00 e0 ff 07 00 f0 ff 0f 00 f8 ff 1f     ................
     3af:	00 f8 3c 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     ..<..x<..x<..x<.
     3bf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     3cf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     3df:	00 00 00 00 00 e0 ff 03 00 f0 ff 07 00 f8 ff 0f     ................
     3ef:	00 f8 ff 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .....x<..x<..x<.
     3ff:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     40f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     41f:	00 00 00 00 00 f8 ff 03 00 f8 ff 0f 00 f8 ff 1f     ................
     42f:	00 f8 ff 1f 00 00 00 1e 00 00 00 1e 00 00 80 1f     ................
     43f:	00 00 f0 1f 00 00 ff 0f 00 e0 ff 07 00 f0 ff 00     ................
     44f:	00 f8 0f 00 00 f8 00 00 00 78 00 00 00 78 00 00     .........x...x..
     45f:	00 f8 ff 1f 00 f8 ff 1f 00 f0 ff 1f 00 e0 ff 1f     ................
	...
     477:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     487:	00 78 00 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x...x<..x<..x<.
     497:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 f8 7e 1f     .x<..x<..x<...~.
     4a7:	00 f8 ff 1f 00 f0 ff 0f 00 e0 e7 03 00 00 00 00     ................
     4b7:	00 00 00 38 00 ee ff 6c 00 2a 80 45 00 3a 00 47     ...8...l.*.E.:.G
     4c7:	fc 03 ff 6c fc 83 ff 39 00 de ff 0b 7c d0 81 0b     ...l...9....|...
     4d7:	fc d0 81 0b c0 d0 81 0b fc d0 81 0b 7c de ff 0b     ............|...
     4e7:	00 82 ff 39 70 02 ff 6c f8 3a 00 47 dc 2a 80 45     ...9p..l.:.G.*.E
     4f7:	cc ee ff 6c cc 00 00 38 00 00 00 00 0c 00 00 1e     ...l...8........
     507:	0c 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     517:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     527:	00 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     537:	00 00 00 5e 00 00 00 40 00 00 00 7c 00 00 00 40     ...^...@...|...@
     547:	00 00 00 40 00 00 00 7c 00 00 00 30 00 00 00 10     ...@...|...0....
     557:	00 00 00 30 00 00 00 7c                             ...0...|

0000055f <__c.1790>:
     55f:	6e 61 6e 00                                         nan.

00000563 <__c.1788>:
     563:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     573:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     583:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     593:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     5a3:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     5b3:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     5c3:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     5d3:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     5e3:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     5f3:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     603:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     613:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     623:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     633:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     643:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     653:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

00000662 <__ctors_end>:
     662:	11 24       	eor	r1, r1
     664:	1f be       	out	0x3f, r1	; 63
     666:	cf ef       	ldi	r28, 0xFF	; 255
     668:	d8 e0       	ldi	r29, 0x08	; 8
     66a:	de bf       	out	0x3e, r29	; 62
     66c:	cd bf       	out	0x3d, r28	; 61

0000066e <__do_copy_data>:
     66e:	12 e0       	ldi	r17, 0x02	; 2
     670:	a0 e0       	ldi	r26, 0x00	; 0
     672:	b1 e0       	ldi	r27, 0x01	; 1
<<<<<<< HEAD
     674:	ee e7       	ldi	r30, 0x7E	; 126
     676:	f1 e6       	ldi	r31, 0x61	; 97
=======
     674:	e6 e4       	ldi	r30, 0x46	; 70
     676:	f4 e6       	ldi	r31, 0x64	; 100
>>>>>>> Lab6 Code
     678:	02 c0       	rjmp	.+4      	; 0x67e <.do_copy_data_start>

0000067a <.do_copy_data_loop>:
     67a:	05 90       	lpm	r0, Z+
     67c:	0d 92       	st	X+, r0

0000067e <.do_copy_data_start>:
     67e:	a8 34       	cpi	r26, 0x48	; 72
     680:	b1 07       	cpc	r27, r17
     682:	d9 f7       	brne	.-10     	; 0x67a <.do_copy_data_loop>

00000684 <__do_clear_bss>:
     684:	15 e0       	ldi	r17, 0x05	; 5
     686:	a8 e4       	ldi	r26, 0x48	; 72
     688:	b2 e0       	ldi	r27, 0x02	; 2
     68a:	01 c0       	rjmp	.+2      	; 0x68e <.do_clear_bss_start>

0000068c <.do_clear_bss_loop>:
     68c:	1d 92       	st	X+, r1

0000068e <.do_clear_bss_start>:
     68e:	a1 36       	cpi	r26, 0x61	; 97
     690:	b1 07       	cpc	r27, r17
     692:	e1 f7       	brne	.-8      	; 0x68c <.do_clear_bss_loop>
<<<<<<< HEAD
     694:	0e 94 04 13 	call	0x2608	; 0x2608 <main>
     698:	0c 94 bd 30 	jmp	0x617a	; 0x617a <_exit>
=======
     694:	0e 94 68 14 	call	0x28d0	; 0x28d0 <main>
     698:	0c 94 21 32 	jmp	0x6442	; 0x6442 <_exit>
>>>>>>> Lab6 Code

0000069c <__bad_interrupt>:
     69c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006a0 <get_ambient_temp>:
* Output Return:	I2C_STATUS
* Overview:			Reads the ambient temperature
********************************************************************/

I2C_STATUS get_ambient_temp( unsigned char *ambient_temp )
{
     6a0:	1f 93       	push	r17
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6a8:	88 e6       	ldi	r24, 0x68	; 104
     6aa:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     6ac:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     6ac:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     6b0:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     6b2:	88 23       	and	r24, r24
     6b4:	a1 f4       	brne	.+40     	; 0x6de <get_ambient_temp+0x3e>
	{

		// Send the register value (being 1).  This is
		// the register that contains the ambient temperature.
		i2c_stat = I2C_MSTR_send( __TPA81_AMBIENT );
     6b6:	81 e0       	ldi	r24, 0x01	; 1
<<<<<<< HEAD
     6b8:	0e 94 33 1a 	call	0x3466	; 0x3466 <I2C_MSTR_send>
=======
     6b8:	0e 94 97 1b 	call	0x372e	; 0x372e <I2C_MSTR_send>
>>>>>>> Lab6 Code
     6bc:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     6be:	88 23       	and	r24, r24
     6c0:	71 f4       	brne	.+28     	; 0x6de <get_ambient_temp+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     6c2:	88 e6       	ldi	r24, 0x68	; 104
     6c4:	61 e0       	ldi	r22, 0x01	; 1
<<<<<<< HEAD
     6c6:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     6c6:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     6ca:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     6cc:	88 23       	and	r24, r24
     6ce:	39 f4       	brne	.+14     	; 0x6de <get_ambient_temp+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( ambient_temp, FALSE );
     6d0:	ce 01       	movw	r24, r28
     6d2:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     6d4:	0e 94 07 1a 	call	0x340e	; 0x340e <I2C_MSTR_get>
=======
     6d4:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <I2C_MSTR_get>
>>>>>>> Lab6 Code
     6d8:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     6da:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*ambient_temp = 0;
     6dc:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
<<<<<<< HEAD
     6de:	0e 94 9f 1a 	call	0x353e	; 0x353e <I2C_MSTR_stop>
=======
     6de:	0e 94 03 1c 	call	0x3806	; 0x3806 <I2C_MSTR_stop>
>>>>>>> Lab6 Code

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_ambient_temp()
     6e2:	81 2f       	mov	r24, r17
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	1f 91       	pop	r17
     6ea:	08 95       	ret

000006ec <read_pixel_8>:
	return i2c_stat;
}

// get pixel eight
I2C_STATUS read_pixel_8( unsigned char *pixel_8)
{
     6ec:	1f 93       	push	r17
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6f4:	88 e6       	ldi	r24, 0x68	; 104
     6f6:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     6f8:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     6f8:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     6fc:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     6fe:	88 23       	and	r24, r24
     700:	a1 f4       	brne	.+40     	; 0x72a <read_pixel_8+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX8 );
     702:	89 e0       	ldi	r24, 0x09	; 9
<<<<<<< HEAD
     704:	0e 94 33 1a 	call	0x3466	; 0x3466 <I2C_MSTR_send>
=======
     704:	0e 94 97 1b 	call	0x372e	; 0x372e <I2C_MSTR_send>
>>>>>>> Lab6 Code
     708:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     70a:	88 23       	and	r24, r24
     70c:	71 f4       	brne	.+28     	; 0x72a <read_pixel_8+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     70e:	88 e6       	ldi	r24, 0x68	; 104
     710:	61 e0       	ldi	r22, 0x01	; 1
<<<<<<< HEAD
     712:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     712:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     716:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     718:	88 23       	and	r24, r24
     71a:	39 f4       	brne	.+14     	; 0x72a <read_pixel_8+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_8, FALSE );
     71c:	ce 01       	movw	r24, r28
     71e:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     720:	0e 94 07 1a 	call	0x340e	; 0x340e <I2C_MSTR_get>
=======
     720:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <I2C_MSTR_get>
>>>>>>> Lab6 Code
     724:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     726:	81 11       	cpse	r24, r1
					*pixel_8 = 0;
     728:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
<<<<<<< HEAD
     72a:	0e 94 9f 1a 	call	0x353e	; 0x353e <I2C_MSTR_stop>
=======
     72a:	0e 94 03 1c 	call	0x3806	; 0x3806 <I2C_MSTR_stop>
>>>>>>> Lab6 Code
	return i2c_stat;
}
     72e:	81 2f       	mov	r24, r17
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	1f 91       	pop	r17
     736:	08 95       	ret

00000738 <read_pixel_7>:
	return i2c_stat;
}

// get pixel seven
I2C_STATUS read_pixel_7( unsigned char *pixel_7)
{
     738:	1f 93       	push	r17
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     740:	88 e6       	ldi	r24, 0x68	; 104
     742:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     744:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     744:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     748:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     74a:	88 23       	and	r24, r24
     74c:	a1 f4       	brne	.+40     	; 0x776 <read_pixel_7+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX7 );
     74e:	88 e0       	ldi	r24, 0x08	; 8
<<<<<<< HEAD
     750:	0e 94 33 1a 	call	0x3466	; 0x3466 <I2C_MSTR_send>
=======
     750:	0e 94 97 1b 	call	0x372e	; 0x372e <I2C_MSTR_send>
>>>>>>> Lab6 Code
     754:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     756:	88 23       	and	r24, r24
     758:	71 f4       	brne	.+28     	; 0x776 <read_pixel_7+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     75a:	88 e6       	ldi	r24, 0x68	; 104
     75c:	61 e0       	ldi	r22, 0x01	; 1
<<<<<<< HEAD
     75e:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     75e:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     762:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     764:	88 23       	and	r24, r24
     766:	39 f4       	brne	.+14     	; 0x776 <read_pixel_7+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_7, FALSE );
     768:	ce 01       	movw	r24, r28
     76a:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     76c:	0e 94 07 1a 	call	0x340e	; 0x340e <I2C_MSTR_get>
=======
     76c:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <I2C_MSTR_get>
>>>>>>> Lab6 Code
     770:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     772:	81 11       	cpse	r24, r1
					*pixel_7 = 0;
     774:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
<<<<<<< HEAD
     776:	0e 94 9f 1a 	call	0x353e	; 0x353e <I2C_MSTR_stop>
=======
     776:	0e 94 03 1c 	call	0x3806	; 0x3806 <I2C_MSTR_stop>
>>>>>>> Lab6 Code
	return i2c_stat;
}
     77a:	81 2f       	mov	r24, r17
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	1f 91       	pop	r17
     782:	08 95       	ret

00000784 <read_pixel_6>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel six
I2C_STATUS read_pixel_6( unsigned char *pixel_6)
{
     784:	1f 93       	push	r17
     786:	cf 93       	push	r28
     788:	df 93       	push	r29
     78a:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     78c:	88 e6       	ldi	r24, 0x68	; 104
     78e:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     790:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     790:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     794:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     796:	88 23       	and	r24, r24
     798:	a1 f4       	brne	.+40     	; 0x7c2 <read_pixel_6+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX6 );
     79a:	87 e0       	ldi	r24, 0x07	; 7
<<<<<<< HEAD
     79c:	0e 94 33 1a 	call	0x3466	; 0x3466 <I2C_MSTR_send>
=======
     79c:	0e 94 97 1b 	call	0x372e	; 0x372e <I2C_MSTR_send>
>>>>>>> Lab6 Code
     7a0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7a2:	88 23       	and	r24, r24
     7a4:	71 f4       	brne	.+28     	; 0x7c2 <read_pixel_6+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7a6:	88 e6       	ldi	r24, 0x68	; 104
     7a8:	61 e0       	ldi	r22, 0x01	; 1
<<<<<<< HEAD
     7aa:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     7aa:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     7ae:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7b0:	88 23       	and	r24, r24
     7b2:	39 f4       	brne	.+14     	; 0x7c2 <read_pixel_6+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_6, FALSE );
     7b4:	ce 01       	movw	r24, r28
     7b6:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     7b8:	0e 94 07 1a 	call	0x340e	; 0x340e <I2C_MSTR_get>
=======
     7b8:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <I2C_MSTR_get>
>>>>>>> Lab6 Code
     7bc:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     7be:	81 11       	cpse	r24, r1
					*pixel_6 = 0;
     7c0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
<<<<<<< HEAD
     7c2:	0e 94 9f 1a 	call	0x353e	; 0x353e <I2C_MSTR_stop>
=======
     7c2:	0e 94 03 1c 	call	0x3806	; 0x3806 <I2C_MSTR_stop>
>>>>>>> Lab6 Code
	return i2c_stat;
}
     7c6:	81 2f       	mov	r24, r17
     7c8:	df 91       	pop	r29
     7ca:	cf 91       	pop	r28
     7cc:	1f 91       	pop	r17
     7ce:	08 95       	ret

000007d0 <read_pixel_5>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel five
I2C_STATUS read_pixel_5( unsigned char *pixel_5)
{
     7d0:	1f 93       	push	r17
     7d2:	cf 93       	push	r28
     7d4:	df 93       	push	r29
     7d6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     7d8:	88 e6       	ldi	r24, 0x68	; 104
     7da:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     7dc:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     7dc:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     7e0:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     7e2:	88 23       	and	r24, r24
     7e4:	a1 f4       	brne	.+40     	; 0x80e <read_pixel_5+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX5 );
     7e6:	86 e0       	ldi	r24, 0x06	; 6
<<<<<<< HEAD
     7e8:	0e 94 33 1a 	call	0x3466	; 0x3466 <I2C_MSTR_send>
=======
     7e8:	0e 94 97 1b 	call	0x372e	; 0x372e <I2C_MSTR_send>
>>>>>>> Lab6 Code
     7ec:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7ee:	88 23       	and	r24, r24
     7f0:	71 f4       	brne	.+28     	; 0x80e <read_pixel_5+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7f2:	88 e6       	ldi	r24, 0x68	; 104
     7f4:	61 e0       	ldi	r22, 0x01	; 1
<<<<<<< HEAD
     7f6:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     7f6:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     7fa:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7fc:	88 23       	and	r24, r24
     7fe:	39 f4       	brne	.+14     	; 0x80e <read_pixel_5+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_5, FALSE );
     800:	ce 01       	movw	r24, r28
     802:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     804:	0e 94 07 1a 	call	0x340e	; 0x340e <I2C_MSTR_get>
=======
     804:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <I2C_MSTR_get>
>>>>>>> Lab6 Code
     808:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     80a:	81 11       	cpse	r24, r1
					*pixel_5 = 0;
     80c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
<<<<<<< HEAD
     80e:	0e 94 9f 1a 	call	0x353e	; 0x353e <I2C_MSTR_stop>
=======
     80e:	0e 94 03 1c 	call	0x3806	; 0x3806 <I2C_MSTR_stop>
>>>>>>> Lab6 Code
	return i2c_stat;
}
     812:	81 2f       	mov	r24, r17
     814:	df 91       	pop	r29
     816:	cf 91       	pop	r28
     818:	1f 91       	pop	r17
     81a:	08 95       	ret

0000081c <read_pixel_4>:
	return i2c_stat;
}

// get pixel four
I2C_STATUS read_pixel_4( unsigned char *pixel_4)
{
     81c:	1f 93       	push	r17
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     824:	88 e6       	ldi	r24, 0x68	; 104
     826:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     828:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     828:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     82c:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     82e:	88 23       	and	r24, r24
     830:	a1 f4       	brne	.+40     	; 0x85a <read_pixel_4+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX4 );
     832:	85 e0       	ldi	r24, 0x05	; 5
<<<<<<< HEAD
     834:	0e 94 33 1a 	call	0x3466	; 0x3466 <I2C_MSTR_send>
=======
     834:	0e 94 97 1b 	call	0x372e	; 0x372e <I2C_MSTR_send>
>>>>>>> Lab6 Code
     838:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     83a:	88 23       	and	r24, r24
     83c:	71 f4       	brne	.+28     	; 0x85a <read_pixel_4+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     83e:	88 e6       	ldi	r24, 0x68	; 104
     840:	61 e0       	ldi	r22, 0x01	; 1
<<<<<<< HEAD
     842:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     842:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     846:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     848:	88 23       	and	r24, r24
     84a:	39 f4       	brne	.+14     	; 0x85a <read_pixel_4+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_4, FALSE );
     84c:	ce 01       	movw	r24, r28
     84e:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     850:	0e 94 07 1a 	call	0x340e	; 0x340e <I2C_MSTR_get>
=======
     850:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <I2C_MSTR_get>
>>>>>>> Lab6 Code
     854:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     856:	81 11       	cpse	r24, r1
					*pixel_4 = 0;
     858:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
<<<<<<< HEAD
     85a:	0e 94 9f 1a 	call	0x353e	; 0x353e <I2C_MSTR_stop>
=======
     85a:	0e 94 03 1c 	call	0x3806	; 0x3806 <I2C_MSTR_stop>
>>>>>>> Lab6 Code
	return i2c_stat;
}
     85e:	81 2f       	mov	r24, r17
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	1f 91       	pop	r17
     866:	08 95       	ret

00000868 <read_pixel_3>:
	return i2c_stat;
}

// get pixel three
I2C_STATUS read_pixel_3( unsigned char *pixel_3)
{
     868:	1f 93       	push	r17
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     870:	88 e6       	ldi	r24, 0x68	; 104
     872:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     874:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     874:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     878:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     87a:	88 23       	and	r24, r24
     87c:	a1 f4       	brne	.+40     	; 0x8a6 <read_pixel_3+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX3 );
     87e:	84 e0       	ldi	r24, 0x04	; 4
<<<<<<< HEAD
     880:	0e 94 33 1a 	call	0x3466	; 0x3466 <I2C_MSTR_send>
=======
     880:	0e 94 97 1b 	call	0x372e	; 0x372e <I2C_MSTR_send>
>>>>>>> Lab6 Code
     884:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     886:	88 23       	and	r24, r24
     888:	71 f4       	brne	.+28     	; 0x8a6 <read_pixel_3+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     88a:	88 e6       	ldi	r24, 0x68	; 104
     88c:	61 e0       	ldi	r22, 0x01	; 1
<<<<<<< HEAD
     88e:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     88e:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     892:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     894:	88 23       	and	r24, r24
     896:	39 f4       	brne	.+14     	; 0x8a6 <read_pixel_3+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_3, FALSE );
     898:	ce 01       	movw	r24, r28
     89a:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     89c:	0e 94 07 1a 	call	0x340e	; 0x340e <I2C_MSTR_get>
=======
     89c:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <I2C_MSTR_get>
>>>>>>> Lab6 Code
     8a0:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8a2:	81 11       	cpse	r24, r1
					*pixel_3 = 0;
     8a4:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
<<<<<<< HEAD
     8a6:	0e 94 9f 1a 	call	0x353e	; 0x353e <I2C_MSTR_stop>
=======
     8a6:	0e 94 03 1c 	call	0x3806	; 0x3806 <I2C_MSTR_stop>
>>>>>>> Lab6 Code
	return i2c_stat;
}
     8aa:	81 2f       	mov	r24, r17
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	1f 91       	pop	r17
     8b2:	08 95       	ret

000008b4 <read_pixel_2>:
}


// get pixel two
I2C_STATUS read_pixel_2( unsigned char *pixel_2)
{
     8b4:	1f 93       	push	r17
     8b6:	cf 93       	push	r28
     8b8:	df 93       	push	r29
     8ba:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     8bc:	88 e6       	ldi	r24, 0x68	; 104
     8be:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     8c0:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     8c0:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     8c4:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     8c6:	88 23       	and	r24, r24
     8c8:	a1 f4       	brne	.+40     	; 0x8f2 <read_pixel_2+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX2 );
     8ca:	83 e0       	ldi	r24, 0x03	; 3
<<<<<<< HEAD
     8cc:	0e 94 33 1a 	call	0x3466	; 0x3466 <I2C_MSTR_send>
=======
     8cc:	0e 94 97 1b 	call	0x372e	; 0x372e <I2C_MSTR_send>
>>>>>>> Lab6 Code
     8d0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     8d2:	88 23       	and	r24, r24
     8d4:	71 f4       	brne	.+28     	; 0x8f2 <read_pixel_2+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     8d6:	88 e6       	ldi	r24, 0x68	; 104
     8d8:	61 e0       	ldi	r22, 0x01	; 1
<<<<<<< HEAD
     8da:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     8da:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     8de:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     8e0:	88 23       	and	r24, r24
     8e2:	39 f4       	brne	.+14     	; 0x8f2 <read_pixel_2+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_2, FALSE );
     8e4:	ce 01       	movw	r24, r28
     8e6:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     8e8:	0e 94 07 1a 	call	0x340e	; 0x340e <I2C_MSTR_get>
=======
     8e8:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <I2C_MSTR_get>
>>>>>>> Lab6 Code
     8ec:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8ee:	81 11       	cpse	r24, r1
					*pixel_2 = 0;
     8f0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
<<<<<<< HEAD
     8f2:	0e 94 9f 1a 	call	0x353e	; 0x353e <I2C_MSTR_stop>
=======
     8f2:	0e 94 03 1c 	call	0x3806	; 0x3806 <I2C_MSTR_stop>
>>>>>>> Lab6 Code
	return i2c_stat;
}
     8f6:	81 2f       	mov	r24, r17
     8f8:	df 91       	pop	r29
     8fa:	cf 91       	pop	r28
     8fc:	1f 91       	pop	r17
     8fe:	08 95       	ret

00000900 <read_pixel_1>:
* Output Return:	I2C_STATUS
* Overview:			These are several pixel read values for each of the pixels
********************************************************************/
// get pixel one
I2C_STATUS read_pixel_1( unsigned char *pixel_1)
{
     900:	1f 93       	push	r17
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     908:	88 e6       	ldi	r24, 0x68	; 104
     90a:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     90c:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     90c:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     910:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     912:	88 23       	and	r24, r24
     914:	a1 f4       	brne	.+40     	; 0x93e <read_pixel_1+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX1 );
     916:	82 e0       	ldi	r24, 0x02	; 2
<<<<<<< HEAD
     918:	0e 94 33 1a 	call	0x3466	; 0x3466 <I2C_MSTR_send>
=======
     918:	0e 94 97 1b 	call	0x372e	; 0x372e <I2C_MSTR_send>
>>>>>>> Lab6 Code
     91c:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     91e:	88 23       	and	r24, r24
     920:	71 f4       	brne	.+28     	; 0x93e <read_pixel_1+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     922:	88 e6       	ldi	r24, 0x68	; 104
     924:	61 e0       	ldi	r22, 0x01	; 1
<<<<<<< HEAD
     926:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     926:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     92a:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     92c:	88 23       	and	r24, r24
     92e:	39 f4       	brne	.+14     	; 0x93e <read_pixel_1+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_1, FALSE );
     930:	ce 01       	movw	r24, r28
     932:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     934:	0e 94 07 1a 	call	0x340e	; 0x340e <I2C_MSTR_get>
=======
     934:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <I2C_MSTR_get>
>>>>>>> Lab6 Code
     938:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     93a:	81 11       	cpse	r24, r1
					*pixel_1 = 0;
     93c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
<<<<<<< HEAD
     93e:	0e 94 9f 1a 	call	0x353e	; 0x353e <I2C_MSTR_stop>
=======
     93e:	0e 94 03 1c 	call	0x3806	; 0x3806 <I2C_MSTR_stop>
>>>>>>> Lab6 Code
	return i2c_stat;
}
     942:	81 2f       	mov	r24, r17
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	1f 91       	pop	r17
     94a:	08 95       	ret

0000094c <get_revision>:
* Input Variables:	unsigned char revision
* Output Return:	I2C_STATUS
* Overview:			
********************************************************************/
I2C_STATUS get_revision( unsigned char *revision )
{
     94c:	1f 93       	push	r17
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
     952:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     954:	88 e6       	ldi	r24, 0x68	; 104
     956:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     958:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     958:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     95c:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     95e:	88 23       	and	r24, r24
     960:	a1 f4       	brne	.+40     	; 0x98a <get_revision+0x3e>
	{

		// Send the register value (being 0).  This is
		// the register that contains the software revision.
		i2c_stat = I2C_MSTR_send( __TPA81_REVISION );
     962:	80 e0       	ldi	r24, 0x00	; 0
<<<<<<< HEAD
     964:	0e 94 33 1a 	call	0x3466	; 0x3466 <I2C_MSTR_send>
=======
     964:	0e 94 97 1b 	call	0x372e	; 0x372e <I2C_MSTR_send>
>>>>>>> Lab6 Code
     968:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     96a:	88 23       	and	r24, r24
     96c:	71 f4       	brne	.+28     	; 0x98a <get_revision+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     96e:	88 e6       	ldi	r24, 0x68	; 104
     970:	61 e0       	ldi	r22, 0x01	; 1
<<<<<<< HEAD
     972:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <I2C_MSTR_start>
=======
     972:	0e 94 bd 1b 	call	0x377a	; 0x377a <I2C_MSTR_start>
>>>>>>> Lab6 Code
     976:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     978:	88 23       	and	r24, r24
     97a:	39 f4       	brne	.+14     	; 0x98a <get_revision+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( revision, FALSE );
     97c:	ce 01       	movw	r24, r28
     97e:	60 e0       	ldi	r22, 0x00	; 0
<<<<<<< HEAD
     980:	0e 94 07 1a 	call	0x340e	; 0x340e <I2C_MSTR_get>
=======
     980:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <I2C_MSTR_get>
>>>>>>> Lab6 Code
     984:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     986:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*revision = 0;
     988:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
<<<<<<< HEAD
     98a:	0e 94 9f 1a 	call	0x353e	; 0x353e <I2C_MSTR_stop>
=======
     98a:	0e 94 03 1c 	call	0x3806	; 0x3806 <I2C_MSTR_stop>
>>>>>>> Lab6 Code

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_revision()
     98e:	81 2f       	mov	r24, r17
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	1f 91       	pop	r17
     996:	08 95       	ret

00000998 <getBackIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     998:	81 e0       	ldi	r24, 0x01	; 1
<<<<<<< HEAD
     99a:	0e 94 f9 12 	call	0x25f2	; 0x25f2 <ADC_set_VREF>
=======
     99a:	0e 94 5d 14 	call	0x28ba	; 0x28ba <ADC_set_VREF>
>>>>>>> Lab6 Code
	// Set the channel we will sample from.
	// Note: Swaped with frount IR for orientation
	ADC_set_channel(IRBACK_CHAN);
     99e:	85 e0       	ldi	r24, 0x05	; 5
<<<<<<< HEAD
     9a0:	0e 94 c2 12 	call	0x2584	; 0x2584 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9a4:	0e 94 a5 12 	call	0x254a	; 0x254a <ADC_sample>
=======
     9a0:	0e 94 26 14 	call	0x284c	; 0x284c <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9a4:	0e 94 09 14 	call	0x2812	; 0x2812 <ADC_sample>
>>>>>>> Lab6 Code
     9a8:	a0 e0       	ldi	r26, 0x00	; 0
     9aa:	b0 e0       	ldi	r27, 0x00	; 0
     9ac:	bc 01       	movw	r22, r24
     9ae:	cd 01       	movw	r24, r26
<<<<<<< HEAD
     9b0:	0e 94 c6 26 	call	0x4d8c	; 0x4d8c <__floatunsisf>
=======
     9b0:	0e 94 2a 28 	call	0x5054	; 0x5054 <__floatunsisf>
>>>>>>> Lab6 Code
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	40 ea       	ldi	r20, 0xA0	; 160
     9ba:	50 e4       	ldi	r21, 0x40	; 64
<<<<<<< HEAD
     9bc:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
=======
     9bc:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
>>>>>>> Lab6 Code
     9c0:	9b 01       	movw	r18, r22
     9c2:	ac 01       	movw	r20, r24
     9c4:	60 e0       	ldi	r22, 0x00	; 0
     9c6:	70 e2       	ldi	r23, 0x20	; 32
     9c8:	86 e3       	ldi	r24, 0x36	; 54
     9ca:	95 e4       	ldi	r25, 0x45	; 69
<<<<<<< HEAD
     9cc:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
=======
     9cc:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
>>>>>>> Lab6 Code
     9d0:	20 e0       	ldi	r18, 0x00	; 0
     9d2:	30 e0       	ldi	r19, 0x00	; 0
     9d4:	40 e8       	ldi	r20, 0x80	; 128
     9d6:	5f e3       	ldi	r21, 0x3F	; 63
<<<<<<< HEAD
     9d8:	0e 94 c4 25 	call	0x4b88	; 0x4b88 <__subsf3>
=======
     9d8:	0e 94 28 27 	call	0x4e50	; 0x4e50 <__subsf3>
>>>>>>> Lab6 Code
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     9dc:	08 95       	ret

000009de <getFrontIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     9de:	81 e0       	ldi	r24, 0x01	; 1
<<<<<<< HEAD
     9e0:	0e 94 f9 12 	call	0x25f2	; 0x25f2 <ADC_set_VREF>
=======
     9e0:	0e 94 5d 14 	call	0x28ba	; 0x28ba <ADC_set_VREF>
>>>>>>> Lab6 Code
	// Set the channel we will sample from.
	// Note: Swaped with back IR for orientation
	ADC_set_channel(IRFRONT_CHAN);
     9e4:	87 e0       	ldi	r24, 0x07	; 7
<<<<<<< HEAD
     9e6:	0e 94 c2 12 	call	0x2584	; 0x2584 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9ea:	0e 94 a5 12 	call	0x254a	; 0x254a <ADC_sample>
=======
     9e6:	0e 94 26 14 	call	0x284c	; 0x284c <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9ea:	0e 94 09 14 	call	0x2812	; 0x2812 <ADC_sample>
>>>>>>> Lab6 Code
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	bc 01       	movw	r22, r24
     9f4:	cd 01       	movw	r24, r26
<<<<<<< HEAD
     9f6:	0e 94 c6 26 	call	0x4d8c	; 0x4d8c <__floatunsisf>
=======
     9f6:	0e 94 2a 28 	call	0x5054	; 0x5054 <__floatunsisf>
>>>>>>> Lab6 Code
     9fa:	20 e0       	ldi	r18, 0x00	; 0
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	40 ea       	ldi	r20, 0xA0	; 160
     a00:	50 e4       	ldi	r21, 0x40	; 64
<<<<<<< HEAD
     a02:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
=======
     a02:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
>>>>>>> Lab6 Code
     a06:	9b 01       	movw	r18, r22
     a08:	ac 01       	movw	r20, r24
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	70 e2       	ldi	r23, 0x20	; 32
     a0e:	86 e3       	ldi	r24, 0x36	; 54
     a10:	95 e4       	ldi	r25, 0x45	; 69
<<<<<<< HEAD
     a12:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
=======
     a12:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
>>>>>>> Lab6 Code
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	40 e8       	ldi	r20, 0x80	; 128
     a1c:	5f e3       	ldi	r21, 0x3F	; 63
<<<<<<< HEAD
     a1e:	0e 94 c4 25 	call	0x4b88	; 0x4b88 <__subsf3>
=======
     a1e:	0e 94 28 27 	call	0x4e50	; 0x4e50 <__subsf3>
>>>>>>> Lab6 Code
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a22:	08 95       	ret

00000a24 <getRightIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     a24:	81 e0       	ldi	r24, 0x01	; 1
<<<<<<< HEAD
     a26:	0e 94 f9 12 	call	0x25f2	; 0x25f2 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
     a2a:	83 e0       	ldi	r24, 0x03	; 3
     a2c:	0e 94 c2 12 	call	0x2584	; 0x2584 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a30:	0e 94 a5 12 	call	0x254a	; 0x254a <ADC_sample>
=======
     a26:	0e 94 5d 14 	call	0x28ba	; 0x28ba <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
     a2a:	83 e0       	ldi	r24, 0x03	; 3
     a2c:	0e 94 26 14 	call	0x284c	; 0x284c <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a30:	0e 94 09 14 	call	0x2812	; 0x2812 <ADC_sample>
>>>>>>> Lab6 Code
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	bc 01       	movw	r22, r24
     a3a:	cd 01       	movw	r24, r26
<<<<<<< HEAD
     a3c:	0e 94 c6 26 	call	0x4d8c	; 0x4d8c <__floatunsisf>
=======
     a3c:	0e 94 2a 28 	call	0x5054	; 0x5054 <__floatunsisf>
>>>>>>> Lab6 Code
     a40:	20 e0       	ldi	r18, 0x00	; 0
     a42:	30 e0       	ldi	r19, 0x00	; 0
     a44:	40 ea       	ldi	r20, 0xA0	; 160
     a46:	50 e4       	ldi	r21, 0x40	; 64
<<<<<<< HEAD
     a48:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
=======
     a48:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
>>>>>>> Lab6 Code
     a4c:	9b 01       	movw	r18, r22
     a4e:	ac 01       	movw	r20, r24
     a50:	60 e0       	ldi	r22, 0x00	; 0
     a52:	70 e2       	ldi	r23, 0x20	; 32
     a54:	86 e3       	ldi	r24, 0x36	; 54
     a56:	95 e4       	ldi	r25, 0x45	; 69
<<<<<<< HEAD
     a58:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
=======
     a58:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
>>>>>>> Lab6 Code
     a5c:	20 e0       	ldi	r18, 0x00	; 0
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	40 e8       	ldi	r20, 0x80	; 128
     a62:	5f e3       	ldi	r21, 0x3F	; 63
<<<<<<< HEAD
     a64:	0e 94 c4 25 	call	0x4b88	; 0x4b88 <__subsf3>
=======
     a64:	0e 94 28 27 	call	0x4e50	; 0x4e50 <__subsf3>
>>>>>>> Lab6 Code
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a68:	08 95       	ret

00000a6a <getLeftIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
 	ADC_set_VREF( ADC_VREF_AVCC );
     a6a:	81 e0       	ldi	r24, 0x01	; 1
<<<<<<< HEAD
     a6c:	0e 94 f9 12 	call	0x25f2	; 0x25f2 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
     a70:	84 e0       	ldi	r24, 0x04	; 4
     a72:	0e 94 c2 12 	call	0x2584	; 0x2584 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a76:	0e 94 a5 12 	call	0x254a	; 0x254a <ADC_sample>
=======
     a6c:	0e 94 5d 14 	call	0x28ba	; 0x28ba <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
     a70:	84 e0       	ldi	r24, 0x04	; 4
     a72:	0e 94 26 14 	call	0x284c	; 0x284c <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a76:	0e 94 09 14 	call	0x2812	; 0x2812 <ADC_sample>
>>>>>>> Lab6 Code
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	b0 e0       	ldi	r27, 0x00	; 0
     a7e:	bc 01       	movw	r22, r24
     a80:	cd 01       	movw	r24, r26
<<<<<<< HEAD
     a82:	0e 94 c6 26 	call	0x4d8c	; 0x4d8c <__floatunsisf>
=======
     a82:	0e 94 2a 28 	call	0x5054	; 0x5054 <__floatunsisf>
>>>>>>> Lab6 Code
     a86:	20 e0       	ldi	r18, 0x00	; 0
     a88:	30 e0       	ldi	r19, 0x00	; 0
     a8a:	40 ea       	ldi	r20, 0xA0	; 160
     a8c:	50 e4       	ldi	r21, 0x40	; 64
<<<<<<< HEAD
     a8e:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
=======
     a8e:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
>>>>>>> Lab6 Code
     a92:	9b 01       	movw	r18, r22
     a94:	ac 01       	movw	r20, r24
     a96:	60 e0       	ldi	r22, 0x00	; 0
     a98:	70 e2       	ldi	r23, 0x20	; 32
     a9a:	86 e3       	ldi	r24, 0x36	; 54
     a9c:	95 e4       	ldi	r25, 0x45	; 69
<<<<<<< HEAD
     a9e:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
=======
     a9e:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
>>>>>>> Lab6 Code
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	30 e0       	ldi	r19, 0x00	; 0
     aa6:	40 e8       	ldi	r20, 0x80	; 128
     aa8:	5f e3       	ldi	r21, 0x3F	; 63
<<<<<<< HEAD
     aaa:	0e 94 c4 25 	call	0x4b88	; 0x4b88 <__subsf3>
=======
     aaa:	0e 94 28 27 	call	0x4e50	; 0x4e50 <__subsf3>
>>>>>>> Lab6 Code
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     aae:	08 95       	ret

00000ab0 <getRightLight>:
********************************************************************/
float getRightLight( void )
{
	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ab0:	81 e0       	ldi	r24, 0x01	; 1
<<<<<<< HEAD
     ab2:	0e 94 f9 12 	call	0x25f2	; 0x25f2 <ADC_set_VREF>
	ADC_set_channel( RIGHT_LIGHT_CHAN );
     ab6:	85 e0       	ldi	r24, 0x05	; 5
     ab8:	0e 94 c2 12 	call	0x2584	; 0x2584 <ADC_set_channel>
	adcsample = ADC_sample();
     abc:	0e 94 a5 12 	call	0x254a	; 0x254a <ADC_sample>
=======
     ab2:	0e 94 5d 14 	call	0x28ba	; 0x28ba <ADC_set_VREF>
	ADC_set_channel( RIGHT_LIGHT_CHAN );
     ab6:	85 e0       	ldi	r24, 0x05	; 5
     ab8:	0e 94 26 14 	call	0x284c	; 0x284c <ADC_set_channel>
	adcsample = ADC_sample();
     abc:	0e 94 09 14 	call	0x2812	; 0x2812 <ADC_sample>
>>>>>>> Lab6 Code
     ac0:	a0 e0       	ldi	r26, 0x00	; 0
     ac2:	b0 e0       	ldi	r27, 0x00	; 0
     ac4:	bc 01       	movw	r22, r24
     ac6:	cd 01       	movw	r24, r26
<<<<<<< HEAD
     ac8:	0e 94 c6 26 	call	0x4d8c	; 0x4d8c <__floatunsisf>
=======
     ac8:	0e 94 2a 28 	call	0x5054	; 0x5054 <__floatunsisf>
>>>>>>> Lab6 Code
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	40 ea       	ldi	r20, 0xA0	; 160
     ad2:	5b e3       	ldi	r21, 0x3B	; 59
<<<<<<< HEAD
     ad4:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
=======
     ad4:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
>>>>>>> Lab6 Code
	// LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * ( 5.0 / 1024 );
	// LCD_printf( "right: %f\n",voltage);
	return voltage;
}
     ad8:	08 95       	ret

00000ada <getLeftLight>:
float getLeftLight( void )
{

	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ada:	81 e0       	ldi	r24, 0x01	; 1
<<<<<<< HEAD
     adc:	0e 94 f9 12 	call	0x25f2	; 0x25f2 <ADC_set_VREF>
	ADC_set_channel( LEFT_LIGHT_CHAN );
     ae0:	86 e0       	ldi	r24, 0x06	; 6
     ae2:	0e 94 c2 12 	call	0x2584	; 0x2584 <ADC_set_channel>
	adcsample = ADC_sample();
     ae6:	0e 94 a5 12 	call	0x254a	; 0x254a <ADC_sample>
=======
     adc:	0e 94 5d 14 	call	0x28ba	; 0x28ba <ADC_set_VREF>
	ADC_set_channel( LEFT_LIGHT_CHAN );
     ae0:	86 e0       	ldi	r24, 0x06	; 6
     ae2:	0e 94 26 14 	call	0x284c	; 0x284c <ADC_set_channel>
	adcsample = ADC_sample();
     ae6:	0e 94 09 14 	call	0x2812	; 0x2812 <ADC_sample>
>>>>>>> Lab6 Code
     aea:	a0 e0       	ldi	r26, 0x00	; 0
     aec:	b0 e0       	ldi	r27, 0x00	; 0
     aee:	bc 01       	movw	r22, r24
     af0:	cd 01       	movw	r24, r26
<<<<<<< HEAD
     af2:	0e 94 c6 26 	call	0x4d8c	; 0x4d8c <__floatunsisf>
=======
     af2:	0e 94 2a 28 	call	0x5054	; 0x5054 <__floatunsisf>
>>>>>>> Lab6 Code
     af6:	20 e0       	ldi	r18, 0x00	; 0
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	40 ea       	ldi	r20, 0xA0	; 160
     afc:	5b e3       	ldi	r21, 0x3B	; 59
<<<<<<< HEAD
     afe:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
=======
     afe:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
>>>>>>> Lab6 Code
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * (5.0/ 1024.0 );
	// LCD_printf( "voltage: %f\n",voltage);
	return voltage;
}
     b02:	08 95       	ret

00000b04 <EnterTopoCommand>:
* Input Variables:	none
* Output Return:	int
* Overview:			Use a comment block like this before functions
********************************************************************/
int EnterTopoCommand( void ) 
{
     b04:	0f 93       	push	r16
     b06:	1f 93       	push	r17
    BOOL btnState1, btnState2, btnState3;//local variables - button states
	//int rtnValue=0;//return the button value
	int rtnValue=0;

	if((ATopstat.state=SUBSYS_OPEN))
     b08:	81 e0       	ldi	r24, 0x01	; 1
     b0a:	80 93 ea 02 	sts	0x02EA, r24
	{
       	// Get switch states.
		btnState1 = ATTINY_get_SW_state( ATTINY_SW3 );
     b0e:	80 e0       	ldi	r24, 0x00	; 0
<<<<<<< HEAD
     b10:	0e 94 0b 19 	call	0x3216	; 0x3216 <ATTINY_get_SW_state>
     b14:	08 2f       	mov	r16, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
     b16:	81 e0       	ldi	r24, 0x01	; 1
     b18:	0e 94 0b 19 	call	0x3216	; 0x3216 <ATTINY_get_SW_state>
     b1c:	18 2f       	mov	r17, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
     b1e:	82 e0       	ldi	r24, 0x02	; 2
     b20:	0e 94 0b 19 	call	0x3216	; 0x3216 <ATTINY_get_SW_state>
=======
     b10:	0e 94 6f 1a 	call	0x34de	; 0x34de <ATTINY_get_SW_state>
     b14:	08 2f       	mov	r16, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
     b16:	81 e0       	ldi	r24, 0x01	; 1
     b18:	0e 94 6f 1a 	call	0x34de	; 0x34de <ATTINY_get_SW_state>
     b1c:	18 2f       	mov	r17, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
     b1e:	82 e0       	ldi	r24, 0x02	; 2
     b20:	0e 94 6f 1a 	call	0x34de	; 0x34de <ATTINY_get_SW_state>
>>>>>>> Lab6 Code
		if( btnState1 == TRUE ) 
		{
			rtnValue=1;
			}//end if button 1 state open

		if( btnState2 == TRUE ) 
     b24:	11 30       	cpi	r17, 0x01	; 1
     b26:	19 f4       	brne	.+6      	; 0xb2e <EnterTopoCommand+0x2a>
     b28:	22 e0       	ldi	r18, 0x02	; 2
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	06 c0       	rjmp	.+12     	; 0xb3a <EnterTopoCommand+0x36>
     b2e:	20 e0       	ldi	r18, 0x00	; 0
     b30:	30 e0       	ldi	r19, 0x00	; 0
     b32:	01 30       	cpi	r16, 0x01	; 1
     b34:	11 f4       	brne	.+4      	; 0xb3a <EnterTopoCommand+0x36>
     b36:	21 e0       	ldi	r18, 0x01	; 1
     b38:	30 e0       	ldi	r19, 0x00	; 0
		{
			rtnValue=2;
		}//end if btn 2 open

		if ( btnState3 == TRUE ) 
     b3a:	81 30       	cpi	r24, 0x01	; 1
     b3c:	11 f4       	brne	.+4      	; 0xb42 <EnterTopoCommand+0x3e>
     b3e:	23 e0       	ldi	r18, 0x03	; 3
     b40:	30 e0       	ldi	r19, 0x00	; 0
			rtnValue=3;
		}//end if btn 3 open
		return rtnValue;
	}//end AT while

}//end the WaitButton() function
     b42:	c9 01       	movw	r24, r18
     b44:	1f 91       	pop	r17
     b46:	0f 91       	pop	r16
     b48:	08 95       	ret

00000b4a <WaitButton>:
* Input Variables:	none
* Output Return:	int
* Overview:			Use a comment block like this before functions
********************************************************************/
int WaitButton( void ) 
{
     b4a:	ff 92       	push	r15
     b4c:	0f 93       	push	r16
     b4e:	1f 93       	push	r17
     b50:	cf 93       	push	r28
     b52:	df 93       	push	r29
    BOOL btnState1, btnState2, btnState3;//local variables - button states
	//int rtnValue=0;//return the button value
	int rtnValue=0;

	LCD_clear();
<<<<<<< HEAD
     b54:	0e 94 0d 13 	call	0x261a	; 0x261a <LCD_clear>
=======
     b54:	0e 94 71 14 	call	0x28e2	; 0x28e2 <LCD_clear>
>>>>>>> Lab6 Code

	if((ATopstat.state=SUBSYS_OPEN))
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	80 93 ea 02 	sts	0x02EA, r24
	{
       		// Get switch states.
		btnState1 = ATTINY_get_SW_state( ATTINY_SW3 );
     b5e:	80 e0       	ldi	r24, 0x00	; 0
<<<<<<< HEAD
     b60:	0e 94 0b 19 	call	0x3216	; 0x3216 <ATTINY_get_SW_state>
     b64:	18 2f       	mov	r17, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	0e 94 0b 19 	call	0x3216	; 0x3216 <ATTINY_get_SW_state>
     b6c:	08 2f       	mov	r16, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
     b6e:	82 e0       	ldi	r24, 0x02	; 2
     b70:	0e 94 0b 19 	call	0x3216	; 0x3216 <ATTINY_get_SW_state>
=======
     b60:	0e 94 6f 1a 	call	0x34de	; 0x34de <ATTINY_get_SW_state>
     b64:	18 2f       	mov	r17, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	0e 94 6f 1a 	call	0x34de	; 0x34de <ATTINY_get_SW_state>
     b6c:	08 2f       	mov	r16, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
     b6e:	82 e0       	ldi	r24, 0x02	; 2
     b70:	0e 94 6f 1a 	call	0x34de	; 0x34de <ATTINY_get_SW_state>
>>>>>>> Lab6 Code
     b74:	f8 2e       	mov	r15, r24
		//LCD_printf("btnStates: %d %d %d \n", btnState1, btnState2, btnState3);

		if( btnState1 == TRUE ) 
     b76:	11 30       	cpi	r17, 0x01	; 1
     b78:	19 f0       	breq	.+6      	; 0xb80 <WaitButton+0x36>
     b7a:	c0 e0       	ldi	r28, 0x00	; 0
     b7c:	d0 e0       	ldi	r29, 0x00	; 0
     b7e:	13 c0       	rjmp	.+38     	; 0xba6 <WaitButton+0x5c>
		{
			LCD_printf( "SW1: Pushed\n");
     b80:	80 e0       	ldi	r24, 0x00	; 0
     b82:	91 e0       	ldi	r25, 0x01	; 1
<<<<<<< HEAD
     b84:	0e 94 0f 30 	call	0x601e	; 0x601e <puts>
=======
     b84:	0e 94 73 31 	call	0x62e6	; 0x62e6 <puts>
>>>>>>> Lab6 Code
			// TMRSRVC_delay(500);//wait 1 s

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b00100000 );//turn the red LED on
     b88:	80 e2       	ldi	r24, 0x20	; 32
<<<<<<< HEAD
     b8a:	0e 94 1c 14 	call	0x2838	; 0x2838 <LED_set_pattern>
                	TMRSRVC_delay(500);//wait 2 seconds
     b8e:	84 ef       	ldi	r24, 0xF4	; 244
     b90:	91 e0       	ldi	r25, 0x01	; 1
     b92:	0e 94 a8 19 	call	0x3350	; 0x3350 <TMRSRVC_delay>
               		LED_clr_pattern( 0b01000000 );//turn the green LED off
     b96:	80 e4       	ldi	r24, 0x40	; 64
     b98:	0e 94 07 14 	call	0x280e	; 0x280e <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b9c:	80 e2       	ldi	r24, 0x20	; 32
     b9e:	0e 94 07 14 	call	0x280e	; 0x280e <LED_clr_pattern>
=======
     b8a:	0e 94 80 15 	call	0x2b00	; 0x2b00 <LED_set_pattern>
                	TMRSRVC_delay(500);//wait 2 seconds
     b8e:	84 ef       	ldi	r24, 0xF4	; 244
     b90:	91 e0       	ldi	r25, 0x01	; 1
     b92:	0e 94 0c 1b 	call	0x3618	; 0x3618 <TMRSRVC_delay>
               		LED_clr_pattern( 0b01000000 );//turn the green LED off
     b96:	80 e4       	ldi	r24, 0x40	; 64
     b98:	0e 94 6b 15 	call	0x2ad6	; 0x2ad6 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b9c:	80 e2       	ldi	r24, 0x20	; 32
     b9e:	0e 94 6b 15 	call	0x2ad6	; 0x2ad6 <LED_clr_pattern>
>>>>>>> Lab6 Code
     ba2:	c1 e0       	ldi	r28, 0x01	; 1
     ba4:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=1;
			}//end if button 1 state open

		if( btnState2 == TRUE ) 
     ba6:	01 30       	cpi	r16, 0x01	; 1
     ba8:	99 f4       	brne	.+38     	; 0xbd0 <WaitButton+0x86>
		{
			LCD_printf( "SW2: Pushed\n");
     baa:	8c e0       	ldi	r24, 0x0C	; 12
     bac:	91 e0       	ldi	r25, 0x01	; 1
<<<<<<< HEAD
     bae:	0e 94 0f 30 	call	0x601e	; 0x601e <puts>
=======
     bae:	0e 94 73 31 	call	0x62e6	; 0x62e6 <puts>
>>>>>>> Lab6 Code
			// TMRSRVC_delay(500);//wait 1 s

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     bb2:	80 e4       	ldi	r24, 0x40	; 64
<<<<<<< HEAD
     bb4:	0e 94 1c 14 	call	0x2838	; 0x2838 <LED_set_pattern>
                	TMRSRVC_delay(500);//wait 2 seconds
     bb8:	84 ef       	ldi	r24, 0xF4	; 244
     bba:	91 e0       	ldi	r25, 0x01	; 1
     bbc:	0e 94 a8 19 	call	0x3350	; 0x3350 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     bc0:	80 e4       	ldi	r24, 0x40	; 64
     bc2:	0e 94 07 14 	call	0x280e	; 0x280e <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     bc6:	80 e2       	ldi	r24, 0x20	; 32
     bc8:	0e 94 07 14 	call	0x280e	; 0x280e <LED_clr_pattern>
=======
     bb4:	0e 94 80 15 	call	0x2b00	; 0x2b00 <LED_set_pattern>
                	TMRSRVC_delay(500);//wait 2 seconds
     bb8:	84 ef       	ldi	r24, 0xF4	; 244
     bba:	91 e0       	ldi	r25, 0x01	; 1
     bbc:	0e 94 0c 1b 	call	0x3618	; 0x3618 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     bc0:	80 e4       	ldi	r24, 0x40	; 64
     bc2:	0e 94 6b 15 	call	0x2ad6	; 0x2ad6 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     bc6:	80 e2       	ldi	r24, 0x20	; 32
     bc8:	0e 94 6b 15 	call	0x2ad6	; 0x2ad6 <LED_clr_pattern>
>>>>>>> Lab6 Code
     bcc:	c2 e0       	ldi	r28, 0x02	; 2
     bce:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=2;
		}//end if btn 2 open

		if ( btnState3 == TRUE ) 
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	f8 16       	cp	r15, r24
     bd4:	b1 f4       	brne	.+44     	; 0xc02 <WaitButton+0xb8>
		{
			LCD_printf( "SW3: Pushed\n");
     bd6:	88 e1       	ldi	r24, 0x18	; 24
     bd8:	91 e0       	ldi	r25, 0x01	; 1
<<<<<<< HEAD
     bda:	0e 94 0f 30 	call	0x601e	; 0x601e <puts>
=======
     bda:	0e 94 73 31 	call	0x62e6	; 0x62e6 <puts>
>>>>>>> Lab6 Code
			// TMRSRVC_delay(500);//wait 1 s

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     bde:	80 e4       	ldi	r24, 0x40	; 64
<<<<<<< HEAD
     be0:	0e 94 1c 14 	call	0x2838	; 0x2838 <LED_set_pattern>
                	LED_set_pattern( 0b00100000 );//turn the red LED on
     be4:	80 e2       	ldi	r24, 0x20	; 32
     be6:	0e 94 1c 14 	call	0x2838	; 0x2838 <LED_set_pattern>
                	TMRSRVC_delay(500);//wait 2 seconds
     bea:	84 ef       	ldi	r24, 0xF4	; 244
     bec:	91 e0       	ldi	r25, 0x01	; 1
     bee:	0e 94 a8 19 	call	0x3350	; 0x3350 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     bf2:	80 e4       	ldi	r24, 0x40	; 64
     bf4:	0e 94 07 14 	call	0x280e	; 0x280e <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     bf8:	80 e2       	ldi	r24, 0x20	; 32
     bfa:	0e 94 07 14 	call	0x280e	; 0x280e <LED_clr_pattern>
=======
     be0:	0e 94 80 15 	call	0x2b00	; 0x2b00 <LED_set_pattern>
                	LED_set_pattern( 0b00100000 );//turn the red LED on
     be4:	80 e2       	ldi	r24, 0x20	; 32
     be6:	0e 94 80 15 	call	0x2b00	; 0x2b00 <LED_set_pattern>
                	TMRSRVC_delay(500);//wait 2 seconds
     bea:	84 ef       	ldi	r24, 0xF4	; 244
     bec:	91 e0       	ldi	r25, 0x01	; 1
     bee:	0e 94 0c 1b 	call	0x3618	; 0x3618 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     bf2:	80 e4       	ldi	r24, 0x40	; 64
     bf4:	0e 94 6b 15 	call	0x2ad6	; 0x2ad6 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     bf8:	80 e2       	ldi	r24, 0x20	; 32
     bfa:	0e 94 6b 15 	call	0x2ad6	; 0x2ad6 <LED_clr_pattern>
>>>>>>> Lab6 Code
     bfe:	c3 e0       	ldi	r28, 0x03	; 3
     c00:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=3;
		}//end if btn 3 open
            	LCD_clear();
<<<<<<< HEAD
     c02:	0e 94 0d 13 	call	0x261a	; 0x261a <LCD_clear>
=======
     c02:	0e 94 71 14 	call	0x28e2	; 0x28e2 <LCD_clear>
>>>>>>> Lab6 Code
		return rtnValue;
	}//end AT while

}//end the WaitButton() function
     c06:	ce 01       	movw	r24, r28
     c08:	df 91       	pop	r29
     c0a:	cf 91       	pop	r28
     c0c:	1f 91       	pop	r17
     c0e:	0f 91       	pop	r16
     c10:	ff 90       	pop	r15
     c12:	08 95       	ret

00000c14 <getGateways>:
* Overview:		    
********************************************************************/
void getGateways(void)
{
	unsigned char j = 0;
	unsigned char curRow = currentCellWorld && 0b1100;
     c14:	e0 91 6c 02 	lds	r30, 0x026C
     c18:	e1 11       	cpse	r30, r1
     c1a:	e1 e0       	ldi	r30, 0x01	; 1
     c1c:	6e 2f       	mov	r22, r30
	unsigned char curCol = currentCellWorld && 0b0011;
	unsigned char curCell = 0b0000;
	unsigned char curOrient = currentOrientation;
     c1e:	20 91 6d 02 	lds	r18, 0x026D
     c22:	7e 2f       	mov	r23, r30
     c24:	40 e0       	ldi	r20, 0x00	; 0
     c26:	50 e0       	ldi	r21, 0x00	; 0
	unsigned char curMove = 0;
	
	for (j = 0; j<=MAX_MOVE_SIZE; j++)
	{
		curMove = moveCommands[j];
     c28:	fa 01       	movw	r30, r20
     c2a:	e5 52       	subi	r30, 0x25	; 37
     c2c:	fc 4f       	sbci	r31, 0xFC	; 252
     c2e:	30 81       	ld	r19, Z
		curCell = ROBOT_WORLD[curRow][curCol];
     c30:	e6 2f       	mov	r30, r22
     c32:	f0 e0       	ldi	r31, 0x00	; 0
     c34:	ee 0f       	add	r30, r30
     c36:	ff 1f       	adc	r31, r31
     c38:	ee 0f       	add	r30, r30
     c3a:	ff 1f       	adc	r31, r31
     c3c:	e7 0f       	add	r30, r23
     c3e:	f1 1d       	adc	r31, r1
     c40:	e8 52       	subi	r30, 0x28	; 40
     c42:	fe 4f       	sbci	r31, 0xFE	; 254
     c44:	90 81       	ld	r25, Z
     c46:	82 2f       	mov	r24, r18
     c48:	06 c0       	rjmp	.+12     	; 0xc56 <getGateways+0x42>
{
	char orient = orientation;
	unsigned char cell = worldCell;
	
	while (orient!=0){
		cell = shifted[cell];
     c4a:	e9 2f       	mov	r30, r25
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	e8 53       	subi	r30, 0x38	; 56
     c50:	fe 4f       	sbci	r31, 0xFE	; 254
     c52:	90 81       	ld	r25, Z
		orient--;
     c54:	81 50       	subi	r24, 0x01	; 1
unsigned char rotateCell (unsigned char worldCell, char orientation)
{
	char orient = orientation;
	unsigned char cell = worldCell;
	
	while (orient!=0){
     c56:	88 23       	and	r24, r24
     c58:	c1 f7       	brne	.-16     	; 0xc4a <getGateways+0x36>
	for (j = 0; j<=MAX_MOVE_SIZE; j++)
	{
		curMove = moveCommands[j];
		curCell = ROBOT_WORLD[curRow][curCol];
		curCell = rotateCell(curCell,curOrient);
		moveGateways[j] = curCell;
     c5a:	fa 01       	movw	r30, r20
     c5c:	ea 52       	subi	r30, 0x2A	; 42
     c5e:	fb 4f       	sbci	r31, 0xFB	; 251
     c60:	90 83       	st	Z, r25
				
		if (curMove == MOVE_FORWARD){
     c62:	32 30       	cpi	r19, 0x02	; 2
     c64:	89 f4       	brne	.+34     	; 0xc88 <getGateways+0x74>
			switch(curOrient){
     c66:	21 30       	cpi	r18, 0x01	; 1
     c68:	49 f0       	breq	.+18     	; 0xc7c <getGateways+0x68>
     c6a:	21 30       	cpi	r18, 0x01	; 1
     c6c:	28 f0       	brcs	.+10     	; 0xc78 <getGateways+0x64>
     c6e:	22 30       	cpi	r18, 0x02	; 2
     c70:	39 f0       	breq	.+14     	; 0xc80 <getGateways+0x6c>
     c72:	23 30       	cpi	r18, 0x03	; 3
     c74:	79 f4       	brne	.+30     	; 0xc94 <getGateways+0x80>
     c76:	06 c0       	rjmp	.+12     	; 0xc84 <getGateways+0x70>
				case NORTH:
					curRow -= 1;
     c78:	61 50       	subi	r22, 0x01	; 1
     c7a:	0c c0       	rjmp	.+24     	; 0xc94 <getGateways+0x80>
					break;
				case EAST:
					curCol += 1;
     c7c:	7f 5f       	subi	r23, 0xFF	; 255
     c7e:	0a c0       	rjmp	.+20     	; 0xc94 <getGateways+0x80>
					break;
				case SOUTH:
					curRow += 1;					
     c80:	6f 5f       	subi	r22, 0xFF	; 255
     c82:	08 c0       	rjmp	.+16     	; 0xc94 <getGateways+0x80>
					break;
				case WEST:
					curCol -= 1;					
     c84:	71 50       	subi	r23, 0x01	; 1
     c86:	06 c0       	rjmp	.+12     	; 0xc94 <getGateways+0x80>
				default:
					break;
			}
					
		}
		else if (curMove == MOVE_RIGHT){
     c88:	33 30       	cpi	r19, 0x03	; 3
     c8a:	11 f0       	breq	.+4      	; 0xc90 <getGateways+0x7c>
			curOrient = (curOrient++)&&0b0011;
		}	
		else if (curMove == MOVE_LEFT){
     c8c:	31 30       	cpi	r19, 0x01	; 1
     c8e:	11 f4       	brne	.+4      	; 0xc94 <getGateways+0x80>
			// if(curOrient == 0){
				// curOrient = 0b0011;
			// }
			curOrient = (curOrient--)&&0b0011;
     c90:	21 11       	cpse	r18, r1
     c92:	21 e0       	ldi	r18, 0x01	; 1
     c94:	4f 5f       	subi	r20, 0xFF	; 255
     c96:	5f 4f       	sbci	r21, 0xFF	; 255
	unsigned char curCol = currentCellWorld && 0b0011;
	unsigned char curCell = 0b0000;
	unsigned char curOrient = currentOrientation;
	unsigned char curMove = 0;
	
	for (j = 0; j<=MAX_MOVE_SIZE; j++)
     c98:	4a 30       	cpi	r20, 0x0A	; 10
     c9a:	51 05       	cpc	r21, r1
     c9c:	29 f6       	brne	.-118    	; 0xc28 <getGateways+0x14>
				// curOrient = 0b0011;
			// }
			curOrient = (curOrient--)&&0b0011;
		}			
	}
}
     c9e:	08 95       	ret

00000ca0 <rotateCell>:
* Input Variables:	unsigned char, char
* Output Return:	unsigned char
* Overview:		    Rotates the current cell to match the robot's orientation
********************************************************************/
unsigned char rotateCell (unsigned char worldCell, char orientation)
{
     ca0:	06 c0       	rjmp	.+12     	; 0xcae <rotateCell+0xe>
	char orient = orientation;
	unsigned char cell = worldCell;
	
	while (orient!=0){
		cell = shifted[cell];
     ca2:	e8 2f       	mov	r30, r24
     ca4:	f0 e0       	ldi	r31, 0x00	; 0
     ca6:	e8 53       	subi	r30, 0x38	; 56
     ca8:	fe 4f       	sbci	r31, 0xFE	; 254
     caa:	80 81       	ld	r24, Z
		orient--;
     cac:	61 50       	subi	r22, 0x01	; 1
unsigned char rotateCell (unsigned char worldCell, char orientation)
{
	char orient = orientation;
	unsigned char cell = worldCell;
	
	while (orient!=0){
     cae:	66 23       	and	r22, r22
     cb0:	c1 f7       	brne	.-16     	; 0xca2 <rotateCell+0x2>
		cell = shifted[cell];
		orient--;
	}
	return cell;
}
     cb2:	08 95       	ret

00000cb4 <checkWorld>:
* Input Variables:	void
* Output Return:	void
* Overview:		    Checks the cell of the robot using IR sensors
********************************************************************/
void checkWorld( void )
{	
     cb4:	ef 92       	push	r14
     cb6:	ff 92       	push	r15
     cb8:	0f 93       	push	r16
     cba:	1f 93       	push	r17
	// Acquire current gateway description
	char currentGateway = 0;
	currentGateway += (ftIR<FT_GATEWAY)<<3;
     cbc:	60 91 58 02 	lds	r22, 0x0258
     cc0:	70 91 59 02 	lds	r23, 0x0259
     cc4:	80 91 5a 02 	lds	r24, 0x025A
     cc8:	90 91 5b 02 	lds	r25, 0x025B
     ccc:	20 e0       	ldi	r18, 0x00	; 0
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	40 e2       	ldi	r20, 0x20	; 32
     cd2:	51 e4       	ldi	r21, 0x41	; 65
     cd4:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
     cd8:	18 2f       	mov	r17, r24
     cda:	11 1f       	adc	r17, r17
     cdc:	11 27       	eor	r17, r17
     cde:	11 1f       	adc	r17, r17
     ce0:	11 0f       	add	r17, r17
     ce2:	11 0f       	add	r17, r17
     ce4:	11 0f       	add	r17, r17
	currentGateway += (rtIR<RT_GATEWAY)<<2;
     ce6:	60 91 54 02 	lds	r22, 0x0254
     cea:	70 91 55 02 	lds	r23, 0x0255
     cee:	80 91 56 02 	lds	r24, 0x0256
     cf2:	90 91 57 02 	lds	r25, 0x0257
     cf6:	20 e0       	ldi	r18, 0x00	; 0
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	40 e2       	ldi	r20, 0x20	; 32
     cfc:	51 e4       	ldi	r21, 0x41	; 65
     cfe:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
     d02:	f8 2e       	mov	r15, r24
     d04:	ff 1c       	adc	r15, r15
     d06:	ff 24       	eor	r15, r15
     d08:	ff 1c       	adc	r15, r15
     d0a:	ff 0c       	add	r15, r15
     d0c:	ff 0c       	add	r15, r15
	currentGateway += (ltIR<LT_GATEWAY)<<1;
     d0e:	60 91 50 02 	lds	r22, 0x0250
     d12:	70 91 51 02 	lds	r23, 0x0251
     d16:	80 91 52 02 	lds	r24, 0x0252
     d1a:	90 91 53 02 	lds	r25, 0x0253
     d1e:	20 e0       	ldi	r18, 0x00	; 0
     d20:	30 e0       	ldi	r19, 0x00	; 0
     d22:	40 e2       	ldi	r20, 0x20	; 32
     d24:	51 e4       	ldi	r21, 0x41	; 65
     d26:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
     d2a:	08 2f       	mov	r16, r24
     d2c:	00 1f       	adc	r16, r16
     d2e:	00 27       	eor	r16, r16
     d30:	00 1f       	adc	r16, r16
     d32:	00 0f       	add	r16, r16
void checkWorld( void )
{	
	// Acquire current gateway description
	char currentGateway = 0;
	currentGateway += (ftIR<FT_GATEWAY)<<3;
	currentGateway += (rtIR<RT_GATEWAY)<<2;
     d34:	ee 24       	eor	r14, r14
     d36:	60 91 5c 02 	lds	r22, 0x025C
     d3a:	70 91 5d 02 	lds	r23, 0x025D
     d3e:	80 91 5e 02 	lds	r24, 0x025E
     d42:	90 91 5f 02 	lds	r25, 0x025F
     d46:	20 e0       	ldi	r18, 0x00	; 0
     d48:	30 e0       	ldi	r19, 0x00	; 0
     d4a:	40 e2       	ldi	r20, 0x20	; 32
     d4c:	51 e4       	ldi	r21, 0x41	; 65
     d4e:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
     d52:	88 23       	and	r24, r24
     d54:	14 f4       	brge	.+4      	; 0xd5a <checkWorld+0xa6>
     d56:	ee 24       	eor	r14, r14
     d58:	e3 94       	inc	r14
     d5a:	1e 0d       	add	r17, r14
	currentGateway += (ltIR<LT_GATEWAY)<<1;
     d5c:	1f 0d       	add	r17, r15
	currentGateway += (bkIR<BK_GATEWAY)<<0;
	
	// Check to see if the robot has entered the next cell of the robot world
	if(currentGateway == moveGateways[currentMoveWorld+1]){
     d5e:	90 91 6b 02 	lds	r25, 0x026B
     d62:	10 0f       	add	r17, r16
     d64:	e9 2f       	mov	r30, r25
     d66:	f0 e0       	ldi	r31, 0x00	; 0
     d68:	ea 52       	subi	r30, 0x2A	; 42
     d6a:	fb 4f       	sbci	r31, 0xFB	; 251
     d6c:	81 81       	ldd	r24, Z+1	; 0x01
     d6e:	18 17       	cp	r17, r24
     d70:	19 f4       	brne	.+6      	; 0xd78 <checkWorld+0xc4>
		currentMoveWorld += 1;
     d72:	9f 5f       	subi	r25, 0xFF	; 255
     d74:	90 93 6b 02 	sts	0x026B, r25
	}
}
     d78:	1f 91       	pop	r17
     d7a:	0f 91       	pop	r16
     d7c:	ff 90       	pop	r15
     d7e:	ef 90       	pop	r14
     d80:	08 95       	ret

00000d82 <prefilter>:
* Overview:			This appies a prefilter to the IR data by
*					storing the history of measurements within the
*					an arrayand calculating a running average
********************************************************************/
void prefilter(char reset)
{	
     d82:	2f 92       	push	r2
     d84:	3f 92       	push	r3
     d86:	4f 92       	push	r4
     d88:	5f 92       	push	r5
     d8a:	6f 92       	push	r6
     d8c:	7f 92       	push	r7
     d8e:	8f 92       	push	r8
     d90:	9f 92       	push	r9
     d92:	af 92       	push	r10
     d94:	bf 92       	push	r11
     d96:	cf 92       	push	r12
     d98:	df 92       	push	r13
     d9a:	ef 92       	push	r14
     d9c:	ff 92       	push	r15
     d9e:	0f 93       	push	r16
     da0:	1f 93       	push	r17
     da2:	df 93       	push	r29
     da4:	cf 93       	push	r28
     da6:	cd b7       	in	r28, 0x3d	; 61
     da8:	de b7       	in	r29, 0x3e	; 62
     daa:	64 97       	sbiw	r28, 0x14	; 20
     dac:	0f b6       	in	r0, 0x3f	; 63
     dae:	f8 94       	cli
     db0:	de bf       	out	0x3e, r29	; 62
     db2:	0f be       	out	0x3f, r0	; 63
     db4:	cd bf       	out	0x3d, r28	; 61
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
     db6:	88 23       	and	r24, r24
     db8:	39 f5       	brne	.+78     	; 0xe08 <prefilter+0x86>
     dba:	8b e5       	ldi	r24, 0x5B	; 91
     dbc:	93 e0       	ldi	r25, 0x03	; 3
     dbe:	9c 8b       	std	Y+20, r25	; 0x14
     dc0:	8b 8b       	std	Y+19, r24	; 0x13
     dc2:	ae ec       	ldi	r26, 0xCE	; 206
     dc4:	b4 e0       	ldi	r27, 0x04	; 4
     dc6:	be 83       	std	Y+6, r27	; 0x06
     dc8:	ad 83       	std	Y+5, r26	; 0x05
     dca:	e4 e5       	ldi	r30, 0x54	; 84
     dcc:	f4 e0       	ldi	r31, 0x04	; 4
     dce:	fc 83       	std	Y+4, r31	; 0x04
     dd0:	eb 83       	std	Y+3, r30	; 0x03
     dd2:	83 ed       	ldi	r24, 0xD3	; 211
     dd4:	93 e0       	ldi	r25, 0x03	; 3
     dd6:	9a 83       	std	Y+2, r25	; 0x02
     dd8:	89 83       	std	Y+1, r24	; 0x01
     dda:	0f 2e       	mov	r0, r31
     ddc:	f0 e0       	ldi	r31, 0x00	; 0
     dde:	2f 2e       	mov	r2, r31
     de0:	f0 e0       	ldi	r31, 0x00	; 0
     de2:	3f 2e       	mov	r3, r31
     de4:	f0 e0       	ldi	r31, 0x00	; 0
     de6:	4f 2e       	mov	r4, r31
     de8:	f0 e0       	ldi	r31, 0x00	; 0
     dea:	5f 2e       	mov	r5, r31
     dec:	f0 2d       	mov	r31, r0
     dee:	2f 86       	std	Y+15, r2	; 0x0f
     df0:	38 8a       	std	Y+16, r3	; 0x10
     df2:	49 8a       	std	Y+17, r4	; 0x11
     df4:	5a 8a       	std	Y+18, r5	; 0x12
     df6:	2b 86       	std	Y+11, r2	; 0x0b
     df8:	3c 86       	std	Y+12, r3	; 0x0c
     dfa:	4d 86       	std	Y+13, r4	; 0x0d
     dfc:	5e 86       	std	Y+14, r5	; 0x0e
     dfe:	2f 82       	std	Y+7, r2	; 0x07
     e00:	38 86       	std	Y+8, r3	; 0x08
     e02:	49 86       	std	Y+9, r4	; 0x09
     e04:	5a 86       	std	Y+10, r5	; 0x0a
     e06:	43 c0       	rjmp	.+134    	; 0xe8e <prefilter+0x10c>
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     e08:	a0 90 50 02 	lds	r10, 0x0250
     e0c:	b0 90 51 02 	lds	r11, 0x0251
     e10:	c0 90 52 02 	lds	r12, 0x0252
     e14:	d0 90 53 02 	lds	r13, 0x0253
			rtIR_old[i] = rtIR;
     e18:	e0 90 54 02 	lds	r14, 0x0254
     e1c:	f0 90 55 02 	lds	r15, 0x0255
     e20:	00 91 56 02 	lds	r16, 0x0256
     e24:	10 91 57 02 	lds	r17, 0x0257
			ftIR_old[i] = ftIR;
     e28:	20 90 58 02 	lds	r2, 0x0258
     e2c:	30 90 59 02 	lds	r3, 0x0259
     e30:	40 90 5a 02 	lds	r4, 0x025A
     e34:	50 90 5b 02 	lds	r5, 0x025B
			bkIR_old[i] = bkIR;
     e38:	20 91 5c 02 	lds	r18, 0x025C
     e3c:	30 91 5d 02 	lds	r19, 0x025D
     e40:	40 91 5e 02 	lds	r20, 0x025E
     e44:	50 91 5f 02 	lds	r21, 0x025F
     e48:	80 e0       	ldi	r24, 0x00	; 0
     e4a:	90 e0       	ldi	r25, 0x00	; 0
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     e4c:	fc 01       	movw	r30, r24
     e4e:	e5 51       	subi	r30, 0x15	; 21
     e50:	fd 4f       	sbci	r31, 0xFD	; 253
     e52:	a0 82       	st	Z, r10
     e54:	b1 82       	std	Z+1, r11	; 0x01
     e56:	c2 82       	std	Z+2, r12	; 0x02
     e58:	d3 82       	std	Z+3, r13	; 0x03
			rtIR_old[i] = rtIR;
     e5a:	fc 01       	movw	r30, r24
     e5c:	e2 5a       	subi	r30, 0xA2	; 162
     e5e:	fb 4f       	sbci	r31, 0xFB	; 251
     e60:	e0 82       	st	Z, r14
     e62:	f1 82       	std	Z+1, r15	; 0x01
     e64:	02 83       	std	Z+2, r16	; 0x02
     e66:	13 83       	std	Z+3, r17	; 0x03
			ftIR_old[i] = ftIR;
     e68:	fc 01       	movw	r30, r24
     e6a:	ec 51       	subi	r30, 0x1C	; 28
     e6c:	fc 4f       	sbci	r31, 0xFC	; 252
     e6e:	20 82       	st	Z, r2
     e70:	31 82       	std	Z+1, r3	; 0x01
     e72:	42 82       	std	Z+2, r4	; 0x02
     e74:	53 82       	std	Z+3, r5	; 0x03
			bkIR_old[i] = bkIR;
     e76:	fc 01       	movw	r30, r24
     e78:	ed 59       	subi	r30, 0x9D	; 157
     e7a:	fc 4f       	sbci	r31, 0xFC	; 252
     e7c:	20 83       	st	Z, r18
     e7e:	31 83       	std	Z+1, r19	; 0x01
     e80:	42 83       	std	Z+2, r20	; 0x02
     e82:	53 83       	std	Z+3, r21	; 0x03
     e84:	04 96       	adiw	r24, 0x04	; 4
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
     e86:	88 37       	cpi	r24, 0x78	; 120
     e88:	91 05       	cpc	r25, r1
     e8a:	01 f7       	brne	.-64     	; 0xe4c <prefilter+0xca>
     e8c:	96 cf       	rjmp	.-212    	; 0xdba <prefilter+0x38>
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
	{
		j = i - 1;
		ltIR_old[i] = ltIR_old[j];
     e8e:	ab 89       	ldd	r26, Y+19	; 0x13
     e90:	bc 89       	ldd	r27, Y+20	; 0x14
     e92:	2d 91       	ld	r18, X+
     e94:	3d 91       	ld	r19, X+
     e96:	4d 91       	ld	r20, X+
     e98:	5c 91       	ld	r21, X
     e9a:	13 97       	sbiw	r26, 0x03	; 3
     e9c:	fd 01       	movw	r30, r26
     e9e:	24 83       	std	Z+4, r18	; 0x04
     ea0:	35 83       	std	Z+5, r19	; 0x05
     ea2:	46 83       	std	Z+6, r20	; 0x06
     ea4:	57 83       	std	Z+7, r21	; 0x07
		rtIR_old[i] = rtIR_old[j];
     ea6:	ad 81       	ldd	r26, Y+5	; 0x05
     ea8:	be 81       	ldd	r27, Y+6	; 0x06
     eaa:	ed 90       	ld	r14, X+
     eac:	fd 90       	ld	r15, X+
     eae:	0d 91       	ld	r16, X+
     eb0:	1c 91       	ld	r17, X
     eb2:	13 97       	sbiw	r26, 0x03	; 3
     eb4:	fd 01       	movw	r30, r26
     eb6:	e4 82       	std	Z+4, r14	; 0x04
     eb8:	f5 82       	std	Z+5, r15	; 0x05
     eba:	06 83       	std	Z+6, r16	; 0x06
     ebc:	17 83       	std	Z+7, r17	; 0x07
		ftIR_old[i] = ftIR_old[j];
     ebe:	ab 81       	ldd	r26, Y+3	; 0x03
     ec0:	bc 81       	ldd	r27, Y+4	; 0x04
     ec2:	ad 90       	ld	r10, X+
     ec4:	bd 90       	ld	r11, X+
     ec6:	cd 90       	ld	r12, X+
     ec8:	dc 90       	ld	r13, X
     eca:	13 97       	sbiw	r26, 0x03	; 3
     ecc:	fd 01       	movw	r30, r26
     ece:	a4 82       	std	Z+4, r10	; 0x04
     ed0:	b5 82       	std	Z+5, r11	; 0x05
     ed2:	c6 82       	std	Z+6, r12	; 0x06
     ed4:	d7 82       	std	Z+7, r13	; 0x07
		bkIR_old[i] = bkIR_old[j];
     ed6:	a9 81       	ldd	r26, Y+1	; 0x01
     ed8:	ba 81       	ldd	r27, Y+2	; 0x02
     eda:	6d 90       	ld	r6, X+
     edc:	7d 90       	ld	r7, X+
     ede:	8d 90       	ld	r8, X+
     ee0:	9c 90       	ld	r9, X
     ee2:	13 97       	sbiw	r26, 0x03	; 3
     ee4:	fd 01       	movw	r30, r26
     ee6:	64 82       	std	Z+4, r6	; 0x04
     ee8:	75 82       	std	Z+5, r7	; 0x05
     eea:	86 82       	std	Z+6, r8	; 0x06
     eec:	97 82       	std	Z+7, r9	; 0x07
		ltIR_new += ltIR_old[i];
<<<<<<< HEAD
     d80:	c2 01       	movw	r24, r4
     d82:	b1 01       	movw	r22, r2
     d84:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
     d88:	1b 01       	movw	r2, r22
     d8a:	2c 01       	movw	r4, r24
		rtIR_new += rtIR_old[i];
     d8c:	6f 85       	ldd	r22, Y+15	; 0x0f
     d8e:	78 89       	ldd	r23, Y+16	; 0x10
     d90:	89 89       	ldd	r24, Y+17	; 0x11
     d92:	9a 89       	ldd	r25, Y+18	; 0x12
     d94:	a8 01       	movw	r20, r16
     d96:	97 01       	movw	r18, r14
     d98:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
     d9c:	6f 87       	std	Y+15, r22	; 0x0f
     d9e:	78 8b       	std	Y+16, r23	; 0x10
     da0:	89 8b       	std	Y+17, r24	; 0x11
     da2:	9a 8b       	std	Y+18, r25	; 0x12
		ftIR_new += ftIR_old[i];
     da4:	6b 85       	ldd	r22, Y+11	; 0x0b
     da6:	7c 85       	ldd	r23, Y+12	; 0x0c
     da8:	8d 85       	ldd	r24, Y+13	; 0x0d
     daa:	9e 85       	ldd	r25, Y+14	; 0x0e
     dac:	a6 01       	movw	r20, r12
     dae:	95 01       	movw	r18, r10
     db0:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
     db4:	6b 87       	std	Y+11, r22	; 0x0b
     db6:	7c 87       	std	Y+12, r23	; 0x0c
     db8:	8d 87       	std	Y+13, r24	; 0x0d
     dba:	9e 87       	std	Y+14, r25	; 0x0e
		bkIR_new += bkIR_old[i];
     dbc:	6f 81       	ldd	r22, Y+7	; 0x07
     dbe:	78 85       	ldd	r23, Y+8	; 0x08
     dc0:	89 85       	ldd	r24, Y+9	; 0x09
     dc2:	9a 85       	ldd	r25, Y+10	; 0x0a
     dc4:	a4 01       	movw	r20, r8
     dc6:	93 01       	movw	r18, r6
     dc8:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
     dcc:	6f 83       	std	Y+7, r22	; 0x07
     dce:	78 87       	std	Y+8, r23	; 0x08
     dd0:	89 87       	std	Y+9, r24	; 0x09
     dd2:	9a 87       	std	Y+10, r25	; 0x0a
     dd4:	8b 89       	ldd	r24, Y+19	; 0x13
     dd6:	9c 89       	ldd	r25, Y+20	; 0x14
     dd8:	04 97       	sbiw	r24, 0x04	; 4
     dda:	9c 8b       	std	Y+20, r25	; 0x14
     ddc:	8b 8b       	std	Y+19, r24	; 0x13
     dde:	ad 81       	ldd	r26, Y+5	; 0x05
     de0:	be 81       	ldd	r27, Y+6	; 0x06
     de2:	14 97       	sbiw	r26, 0x04	; 4
     de4:	be 83       	std	Y+6, r27	; 0x06
     de6:	ad 83       	std	Y+5, r26	; 0x05
     de8:	eb 81       	ldd	r30, Y+3	; 0x03
     dea:	fc 81       	ldd	r31, Y+4	; 0x04
     dec:	34 97       	sbiw	r30, 0x04	; 4
     dee:	fc 83       	std	Y+4, r31	; 0x04
     df0:	eb 83       	std	Y+3, r30	; 0x03
     df2:	89 81       	ldd	r24, Y+1	; 0x01
     df4:	9a 81       	ldd	r25, Y+2	; 0x02
     df6:	04 97       	sbiw	r24, 0x04	; 4
     df8:	9a 83       	std	Y+2, r25	; 0x02
     dfa:	89 83       	std	Y+1, r24	; 0x01
=======
     eee:	c2 01       	movw	r24, r4
     ef0:	b1 01       	movw	r22, r2
     ef2:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
     ef6:	1b 01       	movw	r2, r22
     ef8:	2c 01       	movw	r4, r24
		rtIR_new += rtIR_old[i];
     efa:	6f 85       	ldd	r22, Y+15	; 0x0f
     efc:	78 89       	ldd	r23, Y+16	; 0x10
     efe:	89 89       	ldd	r24, Y+17	; 0x11
     f00:	9a 89       	ldd	r25, Y+18	; 0x12
     f02:	a8 01       	movw	r20, r16
     f04:	97 01       	movw	r18, r14
     f06:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
     f0a:	6f 87       	std	Y+15, r22	; 0x0f
     f0c:	78 8b       	std	Y+16, r23	; 0x10
     f0e:	89 8b       	std	Y+17, r24	; 0x11
     f10:	9a 8b       	std	Y+18, r25	; 0x12
		ftIR_new += ftIR_old[i];
     f12:	6b 85       	ldd	r22, Y+11	; 0x0b
     f14:	7c 85       	ldd	r23, Y+12	; 0x0c
     f16:	8d 85       	ldd	r24, Y+13	; 0x0d
     f18:	9e 85       	ldd	r25, Y+14	; 0x0e
     f1a:	a6 01       	movw	r20, r12
     f1c:	95 01       	movw	r18, r10
     f1e:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
     f22:	6b 87       	std	Y+11, r22	; 0x0b
     f24:	7c 87       	std	Y+12, r23	; 0x0c
     f26:	8d 87       	std	Y+13, r24	; 0x0d
     f28:	9e 87       	std	Y+14, r25	; 0x0e
		bkIR_new += bkIR_old[i];
     f2a:	6f 81       	ldd	r22, Y+7	; 0x07
     f2c:	78 85       	ldd	r23, Y+8	; 0x08
     f2e:	89 85       	ldd	r24, Y+9	; 0x09
     f30:	9a 85       	ldd	r25, Y+10	; 0x0a
     f32:	a4 01       	movw	r20, r8
     f34:	93 01       	movw	r18, r6
     f36:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
     f3a:	6f 83       	std	Y+7, r22	; 0x07
     f3c:	78 87       	std	Y+8, r23	; 0x08
     f3e:	89 87       	std	Y+9, r24	; 0x09
     f40:	9a 87       	std	Y+10, r25	; 0x0a
     f42:	8b 89       	ldd	r24, Y+19	; 0x13
     f44:	9c 89       	ldd	r25, Y+20	; 0x14
     f46:	04 97       	sbiw	r24, 0x04	; 4
     f48:	9c 8b       	std	Y+20, r25	; 0x14
     f4a:	8b 8b       	std	Y+19, r24	; 0x13
     f4c:	ad 81       	ldd	r26, Y+5	; 0x05
     f4e:	be 81       	ldd	r27, Y+6	; 0x06
     f50:	14 97       	sbiw	r26, 0x04	; 4
     f52:	be 83       	std	Y+6, r27	; 0x06
     f54:	ad 83       	std	Y+5, r26	; 0x05
     f56:	eb 81       	ldd	r30, Y+3	; 0x03
     f58:	fc 81       	ldd	r31, Y+4	; 0x04
     f5a:	34 97       	sbiw	r30, 0x04	; 4
     f5c:	fc 83       	std	Y+4, r31	; 0x04
     f5e:	eb 83       	std	Y+3, r30	; 0x03
     f60:	89 81       	ldd	r24, Y+1	; 0x01
     f62:	9a 81       	ldd	r25, Y+2	; 0x02
     f64:	04 97       	sbiw	r24, 0x04	; 4
     f66:	9a 83       	std	Y+2, r25	; 0x02
     f68:	89 83       	std	Y+1, r24	; 0x01
>>>>>>> Lab6 Code
	float ftIR_new = 0;
	float bkIR_new = 0;
	
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
     f6a:	ab 89       	ldd	r26, Y+19	; 0x13
     f6c:	bc 89       	ldd	r27, Y+20	; 0x14
     f6e:	a3 5e       	subi	r26, 0xE3	; 227
     f70:	b2 40       	sbci	r27, 0x02	; 2
     f72:	09 f0       	breq	.+2      	; 0xf76 <prefilter+0x1f4>
     f74:	8c cf       	rjmp	.-232    	; 0xe8e <prefilter+0x10c>
		bkIR_new += bkIR_old[i];
	}
	
	// Set the current reading to the first element 
	// within the historical array
	ltIR_old[0] = ltIR;
     f76:	80 91 50 02 	lds	r24, 0x0250
     f7a:	90 91 51 02 	lds	r25, 0x0251
     f7e:	a0 91 52 02 	lds	r26, 0x0252
     f82:	b0 91 53 02 	lds	r27, 0x0253
     f86:	eb 89       	ldd	r30, Y+19	; 0x13
     f88:	fc 89       	ldd	r31, Y+20	; 0x14
     f8a:	80 87       	std	Z+8, r24	; 0x08
     f8c:	91 87       	std	Z+9, r25	; 0x09
     f8e:	a2 87       	std	Z+10, r26	; 0x0a
     f90:	b3 87       	std	Z+11, r27	; 0x0b
	rtIR_old[0] = rtIR;
     f92:	80 91 54 02 	lds	r24, 0x0254
     f96:	90 91 55 02 	lds	r25, 0x0255
     f9a:	a0 91 56 02 	lds	r26, 0x0256
     f9e:	b0 91 57 02 	lds	r27, 0x0257
     fa2:	80 93 5e 04 	sts	0x045E, r24
     fa6:	90 93 5f 04 	sts	0x045F, r25
     faa:	a0 93 60 04 	sts	0x0460, r26
     fae:	b0 93 61 04 	sts	0x0461, r27
	ftIR_old[0] = ftIR;
     fb2:	80 91 58 02 	lds	r24, 0x0258
     fb6:	90 91 59 02 	lds	r25, 0x0259
     fba:	a0 91 5a 02 	lds	r26, 0x025A
     fbe:	b0 91 5b 02 	lds	r27, 0x025B
     fc2:	80 93 e4 03 	sts	0x03E4, r24
     fc6:	90 93 e5 03 	sts	0x03E5, r25
     fca:	a0 93 e6 03 	sts	0x03E6, r26
     fce:	b0 93 e7 03 	sts	0x03E7, r27
	bkIR_old[0] = bkIR;
     fd2:	80 91 5c 02 	lds	r24, 0x025C
     fd6:	90 91 5d 02 	lds	r25, 0x025D
     fda:	a0 91 5e 02 	lds	r26, 0x025E
     fde:	b0 91 5f 02 	lds	r27, 0x025F
     fe2:	80 93 63 03 	sts	0x0363, r24
     fe6:	90 93 64 03 	sts	0x0364, r25
     fea:	a0 93 65 03 	sts	0x0365, r26
     fee:	b0 93 66 03 	sts	0x0366, r27
	
	// Calculate the average value within the array
	// and said that as the new current measurement
	ltIR = ltIR_new/PREFILTER_SIZE;
<<<<<<< HEAD
     e84:	c2 01       	movw	r24, r4
     e86:	b1 01       	movw	r22, r2
     e88:	20 e0       	ldi	r18, 0x00	; 0
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	40 ef       	ldi	r20, 0xF0	; 240
     e8e:	51 e4       	ldi	r21, 0x41	; 65
     e90:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
     e94:	60 93 20 02 	sts	0x0220, r22
     e98:	70 93 21 02 	sts	0x0221, r23
     e9c:	80 93 22 02 	sts	0x0222, r24
     ea0:	90 93 23 02 	sts	0x0223, r25
	rtIR = rtIR_new/PREFILTER_SIZE;
     ea4:	6f 85       	ldd	r22, Y+15	; 0x0f
     ea6:	78 89       	ldd	r23, Y+16	; 0x10
     ea8:	89 89       	ldd	r24, Y+17	; 0x11
     eaa:	9a 89       	ldd	r25, Y+18	; 0x12
     eac:	20 e0       	ldi	r18, 0x00	; 0
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	40 ef       	ldi	r20, 0xF0	; 240
     eb2:	51 e4       	ldi	r21, 0x41	; 65
     eb4:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
     eb8:	60 93 24 02 	sts	0x0224, r22
     ebc:	70 93 25 02 	sts	0x0225, r23
     ec0:	80 93 26 02 	sts	0x0226, r24
     ec4:	90 93 27 02 	sts	0x0227, r25
	ftIR = ftIR_new/PREFILTER_SIZE;
     ec8:	6b 85       	ldd	r22, Y+11	; 0x0b
     eca:	7c 85       	ldd	r23, Y+12	; 0x0c
     ecc:	8d 85       	ldd	r24, Y+13	; 0x0d
     ece:	9e 85       	ldd	r25, Y+14	; 0x0e
     ed0:	20 e0       	ldi	r18, 0x00	; 0
     ed2:	30 e0       	ldi	r19, 0x00	; 0
     ed4:	40 ef       	ldi	r20, 0xF0	; 240
     ed6:	51 e4       	ldi	r21, 0x41	; 65
     ed8:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
     edc:	60 93 28 02 	sts	0x0228, r22
     ee0:	70 93 29 02 	sts	0x0229, r23
     ee4:	80 93 2a 02 	sts	0x022A, r24
     ee8:	90 93 2b 02 	sts	0x022B, r25
	bkIR = bkIR_new/PREFILTER_SIZE;
     eec:	6f 81       	ldd	r22, Y+7	; 0x07
     eee:	78 85       	ldd	r23, Y+8	; 0x08
     ef0:	89 85       	ldd	r24, Y+9	; 0x09
     ef2:	9a 85       	ldd	r25, Y+10	; 0x0a
     ef4:	20 e0       	ldi	r18, 0x00	; 0
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	40 ef       	ldi	r20, 0xF0	; 240
     efa:	51 e4       	ldi	r21, 0x41	; 65
     efc:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
     f00:	60 93 2c 02 	sts	0x022C, r22
     f04:	70 93 2d 02 	sts	0x022D, r23
     f08:	80 93 2e 02 	sts	0x022E, r24
     f0c:	90 93 2f 02 	sts	0x022F, r25
=======
     ff2:	c2 01       	movw	r24, r4
     ff4:	b1 01       	movw	r22, r2
     ff6:	20 e0       	ldi	r18, 0x00	; 0
     ff8:	30 e0       	ldi	r19, 0x00	; 0
     ffa:	40 ef       	ldi	r20, 0xF0	; 240
     ffc:	51 e4       	ldi	r21, 0x41	; 65
     ffe:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1002:	60 93 50 02 	sts	0x0250, r22
    1006:	70 93 51 02 	sts	0x0251, r23
    100a:	80 93 52 02 	sts	0x0252, r24
    100e:	90 93 53 02 	sts	0x0253, r25
	rtIR = rtIR_new/PREFILTER_SIZE;
    1012:	6f 85       	ldd	r22, Y+15	; 0x0f
    1014:	78 89       	ldd	r23, Y+16	; 0x10
    1016:	89 89       	ldd	r24, Y+17	; 0x11
    1018:	9a 89       	ldd	r25, Y+18	; 0x12
    101a:	20 e0       	ldi	r18, 0x00	; 0
    101c:	30 e0       	ldi	r19, 0x00	; 0
    101e:	40 ef       	ldi	r20, 0xF0	; 240
    1020:	51 e4       	ldi	r21, 0x41	; 65
    1022:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1026:	60 93 54 02 	sts	0x0254, r22
    102a:	70 93 55 02 	sts	0x0255, r23
    102e:	80 93 56 02 	sts	0x0256, r24
    1032:	90 93 57 02 	sts	0x0257, r25
	ftIR = ftIR_new/PREFILTER_SIZE;
    1036:	6b 85       	ldd	r22, Y+11	; 0x0b
    1038:	7c 85       	ldd	r23, Y+12	; 0x0c
    103a:	8d 85       	ldd	r24, Y+13	; 0x0d
    103c:	9e 85       	ldd	r25, Y+14	; 0x0e
    103e:	20 e0       	ldi	r18, 0x00	; 0
    1040:	30 e0       	ldi	r19, 0x00	; 0
    1042:	40 ef       	ldi	r20, 0xF0	; 240
    1044:	51 e4       	ldi	r21, 0x41	; 65
    1046:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    104a:	60 93 58 02 	sts	0x0258, r22
    104e:	70 93 59 02 	sts	0x0259, r23
    1052:	80 93 5a 02 	sts	0x025A, r24
    1056:	90 93 5b 02 	sts	0x025B, r25
	bkIR = bkIR_new/PREFILTER_SIZE;
    105a:	6f 81       	ldd	r22, Y+7	; 0x07
    105c:	78 85       	ldd	r23, Y+8	; 0x08
    105e:	89 85       	ldd	r24, Y+9	; 0x09
    1060:	9a 85       	ldd	r25, Y+10	; 0x0a
    1062:	20 e0       	ldi	r18, 0x00	; 0
    1064:	30 e0       	ldi	r19, 0x00	; 0
    1066:	40 ef       	ldi	r20, 0xF0	; 240
    1068:	51 e4       	ldi	r21, 0x41	; 65
    106a:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    106e:	60 93 5c 02 	sts	0x025C, r22
    1072:	70 93 5d 02 	sts	0x025D, r23
    1076:	80 93 5e 02 	sts	0x025E, r24
    107a:	90 93 5f 02 	sts	0x025F, r25
>>>>>>> Lab6 Code
}
    107e:	64 96       	adiw	r28, 0x14	; 20
    1080:	0f b6       	in	r0, 0x3f	; 63
    1082:	f8 94       	cli
    1084:	de bf       	out	0x3e, r29	; 62
    1086:	0f be       	out	0x3f, r0	; 63
    1088:	cd bf       	out	0x3d, r28	; 61
    108a:	cf 91       	pop	r28
    108c:	df 91       	pop	r29
    108e:	1f 91       	pop	r17
    1090:	0f 91       	pop	r16
    1092:	ff 90       	pop	r15
    1094:	ef 90       	pop	r14
    1096:	df 90       	pop	r13
    1098:	cf 90       	pop	r12
    109a:	bf 90       	pop	r11
    109c:	af 90       	pop	r10
    109e:	9f 90       	pop	r9
    10a0:	8f 90       	pop	r8
    10a2:	7f 90       	pop	r7
    10a4:	6f 90       	pop	r6
    10a6:	5f 90       	pop	r5
    10a8:	4f 90       	pop	r4
    10aa:	3f 90       	pop	r3
    10ac:	2f 90       	pop	r2
    10ae:	08 95       	ret

000010b0 <pidController>:
* Output Return:	float
* Overview:			This computes the control effort using a PID 
*					controller approach
********************************************************************/
float pidController(float error, char reset )
{	
    10b0:	6f 92       	push	r6
    10b2:	7f 92       	push	r7
    10b4:	8f 92       	push	r8
    10b6:	9f 92       	push	r9
    10b8:	af 92       	push	r10
    10ba:	bf 92       	push	r11
    10bc:	cf 92       	push	r12
    10be:	df 92       	push	r13
    10c0:	ef 92       	push	r14
    10c2:	ff 92       	push	r15
    10c4:	0f 93       	push	r16
    10c6:	1f 93       	push	r17
    10c8:	3b 01       	movw	r6, r22
    10ca:	4c 01       	movw	r8, r24
	// Reset the integrator error if specified
	if(reset){
    10cc:	44 23       	and	r20, r20
    10ce:	61 f0       	breq	.+24     	; 0x10e8 <pidController+0x38>
		Ierror = 0;
    10d0:	80 e0       	ldi	r24, 0x00	; 0
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	a0 e0       	ldi	r26, 0x00	; 0
    10d6:	b0 e0       	ldi	r27, 0x00	; 0
    10d8:	80 93 48 02 	sts	0x0248, r24
    10dc:	90 93 49 02 	sts	0x0249, r25
    10e0:	a0 93 4a 02 	sts	0x024A, r26
    10e4:	b0 93 4b 02 	sts	0x024B, r27
	}
	// At the current error to the running sum
	Ierror += error;
<<<<<<< HEAD
     f7a:	c4 01       	movw	r24, r8
     f7c:	b3 01       	movw	r22, r6
     f7e:	20 91 18 02 	lds	r18, 0x0218
     f82:	30 91 19 02 	lds	r19, 0x0219
     f86:	40 91 1a 02 	lds	r20, 0x021A
     f8a:	50 91 1b 02 	lds	r21, 0x021B
     f8e:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
     f92:	5b 01       	movw	r10, r22
     f94:	6c 01       	movw	r12, r24
     f96:	60 93 18 02 	sts	0x0218, r22
     f9a:	70 93 19 02 	sts	0x0219, r23
     f9e:	80 93 1a 02 	sts	0x021A, r24
     fa2:	90 93 1b 02 	sts	0x021B, r25
     fa6:	c4 01       	movw	r24, r8
     fa8:	b3 01       	movw	r22, r6
     faa:	a4 01       	movw	r20, r8
     fac:	93 01       	movw	r18, r6
     fae:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
     fb2:	7b 01       	movw	r14, r22
     fb4:	8c 01       	movw	r16, r24
     fb6:	c4 01       	movw	r24, r8
     fb8:	b3 01       	movw	r22, r6
     fba:	20 91 1c 02 	lds	r18, 0x021C
     fbe:	30 91 1d 02 	lds	r19, 0x021D
     fc2:	40 91 1e 02 	lds	r20, 0x021E
     fc6:	50 91 1f 02 	lds	r21, 0x021F
     fca:	0e 94 c4 25 	call	0x4b88	; 0x4b88 <__subsf3>
     fce:	20 e0       	ldi	r18, 0x00	; 0
     fd0:	30 e0       	ldi	r19, 0x00	; 0
     fd2:	40 e0       	ldi	r20, 0x00	; 0
     fd4:	5f e3       	ldi	r21, 0x3F	; 63
     fd6:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
     fda:	9b 01       	movw	r18, r22
     fdc:	ac 01       	movw	r20, r24
     fde:	c8 01       	movw	r24, r16
     fe0:	b7 01       	movw	r22, r14
     fe2:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
     fe6:	7b 01       	movw	r14, r22
     fe8:	8c 01       	movw	r16, r24
     fea:	c6 01       	movw	r24, r12
     fec:	b5 01       	movw	r22, r10
     fee:	20 e0       	ldi	r18, 0x00	; 0
     ff0:	30 e0       	ldi	r19, 0x00	; 0
     ff2:	40 e0       	ldi	r20, 0x00	; 0
     ff4:	50 e0       	ldi	r21, 0x00	; 0
     ff6:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
     ffa:	9b 01       	movw	r18, r22
     ffc:	ac 01       	movw	r20, r24
     ffe:	c8 01       	movw	r24, r16
    1000:	b7 01       	movw	r22, r14
    1002:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
=======
    10e8:	c4 01       	movw	r24, r8
    10ea:	b3 01       	movw	r22, r6
    10ec:	20 91 48 02 	lds	r18, 0x0248
    10f0:	30 91 49 02 	lds	r19, 0x0249
    10f4:	40 91 4a 02 	lds	r20, 0x024A
    10f8:	50 91 4b 02 	lds	r21, 0x024B
    10fc:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    1100:	5b 01       	movw	r10, r22
    1102:	6c 01       	movw	r12, r24
    1104:	60 93 48 02 	sts	0x0248, r22
    1108:	70 93 49 02 	sts	0x0249, r23
    110c:	80 93 4a 02 	sts	0x024A, r24
    1110:	90 93 4b 02 	sts	0x024B, r25
    1114:	c4 01       	movw	r24, r8
    1116:	b3 01       	movw	r22, r6
    1118:	a4 01       	movw	r20, r8
    111a:	93 01       	movw	r18, r6
    111c:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    1120:	7b 01       	movw	r14, r22
    1122:	8c 01       	movw	r16, r24
    1124:	c4 01       	movw	r24, r8
    1126:	b3 01       	movw	r22, r6
    1128:	20 91 4c 02 	lds	r18, 0x024C
    112c:	30 91 4d 02 	lds	r19, 0x024D
    1130:	40 91 4e 02 	lds	r20, 0x024E
    1134:	50 91 4f 02 	lds	r21, 0x024F
    1138:	0e 94 28 27 	call	0x4e50	; 0x4e50 <__subsf3>
    113c:	20 e0       	ldi	r18, 0x00	; 0
    113e:	30 e0       	ldi	r19, 0x00	; 0
    1140:	40 e0       	ldi	r20, 0x00	; 0
    1142:	5f e3       	ldi	r21, 0x3F	; 63
    1144:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1148:	9b 01       	movw	r18, r22
    114a:	ac 01       	movw	r20, r24
    114c:	c8 01       	movw	r24, r16
    114e:	b7 01       	movw	r22, r14
    1150:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    1154:	7b 01       	movw	r14, r22
    1156:	8c 01       	movw	r16, r24
    1158:	c6 01       	movw	r24, r12
    115a:	b5 01       	movw	r22, r10
    115c:	20 e0       	ldi	r18, 0x00	; 0
    115e:	30 e0       	ldi	r19, 0x00	; 0
    1160:	40 e0       	ldi	r20, 0x00	; 0
    1162:	50 e0       	ldi	r21, 0x00	; 0
    1164:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1168:	9b 01       	movw	r18, r22
    116a:	ac 01       	movw	r20, r24
    116c:	c8 01       	movw	r24, r16
    116e:	b7 01       	movw	r22, r14
    1170:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
>>>>>>> Lab6 Code
	
	// Use the PID controller approach to calculate the effort
	float effort = (KP*error) + (KD*(error-error_old)) + (KI*Ierror);
	
	return effort;	
}
    1174:	1f 91       	pop	r17
    1176:	0f 91       	pop	r16
    1178:	ff 90       	pop	r15
    117a:	ef 90       	pop	r14
    117c:	df 90       	pop	r13
    117e:	cf 90       	pop	r12
    1180:	bf 90       	pop	r11
    1182:	af 90       	pop	r10
    1184:	9f 90       	pop	r9
    1186:	8f 90       	pop	r8
    1188:	7f 90       	pop	r7
    118a:	6f 90       	pop	r6
    118c:	08 95       	ret

0000118e <check_threshhold>:
* Output Return:	char
* Overview:			This check the IR values to thresholds
********************************************************************/

char check_threshhold(float F, float B, float L, float R)
{
    118e:	2f 92       	push	r2
    1190:	6f 92       	push	r6
    1192:	7f 92       	push	r7
    1194:	8f 92       	push	r8
    1196:	9f 92       	push	r9
    1198:	af 92       	push	r10
    119a:	bf 92       	push	r11
    119c:	cf 92       	push	r12
    119e:	df 92       	push	r13
    11a0:	ef 92       	push	r14
    11a2:	ff 92       	push	r15
    11a4:	0f 93       	push	r16
    11a6:	1f 93       	push	r17
    11a8:	df 93       	push	r29
    11aa:	cf 93       	push	r28
    11ac:	00 d0       	rcall	.+0      	; 0x11ae <check_threshhold+0x20>
    11ae:	00 d0       	rcall	.+0      	; 0x11b0 <check_threshhold+0x22>
    11b0:	cd b7       	in	r28, 0x3d	; 61
    11b2:	de b7       	in	r29, 0x3e	; 62
    11b4:	69 83       	std	Y+1, r22	; 0x01
    11b6:	7a 83       	std	Y+2, r23	; 0x02
    11b8:	8b 83       	std	Y+3, r24	; 0x03
    11ba:	9c 83       	std	Y+4, r25	; 0x04
	char check = 0;
	check += 0b00000001*(ftIR < F);
    11bc:	60 90 58 02 	lds	r6, 0x0258
    11c0:	70 90 59 02 	lds	r7, 0x0259
    11c4:	80 90 5a 02 	lds	r8, 0x025A
    11c8:	90 90 5b 02 	lds	r9, 0x025B
	check += 0b00000010*(bkIR < B);
<<<<<<< HEAD
    105e:	60 91 2c 02 	lds	r22, 0x022C
    1062:	70 91 2d 02 	lds	r23, 0x022D
    1066:	80 91 2e 02 	lds	r24, 0x022E
    106a:	90 91 2f 02 	lds	r25, 0x022F
    106e:	0e 94 29 26 	call	0x4c52	; 0x4c52 <__cmpsf2>
    1072:	28 2e       	mov	r2, r24
    1074:	22 1c       	adc	r2, r2
    1076:	22 24       	eor	r2, r2
    1078:	22 1c       	adc	r2, r2
    107a:	22 0c       	add	r2, r2
	check += 0b00000100*(ltIR < L);
    107c:	60 91 20 02 	lds	r22, 0x0220
    1080:	70 91 21 02 	lds	r23, 0x0221
    1084:	80 91 22 02 	lds	r24, 0x0222
    1088:	90 91 23 02 	lds	r25, 0x0223
    108c:	a8 01       	movw	r20, r16
    108e:	97 01       	movw	r18, r14
    1090:	0e 94 29 26 	call	0x4c52	; 0x4c52 <__cmpsf2>
    1094:	08 2f       	mov	r16, r24
    1096:	00 1f       	adc	r16, r16
    1098:	00 27       	eor	r16, r16
    109a:	00 1f       	adc	r16, r16
    109c:	00 0f       	add	r16, r16
    109e:	00 0f       	add	r16, r16
	check += 0b00001000*(rtIR < R);
    10a0:	60 91 24 02 	lds	r22, 0x0224
    10a4:	70 91 25 02 	lds	r23, 0x0225
    10a8:	80 91 26 02 	lds	r24, 0x0226
    10ac:	90 91 27 02 	lds	r25, 0x0227
    10b0:	a6 01       	movw	r20, r12
    10b2:	95 01       	movw	r18, r10
    10b4:	0e 94 29 26 	call	0x4c52	; 0x4c52 <__cmpsf2>
    10b8:	18 2f       	mov	r17, r24
    10ba:	11 1f       	adc	r17, r17
    10bc:	11 27       	eor	r17, r17
    10be:	11 1f       	adc	r17, r17
    10c0:	11 0f       	add	r17, r17
    10c2:	11 0f       	add	r17, r17
    10c4:	11 0f       	add	r17, r17
=======
    11cc:	60 91 5c 02 	lds	r22, 0x025C
    11d0:	70 91 5d 02 	lds	r23, 0x025D
    11d4:	80 91 5e 02 	lds	r24, 0x025E
    11d8:	90 91 5f 02 	lds	r25, 0x025F
    11dc:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    11e0:	28 2e       	mov	r2, r24
    11e2:	22 1c       	adc	r2, r2
    11e4:	22 24       	eor	r2, r2
    11e6:	22 1c       	adc	r2, r2
    11e8:	22 0c       	add	r2, r2
	check += 0b00000100*(ltIR < L);
    11ea:	60 91 50 02 	lds	r22, 0x0250
    11ee:	70 91 51 02 	lds	r23, 0x0251
    11f2:	80 91 52 02 	lds	r24, 0x0252
    11f6:	90 91 53 02 	lds	r25, 0x0253
    11fa:	a8 01       	movw	r20, r16
    11fc:	97 01       	movw	r18, r14
    11fe:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    1202:	08 2f       	mov	r16, r24
    1204:	00 1f       	adc	r16, r16
    1206:	00 27       	eor	r16, r16
    1208:	00 1f       	adc	r16, r16
    120a:	00 0f       	add	r16, r16
    120c:	00 0f       	add	r16, r16
	check += 0b00001000*(rtIR < R);
    120e:	60 91 54 02 	lds	r22, 0x0254
    1212:	70 91 55 02 	lds	r23, 0x0255
    1216:	80 91 56 02 	lds	r24, 0x0256
    121a:	90 91 57 02 	lds	r25, 0x0257
    121e:	a6 01       	movw	r20, r12
    1220:	95 01       	movw	r18, r10
    1222:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    1226:	18 2f       	mov	r17, r24
    1228:	11 1f       	adc	r17, r17
    122a:	11 27       	eor	r17, r17
    122c:	11 1f       	adc	r17, r17
    122e:	11 0f       	add	r17, r17
    1230:	11 0f       	add	r17, r17
    1232:	11 0f       	add	r17, r17
>>>>>>> Lab6 Code

char check_threshhold(float F, float B, float L, float R)
{
	char check = 0;
	check += 0b00000001*(ftIR < F);
	check += 0b00000010*(bkIR < B);
<<<<<<< HEAD
    10c6:	ff 24       	eor	r15, r15
    10c8:	c4 01       	movw	r24, r8
    10ca:	b3 01       	movw	r22, r6
    10cc:	29 81       	ldd	r18, Y+1	; 0x01
    10ce:	3a 81       	ldd	r19, Y+2	; 0x02
    10d0:	4b 81       	ldd	r20, Y+3	; 0x03
    10d2:	5c 81       	ldd	r21, Y+4	; 0x04
    10d4:	0e 94 29 26 	call	0x4c52	; 0x4c52 <__cmpsf2>
    10d8:	88 23       	and	r24, r24
    10da:	14 f4       	brge	.+4      	; 0x10e0 <check_threshhold+0xc0>
    10dc:	ff 24       	eor	r15, r15
    10de:	f3 94       	inc	r15
    10e0:	2f 0c       	add	r2, r15
=======
    1234:	ff 24       	eor	r15, r15
    1236:	c4 01       	movw	r24, r8
    1238:	b3 01       	movw	r22, r6
    123a:	29 81       	ldd	r18, Y+1	; 0x01
    123c:	3a 81       	ldd	r19, Y+2	; 0x02
    123e:	4b 81       	ldd	r20, Y+3	; 0x03
    1240:	5c 81       	ldd	r21, Y+4	; 0x04
    1242:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    1246:	88 23       	and	r24, r24
    1248:	14 f4       	brge	.+4      	; 0x124e <check_threshhold+0xc0>
    124a:	ff 24       	eor	r15, r15
    124c:	f3 94       	inc	r15
    124e:	2f 0c       	add	r2, r15
>>>>>>> Lab6 Code
	check += 0b00000100*(ltIR < L);
    1250:	20 0e       	add	r2, r16
	check += 0b00001000*(rtIR < R);
	return check;	
}
    1252:	82 2d       	mov	r24, r2
    1254:	81 0f       	add	r24, r17
    1256:	0f 90       	pop	r0
    1258:	0f 90       	pop	r0
    125a:	0f 90       	pop	r0
    125c:	0f 90       	pop	r0
    125e:	cf 91       	pop	r28
    1260:	df 91       	pop	r29
    1262:	1f 91       	pop	r17
    1264:	0f 91       	pop	r16
    1266:	ff 90       	pop	r15
    1268:	ef 90       	pop	r14
    126a:	df 90       	pop	r13
    126c:	cf 90       	pop	r12
    126e:	bf 90       	pop	r11
    1270:	af 90       	pop	r10
    1272:	9f 90       	pop	r9
    1274:	8f 90       	pop	r8
    1276:	7f 90       	pop	r7
    1278:	6f 90       	pop	r6
    127a:	2f 90       	pop	r2
    127c:	08 95       	ret

0000127e <move_arc_stnb>:
* Input Variables:	char
* Output Return:	float, float, float, float, BOOL
* Overview:			This moves the robot in any arc length
********************************************************************/
char move_arc_stnb(float arc_Radius, float arc_Length, float arc_Speed, float arc_Accel, BOOL arc_Brk)
{
    127e:	2f 92       	push	r2
    1280:	3f 92       	push	r3
    1282:	4f 92       	push	r4
    1284:	5f 92       	push	r5
    1286:	6f 92       	push	r6
    1288:	7f 92       	push	r7
    128a:	8f 92       	push	r8
    128c:	9f 92       	push	r9
    128e:	af 92       	push	r10
    1290:	bf 92       	push	r11
    1292:	cf 92       	push	r12
    1294:	df 92       	push	r13
    1296:	ef 92       	push	r14
    1298:	ff 92       	push	r15
    129a:	0f 93       	push	r16
    129c:	1f 93       	push	r17
    129e:	df 93       	push	r29
    12a0:	cf 93       	push	r28
    12a2:	cd b7       	in	r28, 0x3d	; 61
    12a4:	de b7       	in	r29, 0x3e	; 62
    12a6:	a0 97       	sbiw	r28, 0x20	; 32
    12a8:	0f b6       	in	r0, 0x3f	; 63
    12aa:	f8 94       	cli
    12ac:	de bf       	out	0x3e, r29	; 62
    12ae:	0f be       	out	0x3f, r0	; 63
    12b0:	cd bf       	out	0x3d, r28	; 61
    12b2:	2b 01       	movw	r4, r22
    12b4:	3c 01       	movw	r6, r24
    12b6:	2d 83       	std	Y+5, r18	; 0x05
    12b8:	3e 83       	std	Y+6, r19	; 0x06
    12ba:	4f 83       	std	Y+7, r20	; 0x07
    12bc:	58 87       	std	Y+8, r21	; 0x08
    12be:	e9 86       	std	Y+9, r14	; 0x09
    12c0:	fa 86       	std	Y+10, r15	; 0x0a
    12c2:	0b 87       	std	Y+11, r16	; 0x0b
    12c4:	1c 87       	std	Y+12, r17	; 0x0c
    12c6:	ad 86       	std	Y+13, r10	; 0x0d
    12c8:	be 86       	std	Y+14, r11	; 0x0e
    12ca:	cf 86       	std	Y+15, r12	; 0x0f
    12cc:	d8 8a       	std	Y+16, r13	; 0x10
    12ce:	28 2c       	mov	r2, r8
	
	BOOL step_Fwd_L = (arc_Length>0);
    12d0:	33 24       	eor	r3, r3
    12d2:	ca 01       	movw	r24, r20
    12d4:	b9 01       	movw	r22, r18
    12d6:	20 e0       	ldi	r18, 0x00	; 0
    12d8:	30 e0       	ldi	r19, 0x00	; 0
    12da:	40 e0       	ldi	r20, 0x00	; 0
    12dc:	50 e0       	ldi	r21, 0x00	; 0
    12de:	0e 94 dc 28 	call	0x51b8	; 0x51b8 <__gesf2>
    12e2:	18 16       	cp	r1, r24
    12e4:	14 f4       	brge	.+4      	; 0x12ea <move_arc_stnb+0x6c>
    12e6:	33 24       	eor	r3, r3
    12e8:	33 94       	inc	r3
	BOOL step_Fwd_R = (arc_Length>0);
<<<<<<< HEAD
	int step_Num = arc_Length/D_STEP;
    115a:	bf 01       	movw	r22, r30
    115c:	88 27       	eor	r24, r24
    115e:	77 fd       	sbrc	r23, 7
    1160:	80 95       	com	r24
    1162:	98 2f       	mov	r25, r24
    1164:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1168:	69 87       	std	Y+9, r22	; 0x09
    116a:	7a 87       	std	Y+10, r23	; 0x0a
    116c:	8b 87       	std	Y+11, r24	; 0x0b
    116e:	9c 87       	std	Y+12, r25	; 0x0c
	int step_Speed = arc_Speed/D_STEP;
    1170:	b5 01       	movw	r22, r10
    1172:	88 27       	eor	r24, r24
    1174:	77 fd       	sbrc	r23, 7
    1176:	80 95       	com	r24
    1178:	98 2f       	mov	r25, r24
    117a:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    117e:	6d 83       	std	Y+5, r22	; 0x05
    1180:	7e 83       	std	Y+6, r23	; 0x06
    1182:	8f 83       	std	Y+7, r24	; 0x07
    1184:	98 87       	std	Y+8, r25	; 0x08
	int step_Accel = arc_Accel/D_STEP;
    1186:	b6 01       	movw	r22, r12
    1188:	88 27       	eor	r24, r24
    118a:	77 fd       	sbrc	r23, 7
    118c:	80 95       	com	r24
    118e:	98 2f       	mov	r25, r24
    1190:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1194:	69 83       	std	Y+1, r22	; 0x01
    1196:	7a 83       	std	Y+2, r23	; 0x02
    1198:	8b 83       	std	Y+3, r24	; 0x03
    119a:	9c 83       	std	Y+4, r25	; 0x04
=======
	float step_Num = abs(arc_Length/D_STEP);
    12ea:	6d 81       	ldd	r22, Y+5	; 0x05
    12ec:	7e 81       	ldd	r23, Y+6	; 0x06
    12ee:	8f 81       	ldd	r24, Y+7	; 0x07
    12f0:	98 85       	ldd	r25, Y+8	; 0x08
    12f2:	2c ed       	ldi	r18, 0xDC	; 220
    12f4:	38 eb       	ldi	r19, 0xB8	; 184
    12f6:	48 e0       	ldi	r20, 0x08	; 8
    12f8:	5e e3       	ldi	r21, 0x3E	; 62
    12fa:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    12fe:	0e 94 f9 27 	call	0x4ff2	; 0x4ff2 <__fixsfsi>
    1302:	9b 01       	movw	r18, r22
    1304:	77 ff       	sbrs	r23, 7
    1306:	03 c0       	rjmp	.+6      	; 0x130e <move_arc_stnb+0x90>
    1308:	30 95       	com	r19
    130a:	21 95       	neg	r18
    130c:	3f 4f       	sbci	r19, 0xFF	; 255
    130e:	b9 01       	movw	r22, r18
    1310:	88 27       	eor	r24, r24
    1312:	77 fd       	sbrc	r23, 7
    1314:	80 95       	com	r24
    1316:	98 2f       	mov	r25, r24
    1318:	0e 94 2c 28 	call	0x5058	; 0x5058 <__floatsisf>
    131c:	69 83       	std	Y+1, r22	; 0x01
    131e:	7a 83       	std	Y+2, r23	; 0x02
    1320:	8b 83       	std	Y+3, r24	; 0x03
    1322:	9c 83       	std	Y+4, r25	; 0x04
	float step_Speed = abs(arc_Speed/D_STEP);
    1324:	69 85       	ldd	r22, Y+9	; 0x09
    1326:	7a 85       	ldd	r23, Y+10	; 0x0a
    1328:	8b 85       	ldd	r24, Y+11	; 0x0b
    132a:	9c 85       	ldd	r25, Y+12	; 0x0c
    132c:	2c ed       	ldi	r18, 0xDC	; 220
    132e:	38 eb       	ldi	r19, 0xB8	; 184
    1330:	48 e0       	ldi	r20, 0x08	; 8
    1332:	5e e3       	ldi	r21, 0x3E	; 62
    1334:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1338:	0e 94 f9 27 	call	0x4ff2	; 0x4ff2 <__fixsfsi>
    133c:	9b 01       	movw	r18, r22
    133e:	77 ff       	sbrs	r23, 7
    1340:	03 c0       	rjmp	.+6      	; 0x1348 <move_arc_stnb+0xca>
    1342:	30 95       	com	r19
    1344:	21 95       	neg	r18
    1346:	3f 4f       	sbci	r19, 0xFF	; 255
    1348:	b9 01       	movw	r22, r18
    134a:	88 27       	eor	r24, r24
    134c:	77 fd       	sbrc	r23, 7
    134e:	80 95       	com	r24
    1350:	98 2f       	mov	r25, r24
    1352:	0e 94 2c 28 	call	0x5058	; 0x5058 <__floatsisf>
    1356:	4b 01       	movw	r8, r22
    1358:	5c 01       	movw	r10, r24
	float step_Accel = abs(arc_Accel/D_STEP);
    135a:	6d 85       	ldd	r22, Y+13	; 0x0d
    135c:	7e 85       	ldd	r23, Y+14	; 0x0e
    135e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1360:	98 89       	ldd	r25, Y+16	; 0x10
    1362:	2c ed       	ldi	r18, 0xDC	; 220
    1364:	38 eb       	ldi	r19, 0xB8	; 184
    1366:	48 e0       	ldi	r20, 0x08	; 8
    1368:	5e e3       	ldi	r21, 0x3E	; 62
    136a:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    136e:	0e 94 f9 27 	call	0x4ff2	; 0x4ff2 <__fixsfsi>
    1372:	9b 01       	movw	r18, r22
    1374:	77 ff       	sbrs	r23, 7
    1376:	03 c0       	rjmp	.+6      	; 0x137e <move_arc_stnb+0x100>
    1378:	30 95       	com	r19
    137a:	21 95       	neg	r18
    137c:	3f 4f       	sbci	r19, 0xFF	; 255
    137e:	b9 01       	movw	r22, r18
    1380:	88 27       	eor	r24, r24
    1382:	77 fd       	sbrc	r23, 7
    1384:	80 95       	com	r24
    1386:	98 2f       	mov	r25, r24
    1388:	0e 94 2c 28 	call	0x5058	; 0x5058 <__floatsisf>
    138c:	6b 01       	movw	r12, r22
    138e:	7c 01       	movw	r14, r24


	if(arc_Radius == NO_TURN){
    1390:	c3 01       	movw	r24, r6
    1392:	b2 01       	movw	r22, r4
    1394:	20 e0       	ldi	r18, 0x00	; 0
    1396:	30 e0       	ldi	r19, 0x00	; 0
    1398:	40 e0       	ldi	r20, 0x00	; 0
    139a:	5f e4       	ldi	r21, 0x4F	; 79
    139c:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    13a0:	88 23       	and	r24, r24
    13a2:	a1 f5       	brne	.+104    	; 0x140c <move_arc_stnb+0x18e>
		STEPPER_move_stnb( STEPPER_BOTH, 
    13a4:	69 81       	ldd	r22, Y+1	; 0x01
    13a6:	7a 81       	ldd	r23, Y+2	; 0x02
    13a8:	8b 81       	ldd	r24, Y+3	; 0x03
    13aa:	9c 81       	ldd	r25, Y+4	; 0x04
    13ac:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    13b0:	2b 01       	movw	r4, r22
    13b2:	3c 01       	movw	r6, r24
    13b4:	c5 01       	movw	r24, r10
    13b6:	b4 01       	movw	r22, r8
    13b8:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    13bc:	4b 01       	movw	r8, r22
    13be:	5c 01       	movw	r10, r24
    13c0:	c7 01       	movw	r24, r14
    13c2:	b6 01       	movw	r22, r12
    13c4:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    13c8:	6b 01       	movw	r12, r22
    13ca:	7c 01       	movw	r14, r24
    13cc:	2d b7       	in	r18, 0x3d	; 61
    13ce:	3e b7       	in	r19, 0x3e	; 62
    13d0:	29 50       	subi	r18, 0x09	; 9
    13d2:	30 40       	sbci	r19, 0x00	; 0
    13d4:	0f b6       	in	r0, 0x3f	; 63
    13d6:	f8 94       	cli
    13d8:	3e bf       	out	0x3e, r19	; 62
    13da:	0f be       	out	0x3f, r0	; 63
    13dc:	2d bf       	out	0x3d, r18	; 61
    13de:	ed b7       	in	r30, 0x3d	; 61
    13e0:	fe b7       	in	r31, 0x3e	; 62
    13e2:	31 96       	adiw	r30, 0x01	; 1
    13e4:	ad b7       	in	r26, 0x3d	; 61
    13e6:	be b7       	in	r27, 0x3e	; 62
    13e8:	12 96       	adiw	r26, 0x02	; 2
    13ea:	5c 92       	st	X, r5
    13ec:	4e 92       	st	-X, r4
    13ee:	11 97       	sbiw	r26, 0x01	; 1
    13f0:	93 82       	std	Z+3, r9	; 0x03
    13f2:	82 82       	std	Z+2, r8	; 0x02
    13f4:	75 83       	std	Z+5, r23	; 0x05
    13f6:	64 83       	std	Z+4, r22	; 0x04
    13f8:	26 82       	std	Z+6, r2	; 0x06
    13fa:	10 86       	std	Z+8, r1	; 0x08
    13fc:	17 82       	std	Z+7, r1	; 0x07
    13fe:	81 e0       	ldi	r24, 0x01	; 1
    1400:	62 e0       	ldi	r22, 0x02	; 2
    1402:	43 2d       	mov	r20, r3
    1404:	92 01       	movw	r18, r4
    1406:	84 01       	movw	r16, r8
    1408:	76 01       	movw	r14, r12
    140a:	c1 c1       	rjmp	.+898    	; 0x178e <move_arc_stnb+0x510>
>>>>>>> Lab6 Code
		step_Fwd_L, step_Num, step_Speed, step_Accel, arc_Brk, // Left
		step_Fwd_R, step_Num, step_Speed, step_Accel, arc_Brk); // Right
		return SUCCESS;
	}
	
	if(arc_Radius == POINT_TURN){				
    140c:	c3 01       	movw	r24, r6
    140e:	b2 01       	movw	r22, r4
    1410:	20 e0       	ldi	r18, 0x00	; 0
    1412:	30 e0       	ldi	r19, 0x00	; 0
    1414:	40 e0       	ldi	r20, 0x00	; 0
    1416:	50 e0       	ldi	r21, 0x00	; 0
    1418:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    141c:	88 23       	and	r24, r24
    141e:	e9 f5       	brne	.+122    	; 0x149a <move_arc_stnb+0x21c>
		STEPPER_move_stnb( STEPPER_BOTH, 
<<<<<<< HEAD
    11a4:	69 85       	ldd	r22, Y+9	; 0x09
    11a6:	7a 85       	ldd	r23, Y+10	; 0x0a
    11a8:	8b 85       	ldd	r24, Y+11	; 0x0b
    11aa:	9c 85       	ldd	r25, Y+12	; 0x0c
    11ac:	2c ed       	ldi	r18, 0xDC	; 220
    11ae:	38 eb       	ldi	r19, 0xB8	; 184
    11b0:	48 e0       	ldi	r20, 0x08	; 8
    11b2:	5e e3       	ldi	r21, 0x3E	; 62
    11b4:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    11b8:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    11bc:	5b 01       	movw	r10, r22
    11be:	6d 81       	ldd	r22, Y+5	; 0x05
    11c0:	7e 81       	ldd	r23, Y+6	; 0x06
    11c2:	8f 81       	ldd	r24, Y+7	; 0x07
    11c4:	98 85       	ldd	r25, Y+8	; 0x08
    11c6:	2c ed       	ldi	r18, 0xDC	; 220
    11c8:	38 eb       	ldi	r19, 0xB8	; 184
    11ca:	48 e0       	ldi	r20, 0x08	; 8
    11cc:	5e e3       	ldi	r21, 0x3E	; 62
    11ce:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    11d2:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    11d6:	8b 01       	movw	r16, r22
    11d8:	69 81       	ldd	r22, Y+1	; 0x01
    11da:	7a 81       	ldd	r23, Y+2	; 0x02
    11dc:	8b 81       	ldd	r24, Y+3	; 0x03
    11de:	9c 81       	ldd	r25, Y+4	; 0x04
    11e0:	2c ed       	ldi	r18, 0xDC	; 220
    11e2:	38 eb       	ldi	r19, 0xB8	; 184
    11e4:	48 e0       	ldi	r20, 0x08	; 8
    11e6:	5e e3       	ldi	r21, 0x3E	; 62
    11e8:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    11ec:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    11f0:	7b 01       	movw	r14, r22
    11f2:	8d b7       	in	r24, 0x3d	; 61
    11f4:	9e b7       	in	r25, 0x3e	; 62
    11f6:	09 97       	sbiw	r24, 0x09	; 9
    11f8:	0f b6       	in	r0, 0x3f	; 63
    11fa:	f8 94       	cli
    11fc:	9e bf       	out	0x3e, r25	; 62
    11fe:	0f be       	out	0x3f, r0	; 63
    1200:	8d bf       	out	0x3d, r24	; 61
    1202:	ed b7       	in	r30, 0x3d	; 61
    1204:	fe b7       	in	r31, 0x3e	; 62
    1206:	31 96       	adiw	r30, 0x01	; 1
    1208:	40 e0       	ldi	r20, 0x00	; 0
    120a:	33 20       	and	r3, r3
    120c:	09 f4       	brne	.+2      	; 0x1210 <move_arc__stnb+0x100>
    120e:	41 e0       	ldi	r20, 0x01	; 1
    1210:	b1 82       	std	Z+1, r11	; 0x01
    1212:	a0 82       	st	Z, r10
    1214:	13 83       	std	Z+3, r17	; 0x03
    1216:	02 83       	std	Z+2, r16	; 0x02
    1218:	f5 82       	std	Z+5, r15	; 0x05
    121a:	e4 82       	std	Z+4, r14	; 0x04
    121c:	26 82       	std	Z+6, r2	; 0x06
    121e:	10 86       	std	Z+8, r1	; 0x08
    1220:	17 82       	std	Z+7, r1	; 0x07
    1222:	81 e0       	ldi	r24, 0x01	; 1
    1224:	62 e0       	ldi	r22, 0x02	; 2
    1226:	95 01       	movw	r18, r10
    1228:	c2 2c       	mov	r12, r2
    122a:	aa 24       	eor	r10, r10
    122c:	bb 24       	eor	r11, r11
    122e:	83 2c       	mov	r8, r3
    1230:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <STEPPER_move>
    1234:	ed b7       	in	r30, 0x3d	; 61
    1236:	fe b7       	in	r31, 0x3e	; 62
    1238:	39 96       	adiw	r30, 0x09	; 9
    123a:	0f b6       	in	r0, 0x3f	; 63
    123c:	f8 94       	cli
    123e:	fe bf       	out	0x3e, r31	; 62
    1240:	0f be       	out	0x3f, r0	; 63
    1242:	ed bf       	out	0x3d, r30	; 61
    1244:	ce c1       	rjmp	.+924    	; 0x15e2 <move_arc__stnb+0x4d2>
    1246:	b7 01       	movw	r22, r14
    1248:	88 27       	eor	r24, r24
    124a:	77 fd       	sbrc	r23, 7
    124c:	80 95       	com	r24
    124e:	98 2f       	mov	r25, r24
	int step_Speed_L;
	int step_Speed_R;	
	int step_Accel_L;
	int step_Accel_R;
=======
    1420:	69 81       	ldd	r22, Y+1	; 0x01
    1422:	7a 81       	ldd	r23, Y+2	; 0x02
    1424:	8b 81       	ldd	r24, Y+3	; 0x03
    1426:	9c 81       	ldd	r25, Y+4	; 0x04
    1428:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    142c:	3b 01       	movw	r6, r22
    142e:	c5 01       	movw	r24, r10
    1430:	b4 01       	movw	r22, r8
    1432:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1436:	8b 01       	movw	r16, r22
    1438:	c7 01       	movw	r24, r14
    143a:	b6 01       	movw	r22, r12
    143c:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1440:	7b 01       	movw	r14, r22
    1442:	2d b7       	in	r18, 0x3d	; 61
    1444:	3e b7       	in	r19, 0x3e	; 62
    1446:	29 50       	subi	r18, 0x09	; 9
    1448:	30 40       	sbci	r19, 0x00	; 0
    144a:	0f b6       	in	r0, 0x3f	; 63
    144c:	f8 94       	cli
    144e:	3e bf       	out	0x3e, r19	; 62
    1450:	0f be       	out	0x3f, r0	; 63
    1452:	2d bf       	out	0x3d, r18	; 61
    1454:	ed b7       	in	r30, 0x3d	; 61
    1456:	fe b7       	in	r31, 0x3e	; 62
    1458:	31 96       	adiw	r30, 0x01	; 1
    145a:	40 e0       	ldi	r20, 0x00	; 0
    145c:	33 20       	and	r3, r3
    145e:	09 f4       	brne	.+2      	; 0x1462 <move_arc_stnb+0x1e4>
    1460:	41 e0       	ldi	r20, 0x01	; 1
    1462:	71 82       	std	Z+1, r7	; 0x01
    1464:	60 82       	st	Z, r6
    1466:	13 83       	std	Z+3, r17	; 0x03
    1468:	02 83       	std	Z+2, r16	; 0x02
    146a:	f5 82       	std	Z+5, r15	; 0x05
    146c:	e4 82       	std	Z+4, r14	; 0x04
    146e:	26 82       	std	Z+6, r2	; 0x06
    1470:	10 86       	std	Z+8, r1	; 0x08
    1472:	17 82       	std	Z+7, r1	; 0x07
    1474:	81 e0       	ldi	r24, 0x01	; 1
    1476:	62 e0       	ldi	r22, 0x02	; 2
    1478:	93 01       	movw	r18, r6
    147a:	c2 2c       	mov	r12, r2
    147c:	aa 24       	eor	r10, r10
    147e:	bb 24       	eor	r11, r11
    1480:	83 2c       	mov	r8, r3
    1482:	0e 94 52 17 	call	0x2ea4	; 0x2ea4 <STEPPER_move>
    1486:	81 e0       	ldi	r24, 0x01	; 1
    1488:	ad b7       	in	r26, 0x3d	; 61
    148a:	be b7       	in	r27, 0x3e	; 62
    148c:	19 96       	adiw	r26, 0x09	; 9
    148e:	0f b6       	in	r0, 0x3f	; 63
    1490:	f8 94       	cli
    1492:	be bf       	out	0x3e, r27	; 62
    1494:	0f be       	out	0x3f, r0	; 63
    1496:	ad bf       	out	0x3d, r26	; 61
    1498:	89 c1       	rjmp	.+786    	; 0x17ac <move_arc_stnb+0x52e>
	float step_Speed_L;
	float step_Speed_R;	
	float step_Accel_L;
	float step_Accel_R;
>>>>>>> Lab6 Code
	
	if(arc_Radius > 0){
    149a:	c3 01       	movw	r24, r6
    149c:	b2 01       	movw	r22, r4
    149e:	20 e0       	ldi	r18, 0x00	; 0
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	40 e0       	ldi	r20, 0x00	; 0
    14a4:	50 e0       	ldi	r21, 0x00	; 0
    14a6:	0e 94 dc 28 	call	0x51b8	; 0x51b8 <__gesf2>
    14aa:	18 16       	cp	r1, r24
    14ac:	0c f0       	brlt	.+2      	; 0x14b0 <move_arc_stnb+0x232>
    14ae:	b1 c0       	rjmp	.+354    	; 0x1612 <move_arc_stnb+0x394>
		arc_Length_L = arc_Length * (1 - WHEEL_BASE/arc_Radius);
<<<<<<< HEAD
    1258:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    125c:	7b 01       	movw	r14, r22
    125e:	8c 01       	movw	r16, r24
    1260:	66 e6       	ldi	r22, 0x66	; 102
    1262:	76 e6       	ldi	r23, 0x66	; 102
    1264:	8a ea       	ldi	r24, 0xAA	; 170
    1266:	91 ec       	ldi	r25, 0xC1	; 193
    1268:	a8 01       	movw	r20, r16
    126a:	97 01       	movw	r18, r14
    126c:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1270:	20 e0       	ldi	r18, 0x00	; 0
    1272:	30 e0       	ldi	r19, 0x00	; 0
    1274:	40 e8       	ldi	r20, 0x80	; 128
    1276:	5f e3       	ldi	r21, 0x3F	; 63
    1278:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
    127c:	5b 01       	movw	r10, r22
    127e:	6c 01       	movw	r12, r24
		arc_Length_R = arc_Length * (1 + WHEEL_BASE/arc_Radius);
    1280:	66 e6       	ldi	r22, 0x66	; 102
    1282:	76 e6       	ldi	r23, 0x66	; 102
    1284:	8a ea       	ldi	r24, 0xAA	; 170
    1286:	91 e4       	ldi	r25, 0x41	; 65
    1288:	a8 01       	movw	r20, r16
    128a:	97 01       	movw	r18, r14
    128c:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1290:	20 e0       	ldi	r18, 0x00	; 0
    1292:	30 e0       	ldi	r19, 0x00	; 0
    1294:	40 e8       	ldi	r20, 0x80	; 128
    1296:	5f e3       	ldi	r21, 0x3F	; 63
    1298:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
    129c:	7b 01       	movw	r14, r22
    129e:	8c 01       	movw	r16, r24
=======
    14b0:	66 e6       	ldi	r22, 0x66	; 102
    14b2:	76 e6       	ldi	r23, 0x66	; 102
    14b4:	8a ea       	ldi	r24, 0xAA	; 170
    14b6:	91 ec       	ldi	r25, 0xC1	; 193
    14b8:	a3 01       	movw	r20, r6
    14ba:	92 01       	movw	r18, r4
    14bc:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    14c0:	20 e0       	ldi	r18, 0x00	; 0
    14c2:	30 e0       	ldi	r19, 0x00	; 0
    14c4:	40 e8       	ldi	r20, 0x80	; 128
    14c6:	5f e3       	ldi	r21, 0x3F	; 63
    14c8:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    14cc:	7b 01       	movw	r14, r22
    14ce:	8c 01       	movw	r16, r24
		arc_Length_R = arc_Length * (1 + WHEEL_BASE/arc_Radius);
    14d0:	66 e6       	ldi	r22, 0x66	; 102
    14d2:	76 e6       	ldi	r23, 0x66	; 102
    14d4:	8a ea       	ldi	r24, 0xAA	; 170
    14d6:	91 e4       	ldi	r25, 0x41	; 65
    14d8:	a3 01       	movw	r20, r6
    14da:	92 01       	movw	r18, r4
    14dc:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    14e0:	20 e0       	ldi	r18, 0x00	; 0
    14e2:	30 e0       	ldi	r19, 0x00	; 0
    14e4:	40 e8       	ldi	r20, 0x80	; 128
    14e6:	5f e3       	ldi	r21, 0x3F	; 63
    14e8:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    14ec:	5b 01       	movw	r10, r22
    14ee:	6c 01       	movw	r12, r24
>>>>>>> Lab6 Code
		arc_Accel_L = arc_Accel * (1 - WHEEL_BASE/arc_Radius);
		arc_Accel_R = arc_Accel * (1 + WHEEL_BASE/arc_Radius);
		step_Accel_L = arc_Accel_L/D_STEP;
		step_Accel_R = arc_Accel_R/D_STEP;
		
		STEPPER_move_stnb( STEPPER_BOTH, 
<<<<<<< HEAD
    12a0:	8d b7       	in	r24, 0x3d	; 61
    12a2:	9e b7       	in	r25, 0x3e	; 62
    12a4:	09 97       	sbiw	r24, 0x09	; 9
    12a6:	0f b6       	in	r0, 0x3f	; 63
    12a8:	f8 94       	cli
    12aa:	9e bf       	out	0x3e, r25	; 62
    12ac:	0f be       	out	0x3f, r0	; 63
    12ae:	8d bf       	out	0x3d, r24	; 61
    12b0:	8d b6       	in	r8, 0x3d	; 61
    12b2:	9e b6       	in	r9, 0x3e	; 62
    12b4:	08 94       	sec
    12b6:	81 1c       	adc	r8, r1
    12b8:	91 1c       	adc	r9, r1
    12ba:	69 85       	ldd	r22, Y+9	; 0x09
    12bc:	7a 85       	ldd	r23, Y+10	; 0x0a
    12be:	8b 85       	ldd	r24, Y+11	; 0x0b
    12c0:	9c 85       	ldd	r25, Y+12	; 0x0c
    12c2:	a6 01       	movw	r20, r12
    12c4:	95 01       	movw	r18, r10
    12c6:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    12ca:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    12ce:	88 27       	eor	r24, r24
    12d0:	77 fd       	sbrc	r23, 7
    12d2:	80 95       	com	r24
    12d4:	98 2f       	mov	r25, r24
    12d6:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    12da:	2c ed       	ldi	r18, 0xDC	; 220
    12dc:	38 eb       	ldi	r19, 0xB8	; 184
    12de:	48 e0       	ldi	r20, 0x08	; 8
    12e0:	5e e3       	ldi	r21, 0x3E	; 62
    12e2:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    12e6:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    12ea:	6d 87       	std	Y+13, r22	; 0x0d
    12ec:	7e 87       	std	Y+14, r23	; 0x0e
    12ee:	8f 87       	std	Y+15, r24	; 0x0f
    12f0:	98 8b       	std	Y+16, r25	; 0x10
    12f2:	6d 81       	ldd	r22, Y+5	; 0x05
    12f4:	7e 81       	ldd	r23, Y+6	; 0x06
    12f6:	8f 81       	ldd	r24, Y+7	; 0x07
    12f8:	98 85       	ldd	r25, Y+8	; 0x08
    12fa:	a6 01       	movw	r20, r12
    12fc:	95 01       	movw	r18, r10
    12fe:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    1302:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1306:	88 27       	eor	r24, r24
    1308:	77 fd       	sbrc	r23, 7
    130a:	80 95       	com	r24
    130c:	98 2f       	mov	r25, r24
    130e:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1312:	2c ed       	ldi	r18, 0xDC	; 220
    1314:	38 eb       	ldi	r19, 0xB8	; 184
    1316:	48 e0       	ldi	r20, 0x08	; 8
    1318:	5e e3       	ldi	r21, 0x3E	; 62
    131a:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    131e:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1322:	2b 01       	movw	r4, r22
    1324:	3c 01       	movw	r6, r24
    1326:	69 81       	ldd	r22, Y+1	; 0x01
    1328:	7a 81       	ldd	r23, Y+2	; 0x02
    132a:	8b 81       	ldd	r24, Y+3	; 0x03
    132c:	9c 81       	ldd	r25, Y+4	; 0x04
    132e:	a6 01       	movw	r20, r12
    1330:	95 01       	movw	r18, r10
    1332:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    1336:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    133a:	88 27       	eor	r24, r24
    133c:	77 fd       	sbrc	r23, 7
    133e:	80 95       	com	r24
    1340:	98 2f       	mov	r25, r24
    1342:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1346:	2c ed       	ldi	r18, 0xDC	; 220
    1348:	38 eb       	ldi	r19, 0xB8	; 184
    134a:	48 e0       	ldi	r20, 0x08	; 8
    134c:	5e e3       	ldi	r21, 0x3E	; 62
    134e:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1352:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1356:	5b 01       	movw	r10, r22
    1358:	6c 01       	movw	r12, r24
    135a:	69 85       	ldd	r22, Y+9	; 0x09
    135c:	7a 85       	ldd	r23, Y+10	; 0x0a
    135e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1360:	9c 85       	ldd	r25, Y+12	; 0x0c
    1362:	a8 01       	movw	r20, r16
    1364:	97 01       	movw	r18, r14
    1366:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    136a:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    136e:	88 27       	eor	r24, r24
    1370:	77 fd       	sbrc	r23, 7
    1372:	80 95       	com	r24
    1374:	98 2f       	mov	r25, r24
    1376:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    137a:	2c ed       	ldi	r18, 0xDC	; 220
    137c:	38 eb       	ldi	r19, 0xB8	; 184
    137e:	48 e0       	ldi	r20, 0x08	; 8
    1380:	5e e3       	ldi	r21, 0x3E	; 62
    1382:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1386:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    138a:	f4 01       	movw	r30, r8
    138c:	71 83       	std	Z+1, r23	; 0x01
    138e:	60 83       	st	Z, r22
    1390:	6d 81       	ldd	r22, Y+5	; 0x05
    1392:	7e 81       	ldd	r23, Y+6	; 0x06
    1394:	8f 81       	ldd	r24, Y+7	; 0x07
    1396:	98 85       	ldd	r25, Y+8	; 0x08
    1398:	a8 01       	movw	r20, r16
    139a:	97 01       	movw	r18, r14
    139c:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    13a0:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    13a4:	88 27       	eor	r24, r24
    13a6:	77 fd       	sbrc	r23, 7
    13a8:	80 95       	com	r24
    13aa:	98 2f       	mov	r25, r24
    13ac:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    13b0:	2c ed       	ldi	r18, 0xDC	; 220
    13b2:	38 eb       	ldi	r19, 0xB8	; 184
    13b4:	48 e0       	ldi	r20, 0x08	; 8
    13b6:	5e e3       	ldi	r21, 0x3E	; 62
    13b8:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    13bc:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    13c0:	f4 01       	movw	r30, r8
    13c2:	73 83       	std	Z+3, r23	; 0x03
    13c4:	62 83       	std	Z+2, r22	; 0x02
    13c6:	69 81       	ldd	r22, Y+1	; 0x01
    13c8:	7a 81       	ldd	r23, Y+2	; 0x02
    13ca:	8b 81       	ldd	r24, Y+3	; 0x03
    13cc:	9c 81       	ldd	r25, Y+4	; 0x04
    13ce:	a8 01       	movw	r20, r16
    13d0:	97 01       	movw	r18, r14
    13d2:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    13d6:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    13da:	88 27       	eor	r24, r24
    13dc:	77 fd       	sbrc	r23, 7
    13de:	80 95       	com	r24
    13e0:	98 2f       	mov	r25, r24
    13e2:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    13e6:	2c ed       	ldi	r18, 0xDC	; 220
    13e8:	38 eb       	ldi	r19, 0xB8	; 184
    13ea:	48 e0       	ldi	r20, 0x08	; 8
    13ec:	5e e3       	ldi	r21, 0x3E	; 62
    13ee:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    13f2:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    13f6:	f4 01       	movw	r30, r8
    13f8:	75 83       	std	Z+5, r23	; 0x05
    13fa:	64 83       	std	Z+4, r22	; 0x04
    13fc:	26 82       	std	Z+6, r2	; 0x06
    13fe:	10 86       	std	Z+8, r1	; 0x08
    1400:	17 82       	std	Z+7, r1	; 0x07
    1402:	81 e0       	ldi	r24, 0x01	; 1
    1404:	62 e0       	ldi	r22, 0x02	; 2
    1406:	43 2d       	mov	r20, r3
    1408:	2d 85       	ldd	r18, Y+13	; 0x0d
    140a:	3e 85       	ldd	r19, Y+14	; 0x0e
    140c:	da c0       	rjmp	.+436    	; 0x15c2 <move_arc__stnb+0x4b2>
=======
    14f0:	ed b7       	in	r30, 0x3d	; 61
    14f2:	fe b7       	in	r31, 0x3e	; 62
    14f4:	39 97       	sbiw	r30, 0x09	; 9
    14f6:	0f b6       	in	r0, 0x3f	; 63
    14f8:	f8 94       	cli
    14fa:	fe bf       	out	0x3e, r31	; 62
    14fc:	0f be       	out	0x3f, r0	; 63
    14fe:	ed bf       	out	0x3d, r30	; 61
    1500:	8d b6       	in	r8, 0x3d	; 61
    1502:	9e b6       	in	r9, 0x3e	; 62
    1504:	08 94       	sec
    1506:	81 1c       	adc	r8, r1
    1508:	91 1c       	adc	r9, r1
    150a:	6d 81       	ldd	r22, Y+5	; 0x05
    150c:	7e 81       	ldd	r23, Y+6	; 0x06
    150e:	8f 81       	ldd	r24, Y+7	; 0x07
    1510:	98 85       	ldd	r25, Y+8	; 0x08
    1512:	a8 01       	movw	r20, r16
    1514:	97 01       	movw	r18, r14
    1516:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    151a:	2c ed       	ldi	r18, 0xDC	; 220
    151c:	38 eb       	ldi	r19, 0xB8	; 184
    151e:	48 e0       	ldi	r20, 0x08	; 8
    1520:	5e e3       	ldi	r21, 0x3E	; 62
    1522:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1526:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    152a:	69 8b       	std	Y+17, r22	; 0x11
    152c:	7a 8b       	std	Y+18, r23	; 0x12
    152e:	8b 8b       	std	Y+19, r24	; 0x13
    1530:	9c 8b       	std	Y+20, r25	; 0x14
    1532:	69 85       	ldd	r22, Y+9	; 0x09
    1534:	7a 85       	ldd	r23, Y+10	; 0x0a
    1536:	8b 85       	ldd	r24, Y+11	; 0x0b
    1538:	9c 85       	ldd	r25, Y+12	; 0x0c
    153a:	a8 01       	movw	r20, r16
    153c:	97 01       	movw	r18, r14
    153e:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1542:	2c ed       	ldi	r18, 0xDC	; 220
    1544:	38 eb       	ldi	r19, 0xB8	; 184
    1546:	48 e0       	ldi	r20, 0x08	; 8
    1548:	5e e3       	ldi	r21, 0x3E	; 62
    154a:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    154e:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1552:	6d 8b       	std	Y+21, r22	; 0x15
    1554:	7e 8b       	std	Y+22, r23	; 0x16
    1556:	8f 8b       	std	Y+23, r24	; 0x17
    1558:	98 8f       	std	Y+24, r25	; 0x18
    155a:	6d 85       	ldd	r22, Y+13	; 0x0d
    155c:	7e 85       	ldd	r23, Y+14	; 0x0e
    155e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1560:	98 89       	ldd	r25, Y+16	; 0x10
    1562:	a8 01       	movw	r20, r16
    1564:	97 01       	movw	r18, r14
    1566:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    156a:	2c ed       	ldi	r18, 0xDC	; 220
    156c:	38 eb       	ldi	r19, 0xB8	; 184
    156e:	48 e0       	ldi	r20, 0x08	; 8
    1570:	5e e3       	ldi	r21, 0x3E	; 62
    1572:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1576:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    157a:	2b 01       	movw	r4, r22
    157c:	3c 01       	movw	r6, r24
    157e:	6d 81       	ldd	r22, Y+5	; 0x05
    1580:	7e 81       	ldd	r23, Y+6	; 0x06
    1582:	8f 81       	ldd	r24, Y+7	; 0x07
    1584:	98 85       	ldd	r25, Y+8	; 0x08
    1586:	a6 01       	movw	r20, r12
    1588:	95 01       	movw	r18, r10
    158a:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    158e:	2c ed       	ldi	r18, 0xDC	; 220
    1590:	38 eb       	ldi	r19, 0xB8	; 184
    1592:	48 e0       	ldi	r20, 0x08	; 8
    1594:	5e e3       	ldi	r21, 0x3E	; 62
    1596:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    159a:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    159e:	d4 01       	movw	r26, r8
    15a0:	6d 93       	st	X+, r22
    15a2:	7c 93       	st	X, r23
    15a4:	69 85       	ldd	r22, Y+9	; 0x09
    15a6:	7a 85       	ldd	r23, Y+10	; 0x0a
    15a8:	8b 85       	ldd	r24, Y+11	; 0x0b
    15aa:	9c 85       	ldd	r25, Y+12	; 0x0c
    15ac:	a6 01       	movw	r20, r12
    15ae:	95 01       	movw	r18, r10
    15b0:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    15b4:	2c ed       	ldi	r18, 0xDC	; 220
    15b6:	38 eb       	ldi	r19, 0xB8	; 184
    15b8:	48 e0       	ldi	r20, 0x08	; 8
    15ba:	5e e3       	ldi	r21, 0x3E	; 62
    15bc:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    15c0:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    15c4:	f4 01       	movw	r30, r8
    15c6:	73 83       	std	Z+3, r23	; 0x03
    15c8:	62 83       	std	Z+2, r22	; 0x02
    15ca:	6d 85       	ldd	r22, Y+13	; 0x0d
    15cc:	7e 85       	ldd	r23, Y+14	; 0x0e
    15ce:	8f 85       	ldd	r24, Y+15	; 0x0f
    15d0:	98 89       	ldd	r25, Y+16	; 0x10
    15d2:	a6 01       	movw	r20, r12
    15d4:	95 01       	movw	r18, r10
    15d6:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    15da:	2c ed       	ldi	r18, 0xDC	; 220
    15dc:	38 eb       	ldi	r19, 0xB8	; 184
    15de:	48 e0       	ldi	r20, 0x08	; 8
    15e0:	5e e3       	ldi	r21, 0x3E	; 62
    15e2:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    15e6:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    15ea:	d4 01       	movw	r26, r8
    15ec:	15 96       	adiw	r26, 0x05	; 5
    15ee:	7c 93       	st	X, r23
    15f0:	6e 93       	st	-X, r22
    15f2:	14 97       	sbiw	r26, 0x04	; 4
    15f4:	16 96       	adiw	r26, 0x06	; 6
    15f6:	2c 92       	st	X, r2
    15f8:	16 97       	sbiw	r26, 0x06	; 6
    15fa:	18 96       	adiw	r26, 0x08	; 8
    15fc:	1c 92       	st	X, r1
    15fe:	1e 92       	st	-X, r1
    1600:	17 97       	sbiw	r26, 0x07	; 7
    1602:	81 e0       	ldi	r24, 0x01	; 1
    1604:	62 e0       	ldi	r22, 0x02	; 2
    1606:	43 2d       	mov	r20, r3
    1608:	29 89       	ldd	r18, Y+17	; 0x11
    160a:	3a 89       	ldd	r19, Y+18	; 0x12
    160c:	0d 89       	ldd	r16, Y+21	; 0x15
    160e:	1e 89       	ldd	r17, Y+22	; 0x16
    1610:	bd c0       	rjmp	.+378    	; 0x178c <move_arc_stnb+0x50e>
		step_Fwd_L, step_Num_L, step_Speed_L, step_Accel_L, arc_Brk, // Left
>>>>>>> Lab6 Code
		step_Fwd_R, step_Num_R, step_Speed_R, step_Accel_R, arc_Brk); // Right
		return SUCCESS;
	}	
	
	if(arc_Radius < 0){
    1612:	c3 01       	movw	r24, r6
    1614:	b2 01       	movw	r22, r4
    1616:	20 e0       	ldi	r18, 0x00	; 0
    1618:	30 e0       	ldi	r19, 0x00	; 0
    161a:	40 e0       	ldi	r20, 0x00	; 0
    161c:	50 e0       	ldi	r21, 0x00	; 0
    161e:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    1622:	87 fd       	sbrc	r24, 7
    1624:	02 c0       	rjmp	.+4      	; 0x162a <move_arc_stnb+0x3ac>
    1626:	80 e0       	ldi	r24, 0x00	; 0
    1628:	c1 c0       	rjmp	.+386    	; 0x17ac <move_arc_stnb+0x52e>
		arc_Length_L = arc_Length * (1 + WHEEL_BASE/arc_Radius);
<<<<<<< HEAD
    140e:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1412:	7b 01       	movw	r14, r22
    1414:	8c 01       	movw	r16, r24
    1416:	66 e6       	ldi	r22, 0x66	; 102
    1418:	76 e6       	ldi	r23, 0x66	; 102
    141a:	8a ea       	ldi	r24, 0xAA	; 170
    141c:	91 e4       	ldi	r25, 0x41	; 65
    141e:	a8 01       	movw	r20, r16
    1420:	97 01       	movw	r18, r14
    1422:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1426:	20 e0       	ldi	r18, 0x00	; 0
    1428:	30 e0       	ldi	r19, 0x00	; 0
    142a:	40 e8       	ldi	r20, 0x80	; 128
    142c:	5f e3       	ldi	r21, 0x3F	; 63
    142e:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
    1432:	5b 01       	movw	r10, r22
    1434:	6c 01       	movw	r12, r24
		arc_Length_R = arc_Length * (1 - WHEEL_BASE/arc_Radius);
    1436:	66 e6       	ldi	r22, 0x66	; 102
    1438:	76 e6       	ldi	r23, 0x66	; 102
    143a:	8a ea       	ldi	r24, 0xAA	; 170
    143c:	91 ec       	ldi	r25, 0xC1	; 193
    143e:	a8 01       	movw	r20, r16
    1440:	97 01       	movw	r18, r14
    1442:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1446:	20 e0       	ldi	r18, 0x00	; 0
    1448:	30 e0       	ldi	r19, 0x00	; 0
    144a:	40 e8       	ldi	r20, 0x80	; 128
    144c:	5f e3       	ldi	r21, 0x3F	; 63
    144e:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
    1452:	7b 01       	movw	r14, r22
    1454:	8c 01       	movw	r16, r24
=======
    162a:	66 e6       	ldi	r22, 0x66	; 102
    162c:	76 e6       	ldi	r23, 0x66	; 102
    162e:	8a ea       	ldi	r24, 0xAA	; 170
    1630:	91 e4       	ldi	r25, 0x41	; 65
    1632:	a3 01       	movw	r20, r6
    1634:	92 01       	movw	r18, r4
    1636:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    163a:	20 e0       	ldi	r18, 0x00	; 0
    163c:	30 e0       	ldi	r19, 0x00	; 0
    163e:	40 e8       	ldi	r20, 0x80	; 128
    1640:	5f e3       	ldi	r21, 0x3F	; 63
    1642:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    1646:	7b 01       	movw	r14, r22
    1648:	8c 01       	movw	r16, r24
		arc_Length_R = arc_Length * (1 - WHEEL_BASE/arc_Radius);
    164a:	66 e6       	ldi	r22, 0x66	; 102
    164c:	76 e6       	ldi	r23, 0x66	; 102
    164e:	8a ea       	ldi	r24, 0xAA	; 170
    1650:	91 ec       	ldi	r25, 0xC1	; 193
    1652:	a3 01       	movw	r20, r6
    1654:	92 01       	movw	r18, r4
    1656:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    165a:	20 e0       	ldi	r18, 0x00	; 0
    165c:	30 e0       	ldi	r19, 0x00	; 0
    165e:	40 e8       	ldi	r20, 0x80	; 128
    1660:	5f e3       	ldi	r21, 0x3F	; 63
    1662:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    1666:	5b 01       	movw	r10, r22
    1668:	6c 01       	movw	r12, r24
>>>>>>> Lab6 Code
		arc_Accel_L = arc_Accel * (1 + WHEEL_BASE/arc_Radius);
		arc_Accel_R = arc_Accel * (1 - WHEEL_BASE/arc_Radius);
		step_Accel_L = arc_Accel_L/D_STEP;
		step_Accel_R = arc_Accel_R/D_STEP;
		
		STEPPER_move_stnb( STEPPER_BOTH, 
<<<<<<< HEAD
    1456:	ed b7       	in	r30, 0x3d	; 61
    1458:	fe b7       	in	r31, 0x3e	; 62
    145a:	39 97       	sbiw	r30, 0x09	; 9
    145c:	0f b6       	in	r0, 0x3f	; 63
    145e:	f8 94       	cli
    1460:	fe bf       	out	0x3e, r31	; 62
    1462:	0f be       	out	0x3f, r0	; 63
    1464:	ed bf       	out	0x3d, r30	; 61
    1466:	8d b6       	in	r8, 0x3d	; 61
    1468:	9e b6       	in	r9, 0x3e	; 62
    146a:	08 94       	sec
    146c:	81 1c       	adc	r8, r1
    146e:	91 1c       	adc	r9, r1
    1470:	69 85       	ldd	r22, Y+9	; 0x09
    1472:	7a 85       	ldd	r23, Y+10	; 0x0a
    1474:	8b 85       	ldd	r24, Y+11	; 0x0b
    1476:	9c 85       	ldd	r25, Y+12	; 0x0c
    1478:	a6 01       	movw	r20, r12
    147a:	95 01       	movw	r18, r10
    147c:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    1480:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1484:	88 27       	eor	r24, r24
    1486:	77 fd       	sbrc	r23, 7
    1488:	80 95       	com	r24
    148a:	98 2f       	mov	r25, r24
    148c:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1490:	2c ed       	ldi	r18, 0xDC	; 220
    1492:	38 eb       	ldi	r19, 0xB8	; 184
    1494:	48 e0       	ldi	r20, 0x08	; 8
    1496:	5e e3       	ldi	r21, 0x3E	; 62
    1498:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    149c:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    14a0:	69 8b       	std	Y+17, r22	; 0x11
    14a2:	7a 8b       	std	Y+18, r23	; 0x12
    14a4:	8b 8b       	std	Y+19, r24	; 0x13
    14a6:	9c 8b       	std	Y+20, r25	; 0x14
    14a8:	6d 81       	ldd	r22, Y+5	; 0x05
    14aa:	7e 81       	ldd	r23, Y+6	; 0x06
    14ac:	8f 81       	ldd	r24, Y+7	; 0x07
    14ae:	98 85       	ldd	r25, Y+8	; 0x08
    14b0:	a6 01       	movw	r20, r12
    14b2:	95 01       	movw	r18, r10
    14b4:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    14b8:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    14bc:	88 27       	eor	r24, r24
    14be:	77 fd       	sbrc	r23, 7
    14c0:	80 95       	com	r24
    14c2:	98 2f       	mov	r25, r24
    14c4:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    14c8:	2c ed       	ldi	r18, 0xDC	; 220
    14ca:	38 eb       	ldi	r19, 0xB8	; 184
    14cc:	48 e0       	ldi	r20, 0x08	; 8
    14ce:	5e e3       	ldi	r21, 0x3E	; 62
    14d0:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    14d4:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    14d8:	2b 01       	movw	r4, r22
    14da:	3c 01       	movw	r6, r24
    14dc:	69 81       	ldd	r22, Y+1	; 0x01
    14de:	7a 81       	ldd	r23, Y+2	; 0x02
    14e0:	8b 81       	ldd	r24, Y+3	; 0x03
    14e2:	9c 81       	ldd	r25, Y+4	; 0x04
    14e4:	a6 01       	movw	r20, r12
    14e6:	95 01       	movw	r18, r10
    14e8:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    14ec:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    14f0:	88 27       	eor	r24, r24
    14f2:	77 fd       	sbrc	r23, 7
    14f4:	80 95       	com	r24
    14f6:	98 2f       	mov	r25, r24
    14f8:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    14fc:	2c ed       	ldi	r18, 0xDC	; 220
    14fe:	38 eb       	ldi	r19, 0xB8	; 184
    1500:	48 e0       	ldi	r20, 0x08	; 8
    1502:	5e e3       	ldi	r21, 0x3E	; 62
    1504:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1508:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    150c:	5b 01       	movw	r10, r22
    150e:	6c 01       	movw	r12, r24
    1510:	69 85       	ldd	r22, Y+9	; 0x09
    1512:	7a 85       	ldd	r23, Y+10	; 0x0a
    1514:	8b 85       	ldd	r24, Y+11	; 0x0b
    1516:	9c 85       	ldd	r25, Y+12	; 0x0c
    1518:	a8 01       	movw	r20, r16
    151a:	97 01       	movw	r18, r14
    151c:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    1520:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1524:	88 27       	eor	r24, r24
    1526:	77 fd       	sbrc	r23, 7
    1528:	80 95       	com	r24
    152a:	98 2f       	mov	r25, r24
    152c:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1530:	2c ed       	ldi	r18, 0xDC	; 220
    1532:	38 eb       	ldi	r19, 0xB8	; 184
    1534:	48 e0       	ldi	r20, 0x08	; 8
    1536:	5e e3       	ldi	r21, 0x3E	; 62
    1538:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    153c:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1540:	f4 01       	movw	r30, r8
    1542:	71 83       	std	Z+1, r23	; 0x01
    1544:	60 83       	st	Z, r22
    1546:	6d 81       	ldd	r22, Y+5	; 0x05
    1548:	7e 81       	ldd	r23, Y+6	; 0x06
    154a:	8f 81       	ldd	r24, Y+7	; 0x07
    154c:	98 85       	ldd	r25, Y+8	; 0x08
    154e:	a8 01       	movw	r20, r16
    1550:	97 01       	movw	r18, r14
    1552:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    1556:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    155a:	88 27       	eor	r24, r24
    155c:	77 fd       	sbrc	r23, 7
    155e:	80 95       	com	r24
    1560:	98 2f       	mov	r25, r24
    1562:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1566:	2c ed       	ldi	r18, 0xDC	; 220
    1568:	38 eb       	ldi	r19, 0xB8	; 184
    156a:	48 e0       	ldi	r20, 0x08	; 8
    156c:	5e e3       	ldi	r21, 0x3E	; 62
    156e:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1572:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1576:	f4 01       	movw	r30, r8
    1578:	73 83       	std	Z+3, r23	; 0x03
    157a:	62 83       	std	Z+2, r22	; 0x02
    157c:	69 81       	ldd	r22, Y+1	; 0x01
    157e:	7a 81       	ldd	r23, Y+2	; 0x02
    1580:	8b 81       	ldd	r24, Y+3	; 0x03
    1582:	9c 81       	ldd	r25, Y+4	; 0x04
    1584:	a8 01       	movw	r20, r16
    1586:	97 01       	movw	r18, r14
    1588:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    158c:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1590:	88 27       	eor	r24, r24
    1592:	77 fd       	sbrc	r23, 7
    1594:	80 95       	com	r24
    1596:	98 2f       	mov	r25, r24
    1598:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    159c:	2c ed       	ldi	r18, 0xDC	; 220
    159e:	38 eb       	ldi	r19, 0xB8	; 184
    15a0:	48 e0       	ldi	r20, 0x08	; 8
    15a2:	5e e3       	ldi	r21, 0x3E	; 62
    15a4:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    15a8:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    15ac:	f4 01       	movw	r30, r8
    15ae:	75 83       	std	Z+5, r23	; 0x05
    15b0:	64 83       	std	Z+4, r22	; 0x04
    15b2:	26 82       	std	Z+6, r2	; 0x06
    15b4:	10 86       	std	Z+8, r1	; 0x08
    15b6:	17 82       	std	Z+7, r1	; 0x07
    15b8:	81 e0       	ldi	r24, 0x01	; 1
    15ba:	62 e0       	ldi	r22, 0x02	; 2
    15bc:	43 2d       	mov	r20, r3
    15be:	29 89       	ldd	r18, Y+17	; 0x11
    15c0:	3a 89       	ldd	r19, Y+18	; 0x12
    15c2:	82 01       	movw	r16, r4
    15c4:	75 01       	movw	r14, r10
    15c6:	c2 2c       	mov	r12, r2
    15c8:	aa 24       	eor	r10, r10
    15ca:	bb 24       	eor	r11, r11
    15cc:	83 2c       	mov	r8, r3
    15ce:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <STEPPER_move>
    15d2:	8d b7       	in	r24, 0x3d	; 61
    15d4:	9e b7       	in	r25, 0x3e	; 62
    15d6:	09 96       	adiw	r24, 0x09	; 9
    15d8:	0f b6       	in	r0, 0x3f	; 63
    15da:	f8 94       	cli
    15dc:	9e bf       	out	0x3e, r25	; 62
    15de:	0f be       	out	0x3f, r0	; 63
    15e0:	8d bf       	out	0x3d, r24	; 61
=======
    166a:	2d b7       	in	r18, 0x3d	; 61
    166c:	3e b7       	in	r19, 0x3e	; 62
    166e:	29 50       	subi	r18, 0x09	; 9
    1670:	30 40       	sbci	r19, 0x00	; 0
    1672:	0f b6       	in	r0, 0x3f	; 63
    1674:	f8 94       	cli
    1676:	3e bf       	out	0x3e, r19	; 62
    1678:	0f be       	out	0x3f, r0	; 63
    167a:	2d bf       	out	0x3d, r18	; 61
    167c:	8d b6       	in	r8, 0x3d	; 61
    167e:	9e b6       	in	r9, 0x3e	; 62
    1680:	08 94       	sec
    1682:	81 1c       	adc	r8, r1
    1684:	91 1c       	adc	r9, r1
    1686:	6d 81       	ldd	r22, Y+5	; 0x05
    1688:	7e 81       	ldd	r23, Y+6	; 0x06
    168a:	8f 81       	ldd	r24, Y+7	; 0x07
    168c:	98 85       	ldd	r25, Y+8	; 0x08
    168e:	a8 01       	movw	r20, r16
    1690:	97 01       	movw	r18, r14
    1692:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1696:	2c ed       	ldi	r18, 0xDC	; 220
    1698:	38 eb       	ldi	r19, 0xB8	; 184
    169a:	48 e0       	ldi	r20, 0x08	; 8
    169c:	5e e3       	ldi	r21, 0x3E	; 62
    169e:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    16a2:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    16a6:	69 8f       	std	Y+25, r22	; 0x19
    16a8:	7a 8f       	std	Y+26, r23	; 0x1a
    16aa:	8b 8f       	std	Y+27, r24	; 0x1b
    16ac:	9c 8f       	std	Y+28, r25	; 0x1c
    16ae:	69 85       	ldd	r22, Y+9	; 0x09
    16b0:	7a 85       	ldd	r23, Y+10	; 0x0a
    16b2:	8b 85       	ldd	r24, Y+11	; 0x0b
    16b4:	9c 85       	ldd	r25, Y+12	; 0x0c
    16b6:	a8 01       	movw	r20, r16
    16b8:	97 01       	movw	r18, r14
    16ba:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    16be:	2c ed       	ldi	r18, 0xDC	; 220
    16c0:	38 eb       	ldi	r19, 0xB8	; 184
    16c2:	48 e0       	ldi	r20, 0x08	; 8
    16c4:	5e e3       	ldi	r21, 0x3E	; 62
    16c6:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    16ca:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    16ce:	6d 8f       	std	Y+29, r22	; 0x1d
    16d0:	7e 8f       	std	Y+30, r23	; 0x1e
    16d2:	8f 8f       	std	Y+31, r24	; 0x1f
    16d4:	98 a3       	std	Y+32, r25	; 0x20
    16d6:	6d 85       	ldd	r22, Y+13	; 0x0d
    16d8:	7e 85       	ldd	r23, Y+14	; 0x0e
    16da:	8f 85       	ldd	r24, Y+15	; 0x0f
    16dc:	98 89       	ldd	r25, Y+16	; 0x10
    16de:	a8 01       	movw	r20, r16
    16e0:	97 01       	movw	r18, r14
    16e2:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    16e6:	2c ed       	ldi	r18, 0xDC	; 220
    16e8:	38 eb       	ldi	r19, 0xB8	; 184
    16ea:	48 e0       	ldi	r20, 0x08	; 8
    16ec:	5e e3       	ldi	r21, 0x3E	; 62
    16ee:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    16f2:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    16f6:	2b 01       	movw	r4, r22
    16f8:	3c 01       	movw	r6, r24
    16fa:	6d 81       	ldd	r22, Y+5	; 0x05
    16fc:	7e 81       	ldd	r23, Y+6	; 0x06
    16fe:	8f 81       	ldd	r24, Y+7	; 0x07
    1700:	98 85       	ldd	r25, Y+8	; 0x08
    1702:	a6 01       	movw	r20, r12
    1704:	95 01       	movw	r18, r10
    1706:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    170a:	2c ed       	ldi	r18, 0xDC	; 220
    170c:	38 eb       	ldi	r19, 0xB8	; 184
    170e:	48 e0       	ldi	r20, 0x08	; 8
    1710:	5e e3       	ldi	r21, 0x3E	; 62
    1712:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1716:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    171a:	d4 01       	movw	r26, r8
    171c:	6d 93       	st	X+, r22
    171e:	7c 93       	st	X, r23
    1720:	69 85       	ldd	r22, Y+9	; 0x09
    1722:	7a 85       	ldd	r23, Y+10	; 0x0a
    1724:	8b 85       	ldd	r24, Y+11	; 0x0b
    1726:	9c 85       	ldd	r25, Y+12	; 0x0c
    1728:	a6 01       	movw	r20, r12
    172a:	95 01       	movw	r18, r10
    172c:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1730:	2c ed       	ldi	r18, 0xDC	; 220
    1732:	38 eb       	ldi	r19, 0xB8	; 184
    1734:	48 e0       	ldi	r20, 0x08	; 8
    1736:	5e e3       	ldi	r21, 0x3E	; 62
    1738:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    173c:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1740:	f4 01       	movw	r30, r8
    1742:	73 83       	std	Z+3, r23	; 0x03
    1744:	62 83       	std	Z+2, r22	; 0x02
    1746:	6d 85       	ldd	r22, Y+13	; 0x0d
    1748:	7e 85       	ldd	r23, Y+14	; 0x0e
    174a:	8f 85       	ldd	r24, Y+15	; 0x0f
    174c:	98 89       	ldd	r25, Y+16	; 0x10
    174e:	a6 01       	movw	r20, r12
    1750:	95 01       	movw	r18, r10
    1752:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1756:	2c ed       	ldi	r18, 0xDC	; 220
    1758:	38 eb       	ldi	r19, 0xB8	; 184
    175a:	48 e0       	ldi	r20, 0x08	; 8
    175c:	5e e3       	ldi	r21, 0x3E	; 62
    175e:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1762:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1766:	d4 01       	movw	r26, r8
    1768:	15 96       	adiw	r26, 0x05	; 5
    176a:	7c 93       	st	X, r23
    176c:	6e 93       	st	-X, r22
    176e:	14 97       	sbiw	r26, 0x04	; 4
    1770:	16 96       	adiw	r26, 0x06	; 6
    1772:	2c 92       	st	X, r2
    1774:	16 97       	sbiw	r26, 0x06	; 6
    1776:	18 96       	adiw	r26, 0x08	; 8
    1778:	1c 92       	st	X, r1
    177a:	1e 92       	st	-X, r1
    177c:	17 97       	sbiw	r26, 0x07	; 7
    177e:	81 e0       	ldi	r24, 0x01	; 1
    1780:	62 e0       	ldi	r22, 0x02	; 2
    1782:	43 2d       	mov	r20, r3
    1784:	29 8d       	ldd	r18, Y+25	; 0x19
    1786:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1788:	0d 8d       	ldd	r16, Y+29	; 0x1d
    178a:	1e 8d       	ldd	r17, Y+30	; 0x1e
    178c:	72 01       	movw	r14, r4
    178e:	c2 2c       	mov	r12, r2
    1790:	aa 24       	eor	r10, r10
    1792:	bb 24       	eor	r11, r11
    1794:	83 2c       	mov	r8, r3
    1796:	0e 94 52 17 	call	0x2ea4	; 0x2ea4 <STEPPER_move>
    179a:	81 e0       	ldi	r24, 0x01	; 1
    179c:	ed b7       	in	r30, 0x3d	; 61
    179e:	fe b7       	in	r31, 0x3e	; 62
    17a0:	39 96       	adiw	r30, 0x09	; 9
    17a2:	0f b6       	in	r0, 0x3f	; 63
    17a4:	f8 94       	cli
    17a6:	fe bf       	out	0x3e, r31	; 62
    17a8:	0f be       	out	0x3f, r0	; 63
    17aa:	ed bf       	out	0x3d, r30	; 61
>>>>>>> Lab6 Code
		step_Fwd_L, step_Num_L, step_Speed_L, step_Accel_L, arc_Brk, // Left
		step_Fwd_R, step_Num_R, step_Speed_R, step_Accel_R, arc_Brk); // Right
		return SUCCESS;
	}	
	return FAIL;
}
    17ac:	a0 96       	adiw	r28, 0x20	; 32
    17ae:	0f b6       	in	r0, 0x3f	; 63
    17b0:	f8 94       	cli
    17b2:	de bf       	out	0x3e, r29	; 62
    17b4:	0f be       	out	0x3f, r0	; 63
    17b6:	cd bf       	out	0x3d, r28	; 61
    17b8:	cf 91       	pop	r28
    17ba:	df 91       	pop	r29
    17bc:	1f 91       	pop	r17
    17be:	0f 91       	pop	r16
    17c0:	ff 90       	pop	r15
    17c2:	ef 90       	pop	r14
    17c4:	df 90       	pop	r13
    17c6:	cf 90       	pop	r12
    17c8:	bf 90       	pop	r11
    17ca:	af 90       	pop	r10
    17cc:	9f 90       	pop	r9
    17ce:	8f 90       	pop	r8
    17d0:	7f 90       	pop	r7
    17d2:	6f 90       	pop	r6
    17d4:	5f 90       	pop	r5
    17d6:	4f 90       	pop	r4
    17d8:	3f 90       	pop	r3
    17da:	2f 90       	pop	r2
    17dc:	08 95       	ret

000017de <move_arc_stwt>:
* Input Variables:	char
* Output Return:	float, float, float, float, BOOL
* Overview:			This moves the robot in any arc length
********************************************************************/
char move_arc_stwt(float arc_Radius, float arc_Length, float arc_Speed, float arc_Accel, BOOL arc_Brk)
{
    17de:	2f 92       	push	r2
    17e0:	3f 92       	push	r3
    17e2:	4f 92       	push	r4
    17e4:	5f 92       	push	r5
    17e6:	6f 92       	push	r6
    17e8:	7f 92       	push	r7
    17ea:	8f 92       	push	r8
    17ec:	9f 92       	push	r9
    17ee:	af 92       	push	r10
    17f0:	bf 92       	push	r11
    17f2:	cf 92       	push	r12
    17f4:	df 92       	push	r13
    17f6:	ef 92       	push	r14
    17f8:	ff 92       	push	r15
    17fa:	0f 93       	push	r16
    17fc:	1f 93       	push	r17
    17fe:	df 93       	push	r29
    1800:	cf 93       	push	r28
    1802:	cd b7       	in	r28, 0x3d	; 61
    1804:	de b7       	in	r29, 0x3e	; 62
    1806:	a0 97       	sbiw	r28, 0x20	; 32
    1808:	0f b6       	in	r0, 0x3f	; 63
    180a:	f8 94       	cli
    180c:	de bf       	out	0x3e, r29	; 62
    180e:	0f be       	out	0x3f, r0	; 63
    1810:	cd bf       	out	0x3d, r28	; 61
    1812:	2b 01       	movw	r4, r22
    1814:	3c 01       	movw	r6, r24
    1816:	2d 83       	std	Y+5, r18	; 0x05
    1818:	3e 83       	std	Y+6, r19	; 0x06
    181a:	4f 83       	std	Y+7, r20	; 0x07
    181c:	58 87       	std	Y+8, r21	; 0x08
    181e:	e9 86       	std	Y+9, r14	; 0x09
    1820:	fa 86       	std	Y+10, r15	; 0x0a
    1822:	0b 87       	std	Y+11, r16	; 0x0b
    1824:	1c 87       	std	Y+12, r17	; 0x0c
    1826:	ad 86       	std	Y+13, r10	; 0x0d
    1828:	be 86       	std	Y+14, r11	; 0x0e
    182a:	cf 86       	std	Y+15, r12	; 0x0f
    182c:	d8 8a       	std	Y+16, r13	; 0x10
    182e:	28 2c       	mov	r2, r8
	
	BOOL step_Fwd_L = (arc_Length>0);
    1830:	33 24       	eor	r3, r3
    1832:	ca 01       	movw	r24, r20
    1834:	b9 01       	movw	r22, r18
    1836:	20 e0       	ldi	r18, 0x00	; 0
    1838:	30 e0       	ldi	r19, 0x00	; 0
    183a:	40 e0       	ldi	r20, 0x00	; 0
    183c:	50 e0       	ldi	r21, 0x00	; 0
    183e:	0e 94 dc 28 	call	0x51b8	; 0x51b8 <__gesf2>
    1842:	18 16       	cp	r1, r24
    1844:	14 f4       	brge	.+4      	; 0x184a <move_arc_stwt+0x6c>
    1846:	33 24       	eor	r3, r3
    1848:	33 94       	inc	r3
	BOOL step_Fwd_R = (arc_Length>0);
<<<<<<< HEAD
	int step_Num = arc_Length/D_STEP;
    1660:	bf 01       	movw	r22, r30
    1662:	88 27       	eor	r24, r24
    1664:	77 fd       	sbrc	r23, 7
    1666:	80 95       	com	r24
    1668:	98 2f       	mov	r25, r24
    166a:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    166e:	69 87       	std	Y+9, r22	; 0x09
    1670:	7a 87       	std	Y+10, r23	; 0x0a
    1672:	8b 87       	std	Y+11, r24	; 0x0b
    1674:	9c 87       	std	Y+12, r25	; 0x0c
	int step_Speed = arc_Speed/D_STEP;
    1676:	b5 01       	movw	r22, r10
    1678:	88 27       	eor	r24, r24
    167a:	77 fd       	sbrc	r23, 7
    167c:	80 95       	com	r24
    167e:	98 2f       	mov	r25, r24
    1680:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1684:	6d 83       	std	Y+5, r22	; 0x05
    1686:	7e 83       	std	Y+6, r23	; 0x06
    1688:	8f 83       	std	Y+7, r24	; 0x07
    168a:	98 87       	std	Y+8, r25	; 0x08
	int step_Accel = arc_Accel/D_STEP;
    168c:	b6 01       	movw	r22, r12
    168e:	88 27       	eor	r24, r24
    1690:	77 fd       	sbrc	r23, 7
    1692:	80 95       	com	r24
    1694:	98 2f       	mov	r25, r24
    1696:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    169a:	69 83       	std	Y+1, r22	; 0x01
    169c:	7a 83       	std	Y+2, r23	; 0x02
    169e:	8b 83       	std	Y+3, r24	; 0x03
    16a0:	9c 83       	std	Y+4, r25	; 0x04
=======
	float step_Num = abs(arc_Length/D_STEP);
    184a:	6d 81       	ldd	r22, Y+5	; 0x05
    184c:	7e 81       	ldd	r23, Y+6	; 0x06
    184e:	8f 81       	ldd	r24, Y+7	; 0x07
    1850:	98 85       	ldd	r25, Y+8	; 0x08
    1852:	2c ed       	ldi	r18, 0xDC	; 220
    1854:	38 eb       	ldi	r19, 0xB8	; 184
    1856:	48 e0       	ldi	r20, 0x08	; 8
    1858:	5e e3       	ldi	r21, 0x3E	; 62
    185a:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    185e:	0e 94 f9 27 	call	0x4ff2	; 0x4ff2 <__fixsfsi>
    1862:	9b 01       	movw	r18, r22
    1864:	77 ff       	sbrs	r23, 7
    1866:	03 c0       	rjmp	.+6      	; 0x186e <move_arc_stwt+0x90>
    1868:	30 95       	com	r19
    186a:	21 95       	neg	r18
    186c:	3f 4f       	sbci	r19, 0xFF	; 255
    186e:	b9 01       	movw	r22, r18
    1870:	88 27       	eor	r24, r24
    1872:	77 fd       	sbrc	r23, 7
    1874:	80 95       	com	r24
    1876:	98 2f       	mov	r25, r24
    1878:	0e 94 2c 28 	call	0x5058	; 0x5058 <__floatsisf>
    187c:	69 83       	std	Y+1, r22	; 0x01
    187e:	7a 83       	std	Y+2, r23	; 0x02
    1880:	8b 83       	std	Y+3, r24	; 0x03
    1882:	9c 83       	std	Y+4, r25	; 0x04
	float step_Speed = abs(arc_Speed/D_STEP);
    1884:	69 85       	ldd	r22, Y+9	; 0x09
    1886:	7a 85       	ldd	r23, Y+10	; 0x0a
    1888:	8b 85       	ldd	r24, Y+11	; 0x0b
    188a:	9c 85       	ldd	r25, Y+12	; 0x0c
    188c:	2c ed       	ldi	r18, 0xDC	; 220
    188e:	38 eb       	ldi	r19, 0xB8	; 184
    1890:	48 e0       	ldi	r20, 0x08	; 8
    1892:	5e e3       	ldi	r21, 0x3E	; 62
    1894:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1898:	0e 94 f9 27 	call	0x4ff2	; 0x4ff2 <__fixsfsi>
    189c:	9b 01       	movw	r18, r22
    189e:	77 ff       	sbrs	r23, 7
    18a0:	03 c0       	rjmp	.+6      	; 0x18a8 <move_arc_stwt+0xca>
    18a2:	30 95       	com	r19
    18a4:	21 95       	neg	r18
    18a6:	3f 4f       	sbci	r19, 0xFF	; 255
    18a8:	b9 01       	movw	r22, r18
    18aa:	88 27       	eor	r24, r24
    18ac:	77 fd       	sbrc	r23, 7
    18ae:	80 95       	com	r24
    18b0:	98 2f       	mov	r25, r24
    18b2:	0e 94 2c 28 	call	0x5058	; 0x5058 <__floatsisf>
    18b6:	4b 01       	movw	r8, r22
    18b8:	5c 01       	movw	r10, r24
	float step_Accel = abs(arc_Accel/D_STEP);
    18ba:	6d 85       	ldd	r22, Y+13	; 0x0d
    18bc:	7e 85       	ldd	r23, Y+14	; 0x0e
    18be:	8f 85       	ldd	r24, Y+15	; 0x0f
    18c0:	98 89       	ldd	r25, Y+16	; 0x10
    18c2:	2c ed       	ldi	r18, 0xDC	; 220
    18c4:	38 eb       	ldi	r19, 0xB8	; 184
    18c6:	48 e0       	ldi	r20, 0x08	; 8
    18c8:	5e e3       	ldi	r21, 0x3E	; 62
    18ca:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    18ce:	0e 94 f9 27 	call	0x4ff2	; 0x4ff2 <__fixsfsi>
    18d2:	9b 01       	movw	r18, r22
    18d4:	77 ff       	sbrs	r23, 7
    18d6:	03 c0       	rjmp	.+6      	; 0x18de <move_arc_stwt+0x100>
    18d8:	30 95       	com	r19
    18da:	21 95       	neg	r18
    18dc:	3f 4f       	sbci	r19, 0xFF	; 255
    18de:	b9 01       	movw	r22, r18
    18e0:	88 27       	eor	r24, r24
    18e2:	77 fd       	sbrc	r23, 7
    18e4:	80 95       	com	r24
    18e6:	98 2f       	mov	r25, r24
    18e8:	0e 94 2c 28 	call	0x5058	; 0x5058 <__floatsisf>
    18ec:	6b 01       	movw	r12, r22
    18ee:	7c 01       	movw	r14, r24


	if(arc_Radius == NO_TURN){
    18f0:	c3 01       	movw	r24, r6
    18f2:	b2 01       	movw	r22, r4
    18f4:	20 e0       	ldi	r18, 0x00	; 0
    18f6:	30 e0       	ldi	r19, 0x00	; 0
    18f8:	40 e0       	ldi	r20, 0x00	; 0
    18fa:	5f e4       	ldi	r21, 0x4F	; 79
    18fc:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    1900:	88 23       	and	r24, r24
    1902:	a1 f5       	brne	.+104    	; 0x196c <move_arc_stwt+0x18e>
		STEPPER_move_stwt( STEPPER_BOTH, 
    1904:	69 81       	ldd	r22, Y+1	; 0x01
    1906:	7a 81       	ldd	r23, Y+2	; 0x02
    1908:	8b 81       	ldd	r24, Y+3	; 0x03
    190a:	9c 81       	ldd	r25, Y+4	; 0x04
    190c:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1910:	2b 01       	movw	r4, r22
    1912:	3c 01       	movw	r6, r24
    1914:	c5 01       	movw	r24, r10
    1916:	b4 01       	movw	r22, r8
    1918:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    191c:	4b 01       	movw	r8, r22
    191e:	5c 01       	movw	r10, r24
    1920:	c7 01       	movw	r24, r14
    1922:	b6 01       	movw	r22, r12
    1924:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1928:	6b 01       	movw	r12, r22
    192a:	7c 01       	movw	r14, r24
    192c:	2d b7       	in	r18, 0x3d	; 61
    192e:	3e b7       	in	r19, 0x3e	; 62
    1930:	29 50       	subi	r18, 0x09	; 9
    1932:	30 40       	sbci	r19, 0x00	; 0
    1934:	0f b6       	in	r0, 0x3f	; 63
    1936:	f8 94       	cli
    1938:	3e bf       	out	0x3e, r19	; 62
    193a:	0f be       	out	0x3f, r0	; 63
    193c:	2d bf       	out	0x3d, r18	; 61
    193e:	ed b7       	in	r30, 0x3d	; 61
    1940:	fe b7       	in	r31, 0x3e	; 62
    1942:	31 96       	adiw	r30, 0x01	; 1
    1944:	ad b7       	in	r26, 0x3d	; 61
    1946:	be b7       	in	r27, 0x3e	; 62
    1948:	12 96       	adiw	r26, 0x02	; 2
    194a:	5c 92       	st	X, r5
    194c:	4e 92       	st	-X, r4
    194e:	11 97       	sbiw	r26, 0x01	; 1
    1950:	93 82       	std	Z+3, r9	; 0x03
    1952:	82 82       	std	Z+2, r8	; 0x02
    1954:	75 83       	std	Z+5, r23	; 0x05
    1956:	64 83       	std	Z+4, r22	; 0x04
    1958:	26 82       	std	Z+6, r2	; 0x06
    195a:	10 86       	std	Z+8, r1	; 0x08
    195c:	17 82       	std	Z+7, r1	; 0x07
    195e:	80 e0       	ldi	r24, 0x00	; 0
    1960:	62 e0       	ldi	r22, 0x02	; 2
    1962:	43 2d       	mov	r20, r3
    1964:	92 01       	movw	r18, r4
    1966:	84 01       	movw	r16, r8
    1968:	76 01       	movw	r14, r12
    196a:	c1 c1       	rjmp	.+898    	; 0x1cee <move_arc_stwt+0x510>
>>>>>>> Lab6 Code
		step_Fwd_L, step_Num, step_Speed, step_Accel, arc_Brk, // Left
		step_Fwd_R, step_Num, step_Speed, step_Accel, arc_Brk); // Right
		return SUCCESS;
	}
	
	if(arc_Radius == POINT_TURN){				
    196c:	c3 01       	movw	r24, r6
    196e:	b2 01       	movw	r22, r4
    1970:	20 e0       	ldi	r18, 0x00	; 0
    1972:	30 e0       	ldi	r19, 0x00	; 0
    1974:	40 e0       	ldi	r20, 0x00	; 0
    1976:	50 e0       	ldi	r21, 0x00	; 0
    1978:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    197c:	88 23       	and	r24, r24
    197e:	e9 f5       	brne	.+122    	; 0x19fa <move_arc_stwt+0x21c>
		STEPPER_move_stwt( STEPPER_BOTH, 
<<<<<<< HEAD
    16aa:	69 85       	ldd	r22, Y+9	; 0x09
    16ac:	7a 85       	ldd	r23, Y+10	; 0x0a
    16ae:	8b 85       	ldd	r24, Y+11	; 0x0b
    16b0:	9c 85       	ldd	r25, Y+12	; 0x0c
    16b2:	2c ed       	ldi	r18, 0xDC	; 220
    16b4:	38 eb       	ldi	r19, 0xB8	; 184
    16b6:	48 e0       	ldi	r20, 0x08	; 8
    16b8:	5e e3       	ldi	r21, 0x3E	; 62
    16ba:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    16be:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    16c2:	5b 01       	movw	r10, r22
    16c4:	6d 81       	ldd	r22, Y+5	; 0x05
    16c6:	7e 81       	ldd	r23, Y+6	; 0x06
    16c8:	8f 81       	ldd	r24, Y+7	; 0x07
    16ca:	98 85       	ldd	r25, Y+8	; 0x08
    16cc:	2c ed       	ldi	r18, 0xDC	; 220
    16ce:	38 eb       	ldi	r19, 0xB8	; 184
    16d0:	48 e0       	ldi	r20, 0x08	; 8
    16d2:	5e e3       	ldi	r21, 0x3E	; 62
    16d4:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    16d8:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    16dc:	8b 01       	movw	r16, r22
    16de:	69 81       	ldd	r22, Y+1	; 0x01
    16e0:	7a 81       	ldd	r23, Y+2	; 0x02
    16e2:	8b 81       	ldd	r24, Y+3	; 0x03
    16e4:	9c 81       	ldd	r25, Y+4	; 0x04
    16e6:	2c ed       	ldi	r18, 0xDC	; 220
    16e8:	38 eb       	ldi	r19, 0xB8	; 184
    16ea:	48 e0       	ldi	r20, 0x08	; 8
    16ec:	5e e3       	ldi	r21, 0x3E	; 62
    16ee:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    16f2:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    16f6:	7b 01       	movw	r14, r22
    16f8:	8d b7       	in	r24, 0x3d	; 61
    16fa:	9e b7       	in	r25, 0x3e	; 62
    16fc:	09 97       	sbiw	r24, 0x09	; 9
    16fe:	0f b6       	in	r0, 0x3f	; 63
    1700:	f8 94       	cli
    1702:	9e bf       	out	0x3e, r25	; 62
    1704:	0f be       	out	0x3f, r0	; 63
    1706:	8d bf       	out	0x3d, r24	; 61
    1708:	ed b7       	in	r30, 0x3d	; 61
    170a:	fe b7       	in	r31, 0x3e	; 62
    170c:	31 96       	adiw	r30, 0x01	; 1
    170e:	40 e0       	ldi	r20, 0x00	; 0
    1710:	33 20       	and	r3, r3
    1712:	09 f4       	brne	.+2      	; 0x1716 <move_arc__stwt+0x100>
    1714:	41 e0       	ldi	r20, 0x01	; 1
    1716:	b1 82       	std	Z+1, r11	; 0x01
    1718:	a0 82       	st	Z, r10
    171a:	13 83       	std	Z+3, r17	; 0x03
    171c:	02 83       	std	Z+2, r16	; 0x02
    171e:	f5 82       	std	Z+5, r15	; 0x05
    1720:	e4 82       	std	Z+4, r14	; 0x04
    1722:	26 82       	std	Z+6, r2	; 0x06
    1724:	10 86       	std	Z+8, r1	; 0x08
    1726:	17 82       	std	Z+7, r1	; 0x07
    1728:	80 e0       	ldi	r24, 0x00	; 0
    172a:	62 e0       	ldi	r22, 0x02	; 2
    172c:	95 01       	movw	r18, r10
    172e:	c2 2c       	mov	r12, r2
    1730:	aa 24       	eor	r10, r10
    1732:	bb 24       	eor	r11, r11
    1734:	83 2c       	mov	r8, r3
    1736:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <STEPPER_move>
    173a:	ed b7       	in	r30, 0x3d	; 61
    173c:	fe b7       	in	r31, 0x3e	; 62
    173e:	39 96       	adiw	r30, 0x09	; 9
    1740:	0f b6       	in	r0, 0x3f	; 63
    1742:	f8 94       	cli
    1744:	fe bf       	out	0x3e, r31	; 62
    1746:	0f be       	out	0x3f, r0	; 63
    1748:	ed bf       	out	0x3d, r30	; 61
    174a:	ce c1       	rjmp	.+924    	; 0x1ae8 <move_arc__stwt+0x4d2>
    174c:	b7 01       	movw	r22, r14
    174e:	88 27       	eor	r24, r24
    1750:	77 fd       	sbrc	r23, 7
    1752:	80 95       	com	r24
    1754:	98 2f       	mov	r25, r24
	int step_Speed_L;
	int step_Speed_R;	
	int step_Accel_L;
	int step_Accel_R;
=======
    1980:	69 81       	ldd	r22, Y+1	; 0x01
    1982:	7a 81       	ldd	r23, Y+2	; 0x02
    1984:	8b 81       	ldd	r24, Y+3	; 0x03
    1986:	9c 81       	ldd	r25, Y+4	; 0x04
    1988:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    198c:	3b 01       	movw	r6, r22
    198e:	c5 01       	movw	r24, r10
    1990:	b4 01       	movw	r22, r8
    1992:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1996:	8b 01       	movw	r16, r22
    1998:	c7 01       	movw	r24, r14
    199a:	b6 01       	movw	r22, r12
    199c:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    19a0:	7b 01       	movw	r14, r22
    19a2:	2d b7       	in	r18, 0x3d	; 61
    19a4:	3e b7       	in	r19, 0x3e	; 62
    19a6:	29 50       	subi	r18, 0x09	; 9
    19a8:	30 40       	sbci	r19, 0x00	; 0
    19aa:	0f b6       	in	r0, 0x3f	; 63
    19ac:	f8 94       	cli
    19ae:	3e bf       	out	0x3e, r19	; 62
    19b0:	0f be       	out	0x3f, r0	; 63
    19b2:	2d bf       	out	0x3d, r18	; 61
    19b4:	ed b7       	in	r30, 0x3d	; 61
    19b6:	fe b7       	in	r31, 0x3e	; 62
    19b8:	31 96       	adiw	r30, 0x01	; 1
    19ba:	40 e0       	ldi	r20, 0x00	; 0
    19bc:	33 20       	and	r3, r3
    19be:	09 f4       	brne	.+2      	; 0x19c2 <move_arc_stwt+0x1e4>
    19c0:	41 e0       	ldi	r20, 0x01	; 1
    19c2:	71 82       	std	Z+1, r7	; 0x01
    19c4:	60 82       	st	Z, r6
    19c6:	13 83       	std	Z+3, r17	; 0x03
    19c8:	02 83       	std	Z+2, r16	; 0x02
    19ca:	f5 82       	std	Z+5, r15	; 0x05
    19cc:	e4 82       	std	Z+4, r14	; 0x04
    19ce:	26 82       	std	Z+6, r2	; 0x06
    19d0:	10 86       	std	Z+8, r1	; 0x08
    19d2:	17 82       	std	Z+7, r1	; 0x07
    19d4:	80 e0       	ldi	r24, 0x00	; 0
    19d6:	62 e0       	ldi	r22, 0x02	; 2
    19d8:	93 01       	movw	r18, r6
    19da:	c2 2c       	mov	r12, r2
    19dc:	aa 24       	eor	r10, r10
    19de:	bb 24       	eor	r11, r11
    19e0:	83 2c       	mov	r8, r3
    19e2:	0e 94 52 17 	call	0x2ea4	; 0x2ea4 <STEPPER_move>
    19e6:	81 e0       	ldi	r24, 0x01	; 1
    19e8:	ad b7       	in	r26, 0x3d	; 61
    19ea:	be b7       	in	r27, 0x3e	; 62
    19ec:	19 96       	adiw	r26, 0x09	; 9
    19ee:	0f b6       	in	r0, 0x3f	; 63
    19f0:	f8 94       	cli
    19f2:	be bf       	out	0x3e, r27	; 62
    19f4:	0f be       	out	0x3f, r0	; 63
    19f6:	ad bf       	out	0x3d, r26	; 61
    19f8:	89 c1       	rjmp	.+786    	; 0x1d0c <move_arc_stwt+0x52e>
	float step_Speed_L;
	float step_Speed_R;	
	float step_Accel_L;
	float step_Accel_R;
>>>>>>> Lab6 Code
	
	if(arc_Radius > 0){
    19fa:	c3 01       	movw	r24, r6
    19fc:	b2 01       	movw	r22, r4
    19fe:	20 e0       	ldi	r18, 0x00	; 0
    1a00:	30 e0       	ldi	r19, 0x00	; 0
    1a02:	40 e0       	ldi	r20, 0x00	; 0
    1a04:	50 e0       	ldi	r21, 0x00	; 0
    1a06:	0e 94 dc 28 	call	0x51b8	; 0x51b8 <__gesf2>
    1a0a:	18 16       	cp	r1, r24
    1a0c:	0c f0       	brlt	.+2      	; 0x1a10 <move_arc_stwt+0x232>
    1a0e:	b1 c0       	rjmp	.+354    	; 0x1b72 <move_arc_stwt+0x394>
		arc_Length_L = arc_Length * (1 - WHEEL_BASE/arc_Radius);
<<<<<<< HEAD
    175e:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1762:	7b 01       	movw	r14, r22
    1764:	8c 01       	movw	r16, r24
    1766:	66 e6       	ldi	r22, 0x66	; 102
    1768:	76 e6       	ldi	r23, 0x66	; 102
    176a:	8a ea       	ldi	r24, 0xAA	; 170
    176c:	91 ec       	ldi	r25, 0xC1	; 193
    176e:	a8 01       	movw	r20, r16
    1770:	97 01       	movw	r18, r14
    1772:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1776:	20 e0       	ldi	r18, 0x00	; 0
    1778:	30 e0       	ldi	r19, 0x00	; 0
    177a:	40 e8       	ldi	r20, 0x80	; 128
    177c:	5f e3       	ldi	r21, 0x3F	; 63
    177e:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
    1782:	5b 01       	movw	r10, r22
    1784:	6c 01       	movw	r12, r24
		arc_Length_R = arc_Length * (1 + WHEEL_BASE/arc_Radius);
    1786:	66 e6       	ldi	r22, 0x66	; 102
    1788:	76 e6       	ldi	r23, 0x66	; 102
    178a:	8a ea       	ldi	r24, 0xAA	; 170
    178c:	91 e4       	ldi	r25, 0x41	; 65
    178e:	a8 01       	movw	r20, r16
    1790:	97 01       	movw	r18, r14
    1792:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1796:	20 e0       	ldi	r18, 0x00	; 0
    1798:	30 e0       	ldi	r19, 0x00	; 0
    179a:	40 e8       	ldi	r20, 0x80	; 128
    179c:	5f e3       	ldi	r21, 0x3F	; 63
    179e:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
    17a2:	7b 01       	movw	r14, r22
    17a4:	8c 01       	movw	r16, r24
=======
    1a10:	66 e6       	ldi	r22, 0x66	; 102
    1a12:	76 e6       	ldi	r23, 0x66	; 102
    1a14:	8a ea       	ldi	r24, 0xAA	; 170
    1a16:	91 ec       	ldi	r25, 0xC1	; 193
    1a18:	a3 01       	movw	r20, r6
    1a1a:	92 01       	movw	r18, r4
    1a1c:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1a20:	20 e0       	ldi	r18, 0x00	; 0
    1a22:	30 e0       	ldi	r19, 0x00	; 0
    1a24:	40 e8       	ldi	r20, 0x80	; 128
    1a26:	5f e3       	ldi	r21, 0x3F	; 63
    1a28:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    1a2c:	7b 01       	movw	r14, r22
    1a2e:	8c 01       	movw	r16, r24
		arc_Length_R = arc_Length * (1 + WHEEL_BASE/arc_Radius);
    1a30:	66 e6       	ldi	r22, 0x66	; 102
    1a32:	76 e6       	ldi	r23, 0x66	; 102
    1a34:	8a ea       	ldi	r24, 0xAA	; 170
    1a36:	91 e4       	ldi	r25, 0x41	; 65
    1a38:	a3 01       	movw	r20, r6
    1a3a:	92 01       	movw	r18, r4
    1a3c:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1a40:	20 e0       	ldi	r18, 0x00	; 0
    1a42:	30 e0       	ldi	r19, 0x00	; 0
    1a44:	40 e8       	ldi	r20, 0x80	; 128
    1a46:	5f e3       	ldi	r21, 0x3F	; 63
    1a48:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    1a4c:	5b 01       	movw	r10, r22
    1a4e:	6c 01       	movw	r12, r24
>>>>>>> Lab6 Code
		arc_Accel_L = arc_Accel * (1 - WHEEL_BASE/arc_Radius);
		arc_Accel_R = arc_Accel * (1 + WHEEL_BASE/arc_Radius);
		step_Accel_L = arc_Accel_L/D_STEP;
		step_Accel_R = arc_Accel_R/D_STEP;
		
		STEPPER_move_stwt( STEPPER_BOTH, 
<<<<<<< HEAD
    17a6:	8d b7       	in	r24, 0x3d	; 61
    17a8:	9e b7       	in	r25, 0x3e	; 62
    17aa:	09 97       	sbiw	r24, 0x09	; 9
    17ac:	0f b6       	in	r0, 0x3f	; 63
    17ae:	f8 94       	cli
    17b0:	9e bf       	out	0x3e, r25	; 62
    17b2:	0f be       	out	0x3f, r0	; 63
    17b4:	8d bf       	out	0x3d, r24	; 61
    17b6:	8d b6       	in	r8, 0x3d	; 61
    17b8:	9e b6       	in	r9, 0x3e	; 62
    17ba:	08 94       	sec
    17bc:	81 1c       	adc	r8, r1
    17be:	91 1c       	adc	r9, r1
    17c0:	69 85       	ldd	r22, Y+9	; 0x09
    17c2:	7a 85       	ldd	r23, Y+10	; 0x0a
    17c4:	8b 85       	ldd	r24, Y+11	; 0x0b
    17c6:	9c 85       	ldd	r25, Y+12	; 0x0c
    17c8:	a6 01       	movw	r20, r12
    17ca:	95 01       	movw	r18, r10
    17cc:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    17d0:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    17d4:	88 27       	eor	r24, r24
    17d6:	77 fd       	sbrc	r23, 7
    17d8:	80 95       	com	r24
    17da:	98 2f       	mov	r25, r24
    17dc:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    17e0:	2c ed       	ldi	r18, 0xDC	; 220
    17e2:	38 eb       	ldi	r19, 0xB8	; 184
    17e4:	48 e0       	ldi	r20, 0x08	; 8
    17e6:	5e e3       	ldi	r21, 0x3E	; 62
    17e8:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    17ec:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    17f0:	6d 87       	std	Y+13, r22	; 0x0d
    17f2:	7e 87       	std	Y+14, r23	; 0x0e
    17f4:	8f 87       	std	Y+15, r24	; 0x0f
    17f6:	98 8b       	std	Y+16, r25	; 0x10
    17f8:	6d 81       	ldd	r22, Y+5	; 0x05
    17fa:	7e 81       	ldd	r23, Y+6	; 0x06
    17fc:	8f 81       	ldd	r24, Y+7	; 0x07
    17fe:	98 85       	ldd	r25, Y+8	; 0x08
    1800:	a6 01       	movw	r20, r12
    1802:	95 01       	movw	r18, r10
    1804:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    1808:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    180c:	88 27       	eor	r24, r24
    180e:	77 fd       	sbrc	r23, 7
    1810:	80 95       	com	r24
    1812:	98 2f       	mov	r25, r24
    1814:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1818:	2c ed       	ldi	r18, 0xDC	; 220
    181a:	38 eb       	ldi	r19, 0xB8	; 184
    181c:	48 e0       	ldi	r20, 0x08	; 8
    181e:	5e e3       	ldi	r21, 0x3E	; 62
    1820:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1824:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1828:	2b 01       	movw	r4, r22
    182a:	3c 01       	movw	r6, r24
    182c:	69 81       	ldd	r22, Y+1	; 0x01
    182e:	7a 81       	ldd	r23, Y+2	; 0x02
    1830:	8b 81       	ldd	r24, Y+3	; 0x03
    1832:	9c 81       	ldd	r25, Y+4	; 0x04
    1834:	a6 01       	movw	r20, r12
    1836:	95 01       	movw	r18, r10
    1838:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    183c:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1840:	88 27       	eor	r24, r24
    1842:	77 fd       	sbrc	r23, 7
    1844:	80 95       	com	r24
    1846:	98 2f       	mov	r25, r24
    1848:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    184c:	2c ed       	ldi	r18, 0xDC	; 220
    184e:	38 eb       	ldi	r19, 0xB8	; 184
    1850:	48 e0       	ldi	r20, 0x08	; 8
    1852:	5e e3       	ldi	r21, 0x3E	; 62
    1854:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1858:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    185c:	5b 01       	movw	r10, r22
    185e:	6c 01       	movw	r12, r24
    1860:	69 85       	ldd	r22, Y+9	; 0x09
    1862:	7a 85       	ldd	r23, Y+10	; 0x0a
    1864:	8b 85       	ldd	r24, Y+11	; 0x0b
    1866:	9c 85       	ldd	r25, Y+12	; 0x0c
    1868:	a8 01       	movw	r20, r16
    186a:	97 01       	movw	r18, r14
    186c:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    1870:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1874:	88 27       	eor	r24, r24
    1876:	77 fd       	sbrc	r23, 7
    1878:	80 95       	com	r24
    187a:	98 2f       	mov	r25, r24
    187c:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1880:	2c ed       	ldi	r18, 0xDC	; 220
    1882:	38 eb       	ldi	r19, 0xB8	; 184
    1884:	48 e0       	ldi	r20, 0x08	; 8
    1886:	5e e3       	ldi	r21, 0x3E	; 62
    1888:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    188c:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1890:	f4 01       	movw	r30, r8
    1892:	71 83       	std	Z+1, r23	; 0x01
    1894:	60 83       	st	Z, r22
    1896:	6d 81       	ldd	r22, Y+5	; 0x05
    1898:	7e 81       	ldd	r23, Y+6	; 0x06
    189a:	8f 81       	ldd	r24, Y+7	; 0x07
    189c:	98 85       	ldd	r25, Y+8	; 0x08
    189e:	a8 01       	movw	r20, r16
    18a0:	97 01       	movw	r18, r14
    18a2:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    18a6:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    18aa:	88 27       	eor	r24, r24
    18ac:	77 fd       	sbrc	r23, 7
    18ae:	80 95       	com	r24
    18b0:	98 2f       	mov	r25, r24
    18b2:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    18b6:	2c ed       	ldi	r18, 0xDC	; 220
    18b8:	38 eb       	ldi	r19, 0xB8	; 184
    18ba:	48 e0       	ldi	r20, 0x08	; 8
    18bc:	5e e3       	ldi	r21, 0x3E	; 62
    18be:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    18c2:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    18c6:	f4 01       	movw	r30, r8
    18c8:	73 83       	std	Z+3, r23	; 0x03
    18ca:	62 83       	std	Z+2, r22	; 0x02
    18cc:	69 81       	ldd	r22, Y+1	; 0x01
    18ce:	7a 81       	ldd	r23, Y+2	; 0x02
    18d0:	8b 81       	ldd	r24, Y+3	; 0x03
    18d2:	9c 81       	ldd	r25, Y+4	; 0x04
    18d4:	a8 01       	movw	r20, r16
    18d6:	97 01       	movw	r18, r14
    18d8:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    18dc:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    18e0:	88 27       	eor	r24, r24
    18e2:	77 fd       	sbrc	r23, 7
    18e4:	80 95       	com	r24
    18e6:	98 2f       	mov	r25, r24
    18e8:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    18ec:	2c ed       	ldi	r18, 0xDC	; 220
    18ee:	38 eb       	ldi	r19, 0xB8	; 184
    18f0:	48 e0       	ldi	r20, 0x08	; 8
    18f2:	5e e3       	ldi	r21, 0x3E	; 62
    18f4:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    18f8:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    18fc:	f4 01       	movw	r30, r8
    18fe:	75 83       	std	Z+5, r23	; 0x05
    1900:	64 83       	std	Z+4, r22	; 0x04
    1902:	26 82       	std	Z+6, r2	; 0x06
    1904:	10 86       	std	Z+8, r1	; 0x08
    1906:	17 82       	std	Z+7, r1	; 0x07
    1908:	80 e0       	ldi	r24, 0x00	; 0
    190a:	62 e0       	ldi	r22, 0x02	; 2
    190c:	43 2d       	mov	r20, r3
    190e:	2d 85       	ldd	r18, Y+13	; 0x0d
    1910:	3e 85       	ldd	r19, Y+14	; 0x0e
    1912:	da c0       	rjmp	.+436    	; 0x1ac8 <move_arc__stwt+0x4b2>
=======
    1a50:	ed b7       	in	r30, 0x3d	; 61
    1a52:	fe b7       	in	r31, 0x3e	; 62
    1a54:	39 97       	sbiw	r30, 0x09	; 9
    1a56:	0f b6       	in	r0, 0x3f	; 63
    1a58:	f8 94       	cli
    1a5a:	fe bf       	out	0x3e, r31	; 62
    1a5c:	0f be       	out	0x3f, r0	; 63
    1a5e:	ed bf       	out	0x3d, r30	; 61
    1a60:	8d b6       	in	r8, 0x3d	; 61
    1a62:	9e b6       	in	r9, 0x3e	; 62
    1a64:	08 94       	sec
    1a66:	81 1c       	adc	r8, r1
    1a68:	91 1c       	adc	r9, r1
    1a6a:	6d 81       	ldd	r22, Y+5	; 0x05
    1a6c:	7e 81       	ldd	r23, Y+6	; 0x06
    1a6e:	8f 81       	ldd	r24, Y+7	; 0x07
    1a70:	98 85       	ldd	r25, Y+8	; 0x08
    1a72:	a8 01       	movw	r20, r16
    1a74:	97 01       	movw	r18, r14
    1a76:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1a7a:	2c ed       	ldi	r18, 0xDC	; 220
    1a7c:	38 eb       	ldi	r19, 0xB8	; 184
    1a7e:	48 e0       	ldi	r20, 0x08	; 8
    1a80:	5e e3       	ldi	r21, 0x3E	; 62
    1a82:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1a86:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1a8a:	69 8b       	std	Y+17, r22	; 0x11
    1a8c:	7a 8b       	std	Y+18, r23	; 0x12
    1a8e:	8b 8b       	std	Y+19, r24	; 0x13
    1a90:	9c 8b       	std	Y+20, r25	; 0x14
    1a92:	69 85       	ldd	r22, Y+9	; 0x09
    1a94:	7a 85       	ldd	r23, Y+10	; 0x0a
    1a96:	8b 85       	ldd	r24, Y+11	; 0x0b
    1a98:	9c 85       	ldd	r25, Y+12	; 0x0c
    1a9a:	a8 01       	movw	r20, r16
    1a9c:	97 01       	movw	r18, r14
    1a9e:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1aa2:	2c ed       	ldi	r18, 0xDC	; 220
    1aa4:	38 eb       	ldi	r19, 0xB8	; 184
    1aa6:	48 e0       	ldi	r20, 0x08	; 8
    1aa8:	5e e3       	ldi	r21, 0x3E	; 62
    1aaa:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1aae:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1ab2:	6d 8b       	std	Y+21, r22	; 0x15
    1ab4:	7e 8b       	std	Y+22, r23	; 0x16
    1ab6:	8f 8b       	std	Y+23, r24	; 0x17
    1ab8:	98 8f       	std	Y+24, r25	; 0x18
    1aba:	6d 85       	ldd	r22, Y+13	; 0x0d
    1abc:	7e 85       	ldd	r23, Y+14	; 0x0e
    1abe:	8f 85       	ldd	r24, Y+15	; 0x0f
    1ac0:	98 89       	ldd	r25, Y+16	; 0x10
    1ac2:	a8 01       	movw	r20, r16
    1ac4:	97 01       	movw	r18, r14
    1ac6:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1aca:	2c ed       	ldi	r18, 0xDC	; 220
    1acc:	38 eb       	ldi	r19, 0xB8	; 184
    1ace:	48 e0       	ldi	r20, 0x08	; 8
    1ad0:	5e e3       	ldi	r21, 0x3E	; 62
    1ad2:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1ad6:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1ada:	2b 01       	movw	r4, r22
    1adc:	3c 01       	movw	r6, r24
    1ade:	6d 81       	ldd	r22, Y+5	; 0x05
    1ae0:	7e 81       	ldd	r23, Y+6	; 0x06
    1ae2:	8f 81       	ldd	r24, Y+7	; 0x07
    1ae4:	98 85       	ldd	r25, Y+8	; 0x08
    1ae6:	a6 01       	movw	r20, r12
    1ae8:	95 01       	movw	r18, r10
    1aea:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1aee:	2c ed       	ldi	r18, 0xDC	; 220
    1af0:	38 eb       	ldi	r19, 0xB8	; 184
    1af2:	48 e0       	ldi	r20, 0x08	; 8
    1af4:	5e e3       	ldi	r21, 0x3E	; 62
    1af6:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1afa:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1afe:	d4 01       	movw	r26, r8
    1b00:	6d 93       	st	X+, r22
    1b02:	7c 93       	st	X, r23
    1b04:	69 85       	ldd	r22, Y+9	; 0x09
    1b06:	7a 85       	ldd	r23, Y+10	; 0x0a
    1b08:	8b 85       	ldd	r24, Y+11	; 0x0b
    1b0a:	9c 85       	ldd	r25, Y+12	; 0x0c
    1b0c:	a6 01       	movw	r20, r12
    1b0e:	95 01       	movw	r18, r10
    1b10:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1b14:	2c ed       	ldi	r18, 0xDC	; 220
    1b16:	38 eb       	ldi	r19, 0xB8	; 184
    1b18:	48 e0       	ldi	r20, 0x08	; 8
    1b1a:	5e e3       	ldi	r21, 0x3E	; 62
    1b1c:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1b20:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1b24:	f4 01       	movw	r30, r8
    1b26:	73 83       	std	Z+3, r23	; 0x03
    1b28:	62 83       	std	Z+2, r22	; 0x02
    1b2a:	6d 85       	ldd	r22, Y+13	; 0x0d
    1b2c:	7e 85       	ldd	r23, Y+14	; 0x0e
    1b2e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b30:	98 89       	ldd	r25, Y+16	; 0x10
    1b32:	a6 01       	movw	r20, r12
    1b34:	95 01       	movw	r18, r10
    1b36:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1b3a:	2c ed       	ldi	r18, 0xDC	; 220
    1b3c:	38 eb       	ldi	r19, 0xB8	; 184
    1b3e:	48 e0       	ldi	r20, 0x08	; 8
    1b40:	5e e3       	ldi	r21, 0x3E	; 62
    1b42:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1b46:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1b4a:	d4 01       	movw	r26, r8
    1b4c:	15 96       	adiw	r26, 0x05	; 5
    1b4e:	7c 93       	st	X, r23
    1b50:	6e 93       	st	-X, r22
    1b52:	14 97       	sbiw	r26, 0x04	; 4
    1b54:	16 96       	adiw	r26, 0x06	; 6
    1b56:	2c 92       	st	X, r2
    1b58:	16 97       	sbiw	r26, 0x06	; 6
    1b5a:	18 96       	adiw	r26, 0x08	; 8
    1b5c:	1c 92       	st	X, r1
    1b5e:	1e 92       	st	-X, r1
    1b60:	17 97       	sbiw	r26, 0x07	; 7
    1b62:	80 e0       	ldi	r24, 0x00	; 0
    1b64:	62 e0       	ldi	r22, 0x02	; 2
    1b66:	43 2d       	mov	r20, r3
    1b68:	29 89       	ldd	r18, Y+17	; 0x11
    1b6a:	3a 89       	ldd	r19, Y+18	; 0x12
    1b6c:	0d 89       	ldd	r16, Y+21	; 0x15
    1b6e:	1e 89       	ldd	r17, Y+22	; 0x16
    1b70:	bd c0       	rjmp	.+378    	; 0x1cec <move_arc_stwt+0x50e>
		step_Fwd_L, step_Num_L, step_Speed_L, step_Accel_L, arc_Brk, // Left
>>>>>>> Lab6 Code
		step_Fwd_R, step_Num_R, step_Speed_R, step_Accel_R, arc_Brk); // Right
		return SUCCESS;
	}	
	
	if(arc_Radius < 0){
    1b72:	c3 01       	movw	r24, r6
    1b74:	b2 01       	movw	r22, r4
    1b76:	20 e0       	ldi	r18, 0x00	; 0
    1b78:	30 e0       	ldi	r19, 0x00	; 0
    1b7a:	40 e0       	ldi	r20, 0x00	; 0
    1b7c:	50 e0       	ldi	r21, 0x00	; 0
    1b7e:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    1b82:	87 fd       	sbrc	r24, 7
    1b84:	02 c0       	rjmp	.+4      	; 0x1b8a <move_arc_stwt+0x3ac>
    1b86:	80 e0       	ldi	r24, 0x00	; 0
    1b88:	c1 c0       	rjmp	.+386    	; 0x1d0c <move_arc_stwt+0x52e>
		arc_Length_L = arc_Length * (1 + WHEEL_BASE/arc_Radius);
<<<<<<< HEAD
    1914:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1918:	7b 01       	movw	r14, r22
    191a:	8c 01       	movw	r16, r24
    191c:	66 e6       	ldi	r22, 0x66	; 102
    191e:	76 e6       	ldi	r23, 0x66	; 102
    1920:	8a ea       	ldi	r24, 0xAA	; 170
    1922:	91 e4       	ldi	r25, 0x41	; 65
    1924:	a8 01       	movw	r20, r16
    1926:	97 01       	movw	r18, r14
    1928:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    192c:	20 e0       	ldi	r18, 0x00	; 0
    192e:	30 e0       	ldi	r19, 0x00	; 0
    1930:	40 e8       	ldi	r20, 0x80	; 128
    1932:	5f e3       	ldi	r21, 0x3F	; 63
    1934:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
    1938:	5b 01       	movw	r10, r22
    193a:	6c 01       	movw	r12, r24
		arc_Length_R = arc_Length * (1 - WHEEL_BASE/arc_Radius);
    193c:	66 e6       	ldi	r22, 0x66	; 102
    193e:	76 e6       	ldi	r23, 0x66	; 102
    1940:	8a ea       	ldi	r24, 0xAA	; 170
    1942:	91 ec       	ldi	r25, 0xC1	; 193
    1944:	a8 01       	movw	r20, r16
    1946:	97 01       	movw	r18, r14
    1948:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    194c:	20 e0       	ldi	r18, 0x00	; 0
    194e:	30 e0       	ldi	r19, 0x00	; 0
    1950:	40 e8       	ldi	r20, 0x80	; 128
    1952:	5f e3       	ldi	r21, 0x3F	; 63
    1954:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
    1958:	7b 01       	movw	r14, r22
    195a:	8c 01       	movw	r16, r24
=======
    1b8a:	66 e6       	ldi	r22, 0x66	; 102
    1b8c:	76 e6       	ldi	r23, 0x66	; 102
    1b8e:	8a ea       	ldi	r24, 0xAA	; 170
    1b90:	91 e4       	ldi	r25, 0x41	; 65
    1b92:	a3 01       	movw	r20, r6
    1b94:	92 01       	movw	r18, r4
    1b96:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1b9a:	20 e0       	ldi	r18, 0x00	; 0
    1b9c:	30 e0       	ldi	r19, 0x00	; 0
    1b9e:	40 e8       	ldi	r20, 0x80	; 128
    1ba0:	5f e3       	ldi	r21, 0x3F	; 63
    1ba2:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    1ba6:	7b 01       	movw	r14, r22
    1ba8:	8c 01       	movw	r16, r24
		arc_Length_R = arc_Length * (1 - WHEEL_BASE/arc_Radius);
    1baa:	66 e6       	ldi	r22, 0x66	; 102
    1bac:	76 e6       	ldi	r23, 0x66	; 102
    1bae:	8a ea       	ldi	r24, 0xAA	; 170
    1bb0:	91 ec       	ldi	r25, 0xC1	; 193
    1bb2:	a3 01       	movw	r20, r6
    1bb4:	92 01       	movw	r18, r4
    1bb6:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1bba:	20 e0       	ldi	r18, 0x00	; 0
    1bbc:	30 e0       	ldi	r19, 0x00	; 0
    1bbe:	40 e8       	ldi	r20, 0x80	; 128
    1bc0:	5f e3       	ldi	r21, 0x3F	; 63
    1bc2:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    1bc6:	5b 01       	movw	r10, r22
    1bc8:	6c 01       	movw	r12, r24
>>>>>>> Lab6 Code
		arc_Accel_L = arc_Accel * (1 + WHEEL_BASE/arc_Radius);
		arc_Accel_R = arc_Accel * (1 - WHEEL_BASE/arc_Radius);
		step_Accel_L = arc_Accel_L/D_STEP;
		step_Accel_R = arc_Accel_R/D_STEP;
		
		STEPPER_move_stwt( STEPPER_BOTH, 
<<<<<<< HEAD
    195c:	ed b7       	in	r30, 0x3d	; 61
    195e:	fe b7       	in	r31, 0x3e	; 62
    1960:	39 97       	sbiw	r30, 0x09	; 9
    1962:	0f b6       	in	r0, 0x3f	; 63
    1964:	f8 94       	cli
    1966:	fe bf       	out	0x3e, r31	; 62
    1968:	0f be       	out	0x3f, r0	; 63
    196a:	ed bf       	out	0x3d, r30	; 61
    196c:	8d b6       	in	r8, 0x3d	; 61
    196e:	9e b6       	in	r9, 0x3e	; 62
    1970:	08 94       	sec
    1972:	81 1c       	adc	r8, r1
    1974:	91 1c       	adc	r9, r1
    1976:	69 85       	ldd	r22, Y+9	; 0x09
    1978:	7a 85       	ldd	r23, Y+10	; 0x0a
    197a:	8b 85       	ldd	r24, Y+11	; 0x0b
    197c:	9c 85       	ldd	r25, Y+12	; 0x0c
    197e:	a6 01       	movw	r20, r12
    1980:	95 01       	movw	r18, r10
    1982:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    1986:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    198a:	88 27       	eor	r24, r24
    198c:	77 fd       	sbrc	r23, 7
    198e:	80 95       	com	r24
    1990:	98 2f       	mov	r25, r24
    1992:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1996:	2c ed       	ldi	r18, 0xDC	; 220
    1998:	38 eb       	ldi	r19, 0xB8	; 184
    199a:	48 e0       	ldi	r20, 0x08	; 8
    199c:	5e e3       	ldi	r21, 0x3E	; 62
    199e:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    19a2:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    19a6:	69 8b       	std	Y+17, r22	; 0x11
    19a8:	7a 8b       	std	Y+18, r23	; 0x12
    19aa:	8b 8b       	std	Y+19, r24	; 0x13
    19ac:	9c 8b       	std	Y+20, r25	; 0x14
    19ae:	6d 81       	ldd	r22, Y+5	; 0x05
    19b0:	7e 81       	ldd	r23, Y+6	; 0x06
    19b2:	8f 81       	ldd	r24, Y+7	; 0x07
    19b4:	98 85       	ldd	r25, Y+8	; 0x08
    19b6:	a6 01       	movw	r20, r12
    19b8:	95 01       	movw	r18, r10
    19ba:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    19be:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    19c2:	88 27       	eor	r24, r24
    19c4:	77 fd       	sbrc	r23, 7
    19c6:	80 95       	com	r24
    19c8:	98 2f       	mov	r25, r24
    19ca:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    19ce:	2c ed       	ldi	r18, 0xDC	; 220
    19d0:	38 eb       	ldi	r19, 0xB8	; 184
    19d2:	48 e0       	ldi	r20, 0x08	; 8
    19d4:	5e e3       	ldi	r21, 0x3E	; 62
    19d6:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    19da:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    19de:	2b 01       	movw	r4, r22
    19e0:	3c 01       	movw	r6, r24
    19e2:	69 81       	ldd	r22, Y+1	; 0x01
    19e4:	7a 81       	ldd	r23, Y+2	; 0x02
    19e6:	8b 81       	ldd	r24, Y+3	; 0x03
    19e8:	9c 81       	ldd	r25, Y+4	; 0x04
    19ea:	a6 01       	movw	r20, r12
    19ec:	95 01       	movw	r18, r10
    19ee:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    19f2:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    19f6:	88 27       	eor	r24, r24
    19f8:	77 fd       	sbrc	r23, 7
    19fa:	80 95       	com	r24
    19fc:	98 2f       	mov	r25, r24
    19fe:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1a02:	2c ed       	ldi	r18, 0xDC	; 220
    1a04:	38 eb       	ldi	r19, 0xB8	; 184
    1a06:	48 e0       	ldi	r20, 0x08	; 8
    1a08:	5e e3       	ldi	r21, 0x3E	; 62
    1a0a:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1a0e:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1a12:	5b 01       	movw	r10, r22
    1a14:	6c 01       	movw	r12, r24
    1a16:	69 85       	ldd	r22, Y+9	; 0x09
    1a18:	7a 85       	ldd	r23, Y+10	; 0x0a
    1a1a:	8b 85       	ldd	r24, Y+11	; 0x0b
    1a1c:	9c 85       	ldd	r25, Y+12	; 0x0c
    1a1e:	a8 01       	movw	r20, r16
    1a20:	97 01       	movw	r18, r14
    1a22:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    1a26:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1a2a:	88 27       	eor	r24, r24
    1a2c:	77 fd       	sbrc	r23, 7
    1a2e:	80 95       	com	r24
    1a30:	98 2f       	mov	r25, r24
    1a32:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1a36:	2c ed       	ldi	r18, 0xDC	; 220
    1a38:	38 eb       	ldi	r19, 0xB8	; 184
    1a3a:	48 e0       	ldi	r20, 0x08	; 8
    1a3c:	5e e3       	ldi	r21, 0x3E	; 62
    1a3e:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1a42:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1a46:	f4 01       	movw	r30, r8
    1a48:	71 83       	std	Z+1, r23	; 0x01
    1a4a:	60 83       	st	Z, r22
    1a4c:	6d 81       	ldd	r22, Y+5	; 0x05
    1a4e:	7e 81       	ldd	r23, Y+6	; 0x06
    1a50:	8f 81       	ldd	r24, Y+7	; 0x07
    1a52:	98 85       	ldd	r25, Y+8	; 0x08
    1a54:	a8 01       	movw	r20, r16
    1a56:	97 01       	movw	r18, r14
    1a58:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    1a5c:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1a60:	88 27       	eor	r24, r24
    1a62:	77 fd       	sbrc	r23, 7
    1a64:	80 95       	com	r24
    1a66:	98 2f       	mov	r25, r24
    1a68:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1a6c:	2c ed       	ldi	r18, 0xDC	; 220
    1a6e:	38 eb       	ldi	r19, 0xB8	; 184
    1a70:	48 e0       	ldi	r20, 0x08	; 8
    1a72:	5e e3       	ldi	r21, 0x3E	; 62
    1a74:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1a78:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1a7c:	f4 01       	movw	r30, r8
    1a7e:	73 83       	std	Z+3, r23	; 0x03
    1a80:	62 83       	std	Z+2, r22	; 0x02
    1a82:	69 81       	ldd	r22, Y+1	; 0x01
    1a84:	7a 81       	ldd	r23, Y+2	; 0x02
    1a86:	8b 81       	ldd	r24, Y+3	; 0x03
    1a88:	9c 81       	ldd	r25, Y+4	; 0x04
    1a8a:	a8 01       	movw	r20, r16
    1a8c:	97 01       	movw	r18, r14
    1a8e:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    1a92:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1a96:	88 27       	eor	r24, r24
    1a98:	77 fd       	sbrc	r23, 7
    1a9a:	80 95       	com	r24
    1a9c:	98 2f       	mov	r25, r24
    1a9e:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1aa2:	2c ed       	ldi	r18, 0xDC	; 220
    1aa4:	38 eb       	ldi	r19, 0xB8	; 184
    1aa6:	48 e0       	ldi	r20, 0x08	; 8
    1aa8:	5e e3       	ldi	r21, 0x3E	; 62
    1aaa:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1aae:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1ab2:	f4 01       	movw	r30, r8
    1ab4:	75 83       	std	Z+5, r23	; 0x05
    1ab6:	64 83       	std	Z+4, r22	; 0x04
    1ab8:	26 82       	std	Z+6, r2	; 0x06
    1aba:	10 86       	std	Z+8, r1	; 0x08
    1abc:	17 82       	std	Z+7, r1	; 0x07
    1abe:	80 e0       	ldi	r24, 0x00	; 0
    1ac0:	62 e0       	ldi	r22, 0x02	; 2
    1ac2:	43 2d       	mov	r20, r3
    1ac4:	29 89       	ldd	r18, Y+17	; 0x11
    1ac6:	3a 89       	ldd	r19, Y+18	; 0x12
    1ac8:	82 01       	movw	r16, r4
    1aca:	75 01       	movw	r14, r10
    1acc:	c2 2c       	mov	r12, r2
    1ace:	aa 24       	eor	r10, r10
    1ad0:	bb 24       	eor	r11, r11
    1ad2:	83 2c       	mov	r8, r3
    1ad4:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <STEPPER_move>
    1ad8:	8d b7       	in	r24, 0x3d	; 61
    1ada:	9e b7       	in	r25, 0x3e	; 62
    1adc:	09 96       	adiw	r24, 0x09	; 9
    1ade:	0f b6       	in	r0, 0x3f	; 63
    1ae0:	f8 94       	cli
    1ae2:	9e bf       	out	0x3e, r25	; 62
    1ae4:	0f be       	out	0x3f, r0	; 63
    1ae6:	8d bf       	out	0x3d, r24	; 61
=======
    1bca:	2d b7       	in	r18, 0x3d	; 61
    1bcc:	3e b7       	in	r19, 0x3e	; 62
    1bce:	29 50       	subi	r18, 0x09	; 9
    1bd0:	30 40       	sbci	r19, 0x00	; 0
    1bd2:	0f b6       	in	r0, 0x3f	; 63
    1bd4:	f8 94       	cli
    1bd6:	3e bf       	out	0x3e, r19	; 62
    1bd8:	0f be       	out	0x3f, r0	; 63
    1bda:	2d bf       	out	0x3d, r18	; 61
    1bdc:	8d b6       	in	r8, 0x3d	; 61
    1bde:	9e b6       	in	r9, 0x3e	; 62
    1be0:	08 94       	sec
    1be2:	81 1c       	adc	r8, r1
    1be4:	91 1c       	adc	r9, r1
    1be6:	6d 81       	ldd	r22, Y+5	; 0x05
    1be8:	7e 81       	ldd	r23, Y+6	; 0x06
    1bea:	8f 81       	ldd	r24, Y+7	; 0x07
    1bec:	98 85       	ldd	r25, Y+8	; 0x08
    1bee:	a8 01       	movw	r20, r16
    1bf0:	97 01       	movw	r18, r14
    1bf2:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1bf6:	2c ed       	ldi	r18, 0xDC	; 220
    1bf8:	38 eb       	ldi	r19, 0xB8	; 184
    1bfa:	48 e0       	ldi	r20, 0x08	; 8
    1bfc:	5e e3       	ldi	r21, 0x3E	; 62
    1bfe:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1c02:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1c06:	69 8f       	std	Y+25, r22	; 0x19
    1c08:	7a 8f       	std	Y+26, r23	; 0x1a
    1c0a:	8b 8f       	std	Y+27, r24	; 0x1b
    1c0c:	9c 8f       	std	Y+28, r25	; 0x1c
    1c0e:	69 85       	ldd	r22, Y+9	; 0x09
    1c10:	7a 85       	ldd	r23, Y+10	; 0x0a
    1c12:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c14:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c16:	a8 01       	movw	r20, r16
    1c18:	97 01       	movw	r18, r14
    1c1a:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1c1e:	2c ed       	ldi	r18, 0xDC	; 220
    1c20:	38 eb       	ldi	r19, 0xB8	; 184
    1c22:	48 e0       	ldi	r20, 0x08	; 8
    1c24:	5e e3       	ldi	r21, 0x3E	; 62
    1c26:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1c2a:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1c2e:	6d 8f       	std	Y+29, r22	; 0x1d
    1c30:	7e 8f       	std	Y+30, r23	; 0x1e
    1c32:	8f 8f       	std	Y+31, r24	; 0x1f
    1c34:	98 a3       	std	Y+32, r25	; 0x20
    1c36:	6d 85       	ldd	r22, Y+13	; 0x0d
    1c38:	7e 85       	ldd	r23, Y+14	; 0x0e
    1c3a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1c3c:	98 89       	ldd	r25, Y+16	; 0x10
    1c3e:	a8 01       	movw	r20, r16
    1c40:	97 01       	movw	r18, r14
    1c42:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1c46:	2c ed       	ldi	r18, 0xDC	; 220
    1c48:	38 eb       	ldi	r19, 0xB8	; 184
    1c4a:	48 e0       	ldi	r20, 0x08	; 8
    1c4c:	5e e3       	ldi	r21, 0x3E	; 62
    1c4e:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1c52:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1c56:	2b 01       	movw	r4, r22
    1c58:	3c 01       	movw	r6, r24
    1c5a:	6d 81       	ldd	r22, Y+5	; 0x05
    1c5c:	7e 81       	ldd	r23, Y+6	; 0x06
    1c5e:	8f 81       	ldd	r24, Y+7	; 0x07
    1c60:	98 85       	ldd	r25, Y+8	; 0x08
    1c62:	a6 01       	movw	r20, r12
    1c64:	95 01       	movw	r18, r10
    1c66:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1c6a:	2c ed       	ldi	r18, 0xDC	; 220
    1c6c:	38 eb       	ldi	r19, 0xB8	; 184
    1c6e:	48 e0       	ldi	r20, 0x08	; 8
    1c70:	5e e3       	ldi	r21, 0x3E	; 62
    1c72:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1c76:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1c7a:	d4 01       	movw	r26, r8
    1c7c:	6d 93       	st	X+, r22
    1c7e:	7c 93       	st	X, r23
    1c80:	69 85       	ldd	r22, Y+9	; 0x09
    1c82:	7a 85       	ldd	r23, Y+10	; 0x0a
    1c84:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c86:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c88:	a6 01       	movw	r20, r12
    1c8a:	95 01       	movw	r18, r10
    1c8c:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1c90:	2c ed       	ldi	r18, 0xDC	; 220
    1c92:	38 eb       	ldi	r19, 0xB8	; 184
    1c94:	48 e0       	ldi	r20, 0x08	; 8
    1c96:	5e e3       	ldi	r21, 0x3E	; 62
    1c98:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1c9c:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1ca0:	f4 01       	movw	r30, r8
    1ca2:	73 83       	std	Z+3, r23	; 0x03
    1ca4:	62 83       	std	Z+2, r22	; 0x02
    1ca6:	6d 85       	ldd	r22, Y+13	; 0x0d
    1ca8:	7e 85       	ldd	r23, Y+14	; 0x0e
    1caa:	8f 85       	ldd	r24, Y+15	; 0x0f
    1cac:	98 89       	ldd	r25, Y+16	; 0x10
    1cae:	a6 01       	movw	r20, r12
    1cb0:	95 01       	movw	r18, r10
    1cb2:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    1cb6:	2c ed       	ldi	r18, 0xDC	; 220
    1cb8:	38 eb       	ldi	r19, 0xB8	; 184
    1cba:	48 e0       	ldi	r20, 0x08	; 8
    1cbc:	5e e3       	ldi	r21, 0x3E	; 62
    1cbe:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    1cc2:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1cc6:	d4 01       	movw	r26, r8
    1cc8:	15 96       	adiw	r26, 0x05	; 5
    1cca:	7c 93       	st	X, r23
    1ccc:	6e 93       	st	-X, r22
    1cce:	14 97       	sbiw	r26, 0x04	; 4
    1cd0:	16 96       	adiw	r26, 0x06	; 6
    1cd2:	2c 92       	st	X, r2
    1cd4:	16 97       	sbiw	r26, 0x06	; 6
    1cd6:	18 96       	adiw	r26, 0x08	; 8
    1cd8:	1c 92       	st	X, r1
    1cda:	1e 92       	st	-X, r1
    1cdc:	17 97       	sbiw	r26, 0x07	; 7
    1cde:	80 e0       	ldi	r24, 0x00	; 0
    1ce0:	62 e0       	ldi	r22, 0x02	; 2
    1ce2:	43 2d       	mov	r20, r3
    1ce4:	29 8d       	ldd	r18, Y+25	; 0x19
    1ce6:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1ce8:	0d 8d       	ldd	r16, Y+29	; 0x1d
    1cea:	1e 8d       	ldd	r17, Y+30	; 0x1e
    1cec:	72 01       	movw	r14, r4
    1cee:	c2 2c       	mov	r12, r2
    1cf0:	aa 24       	eor	r10, r10
    1cf2:	bb 24       	eor	r11, r11
    1cf4:	83 2c       	mov	r8, r3
    1cf6:	0e 94 52 17 	call	0x2ea4	; 0x2ea4 <STEPPER_move>
    1cfa:	81 e0       	ldi	r24, 0x01	; 1
    1cfc:	ed b7       	in	r30, 0x3d	; 61
    1cfe:	fe b7       	in	r31, 0x3e	; 62
    1d00:	39 96       	adiw	r30, 0x09	; 9
    1d02:	0f b6       	in	r0, 0x3f	; 63
    1d04:	f8 94       	cli
    1d06:	fe bf       	out	0x3e, r31	; 62
    1d08:	0f be       	out	0x3f, r0	; 63
    1d0a:	ed bf       	out	0x3d, r30	; 61
>>>>>>> Lab6 Code
		step_Fwd_L, step_Num_L, step_Speed_L, step_Accel_L, arc_Brk, // Left
		step_Fwd_R, step_Num_R, step_Speed_R, step_Accel_R, arc_Brk); // Right
		return SUCCESS;
	}	
	return FAIL;
}
    1d0c:	a0 96       	adiw	r28, 0x20	; 32
    1d0e:	0f b6       	in	r0, 0x3f	; 63
    1d10:	f8 94       	cli
    1d12:	de bf       	out	0x3e, r29	; 62
    1d14:	0f be       	out	0x3f, r0	; 63
    1d16:	cd bf       	out	0x3d, r28	; 61
    1d18:	cf 91       	pop	r28
    1d1a:	df 91       	pop	r29
    1d1c:	1f 91       	pop	r17
    1d1e:	0f 91       	pop	r16
    1d20:	ff 90       	pop	r15
    1d22:	ef 90       	pop	r14
    1d24:	df 90       	pop	r13
    1d26:	cf 90       	pop	r12
    1d28:	bf 90       	pop	r11
    1d2a:	af 90       	pop	r10
    1d2c:	9f 90       	pop	r9
    1d2e:	8f 90       	pop	r8
    1d30:	7f 90       	pop	r7
    1d32:	6f 90       	pop	r6
    1d34:	5f 90       	pop	r5
    1d36:	4f 90       	pop	r4
    1d38:	3f 90       	pop	r3
    1d3a:	2f 90       	pop	r2
    1d3c:	08 95       	ret

00001d3e <moveAway>:
* Input Variables:	none
* Output Return:	char
* Overview:			Use a comment block like this before functions
********************************************************************/
char moveAway ( void )
{	
    1d3e:	2f 92       	push	r2
    1d40:	3f 92       	push	r3
    1d42:	4f 92       	push	r4
    1d44:	5f 92       	push	r5
    1d46:	6f 92       	push	r6
    1d48:	7f 92       	push	r7
    1d4a:	8f 92       	push	r8
    1d4c:	9f 92       	push	r9
    1d4e:	af 92       	push	r10
    1d50:	bf 92       	push	r11
    1d52:	cf 92       	push	r12
    1d54:	df 92       	push	r13
    1d56:	ef 92       	push	r14
    1d58:	ff 92       	push	r15
    1d5a:	0f 93       	push	r16
    1d5c:	1f 93       	push	r17
    1d5e:	df 93       	push	r29
    1d60:	cf 93       	push	r28
    1d62:	00 d0       	rcall	.+0      	; 0x1d64 <moveAway+0x26>
    1d64:	00 d0       	rcall	.+0      	; 0x1d66 <moveAway+0x28>
    1d66:	cd b7       	in	r28, 0x3d	; 61
    1d68:	de b7       	in	r29, 0x3e	; 62
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
    1d6a:	60 90 58 02 	lds	r6, 0x0258
    1d6e:	70 90 59 02 	lds	r7, 0x0259
    1d72:	80 90 5a 02 	lds	r8, 0x025A
    1d76:	90 90 5b 02 	lds	r9, 0x025B
    1d7a:	a0 90 5c 02 	lds	r10, 0x025C
    1d7e:	b0 90 5d 02 	lds	r11, 0x025D
    1d82:	c0 90 5e 02 	lds	r12, 0x025E
    1d86:	d0 90 5f 02 	lds	r13, 0x025F
	float moveX = rtIR - ltIR;
<<<<<<< HEAD
    1b68:	e0 90 24 02 	lds	r14, 0x0224
    1b6c:	f0 90 25 02 	lds	r15, 0x0225
    1b70:	00 91 26 02 	lds	r16, 0x0226
    1b74:	10 91 27 02 	lds	r17, 0x0227
    1b78:	80 91 20 02 	lds	r24, 0x0220
    1b7c:	90 91 21 02 	lds	r25, 0x0221
    1b80:	a0 91 22 02 	lds	r26, 0x0222
    1b84:	b0 91 23 02 	lds	r27, 0x0223
    1b88:	89 83       	std	Y+1, r24	; 0x01
    1b8a:	9a 83       	std	Y+2, r25	; 0x02
    1b8c:	ab 83       	std	Y+3, r26	; 0x03
    1b8e:	bc 83       	std	Y+4, r27	; 0x04
    1b90:	c8 01       	movw	r24, r16
    1b92:	b7 01       	movw	r22, r14
    1b94:	29 81       	ldd	r18, Y+1	; 0x01
    1b96:	3a 81       	ldd	r19, Y+2	; 0x02
    1b98:	4b 81       	ldd	r20, Y+3	; 0x03
    1b9a:	5c 81       	ldd	r21, Y+4	; 0x04
    1b9c:	0e 94 c4 25 	call	0x4b88	; 0x4b88 <__subsf3>
    1ba0:	1b 01       	movw	r2, r22
    1ba2:	2c 01       	movw	r4, r24
=======
    1d8a:	e0 90 54 02 	lds	r14, 0x0254
    1d8e:	f0 90 55 02 	lds	r15, 0x0255
    1d92:	00 91 56 02 	lds	r16, 0x0256
    1d96:	10 91 57 02 	lds	r17, 0x0257
    1d9a:	80 91 50 02 	lds	r24, 0x0250
    1d9e:	90 91 51 02 	lds	r25, 0x0251
    1da2:	a0 91 52 02 	lds	r26, 0x0252
    1da6:	b0 91 53 02 	lds	r27, 0x0253
    1daa:	89 83       	std	Y+1, r24	; 0x01
    1dac:	9a 83       	std	Y+2, r25	; 0x02
    1dae:	ab 83       	std	Y+3, r26	; 0x03
    1db0:	bc 83       	std	Y+4, r27	; 0x04
    1db2:	c8 01       	movw	r24, r16
    1db4:	b7 01       	movw	r22, r14
    1db6:	29 81       	ldd	r18, Y+1	; 0x01
    1db8:	3a 81       	ldd	r19, Y+2	; 0x02
    1dba:	4b 81       	ldd	r20, Y+3	; 0x03
    1dbc:	5c 81       	ldd	r21, Y+4	; 0x04
    1dbe:	0e 94 28 27 	call	0x4e50	; 0x4e50 <__subsf3>
    1dc2:	1b 01       	movw	r2, r22
    1dc4:	2c 01       	movw	r4, r24
>>>>>>> Lab6 Code
	
	// if the object is in front of us are behind us
	// move appropriately in the Y direction
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
<<<<<<< HEAD
    1ba4:	c4 01       	movw	r24, r8
    1ba6:	b3 01       	movw	r22, r6
    1ba8:	20 e0       	ldi	r18, 0x00	; 0
    1baa:	30 e0       	ldi	r19, 0x00	; 0
    1bac:	40 ee       	ldi	r20, 0xE0	; 224
    1bae:	50 e4       	ldi	r21, 0x40	; 64
    1bb0:	0e 94 29 26 	call	0x4c52	; 0x4c52 <__cmpsf2>
    1bb4:	87 fd       	sbrc	r24, 7
    1bb6:	0b c0       	rjmp	.+22     	; 0x1bce <moveAway+0xb2>
    1bb8:	c6 01       	movw	r24, r12
    1bba:	b5 01       	movw	r22, r10
    1bbc:	20 e0       	ldi	r18, 0x00	; 0
    1bbe:	30 e0       	ldi	r19, 0x00	; 0
    1bc0:	40 ee       	ldi	r20, 0xE0	; 224
    1bc2:	50 e4       	ldi	r21, 0x40	; 64
    1bc4:	0e 94 29 26 	call	0x4c52	; 0x4c52 <__cmpsf2>
    1bc8:	88 23       	and	r24, r24
    1bca:	0c f0       	brlt	.+2      	; 0x1bce <moveAway+0xb2>
    1bcc:	68 c0       	rjmp	.+208    	; 0x1c9e <moveAway+0x182>
=======
    1dc6:	c4 01       	movw	r24, r8
    1dc8:	b3 01       	movw	r22, r6
    1dca:	20 e0       	ldi	r18, 0x00	; 0
    1dcc:	30 e0       	ldi	r19, 0x00	; 0
    1dce:	40 ee       	ldi	r20, 0xE0	; 224
    1dd0:	50 e4       	ldi	r21, 0x40	; 64
    1dd2:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    1dd6:	87 fd       	sbrc	r24, 7
    1dd8:	0b c0       	rjmp	.+22     	; 0x1df0 <moveAway+0xb2>
    1dda:	c6 01       	movw	r24, r12
    1ddc:	b5 01       	movw	r22, r10
    1dde:	20 e0       	ldi	r18, 0x00	; 0
    1de0:	30 e0       	ldi	r19, 0x00	; 0
    1de2:	40 ee       	ldi	r20, 0xE0	; 224
    1de4:	50 e4       	ldi	r21, 0x40	; 64
    1de6:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    1dea:	88 23       	and	r24, r24
    1dec:	0c f0       	brlt	.+2      	; 0x1df0 <moveAway+0xb2>
    1dee:	68 c0       	rjmp	.+208    	; 0x1ec0 <moveAway+0x182>
>>>>>>> Lab6 Code
{	
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
<<<<<<< HEAD
    1bce:	c4 01       	movw	r24, r8
    1bd0:	b3 01       	movw	r22, r6
    1bd2:	a6 01       	movw	r20, r12
    1bd4:	95 01       	movw	r18, r10
    1bd6:	0e 94 c4 25 	call	0x4b88	; 0x4b88 <__subsf3>
    1bda:	7b 01       	movw	r14, r22
    1bdc:	8c 01       	movw	r16, r24
=======
    1df0:	c4 01       	movw	r24, r8
    1df2:	b3 01       	movw	r22, r6
    1df4:	a6 01       	movw	r20, r12
    1df6:	95 01       	movw	r18, r10
    1df8:	0e 94 28 27 	call	0x4e50	; 0x4e50 <__subsf3>
    1dfc:	7b 01       	movw	r14, r22
    1dfe:	8c 01       	movw	r16, r24
>>>>>>> Lab6 Code
	
	// if the object is in front of us are behind us
	// move appropriately in the Y direction
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
	{
			BOOL moveForward = (moveY >= 0);
<<<<<<< HEAD
    1bde:	77 24       	eor	r7, r7
    1be0:	20 e0       	ldi	r18, 0x00	; 0
    1be2:	30 e0       	ldi	r19, 0x00	; 0
    1be4:	40 e0       	ldi	r20, 0x00	; 0
    1be6:	50 e0       	ldi	r21, 0x00	; 0
    1be8:	0e 94 78 27 	call	0x4ef0	; 0x4ef0 <__gesf2>
    1bec:	88 23       	and	r24, r24
    1bee:	14 f0       	brlt	.+4      	; 0x1bf4 <moveAway+0xd8>
    1bf0:	77 24       	eor	r7, r7
    1bf2:	73 94       	inc	r7
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    1bf4:	c8 01       	movw	r24, r16
    1bf6:	b7 01       	movw	r22, r14
    1bf8:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1bfc:	9b 01       	movw	r18, r22
    1bfe:	77 ff       	sbrs	r23, 7
    1c00:	03 c0       	rjmp	.+6      	; 0x1c08 <moveAway+0xec>
    1c02:	30 95       	com	r19
    1c04:	21 95       	neg	r18
    1c06:	3f 4f       	sbci	r19, 0xFF	; 255
    1c08:	b9 01       	movw	r22, r18
    1c0a:	88 27       	eor	r24, r24
    1c0c:	77 fd       	sbrc	r23, 7
    1c0e:	80 95       	com	r24
    1c10:	98 2f       	mov	r25, r24
    1c12:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1c16:	6b 01       	movw	r12, r22
    1c18:	7c 01       	movw	r14, r24
    1c1a:	ad b7       	in	r26, 0x3d	; 61
    1c1c:	be b7       	in	r27, 0x3e	; 62
    1c1e:	19 97       	sbiw	r26, 0x09	; 9
    1c20:	0f b6       	in	r0, 0x3f	; 63
    1c22:	f8 94       	cli
    1c24:	be bf       	out	0x3e, r27	; 62
    1c26:	0f be       	out	0x3f, r0	; 63
    1c28:	ad bf       	out	0x3d, r26	; 61
    1c2a:	0d b7       	in	r16, 0x3d	; 61
    1c2c:	1e b7       	in	r17, 0x3e	; 62
    1c2e:	0f 5f       	subi	r16, 0xFF	; 255
    1c30:	1f 4f       	sbci	r17, 0xFF	; 255
    1c32:	a2 01       	movw	r20, r4
    1c34:	91 01       	movw	r18, r2
    1c36:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
    1c3a:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <__fixunssfsi>
    1c3e:	4b 01       	movw	r8, r22
    1c40:	5c 01       	movw	r10, r24
    1c42:	82 e3       	ldi	r24, 0x32	; 50
    1c44:	90 e0       	ldi	r25, 0x00	; 0
    1c46:	f8 01       	movw	r30, r16
    1c48:	91 83       	std	Z+1, r25	; 0x01
    1c4a:	80 83       	st	Z, r24
    1c4c:	c7 01       	movw	r24, r14
    1c4e:	b6 01       	movw	r22, r12
    1c50:	a2 01       	movw	r20, r4
    1c52:	91 01       	movw	r18, r2
    1c54:	0e 94 c4 25 	call	0x4b88	; 0x4b88 <__subsf3>
    1c58:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <__fixunssfsi>
    1c5c:	d8 01       	movw	r26, r16
    1c5e:	13 96       	adiw	r26, 0x03	; 3
    1c60:	7c 93       	st	X, r23
    1c62:	6e 93       	st	-X, r22
    1c64:	12 97       	sbiw	r26, 0x02	; 2
    1c66:	82 ec       	ldi	r24, 0xC2	; 194
    1c68:	91 e0       	ldi	r25, 0x01	; 1
    1c6a:	15 96       	adiw	r26, 0x05	; 5
    1c6c:	9c 93       	st	X, r25
    1c6e:	8e 93       	st	-X, r24
    1c70:	14 97       	sbiw	r26, 0x04	; 4
    1c72:	16 96       	adiw	r26, 0x06	; 6
    1c74:	1c 92       	st	X, r1
    1c76:	16 97       	sbiw	r26, 0x06	; 6
    1c78:	18 96       	adiw	r26, 0x08	; 8
    1c7a:	1c 92       	st	X, r1
    1c7c:	1e 92       	st	-X, r1
    1c7e:	17 97       	sbiw	r26, 0x07	; 7
    1c80:	81 e0       	ldi	r24, 0x01	; 1
    1c82:	62 e0       	ldi	r22, 0x02	; 2
    1c84:	47 2d       	mov	r20, r7
    1c86:	22 e3       	ldi	r18, 0x32	; 50
    1c88:	30 e0       	ldi	r19, 0x00	; 0
    1c8a:	84 01       	movw	r16, r8
    1c8c:	72 ec       	ldi	r23, 0xC2	; 194
    1c8e:	e7 2e       	mov	r14, r23
    1c90:	71 e0       	ldi	r23, 0x01	; 1
    1c92:	f7 2e       	mov	r15, r23
    1c94:	cc 24       	eor	r12, r12
    1c96:	aa 24       	eor	r10, r10
    1c98:	bb 24       	eor	r11, r11
    1c9a:	87 2c       	mov	r8, r7
    1c9c:	82 c0       	rjmp	.+260    	; 0x1da2 <moveAway+0x286>
=======
    1e00:	77 24       	eor	r7, r7
    1e02:	20 e0       	ldi	r18, 0x00	; 0
    1e04:	30 e0       	ldi	r19, 0x00	; 0
    1e06:	40 e0       	ldi	r20, 0x00	; 0
    1e08:	50 e0       	ldi	r21, 0x00	; 0
    1e0a:	0e 94 dc 28 	call	0x51b8	; 0x51b8 <__gesf2>
    1e0e:	88 23       	and	r24, r24
    1e10:	14 f0       	brlt	.+4      	; 0x1e16 <moveAway+0xd8>
    1e12:	77 24       	eor	r7, r7
    1e14:	73 94       	inc	r7
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    1e16:	c8 01       	movw	r24, r16
    1e18:	b7 01       	movw	r22, r14
    1e1a:	0e 94 f9 27 	call	0x4ff2	; 0x4ff2 <__fixsfsi>
    1e1e:	9b 01       	movw	r18, r22
    1e20:	77 ff       	sbrs	r23, 7
    1e22:	03 c0       	rjmp	.+6      	; 0x1e2a <moveAway+0xec>
    1e24:	30 95       	com	r19
    1e26:	21 95       	neg	r18
    1e28:	3f 4f       	sbci	r19, 0xFF	; 255
    1e2a:	b9 01       	movw	r22, r18
    1e2c:	88 27       	eor	r24, r24
    1e2e:	77 fd       	sbrc	r23, 7
    1e30:	80 95       	com	r24
    1e32:	98 2f       	mov	r25, r24
    1e34:	0e 94 2c 28 	call	0x5058	; 0x5058 <__floatsisf>
    1e38:	6b 01       	movw	r12, r22
    1e3a:	7c 01       	movw	r14, r24
    1e3c:	ad b7       	in	r26, 0x3d	; 61
    1e3e:	be b7       	in	r27, 0x3e	; 62
    1e40:	19 97       	sbiw	r26, 0x09	; 9
    1e42:	0f b6       	in	r0, 0x3f	; 63
    1e44:	f8 94       	cli
    1e46:	be bf       	out	0x3e, r27	; 62
    1e48:	0f be       	out	0x3f, r0	; 63
    1e4a:	ad bf       	out	0x3d, r26	; 61
    1e4c:	0d b7       	in	r16, 0x3d	; 61
    1e4e:	1e b7       	in	r17, 0x3e	; 62
    1e50:	0f 5f       	subi	r16, 0xFF	; 255
    1e52:	1f 4f       	sbci	r17, 0xFF	; 255
    1e54:	a2 01       	movw	r20, r4
    1e56:	91 01       	movw	r18, r2
    1e58:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    1e5c:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1e60:	4b 01       	movw	r8, r22
    1e62:	5c 01       	movw	r10, r24
    1e64:	82 e3       	ldi	r24, 0x32	; 50
    1e66:	90 e0       	ldi	r25, 0x00	; 0
    1e68:	f8 01       	movw	r30, r16
    1e6a:	91 83       	std	Z+1, r25	; 0x01
    1e6c:	80 83       	st	Z, r24
    1e6e:	c7 01       	movw	r24, r14
    1e70:	b6 01       	movw	r22, r12
    1e72:	a2 01       	movw	r20, r4
    1e74:	91 01       	movw	r18, r2
    1e76:	0e 94 28 27 	call	0x4e50	; 0x4e50 <__subsf3>
    1e7a:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    1e7e:	d8 01       	movw	r26, r16
    1e80:	13 96       	adiw	r26, 0x03	; 3
    1e82:	7c 93       	st	X, r23
    1e84:	6e 93       	st	-X, r22
    1e86:	12 97       	sbiw	r26, 0x02	; 2
    1e88:	82 ec       	ldi	r24, 0xC2	; 194
    1e8a:	91 e0       	ldi	r25, 0x01	; 1
    1e8c:	15 96       	adiw	r26, 0x05	; 5
    1e8e:	9c 93       	st	X, r25
    1e90:	8e 93       	st	-X, r24
    1e92:	14 97       	sbiw	r26, 0x04	; 4
    1e94:	16 96       	adiw	r26, 0x06	; 6
    1e96:	1c 92       	st	X, r1
    1e98:	16 97       	sbiw	r26, 0x06	; 6
    1e9a:	18 96       	adiw	r26, 0x08	; 8
    1e9c:	1c 92       	st	X, r1
    1e9e:	1e 92       	st	-X, r1
    1ea0:	17 97       	sbiw	r26, 0x07	; 7
    1ea2:	81 e0       	ldi	r24, 0x01	; 1
    1ea4:	62 e0       	ldi	r22, 0x02	; 2
    1ea6:	47 2d       	mov	r20, r7
    1ea8:	22 e3       	ldi	r18, 0x32	; 50
    1eaa:	30 e0       	ldi	r19, 0x00	; 0
    1eac:	84 01       	movw	r16, r8
    1eae:	72 ec       	ldi	r23, 0xC2	; 194
    1eb0:	e7 2e       	mov	r14, r23
    1eb2:	71 e0       	ldi	r23, 0x01	; 1
    1eb4:	f7 2e       	mov	r15, r23
    1eb6:	cc 24       	eor	r12, r12
    1eb8:	aa 24       	eor	r10, r10
    1eba:	bb 24       	eor	r11, r11
    1ebc:	87 2c       	mov	r8, r7
    1ebe:	82 c0       	rjmp	.+260    	; 0x1fc4 <moveAway+0x286>
>>>>>>> Lab6 Code
			shyRobot = 1;
	}
	
	// if the object is on either side of the robot
	// rotate the robot appropriately
	else if ((rtIR < IR_OBST_R_THRESH))
<<<<<<< HEAD
    1c9e:	c8 01       	movw	r24, r16
    1ca0:	b7 01       	movw	r22, r14
    1ca2:	20 e0       	ldi	r18, 0x00	; 0
    1ca4:	30 e0       	ldi	r19, 0x00	; 0
    1ca6:	40 e2       	ldi	r20, 0x20	; 32
    1ca8:	51 e4       	ldi	r21, 0x41	; 65
    1caa:	0e 94 29 26 	call	0x4c52	; 0x4c52 <__cmpsf2>
    1cae:	88 23       	and	r24, r24
    1cb0:	b4 f5       	brge	.+108    	; 0x1d1e <moveAway+0x202>
=======
    1ec0:	c8 01       	movw	r24, r16
    1ec2:	b7 01       	movw	r22, r14
    1ec4:	20 e0       	ldi	r18, 0x00	; 0
    1ec6:	30 e0       	ldi	r19, 0x00	; 0
    1ec8:	40 e2       	ldi	r20, 0x20	; 32
    1eca:	51 e4       	ldi	r21, 0x41	; 65
    1ecc:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    1ed0:	88 23       	and	r24, r24
    1ed2:	b4 f5       	brge	.+108    	; 0x1f40 <moveAway+0x202>
>>>>>>> Lab6 Code
	{
			// BOOL moveForwardR = ~(moveX <= 0);
			// BOOL moveForwardL = ~(moveX > 0);
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
<<<<<<< HEAD
    1cb2:	c2 01       	movw	r24, r4
    1cb4:	b1 01       	movw	r22, r2
    1cb6:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1cba:	8b 01       	movw	r16, r22
    1cbc:	77 ff       	sbrs	r23, 7
    1cbe:	03 c0       	rjmp	.+6      	; 0x1cc6 <moveAway+0x1aa>
    1cc0:	10 95       	com	r17
    1cc2:	01 95       	neg	r16
    1cc4:	1f 4f       	sbci	r17, 0xFF	; 255
    1cc6:	2d b7       	in	r18, 0x3d	; 61
    1cc8:	3e b7       	in	r19, 0x3e	; 62
    1cca:	29 50       	subi	r18, 0x09	; 9
    1ccc:	30 40       	sbci	r19, 0x00	; 0
    1cce:	0f b6       	in	r0, 0x3f	; 63
    1cd0:	f8 94       	cli
    1cd2:	3e bf       	out	0x3e, r19	; 62
    1cd4:	0f be       	out	0x3f, r0	; 63
    1cd6:	2d bf       	out	0x3d, r18	; 61
    1cd8:	ed b7       	in	r30, 0x3d	; 61
    1cda:	fe b7       	in	r31, 0x3e	; 62
    1cdc:	31 96       	adiw	r30, 0x01	; 1
    1cde:	88 ec       	ldi	r24, 0xC8	; 200
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	ad b7       	in	r26, 0x3d	; 61
    1ce4:	be b7       	in	r27, 0x3e	; 62
    1ce6:	12 96       	adiw	r26, 0x02	; 2
    1ce8:	9c 93       	st	X, r25
    1cea:	8e 93       	st	-X, r24
    1cec:	11 97       	sbiw	r26, 0x01	; 1
    1cee:	13 83       	std	Z+3, r17	; 0x03
    1cf0:	02 83       	std	Z+2, r16	; 0x02
    1cf2:	82 ec       	ldi	r24, 0xC2	; 194
    1cf4:	91 e0       	ldi	r25, 0x01	; 1
    1cf6:	95 83       	std	Z+5, r25	; 0x05
    1cf8:	84 83       	std	Z+4, r24	; 0x04
    1cfa:	16 82       	std	Z+6, r1	; 0x06
    1cfc:	10 86       	std	Z+8, r1	; 0x08
    1cfe:	17 82       	std	Z+7, r1	; 0x07
    1d00:	81 e0       	ldi	r24, 0x01	; 1
    1d02:	62 e0       	ldi	r22, 0x02	; 2
    1d04:	40 e0       	ldi	r20, 0x00	; 0
    1d06:	28 ec       	ldi	r18, 0xC8	; 200
    1d08:	30 e0       	ldi	r19, 0x00	; 0
    1d0a:	52 ec       	ldi	r21, 0xC2	; 194
    1d0c:	e5 2e       	mov	r14, r21
    1d0e:	51 e0       	ldi	r21, 0x01	; 1
    1d10:	f5 2e       	mov	r15, r21
    1d12:	cc 24       	eor	r12, r12
    1d14:	aa 24       	eor	r10, r10
    1d16:	bb 24       	eor	r11, r11
    1d18:	88 24       	eor	r8, r8
    1d1a:	83 94       	inc	r8
    1d1c:	42 c0       	rjmp	.+132    	; 0x1da2 <moveAway+0x286>
=======
    1ed4:	c2 01       	movw	r24, r4
    1ed6:	b1 01       	movw	r22, r2
    1ed8:	0e 94 f9 27 	call	0x4ff2	; 0x4ff2 <__fixsfsi>
    1edc:	8b 01       	movw	r16, r22
    1ede:	77 ff       	sbrs	r23, 7
    1ee0:	03 c0       	rjmp	.+6      	; 0x1ee8 <moveAway+0x1aa>
    1ee2:	10 95       	com	r17
    1ee4:	01 95       	neg	r16
    1ee6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ee8:	2d b7       	in	r18, 0x3d	; 61
    1eea:	3e b7       	in	r19, 0x3e	; 62
    1eec:	29 50       	subi	r18, 0x09	; 9
    1eee:	30 40       	sbci	r19, 0x00	; 0
    1ef0:	0f b6       	in	r0, 0x3f	; 63
    1ef2:	f8 94       	cli
    1ef4:	3e bf       	out	0x3e, r19	; 62
    1ef6:	0f be       	out	0x3f, r0	; 63
    1ef8:	2d bf       	out	0x3d, r18	; 61
    1efa:	ed b7       	in	r30, 0x3d	; 61
    1efc:	fe b7       	in	r31, 0x3e	; 62
    1efe:	31 96       	adiw	r30, 0x01	; 1
    1f00:	88 ec       	ldi	r24, 0xC8	; 200
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	ad b7       	in	r26, 0x3d	; 61
    1f06:	be b7       	in	r27, 0x3e	; 62
    1f08:	12 96       	adiw	r26, 0x02	; 2
    1f0a:	9c 93       	st	X, r25
    1f0c:	8e 93       	st	-X, r24
    1f0e:	11 97       	sbiw	r26, 0x01	; 1
    1f10:	13 83       	std	Z+3, r17	; 0x03
    1f12:	02 83       	std	Z+2, r16	; 0x02
    1f14:	82 ec       	ldi	r24, 0xC2	; 194
    1f16:	91 e0       	ldi	r25, 0x01	; 1
    1f18:	95 83       	std	Z+5, r25	; 0x05
    1f1a:	84 83       	std	Z+4, r24	; 0x04
    1f1c:	16 82       	std	Z+6, r1	; 0x06
    1f1e:	10 86       	std	Z+8, r1	; 0x08
    1f20:	17 82       	std	Z+7, r1	; 0x07
    1f22:	81 e0       	ldi	r24, 0x01	; 1
    1f24:	62 e0       	ldi	r22, 0x02	; 2
    1f26:	40 e0       	ldi	r20, 0x00	; 0
    1f28:	28 ec       	ldi	r18, 0xC8	; 200
    1f2a:	30 e0       	ldi	r19, 0x00	; 0
    1f2c:	52 ec       	ldi	r21, 0xC2	; 194
    1f2e:	e5 2e       	mov	r14, r21
    1f30:	51 e0       	ldi	r21, 0x01	; 1
    1f32:	f5 2e       	mov	r15, r21
    1f34:	cc 24       	eor	r12, r12
    1f36:	aa 24       	eor	r10, r10
    1f38:	bb 24       	eor	r11, r11
    1f3a:	88 24       	eor	r8, r8
    1f3c:	83 94       	inc	r8
    1f3e:	42 c0       	rjmp	.+132    	; 0x1fc4 <moveAway+0x286>
>>>>>>> Lab6 Code
			
			// if the robot was shy
			// state that fact
			shyRobot = 1;
	}
	else if ((ltIR < IR_OBST_L_THRESH))
<<<<<<< HEAD
    1d1e:	69 81       	ldd	r22, Y+1	; 0x01
    1d20:	7a 81       	ldd	r23, Y+2	; 0x02
    1d22:	8b 81       	ldd	r24, Y+3	; 0x03
    1d24:	9c 81       	ldd	r25, Y+4	; 0x04
    1d26:	20 e0       	ldi	r18, 0x00	; 0
    1d28:	30 e0       	ldi	r19, 0x00	; 0
    1d2a:	40 e2       	ldi	r20, 0x20	; 32
    1d2c:	51 e4       	ldi	r21, 0x41	; 65
    1d2e:	0e 94 29 26 	call	0x4c52	; 0x4c52 <__cmpsf2>
    1d32:	87 fd       	sbrc	r24, 7
    1d34:	02 c0       	rjmp	.+4      	; 0x1d3a <moveAway+0x21e>
    1d36:	80 e0       	ldi	r24, 0x00	; 0
    1d38:	3f c0       	rjmp	.+126    	; 0x1db8 <moveAway+0x29c>
=======
    1f40:	69 81       	ldd	r22, Y+1	; 0x01
    1f42:	7a 81       	ldd	r23, Y+2	; 0x02
    1f44:	8b 81       	ldd	r24, Y+3	; 0x03
    1f46:	9c 81       	ldd	r25, Y+4	; 0x04
    1f48:	20 e0       	ldi	r18, 0x00	; 0
    1f4a:	30 e0       	ldi	r19, 0x00	; 0
    1f4c:	40 e2       	ldi	r20, 0x20	; 32
    1f4e:	51 e4       	ldi	r21, 0x41	; 65
    1f50:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    1f54:	87 fd       	sbrc	r24, 7
    1f56:	02 c0       	rjmp	.+4      	; 0x1f5c <moveAway+0x21e>
    1f58:	80 e0       	ldi	r24, 0x00	; 0
    1f5a:	3f c0       	rjmp	.+126    	; 0x1fda <moveAway+0x29c>
>>>>>>> Lab6 Code
	{
			// BOOL moveForwardR = ~(moveX <= 0);
			// BOOL moveForwardL = ~(moveX > 0);
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
<<<<<<< HEAD
    1d3a:	c2 01       	movw	r24, r4
    1d3c:	b1 01       	movw	r22, r2
    1d3e:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1d42:	8b 01       	movw	r16, r22
    1d44:	77 ff       	sbrs	r23, 7
    1d46:	03 c0       	rjmp	.+6      	; 0x1d4e <moveAway+0x232>
    1d48:	10 95       	com	r17
    1d4a:	01 95       	neg	r16
    1d4c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d4e:	2d b7       	in	r18, 0x3d	; 61
    1d50:	3e b7       	in	r19, 0x3e	; 62
    1d52:	29 50       	subi	r18, 0x09	; 9
    1d54:	30 40       	sbci	r19, 0x00	; 0
    1d56:	0f b6       	in	r0, 0x3f	; 63
    1d58:	f8 94       	cli
    1d5a:	3e bf       	out	0x3e, r19	; 62
    1d5c:	0f be       	out	0x3f, r0	; 63
    1d5e:	2d bf       	out	0x3d, r18	; 61
    1d60:	ed b7       	in	r30, 0x3d	; 61
    1d62:	fe b7       	in	r31, 0x3e	; 62
    1d64:	31 96       	adiw	r30, 0x01	; 1
    1d66:	88 ec       	ldi	r24, 0xC8	; 200
    1d68:	90 e0       	ldi	r25, 0x00	; 0
    1d6a:	ad b7       	in	r26, 0x3d	; 61
    1d6c:	be b7       	in	r27, 0x3e	; 62
    1d6e:	12 96       	adiw	r26, 0x02	; 2
    1d70:	9c 93       	st	X, r25
    1d72:	8e 93       	st	-X, r24
    1d74:	11 97       	sbiw	r26, 0x01	; 1
    1d76:	13 83       	std	Z+3, r17	; 0x03
    1d78:	02 83       	std	Z+2, r16	; 0x02
    1d7a:	82 ec       	ldi	r24, 0xC2	; 194
    1d7c:	91 e0       	ldi	r25, 0x01	; 1
    1d7e:	95 83       	std	Z+5, r25	; 0x05
    1d80:	84 83       	std	Z+4, r24	; 0x04
    1d82:	16 82       	std	Z+6, r1	; 0x06
    1d84:	10 86       	std	Z+8, r1	; 0x08
    1d86:	17 82       	std	Z+7, r1	; 0x07
    1d88:	81 e0       	ldi	r24, 0x01	; 1
    1d8a:	62 e0       	ldi	r22, 0x02	; 2
    1d8c:	41 e0       	ldi	r20, 0x01	; 1
    1d8e:	28 ec       	ldi	r18, 0xC8	; 200
    1d90:	30 e0       	ldi	r19, 0x00	; 0
    1d92:	92 ec       	ldi	r25, 0xC2	; 194
    1d94:	e9 2e       	mov	r14, r25
    1d96:	91 e0       	ldi	r25, 0x01	; 1
    1d98:	f9 2e       	mov	r15, r25
    1d9a:	cc 24       	eor	r12, r12
    1d9c:	aa 24       	eor	r10, r10
    1d9e:	bb 24       	eor	r11, r11
    1da0:	88 24       	eor	r8, r8
    1da2:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <STEPPER_move>
    1da6:	81 e0       	ldi	r24, 0x01	; 1
    1da8:	ed b7       	in	r30, 0x3d	; 61
    1daa:	fe b7       	in	r31, 0x3e	; 62
    1dac:	39 96       	adiw	r30, 0x09	; 9
    1dae:	0f b6       	in	r0, 0x3f	; 63
    1db0:	f8 94       	cli
    1db2:	fe bf       	out	0x3e, r31	; 62
    1db4:	0f be       	out	0x3f, r0	; 63
    1db6:	ed bf       	out	0x3d, r30	; 61
=======
    1f5c:	c2 01       	movw	r24, r4
    1f5e:	b1 01       	movw	r22, r2
    1f60:	0e 94 f9 27 	call	0x4ff2	; 0x4ff2 <__fixsfsi>
    1f64:	8b 01       	movw	r16, r22
    1f66:	77 ff       	sbrs	r23, 7
    1f68:	03 c0       	rjmp	.+6      	; 0x1f70 <moveAway+0x232>
    1f6a:	10 95       	com	r17
    1f6c:	01 95       	neg	r16
    1f6e:	1f 4f       	sbci	r17, 0xFF	; 255
    1f70:	2d b7       	in	r18, 0x3d	; 61
    1f72:	3e b7       	in	r19, 0x3e	; 62
    1f74:	29 50       	subi	r18, 0x09	; 9
    1f76:	30 40       	sbci	r19, 0x00	; 0
    1f78:	0f b6       	in	r0, 0x3f	; 63
    1f7a:	f8 94       	cli
    1f7c:	3e bf       	out	0x3e, r19	; 62
    1f7e:	0f be       	out	0x3f, r0	; 63
    1f80:	2d bf       	out	0x3d, r18	; 61
    1f82:	ed b7       	in	r30, 0x3d	; 61
    1f84:	fe b7       	in	r31, 0x3e	; 62
    1f86:	31 96       	adiw	r30, 0x01	; 1
    1f88:	88 ec       	ldi	r24, 0xC8	; 200
    1f8a:	90 e0       	ldi	r25, 0x00	; 0
    1f8c:	ad b7       	in	r26, 0x3d	; 61
    1f8e:	be b7       	in	r27, 0x3e	; 62
    1f90:	12 96       	adiw	r26, 0x02	; 2
    1f92:	9c 93       	st	X, r25
    1f94:	8e 93       	st	-X, r24
    1f96:	11 97       	sbiw	r26, 0x01	; 1
    1f98:	13 83       	std	Z+3, r17	; 0x03
    1f9a:	02 83       	std	Z+2, r16	; 0x02
    1f9c:	82 ec       	ldi	r24, 0xC2	; 194
    1f9e:	91 e0       	ldi	r25, 0x01	; 1
    1fa0:	95 83       	std	Z+5, r25	; 0x05
    1fa2:	84 83       	std	Z+4, r24	; 0x04
    1fa4:	16 82       	std	Z+6, r1	; 0x06
    1fa6:	10 86       	std	Z+8, r1	; 0x08
    1fa8:	17 82       	std	Z+7, r1	; 0x07
    1faa:	81 e0       	ldi	r24, 0x01	; 1
    1fac:	62 e0       	ldi	r22, 0x02	; 2
    1fae:	41 e0       	ldi	r20, 0x01	; 1
    1fb0:	28 ec       	ldi	r18, 0xC8	; 200
    1fb2:	30 e0       	ldi	r19, 0x00	; 0
    1fb4:	92 ec       	ldi	r25, 0xC2	; 194
    1fb6:	e9 2e       	mov	r14, r25
    1fb8:	91 e0       	ldi	r25, 0x01	; 1
    1fba:	f9 2e       	mov	r15, r25
    1fbc:	cc 24       	eor	r12, r12
    1fbe:	aa 24       	eor	r10, r10
    1fc0:	bb 24       	eor	r11, r11
    1fc2:	88 24       	eor	r8, r8
    1fc4:	0e 94 52 17 	call	0x2ea4	; 0x2ea4 <STEPPER_move>
    1fc8:	81 e0       	ldi	r24, 0x01	; 1
    1fca:	ed b7       	in	r30, 0x3d	; 61
    1fcc:	fe b7       	in	r31, 0x3e	; 62
    1fce:	39 96       	adiw	r30, 0x09	; 9
    1fd0:	0f b6       	in	r0, 0x3f	; 63
    1fd2:	f8 94       	cli
    1fd4:	fe bf       	out	0x3e, r31	; 62
    1fd6:	0f be       	out	0x3f, r0	; 63
    1fd8:	ed bf       	out	0x3d, r30	; 61
>>>>>>> Lab6 Code
			// state that fact
			shyRobot = 1;
	}
	
	return shyRobot;
}
    1fda:	0f 90       	pop	r0
    1fdc:	0f 90       	pop	r0
    1fde:	0f 90       	pop	r0
    1fe0:	0f 90       	pop	r0
    1fe2:	cf 91       	pop	r28
    1fe4:	df 91       	pop	r29
    1fe6:	1f 91       	pop	r17
    1fe8:	0f 91       	pop	r16
    1fea:	ff 90       	pop	r15
    1fec:	ef 90       	pop	r14
    1fee:	df 90       	pop	r13
    1ff0:	cf 90       	pop	r12
    1ff2:	bf 90       	pop	r11
    1ff4:	af 90       	pop	r10
    1ff6:	9f 90       	pop	r9
    1ff8:	8f 90       	pop	r8
    1ffa:	7f 90       	pop	r7
    1ffc:	6f 90       	pop	r6
    1ffe:	5f 90       	pop	r5
    2000:	4f 90       	pop	r4
    2002:	3f 90       	pop	r3
    2004:	2f 90       	pop	r2
    2006:	08 95       	ret

00002008 <moveWall>:
* Overview:			This function searches for walls and adjust the 
*					robots differential steering to attempts to
*					follow them
********************************************************************/
char moveWall( void )
{	
    2008:	2f 92       	push	r2
    200a:	3f 92       	push	r3
    200c:	4f 92       	push	r4
    200e:	5f 92       	push	r5
    2010:	6f 92       	push	r6
    2012:	7f 92       	push	r7
    2014:	8f 92       	push	r8
    2016:	9f 92       	push	r9
    2018:	af 92       	push	r10
    201a:	bf 92       	push	r11
    201c:	cf 92       	push	r12
    201e:	df 92       	push	r13
    2020:	ef 92       	push	r14
    2022:	ff 92       	push	r15
    2024:	0f 93       	push	r16
    2026:	1f 93       	push	r17
	// Check for walls
	BOOL isWall = (ftIR < IR_WALL_F_THRESH)|(bkIR < IR_WALL_B_THRESH)|(rtIR < IR_WALL_R_THRESH)|(ltIR < IR_WALL_L_THRESH);
<<<<<<< HEAD
    1e06:	e0 90 28 02 	lds	r14, 0x0228
    1e0a:	f0 90 29 02 	lds	r15, 0x0229
    1e0e:	00 91 2a 02 	lds	r16, 0x022A
    1e12:	10 91 2b 02 	lds	r17, 0x022B
    1e16:	33 24       	eor	r3, r3
    1e18:	c8 01       	movw	r24, r16
    1e1a:	b7 01       	movw	r22, r14
    1e1c:	20 e0       	ldi	r18, 0x00	; 0
    1e1e:	30 e0       	ldi	r19, 0x00	; 0
    1e20:	48 eb       	ldi	r20, 0xB8	; 184
    1e22:	51 e4       	ldi	r21, 0x41	; 65
    1e24:	0e 94 29 26 	call	0x4c52	; 0x4c52 <__cmpsf2>
    1e28:	88 23       	and	r24, r24
    1e2a:	14 f4       	brge	.+4      	; 0x1e30 <moveWall+0x4a>
    1e2c:	33 24       	eor	r3, r3
    1e2e:	33 94       	inc	r3
    1e30:	a0 90 24 02 	lds	r10, 0x0224
    1e34:	b0 90 25 02 	lds	r11, 0x0225
    1e38:	c0 90 26 02 	lds	r12, 0x0226
    1e3c:	d0 90 27 02 	lds	r13, 0x0227
    1e40:	40 90 20 02 	lds	r4, 0x0220
    1e44:	50 90 21 02 	lds	r5, 0x0221
    1e48:	60 90 22 02 	lds	r6, 0x0222
    1e4c:	70 90 23 02 	lds	r7, 0x0223
    1e50:	88 24       	eor	r8, r8
    1e52:	60 91 2c 02 	lds	r22, 0x022C
    1e56:	70 91 2d 02 	lds	r23, 0x022D
    1e5a:	80 91 2e 02 	lds	r24, 0x022E
    1e5e:	90 91 2f 02 	lds	r25, 0x022F
    1e62:	20 e0       	ldi	r18, 0x00	; 0
    1e64:	30 e0       	ldi	r19, 0x00	; 0
    1e66:	48 eb       	ldi	r20, 0xB8	; 184
    1e68:	51 e4       	ldi	r21, 0x41	; 65
    1e6a:	0e 94 29 26 	call	0x4c52	; 0x4c52 <__cmpsf2>
    1e6e:	88 23       	and	r24, r24
    1e70:	14 f4       	brge	.+4      	; 0x1e76 <moveWall+0x90>
    1e72:	88 24       	eor	r8, r8
    1e74:	83 94       	inc	r8
    1e76:	93 2c       	mov	r9, r3
    1e78:	98 28       	or	r9, r8
    1e7a:	88 24       	eor	r8, r8
    1e7c:	c6 01       	movw	r24, r12
    1e7e:	b5 01       	movw	r22, r10
    1e80:	20 e0       	ldi	r18, 0x00	; 0
    1e82:	30 e0       	ldi	r19, 0x00	; 0
    1e84:	40 ea       	ldi	r20, 0xA0	; 160
    1e86:	51 e4       	ldi	r21, 0x41	; 65
    1e88:	0e 94 29 26 	call	0x4c52	; 0x4c52 <__cmpsf2>
    1e8c:	88 23       	and	r24, r24
    1e8e:	14 f4       	brge	.+4      	; 0x1e94 <moveWall+0xae>
    1e90:	88 24       	eor	r8, r8
    1e92:	83 94       	inc	r8
    1e94:	98 28       	or	r9, r8
    1e96:	88 24       	eor	r8, r8
    1e98:	c3 01       	movw	r24, r6
    1e9a:	b2 01       	movw	r22, r4
    1e9c:	20 e0       	ldi	r18, 0x00	; 0
    1e9e:	30 e0       	ldi	r19, 0x00	; 0
    1ea0:	40 ea       	ldi	r20, 0xA0	; 160
    1ea2:	51 e4       	ldi	r21, 0x41	; 65
    1ea4:	0e 94 29 26 	call	0x4c52	; 0x4c52 <__cmpsf2>
    1ea8:	88 23       	and	r24, r24
    1eaa:	14 f4       	brge	.+4      	; 0x1eb0 <moveWall+0xca>
    1eac:	88 24       	eor	r8, r8
    1eae:	83 94       	inc	r8
    1eb0:	29 2c       	mov	r2, r9
    1eb2:	28 28       	or	r2, r8
=======
    2028:	e0 90 58 02 	lds	r14, 0x0258
    202c:	f0 90 59 02 	lds	r15, 0x0259
    2030:	00 91 5a 02 	lds	r16, 0x025A
    2034:	10 91 5b 02 	lds	r17, 0x025B
    2038:	33 24       	eor	r3, r3
    203a:	c8 01       	movw	r24, r16
    203c:	b7 01       	movw	r22, r14
    203e:	20 e0       	ldi	r18, 0x00	; 0
    2040:	30 e0       	ldi	r19, 0x00	; 0
    2042:	48 eb       	ldi	r20, 0xB8	; 184
    2044:	51 e4       	ldi	r21, 0x41	; 65
    2046:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    204a:	88 23       	and	r24, r24
    204c:	14 f4       	brge	.+4      	; 0x2052 <moveWall+0x4a>
    204e:	33 24       	eor	r3, r3
    2050:	33 94       	inc	r3
    2052:	a0 90 54 02 	lds	r10, 0x0254
    2056:	b0 90 55 02 	lds	r11, 0x0255
    205a:	c0 90 56 02 	lds	r12, 0x0256
    205e:	d0 90 57 02 	lds	r13, 0x0257
    2062:	40 90 50 02 	lds	r4, 0x0250
    2066:	50 90 51 02 	lds	r5, 0x0251
    206a:	60 90 52 02 	lds	r6, 0x0252
    206e:	70 90 53 02 	lds	r7, 0x0253
    2072:	88 24       	eor	r8, r8
    2074:	60 91 5c 02 	lds	r22, 0x025C
    2078:	70 91 5d 02 	lds	r23, 0x025D
    207c:	80 91 5e 02 	lds	r24, 0x025E
    2080:	90 91 5f 02 	lds	r25, 0x025F
    2084:	20 e0       	ldi	r18, 0x00	; 0
    2086:	30 e0       	ldi	r19, 0x00	; 0
    2088:	48 eb       	ldi	r20, 0xB8	; 184
    208a:	51 e4       	ldi	r21, 0x41	; 65
    208c:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    2090:	88 23       	and	r24, r24
    2092:	14 f4       	brge	.+4      	; 0x2098 <moveWall+0x90>
    2094:	88 24       	eor	r8, r8
    2096:	83 94       	inc	r8
    2098:	93 2c       	mov	r9, r3
    209a:	98 28       	or	r9, r8
    209c:	88 24       	eor	r8, r8
    209e:	c6 01       	movw	r24, r12
    20a0:	b5 01       	movw	r22, r10
    20a2:	20 e0       	ldi	r18, 0x00	; 0
    20a4:	30 e0       	ldi	r19, 0x00	; 0
    20a6:	40 ea       	ldi	r20, 0xA0	; 160
    20a8:	51 e4       	ldi	r21, 0x41	; 65
    20aa:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    20ae:	88 23       	and	r24, r24
    20b0:	14 f4       	brge	.+4      	; 0x20b6 <moveWall+0xae>
    20b2:	88 24       	eor	r8, r8
    20b4:	83 94       	inc	r8
    20b6:	98 28       	or	r9, r8
    20b8:	88 24       	eor	r8, r8
    20ba:	c3 01       	movw	r24, r6
    20bc:	b2 01       	movw	r22, r4
    20be:	20 e0       	ldi	r18, 0x00	; 0
    20c0:	30 e0       	ldi	r19, 0x00	; 0
    20c2:	40 ea       	ldi	r20, 0xA0	; 160
    20c4:	51 e4       	ldi	r21, 0x41	; 65
    20c6:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    20ca:	88 23       	and	r24, r24
    20cc:	14 f4       	brge	.+4      	; 0x20d2 <moveWall+0xca>
    20ce:	88 24       	eor	r8, r8
    20d0:	83 94       	inc	r8
    20d2:	29 2c       	mov	r2, r9
    20d4:	28 28       	or	r2, r8
>>>>>>> Lab6 Code
	if(!isWall){	
    20d6:	09 f4       	brne	.+2      	; 0x20da <moveWall+0xd2>
    20d8:	fd c0       	rjmp	.+506    	; 0x22d4 <moveWall+0x2cc>
	// A variable that contains the logic of which wall is imaginary
	BOOL isLEFT;
	
	// If there is no wall on our right side
	// place an imaginary wall just within the threshold
	if(rtIR>IR_WALL_R_THRESH){
<<<<<<< HEAD
    1eb8:	c6 01       	movw	r24, r12
    1eba:	b5 01       	movw	r22, r10
    1ebc:	20 e0       	ldi	r18, 0x00	; 0
    1ebe:	30 e0       	ldi	r19, 0x00	; 0
    1ec0:	40 ea       	ldi	r20, 0xA0	; 160
    1ec2:	51 e4       	ldi	r21, 0x41	; 65
    1ec4:	0e 94 78 27 	call	0x4ef0	; 0x4ef0 <__gesf2>
    1ec8:	18 16       	cp	r1, r24
    1eca:	64 f4       	brge	.+24     	; 0x1ee4 <moveWall+0xfe>
=======
    20da:	c6 01       	movw	r24, r12
    20dc:	b5 01       	movw	r22, r10
    20de:	20 e0       	ldi	r18, 0x00	; 0
    20e0:	30 e0       	ldi	r19, 0x00	; 0
    20e2:	40 ea       	ldi	r20, 0xA0	; 160
    20e4:	51 e4       	ldi	r21, 0x41	; 65
    20e6:	0e 94 dc 28 	call	0x51b8	; 0x51b8 <__gesf2>
    20ea:	18 16       	cp	r1, r24
    20ec:	64 f4       	brge	.+24     	; 0x2106 <moveWall+0xfe>
>>>>>>> Lab6 Code
		rtIR = IR_WALL_R_THRESH-15;
    20ee:	80 e0       	ldi	r24, 0x00	; 0
    20f0:	90 e0       	ldi	r25, 0x00	; 0
    20f2:	a0 ea       	ldi	r26, 0xA0	; 160
    20f4:	b0 e4       	ldi	r27, 0x40	; 64
    20f6:	80 93 54 02 	sts	0x0254, r24
    20fa:	90 93 55 02 	sts	0x0255, r25
    20fe:	a0 93 56 02 	sts	0x0256, r26
    2102:	b0 93 57 02 	sts	0x0257, r27
		isLEFT = 0;
	}
	// If there is no wall on our left side
	// place an imaginary wall just within the threshold
	if(ltIR>IR_WALL_L_THRESH){
<<<<<<< HEAD
    1ee4:	c3 01       	movw	r24, r6
    1ee6:	b2 01       	movw	r22, r4
    1ee8:	20 e0       	ldi	r18, 0x00	; 0
    1eea:	30 e0       	ldi	r19, 0x00	; 0
    1eec:	40 ea       	ldi	r20, 0xA0	; 160
    1eee:	51 e4       	ldi	r21, 0x41	; 65
    1ef0:	0e 94 78 27 	call	0x4ef0	; 0x4ef0 <__gesf2>
    1ef4:	18 16       	cp	r1, r24
    1ef6:	14 f0       	brlt	.+4      	; 0x1efc <moveWall+0x116>
    1ef8:	80 e0       	ldi	r24, 0x00	; 0
    1efa:	0d c0       	rjmp	.+26     	; 0x1f16 <moveWall+0x130>
=======
    2106:	c3 01       	movw	r24, r6
    2108:	b2 01       	movw	r22, r4
    210a:	20 e0       	ldi	r18, 0x00	; 0
    210c:	30 e0       	ldi	r19, 0x00	; 0
    210e:	40 ea       	ldi	r20, 0xA0	; 160
    2110:	51 e4       	ldi	r21, 0x41	; 65
    2112:	0e 94 dc 28 	call	0x51b8	; 0x51b8 <__gesf2>
    2116:	18 16       	cp	r1, r24
    2118:	14 f0       	brlt	.+4      	; 0x211e <moveWall+0x116>
    211a:	80 e0       	ldi	r24, 0x00	; 0
    211c:	0d c0       	rjmp	.+26     	; 0x2138 <moveWall+0x130>
>>>>>>> Lab6 Code
		ltIR = IR_WALL_L_THRESH-15;
    211e:	80 e0       	ldi	r24, 0x00	; 0
    2120:	90 e0       	ldi	r25, 0x00	; 0
    2122:	a0 ea       	ldi	r26, 0xA0	; 160
    2124:	b0 e4       	ldi	r27, 0x40	; 64
    2126:	80 93 50 02 	sts	0x0250, r24
    212a:	90 93 51 02 	sts	0x0251, r25
    212e:	a0 93 52 02 	sts	0x0252, r26
    2132:	b0 93 53 02 	sts	0x0253, r27
    2136:	81 e0       	ldi	r24, 0x01	; 1
	}
	
	float error;
	
	// Check to see if the wall exists in front of the robot
	if(ftIR < IR_WALL_F_THRESH)
    2138:	33 20       	and	r3, r3
    213a:	21 f1       	breq	.+72     	; 0x2184 <moveWall+0x17c>
	{
		// if the imaginary wall was on the left side
		// then biased the error so that when the robot encounters
		// an upcoming corner, the robot will turn away from both walls
		if (isLEFT)
    213c:	88 23       	and	r24, r24
    213e:	29 f0       	breq	.+10     	; 0x214a <moveWall+0x142>
		{
			error = rtIR - (ltIR + (1000/ftIR));
    2140:	60 e0       	ldi	r22, 0x00	; 0
    2142:	70 e0       	ldi	r23, 0x00	; 0
    2144:	8a e7       	ldi	r24, 0x7A	; 122
    2146:	94 e4       	ldi	r25, 0x44	; 68
    2148:	04 c0       	rjmp	.+8      	; 0x2152 <moveWall+0x14a>
		}
		// biased the error appropriately for the inverse situation
		else 
		{
			error = rtIR - (ltIR - (1000/ftIR));
<<<<<<< HEAD
    1f28:	60 e0       	ldi	r22, 0x00	; 0
    1f2a:	70 e0       	ldi	r23, 0x00	; 0
    1f2c:	8a e7       	ldi	r24, 0x7A	; 122
    1f2e:	94 ec       	ldi	r25, 0xC4	; 196
    1f30:	a8 01       	movw	r20, r16
    1f32:	97 01       	movw	r18, r14
    1f34:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1f38:	20 91 20 02 	lds	r18, 0x0220
    1f3c:	30 91 21 02 	lds	r19, 0x0221
    1f40:	40 91 22 02 	lds	r20, 0x0222
    1f44:	50 91 23 02 	lds	r21, 0x0223
    1f48:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
    1f4c:	9b 01       	movw	r18, r22
    1f4e:	ac 01       	movw	r20, r24
    1f50:	60 91 24 02 	lds	r22, 0x0224
    1f54:	70 91 25 02 	lds	r23, 0x0225
    1f58:	80 91 26 02 	lds	r24, 0x0226
    1f5c:	90 91 27 02 	lds	r25, 0x0227
    1f60:	10 c0       	rjmp	.+32     	; 0x1f82 <moveWall+0x19c>
=======
    214a:	60 e0       	ldi	r22, 0x00	; 0
    214c:	70 e0       	ldi	r23, 0x00	; 0
    214e:	8a e7       	ldi	r24, 0x7A	; 122
    2150:	94 ec       	ldi	r25, 0xC4	; 196
    2152:	a8 01       	movw	r20, r16
    2154:	97 01       	movw	r18, r14
    2156:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    215a:	20 91 50 02 	lds	r18, 0x0250
    215e:	30 91 51 02 	lds	r19, 0x0251
    2162:	40 91 52 02 	lds	r20, 0x0252
    2166:	50 91 53 02 	lds	r21, 0x0253
    216a:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    216e:	9b 01       	movw	r18, r22
    2170:	ac 01       	movw	r20, r24
    2172:	60 91 54 02 	lds	r22, 0x0254
    2176:	70 91 55 02 	lds	r23, 0x0255
    217a:	80 91 56 02 	lds	r24, 0x0256
    217e:	90 91 57 02 	lds	r25, 0x0257
    2182:	10 c0       	rjmp	.+32     	; 0x21a4 <moveWall+0x19c>
>>>>>>> Lab6 Code
	// the air is simply the right distance minus the left left distance
	// this ensures symmetry that the robot will follow in between the two walls
	// either one real and one imaginary, or both real
	else 
	{
		error = rtIR - ltIR;
<<<<<<< HEAD
    1f62:	60 91 24 02 	lds	r22, 0x0224
    1f66:	70 91 25 02 	lds	r23, 0x0225
    1f6a:	80 91 26 02 	lds	r24, 0x0226
    1f6e:	90 91 27 02 	lds	r25, 0x0227
    1f72:	20 91 20 02 	lds	r18, 0x0220
    1f76:	30 91 21 02 	lds	r19, 0x0221
    1f7a:	40 91 22 02 	lds	r20, 0x0222
    1f7e:	50 91 23 02 	lds	r21, 0x0223
    1f82:	0e 94 c4 25 	call	0x4b88	; 0x4b88 <__subsf3>
    1f86:	e6 2f       	mov	r30, r22
=======
    2184:	60 91 54 02 	lds	r22, 0x0254
    2188:	70 91 55 02 	lds	r23, 0x0255
    218c:	80 91 56 02 	lds	r24, 0x0256
    2190:	90 91 57 02 	lds	r25, 0x0257
    2194:	20 91 50 02 	lds	r18, 0x0250
    2198:	30 91 51 02 	lds	r19, 0x0251
    219c:	40 91 52 02 	lds	r20, 0x0252
    21a0:	50 91 53 02 	lds	r21, 0x0253
    21a4:	0e 94 28 27 	call	0x4e50	; 0x4e50 <__subsf3>
    21a8:	e6 2f       	mov	r30, r22
>>>>>>> Lab6 Code
	}

	// Use the PID controller function to calculate error
	float effort = pidController(error, 0);
    21aa:	2e 2f       	mov	r18, r30
    21ac:	37 2f       	mov	r19, r23
    21ae:	48 2f       	mov	r20, r24
    21b0:	59 2f       	mov	r21, r25
    21b2:	b9 01       	movw	r22, r18
    21b4:	ca 01       	movw	r24, r20
    21b6:	40 e0       	ldi	r20, 0x00	; 0
    21b8:	0e 94 58 08 	call	0x10b0	; 0x10b0 <pidController>
    21bc:	6b 01       	movw	r12, r22
    21be:	7c 01       	movw	r14, r24
	
	// Limit the control effort to the max allowable effort
	if((abs(effort) > MAX_EFFORT)&(effort!=0)){
<<<<<<< HEAD
    1f9e:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__fixsfsi>
    1fa2:	8b 01       	movw	r16, r22
    1fa4:	77 ff       	sbrs	r23, 7
    1fa6:	03 c0       	rjmp	.+6      	; 0x1fae <moveWall+0x1c8>
    1fa8:	10 95       	com	r17
    1faa:	01 95       	neg	r16
    1fac:	1f 4f       	sbci	r17, 0xFF	; 255
    1fae:	05 36       	cpi	r16, 0x65	; 101
    1fb0:	11 05       	cpc	r17, r1
    1fb2:	fc f0       	brlt	.+62     	; 0x1ff2 <moveWall+0x20c>
    1fb4:	c7 01       	movw	r24, r14
    1fb6:	b6 01       	movw	r22, r12
    1fb8:	20 e0       	ldi	r18, 0x00	; 0
    1fba:	30 e0       	ldi	r19, 0x00	; 0
    1fbc:	40 e0       	ldi	r20, 0x00	; 0
    1fbe:	50 e0       	ldi	r21, 0x00	; 0
    1fc0:	0e 94 29 26 	call	0x4c52	; 0x4c52 <__cmpsf2>
    1fc4:	88 23       	and	r24, r24
    1fc6:	a9 f0       	breq	.+42     	; 0x1ff2 <moveWall+0x20c>
		effort = MAX_EFFORT*(effort/abs(effort));
    1fc8:	b8 01       	movw	r22, r16
    1fca:	88 27       	eor	r24, r24
    1fcc:	77 fd       	sbrc	r23, 7
    1fce:	80 95       	com	r24
    1fd0:	98 2f       	mov	r25, r24
    1fd2:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    1fd6:	9b 01       	movw	r18, r22
    1fd8:	ac 01       	movw	r20, r24
    1fda:	c7 01       	movw	r24, r14
    1fdc:	b6 01       	movw	r22, r12
    1fde:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    1fe2:	20 e0       	ldi	r18, 0x00	; 0
    1fe4:	30 e0       	ldi	r19, 0x00	; 0
    1fe6:	48 ec       	ldi	r20, 0xC8	; 200
    1fe8:	52 e4       	ldi	r21, 0x42	; 66
    1fea:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    1fee:	6b 01       	movw	r12, r22
    1ff0:	7c 01       	movw	r14, r24
=======
    21c0:	0e 94 f9 27 	call	0x4ff2	; 0x4ff2 <__fixsfsi>
    21c4:	8b 01       	movw	r16, r22
    21c6:	77 ff       	sbrs	r23, 7
    21c8:	03 c0       	rjmp	.+6      	; 0x21d0 <moveWall+0x1c8>
    21ca:	10 95       	com	r17
    21cc:	01 95       	neg	r16
    21ce:	1f 4f       	sbci	r17, 0xFF	; 255
    21d0:	05 36       	cpi	r16, 0x65	; 101
    21d2:	11 05       	cpc	r17, r1
    21d4:	fc f0       	brlt	.+62     	; 0x2214 <moveWall+0x20c>
    21d6:	c7 01       	movw	r24, r14
    21d8:	b6 01       	movw	r22, r12
    21da:	20 e0       	ldi	r18, 0x00	; 0
    21dc:	30 e0       	ldi	r19, 0x00	; 0
    21de:	40 e0       	ldi	r20, 0x00	; 0
    21e0:	50 e0       	ldi	r21, 0x00	; 0
    21e2:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <__cmpsf2>
    21e6:	88 23       	and	r24, r24
    21e8:	a9 f0       	breq	.+42     	; 0x2214 <moveWall+0x20c>
		effort = MAX_EFFORT*(effort/abs(effort));
    21ea:	b8 01       	movw	r22, r16
    21ec:	88 27       	eor	r24, r24
    21ee:	77 fd       	sbrc	r23, 7
    21f0:	80 95       	com	r24
    21f2:	98 2f       	mov	r25, r24
    21f4:	0e 94 2c 28 	call	0x5058	; 0x5058 <__floatsisf>
    21f8:	9b 01       	movw	r18, r22
    21fa:	ac 01       	movw	r20, r24
    21fc:	c7 01       	movw	r24, r14
    21fe:	b6 01       	movw	r22, r12
    2200:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    2204:	20 e0       	ldi	r18, 0x00	; 0
    2206:	30 e0       	ldi	r19, 0x00	; 0
    2208:	48 ec       	ldi	r20, 0xC8	; 200
    220a:	52 e4       	ldi	r21, 0x42	; 66
    220c:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    2210:	6b 01       	movw	r12, r22
    2212:	7c 01       	movw	r14, r24
>>>>>>> Lab6 Code
	}
	
	// Calculate the stepper speeds for each wheel using a ratio
	float stepper_speed_L = MAX_SPEED/2 + (MAX_SPEED/2)*(effort/MAX_EFFORT);
<<<<<<< HEAD
    1ff2:	c7 01       	movw	r24, r14
    1ff4:	b6 01       	movw	r22, r12
    1ff6:	20 e0       	ldi	r18, 0x00	; 0
    1ff8:	30 e0       	ldi	r19, 0x00	; 0
    1ffa:	48 ec       	ldi	r20, 0xC8	; 200
    1ffc:	52 e4       	ldi	r21, 0x42	; 66
    1ffe:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    2002:	6b 01       	movw	r12, r22
    2004:	7c 01       	movw	r14, r24
=======
    2214:	c7 01       	movw	r24, r14
    2216:	b6 01       	movw	r22, r12
    2218:	20 e0       	ldi	r18, 0x00	; 0
    221a:	30 e0       	ldi	r19, 0x00	; 0
    221c:	48 ec       	ldi	r20, 0xC8	; 200
    221e:	52 e4       	ldi	r21, 0x42	; 66
    2220:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    2224:	6b 01       	movw	r12, r22
    2226:	7c 01       	movw	r14, r24
>>>>>>> Lab6 Code
	float stepper_speed_R = MAX_SPEED/2 - (MAX_SPEED/2)*(effort/MAX_EFFORT);
	
	// Move with wall
	STEPPER_move_stnb( STEPPER_BOTH, 
<<<<<<< HEAD
    2006:	8d b7       	in	r24, 0x3d	; 61
    2008:	9e b7       	in	r25, 0x3e	; 62
    200a:	09 97       	sbiw	r24, 0x09	; 9
    200c:	0f b6       	in	r0, 0x3f	; 63
    200e:	f8 94       	cli
    2010:	9e bf       	out	0x3e, r25	; 62
    2012:	0f be       	out	0x3f, r0	; 63
    2014:	8d bf       	out	0x3d, r24	; 61
    2016:	0d b7       	in	r16, 0x3d	; 61
    2018:	1e b7       	in	r17, 0x3e	; 62
    201a:	0f 5f       	subi	r16, 0xFF	; 255
    201c:	1f 4f       	sbci	r17, 0xFF	; 255
    201e:	c7 01       	movw	r24, r14
    2020:	b6 01       	movw	r22, r12
    2022:	20 e0       	ldi	r18, 0x00	; 0
    2024:	30 e0       	ldi	r19, 0x00	; 0
    2026:	48 ec       	ldi	r20, 0xC8	; 200
    2028:	52 e4       	ldi	r21, 0x42	; 66
    202a:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    202e:	20 e0       	ldi	r18, 0x00	; 0
    2030:	30 e0       	ldi	r19, 0x00	; 0
    2032:	48 ec       	ldi	r20, 0xC8	; 200
    2034:	52 e4       	ldi	r21, 0x42	; 66
    2036:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
    203a:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <__fixunssfsi>
    203e:	4b 01       	movw	r8, r22
    2040:	5c 01       	movw	r10, r24
    2042:	82 e3       	ldi	r24, 0x32	; 50
    2044:	90 e0       	ldi	r25, 0x00	; 0
    2046:	f8 01       	movw	r30, r16
    2048:	91 83       	std	Z+1, r25	; 0x01
    204a:	80 83       	st	Z, r24
    204c:	c7 01       	movw	r24, r14
    204e:	b6 01       	movw	r22, r12
    2050:	20 e0       	ldi	r18, 0x00	; 0
    2052:	30 e0       	ldi	r19, 0x00	; 0
    2054:	48 ec       	ldi	r20, 0xC8	; 200
    2056:	52 ec       	ldi	r21, 0xC2	; 194
    2058:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    205c:	20 e0       	ldi	r18, 0x00	; 0
    205e:	30 e0       	ldi	r19, 0x00	; 0
    2060:	48 ec       	ldi	r20, 0xC8	; 200
    2062:	52 e4       	ldi	r21, 0x42	; 66
    2064:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <__addsf3>
    2068:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <__fixunssfsi>
    206c:	f8 01       	movw	r30, r16
    206e:	73 83       	std	Z+3, r23	; 0x03
    2070:	62 83       	std	Z+2, r22	; 0x02
    2072:	82 ec       	ldi	r24, 0xC2	; 194
    2074:	91 e0       	ldi	r25, 0x01	; 1
    2076:	95 83       	std	Z+5, r25	; 0x05
    2078:	84 83       	std	Z+4, r24	; 0x04
    207a:	16 82       	std	Z+6, r1	; 0x06
    207c:	10 86       	std	Z+8, r1	; 0x08
    207e:	17 82       	std	Z+7, r1	; 0x07
    2080:	81 e0       	ldi	r24, 0x01	; 1
    2082:	62 e0       	ldi	r22, 0x02	; 2
    2084:	41 e0       	ldi	r20, 0x01	; 1
    2086:	22 e3       	ldi	r18, 0x32	; 50
    2088:	30 e0       	ldi	r19, 0x00	; 0
    208a:	84 01       	movw	r16, r8
    208c:	e2 ec       	ldi	r30, 0xC2	; 194
    208e:	ee 2e       	mov	r14, r30
    2090:	e1 e0       	ldi	r30, 0x01	; 1
    2092:	fe 2e       	mov	r15, r30
    2094:	cc 24       	eor	r12, r12
    2096:	aa 24       	eor	r10, r10
    2098:	bb 24       	eor	r11, r11
    209a:	88 24       	eor	r8, r8
    209c:	83 94       	inc	r8
    209e:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <STEPPER_move>
    20a2:	8d b7       	in	r24, 0x3d	; 61
    20a4:	9e b7       	in	r25, 0x3e	; 62
    20a6:	09 96       	adiw	r24, 0x09	; 9
    20a8:	0f b6       	in	r0, 0x3f	; 63
    20aa:	f8 94       	cli
    20ac:	9e bf       	out	0x3e, r25	; 62
    20ae:	0f be       	out	0x3f, r0	; 63
    20b0:	8d bf       	out	0x3d, r24	; 61
=======
    2228:	8d b7       	in	r24, 0x3d	; 61
    222a:	9e b7       	in	r25, 0x3e	; 62
    222c:	09 97       	sbiw	r24, 0x09	; 9
    222e:	0f b6       	in	r0, 0x3f	; 63
    2230:	f8 94       	cli
    2232:	9e bf       	out	0x3e, r25	; 62
    2234:	0f be       	out	0x3f, r0	; 63
    2236:	8d bf       	out	0x3d, r24	; 61
    2238:	0d b7       	in	r16, 0x3d	; 61
    223a:	1e b7       	in	r17, 0x3e	; 62
    223c:	0f 5f       	subi	r16, 0xFF	; 255
    223e:	1f 4f       	sbci	r17, 0xFF	; 255
    2240:	c7 01       	movw	r24, r14
    2242:	b6 01       	movw	r22, r12
    2244:	20 e0       	ldi	r18, 0x00	; 0
    2246:	30 e0       	ldi	r19, 0x00	; 0
    2248:	48 ec       	ldi	r20, 0xC8	; 200
    224a:	52 e4       	ldi	r21, 0x42	; 66
    224c:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    2250:	20 e0       	ldi	r18, 0x00	; 0
    2252:	30 e0       	ldi	r19, 0x00	; 0
    2254:	48 ec       	ldi	r20, 0xC8	; 200
    2256:	52 e4       	ldi	r21, 0x42	; 66
    2258:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    225c:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    2260:	4b 01       	movw	r8, r22
    2262:	5c 01       	movw	r10, r24
    2264:	82 e3       	ldi	r24, 0x32	; 50
    2266:	90 e0       	ldi	r25, 0x00	; 0
    2268:	f8 01       	movw	r30, r16
    226a:	91 83       	std	Z+1, r25	; 0x01
    226c:	80 83       	st	Z, r24
    226e:	c7 01       	movw	r24, r14
    2270:	b6 01       	movw	r22, r12
    2272:	20 e0       	ldi	r18, 0x00	; 0
    2274:	30 e0       	ldi	r19, 0x00	; 0
    2276:	48 ec       	ldi	r20, 0xC8	; 200
    2278:	52 ec       	ldi	r21, 0xC2	; 194
    227a:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    227e:	20 e0       	ldi	r18, 0x00	; 0
    2280:	30 e0       	ldi	r19, 0x00	; 0
    2282:	48 ec       	ldi	r20, 0xC8	; 200
    2284:	52 e4       	ldi	r21, 0x42	; 66
    2286:	0e 94 29 27 	call	0x4e52	; 0x4e52 <__addsf3>
    228a:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    228e:	f8 01       	movw	r30, r16
    2290:	73 83       	std	Z+3, r23	; 0x03
    2292:	62 83       	std	Z+2, r22	; 0x02
    2294:	82 ec       	ldi	r24, 0xC2	; 194
    2296:	91 e0       	ldi	r25, 0x01	; 1
    2298:	95 83       	std	Z+5, r25	; 0x05
    229a:	84 83       	std	Z+4, r24	; 0x04
    229c:	16 82       	std	Z+6, r1	; 0x06
    229e:	10 86       	std	Z+8, r1	; 0x08
    22a0:	17 82       	std	Z+7, r1	; 0x07
    22a2:	81 e0       	ldi	r24, 0x01	; 1
    22a4:	62 e0       	ldi	r22, 0x02	; 2
    22a6:	41 e0       	ldi	r20, 0x01	; 1
    22a8:	22 e3       	ldi	r18, 0x32	; 50
    22aa:	30 e0       	ldi	r19, 0x00	; 0
    22ac:	84 01       	movw	r16, r8
    22ae:	e2 ec       	ldi	r30, 0xC2	; 194
    22b0:	ee 2e       	mov	r14, r30
    22b2:	e1 e0       	ldi	r30, 0x01	; 1
    22b4:	fe 2e       	mov	r15, r30
    22b6:	cc 24       	eor	r12, r12
    22b8:	aa 24       	eor	r10, r10
    22ba:	bb 24       	eor	r11, r11
    22bc:	88 24       	eor	r8, r8
    22be:	83 94       	inc	r8
    22c0:	0e 94 52 17 	call	0x2ea4	; 0x2ea4 <STEPPER_move>
    22c4:	8d b7       	in	r24, 0x3d	; 61
    22c6:	9e b7       	in	r25, 0x3e	; 62
    22c8:	09 96       	adiw	r24, 0x09	; 9
    22ca:	0f b6       	in	r0, 0x3f	; 63
    22cc:	f8 94       	cli
    22ce:	9e bf       	out	0x3e, r25	; 62
    22d0:	0f be       	out	0x3f, r0	; 63
    22d2:	8d bf       	out	0x3d, r24	; 61
>>>>>>> Lab6 Code
	// debug LCP print statement
	// LCD_clear();
	// LCD_printf("bkIR: %3.2f\nmoveWall\nError: %3f\nEffort: %3f\n", bkIR, error, effort);
	return isWall;
	
}
    22d4:	82 2d       	mov	r24, r2
    22d6:	1f 91       	pop	r17
    22d8:	0f 91       	pop	r16
    22da:	ff 90       	pop	r15
    22dc:	ef 90       	pop	r14
    22de:	df 90       	pop	r13
    22e0:	cf 90       	pop	r12
    22e2:	bf 90       	pop	r11
    22e4:	af 90       	pop	r10
    22e6:	9f 90       	pop	r9
    22e8:	8f 90       	pop	r8
    22ea:	7f 90       	pop	r7
    22ec:	6f 90       	pop	r6
    22ee:	5f 90       	pop	r5
    22f0:	4f 90       	pop	r4
    22f2:	3f 90       	pop	r3
    22f4:	2f 90       	pop	r2
    22f6:	08 95       	ret

000022f8 <checkContactIR>:
* Output Return:	none
* Overview:			Acquires status of contact sensors
********************************************************************/
void checkContactIR(void)
{
	unsigned char sensors = ATTINY_get_sensors();
<<<<<<< HEAD
    20d6:	0e 94 da 18 	call	0x31b4	; 0x31b4 <ATTINY_get_sensors>
=======
    22f8:	0e 94 3e 1a 	call	0x347c	; 0x347c <ATTINY_get_sensors>
>>>>>>> Lab6 Code
	rightContact = 0b00000001 & sensors;
    22fc:	28 2f       	mov	r18, r24
    22fe:	21 70       	andi	r18, 0x01	; 1
    2300:	20 93 5c 04 	sts	0x045C, r18
	leftContact =  (0b00000010 & sensors)>>1;
    2304:	90 e0       	ldi	r25, 0x00	; 0
    2306:	82 70       	andi	r24, 0x02	; 2
    2308:	90 70       	andi	r25, 0x00	; 0
    230a:	95 95       	asr	r25
    230c:	87 95       	ror	r24
    230e:	80 93 5d 04 	sts	0x045D, r24
	
	
}
    2312:	08 95       	ret

00002314 <checkLightSensor>:
*					sensors values sequentially
********************************************************************/
void checkLightSensor( void )
{
	// Update both light sensor variables
	rightLightVolt = getRightLight();
    2314:	0e 94 58 05 	call	0xab0	; 0xab0 <getRightLight>
    2318:	60 93 60 02 	sts	0x0260, r22
    231c:	70 93 61 02 	sts	0x0261, r23
    2320:	80 93 62 02 	sts	0x0262, r24
    2324:	90 93 63 02 	sts	0x0263, r25
	leftLightVolt = getLeftLight();
    2328:	0e 94 6d 05 	call	0xada	; 0xada <getLeftLight>
    232c:	60 93 64 02 	sts	0x0264, r22
    2330:	70 93 65 02 	sts	0x0265, r23
    2334:	80 93 66 02 	sts	0x0266, r24
    2338:	90 93 67 02 	sts	0x0267, r25
	// LCD_printf("R Voltage: %3.2f\nL Voltage: %3.2f\n\n\n", voltageR, voltageL);
	// TMRSRVC_delay(2000);//wait 2 seconds
	// LCD_clear();
}
    233c:	08 95       	ret

0000233e <checkIR>:
*					finding sensor values sequentially
********************************************************************/
void checkIR( void )
{
	// Update all IR values
	ftIR = getFrontIR();
    233e:	0e 94 ef 04 	call	0x9de	; 0x9de <getFrontIR>
    2342:	60 93 58 02 	sts	0x0258, r22
    2346:	70 93 59 02 	sts	0x0259, r23
    234a:	80 93 5a 02 	sts	0x025A, r24
    234e:	90 93 5b 02 	sts	0x025B, r25
	bkIR = getBackIR();
    2352:	0e 94 cc 04 	call	0x998	; 0x998 <getBackIR>
    2356:	60 93 5c 02 	sts	0x025C, r22
    235a:	70 93 5d 02 	sts	0x025D, r23
    235e:	80 93 5e 02 	sts	0x025E, r24
    2362:	90 93 5f 02 	sts	0x025F, r25
	ltIR = getLeftIR();
    2366:	0e 94 35 05 	call	0xa6a	; 0xa6a <getLeftIR>
    236a:	60 93 50 02 	sts	0x0250, r22
    236e:	70 93 51 02 	sts	0x0251, r23
    2372:	80 93 52 02 	sts	0x0252, r24
    2376:	90 93 53 02 	sts	0x0253, r25
	rtIR = getRightIR();
    237a:	0e 94 12 05 	call	0xa24	; 0xa24 <getRightIR>
    237e:	60 93 54 02 	sts	0x0254, r22
    2382:	70 93 55 02 	sts	0x0255, r23
    2386:	80 93 56 02 	sts	0x0256, r24
    238a:	90 93 57 02 	sts	0x0257, r25
}
    238e:	08 95       	ret

00002390 <moveWander>:
* Output Return:	none
* Overview:			This function checks for walls and moves the 
*					robot randomly if walls are not detected
********************************************************************/
char moveWander ( void )
{	
    2390:	8f 92       	push	r8
    2392:	af 92       	push	r10
    2394:	bf 92       	push	r11
    2396:	cf 92       	push	r12
    2398:	df 92       	push	r13
    239a:	ef 92       	push	r14
    239c:	ff 92       	push	r15
    239e:	0f 93       	push	r16
    23a0:	1f 93       	push	r17
    23a2:	cf 93       	push	r28
    23a4:	df 93       	push	r29
	// notify that we have
	char isWander = 1;
	
	// if we are wondering
	// first check the current progress of our wondering
	STEPPER_STEPS curr_steps = STEPPER_get_nSteps();
<<<<<<< HEAD
    2184:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <STEPPER_get_nSteps>
=======
    23a6:	0e 94 8a 16 	call	0x2d14	; 0x2d14 <STEPPER_get_nSteps>
>>>>>>> Lab6 Code
	
	
	// IF my motion is complete do another random motion
	if ((curr_steps.left == 0)&(curr_steps.right == 0))
    23aa:	67 2b       	or	r22, r23
    23ac:	09 f0       	breq	.+2      	; 0x23b0 <moveWander+0x20>
    23ae:	76 c0       	rjmp	.+236    	; 0x249c <moveWander+0x10c>
    23b0:	89 2b       	or	r24, r25
    23b2:	09 f0       	breq	.+2      	; 0x23b6 <moveWander+0x26>
    23b4:	73 c0       	rjmp	.+230    	; 0x249c <moveWander+0x10c>
	{
		// create random values for wheel position and wheel speed
		int moveRand = rand()%400+400;
<<<<<<< HEAD
    2194:	0e 94 d4 2e 	call	0x5da8	; 0x5da8 <rand>
    2198:	8c 01       	movw	r16, r24
		float turnRandR = rand()%200+200;
    219a:	0e 94 d4 2e 	call	0x5da8	; 0x5da8 <rand>
    219e:	ec 01       	movw	r28, r24
		float turnRandL = rand()%200+200;
    21a0:	0e 94 d4 2e 	call	0x5da8	; 0x5da8 <rand>
    21a4:	7c 01       	movw	r14, r24
=======
    23b6:	0e 94 38 30 	call	0x6070	; 0x6070 <rand>
    23ba:	8c 01       	movw	r16, r24
		float turnRandR = rand()%200+200;
    23bc:	0e 94 38 30 	call	0x6070	; 0x6070 <rand>
    23c0:	ec 01       	movw	r28, r24
		float turnRandL = rand()%200+200;
    23c2:	0e 94 38 30 	call	0x6070	; 0x6070 <rand>
    23c6:	7c 01       	movw	r14, r24
>>>>>>> Lab6 Code
		
		// Weight the chance that we will go forward slightly more
		// so that the robot may possibly traverse farther
		BOOL direction = ~((rand()%10)>7);
<<<<<<< HEAD
    21a6:	0e 94 d4 2e 	call	0x5da8	; 0x5da8 <rand>
    21aa:	20 e0       	ldi	r18, 0x00	; 0
    21ac:	6a e0       	ldi	r22, 0x0A	; 10
    21ae:	70 e0       	ldi	r23, 0x00	; 0
    21b0:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <__divmodhi4>
    21b4:	08 97       	sbiw	r24, 0x08	; 8
    21b6:	0c f0       	brlt	.+2      	; 0x21ba <moveWander+0x4c>
    21b8:	21 e0       	ldi	r18, 0x01	; 1
    21ba:	82 2e       	mov	r8, r18
    21bc:	80 94       	com	r8
				
		// Move.
		STEPPER_move_stnb( STEPPER_BOTH, 
    21be:	c8 01       	movw	r24, r16
    21c0:	60 e9       	ldi	r22, 0x90	; 144
    21c2:	71 e0       	ldi	r23, 0x01	; 1
    21c4:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <__divmodhi4>
    21c8:	b0 e9       	ldi	r27, 0x90	; 144
    21ca:	ab 2e       	mov	r10, r27
    21cc:	b1 e0       	ldi	r27, 0x01	; 1
    21ce:	bb 2e       	mov	r11, r27
    21d0:	a8 0e       	add	r10, r24
    21d2:	b9 1e       	adc	r11, r25
    21d4:	8d b7       	in	r24, 0x3d	; 61
    21d6:	9e b7       	in	r25, 0x3e	; 62
    21d8:	09 97       	sbiw	r24, 0x09	; 9
    21da:	0f b6       	in	r0, 0x3f	; 63
    21dc:	f8 94       	cli
    21de:	9e bf       	out	0x3e, r25	; 62
    21e0:	0f be       	out	0x3f, r0	; 63
    21e2:	8d bf       	out	0x3d, r24	; 61
    21e4:	0d b7       	in	r16, 0x3d	; 61
    21e6:	1e b7       	in	r17, 0x3e	; 62
    21e8:	0f 5f       	subi	r16, 0xFF	; 255
    21ea:	1f 4f       	sbci	r17, 0xFF	; 255
    21ec:	c7 01       	movw	r24, r14
    21ee:	68 ec       	ldi	r22, 0xC8	; 200
    21f0:	70 e0       	ldi	r23, 0x00	; 0
    21f2:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <__divmodhi4>
    21f6:	88 53       	subi	r24, 0x38	; 56
    21f8:	9f 4f       	sbci	r25, 0xFF	; 255
    21fa:	aa 27       	eor	r26, r26
    21fc:	97 fd       	sbrc	r25, 7
    21fe:	a0 95       	com	r26
    2200:	ba 2f       	mov	r27, r26
    2202:	bc 01       	movw	r22, r24
    2204:	cd 01       	movw	r24, r26
    2206:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    220a:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <__fixunssfsi>
    220e:	6b 01       	movw	r12, r22
    2210:	7c 01       	movw	r14, r24
    2212:	f8 01       	movw	r30, r16
    2214:	b1 82       	std	Z+1, r11	; 0x01
    2216:	a0 82       	st	Z, r10
    2218:	ce 01       	movw	r24, r28
    221a:	68 ec       	ldi	r22, 0xC8	; 200
    221c:	70 e0       	ldi	r23, 0x00	; 0
    221e:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <__divmodhi4>
    2222:	88 53       	subi	r24, 0x38	; 56
    2224:	9f 4f       	sbci	r25, 0xFF	; 255
    2226:	aa 27       	eor	r26, r26
    2228:	97 fd       	sbrc	r25, 7
    222a:	a0 95       	com	r26
    222c:	ba 2f       	mov	r27, r26
    222e:	bc 01       	movw	r22, r24
    2230:	cd 01       	movw	r24, r26
    2232:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__floatsisf>
    2236:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <__fixunssfsi>
    223a:	f8 01       	movw	r30, r16
    223c:	73 83       	std	Z+3, r23	; 0x03
    223e:	62 83       	std	Z+2, r22	; 0x02
    2240:	82 ec       	ldi	r24, 0xC2	; 194
    2242:	91 e0       	ldi	r25, 0x01	; 1
    2244:	95 83       	std	Z+5, r25	; 0x05
    2246:	84 83       	std	Z+4, r24	; 0x04
    2248:	16 82       	std	Z+6, r1	; 0x06
    224a:	10 86       	std	Z+8, r1	; 0x08
    224c:	17 82       	std	Z+7, r1	; 0x07
    224e:	81 e0       	ldi	r24, 0x01	; 1
    2250:	62 e0       	ldi	r22, 0x02	; 2
    2252:	48 2d       	mov	r20, r8
    2254:	95 01       	movw	r18, r10
    2256:	86 01       	movw	r16, r12
    2258:	a2 ec       	ldi	r26, 0xC2	; 194
    225a:	ea 2e       	mov	r14, r26
    225c:	a1 e0       	ldi	r26, 0x01	; 1
    225e:	fa 2e       	mov	r15, r26
    2260:	cc 24       	eor	r12, r12
    2262:	aa 24       	eor	r10, r10
    2264:	bb 24       	eor	r11, r11
    2266:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <STEPPER_move>
    226a:	8d b7       	in	r24, 0x3d	; 61
    226c:	9e b7       	in	r25, 0x3e	; 62
    226e:	09 96       	adiw	r24, 0x09	; 9
    2270:	0f b6       	in	r0, 0x3f	; 63
    2272:	f8 94       	cli
    2274:	9e bf       	out	0x3e, r25	; 62
    2276:	0f be       	out	0x3f, r0	; 63
    2278:	8d bf       	out	0x3d, r24	; 61
=======
    23c8:	0e 94 38 30 	call	0x6070	; 0x6070 <rand>
    23cc:	20 e0       	ldi	r18, 0x00	; 0
    23ce:	6a e0       	ldi	r22, 0x0A	; 10
    23d0:	70 e0       	ldi	r23, 0x00	; 0
    23d2:	0e 94 69 2e 	call	0x5cd2	; 0x5cd2 <__divmodhi4>
    23d6:	08 97       	sbiw	r24, 0x08	; 8
    23d8:	0c f0       	brlt	.+2      	; 0x23dc <moveWander+0x4c>
    23da:	21 e0       	ldi	r18, 0x01	; 1
    23dc:	82 2e       	mov	r8, r18
    23de:	80 94       	com	r8
				
		// Move.
		STEPPER_move_stnb( STEPPER_BOTH, 
    23e0:	c8 01       	movw	r24, r16
    23e2:	60 e9       	ldi	r22, 0x90	; 144
    23e4:	71 e0       	ldi	r23, 0x01	; 1
    23e6:	0e 94 69 2e 	call	0x5cd2	; 0x5cd2 <__divmodhi4>
    23ea:	b0 e9       	ldi	r27, 0x90	; 144
    23ec:	ab 2e       	mov	r10, r27
    23ee:	b1 e0       	ldi	r27, 0x01	; 1
    23f0:	bb 2e       	mov	r11, r27
    23f2:	a8 0e       	add	r10, r24
    23f4:	b9 1e       	adc	r11, r25
    23f6:	8d b7       	in	r24, 0x3d	; 61
    23f8:	9e b7       	in	r25, 0x3e	; 62
    23fa:	09 97       	sbiw	r24, 0x09	; 9
    23fc:	0f b6       	in	r0, 0x3f	; 63
    23fe:	f8 94       	cli
    2400:	9e bf       	out	0x3e, r25	; 62
    2402:	0f be       	out	0x3f, r0	; 63
    2404:	8d bf       	out	0x3d, r24	; 61
    2406:	0d b7       	in	r16, 0x3d	; 61
    2408:	1e b7       	in	r17, 0x3e	; 62
    240a:	0f 5f       	subi	r16, 0xFF	; 255
    240c:	1f 4f       	sbci	r17, 0xFF	; 255
    240e:	c7 01       	movw	r24, r14
    2410:	68 ec       	ldi	r22, 0xC8	; 200
    2412:	70 e0       	ldi	r23, 0x00	; 0
    2414:	0e 94 69 2e 	call	0x5cd2	; 0x5cd2 <__divmodhi4>
    2418:	88 53       	subi	r24, 0x38	; 56
    241a:	9f 4f       	sbci	r25, 0xFF	; 255
    241c:	aa 27       	eor	r26, r26
    241e:	97 fd       	sbrc	r25, 7
    2420:	a0 95       	com	r26
    2422:	ba 2f       	mov	r27, r26
    2424:	bc 01       	movw	r22, r24
    2426:	cd 01       	movw	r24, r26
    2428:	0e 94 2c 28 	call	0x5058	; 0x5058 <__floatsisf>
    242c:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    2430:	6b 01       	movw	r12, r22
    2432:	7c 01       	movw	r14, r24
    2434:	f8 01       	movw	r30, r16
    2436:	b1 82       	std	Z+1, r11	; 0x01
    2438:	a0 82       	st	Z, r10
    243a:	ce 01       	movw	r24, r28
    243c:	68 ec       	ldi	r22, 0xC8	; 200
    243e:	70 e0       	ldi	r23, 0x00	; 0
    2440:	0e 94 69 2e 	call	0x5cd2	; 0x5cd2 <__divmodhi4>
    2444:	88 53       	subi	r24, 0x38	; 56
    2446:	9f 4f       	sbci	r25, 0xFF	; 255
    2448:	aa 27       	eor	r26, r26
    244a:	97 fd       	sbrc	r25, 7
    244c:	a0 95       	com	r26
    244e:	ba 2f       	mov	r27, r26
    2450:	bc 01       	movw	r22, r24
    2452:	cd 01       	movw	r24, r26
    2454:	0e 94 2c 28 	call	0x5058	; 0x5058 <__floatsisf>
    2458:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <__fixunssfsi>
    245c:	f8 01       	movw	r30, r16
    245e:	73 83       	std	Z+3, r23	; 0x03
    2460:	62 83       	std	Z+2, r22	; 0x02
    2462:	82 ec       	ldi	r24, 0xC2	; 194
    2464:	91 e0       	ldi	r25, 0x01	; 1
    2466:	95 83       	std	Z+5, r25	; 0x05
    2468:	84 83       	std	Z+4, r24	; 0x04
    246a:	16 82       	std	Z+6, r1	; 0x06
    246c:	10 86       	std	Z+8, r1	; 0x08
    246e:	17 82       	std	Z+7, r1	; 0x07
    2470:	81 e0       	ldi	r24, 0x01	; 1
    2472:	62 e0       	ldi	r22, 0x02	; 2
    2474:	48 2d       	mov	r20, r8
    2476:	95 01       	movw	r18, r10
    2478:	86 01       	movw	r16, r12
    247a:	a2 ec       	ldi	r26, 0xC2	; 194
    247c:	ea 2e       	mov	r14, r26
    247e:	a1 e0       	ldi	r26, 0x01	; 1
    2480:	fa 2e       	mov	r15, r26
    2482:	cc 24       	eor	r12, r12
    2484:	aa 24       	eor	r10, r10
    2486:	bb 24       	eor	r11, r11
    2488:	0e 94 52 17 	call	0x2ea4	; 0x2ea4 <STEPPER_move>
    248c:	8d b7       	in	r24, 0x3d	; 61
    248e:	9e b7       	in	r25, 0x3e	; 62
    2490:	09 96       	adiw	r24, 0x09	; 9
    2492:	0f b6       	in	r0, 0x3f	; 63
    2494:	f8 94       	cli
    2496:	9e bf       	out	0x3e, r25	; 62
    2498:	0f be       	out	0x3f, r0	; 63
    249a:	8d bf       	out	0x3d, r24	; 61
>>>>>>> Lab6 Code
		// debug LCP print statement
		// LCD_clear();
		// LCD_printf("moveWander\nmoveRand: %3d\nturnRandR: %3d\nturnRandL: %3d\n",moveRand,turnRandR,turnRandL);
		}
	return isWander;
}
    249c:	81 e0       	ldi	r24, 0x01	; 1
    249e:	df 91       	pop	r29
    24a0:	cf 91       	pop	r28
    24a2:	1f 91       	pop	r17
    24a4:	0f 91       	pop	r16
    24a6:	ff 90       	pop	r15
    24a8:	ef 90       	pop	r14
    24aa:	df 90       	pop	r13
    24ac:	cf 90       	pop	r12
    24ae:	bf 90       	pop	r11
    24b0:	af 90       	pop	r10
    24b2:	8f 90       	pop	r8
    24b4:	08 95       	ret

000024b6 <moveWorld>:
* Input Variables:	void
* Output Return:	char
* Overview:		    Moves robot through the world
********************************************************************/
char moveWorld( void )
{	
    24b6:	8f 92       	push	r8
    24b8:	af 92       	push	r10
    24ba:	bf 92       	push	r11
    24bc:	cf 92       	push	r12
    24be:	df 92       	push	r13
    24c0:	ef 92       	push	r14
    24c2:	ff 92       	push	r15
    24c4:	0f 93       	push	r16
    24c6:	1f 93       	push	r17
	currentMove = moveCommands[currentMoveWorld];
    24c8:	e0 91 6b 02 	lds	r30, 0x026B
    24cc:	f0 e0       	ldi	r31, 0x00	; 0
    24ce:	e5 52       	subi	r30, 0x25	; 37
    24d0:	fc 4f       	sbci	r31, 0xFC	; 252
    24d2:	90 81       	ld	r25, Z
    24d4:	90 93 69 02 	sts	0x0269, r25
	if(currentMove != oldMove){
    24d8:	80 91 6a 02 	lds	r24, 0x026A
    24dc:	98 17       	cp	r25, r24
    24de:	b9 f0       	breq	.+46     	; 0x250e <moveWorld+0x58>
		move_arc_stwt(NO_TURN, WORLD_RESOLUTION_SIZE, 10, 10, 0);
    24e0:	60 e0       	ldi	r22, 0x00	; 0
    24e2:	70 e0       	ldi	r23, 0x00	; 0
    24e4:	80 e0       	ldi	r24, 0x00	; 0
    24e6:	9f e4       	ldi	r25, 0x4F	; 79
    24e8:	28 e4       	ldi	r18, 0x48	; 72
    24ea:	31 ee       	ldi	r19, 0xE1	; 225
    24ec:	46 e3       	ldi	r20, 0x36	; 54
    24ee:	52 e4       	ldi	r21, 0x42	; 66
    24f0:	0f 2e       	mov	r0, r31
    24f2:	f0 e0       	ldi	r31, 0x00	; 0
    24f4:	ef 2e       	mov	r14, r31
    24f6:	f0 e0       	ldi	r31, 0x00	; 0
    24f8:	ff 2e       	mov	r15, r31
    24fa:	f0 e2       	ldi	r31, 0x20	; 32
    24fc:	0f 2f       	mov	r16, r31
    24fe:	f1 e4       	ldi	r31, 0x41	; 65
    2500:	1f 2f       	mov	r17, r31
    2502:	f0 2d       	mov	r31, r0
    2504:	57 01       	movw	r10, r14
    2506:	68 01       	movw	r12, r16
    2508:	88 24       	eor	r8, r8
    250a:	0e 94 ef 0b 	call	0x17de	; 0x17de <move_arc_stwt>
	}
	LCD_clear();
<<<<<<< HEAD
    22a2:	0e 94 0d 13 	call	0x261a	; 0x261a <LCD_clear>
=======
    250e:	0e 94 71 14 	call	0x28e2	; 0x28e2 <LCD_clear>
>>>>>>> Lab6 Code
	switch(currentMove){
    2512:	80 91 69 02 	lds	r24, 0x0269
    2516:	82 30       	cpi	r24, 0x02	; 2
    2518:	c9 f0       	breq	.+50     	; 0x254c <moveWorld+0x96>
    251a:	83 30       	cpi	r24, 0x03	; 3
    251c:	29 f1       	breq	.+74     	; 0x2568 <moveWorld+0xb2>
    251e:	81 30       	cpi	r24, 0x01	; 1
    2520:	09 f0       	breq	.+2      	; 0x2524 <moveWorld+0x6e>
    2522:	45 c0       	rjmp	.+138    	; 0x25ae <moveWorld+0xf8>
		case MOVE_LEFT:
			LCD_printf("Left");
    2524:	00 d0       	rcall	.+0      	; 0x2526 <moveWorld+0x70>
    2526:	84 e2       	ldi	r24, 0x24	; 36
    2528:	91 e0       	ldi	r25, 0x01	; 1
    252a:	ed b7       	in	r30, 0x3d	; 61
    252c:	fe b7       	in	r31, 0x3e	; 62
    252e:	92 83       	std	Z+2, r25	; 0x02
    2530:	81 83       	std	Z+1, r24	; 0x01
    2532:	0e 94 61 31 	call	0x62c2	; 0x62c2 <printf>
			move_arc_stwt(POINT_TURN, LEFT_TURN, 10, 10, 0);
    2536:	0f 90       	pop	r0
    2538:	0f 90       	pop	r0
    253a:	60 e0       	ldi	r22, 0x00	; 0
    253c:	70 e0       	ldi	r23, 0x00	; 0
    253e:	80 e0       	ldi	r24, 0x00	; 0
    2540:	90 e0       	ldi	r25, 0x00	; 0
    2542:	27 ed       	ldi	r18, 0xD7	; 215
    2544:	33 ea       	ldi	r19, 0xA3	; 163
    2546:	42 e9       	ldi	r20, 0x92	; 146
    2548:	51 ec       	ldi	r21, 0xC1	; 193
    254a:	21 c0       	rjmp	.+66     	; 0x258e <moveWorld+0xd8>
			break;
		case MOVE_FORWARD:
			LCD_printf("Forward");
    254c:	00 d0       	rcall	.+0      	; 0x254e <moveWorld+0x98>
    254e:	89 e2       	ldi	r24, 0x29	; 41
    2550:	91 e0       	ldi	r25, 0x01	; 1
    2552:	ed b7       	in	r30, 0x3d	; 61
    2554:	fe b7       	in	r31, 0x3e	; 62
    2556:	92 83       	std	Z+2, r25	; 0x02
    2558:	81 83       	std	Z+1, r24	; 0x01
    255a:	0e 94 61 31 	call	0x62c2	; 0x62c2 <printf>
			moveWall();
    255e:	0f 90       	pop	r0
    2560:	0f 90       	pop	r0
    2562:	0e 94 04 10 	call	0x2008	; 0x2008 <moveWall>
    2566:	2e c0       	rjmp	.+92     	; 0x25c4 <moveWorld+0x10e>
			break;
		case MOVE_RIGHT:
			LCD_printf("Right");
    2568:	00 d0       	rcall	.+0      	; 0x256a <moveWorld+0xb4>
    256a:	81 e3       	ldi	r24, 0x31	; 49
    256c:	91 e0       	ldi	r25, 0x01	; 1
    256e:	ed b7       	in	r30, 0x3d	; 61
    2570:	fe b7       	in	r31, 0x3e	; 62
    2572:	92 83       	std	Z+2, r25	; 0x02
    2574:	81 83       	std	Z+1, r24	; 0x01
    2576:	0e 94 61 31 	call	0x62c2	; 0x62c2 <printf>
			move_arc_stwt(POINT_TURN, RIGHT_TURN, 10, 10, 0);
    257a:	0f 90       	pop	r0
    257c:	0f 90       	pop	r0
    257e:	60 e0       	ldi	r22, 0x00	; 0
    2580:	70 e0       	ldi	r23, 0x00	; 0
    2582:	80 e0       	ldi	r24, 0x00	; 0
    2584:	90 e0       	ldi	r25, 0x00	; 0
    2586:	27 ed       	ldi	r18, 0xD7	; 215
    2588:	33 ea       	ldi	r19, 0xA3	; 163
    258a:	42 e9       	ldi	r20, 0x92	; 146
    258c:	51 e4       	ldi	r21, 0x41	; 65
    258e:	0f 2e       	mov	r0, r31
    2590:	f0 e0       	ldi	r31, 0x00	; 0
    2592:	ef 2e       	mov	r14, r31
    2594:	f0 e0       	ldi	r31, 0x00	; 0
    2596:	ff 2e       	mov	r15, r31
    2598:	f0 e2       	ldi	r31, 0x20	; 32
    259a:	0f 2f       	mov	r16, r31
    259c:	f1 e4       	ldi	r31, 0x41	; 65
    259e:	1f 2f       	mov	r17, r31
    25a0:	f0 2d       	mov	r31, r0
    25a2:	57 01       	movw	r10, r14
    25a4:	68 01       	movw	r12, r16
    25a6:	88 24       	eor	r8, r8
    25a8:	0e 94 ef 0b 	call	0x17de	; 0x17de <move_arc_stwt>
    25ac:	0b c0       	rjmp	.+22     	; 0x25c4 <moveWorld+0x10e>
			break;
		default:
			LCD_printf("What?!");
<<<<<<< HEAD
    22ca:	00 d0       	rcall	.+0      	; 0x22cc <moveWorld+0x38>
    22cc:	87 e3       	ldi	r24, 0x37	; 55
    22ce:	91 e0       	ldi	r25, 0x01	; 1
    22d0:	ed b7       	in	r30, 0x3d	; 61
    22d2:	fe b7       	in	r31, 0x3e	; 62
    22d4:	92 83       	std	Z+2, r25	; 0x02
    22d6:	81 83       	std	Z+1, r24	; 0x01
    22d8:	0e 94 fd 2f 	call	0x5ffa	; 0x5ffa <printf>
    22dc:	0f 90       	pop	r0
    22de:	0f 90       	pop	r0
			break;
	}
	TMRSRVC_delay(1000);//wait 1 seconds
    22e0:	88 ee       	ldi	r24, 0xE8	; 232
    22e2:	93 e0       	ldi	r25, 0x03	; 3
    22e4:	0e 94 a8 19 	call	0x3350	; 0x3350 <TMRSRVC_delay>
	currentMoveWorld += 1;
    22e8:	80 91 39 02 	lds	r24, 0x0239
    22ec:	8f 5f       	subi	r24, 0xFF	; 255
    22ee:	80 93 39 02 	sts	0x0239, r24
=======
    25ae:	00 d0       	rcall	.+0      	; 0x25b0 <moveWorld+0xfa>
    25b0:	87 e3       	ldi	r24, 0x37	; 55
    25b2:	91 e0       	ldi	r25, 0x01	; 1
    25b4:	ed b7       	in	r30, 0x3d	; 61
    25b6:	fe b7       	in	r31, 0x3e	; 62
    25b8:	92 83       	std	Z+2, r25	; 0x02
    25ba:	81 83       	std	Z+1, r24	; 0x01
    25bc:	0e 94 61 31 	call	0x62c2	; 0x62c2 <printf>
    25c0:	0f 90       	pop	r0
    25c2:	0f 90       	pop	r0
			break;
	}
	TMRSRVC_delay(1000);//wait 1 seconds
    25c4:	88 ee       	ldi	r24, 0xE8	; 232
    25c6:	93 e0       	ldi	r25, 0x03	; 3
    25c8:	0e 94 0c 1b 	call	0x3618	; 0x3618 <TMRSRVC_delay>
	oldMove = currentMove;
    25cc:	80 91 69 02 	lds	r24, 0x0269
    25d0:	80 93 6a 02 	sts	0x026A, r24
>>>>>>> Lab6 Code
	return 1;
}
    25d4:	81 e0       	ldi	r24, 0x01	; 1
    25d6:	1f 91       	pop	r17
    25d8:	0f 91       	pop	r16
    25da:	ff 90       	pop	r15
    25dc:	ef 90       	pop	r14
    25de:	df 90       	pop	r13
    25e0:	cf 90       	pop	r12
    25e2:	bf 90       	pop	r11
    25e4:	af 90       	pop	r10
    25e6:	8f 90       	pop	r8
    25e8:	08 95       	ret

000025ea <moveBehavior>:
* Overview:		    This is the flow for the behavior of the robot
********************************************************************/
char moveBehavior( int behavior)
{
	// Check the moveAway behavior for obstacles
	if(moveAway()){
    25ea:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <moveAway>
    25ee:	88 23       	and	r24, r24
    25f0:	71 f0       	breq	.+28     	; 0x260e <moveBehavior+0x24>
		Ierror = 0;
    25f2:	80 e0       	ldi	r24, 0x00	; 0
    25f4:	90 e0       	ldi	r25, 0x00	; 0
    25f6:	a0 e0       	ldi	r26, 0x00	; 0
    25f8:	b0 e0       	ldi	r27, 0x00	; 0
    25fa:	80 93 48 02 	sts	0x0248, r24
    25fe:	90 93 49 02 	sts	0x0249, r25
    2602:	a0 93 4a 02 	sts	0x024A, r26
    2606:	b0 93 4b 02 	sts	0x024B, r27
    260a:	81 e0       	ldi	r24, 0x01	; 1
    260c:	08 95       	ret
		return 1; 
	}
	
	if(moveWorld()){
    260e:	0e 94 5b 12 	call	0x24b6	; 0x24b6 <moveWorld>
    2612:	88 23       	and	r24, r24
    2614:	69 f0       	breq	.+26     	; 0x2630 <moveBehavior+0x46>
		Ierror = 0;
    2616:	80 e0       	ldi	r24, 0x00	; 0
    2618:	90 e0       	ldi	r25, 0x00	; 0
    261a:	a0 e0       	ldi	r26, 0x00	; 0
    261c:	b0 e0       	ldi	r27, 0x00	; 0
    261e:	80 93 48 02 	sts	0x0248, r24
    2622:	90 93 49 02 	sts	0x0249, r25
    2626:	a0 93 4a 02 	sts	0x024A, r26
    262a:	b0 93 4b 02 	sts	0x024B, r27
    262e:	82 e0       	ldi	r24, 0x02	; 2
			// Ierror = 0;
			// return 3;
		// }
	// }
	return 0;	
}
    2630:	08 95       	ret

00002632 <movesInput>:
* Output Return:	void
* Overview:			Stores the button values pressed by user into an
*					array of max size 32.
********************************************************************/
void movesInput( void )
{
<<<<<<< HEAD
    2370:	ef 92       	push	r14
    2372:	ff 92       	push	r15
    2374:	0f 93       	push	r16
    2376:	1f 93       	push	r17
    2378:	cf 93       	push	r28
    237a:	df 93       	push	r29
    237c:	81 e0       	ldi	r24, 0x01	; 1
    237e:	01 e0       	ldi	r16, 0x01	; 1
    2380:	c0 e0       	ldi	r28, 0x00	; 0
    2382:	d0 e0       	ldi	r29, 0x00	; 0
		}
		
		moveCommands[ii] = btnHolder;
		
		LCD_clear();
		LCD_printf("Old Command: %i\nNew Command: %i\nCommand Num %i\n\n",btnHolderOld,btnHolder,ii);
    2384:	1e e3       	ldi	r17, 0x3E	; 62
    2386:	e1 2e       	mov	r14, r17
    2388:	11 e0       	ldi	r17, 0x01	; 1
    238a:	f1 2e       	mov	r15, r17
    238c:	02 c0       	rjmp	.+4      	; 0x2392 <movesInput+0x22>
	unsigned char btnHolderOld = UNPRESSED;
		
	for (unsigned char ii = 0; ii < MAX_MOVE_SIZE; ii++){
		// while NO buttons are pressed
		while(btnHolder == UNPRESSED){
			btnHolder = EnterTopoCommand();
    238e:	0e 94 82 05 	call	0xb04	; 0xb04 <EnterTopoCommand>
    2392:	18 2f       	mov	r17, r24
=======
    2632:	ff 92       	push	r15
    2634:	0f 93       	push	r16
    2636:	1f 93       	push	r17
    2638:	cf 93       	push	r28
    263a:	df 93       	push	r29
    263c:	ff 24       	eor	r15, r15
    263e:	f3 94       	inc	r15
    2640:	00 e0       	ldi	r16, 0x00	; 0
			i++;
		}
		
		if (btnHolder != 0){
			LCD_clear();
			LCD_printf("Old Command: %i\nNew Command: %i\nCommand Num %i\n\n",btnHolderOld,btnHolder,i);
    2642:	ce e3       	ldi	r28, 0x3E	; 62
    2644:	d1 e0       	ldi	r29, 0x01	; 1
	// Initialize a button holder
>>>>>>> Lab6 Code
	unsigned char btnHolder = UNPRESSED;
	unsigned char btnHolderOld = UNPRESSED;
	unsigned char i = 0;
	while (i < MAX_MOVE_SIZE){
		btnHolder = EnterTopoCommand();
    2646:	0e 94 82 05 	call	0xb04	; 0xb04 <EnterTopoCommand>
    264a:	18 2f       	mov	r17, r24
		
<<<<<<< HEAD
	for (unsigned char ii = 0; ii < MAX_MOVE_SIZE; ii++){
		// while NO buttons are pressed
		while(btnHolder == UNPRESSED){
    2394:	81 30       	cpi	r24, 0x01	; 1
    2396:	d9 f3       	breq	.-10     	; 0x238e <movesInput+0x1e>
			btnHolder = EnterTopoCommand();
		}
		
		moveCommands[ii] = btnHolder;
    2398:	fe 01       	movw	r30, r28
    239a:	e8 55       	subi	r30, 0x58	; 88
    239c:	fc 4f       	sbci	r31, 0xFC	; 252
    239e:	80 83       	st	Z, r24
		
		LCD_clear();
    23a0:	0e 94 0d 13 	call	0x261a	; 0x261a <LCD_clear>
		LCD_printf("Old Command: %i\nNew Command: %i\nCommand Num %i\n\n",btnHolderOld,btnHolder,ii);
    23a4:	8d b7       	in	r24, 0x3d	; 61
    23a6:	9e b7       	in	r25, 0x3e	; 62
    23a8:	08 97       	sbiw	r24, 0x08	; 8
    23aa:	0f b6       	in	r0, 0x3f	; 63
    23ac:	f8 94       	cli
    23ae:	9e bf       	out	0x3e, r25	; 62
    23b0:	0f be       	out	0x3f, r0	; 63
    23b2:	8d bf       	out	0x3d, r24	; 61
    23b4:	ed b7       	in	r30, 0x3d	; 61
    23b6:	fe b7       	in	r31, 0x3e	; 62
    23b8:	31 96       	adiw	r30, 0x01	; 1
    23ba:	ad b7       	in	r26, 0x3d	; 61
    23bc:	be b7       	in	r27, 0x3e	; 62
    23be:	12 96       	adiw	r26, 0x02	; 2
    23c0:	fc 92       	st	X, r15
    23c2:	ee 92       	st	-X, r14
    23c4:	11 97       	sbiw	r26, 0x01	; 1
    23c6:	02 83       	std	Z+2, r16	; 0x02
    23c8:	13 82       	std	Z+3, r1	; 0x03
    23ca:	14 83       	std	Z+4, r17	; 0x04
    23cc:	15 82       	std	Z+5, r1	; 0x05
    23ce:	d7 83       	std	Z+7, r29	; 0x07
    23d0:	c6 83       	std	Z+6, r28	; 0x06
    23d2:	0e 94 fd 2f 	call	0x5ffa	; 0x5ffa <printf>
		btnHolderOld = btnHolder;		
		
		TMRSRVC_delay(500);	//wait 0.5 
    23d6:	8d b7       	in	r24, 0x3d	; 61
    23d8:	9e b7       	in	r25, 0x3e	; 62
    23da:	08 96       	adiw	r24, 0x08	; 8
    23dc:	0f b6       	in	r0, 0x3f	; 63
    23de:	f8 94       	cli
    23e0:	9e bf       	out	0x3e, r25	; 62
    23e2:	0f be       	out	0x3f, r0	; 63
    23e4:	8d bf       	out	0x3d, r24	; 61
    23e6:	84 ef       	ldi	r24, 0xF4	; 244
    23e8:	91 e0       	ldi	r25, 0x01	; 1
    23ea:	0e 94 a8 19 	call	0x3350	; 0x3350 <TMRSRVC_delay>
		EnterTopoCommand();
    23ee:	0e 94 82 05 	call	0xb04	; 0xb04 <EnterTopoCommand>
		while(btnHolder == btnHolderOld){
			btnHolder = EnterTopoCommand();
    23f2:	0e 94 82 05 	call	0xb04	; 0xb04 <EnterTopoCommand>
		LCD_printf("Old Command: %i\nNew Command: %i\nCommand Num %i\n\n",btnHolderOld,btnHolder,ii);
		btnHolderOld = btnHolder;		
		
		TMRSRVC_delay(500);	//wait 0.5 
		EnterTopoCommand();
		while(btnHolder == btnHolderOld){
    23f6:	81 17       	cp	r24, r17
    23f8:	e1 f3       	breq	.-8      	; 0x23f2 <movesInput+0x82>
    23fa:	21 96       	adiw	r28, 0x01	; 1
    23fc:	01 2f       	mov	r16, r17
=======
		if (btnHolder == MOVE_LEFT){
    264c:	81 30       	cpi	r24, 0x01	; 1
    264e:	21 f0       	breq	.+8      	; 0x2658 <movesInput+0x26>
			moveCommands[i] = MOVE_LEFT;
			i++;
		}
		else if (btnHolder == MOVE_FORWARD){
    2650:	82 30       	cpi	r24, 0x02	; 2
    2652:	11 f0       	breq	.+4      	; 0x2658 <movesInput+0x26>
			moveCommands[i] = MOVE_FORWARD;
			i++;
		}
		else if (btnHolder == MOVE_RIGHT){
    2654:	83 30       	cpi	r24, 0x03	; 3
    2656:	39 f4       	brne	.+14     	; 0x2666 <movesInput+0x34>
			moveCommands[i] = MOVE_RIGHT;
    2658:	e0 2f       	mov	r30, r16
    265a:	f0 e0       	ldi	r31, 0x00	; 0
    265c:	e5 52       	subi	r30, 0x25	; 37
    265e:	fc 4f       	sbci	r31, 0xFC	; 252
    2660:	10 83       	st	Z, r17
			i++;
    2662:	0f 5f       	subi	r16, 0xFF	; 255
    2664:	02 c0       	rjmp	.+4      	; 0x266a <movesInput+0x38>
		}
		
		if (btnHolder != 0){
    2666:	88 23       	and	r24, r24
    2668:	21 f1       	breq	.+72     	; 0x26b2 <movesInput+0x80>
			LCD_clear();
    266a:	0e 94 71 14 	call	0x28e2	; 0x28e2 <LCD_clear>
			LCD_printf("Old Command: %i\nNew Command: %i\nCommand Num %i\n\n",btnHolderOld,btnHolder,i);
    266e:	8d b7       	in	r24, 0x3d	; 61
    2670:	9e b7       	in	r25, 0x3e	; 62
    2672:	08 97       	sbiw	r24, 0x08	; 8
    2674:	0f b6       	in	r0, 0x3f	; 63
    2676:	f8 94       	cli
    2678:	9e bf       	out	0x3e, r25	; 62
    267a:	0f be       	out	0x3f, r0	; 63
    267c:	8d bf       	out	0x3d, r24	; 61
    267e:	ed b7       	in	r30, 0x3d	; 61
    2680:	fe b7       	in	r31, 0x3e	; 62
    2682:	31 96       	adiw	r30, 0x01	; 1
    2684:	ad b7       	in	r26, 0x3d	; 61
    2686:	be b7       	in	r27, 0x3e	; 62
    2688:	12 96       	adiw	r26, 0x02	; 2
    268a:	dc 93       	st	X, r29
    268c:	ce 93       	st	-X, r28
    268e:	11 97       	sbiw	r26, 0x01	; 1
    2690:	f2 82       	std	Z+2, r15	; 0x02
    2692:	13 82       	std	Z+3, r1	; 0x03
    2694:	14 83       	std	Z+4, r17	; 0x04
    2696:	15 82       	std	Z+5, r1	; 0x05
    2698:	06 83       	std	Z+6, r16	; 0x06
    269a:	17 82       	std	Z+7, r1	; 0x07
    269c:	0e 94 61 31 	call	0x62c2	; 0x62c2 <printf>
    26a0:	f1 2e       	mov	r15, r17
    26a2:	8d b7       	in	r24, 0x3d	; 61
    26a4:	9e b7       	in	r25, 0x3e	; 62
    26a6:	08 96       	adiw	r24, 0x08	; 8
    26a8:	0f b6       	in	r0, 0x3f	; 63
    26aa:	f8 94       	cli
    26ac:	9e bf       	out	0x3e, r25	; 62
    26ae:	0f be       	out	0x3f, r0	; 63
    26b0:	8d bf       	out	0x3d, r24	; 61
			btnHolderOld = btnHolder;
		}
		TMRSRVC_delay(1000);	//wait 0.5 seconds
    26b2:	88 ee       	ldi	r24, 0xE8	; 232
    26b4:	93 e0       	ldi	r25, 0x03	; 3
    26b6:	0e 94 0c 1b 	call	0x3618	; 0x3618 <TMRSRVC_delay>
>>>>>>> Lab6 Code
{
	// Initialize a button holder
	unsigned char btnHolder = UNPRESSED;
	unsigned char btnHolderOld = UNPRESSED;
<<<<<<< HEAD
		
	for (unsigned char ii = 0; ii < MAX_MOVE_SIZE; ii++){
    23fe:	c9 30       	cpi	r28, 0x09	; 9
    2400:	d1 05       	cpc	r29, r1
    2402:	39 f6       	brne	.-114    	; 0x2392 <movesInput+0x22>
		EnterTopoCommand();
		while(btnHolder == btnHolderOld){
			btnHolder = EnterTopoCommand();
		}
	}
}
    2404:	df 91       	pop	r29
    2406:	cf 91       	pop	r28
    2408:	1f 91       	pop	r17
    240a:	0f 91       	pop	r16
    240c:	ff 90       	pop	r15
    240e:	ef 90       	pop	r14
    2410:	08 95       	ret

00002412 <worldInput>:
=======
	unsigned char i = 0;
	while (i < MAX_MOVE_SIZE){
    26ba:	09 30       	cpi	r16, 0x09	; 9
    26bc:	20 f2       	brcs	.-120    	; 0x2646 <movesInput+0x14>
			LCD_printf("Old Command: %i\nNew Command: %i\nCommand Num %i\n\n",btnHolderOld,btnHolder,i);
			btnHolderOld = btnHolder;
		}
		TMRSRVC_delay(1000);	//wait 0.5 seconds
	}
}
    26be:	df 91       	pop	r29
    26c0:	cf 91       	pop	r28
    26c2:	1f 91       	pop	r17
    26c4:	0f 91       	pop	r16
    26c6:	ff 90       	pop	r15
    26c8:	08 95       	ret

000026ca <worldInput>:
>>>>>>> Lab6 Code
* Output Return:	void
* Overview:			Allows the user to initialize the location of
*					the robot 
********************************************************************/
void worldInput( void )
{
<<<<<<< HEAD
    2412:	0f 93       	push	r16
    2414:	1f 93       	push	r17
    2416:	cf 93       	push	r28
    2418:	df 93       	push	r29
    241a:	81 e0       	ldi	r24, 0x01	; 1
    241c:	00 e0       	ldi	r16, 0x00	; 0
		
		currentCellWorld = currentCellWorld << 1;
		currentCellWorld += (btnHolder-1);
				
		LCD_clear();
		LCD_printf("Current World Cell:\n%d\n\n",currentCellWorld);
    241e:	cf e6       	ldi	r28, 0x6F	; 111
    2420:	d1 e0       	ldi	r29, 0x01	; 1
    2422:	02 c0       	rjmp	.+4      	; 0x2428 <worldInput+0x16>
	unsigned char btnHolderOld = UNPRESSED;
		
	for (unsigned char i = 0; i < WORLD_ROW_SIZE; i++){
		// while NO buttons are pressed
		while(btnHolder == UNPRESSED){
			btnHolder = EnterTopoCommand();
    2424:	0e 94 82 05 	call	0xb04	; 0xb04 <EnterTopoCommand>
    2428:	18 2f       	mov	r17, r24
=======
    26ca:	1f 93       	push	r17
    26cc:	cf 93       	push	r28
    26ce:	df 93       	push	r29
    26d0:	10 e0       	ldi	r17, 0x00	; 0
			i++;
		}
		
		if (btnHolder != 0){
			LCD_clear();
			LCD_printf("Current World Cell:\n%i\nCommand Num: %i\n",currentCellWorld,i);
    26d2:	cf e6       	ldi	r28, 0x6F	; 111
    26d4:	d1 e0       	ldi	r29, 0x01	; 1
{
	// Initialize a button holder
>>>>>>> Lab6 Code
	unsigned char btnHolder = UNPRESSED;
	unsigned char i = 0;
	while (i < WORLD_ROW_SIZE){
		btnHolder = EnterTopoCommand();
    26d6:	0e 94 82 05 	call	0xb04	; 0xb04 <EnterTopoCommand>
		
<<<<<<< HEAD
	for (unsigned char i = 0; i < WORLD_ROW_SIZE; i++){
		// while NO buttons are pressed
		while(btnHolder == UNPRESSED){
    242a:	81 30       	cpi	r24, 0x01	; 1
    242c:	d9 f3       	breq	.-10     	; 0x2424 <worldInput+0x12>
			btnHolder = EnterTopoCommand();
		}
		
		currentCellWorld = currentCellWorld << 1;
		currentCellWorld += (btnHolder-1);
    242e:	80 91 3a 02 	lds	r24, 0x023A
    2432:	88 0f       	add	r24, r24
    2434:	81 50       	subi	r24, 0x01	; 1
    2436:	81 0f       	add	r24, r17
    2438:	80 93 3a 02 	sts	0x023A, r24
				
		LCD_clear();
    243c:	0e 94 0d 13 	call	0x261a	; 0x261a <LCD_clear>
		LCD_printf("Current World Cell:\n%d\n\n",currentCellWorld);
    2440:	00 d0       	rcall	.+0      	; 0x2442 <worldInput+0x30>
    2442:	00 d0       	rcall	.+0      	; 0x2444 <worldInput+0x32>
    2444:	ed b7       	in	r30, 0x3d	; 61
    2446:	fe b7       	in	r31, 0x3e	; 62
    2448:	31 96       	adiw	r30, 0x01	; 1
    244a:	ad b7       	in	r26, 0x3d	; 61
    244c:	be b7       	in	r27, 0x3e	; 62
    244e:	12 96       	adiw	r26, 0x02	; 2
    2450:	dc 93       	st	X, r29
    2452:	ce 93       	st	-X, r28
    2454:	11 97       	sbiw	r26, 0x01	; 1
    2456:	80 91 3a 02 	lds	r24, 0x023A
    245a:	82 83       	std	Z+2, r24	; 0x02
    245c:	13 82       	std	Z+3, r1	; 0x03
    245e:	0e 94 fd 2f 	call	0x5ffa	; 0x5ffa <printf>
		btnHolderOld = btnHolder;		
		
		TMRSRVC_delay(500);	//wait 0.5 seconds
    2462:	0f 90       	pop	r0
    2464:	0f 90       	pop	r0
    2466:	0f 90       	pop	r0
    2468:	0f 90       	pop	r0
    246a:	84 ef       	ldi	r24, 0xF4	; 244
    246c:	91 e0       	ldi	r25, 0x01	; 1
    246e:	0e 94 a8 19 	call	0x3350	; 0x3350 <TMRSRVC_delay>
		EnterTopoCommand();
    2472:	0e 94 82 05 	call	0xb04	; 0xb04 <EnterTopoCommand>
		while(btnHolder == btnHolderOld){
			btnHolder = EnterTopoCommand();
    2476:	0e 94 82 05 	call	0xb04	; 0xb04 <EnterTopoCommand>
		LCD_printf("Current World Cell:\n%d\n\n",currentCellWorld);
		btnHolderOld = btnHolder;		
		
		TMRSRVC_delay(500);	//wait 0.5 seconds
		EnterTopoCommand();
		while(btnHolder == btnHolderOld){
    247a:	81 17       	cp	r24, r17
    247c:	e1 f3       	breq	.-8      	; 0x2476 <worldInput+0x64>
{
	// Initialize a button holder
	unsigned char btnHolder = UNPRESSED;
	unsigned char btnHolderOld = UNPRESSED;
		
	for (unsigned char i = 0; i < WORLD_ROW_SIZE; i++){
    247e:	0f 5f       	subi	r16, 0xFF	; 255
    2480:	04 30       	cpi	r16, 0x04	; 4
    2482:	91 f6       	brne	.-92     	; 0x2428 <worldInput+0x16>
		EnterTopoCommand();
		while(btnHolder == btnHolderOld){
			btnHolder = EnterTopoCommand();
		}
	}
}
    2484:	df 91       	pop	r29
    2486:	cf 91       	pop	r28
    2488:	1f 91       	pop	r17
    248a:	0f 91       	pop	r16
    248c:	08 95       	ret

0000248e <CBOT_main>:
=======
		if (btnHolder == MOVE_LEFT){
    26da:	81 30       	cpi	r24, 0x01	; 1
    26dc:	21 f4       	brne	.+8      	; 0x26e6 <worldInput+0x1c>
			currentCellWorld = currentCellWorld << 1;
    26de:	80 91 6c 02 	lds	r24, 0x026C
    26e2:	88 0f       	add	r24, r24
    26e4:	06 c0       	rjmp	.+12     	; 0x26f2 <worldInput+0x28>
			currentCellWorld += 0;
			i++;
		}
		else if (btnHolder == MOVE_FORWARD){
    26e6:	82 30       	cpi	r24, 0x02	; 2
    26e8:	41 f4       	brne	.+16     	; 0x26fa <worldInput+0x30>
			currentCellWorld = currentCellWorld << 1;
    26ea:	80 91 6c 02 	lds	r24, 0x026C
    26ee:	88 0f       	add	r24, r24
			currentCellWorld += 1;
    26f0:	8f 5f       	subi	r24, 0xFF	; 255
    26f2:	80 93 6c 02 	sts	0x026C, r24
			i++;
    26f6:	1f 5f       	subi	r17, 0xFF	; 255
    26f8:	02 c0       	rjmp	.+4      	; 0x26fe <worldInput+0x34>
		}
		
		if (btnHolder != 0){
    26fa:	88 23       	and	r24, r24
    26fc:	f1 f0       	breq	.+60     	; 0x273a <worldInput+0x70>
			LCD_clear();
    26fe:	0e 94 71 14 	call	0x28e2	; 0x28e2 <LCD_clear>
			LCD_printf("Current World Cell:\n%i\nCommand Num: %i\n",currentCellWorld,i);
    2702:	00 d0       	rcall	.+0      	; 0x2704 <worldInput+0x3a>
    2704:	00 d0       	rcall	.+0      	; 0x2706 <worldInput+0x3c>
    2706:	00 d0       	rcall	.+0      	; 0x2708 <worldInput+0x3e>
    2708:	ed b7       	in	r30, 0x3d	; 61
    270a:	fe b7       	in	r31, 0x3e	; 62
    270c:	31 96       	adiw	r30, 0x01	; 1
    270e:	ad b7       	in	r26, 0x3d	; 61
    2710:	be b7       	in	r27, 0x3e	; 62
    2712:	12 96       	adiw	r26, 0x02	; 2
    2714:	dc 93       	st	X, r29
    2716:	ce 93       	st	-X, r28
    2718:	11 97       	sbiw	r26, 0x01	; 1
    271a:	80 91 6c 02 	lds	r24, 0x026C
    271e:	82 83       	std	Z+2, r24	; 0x02
    2720:	13 82       	std	Z+3, r1	; 0x03
    2722:	14 83       	std	Z+4, r17	; 0x04
    2724:	15 82       	std	Z+5, r1	; 0x05
    2726:	0e 94 61 31 	call	0x62c2	; 0x62c2 <printf>
    272a:	8d b7       	in	r24, 0x3d	; 61
    272c:	9e b7       	in	r25, 0x3e	; 62
    272e:	06 96       	adiw	r24, 0x06	; 6
    2730:	0f b6       	in	r0, 0x3f	; 63
    2732:	f8 94       	cli
    2734:	9e bf       	out	0x3e, r25	; 62
    2736:	0f be       	out	0x3f, r0	; 63
    2738:	8d bf       	out	0x3d, r24	; 61
		}
		TMRSRVC_delay(1000);	//wait 0.5 seconds
    273a:	88 ee       	ldi	r24, 0xE8	; 232
    273c:	93 e0       	ldi	r25, 0x03	; 3
    273e:	0e 94 0c 1b 	call	0x3618	; 0x3618 <TMRSRVC_delay>
void worldInput( void )
{
	// Initialize a button holder
	unsigned char btnHolder = UNPRESSED;
	unsigned char i = 0;
	while (i < WORLD_ROW_SIZE){
    2742:	14 30       	cpi	r17, 0x04	; 4
    2744:	40 f2       	brcs	.-112    	; 0x26d6 <worldInput+0xc>
			LCD_clear();
			LCD_printf("Current World Cell:\n%i\nCommand Num: %i\n",currentCellWorld,i);
		}
		TMRSRVC_delay(1000);	//wait 0.5 seconds
	}
}
    2746:	df 91       	pop	r29
    2748:	cf 91       	pop	r28
    274a:	1f 91       	pop	r17
    274c:	08 95       	ret

0000274e <CBOT_main>:
>>>>>>> Lab6 Code
* Function:        void CBOT_main( void )
********************************************************************/

void CBOT_main( void )
{
	ATopstat = ATTINY_open();//open the tiny microcontroller
<<<<<<< HEAD
    248e:	0e 94 59 19 	call	0x32b2	; 0x32b2 <ATTINY_open>
    2492:	90 93 b7 02 	sts	0x02B7, r25
    2496:	80 93 b6 02 	sts	0x02B6, r24
	LEopstat = LED_open(); //open the LED module
    249a:	0e 94 13 14 	call	0x2826	; 0x2826 <LED_open>
    249e:	90 93 b5 02 	sts	0x02B5, r25
    24a2:	80 93 b4 02 	sts	0x02B4, r24
	LCopstat = LCD_open(); //open the LCD module
    24a6:	0e 94 2a 13 	call	0x2654	; 0x2654 <LCD_open>
    24aa:	90 93 b3 02 	sts	0x02B3, r25
    24ae:	80 93 b2 02 	sts	0x02B2, r24
	STEPPER_open(); // Open STEPPER module for use
    24b2:	0e 94 95 16 	call	0x2d2a	; 0x2d2a <STEPPER_open>
	SPKR_open(SPKR_BEEP_MODE);//open the speaker in beep mode
    24b6:	81 e0       	ldi	r24, 0x01	; 1
    24b8:	0e 94 19 15 	call	0x2a32	; 0x2a32 <SPKR_open>
	
	LED_open();
    24bc:	0e 94 13 14 	call	0x2826	; 0x2826 <LED_open>
	I2C_open();
    24c0:	0e 94 b3 1a 	call	0x3566	; 0x3566 <I2C_open>
	ADC_open();//open the ADC module
    24c4:	0e 94 97 12 	call	0x252e	; 0x252e <ADC_open>
 	ADC_set_VREF( ADC_VREF_AVCC );// Set the Voltage Reference first so VREF=5V.
    24c8:	81 e0       	ldi	r24, 0x01	; 1
    24ca:	0e 94 f9 12 	call	0x25f2	; 0x25f2 <ADC_set_VREF>

	// Initialize IR Values and Reset Prefilter
	checkIR();
    24ce:	0e 94 8e 10 	call	0x211c	; 0x211c <checkIR>
	prefilter(1);
    24d2:	81 e0       	ldi	r24, 0x01	; 1
    24d4:	0e 94 0a 06 	call	0xc14	; 0xc14 <prefilter>
	
	
	LCD_printf("ENTER move commands\n\n\n\n");
    24d8:	88 e8       	ldi	r24, 0x88	; 136
    24da:	91 e0       	ldi	r25, 0x01	; 1
    24dc:	0e 94 0f 30 	call	0x601e	; 0x601e <puts>
	TMRSRVC_delay(1000);//wait 1 seconds
    24e0:	88 ee       	ldi	r24, 0xE8	; 232
    24e2:	93 e0       	ldi	r25, 0x03	; 3
    24e4:	0e 94 a8 19 	call	0x3350	; 0x3350 <TMRSRVC_delay>
	LCD_clear();
    24e8:	0e 94 0d 13 	call	0x261a	; 0x261a <LCD_clear>
	movesInput();
    24ec:	0e 94 b8 11 	call	0x2370	; 0x2370 <movesInput>
	TMRSRVC_delay(1000);//wait 1 seconds
    24f0:	88 ee       	ldi	r24, 0xE8	; 232
    24f2:	93 e0       	ldi	r25, 0x03	; 3
    24f4:	0e 94 a8 19 	call	0x3350	; 0x3350 <TMRSRVC_delay>
	LCD_clear();
    24f8:	0e 94 0d 13 	call	0x261a	; 0x261a <LCD_clear>
	
	LCD_printf("ENTER current location\n\n\n\n");	
    24fc:	8f e9       	ldi	r24, 0x9F	; 159
    24fe:	91 e0       	ldi	r25, 0x01	; 1
    2500:	0e 94 0f 30 	call	0x601e	; 0x601e <puts>
	TMRSRVC_delay(1000);//wait 1 seconds
    2504:	88 ee       	ldi	r24, 0xE8	; 232
    2506:	93 e0       	ldi	r25, 0x03	; 3
    2508:	0e 94 a8 19 	call	0x3350	; 0x3350 <TMRSRVC_delay>
	LCD_clear();
    250c:	0e 94 0d 13 	call	0x261a	; 0x261a <LCD_clear>
	worldInput();
    2510:	0e 94 09 12 	call	0x2412	; 0x2412 <worldInput>
	TMRSRVC_delay(3000);//wait 3 seconds
    2514:	88 eb       	ldi	r24, 0xB8	; 184
    2516:	9b e0       	ldi	r25, 0x0B	; 11
    2518:	0e 94 a8 19 	call	0x3350	; 0x3350 <TMRSRVC_delay>
	LCD_clear();
    251c:	0e 94 0d 13 	call	0x261a	; 0x261a <LCD_clear>
=======
    274e:	0e 94 bd 1a 	call	0x357a	; 0x357a <ATTINY_open>
    2752:	90 93 ea 02 	sts	0x02EA, r25
    2756:	80 93 e9 02 	sts	0x02E9, r24
	LEopstat = LED_open(); //open the LED module
    275a:	0e 94 77 15 	call	0x2aee	; 0x2aee <LED_open>
    275e:	90 93 e8 02 	sts	0x02E8, r25
    2762:	80 93 e7 02 	sts	0x02E7, r24
	LCopstat = LCD_open(); //open the LCD module
    2766:	0e 94 8e 14 	call	0x291c	; 0x291c <LCD_open>
    276a:	90 93 e6 02 	sts	0x02E6, r25
    276e:	80 93 e5 02 	sts	0x02E5, r24
	STEPPER_open(); // Open STEPPER module for use
    2772:	0e 94 f9 17 	call	0x2ff2	; 0x2ff2 <STEPPER_open>
	SPKR_open(SPKR_BEEP_MODE);//open the speaker in beep mode
    2776:	81 e0       	ldi	r24, 0x01	; 1
    2778:	0e 94 7d 16 	call	0x2cfa	; 0x2cfa <SPKR_open>
	
	LED_open();
    277c:	0e 94 77 15 	call	0x2aee	; 0x2aee <LED_open>
	I2C_open();
    2780:	0e 94 17 1c 	call	0x382e	; 0x382e <I2C_open>
	ADC_open();//open the ADC module
    2784:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <ADC_open>
 	ADC_set_VREF( ADC_VREF_AVCC );// Set the Voltage Reference first so VREF=5V.
    2788:	81 e0       	ldi	r24, 0x01	; 1
    278a:	0e 94 5d 14 	call	0x28ba	; 0x28ba <ADC_set_VREF>

	// Initialize IR Values and Reset Prefilter
	checkIR();
    278e:	0e 94 9f 11 	call	0x233e	; 0x233e <checkIR>
	prefilter(1);
    2792:	81 e0       	ldi	r24, 0x01	; 1
    2794:	0e 94 c1 06 	call	0xd82	; 0xd82 <prefilter>
	
	
	LCD_printf("ENTER move commands\n\n\n\n");
    2798:	87 e9       	ldi	r24, 0x97	; 151
    279a:	91 e0       	ldi	r25, 0x01	; 1
    279c:	0e 94 73 31 	call	0x62e6	; 0x62e6 <puts>
	TMRSRVC_delay(1000);//wait 1 seconds
    27a0:	88 ee       	ldi	r24, 0xE8	; 232
    27a2:	93 e0       	ldi	r25, 0x03	; 3
    27a4:	0e 94 0c 1b 	call	0x3618	; 0x3618 <TMRSRVC_delay>
	LCD_clear();
    27a8:	0e 94 71 14 	call	0x28e2	; 0x28e2 <LCD_clear>
	movesInput();
    27ac:	0e 94 19 13 	call	0x2632	; 0x2632 <movesInput>
	TMRSRVC_delay(1000);//wait 1 seconds
    27b0:	88 ee       	ldi	r24, 0xE8	; 232
    27b2:	93 e0       	ldi	r25, 0x03	; 3
    27b4:	0e 94 0c 1b 	call	0x3618	; 0x3618 <TMRSRVC_delay>
	LCD_clear();
    27b8:	0e 94 71 14 	call	0x28e2	; 0x28e2 <LCD_clear>
	
	LCD_printf("ENTER current location\n\n\n\n");	
    27bc:	8e ea       	ldi	r24, 0xAE	; 174
    27be:	91 e0       	ldi	r25, 0x01	; 1
    27c0:	0e 94 73 31 	call	0x62e6	; 0x62e6 <puts>
	TMRSRVC_delay(1000);//wait 1 seconds
    27c4:	88 ee       	ldi	r24, 0xE8	; 232
    27c6:	93 e0       	ldi	r25, 0x03	; 3
    27c8:	0e 94 0c 1b 	call	0x3618	; 0x3618 <TMRSRVC_delay>
	LCD_clear();
    27cc:	0e 94 71 14 	call	0x28e2	; 0x28e2 <LCD_clear>
	worldInput();
    27d0:	0e 94 65 13 	call	0x26ca	; 0x26ca <worldInput>
	TMRSRVC_delay(3000);//wait 3 seconds
    27d4:	88 eb       	ldi	r24, 0xB8	; 184
    27d6:	9b e0       	ldi	r25, 0x0B	; 11
    27d8:	0e 94 0c 1b 	call	0x3618	; 0x3618 <TMRSRVC_delay>
	LCD_clear();
    27dc:	0e 94 71 14 	call	0x28e2	; 0x28e2 <LCD_clear>
>>>>>>> Lab6 Code
	// Infinite loop
	while (1)
    {
		// update the sensor values
		// checkLightSensor();
		checkIR();
<<<<<<< HEAD
    2520:	0e 94 8e 10 	call	0x211c	; 0x211c <checkIR>
		checkContactIR();
    2524:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <checkContactIR>
=======
    27e0:	0e 94 9f 11 	call	0x233e	; 0x233e <checkIR>
		checkContactIR();
    27e4:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <checkContactIR>
		// LCD_clear();
>>>>>>> Lab6 Code
		// LCD_printf("FrontIR = %3.2f\nBackIR = %3.2f\nLeftIR = %3.2f\nRightIR = %3.2f\n", ftIR,bkIR,ltIR,rtIR);
		// TMRSRVC_delay(1000);//wait 1 seconds
		
		// run the moveBehavior FSM
		moveBehavior(1);
    27e8:	81 e0       	ldi	r24, 0x01	; 1
    27ea:	90 e0       	ldi	r25, 0x00	; 0
    27ec:	0e 94 f5 12 	call	0x25ea	; 0x25ea <moveBehavior>
		moveWorld();	
<<<<<<< HEAD
    2528:	0e 94 4a 11 	call	0x2294	; 0x2294 <moveWorld>
    252c:	f9 cf       	rjmp	.-14     	; 0x2520 <CBOT_main+0x92>

0000252e <ADC_open>:
    252e:	8f e0       	ldi	r24, 0x0F	; 15
    2530:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    2534:	88 23       	and	r24, r24
    2536:	31 f4       	brne	.+12     	; 0x2544 <ADC_open+0x16>
    2538:	0e 94 da 1a 	call	0x35b4	; 0x35b4 <__ADC_init>
    253c:	8f e0       	ldi	r24, 0x0F	; 15
    253e:	61 e0       	ldi	r22, 0x01	; 1
    2540:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    2544:	8f e0       	ldi	r24, 0x0F	; 15
    2546:	91 e0       	ldi	r25, 0x01	; 1
    2548:	08 95       	ret

0000254a <ADC_sample>:
    254a:	8f e0       	ldi	r24, 0x0F	; 15
    254c:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    2550:	81 30       	cpi	r24, 0x01	; 1
    2552:	19 f0       	breq	.+6      	; 0x255a <ADC_sample+0x10>
    2554:	20 e0       	ldi	r18, 0x00	; 0
    2556:	30 e0       	ldi	r19, 0x00	; 0
    2558:	13 c0       	rjmp	.+38     	; 0x2580 <ADC_sample+0x36>
    255a:	80 91 7a 00 	lds	r24, 0x007A
    255e:	80 64       	ori	r24, 0x40	; 64
    2560:	80 93 7a 00 	sts	0x007A, r24
    2564:	80 91 7a 00 	lds	r24, 0x007A
    2568:	86 fd       	sbrc	r24, 6
    256a:	fc cf       	rjmp	.-8      	; 0x2564 <ADC_sample+0x1a>
    256c:	30 91 78 00 	lds	r19, 0x0078
    2570:	20 91 79 00 	lds	r18, 0x0079
    2574:	92 2f       	mov	r25, r18
    2576:	80 e0       	ldi	r24, 0x00	; 0
    2578:	23 2f       	mov	r18, r19
    257a:	30 e0       	ldi	r19, 0x00	; 0
    257c:	28 2b       	or	r18, r24
    257e:	39 2b       	or	r19, r25
    2580:	c9 01       	movw	r24, r18
    2582:	08 95       	ret

00002584 <ADC_set_channel>:
    2584:	58 2f       	mov	r21, r24
    2586:	80 91 b9 01 	lds	r24, 0x01B9
    258a:	88 30       	cpi	r24, 0x08	; 8
    258c:	d8 f4       	brcc	.+54     	; 0x25c4 <ADC_set_channel+0x40>
    258e:	40 91 7e 00 	lds	r20, 0x007E
    2592:	21 e0       	ldi	r18, 0x01	; 1
    2594:	30 e0       	ldi	r19, 0x00	; 0
    2596:	b9 01       	movw	r22, r18
    2598:	02 c0       	rjmp	.+4      	; 0x259e <ADC_set_channel+0x1a>
    259a:	66 0f       	add	r22, r22
    259c:	77 1f       	adc	r23, r23
    259e:	8a 95       	dec	r24
    25a0:	e2 f7       	brpl	.-8      	; 0x259a <ADC_set_channel+0x16>
    25a2:	cb 01       	movw	r24, r22
    25a4:	80 95       	com	r24
    25a6:	84 23       	and	r24, r20
    25a8:	80 93 7e 00 	sts	0x007E, r24
    25ac:	80 91 7e 00 	lds	r24, 0x007E
    25b0:	05 2e       	mov	r0, r21
    25b2:	02 c0       	rjmp	.+4      	; 0x25b8 <ADC_set_channel+0x34>
    25b4:	22 0f       	add	r18, r18
    25b6:	33 1f       	adc	r19, r19
    25b8:	0a 94       	dec	r0
    25ba:	e2 f7       	brpl	.-8      	; 0x25b4 <ADC_set_channel+0x30>
    25bc:	82 2b       	or	r24, r18
    25be:	80 93 7e 00 	sts	0x007E, r24
    25c2:	0d c0       	rjmp	.+26     	; 0x25de <ADC_set_channel+0x5a>
    25c4:	20 91 7e 00 	lds	r18, 0x007E
    25c8:	81 e0       	ldi	r24, 0x01	; 1
    25ca:	90 e0       	ldi	r25, 0x00	; 0
    25cc:	05 2e       	mov	r0, r21
    25ce:	02 c0       	rjmp	.+4      	; 0x25d4 <ADC_set_channel+0x50>
    25d0:	88 0f       	add	r24, r24
    25d2:	99 1f       	adc	r25, r25
    25d4:	0a 94       	dec	r0
    25d6:	e2 f7       	brpl	.-8      	; 0x25d0 <ADC_set_channel+0x4c>
    25d8:	28 2b       	or	r18, r24
    25da:	20 93 7e 00 	sts	0x007E, r18
    25de:	50 93 b9 01 	sts	0x01B9, r21
    25e2:	80 91 7c 00 	lds	r24, 0x007C
    25e6:	5f 71       	andi	r21, 0x1F	; 31
    25e8:	80 7e       	andi	r24, 0xE0	; 224
    25ea:	85 2b       	or	r24, r21
    25ec:	80 93 7c 00 	sts	0x007C, r24
    25f0:	08 95       	ret

000025f2 <ADC_set_VREF>:
    25f2:	ec e7       	ldi	r30, 0x7C	; 124
    25f4:	f0 e0       	ldi	r31, 0x00	; 0
    25f6:	90 81       	ld	r25, Z
    25f8:	82 95       	swap	r24
    25fa:	88 0f       	add	r24, r24
    25fc:	88 0f       	add	r24, r24
    25fe:	80 7c       	andi	r24, 0xC0	; 192
    2600:	9f 73       	andi	r25, 0x3F	; 63
    2602:	98 2b       	or	r25, r24
    2604:	90 83       	st	Z, r25
    2606:	08 95       	ret

00002608 <main>:
    2608:	0e 94 f3 1a 	call	0x35e6	; 0x35e6 <CBOT_ISR_init>
    260c:	0e 94 e5 1a 	call	0x35ca	; 0x35ca <CBOT_init>
    2610:	0e 94 47 12 	call	0x248e	; 0x248e <CBOT_main>
    2614:	80 e0       	ldi	r24, 0x00	; 0
    2616:	90 e0       	ldi	r25, 0x00	; 0
    2618:	08 95       	ret

0000261a <LCD_clear>:
    261a:	0f 93       	push	r16
    261c:	1f 93       	push	r17
    261e:	80 e4       	ldi	r24, 0x40	; 64
    2620:	60 e0       	ldi	r22, 0x00	; 0
    2622:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    2626:	00 e0       	ldi	r16, 0x00	; 0
    2628:	80 2f       	mov	r24, r16
    262a:	60 e0       	ldi	r22, 0x00	; 0
    262c:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <LCD_set_PGC_addr>
    2630:	10 e0       	ldi	r17, 0x00	; 0
    2632:	80 e0       	ldi	r24, 0x00	; 0
    2634:	61 e0       	ldi	r22, 0x01	; 1
    2636:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    263a:	1f 5f       	subi	r17, 0xFF	; 255
    263c:	10 38       	cpi	r17, 0x80	; 128
    263e:	c9 f7       	brne	.-14     	; 0x2632 <LCD_clear+0x18>
    2640:	0f 5f       	subi	r16, 0xFF	; 255
    2642:	04 30       	cpi	r16, 0x04	; 4
    2644:	89 f7       	brne	.-30     	; 0x2628 <LCD_clear+0xe>
    2646:	83 e0       	ldi	r24, 0x03	; 3
    2648:	60 e0       	ldi	r22, 0x00	; 0
    264a:	0e 94 cc 13 	call	0x2798	; 0x2798 <LCD_set_next_PGC>
    264e:	1f 91       	pop	r17
    2650:	0f 91       	pop	r16
    2652:	08 95       	ret

00002654 <LCD_open>:
    2654:	0f 93       	push	r16
    2656:	1f 93       	push	r17
    2658:	82 e0       	ldi	r24, 0x02	; 2
    265a:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    265e:	88 23       	and	r24, r24
    2660:	11 f4       	brne	.+4      	; 0x2666 <LCD_open+0x12>
    2662:	82 e0       	ldi	r24, 0x02	; 2
    2664:	06 c0       	rjmp	.+12     	; 0x2672 <LCD_open+0x1e>
    2666:	81 e0       	ldi	r24, 0x01	; 1
    2668:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    266c:	88 23       	and	r24, r24
    266e:	19 f4       	brne	.+6      	; 0x2676 <LCD_open+0x22>
    2670:	81 e0       	ldi	r24, 0x01	; 1
    2672:	90 e0       	ldi	r25, 0x00	; 0
    2674:	6d c0       	rjmp	.+218    	; 0x2750 <LCD_open+0xfc>
    2676:	0e 94 5b 1d 	call	0x3ab6	; 0x3ab6 <__LCD_init>
    267a:	85 e0       	ldi	r24, 0x05	; 5
    267c:	61 e0       	ldi	r22, 0x01	; 1
    267e:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    2682:	8e ea       	ldi	r24, 0xAE	; 174
    2684:	60 e0       	ldi	r22, 0x00	; 0
    2686:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    268a:	82 ea       	ldi	r24, 0xA2	; 162
    268c:	60 e0       	ldi	r22, 0x00	; 0
    268e:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    2692:	80 ea       	ldi	r24, 0xA0	; 160
    2694:	60 e0       	ldi	r22, 0x00	; 0
    2696:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    269a:	00 e5       	ldi	r16, 0x50	; 80
    269c:	13 ec       	ldi	r17, 0xC3	; 195
    269e:	c8 01       	movw	r24, r16
    26a0:	01 97       	sbiw	r24, 0x01	; 1
    26a2:	f1 f7       	brne	.-4      	; 0x26a0 <LCD_open+0x4c>
    26a4:	80 ec       	ldi	r24, 0xC0	; 192
    26a6:	60 e0       	ldi	r22, 0x00	; 0
    26a8:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    26ac:	8f e2       	ldi	r24, 0x2F	; 47
    26ae:	60 e0       	ldi	r22, 0x00	; 0
    26b0:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    26b4:	81 e8       	ldi	r24, 0x81	; 129
    26b6:	60 e0       	ldi	r22, 0x00	; 0
    26b8:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    26bc:	86 e1       	ldi	r24, 0x16	; 22
    26be:	60 e0       	ldi	r22, 0x00	; 0
    26c0:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    26c4:	82 e2       	ldi	r24, 0x22	; 34
    26c6:	60 e0       	ldi	r22, 0x00	; 0
    26c8:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    26cc:	c8 01       	movw	r24, r16
    26ce:	01 97       	sbiw	r24, 0x01	; 1
    26d0:	f1 f7       	brne	.-4      	; 0x26ce <LCD_open+0x7a>
    26d2:	8f ea       	ldi	r24, 0xAF	; 175
    26d4:	60 e0       	ldi	r22, 0x00	; 0
    26d6:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    26da:	86 ea       	ldi	r24, 0xA6	; 166
    26dc:	60 e0       	ldi	r22, 0x00	; 0
    26de:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    26e2:	85 ea       	ldi	r24, 0xA5	; 165
    26e4:	60 e0       	ldi	r22, 0x00	; 0
    26e6:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    26ea:	80 e0       	ldi	r24, 0x00	; 0
    26ec:	90 e0       	ldi	r25, 0x00	; 0
    26ee:	28 e8       	ldi	r18, 0x88	; 136
    26f0:	33 e1       	ldi	r19, 0x13	; 19
    26f2:	f9 01       	movw	r30, r18
    26f4:	31 97       	sbiw	r30, 0x01	; 1
    26f6:	f1 f7       	brne	.-4      	; 0x26f4 <LCD_open+0xa0>
    26f8:	01 96       	adiw	r24, 0x01	; 1
    26fa:	43 e0       	ldi	r20, 0x03	; 3
    26fc:	88 3e       	cpi	r24, 0xE8	; 232
    26fe:	94 07       	cpc	r25, r20
    2700:	c1 f7       	brne	.-16     	; 0x26f2 <LCD_open+0x9e>
    2702:	83 eb       	ldi	r24, 0xB3	; 179
    2704:	60 e0       	ldi	r22, 0x00	; 0
    2706:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    270a:	80 e4       	ldi	r24, 0x40	; 64
    270c:	60 e0       	ldi	r22, 0x00	; 0
    270e:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    2712:	83 e0       	ldi	r24, 0x03	; 3
    2714:	60 e0       	ldi	r22, 0x00	; 0
    2716:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <LCD_set_PGC_addr>
    271a:	83 e0       	ldi	r24, 0x03	; 3
    271c:	60 e0       	ldi	r22, 0x00	; 0
    271e:	0e 94 cc 13 	call	0x2798	; 0x2798 <LCD_set_next_PGC>
    2722:	10 92 f1 04 	sts	0x04F1, r1
    2726:	10 92 f3 04 	sts	0x04F3, r1
    272a:	10 92 f2 04 	sts	0x04F2, r1
    272e:	88 ec       	ldi	r24, 0xC8	; 200
    2730:	91 e0       	ldi	r25, 0x01	; 1
    2732:	90 93 22 05 	sts	0x0522, r25
    2736:	80 93 21 05 	sts	0x0521, r24
    273a:	88 e1       	ldi	r24, 0x18	; 24
    273c:	0e 94 ab 13 	call	0x2756	; 0x2756 <LCD_set_backlight>
    2740:	0e 94 0d 13 	call	0x261a	; 0x261a <LCD_clear>
    2744:	84 ea       	ldi	r24, 0xA4	; 164
    2746:	60 e0       	ldi	r22, 0x00	; 0
    2748:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    274c:	85 e0       	ldi	r24, 0x05	; 5
    274e:	91 e0       	ldi	r25, 0x01	; 1
    2750:	1f 91       	pop	r17
    2752:	0f 91       	pop	r16
    2754:	08 95       	ret

00002756 <LCD_set_backlight>:
    2756:	1f 93       	push	r17
    2758:	18 2f       	mov	r17, r24
    275a:	85 e0       	ldi	r24, 0x05	; 5
    275c:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    2760:	81 30       	cpi	r24, 0x01	; 1
    2762:	c1 f4       	brne	.+48     	; 0x2794 <LCD_set_backlight+0x3e>
    2764:	87 e0       	ldi	r24, 0x07	; 7
    2766:	0e 94 28 14 	call	0x2850	; 0x2850 <SPI_set_slave_addr>
    276a:	82 e0       	ldi	r24, 0x02	; 2
    276c:	6a e0       	ldi	r22, 0x0A	; 10
    276e:	0e 94 79 14 	call	0x28f2	; 0x28f2 <SPI_transmit>
    2772:	82 e0       	ldi	r24, 0x02	; 2
    2774:	61 eb       	ldi	r22, 0xB1	; 177
    2776:	0e 94 79 14 	call	0x28f2	; 0x28f2 <SPI_transmit>
    277a:	61 2f       	mov	r22, r17
    277c:	11 32       	cpi	r17, 0x21	; 33
    277e:	08 f0       	brcs	.+2      	; 0x2782 <LCD_set_backlight+0x2c>
    2780:	60 e2       	ldi	r22, 0x20	; 32
    2782:	82 e0       	ldi	r24, 0x02	; 2
    2784:	0e 94 79 14 	call	0x28f2	; 0x28f2 <SPI_transmit>
    2788:	89 ee       	ldi	r24, 0xE9	; 233
    278a:	8a 95       	dec	r24
    278c:	f1 f7       	brne	.-4      	; 0x278a <LCD_set_backlight+0x34>
    278e:	87 e0       	ldi	r24, 0x07	; 7
    2790:	0e 94 28 14 	call	0x2850	; 0x2850 <SPI_set_slave_addr>
    2794:	1f 91       	pop	r17
    2796:	08 95       	ret

00002798 <LCD_set_next_PGC>:
    2798:	83 70       	andi	r24, 0x03	; 3
    279a:	6f 77       	andi	r22, 0x7F	; 127
    279c:	60 93 ef 04 	sts	0x04EF, r22
    27a0:	80 93 f0 04 	sts	0x04F0, r24
    27a4:	08 95       	ret

000027a6 <LCD_set_PGC_addr>:
    27a6:	0f 93       	push	r16
    27a8:	1f 93       	push	r17
    27aa:	06 2f       	mov	r16, r22
    27ac:	16 2f       	mov	r17, r22
    27ae:	1f 77       	andi	r17, 0x7F	; 127
    27b0:	83 70       	andi	r24, 0x03	; 3
    27b2:	80 6b       	ori	r24, 0xB0	; 176
    27b4:	60 e0       	ldi	r22, 0x00	; 0
    27b6:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    27ba:	12 95       	swap	r17
    27bc:	1f 70       	andi	r17, 0x0F	; 15
    27be:	81 2f       	mov	r24, r17
    27c0:	80 61       	ori	r24, 0x10	; 16
    27c2:	60 e0       	ldi	r22, 0x00	; 0
    27c4:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    27c8:	80 2f       	mov	r24, r16
    27ca:	8f 70       	andi	r24, 0x0F	; 15
    27cc:	60 e0       	ldi	r22, 0x00	; 0
    27ce:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    27d2:	1f 91       	pop	r17
    27d4:	0f 91       	pop	r16
    27d6:	08 95       	ret

000027d8 <LCD_write>:
    27d8:	0f 93       	push	r16
    27da:	1f 93       	push	r17
    27dc:	08 2f       	mov	r16, r24
    27de:	16 2f       	mov	r17, r22
    27e0:	85 e0       	ldi	r24, 0x05	; 5
    27e2:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    27e6:	81 30       	cpi	r24, 0x01	; 1
    27e8:	79 f4       	brne	.+30     	; 0x2808 <LCD_write+0x30>
    27ea:	11 23       	and	r17, r17
    27ec:	19 f0       	breq	.+6      	; 0x27f4 <LCD_write+0x1c>
    27ee:	11 30       	cpi	r17, 0x01	; 1
    27f0:	21 f4       	brne	.+8      	; 0x27fa <LCD_write+0x22>
    27f2:	02 c0       	rjmp	.+4      	; 0x27f8 <LCD_write+0x20>
    27f4:	2b 98       	cbi	0x05, 3	; 5
    27f6:	01 c0       	rjmp	.+2      	; 0x27fa <LCD_write+0x22>
    27f8:	2b 9a       	sbi	0x05, 3	; 5
    27fa:	86 e0       	ldi	r24, 0x06	; 6
    27fc:	8a 95       	dec	r24
    27fe:	f1 f7       	brne	.-4      	; 0x27fc <LCD_write+0x24>
    2800:	80 e0       	ldi	r24, 0x00	; 0
    2802:	60 2f       	mov	r22, r16
    2804:	0e 94 79 14 	call	0x28f2	; 0x28f2 <SPI_transmit>
    2808:	1f 91       	pop	r17
    280a:	0f 91       	pop	r16
    280c:	08 95       	ret

0000280e <LED_clr_pattern>:
    280e:	1f 93       	push	r17
    2810:	18 2f       	mov	r17, r24
    2812:	86 e0       	ldi	r24, 0x06	; 6
    2814:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    2818:	81 30       	cpi	r24, 0x01	; 1
    281a:	19 f4       	brne	.+6      	; 0x2822 <LED_clr_pattern+0x14>
    281c:	81 2f       	mov	r24, r17
    281e:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <__LED_clr_pattern>
    2822:	1f 91       	pop	r17
    2824:	08 95       	ret

00002826 <LED_open>:
    2826:	0e 94 0f 1e 	call	0x3c1e	; 0x3c1e <__LED_init>
    282a:	86 e0       	ldi	r24, 0x06	; 6
    282c:	61 e0       	ldi	r22, 0x01	; 1
    282e:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    2832:	86 e0       	ldi	r24, 0x06	; 6
    2834:	91 e0       	ldi	r25, 0x01	; 1
    2836:	08 95       	ret

00002838 <LED_set_pattern>:
    2838:	1f 93       	push	r17
    283a:	18 2f       	mov	r17, r24
    283c:	86 e0       	ldi	r24, 0x06	; 6
    283e:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    2842:	81 30       	cpi	r24, 0x01	; 1
    2844:	19 f4       	brne	.+6      	; 0x284c <LED_set_pattern+0x14>
    2846:	81 2f       	mov	r24, r17
    2848:	0e 94 12 1e 	call	0x3c24	; 0x3c24 <__LED_set_pattern>
    284c:	1f 91       	pop	r17
    284e:	08 95       	ret

00002850 <SPI_set_slave_addr>:
    2850:	1f 93       	push	r17
    2852:	18 2f       	mov	r17, r24
    2854:	82 e0       	ldi	r24, 0x02	; 2
    2856:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    285a:	81 30       	cpi	r24, 0x01	; 1
    285c:	09 f0       	breq	.+2      	; 0x2860 <SPI_set_slave_addr+0x10>
    285e:	47 c0       	rjmp	.+142    	; 0x28ee <SPI_set_slave_addr+0x9e>
    2860:	91 2f       	mov	r25, r17
    2862:	97 70       	andi	r25, 0x07	; 7
    2864:	80 91 f4 04 	lds	r24, 0x04F4
    2868:	98 17       	cp	r25, r24
    286a:	09 f4       	brne	.+2      	; 0x286e <SPI_set_slave_addr+0x1e>
    286c:	40 c0       	rjmp	.+128    	; 0x28ee <SPI_set_slave_addr+0x9e>
    286e:	90 93 f4 04 	sts	0x04F4, r25
    2872:	85 b1       	in	r24, 0x05	; 5
    2874:	88 7f       	andi	r24, 0xF8	; 248
    2876:	89 2b       	or	r24, r25
    2878:	85 b9       	out	0x05, r24	; 5
    287a:	93 30       	cpi	r25, 0x03	; 3
    287c:	11 f1       	breq	.+68     	; 0x28c2 <SPI_set_slave_addr+0x72>
    287e:	94 30       	cpi	r25, 0x04	; 4
    2880:	28 f4       	brcc	.+10     	; 0x288c <SPI_set_slave_addr+0x3c>
    2882:	91 30       	cpi	r25, 0x01	; 1
    2884:	51 f0       	breq	.+20     	; 0x289a <SPI_set_slave_addr+0x4a>
    2886:	92 30       	cpi	r25, 0x02	; 2
    2888:	90 f4       	brcc	.+36     	; 0x28ae <SPI_set_slave_addr+0x5e>
    288a:	0c c0       	rjmp	.+24     	; 0x28a4 <SPI_set_slave_addr+0x54>
    288c:	95 30       	cpi	r25, 0x05	; 5
    288e:	19 f1       	breq	.+70     	; 0x28d6 <SPI_set_slave_addr+0x86>
    2890:	95 30       	cpi	r25, 0x05	; 5
    2892:	e0 f0       	brcs	.+56     	; 0x28cc <SPI_set_slave_addr+0x7c>
    2894:	96 30       	cpi	r25, 0x06	; 6
    2896:	21 f5       	brne	.+72     	; 0x28e0 <SPI_set_slave_addr+0x90>
    2898:	0f c0       	rjmp	.+30     	; 0x28b8 <SPI_set_slave_addr+0x68>
    289a:	e0 91 8d 02 	lds	r30, 0x028D
    289e:	f0 91 8e 02 	lds	r31, 0x028E
    28a2:	22 c0       	rjmp	.+68     	; 0x28e8 <SPI_set_slave_addr+0x98>
    28a4:	e0 91 8b 02 	lds	r30, 0x028B
    28a8:	f0 91 8c 02 	lds	r31, 0x028C
    28ac:	1d c0       	rjmp	.+58     	; 0x28e8 <SPI_set_slave_addr+0x98>
    28ae:	e0 91 8f 02 	lds	r30, 0x028F
    28b2:	f0 91 90 02 	lds	r31, 0x0290
    28b6:	18 c0       	rjmp	.+48     	; 0x28e8 <SPI_set_slave_addr+0x98>
    28b8:	e0 91 97 02 	lds	r30, 0x0297
    28bc:	f0 91 98 02 	lds	r31, 0x0298
    28c0:	13 c0       	rjmp	.+38     	; 0x28e8 <SPI_set_slave_addr+0x98>
    28c2:	e0 91 91 02 	lds	r30, 0x0291
    28c6:	f0 91 92 02 	lds	r31, 0x0292
    28ca:	0e c0       	rjmp	.+28     	; 0x28e8 <SPI_set_slave_addr+0x98>
    28cc:	e0 91 93 02 	lds	r30, 0x0293
    28d0:	f0 91 94 02 	lds	r31, 0x0294
    28d4:	09 c0       	rjmp	.+18     	; 0x28e8 <SPI_set_slave_addr+0x98>
    28d6:	e0 91 95 02 	lds	r30, 0x0295
    28da:	f0 91 96 02 	lds	r31, 0x0296
    28de:	04 c0       	rjmp	.+8      	; 0x28e8 <SPI_set_slave_addr+0x98>
    28e0:	e0 91 99 02 	lds	r30, 0x0299
    28e4:	f0 91 9a 02 	lds	r31, 0x029A
    28e8:	30 97       	sbiw	r30, 0x00	; 0
    28ea:	09 f0       	breq	.+2      	; 0x28ee <SPI_set_slave_addr+0x9e>
    28ec:	09 95       	icall
    28ee:	1f 91       	pop	r17
    28f0:	08 95       	ret

000028f2 <SPI_transmit>:
    28f2:	1f 93       	push	r17
    28f4:	16 2f       	mov	r17, r22
    28f6:	0e 94 28 14 	call	0x2850	; 0x2850 <SPI_set_slave_addr>
    28fa:	82 e0       	ldi	r24, 0x02	; 2
    28fc:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    2900:	81 30       	cpi	r24, 0x01	; 1
    2902:	21 f4       	brne	.+8      	; 0x290c <SPI_transmit+0x1a>
    2904:	1e bd       	out	0x2e, r17	; 46
    2906:	0d b4       	in	r0, 0x2d	; 45
    2908:	07 fe       	sbrs	r0, 7
    290a:	fd cf       	rjmp	.-6      	; 0x2906 <SPI_transmit+0x14>
    290c:	1f 91       	pop	r17
    290e:	08 95       	ret

00002910 <__SPKR_set_up_freq_LUT>:
    2910:	0f 93       	push	r16
    2912:	1f 93       	push	r17
    2914:	cf 93       	push	r28
    2916:	df 93       	push	r29
    2918:	80 e2       	ldi	r24, 0x20	; 32
    291a:	91 e0       	ldi	r25, 0x01	; 1
    291c:	0e 94 85 2d 	call	0x5b0a	; 0x5b0a <malloc>
    2920:	9c 01       	movw	r18, r24
    2922:	90 93 aa 02 	sts	0x02AA, r25
    2926:	80 93 a9 02 	sts	0x02A9, r24
    292a:	89 2b       	or	r24, r25
    292c:	11 f4       	brne	.+4      	; 0x2932 <__SPKR_set_up_freq_LUT+0x22>
    292e:	80 e0       	ldi	r24, 0x00	; 0
    2930:	39 c0       	rjmp	.+114    	; 0x29a4 <__SPKR_set_up_freq_LUT+0x94>
    2932:	89 01       	movw	r16, r18
    2934:	c0 e0       	ldi	r28, 0x00	; 0
    2936:	d0 e0       	ldi	r29, 0x00	; 0
    2938:	be 01       	movw	r22, r28
    293a:	80 e0       	ldi	r24, 0x00	; 0
    293c:	90 e0       	ldi	r25, 0x00	; 0
    293e:	0e 94 c6 26 	call	0x4d8c	; 0x4d8c <__floatunsisf>
    2942:	20 e0       	ldi	r18, 0x00	; 0
    2944:	30 e0       	ldi	r19, 0x00	; 0
    2946:	40 ea       	ldi	r20, 0xA0	; 160
    2948:	51 e4       	ldi	r21, 0x41	; 65
    294a:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <__divsf3>
    294e:	27 ef       	ldi	r18, 0xF7	; 247
    2950:	35 e7       	ldi	r19, 0x75	; 117
    2952:	40 e0       	ldi	r20, 0x00	; 0
    2954:	5f e3       	ldi	r21, 0x3F	; 63
    2956:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    295a:	9b 01       	movw	r18, r22
    295c:	ac 01       	movw	r20, r24
    295e:	60 e0       	ldi	r22, 0x00	; 0
    2960:	70 e0       	ldi	r23, 0x00	; 0
    2962:	80 e2       	ldi	r24, 0x20	; 32
    2964:	91 e4       	ldi	r25, 0x41	; 65
    2966:	0e 94 19 28 	call	0x5032	; 0x5032 <pow>
    296a:	9b 01       	movw	r18, r22
    296c:	ac 01       	movw	r20, r24
    296e:	ca 01       	movw	r24, r20
    2970:	b9 01       	movw	r22, r18
    2972:	2d ec       	ldi	r18, 0xCD	; 205
    2974:	3c ec       	ldi	r19, 0xCC	; 204
    2976:	42 e8       	ldi	r20, 0x82	; 130
    2978:	51 e4       	ldi	r21, 0x41	; 65
    297a:	0e 94 b6 27 	call	0x4f6c	; 0x4f6c <__mulsf3>
    297e:	0e 94 7c 27 	call	0x4ef8	; 0x4ef8 <lrint>
    2982:	2a e0       	ldi	r18, 0x0A	; 10
    2984:	30 e0       	ldi	r19, 0x00	; 0
    2986:	40 e0       	ldi	r20, 0x00	; 0
    2988:	50 e0       	ldi	r21, 0x00	; 0
    298a:	0e 94 e6 2c 	call	0x59cc	; 0x59cc <__mulsi3>
    298e:	f8 01       	movw	r30, r16
    2990:	61 93       	st	Z+, r22
    2992:	71 93       	st	Z+, r23
    2994:	81 93       	st	Z+, r24
    2996:	91 93       	st	Z+, r25
    2998:	8f 01       	movw	r16, r30
    299a:	21 96       	adiw	r28, 0x01	; 1
    299c:	c8 34       	cpi	r28, 0x48	; 72
    299e:	d1 05       	cpc	r29, r1
    29a0:	59 f6       	brne	.-106    	; 0x2938 <__SPKR_set_up_freq_LUT+0x28>
    29a2:	81 e0       	ldi	r24, 0x01	; 1
    29a4:	df 91       	pop	r29
    29a6:	cf 91       	pop	r28
    29a8:	1f 91       	pop	r17
    29aa:	0f 91       	pop	r16
    29ac:	08 95       	ret

000029ae <__SPKR_open_beep_mode>:
    29ae:	8a e0       	ldi	r24, 0x0A	; 10
    29b0:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    29b4:	88 23       	and	r24, r24
    29b6:	71 f4       	brne	.+28     	; 0x29d4 <__SPKR_open_beep_mode+0x26>
    29b8:	10 92 a6 02 	sts	0x02A6, r1
    29bc:	10 92 a5 02 	sts	0x02A5, r1
    29c0:	81 e0       	ldi	r24, 0x01	; 1
    29c2:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <__SPKR_init>
    29c6:	81 e0       	ldi	r24, 0x01	; 1
    29c8:	80 93 9c 02 	sts	0x029C, r24
    29cc:	8a e0       	ldi	r24, 0x0A	; 10
    29ce:	61 e0       	ldi	r22, 0x01	; 1
    29d0:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    29d4:	8a e0       	ldi	r24, 0x0A	; 10
    29d6:	91 e0       	ldi	r25, 0x01	; 1
    29d8:	08 95       	ret

000029da <__SPKR_open_tone_mode>:
    29da:	1f 93       	push	r17
    29dc:	8b e0       	ldi	r24, 0x0B	; 11
    29de:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    29e2:	88 23       	and	r24, r24
    29e4:	11 f0       	breq	.+4      	; 0x29ea <__SPKR_open_tone_mode+0x10>
    29e6:	90 e0       	ldi	r25, 0x00	; 0
    29e8:	21 c0       	rjmp	.+66     	; 0x2a2c <__SPKR_open_tone_mode+0x52>
    29ea:	89 e0       	ldi	r24, 0x09	; 9
    29ec:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    29f0:	88 23       	and	r24, r24
    29f2:	d9 f4       	brne	.+54     	; 0x2a2a <__SPKR_open_tone_mode+0x50>
    29f4:	0e 94 88 14 	call	0x2910	; 0x2910 <__SPKR_set_up_freq_LUT>
    29f8:	18 2f       	mov	r17, r24
    29fa:	81 30       	cpi	r24, 0x01	; 1
    29fc:	b1 f4       	brne	.+44     	; 0x2a2a <__SPKR_open_tone_mode+0x50>
    29fe:	10 92 9d 02 	sts	0x029D, r1
    2a02:	10 92 9e 02 	sts	0x029E, r1
    2a06:	10 92 9f 02 	sts	0x029F, r1
    2a0a:	10 92 a0 02 	sts	0x02A0, r1
    2a0e:	8d e0       	ldi	r24, 0x0D	; 13
    2a10:	60 ed       	ldi	r22, 0xD0	; 208
    2a12:	7e e1       	ldi	r23, 0x1E	; 30
    2a14:	0e 94 33 1d 	call	0x3a66	; 0x3a66 <ISR_attach>
    2a18:	82 e0       	ldi	r24, 0x02	; 2
    2a1a:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <__SPKR_init>
    2a1e:	10 93 9b 02 	sts	0x029B, r17
    2a22:	89 e0       	ldi	r24, 0x09	; 9
    2a24:	61 e0       	ldi	r22, 0x01	; 1
    2a26:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    2a2a:	91 e0       	ldi	r25, 0x01	; 1
    2a2c:	89 e0       	ldi	r24, 0x09	; 9
    2a2e:	1f 91       	pop	r17
    2a30:	08 95       	ret

00002a32 <SPKR_open>:
    2a32:	81 30       	cpi	r24, 0x01	; 1
    2a34:	29 f0       	breq	.+10     	; 0x2a40 <SPKR_open+0xe>
    2a36:	82 30       	cpi	r24, 0x02	; 2
    2a38:	31 f0       	breq	.+12     	; 0x2a46 <SPKR_open+0x14>
    2a3a:	90 e0       	ldi	r25, 0x00	; 0
    2a3c:	89 e0       	ldi	r24, 0x09	; 9
    2a3e:	08 95       	ret
    2a40:	0e 94 d7 14 	call	0x29ae	; 0x29ae <__SPKR_open_beep_mode>
    2a44:	08 95       	ret
    2a46:	0e 94 ed 14 	call	0x29da	; 0x29da <__SPKR_open_tone_mode>
    2a4a:	08 95       	ret

00002a4c <STEPPER_get_nSteps>:
    2a4c:	80 91 b5 04 	lds	r24, 0x04B5
    2a50:	90 91 b6 04 	lds	r25, 0x04B6
    2a54:	20 91 b7 04 	lds	r18, 0x04B7
    2a58:	30 91 b8 04 	lds	r19, 0x04B8
    2a5c:	bc 01       	movw	r22, r24
    2a5e:	c9 01       	movw	r24, r18
    2a60:	08 95       	ret

00002a62 <STEPPER_stepmode>:
    2a62:	2f 92       	push	r2
    2a64:	3f 92       	push	r3
    2a66:	4f 92       	push	r4
    2a68:	5f 92       	push	r5
    2a6a:	6f 92       	push	r6
    2a6c:	7f 92       	push	r7
    2a6e:	8f 92       	push	r8
    2a70:	9f 92       	push	r9
    2a72:	af 92       	push	r10
    2a74:	bf 92       	push	r11
    2a76:	cf 92       	push	r12
    2a78:	df 92       	push	r13
    2a7a:	ef 92       	push	r14
    2a7c:	ff 92       	push	r15
    2a7e:	0f 93       	push	r16
    2a80:	1f 93       	push	r17
    2a82:	df 93       	push	r29
    2a84:	cf 93       	push	r28
    2a86:	cd b7       	in	r28, 0x3d	; 61
    2a88:	de b7       	in	r29, 0x3e	; 62
    2a8a:	58 2e       	mov	r5, r24
    2a8c:	96 2e       	mov	r9, r22
    2a8e:	44 2e       	mov	r4, r20
    2a90:	39 01       	movw	r6, r18
    2a92:	3c 2c       	mov	r3, r12
    2a94:	c9 8c       	ldd	r12, Y+25	; 0x19
    2a96:	da 8c       	ldd	r13, Y+26	; 0x1a
    2a98:	2b 8c       	ldd	r2, Y+27	; 0x1b
    2a9a:	81 e0       	ldi	r24, 0x01	; 1
    2a9c:	68 17       	cp	r22, r24
    2a9e:	39 f1       	breq	.+78     	; 0x2aee <STEPPER_stepmode+0x8c>
    2aa0:	68 17       	cp	r22, r24
    2aa2:	28 f0       	brcs	.+10     	; 0x2aae <STEPPER_stepmode+0x4c>
    2aa4:	92 e0       	ldi	r25, 0x02	; 2
    2aa6:	69 17       	cp	r22, r25
    2aa8:	09 f0       	breq	.+2      	; 0x2aac <STEPPER_stepmode+0x4a>
    2aaa:	85 c0       	rjmp	.+266    	; 0x2bb6 <STEPPER_stepmode+0x154>
    2aac:	49 c0       	rjmp	.+146    	; 0x2b40 <STEPPER_stepmode+0xde>
    2aae:	80 e0       	ldi	r24, 0x00	; 0
    2ab0:	61 e0       	ldi	r22, 0x01	; 1
    2ab2:	0e 94 3a 17 	call	0x2e74	; 0x2e74 <STEPPER_set_mode>
    2ab6:	80 e0       	ldi	r24, 0x00	; 0
    2ab8:	b7 01       	movw	r22, r14
    2aba:	0e 94 03 17 	call	0x2e06	; 0x2e06 <STEPPER_set_accel>
    2abe:	80 e0       	ldi	r24, 0x00	; 0
    2ac0:	64 2d       	mov	r22, r4
    2ac2:	a3 01       	movw	r20, r6
    2ac4:	98 01       	movw	r18, r16
    2ac6:	03 2d       	mov	r16, r3
    2ac8:	ee 24       	eor	r14, r14
    2aca:	e3 94       	inc	r14
    2acc:	ea ed       	ldi	r30, 0xDA	; 218
    2ace:	ce 2e       	mov	r12, r30
    2ad0:	e4 e0       	ldi	r30, 0x04	; 4
    2ad2:	de 2e       	mov	r13, r30
    2ad4:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <STEPPER_step>
    2ad8:	55 20       	and	r5, r5
    2ada:	09 f0       	breq	.+2      	; 0x2ade <STEPPER_stepmode+0x7c>
    2adc:	6c c0       	rjmp	.+216    	; 0x2bb6 <STEPPER_stepmode+0x154>
    2ade:	00 d0       	rcall	.+0      	; 0x2ae0 <STEPPER_stepmode+0x7e>
    2ae0:	0f 92       	push	r0
    2ae2:	ed b7       	in	r30, 0x3d	; 61
    2ae4:	fe b7       	in	r31, 0x3e	; 62
    2ae6:	11 82       	std	Z+1, r1	; 0x01
    2ae8:	b3 82       	std	Z+3, r11	; 0x03
    2aea:	a2 82       	std	Z+2, r10	; 0x02
    2aec:	23 c0       	rjmp	.+70     	; 0x2b34 <STEPPER_stepmode+0xd2>
    2aee:	81 e0       	ldi	r24, 0x01	; 1
    2af0:	61 e0       	ldi	r22, 0x01	; 1
    2af2:	0e 94 3a 17 	call	0x2e74	; 0x2e74 <STEPPER_set_mode>
    2af6:	81 e0       	ldi	r24, 0x01	; 1
    2af8:	b6 01       	movw	r22, r12
    2afa:	0e 94 03 17 	call	0x2e06	; 0x2e06 <STEPPER_set_accel>
    2afe:	81 e0       	ldi	r24, 0x01	; 1
    2b00:	68 2d       	mov	r22, r8
    2b02:	4d 89       	ldd	r20, Y+21	; 0x15
    2b04:	5e 89       	ldd	r21, Y+22	; 0x16
    2b06:	2f 89       	ldd	r18, Y+23	; 0x17
    2b08:	38 8d       	ldd	r19, Y+24	; 0x18
    2b0a:	02 2d       	mov	r16, r2
    2b0c:	ee 24       	eor	r14, r14
    2b0e:	e3 94       	inc	r14
    2b10:	7a ed       	ldi	r23, 0xDA	; 218
    2b12:	c7 2e       	mov	r12, r23
    2b14:	74 e0       	ldi	r23, 0x04	; 4
    2b16:	d7 2e       	mov	r13, r23
    2b18:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <STEPPER_step>
    2b1c:	55 20       	and	r5, r5
    2b1e:	09 f0       	breq	.+2      	; 0x2b22 <STEPPER_stepmode+0xc0>
    2b20:	4a c0       	rjmp	.+148    	; 0x2bb6 <STEPPER_stepmode+0x154>
    2b22:	00 d0       	rcall	.+0      	; 0x2b24 <STEPPER_stepmode+0xc2>
    2b24:	0f 92       	push	r0
    2b26:	ed b7       	in	r30, 0x3d	; 61
    2b28:	fe b7       	in	r31, 0x3e	; 62
    2b2a:	91 82       	std	Z+1, r9	; 0x01
    2b2c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2b2e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2b30:	93 83       	std	Z+3, r25	; 0x03
    2b32:	82 83       	std	Z+2, r24	; 0x02
    2b34:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <STEPPER_wait_and_then>
    2b38:	0f 90       	pop	r0
    2b3a:	0f 90       	pop	r0
    2b3c:	0f 90       	pop	r0
    2b3e:	3b c0       	rjmp	.+118    	; 0x2bb6 <STEPPER_stepmode+0x154>
    2b40:	82 e0       	ldi	r24, 0x02	; 2
    2b42:	61 e0       	ldi	r22, 0x01	; 1
    2b44:	0e 94 3a 17 	call	0x2e74	; 0x2e74 <STEPPER_set_mode>
    2b48:	80 e0       	ldi	r24, 0x00	; 0
    2b4a:	b7 01       	movw	r22, r14
    2b4c:	0e 94 03 17 	call	0x2e06	; 0x2e06 <STEPPER_set_accel>
    2b50:	81 e0       	ldi	r24, 0x01	; 1
    2b52:	b6 01       	movw	r22, r12
    2b54:	0e 94 03 17 	call	0x2e06	; 0x2e06 <STEPPER_set_accel>
    2b58:	80 e0       	ldi	r24, 0x00	; 0
    2b5a:	64 2d       	mov	r22, r4
    2b5c:	a3 01       	movw	r20, r6
    2b5e:	98 01       	movw	r18, r16
    2b60:	03 2d       	mov	r16, r3
    2b62:	ee 24       	eor	r14, r14
    2b64:	e3 94       	inc	r14
    2b66:	9a ed       	ldi	r25, 0xDA	; 218
    2b68:	c9 2e       	mov	r12, r25
    2b6a:	94 e0       	ldi	r25, 0x04	; 4
    2b6c:	d9 2e       	mov	r13, r25
    2b6e:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <STEPPER_step>
    2b72:	81 e0       	ldi	r24, 0x01	; 1
    2b74:	68 2d       	mov	r22, r8
    2b76:	4d 89       	ldd	r20, Y+21	; 0x15
    2b78:	5e 89       	ldd	r21, Y+22	; 0x16
    2b7a:	2f 89       	ldd	r18, Y+23	; 0x17
    2b7c:	38 8d       	ldd	r19, Y+24	; 0x18
    2b7e:	02 2d       	mov	r16, r2
    2b80:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <STEPPER_step>
    2b84:	55 20       	and	r5, r5
    2b86:	b9 f4       	brne	.+46     	; 0x2bb6 <STEPPER_stepmode+0x154>
    2b88:	00 d0       	rcall	.+0      	; 0x2b8a <STEPPER_stepmode+0x128>
    2b8a:	00 d0       	rcall	.+0      	; 0x2b8c <STEPPER_stepmode+0x12a>
    2b8c:	0f 92       	push	r0
    2b8e:	ad b7       	in	r26, 0x3d	; 61
    2b90:	be b7       	in	r27, 0x3e	; 62
    2b92:	11 96       	adiw	r26, 0x01	; 1
    2b94:	ed b7       	in	r30, 0x3d	; 61
    2b96:	fe b7       	in	r31, 0x3e	; 62
    2b98:	91 82       	std	Z+1, r9	; 0x01
    2b9a:	fd 01       	movw	r30, r26
    2b9c:	b2 82       	std	Z+2, r11	; 0x02
    2b9e:	a1 82       	std	Z+1, r10	; 0x01
    2ba0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2ba2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2ba4:	94 83       	std	Z+4, r25	; 0x04
    2ba6:	83 83       	std	Z+3, r24	; 0x03
    2ba8:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <STEPPER_wait_and_then>
    2bac:	0f 90       	pop	r0
    2bae:	0f 90       	pop	r0
    2bb0:	0f 90       	pop	r0
    2bb2:	0f 90       	pop	r0
    2bb4:	0f 90       	pop	r0
    2bb6:	cf 91       	pop	r28
    2bb8:	df 91       	pop	r29
    2bba:	1f 91       	pop	r17
    2bbc:	0f 91       	pop	r16
    2bbe:	ff 90       	pop	r15
    2bc0:	ef 90       	pop	r14
    2bc2:	df 90       	pop	r13
    2bc4:	cf 90       	pop	r12
    2bc6:	bf 90       	pop	r11
    2bc8:	af 90       	pop	r10
    2bca:	9f 90       	pop	r9
    2bcc:	8f 90       	pop	r8
    2bce:	7f 90       	pop	r7
    2bd0:	6f 90       	pop	r6
    2bd2:	5f 90       	pop	r5
    2bd4:	4f 90       	pop	r4
    2bd6:	3f 90       	pop	r3
    2bd8:	2f 90       	pop	r2
    2bda:	08 95       	ret

00002bdc <STEPPER_move>:
    2bdc:	6f 92       	push	r6
    2bde:	7f 92       	push	r7
    2be0:	8f 92       	push	r8
    2be2:	9f 92       	push	r9
    2be4:	af 92       	push	r10
    2be6:	bf 92       	push	r11
    2be8:	cf 92       	push	r12
    2bea:	df 92       	push	r13
    2bec:	ef 92       	push	r14
    2bee:	ff 92       	push	r15
    2bf0:	0f 93       	push	r16
    2bf2:	1f 93       	push	r17
    2bf4:	df 93       	push	r29
    2bf6:	cf 93       	push	r28
    2bf8:	cd b7       	in	r28, 0x3d	; 61
    2bfa:	de b7       	in	r29, 0x3e	; 62
    2bfc:	94 2e       	mov	r9, r20
    2bfe:	7c 2d       	mov	r23, r12
    2c00:	d5 01       	movw	r26, r10
    2c02:	49 89       	ldd	r20, Y+17	; 0x11
    2c04:	5a 89       	ldd	r21, Y+18	; 0x12
    2c06:	ab 88       	ldd	r10, Y+19	; 0x13
    2c08:	bc 88       	ldd	r11, Y+20	; 0x14
    2c0a:	cd 88       	ldd	r12, Y+21	; 0x15
    2c0c:	de 88       	ldd	r13, Y+22	; 0x16
    2c0e:	9f 89       	ldd	r25, Y+23	; 0x17
    2c10:	81 30       	cpi	r24, 0x01	; 1
    2c12:	09 f4       	brne	.+2      	; 0x2c16 <STEPPER_move+0x3a>
    2c14:	57 c0       	rjmp	.+174    	; 0x2cc4 <STEPPER_move+0xe8>
    2c16:	81 30       	cpi	r24, 0x01	; 1
    2c18:	b8 f1       	brcs	.+110    	; 0x2c88 <STEPPER_move+0xac>
    2c1a:	82 30       	cpi	r24, 0x02	; 2
    2c1c:	09 f0       	breq	.+2      	; 0x2c20 <STEPPER_move+0x44>
    2c1e:	76 c0       	rjmp	.+236    	; 0x2d0c <STEPPER_move+0x130>
    2c20:	61 30       	cpi	r22, 0x01	; 1
    2c22:	91 f0       	breq	.+36     	; 0x2c48 <STEPPER_move+0x6c>
    2c24:	61 30       	cpi	r22, 0x01	; 1
    2c26:	20 f0       	brcs	.+8      	; 0x2c30 <STEPPER_move+0x54>
    2c28:	62 30       	cpi	r22, 0x02	; 2
    2c2a:	09 f0       	breq	.+2      	; 0x2c2e <STEPPER_move+0x52>
    2c2c:	6f c0       	rjmp	.+222    	; 0x2d0c <STEPPER_move+0x130>
    2c2e:	15 c0       	rjmp	.+42     	; 0x2c5a <STEPPER_move+0x7e>
    2c30:	80 e0       	ldi	r24, 0x00	; 0
    2c32:	60 e0       	ldi	r22, 0x00	; 0
    2c34:	0e 94 3a 17 	call	0x2e74	; 0x2e74 <STEPPER_set_mode>
    2c38:	80 e0       	ldi	r24, 0x00	; 0
    2c3a:	b7 01       	movw	r22, r14
    2c3c:	0e 94 03 17 	call	0x2e06	; 0x2e06 <STEPPER_set_accel>
    2c40:	80 e0       	ldi	r24, 0x00	; 0
    2c42:	69 2d       	mov	r22, r9
    2c44:	a8 01       	movw	r20, r16
    2c46:	1d c0       	rjmp	.+58     	; 0x2c82 <STEPPER_move+0xa6>
    2c48:	81 e0       	ldi	r24, 0x01	; 1
    2c4a:	60 e0       	ldi	r22, 0x00	; 0
    2c4c:	0e 94 3a 17 	call	0x2e74	; 0x2e74 <STEPPER_set_mode>
    2c50:	81 e0       	ldi	r24, 0x01	; 1
    2c52:	b6 01       	movw	r22, r12
    2c54:	0e 94 03 17 	call	0x2e06	; 0x2e06 <STEPPER_set_accel>
    2c58:	11 c0       	rjmp	.+34     	; 0x2c7c <STEPPER_move+0xa0>
    2c5a:	82 e0       	ldi	r24, 0x02	; 2
    2c5c:	60 e0       	ldi	r22, 0x00	; 0
    2c5e:	0e 94 3a 17 	call	0x2e74	; 0x2e74 <STEPPER_set_mode>
    2c62:	80 e0       	ldi	r24, 0x00	; 0
    2c64:	b7 01       	movw	r22, r14
    2c66:	0e 94 03 17 	call	0x2e06	; 0x2e06 <STEPPER_set_accel>
    2c6a:	81 e0       	ldi	r24, 0x01	; 1
    2c6c:	b6 01       	movw	r22, r12
    2c6e:	0e 94 03 17 	call	0x2e06	; 0x2e06 <STEPPER_set_accel>
    2c72:	80 e0       	ldi	r24, 0x00	; 0
    2c74:	69 2d       	mov	r22, r9
    2c76:	a8 01       	movw	r20, r16
    2c78:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <STEPPER_run>
    2c7c:	81 e0       	ldi	r24, 0x01	; 1
    2c7e:	68 2d       	mov	r22, r8
    2c80:	a5 01       	movw	r20, r10
    2c82:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <STEPPER_run>
    2c86:	42 c0       	rjmp	.+132    	; 0x2d0c <STEPPER_move+0x130>
    2c88:	ed b7       	in	r30, 0x3d	; 61
    2c8a:	fe b7       	in	r31, 0x3e	; 62
    2c8c:	39 97       	sbiw	r30, 0x09	; 9
    2c8e:	0f b6       	in	r0, 0x3f	; 63
    2c90:	f8 94       	cli
    2c92:	fe bf       	out	0x3e, r31	; 62
    2c94:	0f be       	out	0x3f, r0	; 63
    2c96:	ed bf       	out	0x3d, r30	; 61
    2c98:	6d b6       	in	r6, 0x3d	; 61
    2c9a:	7e b6       	in	r7, 0x3e	; 62
    2c9c:	08 94       	sec
    2c9e:	61 1c       	adc	r6, r1
    2ca0:	71 1c       	adc	r7, r1
    2ca2:	52 83       	std	Z+2, r21	; 0x02
    2ca4:	41 83       	std	Z+1, r20	; 0x01
    2ca6:	f3 01       	movw	r30, r6
    2ca8:	b3 82       	std	Z+3, r11	; 0x03
    2caa:	a2 82       	std	Z+2, r10	; 0x02
    2cac:	d5 82       	std	Z+5, r13	; 0x05
    2cae:	c4 82       	std	Z+4, r12	; 0x04
    2cb0:	96 83       	std	Z+6, r25	; 0x06
    2cb2:	88 8d       	ldd	r24, Y+24	; 0x18
    2cb4:	99 8d       	ldd	r25, Y+25	; 0x19
    2cb6:	90 87       	std	Z+8, r25	; 0x08
    2cb8:	87 83       	std	Z+7, r24	; 0x07
    2cba:	80 e0       	ldi	r24, 0x00	; 0
    2cbc:	49 2d       	mov	r20, r9
    2cbe:	c7 2e       	mov	r12, r23
    2cc0:	5d 01       	movw	r10, r26
    2cc2:	1a c0       	rjmp	.+52     	; 0x2cf8 <STEPPER_move+0x11c>
    2cc4:	ed b7       	in	r30, 0x3d	; 61
    2cc6:	fe b7       	in	r31, 0x3e	; 62
    2cc8:	39 97       	sbiw	r30, 0x09	; 9
    2cca:	0f b6       	in	r0, 0x3f	; 63
    2ccc:	f8 94       	cli
    2cce:	fe bf       	out	0x3e, r31	; 62
    2cd0:	0f be       	out	0x3f, r0	; 63
    2cd2:	ed bf       	out	0x3d, r30	; 61
    2cd4:	ad b7       	in	r26, 0x3d	; 61
    2cd6:	be b7       	in	r27, 0x3e	; 62
    2cd8:	11 96       	adiw	r26, 0x01	; 1
    2cda:	52 83       	std	Z+2, r21	; 0x02
    2cdc:	41 83       	std	Z+1, r20	; 0x01
    2cde:	fd 01       	movw	r30, r26
    2ce0:	b3 82       	std	Z+3, r11	; 0x03
    2ce2:	a2 82       	std	Z+2, r10	; 0x02
    2ce4:	d5 82       	std	Z+5, r13	; 0x05
    2ce6:	c4 82       	std	Z+4, r12	; 0x04
    2ce8:	96 83       	std	Z+6, r25	; 0x06
    2cea:	10 86       	std	Z+8, r1	; 0x08
    2cec:	17 82       	std	Z+7, r1	; 0x07
    2cee:	81 e0       	ldi	r24, 0x01	; 1
    2cf0:	49 2d       	mov	r20, r9
    2cf2:	c7 2e       	mov	r12, r23
    2cf4:	aa 24       	eor	r10, r10
    2cf6:	bb 24       	eor	r11, r11
    2cf8:	0e 94 31 15 	call	0x2a62	; 0x2a62 <STEPPER_stepmode>
    2cfc:	8d b7       	in	r24, 0x3d	; 61
    2cfe:	9e b7       	in	r25, 0x3e	; 62
    2d00:	09 96       	adiw	r24, 0x09	; 9
    2d02:	0f b6       	in	r0, 0x3f	; 63
    2d04:	f8 94       	cli
    2d06:	9e bf       	out	0x3e, r25	; 62
    2d08:	0f be       	out	0x3f, r0	; 63
    2d0a:	8d bf       	out	0x3d, r24	; 61
    2d0c:	cf 91       	pop	r28
    2d0e:	df 91       	pop	r29
    2d10:	1f 91       	pop	r17
    2d12:	0f 91       	pop	r16
    2d14:	ff 90       	pop	r15
    2d16:	ef 90       	pop	r14
    2d18:	df 90       	pop	r13
    2d1a:	cf 90       	pop	r12
    2d1c:	bf 90       	pop	r11
    2d1e:	af 90       	pop	r10
    2d20:	9f 90       	pop	r9
    2d22:	8f 90       	pop	r8
    2d24:	7f 90       	pop	r7
    2d26:	6f 90       	pop	r6
    2d28:	08 95       	ret

00002d2a <STEPPER_open>:
    2d2a:	0e 94 df 1f 	call	0x3fbe	; 0x3fbe <__STEPPER_init>
    2d2e:	81 e0       	ldi	r24, 0x01	; 1
    2d30:	80 93 d9 04 	sts	0x04D9, r24
    2d34:	e3 ea       	ldi	r30, 0xA3	; 163
    2d36:	f4 e0       	ldi	r31, 0x04	; 4
    2d38:	11 92       	st	Z+, r1
    2d3a:	11 92       	st	Z+, r1
    2d3c:	11 82       	std	Z+1, r1	; 0x01
    2d3e:	10 82       	st	Z, r1
    2d40:	32 96       	adiw	r30, 0x02	; 2
    2d42:	11 82       	std	Z+1, r1	; 0x01
    2d44:	10 82       	st	Z, r1
    2d46:	32 96       	adiw	r30, 0x02	; 2
    2d48:	11 82       	std	Z+1, r1	; 0x01
    2d4a:	10 82       	st	Z, r1
    2d4c:	32 96       	adiw	r30, 0x02	; 2
    2d4e:	11 82       	std	Z+1, r1	; 0x01
    2d50:	10 82       	st	Z, r1
    2d52:	32 96       	adiw	r30, 0x02	; 2
    2d54:	11 82       	std	Z+1, r1	; 0x01
    2d56:	10 82       	st	Z, r1
    2d58:	32 96       	adiw	r30, 0x02	; 2
    2d5a:	11 82       	std	Z+1, r1	; 0x01
    2d5c:	10 82       	st	Z, r1
    2d5e:	32 96       	adiw	r30, 0x02	; 2
    2d60:	11 82       	std	Z+1, r1	; 0x01
    2d62:	10 82       	st	Z, r1
    2d64:	32 96       	adiw	r30, 0x02	; 2
    2d66:	11 82       	std	Z+1, r1	; 0x01
    2d68:	10 82       	st	Z, r1
    2d6a:	32 96       	adiw	r30, 0x02	; 2
    2d6c:	11 82       	std	Z+1, r1	; 0x01
    2d6e:	10 82       	st	Z, r1
    2d70:	32 96       	adiw	r30, 0x02	; 2
    2d72:	11 82       	std	Z+1, r1	; 0x01
    2d74:	10 82       	st	Z, r1
    2d76:	32 96       	adiw	r30, 0x02	; 2
    2d78:	11 82       	std	Z+1, r1	; 0x01
    2d7a:	10 82       	st	Z, r1
    2d7c:	32 96       	adiw	r30, 0x02	; 2
    2d7e:	11 82       	std	Z+1, r1	; 0x01
    2d80:	10 82       	st	Z, r1
    2d82:	36 96       	adiw	r30, 0x06	; 6
    2d84:	11 92       	st	Z+, r1
    2d86:	11 92       	st	Z+, r1
    2d88:	11 92       	st	Z+, r1
    2d8a:	10 82       	st	Z, r1
    2d8c:	32 96       	adiw	r30, 0x02	; 2
    2d8e:	11 92       	st	Z+, r1
    2d90:	11 92       	st	Z+, r1
    2d92:	11 92       	st	Z+, r1
    2d94:	11 92       	st	Z+, r1
    2d96:	11 92       	st	Z+, r1
    2d98:	11 92       	st	Z+, r1
    2d9a:	11 92       	st	Z+, r1
    2d9c:	11 82       	std	Z+1, r1	; 0x01
    2d9e:	10 82       	st	Z, r1
    2da0:	32 96       	adiw	r30, 0x02	; 2
    2da2:	11 82       	std	Z+1, r1	; 0x01
    2da4:	10 82       	st	Z, r1
    2da6:	32 96       	adiw	r30, 0x02	; 2
    2da8:	11 82       	std	Z+1, r1	; 0x01
    2daa:	10 82       	st	Z, r1
    2dac:	32 96       	adiw	r30, 0x02	; 2
    2dae:	11 82       	std	Z+1, r1	; 0x01
    2db0:	10 82       	st	Z, r1
    2db2:	76 97       	sbiw	r30, 0x16	; 22
    2db4:	11 82       	std	Z+1, r1	; 0x01
    2db6:	10 82       	st	Z, r1
    2db8:	32 96       	adiw	r30, 0x02	; 2
    2dba:	11 82       	std	Z+1, r1	; 0x01
    2dbc:	10 82       	st	Z, r1
    2dbe:	10 92 d8 04 	sts	0x04D8, r1
    2dc2:	10 92 d7 04 	sts	0x04D7, r1
    2dc6:	10 92 d9 04 	sts	0x04D9, r1
    2dca:	87 e0       	ldi	r24, 0x07	; 7
    2dcc:	61 e0       	ldi	r22, 0x01	; 1
    2dce:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    2dd2:	87 e0       	ldi	r24, 0x07	; 7
    2dd4:	91 e0       	ldi	r25, 0x01	; 1
    2dd6:	08 95       	ret

00002dd8 <STEPPER_run>:
    2dd8:	ef 92       	push	r14
    2dda:	ff 92       	push	r15
    2ddc:	0f 93       	push	r16
    2dde:	1f 93       	push	r17
    2de0:	18 2f       	mov	r17, r24
    2de2:	06 2f       	mov	r16, r22
    2de4:	7a 01       	movw	r14, r20
    2de6:	60 e0       	ldi	r22, 0x00	; 0
    2de8:	0e 94 3a 17 	call	0x2e74	; 0x2e74 <STEPPER_set_mode>
    2dec:	81 2f       	mov	r24, r17
    2dee:	60 2f       	mov	r22, r16
    2df0:	0e 94 25 17 	call	0x2e4a	; 0x2e4a <STEPPER_set_dir>
    2df4:	81 2f       	mov	r24, r17
    2df6:	b7 01       	movw	r22, r14
    2df8:	0e 94 4f 17 	call	0x2e9e	; 0x2e9e <STEPPER_set_speed>
    2dfc:	1f 91       	pop	r17
    2dfe:	0f 91       	pop	r16
    2e00:	ff 90       	pop	r15
    2e02:	ef 90       	pop	r14
    2e04:	08 95       	ret

00002e06 <STEPPER_set_accel>:
    2e06:	48 2f       	mov	r20, r24
    2e08:	81 e0       	ldi	r24, 0x01	; 1
    2e0a:	80 93 d9 04 	sts	0x04D9, r24
    2e0e:	cb 01       	movw	r24, r22
    2e10:	23 e0       	ldi	r18, 0x03	; 3
    2e12:	69 3e       	cpi	r22, 0xE9	; 233
    2e14:	72 07       	cpc	r23, r18
    2e16:	10 f0       	brcs	.+4      	; 0x2e1c <STEPPER_set_accel+0x16>
    2e18:	88 ee       	ldi	r24, 0xE8	; 232
    2e1a:	93 e0       	ldi	r25, 0x03	; 3
    2e1c:	41 30       	cpi	r20, 0x01	; 1
    2e1e:	71 f0       	breq	.+28     	; 0x2e3c <STEPPER_set_accel+0x36>
    2e20:	41 30       	cpi	r20, 0x01	; 1
    2e22:	18 f0       	brcs	.+6      	; 0x2e2a <STEPPER_set_accel+0x24>
    2e24:	42 30       	cpi	r20, 0x02	; 2
    2e26:	71 f4       	brne	.+28     	; 0x2e44 <STEPPER_set_accel+0x3e>
    2e28:	05 c0       	rjmp	.+10     	; 0x2e34 <STEPPER_set_accel+0x2e>
    2e2a:	90 93 ae 04 	sts	0x04AE, r25
    2e2e:	80 93 ad 04 	sts	0x04AD, r24
    2e32:	08 c0       	rjmp	.+16     	; 0x2e44 <STEPPER_set_accel+0x3e>
    2e34:	90 93 ae 04 	sts	0x04AE, r25
    2e38:	80 93 ad 04 	sts	0x04AD, r24
    2e3c:	90 93 b0 04 	sts	0x04B0, r25
    2e40:	80 93 af 04 	sts	0x04AF, r24
    2e44:	10 92 d9 04 	sts	0x04D9, r1
    2e48:	08 95       	ret

00002e4a <STEPPER_set_dir>:
    2e4a:	98 2f       	mov	r25, r24
    2e4c:	81 e0       	ldi	r24, 0x01	; 1
    2e4e:	80 93 d9 04 	sts	0x04D9, r24
    2e52:	91 30       	cpi	r25, 0x01	; 1
    2e54:	51 f0       	breq	.+20     	; 0x2e6a <STEPPER_set_dir+0x20>
    2e56:	91 30       	cpi	r25, 0x01	; 1
    2e58:	18 f0       	brcs	.+6      	; 0x2e60 <STEPPER_set_dir+0x16>
    2e5a:	92 30       	cpi	r25, 0x02	; 2
    2e5c:	41 f4       	brne	.+16     	; 0x2e6e <STEPPER_set_dir+0x24>
    2e5e:	03 c0       	rjmp	.+6      	; 0x2e66 <STEPPER_set_dir+0x1c>
    2e60:	60 93 c6 04 	sts	0x04C6, r22
    2e64:	04 c0       	rjmp	.+8      	; 0x2e6e <STEPPER_set_dir+0x24>
    2e66:	60 93 c6 04 	sts	0x04C6, r22
    2e6a:	60 93 c7 04 	sts	0x04C7, r22
    2e6e:	10 92 d9 04 	sts	0x04D9, r1
    2e72:	08 95       	ret

00002e74 <STEPPER_set_mode>:
    2e74:	98 2f       	mov	r25, r24
    2e76:	81 e0       	ldi	r24, 0x01	; 1
    2e78:	80 93 d9 04 	sts	0x04D9, r24
    2e7c:	91 30       	cpi	r25, 0x01	; 1
    2e7e:	51 f0       	breq	.+20     	; 0x2e94 <STEPPER_set_mode+0x20>
    2e80:	91 30       	cpi	r25, 0x01	; 1
    2e82:	18 f0       	brcs	.+6      	; 0x2e8a <STEPPER_set_mode+0x16>
    2e84:	92 30       	cpi	r25, 0x02	; 2
    2e86:	41 f4       	brne	.+16     	; 0x2e98 <STEPPER_set_mode+0x24>
    2e88:	03 c0       	rjmp	.+6      	; 0x2e90 <STEPPER_set_mode+0x1c>
    2e8a:	60 93 a3 04 	sts	0x04A3, r22
    2e8e:	04 c0       	rjmp	.+8      	; 0x2e98 <STEPPER_set_mode+0x24>
    2e90:	60 93 a3 04 	sts	0x04A3, r22
    2e94:	60 93 a4 04 	sts	0x04A4, r22
    2e98:	10 92 d9 04 	sts	0x04D9, r1
    2e9c:	08 95       	ret

00002e9e <STEPPER_set_speed>:
    2e9e:	48 2f       	mov	r20, r24
    2ea0:	81 e0       	ldi	r24, 0x01	; 1
    2ea2:	80 93 d9 04 	sts	0x04D9, r24
    2ea6:	cb 01       	movw	r24, r22
    2ea8:	21 e0       	ldi	r18, 0x01	; 1
    2eaa:	61 39       	cpi	r22, 0x91	; 145
    2eac:	72 07       	cpc	r23, r18
    2eae:	10 f0       	brcs	.+4      	; 0x2eb4 <STEPPER_set_speed+0x16>
    2eb0:	80 e9       	ldi	r24, 0x90	; 144
    2eb2:	91 e0       	ldi	r25, 0x01	; 1
    2eb4:	41 30       	cpi	r20, 0x01	; 1
    2eb6:	71 f0       	breq	.+28     	; 0x2ed4 <STEPPER_set_speed+0x36>
    2eb8:	41 30       	cpi	r20, 0x01	; 1
    2eba:	18 f0       	brcs	.+6      	; 0x2ec2 <STEPPER_set_speed+0x24>
    2ebc:	42 30       	cpi	r20, 0x02	; 2
    2ebe:	71 f4       	brne	.+28     	; 0x2edc <STEPPER_set_speed+0x3e>
    2ec0:	05 c0       	rjmp	.+10     	; 0x2ecc <STEPPER_set_speed+0x2e>
    2ec2:	90 93 a6 04 	sts	0x04A6, r25
    2ec6:	80 93 a5 04 	sts	0x04A5, r24
    2eca:	08 c0       	rjmp	.+16     	; 0x2edc <STEPPER_set_speed+0x3e>
    2ecc:	90 93 a6 04 	sts	0x04A6, r25
    2ed0:	80 93 a5 04 	sts	0x04A5, r24
    2ed4:	90 93 a8 04 	sts	0x04A8, r25
    2ed8:	80 93 a7 04 	sts	0x04A7, r24
    2edc:	10 92 d9 04 	sts	0x04D9, r1
    2ee0:	08 95       	ret

00002ee2 <STEPPER_step>:
    2ee2:	8f 92       	push	r8
    2ee4:	9f 92       	push	r9
    2ee6:	af 92       	push	r10
    2ee8:	bf 92       	push	r11
    2eea:	cf 92       	push	r12
    2eec:	df 92       	push	r13
    2eee:	ef 92       	push	r14
    2ef0:	ff 92       	push	r15
    2ef2:	0f 93       	push	r16
    2ef4:	1f 93       	push	r17
    2ef6:	cf 93       	push	r28
    2ef8:	df 93       	push	r29
    2efa:	18 2f       	mov	r17, r24
    2efc:	f6 2e       	mov	r15, r22
    2efe:	5a 01       	movw	r10, r20
    2f00:	49 01       	movw	r8, r18
    2f02:	e6 01       	movw	r28, r12
    2f04:	61 e0       	ldi	r22, 0x01	; 1
    2f06:	0e 94 3a 17 	call	0x2e74	; 0x2e74 <STEPPER_set_mode>
    2f0a:	81 2f       	mov	r24, r17
    2f0c:	b5 01       	movw	r22, r10
    2f0e:	a4 01       	movw	r20, r8
    2f10:	0e 94 19 20 	call	0x4032	; 0x4032 <STEPPER_setup_decels>
    2f14:	81 2f       	mov	r24, r17
    2f16:	6f 2d       	mov	r22, r15
    2f18:	0e 94 25 17 	call	0x2e4a	; 0x2e4a <STEPPER_set_dir>
    2f1c:	81 2f       	mov	r24, r17
    2f1e:	60 2f       	mov	r22, r16
    2f20:	0e 94 04 20 	call	0x4008	; 0x4008 <STEPPER_set_stop_mode>
    2f24:	81 2f       	mov	r24, r17
    2f26:	b5 01       	movw	r22, r10
    2f28:	0e 94 e9 1f 	call	0x3fd2	; 0x3fd2 <STEPPER_set_steps>
    2f2c:	c1 14       	cp	r12, r1
    2f2e:	d1 04       	cpc	r13, r1
    2f30:	99 f0       	breq	.+38     	; 0x2f58 <STEPPER_step+0x76>
    2f32:	11 30       	cpi	r17, 0x01	; 1
    2f34:	49 f0       	breq	.+18     	; 0x2f48 <STEPPER_step+0x66>
    2f36:	11 30       	cpi	r17, 0x01	; 1
    2f38:	18 f0       	brcs	.+6      	; 0x2f40 <STEPPER_step+0x5e>
    2f3a:	12 30       	cpi	r17, 0x02	; 2
    2f3c:	69 f4       	brne	.+26     	; 0x2f58 <STEPPER_step+0x76>
    2f3e:	06 c0       	rjmp	.+12     	; 0x2f4c <STEPPER_step+0x6a>
    2f40:	18 82       	st	Y, r1
    2f42:	10 92 d5 04 	sts	0x04D5, r1
    2f46:	08 c0       	rjmp	.+16     	; 0x2f58 <STEPPER_step+0x76>
    2f48:	19 82       	std	Y+1, r1	; 0x01
    2f4a:	04 c0       	rjmp	.+8      	; 0x2f54 <STEPPER_step+0x72>
    2f4c:	18 82       	st	Y, r1
    2f4e:	19 82       	std	Y+1, r1	; 0x01
    2f50:	10 92 d5 04 	sts	0x04D5, r1
    2f54:	10 92 d6 04 	sts	0x04D6, r1
    2f58:	d0 93 d8 04 	sts	0x04D8, r29
    2f5c:	c0 93 d7 04 	sts	0x04D7, r28
    2f60:	ee 20       	and	r14, r14
    2f62:	b9 f5       	brne	.+110    	; 0x2fd2 <STEPPER_step+0xf0>
    2f64:	8b e3       	ldi	r24, 0x3B	; 59
    2f66:	92 e0       	ldi	r25, 0x02	; 2
    2f68:	90 93 d8 04 	sts	0x04D8, r25
    2f6c:	80 93 d7 04 	sts	0x04D7, r24
    2f70:	81 2f       	mov	r24, r17
    2f72:	b4 01       	movw	r22, r8
    2f74:	0e 94 4f 17 	call	0x2e9e	; 0x2e9e <STEPPER_set_speed>
    2f78:	81 2f       	mov	r24, r17
    2f7a:	0e 94 ca 1f 	call	0x3f94	; 0x3f94 <STEPPER_go>
    2f7e:	11 30       	cpi	r17, 0x01	; 1
    2f80:	71 f0       	breq	.+28     	; 0x2f9e <STEPPER_step+0xbc>
    2f82:	11 30       	cpi	r17, 0x01	; 1
    2f84:	18 f0       	brcs	.+6      	; 0x2f8c <STEPPER_step+0xaa>
    2f86:	12 30       	cpi	r17, 0x02	; 2
    2f88:	59 f5       	brne	.+86     	; 0x2fe0 <STEPPER_step+0xfe>
    2f8a:	12 c0       	rjmp	.+36     	; 0x2fb0 <STEPPER_step+0xce>
    2f8c:	10 92 3b 02 	sts	0x023B, r1
    2f90:	10 92 d5 04 	sts	0x04D5, r1
    2f94:	80 91 3b 02 	lds	r24, 0x023B
    2f98:	88 23       	and	r24, r24
    2f9a:	e1 f3       	breq	.-8      	; 0x2f94 <STEPPER_step+0xb2>
    2f9c:	21 c0       	rjmp	.+66     	; 0x2fe0 <STEPPER_step+0xfe>
    2f9e:	10 92 3c 02 	sts	0x023C, r1
    2fa2:	10 92 d6 04 	sts	0x04D6, r1
    2fa6:	80 91 3c 02 	lds	r24, 0x023C
    2faa:	88 23       	and	r24, r24
    2fac:	e1 f3       	breq	.-8      	; 0x2fa6 <STEPPER_step+0xc4>
    2fae:	18 c0       	rjmp	.+48     	; 0x2fe0 <STEPPER_step+0xfe>
    2fb0:	10 92 3b 02 	sts	0x023B, r1
    2fb4:	10 92 3c 02 	sts	0x023C, r1
    2fb8:	10 92 d5 04 	sts	0x04D5, r1
    2fbc:	10 92 d6 04 	sts	0x04D6, r1
    2fc0:	80 91 3b 02 	lds	r24, 0x023B
    2fc4:	88 23       	and	r24, r24
    2fc6:	e1 f3       	breq	.-8      	; 0x2fc0 <STEPPER_step+0xde>
    2fc8:	80 91 3c 02 	lds	r24, 0x023C
    2fcc:	88 23       	and	r24, r24
    2fce:	c1 f3       	breq	.-16     	; 0x2fc0 <STEPPER_step+0xde>
    2fd0:	07 c0       	rjmp	.+14     	; 0x2fe0 <STEPPER_step+0xfe>
    2fd2:	81 2f       	mov	r24, r17
    2fd4:	b4 01       	movw	r22, r8
    2fd6:	0e 94 4f 17 	call	0x2e9e	; 0x2e9e <STEPPER_set_speed>
    2fda:	81 2f       	mov	r24, r17
    2fdc:	0e 94 ca 1f 	call	0x3f94	; 0x3f94 <STEPPER_go>
    2fe0:	df 91       	pop	r29
    2fe2:	cf 91       	pop	r28
    2fe4:	1f 91       	pop	r17
    2fe6:	0f 91       	pop	r16
    2fe8:	ff 90       	pop	r15
    2fea:	ef 90       	pop	r14
    2fec:	df 90       	pop	r13
    2fee:	cf 90       	pop	r12
    2ff0:	bf 90       	pop	r11
    2ff2:	af 90       	pop	r10
    2ff4:	9f 90       	pop	r9
    2ff6:	8f 90       	pop	r8
    2ff8:	08 95       	ret

00002ffa <STEPPER_wait_and_then>:
    2ffa:	cf 92       	push	r12
    2ffc:	df 92       	push	r13
    2ffe:	ef 92       	push	r14
    3000:	ff 92       	push	r15
    3002:	0f 93       	push	r16
    3004:	1f 93       	push	r17
    3006:	df 93       	push	r29
    3008:	cf 93       	push	r28
    300a:	cd b7       	in	r28, 0x3d	; 61
    300c:	de b7       	in	r29, 0x3e	; 62
    300e:	8b 85       	ldd	r24, Y+11	; 0x0b
    3010:	81 30       	cpi	r24, 0x01	; 1
    3012:	61 f0       	breq	.+24     	; 0x302c <STEPPER_wait_and_then+0x32>
    3014:	81 30       	cpi	r24, 0x01	; 1
    3016:	18 f0       	brcs	.+6      	; 0x301e <STEPPER_wait_and_then+0x24>
    3018:	82 30       	cpi	r24, 0x02	; 2
    301a:	a1 f5       	brne	.+104    	; 0x3084 <STEPPER_wait_and_then+0x8a>
    301c:	11 c0       	rjmp	.+34     	; 0x3040 <STEPPER_wait_and_then+0x46>
    301e:	ec 85       	ldd	r30, Y+12	; 0x0c
    3020:	fd 85       	ldd	r31, Y+13	; 0x0d
    3022:	80 91 da 04 	lds	r24, 0x04DA
    3026:	88 23       	and	r24, r24
    3028:	e1 f3       	breq	.-8      	; 0x3022 <STEPPER_wait_and_then+0x28>
    302a:	06 c0       	rjmp	.+12     	; 0x3038 <STEPPER_wait_and_then+0x3e>
    302c:	ec 85       	ldd	r30, Y+12	; 0x0c
    302e:	fd 85       	ldd	r31, Y+13	; 0x0d
    3030:	80 91 db 04 	lds	r24, 0x04DB
    3034:	88 23       	and	r24, r24
    3036:	e1 f3       	breq	.-8      	; 0x3030 <STEPPER_wait_and_then+0x36>
    3038:	30 97       	sbiw	r30, 0x00	; 0
    303a:	21 f1       	breq	.+72     	; 0x3084 <STEPPER_wait_and_then+0x8a>
    303c:	09 95       	icall
    303e:	22 c0       	rjmp	.+68     	; 0x3084 <STEPPER_wait_and_then+0x8a>
    3040:	cc 84       	ldd	r12, Y+12	; 0x0c
    3042:	dd 84       	ldd	r13, Y+13	; 0x0d
    3044:	ee 84       	ldd	r14, Y+14	; 0x0e
    3046:	ff 84       	ldd	r15, Y+15	; 0x0f
    3048:	00 e0       	ldi	r16, 0x00	; 0
    304a:	10 e0       	ldi	r17, 0x00	; 0
    304c:	00 23       	and	r16, r16
    304e:	51 f4       	brne	.+20     	; 0x3064 <STEPPER_wait_and_then+0x6a>
    3050:	80 91 da 04 	lds	r24, 0x04DA
    3054:	88 23       	and	r24, r24
    3056:	31 f0       	breq	.+12     	; 0x3064 <STEPPER_wait_and_then+0x6a>
    3058:	c1 14       	cp	r12, r1
    305a:	d1 04       	cpc	r13, r1
    305c:	11 f0       	breq	.+4      	; 0x3062 <STEPPER_wait_and_then+0x68>
    305e:	f6 01       	movw	r30, r12
    3060:	09 95       	icall
    3062:	01 e0       	ldi	r16, 0x01	; 1
    3064:	11 23       	and	r17, r17
    3066:	51 f4       	brne	.+20     	; 0x307c <STEPPER_wait_and_then+0x82>
    3068:	80 91 db 04 	lds	r24, 0x04DB
    306c:	88 23       	and	r24, r24
    306e:	31 f0       	breq	.+12     	; 0x307c <STEPPER_wait_and_then+0x82>
    3070:	e1 14       	cp	r14, r1
    3072:	f1 04       	cpc	r15, r1
    3074:	11 f0       	breq	.+4      	; 0x307a <STEPPER_wait_and_then+0x80>
    3076:	f7 01       	movw	r30, r14
    3078:	09 95       	icall
    307a:	11 e0       	ldi	r17, 0x01	; 1
    307c:	00 23       	and	r16, r16
    307e:	31 f3       	breq	.-52     	; 0x304c <STEPPER_wait_and_then+0x52>
    3080:	11 23       	and	r17, r17
    3082:	21 f3       	breq	.-56     	; 0x304c <STEPPER_wait_and_then+0x52>
    3084:	cf 91       	pop	r28
    3086:	df 91       	pop	r29
    3088:	1f 91       	pop	r17
    308a:	0f 91       	pop	r16
    308c:	ff 90       	pop	r15
    308e:	ef 90       	pop	r14
    3090:	df 90       	pop	r13
    3092:	cf 90       	pop	r12
    3094:	08 95       	ret

00003096 <SYS_get_state>:
    3096:	e8 2f       	mov	r30, r24
    3098:	f0 e0       	ldi	r31, 0x00	; 0
    309a:	e3 31       	cpi	r30, 0x13	; 19
    309c:	f1 05       	cpc	r31, r1
    309e:	40 f4       	brcc	.+16     	; 0x30b0 <SYS_get_state+0x1a>
    30a0:	e2 5c       	subi	r30, 0xC2	; 194
    30a2:	ff 4f       	sbci	r31, 0xFF	; 255
    30a4:	ee 0f       	add	r30, r30
    30a6:	ff 1f       	adc	r31, r31
    30a8:	05 90       	lpm	r0, Z+
    30aa:	f4 91       	lpm	r31, Z+
    30ac:	e0 2d       	mov	r30, r0
    30ae:	09 94       	ijmp
    30b0:	80 e0       	ldi	r24, 0x00	; 0
    30b2:	08 95       	ret
    30b4:	80 91 dc 04 	lds	r24, 0x04DC
    30b8:	08 95       	ret
    30ba:	80 91 dd 04 	lds	r24, 0x04DD
    30be:	08 95       	ret
    30c0:	80 91 de 04 	lds	r24, 0x04DE
    30c4:	08 95       	ret
    30c6:	80 91 df 04 	lds	r24, 0x04DF
    30ca:	08 95       	ret
    30cc:	80 91 e0 04 	lds	r24, 0x04E0
    30d0:	08 95       	ret
    30d2:	80 91 e2 04 	lds	r24, 0x04E2
    30d6:	08 95       	ret
    30d8:	80 91 e1 04 	lds	r24, 0x04E1
    30dc:	08 95       	ret
    30de:	80 91 e3 04 	lds	r24, 0x04E3
    30e2:	08 95       	ret
    30e4:	80 91 e4 04 	lds	r24, 0x04E4
    30e8:	08 95       	ret
    30ea:	80 91 e5 04 	lds	r24, 0x04E5
    30ee:	08 95       	ret
    30f0:	80 91 e6 04 	lds	r24, 0x04E6
    30f4:	08 95       	ret
    30f6:	80 91 e7 04 	lds	r24, 0x04E7
    30fa:	08 95       	ret
    30fc:	80 91 e8 04 	lds	r24, 0x04E8
    3100:	08 95       	ret
    3102:	80 91 e9 04 	lds	r24, 0x04E9
    3106:	08 95       	ret
    3108:	80 91 ea 04 	lds	r24, 0x04EA
    310c:	08 95       	ret
    310e:	80 91 eb 04 	lds	r24, 0x04EB
    3112:	08 95       	ret
    3114:	80 91 ec 04 	lds	r24, 0x04EC
    3118:	08 95       	ret
    311a:	80 91 ed 04 	lds	r24, 0x04ED
    311e:	08 95       	ret
    3120:	80 91 ee 04 	lds	r24, 0x04EE
    3124:	08 95       	ret

00003126 <SYS_set_state>:
    3126:	e8 2f       	mov	r30, r24
    3128:	f0 e0       	ldi	r31, 0x00	; 0
    312a:	e3 31       	cpi	r30, 0x13	; 19
    312c:	f1 05       	cpc	r31, r1
    312e:	08 f0       	brcs	.+2      	; 0x3132 <SYS_set_state+0xc>
    3130:	40 c0       	rjmp	.+128    	; 0x31b2 <SYS_set_state+0x8c>
    3132:	ef 5a       	subi	r30, 0xAF	; 175
    3134:	ff 4f       	sbci	r31, 0xFF	; 255
    3136:	ee 0f       	add	r30, r30
    3138:	ff 1f       	adc	r31, r31
    313a:	05 90       	lpm	r0, Z+
    313c:	f4 91       	lpm	r31, Z+
    313e:	e0 2d       	mov	r30, r0
    3140:	09 94       	ijmp
    3142:	60 93 dc 04 	sts	0x04DC, r22
    3146:	08 95       	ret
    3148:	60 93 dd 04 	sts	0x04DD, r22
    314c:	08 95       	ret
    314e:	60 93 de 04 	sts	0x04DE, r22
    3152:	08 95       	ret
    3154:	60 93 df 04 	sts	0x04DF, r22
    3158:	08 95       	ret
    315a:	60 93 e0 04 	sts	0x04E0, r22
    315e:	08 95       	ret
    3160:	60 93 e2 04 	sts	0x04E2, r22
    3164:	08 95       	ret
    3166:	60 93 e1 04 	sts	0x04E1, r22
    316a:	08 95       	ret
    316c:	60 93 e3 04 	sts	0x04E3, r22
    3170:	08 95       	ret
    3172:	60 93 e4 04 	sts	0x04E4, r22
    3176:	08 95       	ret
    3178:	60 93 e5 04 	sts	0x04E5, r22
    317c:	08 95       	ret
    317e:	60 93 e6 04 	sts	0x04E6, r22
    3182:	08 95       	ret
    3184:	60 93 e7 04 	sts	0x04E7, r22
    3188:	08 95       	ret
    318a:	60 93 e8 04 	sts	0x04E8, r22
    318e:	08 95       	ret
    3190:	60 93 e9 04 	sts	0x04E9, r22
    3194:	08 95       	ret
    3196:	60 93 ea 04 	sts	0x04EA, r22
    319a:	08 95       	ret
    319c:	60 93 eb 04 	sts	0x04EB, r22
    31a0:	08 95       	ret
    31a2:	60 93 ec 04 	sts	0x04EC, r22
    31a6:	08 95       	ret
    31a8:	60 93 ed 04 	sts	0x04ED, r22
    31ac:	08 95       	ret
    31ae:	60 93 ec 04 	sts	0x04EC, r22
    31b2:	08 95       	ret

000031b4 <ATTINY_get_sensors>:
    31b4:	0f 93       	push	r16
    31b6:	1f 93       	push	r17
    31b8:	81 e0       	ldi	r24, 0x01	; 1
    31ba:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    31be:	81 30       	cpi	r24, 0x01	; 1
    31c0:	11 f0       	breq	.+4      	; 0x31c6 <ATTINY_get_sensors+0x12>
    31c2:	00 e0       	ldi	r16, 0x00	; 0
    31c4:	24 c0       	rjmp	.+72     	; 0x320e <ATTINY_get_sensors+0x5a>
    31c6:	87 e0       	ldi	r24, 0x07	; 7
    31c8:	0e 94 28 14 	call	0x2850	; 0x2850 <SPI_set_slave_addr>
    31cc:	82 e0       	ldi	r24, 0x02	; 2
    31ce:	6a e0       	ldi	r22, 0x0A	; 10
    31d0:	0e 94 79 14 	call	0x28f2	; 0x28f2 <SPI_transmit>
    31d4:	82 e0       	ldi	r24, 0x02	; 2
    31d6:	62 eb       	ldi	r22, 0xB2	; 178
    31d8:	0e 94 79 14 	call	0x28f2	; 0x28f2 <SPI_transmit>
    31dc:	18 ec       	ldi	r17, 0xC8	; 200
    31de:	81 2f       	mov	r24, r17
    31e0:	8a 95       	dec	r24
    31e2:	f1 f7       	brne	.-4      	; 0x31e0 <ATTINY_get_sensors+0x2c>
    31e4:	82 e0       	ldi	r24, 0x02	; 2
    31e6:	60 e0       	ldi	r22, 0x00	; 0
    31e8:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <SPI_receive>
    31ec:	08 2f       	mov	r16, r24
    31ee:	81 2f       	mov	r24, r17
    31f0:	8a 95       	dec	r24
    31f2:	f1 f7       	brne	.-4      	; 0x31f0 <ATTINY_get_sensors+0x3c>
    31f4:	82 e0       	ldi	r24, 0x02	; 2
    31f6:	60 e0       	ldi	r22, 0x00	; 0
    31f8:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <SPI_receive>
    31fc:	1a 95       	dec	r17
    31fe:	f1 f7       	brne	.-4      	; 0x31fc <ATTINY_get_sensors+0x48>
    3200:	87 e0       	ldi	r24, 0x07	; 7
    3202:	0e 94 28 14 	call	0x2850	; 0x2850 <SPI_set_slave_addr>
    3206:	88 e8       	ldi	r24, 0x88	; 136
    3208:	93 e1       	ldi	r25, 0x13	; 19
    320a:	01 97       	sbiw	r24, 0x01	; 1
    320c:	f1 f7       	brne	.-4      	; 0x320a <ATTINY_get_sensors+0x56>
    320e:	80 2f       	mov	r24, r16
    3210:	1f 91       	pop	r17
    3212:	0f 91       	pop	r16
    3214:	08 95       	ret

00003216 <ATTINY_get_SW_state>:
    3216:	1f 93       	push	r17
    3218:	cf 93       	push	r28
    321a:	df 93       	push	r29
    321c:	18 2f       	mov	r17, r24
    321e:	80 91 3e 02 	lds	r24, 0x023E
    3222:	88 23       	and	r24, r24
    3224:	41 f0       	breq	.+16     	; 0x3236 <ATTINY_get_SW_state+0x20>
    3226:	80 91 48 02 	lds	r24, 0x0248
    322a:	88 23       	and	r24, r24
    322c:	99 f0       	breq	.+38     	; 0x3254 <ATTINY_get_SW_state+0x3e>
    322e:	10 92 3e 02 	sts	0x023E, r1
    3232:	10 92 48 02 	sts	0x0248, r1
    3236:	0e 94 da 18 	call	0x31b4	; 0x31b4 <ATTINY_get_sensors>
    323a:	80 93 3d 02 	sts	0x023D, r24
    323e:	82 e4       	ldi	r24, 0x42	; 66
    3240:	92 e0       	ldi	r25, 0x02	; 2
    3242:	61 e0       	ldi	r22, 0x01	; 1
    3244:	40 e0       	ldi	r20, 0x00	; 0
    3246:	22 e3       	ldi	r18, 0x32	; 50
    3248:	30 e0       	ldi	r19, 0x00	; 0
    324a:	0e 94 c9 19 	call	0x3392	; 0x3392 <TMRSRVC_new>
    324e:	81 e0       	ldi	r24, 0x01	; 1
    3250:	80 93 3e 02 	sts	0x023E, r24
    3254:	90 91 3d 02 	lds	r25, 0x023D
    3258:	a1 2f       	mov	r26, r17
    325a:	b0 e0       	ldi	r27, 0x00	; 0
    325c:	ed 01       	movw	r28, r26
    325e:	ce 53       	subi	r28, 0x3E	; 62
    3260:	de 4f       	sbci	r29, 0xFE	; 254
    3262:	88 81       	ld	r24, Y
    3264:	88 23       	and	r24, r24
    3266:	69 f0       	breq	.+26     	; 0x3282 <ATTINY_get_SW_state+0x6c>
    3268:	fd 01       	movw	r30, r26
    326a:	eb 53       	subi	r30, 0x3B	; 59
    326c:	fe 4f       	sbci	r31, 0xFE	; 254
    326e:	80 81       	ld	r24, Z
    3270:	98 23       	and	r25, r24
    3272:	c1 f0       	breq	.+48     	; 0x32a4 <ATTINY_get_SW_state+0x8e>
    3274:	fd 01       	movw	r30, r26
    3276:	e1 5c       	subi	r30, 0xC1	; 193
    3278:	fd 4f       	sbci	r31, 0xFD	; 253
    327a:	81 e0       	ldi	r24, 0x01	; 1
    327c:	80 83       	st	Z, r24
    327e:	18 82       	st	Y, r1
    3280:	11 c0       	rjmp	.+34     	; 0x32a4 <ATTINY_get_SW_state+0x8e>
    3282:	fd 01       	movw	r30, r26
    3284:	e1 5c       	subi	r30, 0xC1	; 193
    3286:	fd 4f       	sbci	r31, 0xFD	; 253
    3288:	80 81       	ld	r24, Z
    328a:	81 11       	cpse	r24, r1
    328c:	10 82       	st	Z, r1
    328e:	fd 01       	movw	r30, r26
    3290:	eb 53       	subi	r30, 0x3B	; 59
    3292:	fe 4f       	sbci	r31, 0xFE	; 254
    3294:	80 81       	ld	r24, Z
    3296:	98 23       	and	r25, r24
    3298:	29 f4       	brne	.+10     	; 0x32a4 <ATTINY_get_SW_state+0x8e>
    329a:	fd 01       	movw	r30, r26
    329c:	ee 53       	subi	r30, 0x3E	; 62
    329e:	fe 4f       	sbci	r31, 0xFE	; 254
    32a0:	81 e0       	ldi	r24, 0x01	; 1
    32a2:	80 83       	st	Z, r24
    32a4:	a1 5c       	subi	r26, 0xC1	; 193
    32a6:	bd 4f       	sbci	r27, 0xFD	; 253
    32a8:	8c 91       	ld	r24, X
    32aa:	df 91       	pop	r29
    32ac:	cf 91       	pop	r28
    32ae:	1f 91       	pop	r17
    32b0:	08 95       	ret

000032b2 <ATTINY_open>:
    32b2:	82 e0       	ldi	r24, 0x02	; 2
    32b4:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    32b8:	88 23       	and	r24, r24
    32ba:	19 f4       	brne	.+6      	; 0x32c2 <ATTINY_open+0x10>
    32bc:	90 e0       	ldi	r25, 0x00	; 0
    32be:	82 e0       	ldi	r24, 0x02	; 2
    32c0:	08 95       	ret
    32c2:	10 92 0a 05 	sts	0x050A, r1
    32c6:	10 92 09 05 	sts	0x0509, r1
    32ca:	10 92 0c 05 	sts	0x050C, r1
    32ce:	10 92 0b 05 	sts	0x050B, r1
    32d2:	10 92 0e 05 	sts	0x050E, r1
    32d6:	10 92 0d 05 	sts	0x050D, r1
    32da:	10 92 10 05 	sts	0x0510, r1
    32de:	10 92 0f 05 	sts	0x050F, r1
    32e2:	10 92 12 05 	sts	0x0512, r1
    32e6:	10 92 11 05 	sts	0x0511, r1
    32ea:	80 e9       	ldi	r24, 0x90	; 144
    32ec:	91 e0       	ldi	r25, 0x01	; 1
    32ee:	90 93 f6 04 	sts	0x04F6, r25
    32f2:	80 93 f5 04 	sts	0x04F5, r24
    32f6:	90 93 f8 04 	sts	0x04F8, r25
    32fa:	80 93 f7 04 	sts	0x04F7, r24
    32fe:	90 93 fa 04 	sts	0x04FA, r25
    3302:	80 93 f9 04 	sts	0x04F9, r24
    3306:	90 93 fc 04 	sts	0x04FC, r25
    330a:	80 93 fb 04 	sts	0x04FB, r24
    330e:	90 93 fe 04 	sts	0x04FE, r25
    3312:	80 93 fd 04 	sts	0x04FD, r24
    3316:	84 e3       	ldi	r24, 0x34	; 52
    3318:	98 e0       	ldi	r25, 0x08	; 8
    331a:	90 93 00 05 	sts	0x0500, r25
    331e:	80 93 ff 04 	sts	0x04FF, r24
    3322:	90 93 02 05 	sts	0x0502, r25
    3326:	80 93 01 05 	sts	0x0501, r24
    332a:	90 93 04 05 	sts	0x0504, r25
    332e:	80 93 03 05 	sts	0x0503, r24
    3332:	90 93 06 05 	sts	0x0506, r25
    3336:	80 93 05 05 	sts	0x0505, r24
    333a:	90 93 08 05 	sts	0x0508, r25
    333e:	80 93 07 05 	sts	0x0507, r24
    3342:	81 e0       	ldi	r24, 0x01	; 1
    3344:	61 e0       	ldi	r22, 0x01	; 1
    3346:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    334a:	91 e0       	ldi	r25, 0x01	; 1
    334c:	81 e0       	ldi	r24, 0x01	; 1
    334e:	08 95       	ret

00003350 <TMRSRVC_delay>:
    3350:	df 93       	push	r29
    3352:	cf 93       	push	r28
    3354:	cd b7       	in	r28, 0x3d	; 61
    3356:	de b7       	in	r29, 0x3e	; 62
    3358:	29 97       	sbiw	r28, 0x09	; 9
    335a:	0f b6       	in	r0, 0x3f	; 63
    335c:	f8 94       	cli
    335e:	de bf       	out	0x3e, r29	; 62
    3360:	0f be       	out	0x3f, r0	; 63
    3362:	cd bf       	out	0x3d, r28	; 61
    3364:	9c 01       	movw	r18, r24
    3366:	ce 01       	movw	r24, r28
    3368:	01 96       	adiw	r24, 0x01	; 1
    336a:	61 e0       	ldi	r22, 0x01	; 1
    336c:	40 e0       	ldi	r20, 0x00	; 0
    336e:	0e 94 c9 19 	call	0x3392	; 0x3392 <TMRSRVC_new>
    3372:	98 2f       	mov	r25, r24
    3374:	88 23       	and	r24, r24
    3376:	19 f4       	brne	.+6      	; 0x337e <TMRSRVC_delay+0x2e>
    3378:	8f 81       	ldd	r24, Y+7	; 0x07
    337a:	88 23       	and	r24, r24
    337c:	e9 f3       	breq	.-6      	; 0x3378 <TMRSRVC_delay+0x28>
    337e:	89 2f       	mov	r24, r25
    3380:	29 96       	adiw	r28, 0x09	; 9
    3382:	0f b6       	in	r0, 0x3f	; 63
    3384:	f8 94       	cli
    3386:	de bf       	out	0x3e, r29	; 62
    3388:	0f be       	out	0x3f, r0	; 63
    338a:	cd bf       	out	0x3d, r28	; 61
    338c:	cf 91       	pop	r28
    338e:	df 91       	pop	r29
    3390:	08 95       	ret

00003392 <TMRSRVC_new>:
    3392:	ef 92       	push	r14
    3394:	ff 92       	push	r15
    3396:	0f 93       	push	r16
    3398:	1f 93       	push	r17
    339a:	cf 93       	push	r28
    339c:	df 93       	push	r29
    339e:	ec 01       	movw	r28, r24
    33a0:	f6 2e       	mov	r15, r22
    33a2:	e4 2e       	mov	r14, r20
    33a4:	89 01       	movw	r16, r18
    33a6:	88 e0       	ldi	r24, 0x08	; 8
    33a8:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    33ac:	81 30       	cpi	r24, 0x01	; 1
    33ae:	11 f0       	breq	.+4      	; 0x33b4 <TMRSRVC_new+0x22>
    33b0:	81 e0       	ldi	r24, 0x01	; 1
    33b2:	26 c0       	rjmp	.+76     	; 0x3400 <TMRSRVC_new+0x6e>
    33b4:	84 e0       	ldi	r24, 0x04	; 4
    33b6:	90 e0       	ldi	r25, 0x00	; 0
    33b8:	0e 94 85 2d 	call	0x5b0a	; 0x5b0a <malloc>
    33bc:	fc 01       	movw	r30, r24
    33be:	00 97       	sbiw	r24, 0x00	; 0
    33c0:	11 f4       	brne	.+4      	; 0x33c6 <TMRSRVC_new+0x34>
    33c2:	82 e0       	ldi	r24, 0x02	; 2
    33c4:	1d c0       	rjmp	.+58     	; 0x3400 <TMRSRVC_new+0x6e>
    33c6:	f9 82       	std	Y+1, r15	; 0x01
    33c8:	f0 fc       	sbrc	r15, 0
    33ca:	1e 82       	std	Y+6, r1	; 0x06
    33cc:	81 e0       	ldi	r24, 0x01	; 1
    33ce:	e8 16       	cp	r14, r24
    33d0:	19 f4       	brne	.+6      	; 0x33d8 <TMRSRVC_new+0x46>
    33d2:	89 81       	ldd	r24, Y+1	; 0x01
    33d4:	84 60       	ori	r24, 0x04	; 4
    33d6:	89 83       	std	Y+1, r24	; 0x01
    33d8:	89 81       	ldd	r24, Y+1	; 0x01
    33da:	88 60       	ori	r24, 0x08	; 8
    33dc:	89 83       	std	Y+1, r24	; 0x01
    33de:	1b 83       	std	Y+3, r17	; 0x03
    33e0:	0a 83       	std	Y+2, r16	; 0x02
    33e2:	1d 83       	std	Y+5, r17	; 0x05
    33e4:	0c 83       	std	Y+4, r16	; 0x04
    33e6:	d1 83       	std	Z+1, r29	; 0x01
    33e8:	c0 83       	st	Z, r28
    33ea:	13 82       	std	Z+3, r1	; 0x03
    33ec:	12 82       	std	Z+2, r1	; 0x02
    33ee:	81 e0       	ldi	r24, 0x01	; 1
    33f0:	80 93 ab 02 	sts	0x02AB, r24
    33f4:	cf 01       	movw	r24, r30
    33f6:	0e 94 79 20 	call	0x40f2	; 0x40f2 <TMRSRVC_insert>
    33fa:	10 92 ab 02 	sts	0x02AB, r1
    33fe:	80 e0       	ldi	r24, 0x00	; 0
    3400:	df 91       	pop	r29
    3402:	cf 91       	pop	r28
    3404:	1f 91       	pop	r17
    3406:	0f 91       	pop	r16
    3408:	ff 90       	pop	r15
    340a:	ef 90       	pop	r14
    340c:	08 95       	ret

0000340e <I2C_MSTR_get>:
    340e:	fc 01       	movw	r30, r24
    3410:	80 91 16 05 	lds	r24, 0x0516
    3414:	81 30       	cpi	r24, 0x01	; 1
    3416:	11 f0       	breq	.+4      	; 0x341c <I2C_MSTR_get+0xe>
    3418:	85 e0       	ldi	r24, 0x05	; 5
    341a:	08 95       	ret
    341c:	80 91 17 05 	lds	r24, 0x0517
    3420:	81 30       	cpi	r24, 0x01	; 1
    3422:	11 f0       	breq	.+4      	; 0x3428 <I2C_MSTR_get+0x1a>
    3424:	8a e0       	ldi	r24, 0x0A	; 10
    3426:	08 95       	ret
    3428:	61 30       	cpi	r22, 0x01	; 1
    342a:	11 f4       	brne	.+4      	; 0x3430 <I2C_MSTR_get+0x22>
    342c:	84 ec       	ldi	r24, 0xC4	; 196
    342e:	01 c0       	rjmp	.+2      	; 0x3432 <I2C_MSTR_get+0x24>
    3430:	84 e8       	ldi	r24, 0x84	; 132
    3432:	80 93 bc 00 	sts	0x00BC, r24
    3436:	80 91 bc 00 	lds	r24, 0x00BC
    343a:	87 ff       	sbrs	r24, 7
    343c:	fc cf       	rjmp	.-8      	; 0x3436 <I2C_MSTR_get+0x28>
    343e:	61 30       	cpi	r22, 0x01	; 1
    3440:	31 f4       	brne	.+12     	; 0x344e <I2C_MSTR_get+0x40>
    3442:	80 91 b9 00 	lds	r24, 0x00B9
    3446:	88 7f       	andi	r24, 0xF8	; 248
    3448:	80 35       	cpi	r24, 0x50	; 80
    344a:	59 f4       	brne	.+22     	; 0x3462 <I2C_MSTR_get+0x54>
    344c:	05 c0       	rjmp	.+10     	; 0x3458 <I2C_MSTR_get+0x4a>
    344e:	80 91 b9 00 	lds	r24, 0x00B9
    3452:	88 7f       	andi	r24, 0xF8	; 248
    3454:	88 35       	cpi	r24, 0x58	; 88
    3456:	29 f4       	brne	.+10     	; 0x3462 <I2C_MSTR_get+0x54>
    3458:	80 91 bb 00 	lds	r24, 0x00BB
    345c:	80 83       	st	Z, r24
    345e:	80 e0       	ldi	r24, 0x00	; 0
    3460:	08 95       	ret
    3462:	82 e0       	ldi	r24, 0x02	; 2
    3464:	08 95       	ret

00003466 <I2C_MSTR_send>:
    3466:	98 2f       	mov	r25, r24
    3468:	80 91 16 05 	lds	r24, 0x0516
    346c:	81 30       	cpi	r24, 0x01	; 1
    346e:	11 f0       	breq	.+4      	; 0x3474 <I2C_MSTR_send+0xe>
    3470:	85 e0       	ldi	r24, 0x05	; 5
    3472:	08 95       	ret
    3474:	80 91 17 05 	lds	r24, 0x0517
    3478:	81 30       	cpi	r24, 0x01	; 1
    347a:	11 f0       	breq	.+4      	; 0x3480 <I2C_MSTR_send+0x1a>
    347c:	8a e0       	ldi	r24, 0x0A	; 10
    347e:	08 95       	ret
    3480:	90 93 bb 00 	sts	0x00BB, r25
    3484:	84 e8       	ldi	r24, 0x84	; 132
    3486:	80 93 bc 00 	sts	0x00BC, r24
    348a:	80 91 bc 00 	lds	r24, 0x00BC
    348e:	87 ff       	sbrs	r24, 7
    3490:	fc cf       	rjmp	.-8      	; 0x348a <I2C_MSTR_send+0x24>
    3492:	80 91 b9 00 	lds	r24, 0x00B9
    3496:	90 e0       	ldi	r25, 0x00	; 0
    3498:	88 7f       	andi	r24, 0xF8	; 248
    349a:	90 70       	andi	r25, 0x00	; 0
    349c:	88 32       	cpi	r24, 0x28	; 40
    349e:	91 05       	cpc	r25, r1
    34a0:	21 f0       	breq	.+8      	; 0x34aa <I2C_MSTR_send+0x44>
    34a2:	c0 97       	sbiw	r24, 0x30	; 48
    34a4:	21 f4       	brne	.+8      	; 0x34ae <I2C_MSTR_send+0x48>
    34a6:	83 e0       	ldi	r24, 0x03	; 3
    34a8:	08 95       	ret
    34aa:	80 e0       	ldi	r24, 0x00	; 0
    34ac:	08 95       	ret
    34ae:	8c e0       	ldi	r24, 0x0C	; 12
    34b0:	08 95       	ret

000034b2 <I2C_MSTR_start>:
    34b2:	98 2f       	mov	r25, r24
    34b4:	20 91 16 05 	lds	r18, 0x0516
    34b8:	21 30       	cpi	r18, 0x01	; 1
    34ba:	11 f0       	breq	.+4      	; 0x34c0 <I2C_MSTR_start+0xe>
    34bc:	85 e0       	ldi	r24, 0x05	; 5
    34be:	08 95       	ret
    34c0:	80 91 18 05 	lds	r24, 0x0518
    34c4:	81 30       	cpi	r24, 0x01	; 1
    34c6:	11 f4       	brne	.+4      	; 0x34cc <I2C_MSTR_start+0x1a>
    34c8:	89 e0       	ldi	r24, 0x09	; 9
    34ca:	08 95       	ret
    34cc:	20 93 17 05 	sts	0x0517, r18
    34d0:	84 ea       	ldi	r24, 0xA4	; 164
    34d2:	80 93 bc 00 	sts	0x00BC, r24
    34d6:	80 91 bc 00 	lds	r24, 0x00BC
    34da:	87 ff       	sbrs	r24, 7
    34dc:	fc cf       	rjmp	.-8      	; 0x34d6 <I2C_MSTR_start+0x24>
    34de:	80 91 b9 00 	lds	r24, 0x00B9
    34e2:	88 7f       	andi	r24, 0xF8	; 248
    34e4:	88 30       	cpi	r24, 0x08	; 8
    34e6:	39 f0       	breq	.+14     	; 0x34f6 <I2C_MSTR_start+0x44>
    34e8:	80 91 b9 00 	lds	r24, 0x00B9
    34ec:	88 7f       	andi	r24, 0xF8	; 248
    34ee:	80 31       	cpi	r24, 0x10	; 16
    34f0:	11 f0       	breq	.+4      	; 0x34f6 <I2C_MSTR_start+0x44>
    34f2:	81 e0       	ldi	r24, 0x01	; 1
    34f4:	08 95       	ret
    34f6:	61 30       	cpi	r22, 0x01	; 1
    34f8:	19 f4       	brne	.+6      	; 0x3500 <I2C_MSTR_start+0x4e>
    34fa:	99 0f       	add	r25, r25
    34fc:	91 60       	ori	r25, 0x01	; 1
    34fe:	03 c0       	rjmp	.+6      	; 0x3506 <I2C_MSTR_start+0x54>
    3500:	66 23       	and	r22, r22
    3502:	19 f4       	brne	.+6      	; 0x350a <I2C_MSTR_start+0x58>
    3504:	99 0f       	add	r25, r25
    3506:	90 93 bb 00 	sts	0x00BB, r25
    350a:	84 e8       	ldi	r24, 0x84	; 132
    350c:	80 93 bc 00 	sts	0x00BC, r24
    3510:	80 91 bc 00 	lds	r24, 0x00BC
    3514:	87 ff       	sbrs	r24, 7
    3516:	fc cf       	rjmp	.-8      	; 0x3510 <I2C_MSTR_start+0x5e>
    3518:	61 30       	cpi	r22, 0x01	; 1
    351a:	31 f4       	brne	.+12     	; 0x3528 <I2C_MSTR_start+0x76>
    351c:	80 91 b9 00 	lds	r24, 0x00B9
    3520:	88 7f       	andi	r24, 0xF8	; 248
    3522:	80 34       	cpi	r24, 0x40	; 64
    3524:	41 f4       	brne	.+16     	; 0x3536 <I2C_MSTR_start+0x84>
    3526:	09 c0       	rjmp	.+18     	; 0x353a <I2C_MSTR_start+0x88>
    3528:	66 23       	and	r22, r22
    352a:	39 f4       	brne	.+14     	; 0x353a <I2C_MSTR_start+0x88>
    352c:	80 91 b9 00 	lds	r24, 0x00B9
    3530:	88 7f       	andi	r24, 0xF8	; 248
    3532:	88 31       	cpi	r24, 0x18	; 24
    3534:	11 f0       	breq	.+4      	; 0x353a <I2C_MSTR_start+0x88>
    3536:	82 e0       	ldi	r24, 0x02	; 2
    3538:	08 95       	ret
    353a:	80 e0       	ldi	r24, 0x00	; 0
    353c:	08 95       	ret

0000353e <I2C_MSTR_stop>:
    353e:	80 91 17 05 	lds	r24, 0x0517
    3542:	81 30       	cpi	r24, 0x01	; 1
    3544:	11 f0       	breq	.+4      	; 0x354a <I2C_MSTR_stop+0xc>
    3546:	8a e0       	ldi	r24, 0x0A	; 10
    3548:	08 95       	ret
    354a:	80 91 19 05 	lds	r24, 0x0519
    354e:	81 30       	cpi	r24, 0x01	; 1
    3550:	29 f4       	brne	.+10     	; 0x355c <I2C_MSTR_stop+0x1e>
    3552:	85 e9       	ldi	r24, 0x95	; 149
    3554:	80 93 bc 00 	sts	0x00BC, r24
    3558:	80 e0       	ldi	r24, 0x00	; 0
    355a:	08 95       	ret
    355c:	84 e9       	ldi	r24, 0x94	; 148
    355e:	80 93 bc 00 	sts	0x00BC, r24
    3562:	80 e0       	ldi	r24, 0x00	; 0
    3564:	08 95       	ret

00003566 <I2C_open>:
    3566:	82 e1       	ldi	r24, 0x12	; 18
    3568:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    356c:	88 23       	and	r24, r24
    356e:	b1 f4       	brne	.+44     	; 0x359c <I2C_open+0x36>
    3570:	10 92 16 05 	sts	0x0516, r1
    3574:	10 92 17 05 	sts	0x0517, r1
    3578:	10 92 18 05 	sts	0x0518, r1
    357c:	10 92 19 05 	sts	0x0519, r1
    3580:	10 92 1a 05 	sts	0x051A, r1
    3584:	0e 94 15 21 	call	0x422a	; 0x422a <__I2C_init>
    3588:	87 e1       	ldi	r24, 0x17	; 23
    358a:	60 e0       	ldi	r22, 0x00	; 0
    358c:	0e 94 d1 1a 	call	0x35a2	; 0x35a2 <I2C_set_BRG>
    3590:	0e 94 0b 21 	call	0x4216	; 0x4216 <I2C_enable>
    3594:	82 e1       	ldi	r24, 0x12	; 18
    3596:	61 e0       	ldi	r22, 0x01	; 1
    3598:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    359c:	82 e1       	ldi	r24, 0x12	; 18
    359e:	90 e0       	ldi	r25, 0x00	; 0
    35a0:	08 95       	ret

000035a2 <I2C_set_BRG>:
    35a2:	63 70       	andi	r22, 0x03	; 3
    35a4:	60 93 b9 00 	sts	0x00B9, r22
    35a8:	80 93 b8 00 	sts	0x00B8, r24
    35ac:	81 e0       	ldi	r24, 0x01	; 1
    35ae:	80 93 16 05 	sts	0x0516, r24
    35b2:	08 95       	ret

000035b4 <__ADC_init>:
    35b4:	8f e1       	ldi	r24, 0x1F	; 31
    35b6:	80 93 7c 00 	sts	0x007C, r24
    35ba:	ea e7       	ldi	r30, 0x7A	; 122
    35bc:	f0 e0       	ldi	r31, 0x00	; 0
    35be:	87 e0       	ldi	r24, 0x07	; 7
    35c0:	80 83       	st	Z, r24
    35c2:	80 81       	ld	r24, Z
    35c4:	80 68       	ori	r24, 0x80	; 128
    35c6:	80 83       	st	Z, r24
    35c8:	08 95       	ret

000035ca <CBOT_init>:
    35ca:	0e 94 56 20 	call	0x40ac	; 0x40ac <SYS_init>
    35ce:	0e 94 17 1e 	call	0x3c2e	; 0x3c2e <ATMEGA_open>
    35d2:	0e 94 47 1d 	call	0x3a8e	; 0x3a8e <ISR_open>
    35d6:	0e 94 e2 20 	call	0x41c4	; 0x41c4 <TMRSRVC_open>
    35da:	0e 94 7c 1e 	call	0x3cf8	; 0x3cf8 <SPI_open>
    35de:	0e 94 59 19 	call	0x32b2	; 0x32b2 <ATTINY_open>
    35e2:	78 94       	sei
    35e4:	08 95       	ret

000035e6 <CBOT_ISR_init>:
    35e6:	00 00       	nop
    35e8:	08 95       	ret

000035ea <__vector_16>:
    35ea:	1f 92       	push	r1
    35ec:	0f 92       	push	r0
    35ee:	0f b6       	in	r0, 0x3f	; 63
    35f0:	0f 92       	push	r0
    35f2:	11 24       	eor	r1, r1
    35f4:	2f 93       	push	r18
    35f6:	3f 93       	push	r19
    35f8:	4f 93       	push	r20
    35fa:	5f 93       	push	r21
    35fc:	6f 93       	push	r22
    35fe:	7f 93       	push	r23
    3600:	8f 93       	push	r24
    3602:	9f 93       	push	r25
    3604:	af 93       	push	r26
    3606:	bf 93       	push	r27
    3608:	ef 93       	push	r30
    360a:	ff 93       	push	r31
    360c:	e0 91 6b 02 	lds	r30, 0x026B
    3610:	f0 91 6c 02 	lds	r31, 0x026C
    3614:	30 97       	sbiw	r30, 0x00	; 0
    3616:	09 f0       	breq	.+2      	; 0x361a <__vector_16+0x30>
    3618:	09 95       	icall
    361a:	ff 91       	pop	r31
    361c:	ef 91       	pop	r30
    361e:	bf 91       	pop	r27
    3620:	af 91       	pop	r26
    3622:	9f 91       	pop	r25
    3624:	8f 91       	pop	r24
    3626:	7f 91       	pop	r23
    3628:	6f 91       	pop	r22
    362a:	5f 91       	pop	r21
    362c:	4f 91       	pop	r20
    362e:	3f 91       	pop	r19
    3630:	2f 91       	pop	r18
    3632:	0f 90       	pop	r0
    3634:	0f be       	out	0x3f, r0	; 63
    3636:	0f 90       	pop	r0
    3638:	1f 90       	pop	r1
    363a:	18 95       	reti

0000363c <__vector_17>:
    363c:	1f 92       	push	r1
    363e:	0f 92       	push	r0
    3640:	0f b6       	in	r0, 0x3f	; 63
    3642:	0f 92       	push	r0
    3644:	11 24       	eor	r1, r1
    3646:	2f 93       	push	r18
    3648:	3f 93       	push	r19
    364a:	4f 93       	push	r20
    364c:	5f 93       	push	r21
    364e:	6f 93       	push	r22
    3650:	7f 93       	push	r23
    3652:	8f 93       	push	r24
    3654:	9f 93       	push	r25
    3656:	af 93       	push	r26
    3658:	bf 93       	push	r27
    365a:	ef 93       	push	r30
    365c:	ff 93       	push	r31
    365e:	e0 91 6d 02 	lds	r30, 0x026D
    3662:	f0 91 6e 02 	lds	r31, 0x026E
    3666:	30 97       	sbiw	r30, 0x00	; 0
    3668:	09 f0       	breq	.+2      	; 0x366c <__vector_17+0x30>
    366a:	09 95       	icall
    366c:	ff 91       	pop	r31
    366e:	ef 91       	pop	r30
    3670:	bf 91       	pop	r27
    3672:	af 91       	pop	r26
    3674:	9f 91       	pop	r25
    3676:	8f 91       	pop	r24
    3678:	7f 91       	pop	r23
    367a:	6f 91       	pop	r22
    367c:	5f 91       	pop	r21
    367e:	4f 91       	pop	r20
    3680:	3f 91       	pop	r19
    3682:	2f 91       	pop	r18
    3684:	0f 90       	pop	r0
    3686:	0f be       	out	0x3f, r0	; 63
    3688:	0f 90       	pop	r0
    368a:	1f 90       	pop	r1
    368c:	18 95       	reti

0000368e <__vector_18>:
    368e:	1f 92       	push	r1
    3690:	0f 92       	push	r0
    3692:	0f b6       	in	r0, 0x3f	; 63
    3694:	0f 92       	push	r0
    3696:	11 24       	eor	r1, r1
    3698:	2f 93       	push	r18
    369a:	3f 93       	push	r19
    369c:	4f 93       	push	r20
    369e:	5f 93       	push	r21
    36a0:	6f 93       	push	r22
    36a2:	7f 93       	push	r23
    36a4:	8f 93       	push	r24
    36a6:	9f 93       	push	r25
    36a8:	af 93       	push	r26
    36aa:	bf 93       	push	r27
    36ac:	ef 93       	push	r30
    36ae:	ff 93       	push	r31
    36b0:	e0 91 6f 02 	lds	r30, 0x026F
    36b4:	f0 91 70 02 	lds	r31, 0x0270
    36b8:	30 97       	sbiw	r30, 0x00	; 0
    36ba:	09 f0       	breq	.+2      	; 0x36be <__vector_18+0x30>
    36bc:	09 95       	icall
    36be:	ff 91       	pop	r31
    36c0:	ef 91       	pop	r30
    36c2:	bf 91       	pop	r27
    36c4:	af 91       	pop	r26
    36c6:	9f 91       	pop	r25
    36c8:	8f 91       	pop	r24
    36ca:	7f 91       	pop	r23
    36cc:	6f 91       	pop	r22
    36ce:	5f 91       	pop	r21
    36d0:	4f 91       	pop	r20
    36d2:	3f 91       	pop	r19
    36d4:	2f 91       	pop	r18
    36d6:	0f 90       	pop	r0
    36d8:	0f be       	out	0x3f, r0	; 63
    36da:	0f 90       	pop	r0
    36dc:	1f 90       	pop	r1
    36de:	18 95       	reti

000036e0 <__vector_9>:
    36e0:	1f 92       	push	r1
    36e2:	0f 92       	push	r0
    36e4:	0f b6       	in	r0, 0x3f	; 63
    36e6:	0f 92       	push	r0
    36e8:	11 24       	eor	r1, r1
    36ea:	2f 93       	push	r18
    36ec:	3f 93       	push	r19
    36ee:	4f 93       	push	r20
    36f0:	5f 93       	push	r21
    36f2:	6f 93       	push	r22
    36f4:	7f 93       	push	r23
    36f6:	8f 93       	push	r24
    36f8:	9f 93       	push	r25
    36fa:	af 93       	push	r26
    36fc:	bf 93       	push	r27
    36fe:	ef 93       	push	r30
    3700:	ff 93       	push	r31
    3702:	e0 91 5d 02 	lds	r30, 0x025D
    3706:	f0 91 5e 02 	lds	r31, 0x025E
    370a:	30 97       	sbiw	r30, 0x00	; 0
    370c:	09 f0       	breq	.+2      	; 0x3710 <__vector_9+0x30>
    370e:	09 95       	icall
    3710:	ff 91       	pop	r31
    3712:	ef 91       	pop	r30
    3714:	bf 91       	pop	r27
    3716:	af 91       	pop	r26
    3718:	9f 91       	pop	r25
    371a:	8f 91       	pop	r24
    371c:	7f 91       	pop	r23
    371e:	6f 91       	pop	r22
    3720:	5f 91       	pop	r21
    3722:	4f 91       	pop	r20
    3724:	3f 91       	pop	r19
    3726:	2f 91       	pop	r18
    3728:	0f 90       	pop	r0
    372a:	0f be       	out	0x3f, r0	; 63
    372c:	0f 90       	pop	r0
    372e:	1f 90       	pop	r1
    3730:	18 95       	reti

00003732 <__vector_10>:
    3732:	1f 92       	push	r1
    3734:	0f 92       	push	r0
    3736:	0f b6       	in	r0, 0x3f	; 63
    3738:	0f 92       	push	r0
    373a:	11 24       	eor	r1, r1
    373c:	2f 93       	push	r18
    373e:	3f 93       	push	r19
    3740:	4f 93       	push	r20
    3742:	5f 93       	push	r21
    3744:	6f 93       	push	r22
    3746:	7f 93       	push	r23
    3748:	8f 93       	push	r24
    374a:	9f 93       	push	r25
    374c:	af 93       	push	r26
    374e:	bf 93       	push	r27
    3750:	ef 93       	push	r30
    3752:	ff 93       	push	r31
    3754:	e0 91 5f 02 	lds	r30, 0x025F
    3758:	f0 91 60 02 	lds	r31, 0x0260
    375c:	30 97       	sbiw	r30, 0x00	; 0
    375e:	09 f0       	breq	.+2      	; 0x3762 <__vector_10+0x30>
    3760:	09 95       	icall
    3762:	ff 91       	pop	r31
    3764:	ef 91       	pop	r30
    3766:	bf 91       	pop	r27
    3768:	af 91       	pop	r26
    376a:	9f 91       	pop	r25
    376c:	8f 91       	pop	r24
    376e:	7f 91       	pop	r23
    3770:	6f 91       	pop	r22
    3772:	5f 91       	pop	r21
    3774:	4f 91       	pop	r20
    3776:	3f 91       	pop	r19
    3778:	2f 91       	pop	r18
    377a:	0f 90       	pop	r0
    377c:	0f be       	out	0x3f, r0	; 63
    377e:	0f 90       	pop	r0
    3780:	1f 90       	pop	r1
    3782:	18 95       	reti

00003784 <__vector_11>:
    3784:	1f 92       	push	r1
    3786:	0f 92       	push	r0
    3788:	0f b6       	in	r0, 0x3f	; 63
    378a:	0f 92       	push	r0
    378c:	11 24       	eor	r1, r1
    378e:	2f 93       	push	r18
    3790:	3f 93       	push	r19
    3792:	4f 93       	push	r20
    3794:	5f 93       	push	r21
    3796:	6f 93       	push	r22
    3798:	7f 93       	push	r23
    379a:	8f 93       	push	r24
    379c:	9f 93       	push	r25
    379e:	af 93       	push	r26
    37a0:	bf 93       	push	r27
    37a2:	ef 93       	push	r30
    37a4:	ff 93       	push	r31
    37a6:	e0 91 61 02 	lds	r30, 0x0261
    37aa:	f0 91 62 02 	lds	r31, 0x0262
    37ae:	30 97       	sbiw	r30, 0x00	; 0
    37b0:	09 f0       	breq	.+2      	; 0x37b4 <__vector_11+0x30>
    37b2:	09 95       	icall
    37b4:	ff 91       	pop	r31
    37b6:	ef 91       	pop	r30
    37b8:	bf 91       	pop	r27
    37ba:	af 91       	pop	r26
    37bc:	9f 91       	pop	r25
    37be:	8f 91       	pop	r24
    37c0:	7f 91       	pop	r23
    37c2:	6f 91       	pop	r22
    37c4:	5f 91       	pop	r21
    37c6:	4f 91       	pop	r20
    37c8:	3f 91       	pop	r19
    37ca:	2f 91       	pop	r18
    37cc:	0f 90       	pop	r0
    37ce:	0f be       	out	0x3f, r0	; 63
    37d0:	0f 90       	pop	r0
    37d2:	1f 90       	pop	r1
    37d4:	18 95       	reti

000037d6 <__vector_13>:
    37d6:	1f 92       	push	r1
    37d8:	0f 92       	push	r0
    37da:	0f b6       	in	r0, 0x3f	; 63
    37dc:	0f 92       	push	r0
    37de:	11 24       	eor	r1, r1
    37e0:	2f 93       	push	r18
    37e2:	3f 93       	push	r19
    37e4:	4f 93       	push	r20
    37e6:	5f 93       	push	r21
    37e8:	6f 93       	push	r22
    37ea:	7f 93       	push	r23
    37ec:	8f 93       	push	r24
    37ee:	9f 93       	push	r25
    37f0:	af 93       	push	r26
    37f2:	bf 93       	push	r27
    37f4:	ef 93       	push	r30
    37f6:	ff 93       	push	r31
    37f8:	e0 91 65 02 	lds	r30, 0x0265
    37fc:	f0 91 66 02 	lds	r31, 0x0266
    3800:	30 97       	sbiw	r30, 0x00	; 0
    3802:	09 f0       	breq	.+2      	; 0x3806 <__vector_13+0x30>
    3804:	09 95       	icall
    3806:	ff 91       	pop	r31
    3808:	ef 91       	pop	r30
    380a:	bf 91       	pop	r27
    380c:	af 91       	pop	r26
    380e:	9f 91       	pop	r25
    3810:	8f 91       	pop	r24
    3812:	7f 91       	pop	r23
    3814:	6f 91       	pop	r22
    3816:	5f 91       	pop	r21
    3818:	4f 91       	pop	r20
    381a:	3f 91       	pop	r19
    381c:	2f 91       	pop	r18
    381e:	0f 90       	pop	r0
    3820:	0f be       	out	0x3f, r0	; 63
    3822:	0f 90       	pop	r0
    3824:	1f 90       	pop	r1
    3826:	18 95       	reti

00003828 <__vector_14>:
    3828:	1f 92       	push	r1
    382a:	0f 92       	push	r0
    382c:	0f b6       	in	r0, 0x3f	; 63
    382e:	0f 92       	push	r0
    3830:	11 24       	eor	r1, r1
    3832:	2f 93       	push	r18
    3834:	3f 93       	push	r19
    3836:	4f 93       	push	r20
    3838:	5f 93       	push	r21
    383a:	6f 93       	push	r22
    383c:	7f 93       	push	r23
    383e:	8f 93       	push	r24
    3840:	9f 93       	push	r25
    3842:	af 93       	push	r26
    3844:	bf 93       	push	r27
    3846:	ef 93       	push	r30
    3848:	ff 93       	push	r31
    384a:	e0 91 67 02 	lds	r30, 0x0267
    384e:	f0 91 68 02 	lds	r31, 0x0268
    3852:	30 97       	sbiw	r30, 0x00	; 0
    3854:	09 f0       	breq	.+2      	; 0x3858 <__vector_14+0x30>
    3856:	09 95       	icall
    3858:	ff 91       	pop	r31
    385a:	ef 91       	pop	r30
    385c:	bf 91       	pop	r27
    385e:	af 91       	pop	r26
    3860:	9f 91       	pop	r25
    3862:	8f 91       	pop	r24
    3864:	7f 91       	pop	r23
    3866:	6f 91       	pop	r22
    3868:	5f 91       	pop	r21
    386a:	4f 91       	pop	r20
    386c:	3f 91       	pop	r19
    386e:	2f 91       	pop	r18
    3870:	0f 90       	pop	r0
    3872:	0f be       	out	0x3f, r0	; 63
    3874:	0f 90       	pop	r0
    3876:	1f 90       	pop	r1
    3878:	18 95       	reti

0000387a <__vector_12>:
    387a:	1f 92       	push	r1
    387c:	0f 92       	push	r0
    387e:	0f b6       	in	r0, 0x3f	; 63
    3880:	0f 92       	push	r0
    3882:	11 24       	eor	r1, r1
    3884:	2f 93       	push	r18
    3886:	3f 93       	push	r19
    3888:	4f 93       	push	r20
    388a:	5f 93       	push	r21
    388c:	6f 93       	push	r22
    388e:	7f 93       	push	r23
    3890:	8f 93       	push	r24
    3892:	9f 93       	push	r25
    3894:	af 93       	push	r26
    3896:	bf 93       	push	r27
    3898:	ef 93       	push	r30
    389a:	ff 93       	push	r31
    389c:	e0 91 63 02 	lds	r30, 0x0263
    38a0:	f0 91 64 02 	lds	r31, 0x0264
    38a4:	30 97       	sbiw	r30, 0x00	; 0
    38a6:	09 f0       	breq	.+2      	; 0x38aa <__vector_12+0x30>
    38a8:	09 95       	icall
    38aa:	ff 91       	pop	r31
    38ac:	ef 91       	pop	r30
    38ae:	bf 91       	pop	r27
    38b0:	af 91       	pop	r26
    38b2:	9f 91       	pop	r25
    38b4:	8f 91       	pop	r24
    38b6:	7f 91       	pop	r23
    38b8:	6f 91       	pop	r22
    38ba:	5f 91       	pop	r21
    38bc:	4f 91       	pop	r20
    38be:	3f 91       	pop	r19
    38c0:	2f 91       	pop	r18
    38c2:	0f 90       	pop	r0
    38c4:	0f be       	out	0x3f, r0	; 63
    38c6:	0f 90       	pop	r0
    38c8:	1f 90       	pop	r1
    38ca:	18 95       	reti

000038cc <__vector_15>:
    38cc:	1f 92       	push	r1
    38ce:	0f 92       	push	r0
    38d0:	0f b6       	in	r0, 0x3f	; 63
    38d2:	0f 92       	push	r0
    38d4:	11 24       	eor	r1, r1
    38d6:	2f 93       	push	r18
    38d8:	3f 93       	push	r19
    38da:	4f 93       	push	r20
    38dc:	5f 93       	push	r21
    38de:	6f 93       	push	r22
    38e0:	7f 93       	push	r23
    38e2:	8f 93       	push	r24
    38e4:	9f 93       	push	r25
    38e6:	af 93       	push	r26
    38e8:	bf 93       	push	r27
    38ea:	ef 93       	push	r30
    38ec:	ff 93       	push	r31
    38ee:	e0 91 69 02 	lds	r30, 0x0269
    38f2:	f0 91 6a 02 	lds	r31, 0x026A
    38f6:	30 97       	sbiw	r30, 0x00	; 0
    38f8:	09 f0       	breq	.+2      	; 0x38fc <__vector_15+0x30>
    38fa:	09 95       	icall
    38fc:	ff 91       	pop	r31
    38fe:	ef 91       	pop	r30
    3900:	bf 91       	pop	r27
    3902:	af 91       	pop	r26
    3904:	9f 91       	pop	r25
    3906:	8f 91       	pop	r24
    3908:	7f 91       	pop	r23
    390a:	6f 91       	pop	r22
    390c:	5f 91       	pop	r21
    390e:	4f 91       	pop	r20
    3910:	3f 91       	pop	r19
    3912:	2f 91       	pop	r18
    3914:	0f 90       	pop	r0
    3916:	0f be       	out	0x3f, r0	; 63
    3918:	0f 90       	pop	r0
    391a:	1f 90       	pop	r1
    391c:	18 95       	reti

0000391e <__vector_4>:
    391e:	1f 92       	push	r1
    3920:	0f 92       	push	r0
    3922:	0f b6       	in	r0, 0x3f	; 63
    3924:	0f 92       	push	r0
    3926:	11 24       	eor	r1, r1
    3928:	2f 93       	push	r18
    392a:	3f 93       	push	r19
    392c:	4f 93       	push	r20
    392e:	5f 93       	push	r21
    3930:	6f 93       	push	r22
    3932:	7f 93       	push	r23
    3934:	8f 93       	push	r24
    3936:	9f 93       	push	r25
    3938:	af 93       	push	r26
    393a:	bf 93       	push	r27
    393c:	ef 93       	push	r30
    393e:	ff 93       	push	r31
    3940:	e0 91 53 02 	lds	r30, 0x0253
    3944:	f0 91 54 02 	lds	r31, 0x0254
    3948:	30 97       	sbiw	r30, 0x00	; 0
    394a:	09 f0       	breq	.+2      	; 0x394e <__vector_4+0x30>
    394c:	09 95       	icall
    394e:	ff 91       	pop	r31
    3950:	ef 91       	pop	r30
    3952:	bf 91       	pop	r27
    3954:	af 91       	pop	r26
    3956:	9f 91       	pop	r25
    3958:	8f 91       	pop	r24
    395a:	7f 91       	pop	r23
    395c:	6f 91       	pop	r22
    395e:	5f 91       	pop	r21
    3960:	4f 91       	pop	r20
    3962:	3f 91       	pop	r19
    3964:	2f 91       	pop	r18
    3966:	0f 90       	pop	r0
    3968:	0f be       	out	0x3f, r0	; 63
    396a:	0f 90       	pop	r0
    396c:	1f 90       	pop	r1
    396e:	18 95       	reti

00003970 <__vector_5>:
    3970:	1f 92       	push	r1
    3972:	0f 92       	push	r0
    3974:	0f b6       	in	r0, 0x3f	; 63
    3976:	0f 92       	push	r0
    3978:	11 24       	eor	r1, r1
    397a:	2f 93       	push	r18
    397c:	3f 93       	push	r19
    397e:	4f 93       	push	r20
    3980:	5f 93       	push	r21
    3982:	6f 93       	push	r22
    3984:	7f 93       	push	r23
    3986:	8f 93       	push	r24
    3988:	9f 93       	push	r25
    398a:	af 93       	push	r26
    398c:	bf 93       	push	r27
    398e:	ef 93       	push	r30
    3990:	ff 93       	push	r31
    3992:	e0 91 55 02 	lds	r30, 0x0255
    3996:	f0 91 56 02 	lds	r31, 0x0256
    399a:	30 97       	sbiw	r30, 0x00	; 0
    399c:	09 f0       	breq	.+2      	; 0x39a0 <__vector_5+0x30>
    399e:	09 95       	icall
    39a0:	ff 91       	pop	r31
    39a2:	ef 91       	pop	r30
    39a4:	bf 91       	pop	r27
    39a6:	af 91       	pop	r26
    39a8:	9f 91       	pop	r25
    39aa:	8f 91       	pop	r24
    39ac:	7f 91       	pop	r23
    39ae:	6f 91       	pop	r22
    39b0:	5f 91       	pop	r21
    39b2:	4f 91       	pop	r20
    39b4:	3f 91       	pop	r19
    39b6:	2f 91       	pop	r18
    39b8:	0f 90       	pop	r0
    39ba:	0f be       	out	0x3f, r0	; 63
    39bc:	0f 90       	pop	r0
    39be:	1f 90       	pop	r1
    39c0:	18 95       	reti

000039c2 <__vector_6>:
    39c2:	1f 92       	push	r1
    39c4:	0f 92       	push	r0
    39c6:	0f b6       	in	r0, 0x3f	; 63
    39c8:	0f 92       	push	r0
    39ca:	11 24       	eor	r1, r1
    39cc:	2f 93       	push	r18
    39ce:	3f 93       	push	r19
    39d0:	4f 93       	push	r20
    39d2:	5f 93       	push	r21
    39d4:	6f 93       	push	r22
    39d6:	7f 93       	push	r23
    39d8:	8f 93       	push	r24
    39da:	9f 93       	push	r25
    39dc:	af 93       	push	r26
    39de:	bf 93       	push	r27
    39e0:	ef 93       	push	r30
    39e2:	ff 93       	push	r31
    39e4:	e0 91 57 02 	lds	r30, 0x0257
    39e8:	f0 91 58 02 	lds	r31, 0x0258
    39ec:	30 97       	sbiw	r30, 0x00	; 0
    39ee:	09 f0       	breq	.+2      	; 0x39f2 <__vector_6+0x30>
    39f0:	09 95       	icall
    39f2:	ff 91       	pop	r31
    39f4:	ef 91       	pop	r30
    39f6:	bf 91       	pop	r27
    39f8:	af 91       	pop	r26
    39fa:	9f 91       	pop	r25
    39fc:	8f 91       	pop	r24
    39fe:	7f 91       	pop	r23
    3a00:	6f 91       	pop	r22
    3a02:	5f 91       	pop	r21
    3a04:	4f 91       	pop	r20
    3a06:	3f 91       	pop	r19
    3a08:	2f 91       	pop	r18
    3a0a:	0f 90       	pop	r0
    3a0c:	0f be       	out	0x3f, r0	; 63
    3a0e:	0f 90       	pop	r0
    3a10:	1f 90       	pop	r1
    3a12:	18 95       	reti

00003a14 <__vector_7>:
    3a14:	1f 92       	push	r1
    3a16:	0f 92       	push	r0
    3a18:	0f b6       	in	r0, 0x3f	; 63
    3a1a:	0f 92       	push	r0
    3a1c:	11 24       	eor	r1, r1
    3a1e:	2f 93       	push	r18
    3a20:	3f 93       	push	r19
    3a22:	4f 93       	push	r20
    3a24:	5f 93       	push	r21
    3a26:	6f 93       	push	r22
    3a28:	7f 93       	push	r23
    3a2a:	8f 93       	push	r24
    3a2c:	9f 93       	push	r25
    3a2e:	af 93       	push	r26
    3a30:	bf 93       	push	r27
    3a32:	ef 93       	push	r30
    3a34:	ff 93       	push	r31
    3a36:	e0 91 59 02 	lds	r30, 0x0259
    3a3a:	f0 91 5a 02 	lds	r31, 0x025A
    3a3e:	30 97       	sbiw	r30, 0x00	; 0
    3a40:	09 f0       	breq	.+2      	; 0x3a44 <__vector_7+0x30>
    3a42:	09 95       	icall
    3a44:	ff 91       	pop	r31
    3a46:	ef 91       	pop	r30
    3a48:	bf 91       	pop	r27
    3a4a:	af 91       	pop	r26
    3a4c:	9f 91       	pop	r25
    3a4e:	8f 91       	pop	r24
    3a50:	7f 91       	pop	r23
    3a52:	6f 91       	pop	r22
    3a54:	5f 91       	pop	r21
    3a56:	4f 91       	pop	r20
    3a58:	3f 91       	pop	r19
    3a5a:	2f 91       	pop	r18
    3a5c:	0f 90       	pop	r0
    3a5e:	0f be       	out	0x3f, r0	; 63
    3a60:	0f 90       	pop	r0
    3a62:	1f 90       	pop	r1
    3a64:	18 95       	reti

00003a66 <ISR_attach>:
    3a66:	e8 2f       	mov	r30, r24
    3a68:	80 32       	cpi	r24, 0x20	; 32
    3a6a:	68 f4       	brcc	.+26     	; 0x3a86 <ISR_attach+0x20>
    3a6c:	80 51       	subi	r24, 0x10	; 16
    3a6e:	83 30       	cpi	r24, 0x03	; 3
    3a70:	50 f0       	brcs	.+20     	; 0x3a86 <ISR_attach+0x20>
    3a72:	f0 e0       	ldi	r31, 0x00	; 0
    3a74:	ee 0f       	add	r30, r30
    3a76:	ff 1f       	adc	r31, r31
    3a78:	e5 5b       	subi	r30, 0xB5	; 181
    3a7a:	fd 4f       	sbci	r31, 0xFD	; 253
    3a7c:	20 81       	ld	r18, Z
    3a7e:	31 81       	ldd	r19, Z+1	; 0x01
    3a80:	71 83       	std	Z+1, r23	; 0x01
    3a82:	60 83       	st	Z, r22
    3a84:	02 c0       	rjmp	.+4      	; 0x3a8a <ISR_attach+0x24>
    3a86:	20 e0       	ldi	r18, 0x00	; 0
    3a88:	30 e0       	ldi	r19, 0x00	; 0
    3a8a:	c9 01       	movw	r24, r18
    3a8c:	08 95       	ret

00003a8e <ISR_open>:
    3a8e:	80 e1       	ldi	r24, 0x10	; 16
    3a90:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    3a94:	88 23       	and	r24, r24
    3a96:	61 f4       	brne	.+24     	; 0x3ab0 <ISR_open+0x22>
    3a98:	eb e4       	ldi	r30, 0x4B	; 75
    3a9a:	f2 e0       	ldi	r31, 0x02	; 2
    3a9c:	11 92       	st	Z+, r1
    3a9e:	11 92       	st	Z+, r1
    3aa0:	82 e0       	ldi	r24, 0x02	; 2
    3aa2:	eb 38       	cpi	r30, 0x8B	; 139
    3aa4:	f8 07       	cpc	r31, r24
    3aa6:	d1 f7       	brne	.-12     	; 0x3a9c <ISR_open+0xe>
    3aa8:	80 e1       	ldi	r24, 0x10	; 16
    3aaa:	61 e0       	ldi	r22, 0x01	; 1
    3aac:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    3ab0:	80 e1       	ldi	r24, 0x10	; 16
    3ab2:	91 e0       	ldi	r25, 0x01	; 1
    3ab4:	08 95       	ret

00003ab6 <__LCD_init>:
    3ab6:	23 9a       	sbi	0x04, 3	; 4
    3ab8:	08 95       	ret

00003aba <__LCD_putchar>:
    3aba:	ff 92       	push	r15
    3abc:	0f 93       	push	r16
    3abe:	1f 93       	push	r17
    3ac0:	cf 93       	push	r28
    3ac2:	df 93       	push	r29
    3ac4:	f8 2e       	mov	r15, r24
    3ac6:	8a e0       	ldi	r24, 0x0A	; 10
    3ac8:	f8 16       	cp	r15, r24
    3aca:	b1 f0       	breq	.+44     	; 0x3af8 <__LCD_putchar+0x3e>
    3acc:	8f 15       	cp	r24, r15
    3ace:	48 f0       	brcs	.+18     	; 0x3ae2 <__LCD_putchar+0x28>
    3ad0:	e8 e0       	ldi	r30, 0x08	; 8
    3ad2:	fe 16       	cp	r15, r30
    3ad4:	b9 f1       	breq	.+110    	; 0x3b44 <__LCD_putchar+0x8a>
    3ad6:	ef 15       	cp	r30, r15
    3ad8:	38 f1       	brcs	.+78     	; 0x3b28 <__LCD_putchar+0x6e>
    3ada:	f7 e0       	ldi	r31, 0x07	; 7
    3adc:	ff 16       	cp	r15, r31
    3ade:	51 f4       	brne	.+20     	; 0x3af4 <__LCD_putchar+0x3a>
    3ae0:	3b c0       	rjmp	.+118    	; 0x3b58 <__LCD_putchar+0x9e>
    3ae2:	8d e0       	ldi	r24, 0x0D	; 13
    3ae4:	f8 16       	cp	r15, r24
    3ae6:	59 f0       	breq	.+22     	; 0x3afe <__LCD_putchar+0x44>
    3ae8:	eb e1       	ldi	r30, 0x1B	; 27
    3aea:	fe 16       	cp	r15, r30
    3aec:	89 f0       	breq	.+34     	; 0x3b10 <__LCD_putchar+0x56>
    3aee:	fc e0       	ldi	r31, 0x0C	; 12
    3af0:	ff 16       	cp	r15, r31
    3af2:	41 f0       	breq	.+16     	; 0x3b04 <__LCD_putchar+0x4a>
    3af4:	01 e0       	ldi	r16, 0x01	; 1
    3af6:	41 c0       	rjmp	.+130    	; 0x3b7a <__LCD_putchar+0xc0>
    3af8:	10 92 ef 04 	sts	0x04EF, r1
    3afc:	03 c0       	rjmp	.+6      	; 0x3b04 <__LCD_putchar+0x4a>
    3afe:	10 92 ef 04 	sts	0x04EF, r1
    3b02:	3a c0       	rjmp	.+116    	; 0x3b78 <__LCD_putchar+0xbe>
    3b04:	80 91 f0 04 	lds	r24, 0x04F0
    3b08:	81 50       	subi	r24, 0x01	; 1
    3b0a:	80 93 f0 04 	sts	0x04F0, r24
    3b0e:	34 c0       	rjmp	.+104    	; 0x3b78 <__LCD_putchar+0xbe>
    3b10:	0e 94 0d 13 	call	0x261a	; 0x261a <LCD_clear>
    3b14:	14 c0       	rjmp	.+40     	; 0x3b3e <__LCD_putchar+0x84>
    3b16:	80 e0       	ldi	r24, 0x00	; 0
    3b18:	61 e0       	ldi	r22, 0x01	; 1
    3b1a:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    3b1e:	80 91 ef 04 	lds	r24, 0x04EF
    3b22:	8f 5f       	subi	r24, 0xFF	; 255
    3b24:	80 93 ef 04 	sts	0x04EF, r24
    3b28:	80 91 ef 04 	lds	r24, 0x04EF
    3b2c:	87 ff       	sbrs	r24, 7
    3b2e:	f3 cf       	rjmp	.-26     	; 0x3b16 <__LCD_putchar+0x5c>
    3b30:	10 92 ef 04 	sts	0x04EF, r1
    3b34:	80 91 f0 04 	lds	r24, 0x04F0
    3b38:	81 50       	subi	r24, 0x01	; 1
    3b3a:	80 93 f0 04 	sts	0x04F0, r24
    3b3e:	00 e0       	ldi	r16, 0x00	; 0
    3b40:	11 e0       	ldi	r17, 0x01	; 1
    3b42:	1c c0       	rjmp	.+56     	; 0x3b7c <__LCD_putchar+0xc2>
    3b44:	80 91 ef 04 	lds	r24, 0x04EF
    3b48:	88 23       	and	r24, r24
    3b4a:	b1 f0       	breq	.+44     	; 0x3b78 <__LCD_putchar+0xbe>
    3b4c:	80 91 ef 04 	lds	r24, 0x04EF
    3b50:	86 50       	subi	r24, 0x06	; 6
    3b52:	80 93 ef 04 	sts	0x04EF, r24
    3b56:	10 c0       	rjmp	.+32     	; 0x3b78 <__LCD_putchar+0xbe>
    3b58:	81 e0       	ldi	r24, 0x01	; 1
    3b5a:	0e 94 19 15 	call	0x2a32	; 0x2a32 <SPKR_open>
    3b5e:	64 ef       	ldi	r22, 0xF4	; 244
    3b60:	71 e0       	ldi	r23, 0x01	; 1
    3b62:	80 e0       	ldi	r24, 0x00	; 0
    3b64:	90 e0       	ldi	r25, 0x00	; 0
    3b66:	4d e7       	ldi	r20, 0x7D	; 125
    3b68:	50 e0       	ldi	r21, 0x00	; 0
    3b6a:	24 e6       	ldi	r18, 0x64	; 100
    3b6c:	30 e0       	ldi	r19, 0x00	; 0
    3b6e:	0e 94 77 1f 	call	0x3eee	; 0x3eee <SPKR_play_beep>
    3b72:	81 e0       	ldi	r24, 0x01	; 1
    3b74:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <SPKR_close>
    3b78:	00 e0       	ldi	r16, 0x00	; 0
    3b7a:	10 e0       	ldi	r17, 0x00	; 0
    3b7c:	80 91 f0 04 	lds	r24, 0x04F0
    3b80:	60 91 ef 04 	lds	r22, 0x04EF
    3b84:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <LCD_set_PGC_addr>
    3b88:	00 23       	and	r16, r16
    3b8a:	51 f1       	breq	.+84     	; 0x3be0 <__LCD_putchar+0x126>
    3b8c:	85 e0       	ldi	r24, 0x05	; 5
    3b8e:	f8 9e       	mul	r15, r24
    3b90:	c0 01       	movw	r24, r0
    3b92:	11 24       	eor	r1, r1
    3b94:	ec 01       	movw	r28, r24
    3b96:	c3 55       	subi	r28, 0x53	; 83
    3b98:	df 4f       	sbci	r29, 0xFF	; 255
    3b9a:	8c 01       	movw	r16, r24
    3b9c:	0e 54       	subi	r16, 0x4E	; 78
    3b9e:	1f 4f       	sbci	r17, 0xFF	; 255
    3ba0:	fe 01       	movw	r30, r28
    3ba2:	84 91       	lpm	r24, Z+
    3ba4:	61 e0       	ldi	r22, 0x01	; 1
    3ba6:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    3baa:	21 96       	adiw	r28, 0x01	; 1
    3bac:	c0 17       	cp	r28, r16
    3bae:	d1 07       	cpc	r29, r17
    3bb0:	b9 f7       	brne	.-18     	; 0x3ba0 <__LCD_putchar+0xe6>
    3bb2:	80 e0       	ldi	r24, 0x00	; 0
    3bb4:	61 e0       	ldi	r22, 0x01	; 1
    3bb6:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <LCD_write>
    3bba:	80 91 ef 04 	lds	r24, 0x04EF
    3bbe:	8a 5f       	subi	r24, 0xFA	; 250
    3bc0:	80 93 ef 04 	sts	0x04EF, r24
    3bc4:	80 91 ef 04 	lds	r24, 0x04EF
    3bc8:	90 e0       	ldi	r25, 0x00	; 0
    3bca:	8c 37       	cpi	r24, 0x7C	; 124
    3bcc:	91 05       	cpc	r25, r1
    3bce:	3c f0       	brlt	.+14     	; 0x3bde <__LCD_putchar+0x124>
    3bd0:	10 92 ef 04 	sts	0x04EF, r1
    3bd4:	80 91 f0 04 	lds	r24, 0x04F0
    3bd8:	81 50       	subi	r24, 0x01	; 1
    3bda:	80 93 f0 04 	sts	0x04F0, r24
    3bde:	11 e0       	ldi	r17, 0x01	; 1
    3be0:	80 91 f0 04 	lds	r24, 0x04F0
    3be4:	83 70       	andi	r24, 0x03	; 3
    3be6:	80 93 f0 04 	sts	0x04F0, r24
    3bea:	11 30       	cpi	r17, 0x01	; 1
    3bec:	59 f4       	brne	.+22     	; 0x3c04 <__LCD_putchar+0x14a>
    3bee:	80 91 f1 04 	lds	r24, 0x04F1
    3bf2:	81 30       	cpi	r24, 0x01	; 1
    3bf4:	39 f4       	brne	.+14     	; 0x3c04 <__LCD_putchar+0x14a>
    3bf6:	e0 91 f2 04 	lds	r30, 0x04F2
    3bfa:	f0 91 f3 04 	lds	r31, 0x04F3
    3bfe:	30 97       	sbiw	r30, 0x00	; 0
    3c00:	09 f0       	breq	.+2      	; 0x3c04 <__LCD_putchar+0x14a>
    3c02:	09 95       	icall
    3c04:	80 e0       	ldi	r24, 0x00	; 0
    3c06:	90 e0       	ldi	r25, 0x00	; 0
    3c08:	df 91       	pop	r29
    3c0a:	cf 91       	pop	r28
    3c0c:	1f 91       	pop	r17
    3c0e:	0f 91       	pop	r16
    3c10:	ff 90       	pop	r15
    3c12:	08 95       	ret

00003c14 <__LED_clr_pattern>:
    3c14:	85 fd       	sbrc	r24, 5
    3c16:	5d 98       	cbi	0x0b, 5	; 11
    3c18:	86 fd       	sbrc	r24, 6
    3c1a:	5e 98       	cbi	0x0b, 6	; 11
    3c1c:	08 95       	ret

00003c1e <__LED_init>:
    3c1e:	55 9a       	sbi	0x0a, 5	; 10
    3c20:	56 9a       	sbi	0x0a, 6	; 10
    3c22:	08 95       	ret

00003c24 <__LED_set_pattern>:
    3c24:	85 fd       	sbrc	r24, 5
    3c26:	5d 9a       	sbi	0x0b, 5	; 11
    3c28:	86 fd       	sbrc	r24, 6
    3c2a:	5e 9a       	sbi	0x0b, 6	; 11
    3c2c:	08 95       	ret

00003c2e <ATMEGA_open>:
    3c2e:	80 e0       	ldi	r24, 0x00	; 0
    3c30:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    3c34:	88 23       	and	r24, r24
    3c36:	51 f4       	brne	.+20     	; 0x3c4c <ATMEGA_open+0x1e>
    3c38:	f8 94       	cli
    3c3a:	0e 94 29 21 	call	0x4252	; 0x4252 <__ATMEGA_init>
    3c3e:	81 e0       	ldi	r24, 0x01	; 1
    3c40:	0e 94 29 1e 	call	0x3c52	; 0x3c52 <ATMEGA_set_clk_mode>
    3c44:	80 e0       	ldi	r24, 0x00	; 0
    3c46:	61 e0       	ldi	r22, 0x01	; 1
    3c48:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    3c4c:	80 e0       	ldi	r24, 0x00	; 0
    3c4e:	91 e0       	ldi	r25, 0x01	; 1
    3c50:	08 95       	ret

00003c52 <ATMEGA_set_clk_mode>:
    3c52:	81 30       	cpi	r24, 0x01	; 1
    3c54:	49 f0       	breq	.+18     	; 0x3c68 <ATMEGA_set_clk_mode+0x16>
    3c56:	f8 94       	cli
    3c58:	81 30       	cpi	r24, 0x01	; 1
    3c5a:	20 f1       	brcs	.+72     	; 0x3ca4 <ATMEGA_set_clk_mode+0x52>
    3c5c:	82 30       	cpi	r24, 0x02	; 2
    3c5e:	b1 f0       	breq	.+44     	; 0x3c8c <ATMEGA_set_clk_mode+0x3a>
    3c60:	83 30       	cpi	r24, 0x03	; 3
    3c62:	09 f0       	breq	.+2      	; 0x3c66 <ATMEGA_set_clk_mode+0x14>
    3c64:	45 c0       	rjmp	.+138    	; 0x3cf0 <ATMEGA_set_clk_mode+0x9e>
    3c66:	17 c0       	rjmp	.+46     	; 0x3c96 <ATMEGA_set_clk_mode+0x44>
    3c68:	2c 9a       	sbi	0x05, 4	; 5
    3c6a:	80 e8       	ldi	r24, 0x80	; 128
    3c6c:	80 93 61 00 	sts	0x0061, r24
    3c70:	10 92 61 00 	sts	0x0061, r1
    3c74:	80 e0       	ldi	r24, 0x00	; 0
    3c76:	90 e0       	ldi	r25, 0x00	; 0
    3c78:	00 00       	nop
    3c7a:	01 96       	adiw	r24, 0x01	; 1
    3c7c:	88 32       	cpi	r24, 0x28	; 40
    3c7e:	91 05       	cpc	r25, r1
    3c80:	d9 f7       	brne	.-10     	; 0x3c78 <ATMEGA_set_clk_mode+0x26>
    3c82:	10 92 68 00 	sts	0x0068, r1
    3c86:	10 92 6b 00 	sts	0x006B, r1
    3c8a:	08 95       	ret
    3c8c:	80 e8       	ldi	r24, 0x80	; 128
    3c8e:	80 93 61 00 	sts	0x0061, r24
    3c92:	83 e0       	ldi	r24, 0x03	; 3
    3c94:	04 c0       	rjmp	.+8      	; 0x3c9e <ATMEGA_set_clk_mode+0x4c>
    3c96:	80 e8       	ldi	r24, 0x80	; 128
    3c98:	80 93 61 00 	sts	0x0061, r24
    3c9c:	88 e0       	ldi	r24, 0x08	; 8
    3c9e:	80 93 61 00 	sts	0x0061, r24
    3ca2:	28 c0       	rjmp	.+80     	; 0x3cf4 <ATMEGA_set_clk_mode+0xa2>
    3ca4:	80 e0       	ldi	r24, 0x00	; 0
    3ca6:	90 e0       	ldi	r25, 0x00	; 0
    3ca8:	00 00       	nop
    3caa:	01 96       	adiw	r24, 0x01	; 1
    3cac:	2d e6       	ldi	r18, 0x6D	; 109
    3cae:	80 36       	cpi	r24, 0x60	; 96
    3cb0:	92 07       	cpc	r25, r18
    3cb2:	d1 f7       	brne	.-12     	; 0x3ca8 <ATMEGA_set_clk_mode+0x56>
    3cb4:	2c 98       	cbi	0x05, 4	; 5
    3cb6:	80 e0       	ldi	r24, 0x00	; 0
    3cb8:	90 e0       	ldi	r25, 0x00	; 0
    3cba:	00 00       	nop
    3cbc:	01 96       	adiw	r24, 0x01	; 1
    3cbe:	2d e6       	ldi	r18, 0x6D	; 109
    3cc0:	80 36       	cpi	r24, 0x60	; 96
    3cc2:	92 07       	cpc	r25, r18
    3cc4:	d1 f7       	brne	.-12     	; 0x3cba <ATMEGA_set_clk_mode+0x68>
    3cc6:	10 92 7a 00 	sts	0x007A, r1
    3cca:	8f ef       	ldi	r24, 0xFF	; 255
    3ccc:	80 93 64 00 	sts	0x0064, r24
    3cd0:	80 91 68 00 	lds	r24, 0x0068
    3cd4:	81 60       	ori	r24, 0x01	; 1
    3cd6:	80 93 68 00 	sts	0x0068, r24
    3cda:	80 91 6b 00 	lds	r24, 0x006B
    3cde:	84 60       	ori	r24, 0x04	; 4
    3ce0:	80 93 6b 00 	sts	0x006B, r24
    3ce4:	78 94       	sei
    3ce6:	83 b7       	in	r24, 0x33	; 51
    3ce8:	81 60       	ori	r24, 0x01	; 1
    3cea:	83 bf       	out	0x33, r24	; 51
    3cec:	88 95       	sleep
    3cee:	08 95       	ret
    3cf0:	82 30       	cpi	r24, 0x02	; 2
    3cf2:	08 f0       	brcs	.+2      	; 0x3cf6 <ATMEGA_set_clk_mode+0xa4>
    3cf4:	78 94       	sei
    3cf6:	08 95       	ret

00003cf8 <SPI_open>:
    3cf8:	0f 93       	push	r16
    3cfa:	1f 93       	push	r17
    3cfc:	0e 94 55 21 	call	0x42aa	; 0x42aa <__SPI_init>
    3d00:	80 e0       	ldi	r24, 0x00	; 0
    3d02:	64 e4       	ldi	r22, 0x44	; 68
    3d04:	71 e2       	ldi	r23, 0x21	; 33
    3d06:	0e 94 c7 1e 	call	0x3d8e	; 0x3d8e <SPI_set_config_func>
    3d0a:	81 e0       	ldi	r24, 0x01	; 1
    3d0c:	6c e3       	ldi	r22, 0x3C	; 60
    3d0e:	71 e2       	ldi	r23, 0x21	; 33
    3d10:	0e 94 c7 1e 	call	0x3d8e	; 0x3d8e <SPI_set_config_func>
    3d14:	82 e0       	ldi	r24, 0x02	; 2
    3d16:	64 e3       	ldi	r22, 0x34	; 52
    3d18:	71 e2       	ldi	r23, 0x21	; 33
    3d1a:	0e 94 c7 1e 	call	0x3d8e	; 0x3d8e <SPI_set_config_func>
    3d1e:	86 e0       	ldi	r24, 0x06	; 6
    3d20:	6c e4       	ldi	r22, 0x4C	; 76
    3d22:	71 e2       	ldi	r23, 0x21	; 33
    3d24:	0e 94 c7 1e 	call	0x3d8e	; 0x3d8e <SPI_set_config_func>
    3d28:	0c e2       	ldi	r16, 0x2C	; 44
    3d2a:	11 e2       	ldi	r17, 0x21	; 33
    3d2c:	83 e0       	ldi	r24, 0x03	; 3
    3d2e:	b8 01       	movw	r22, r16
    3d30:	0e 94 c7 1e 	call	0x3d8e	; 0x3d8e <SPI_set_config_func>
    3d34:	84 e0       	ldi	r24, 0x04	; 4
    3d36:	b8 01       	movw	r22, r16
    3d38:	0e 94 c7 1e 	call	0x3d8e	; 0x3d8e <SPI_set_config_func>
    3d3c:	85 e0       	ldi	r24, 0x05	; 5
    3d3e:	b8 01       	movw	r22, r16
    3d40:	0e 94 c7 1e 	call	0x3d8e	; 0x3d8e <SPI_set_config_func>
    3d44:	87 e0       	ldi	r24, 0x07	; 7
    3d46:	b8 01       	movw	r22, r16
    3d48:	0e 94 c7 1e 	call	0x3d8e	; 0x3d8e <SPI_set_config_func>
    3d4c:	82 e0       	ldi	r24, 0x02	; 2
    3d4e:	61 e0       	ldi	r22, 0x01	; 1
    3d50:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    3d54:	8f ef       	ldi	r24, 0xFF	; 255
    3d56:	80 93 f4 04 	sts	0x04F4, r24
    3d5a:	87 e0       	ldi	r24, 0x07	; 7
    3d5c:	0e 94 28 14 	call	0x2850	; 0x2850 <SPI_set_slave_addr>
    3d60:	82 e0       	ldi	r24, 0x02	; 2
    3d62:	91 e0       	ldi	r25, 0x01	; 1
    3d64:	1f 91       	pop	r17
    3d66:	0f 91       	pop	r16
    3d68:	08 95       	ret

00003d6a <SPI_receive>:
    3d6a:	1f 93       	push	r17
    3d6c:	16 2f       	mov	r17, r22
    3d6e:	0e 94 28 14 	call	0x2850	; 0x2850 <SPI_set_slave_addr>
    3d72:	82 e0       	ldi	r24, 0x02	; 2
    3d74:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    3d78:	81 30       	cpi	r24, 0x01	; 1
    3d7a:	11 f0       	breq	.+4      	; 0x3d80 <SPI_receive+0x16>
    3d7c:	80 e0       	ldi	r24, 0x00	; 0
    3d7e:	05 c0       	rjmp	.+10     	; 0x3d8a <SPI_receive+0x20>
    3d80:	1e bd       	out	0x2e, r17	; 46
    3d82:	0d b4       	in	r0, 0x2d	; 45
    3d84:	07 fe       	sbrs	r0, 7
    3d86:	fd cf       	rjmp	.-6      	; 0x3d82 <SPI_receive+0x18>
    3d88:	8e b5       	in	r24, 0x2e	; 46
    3d8a:	1f 91       	pop	r17
    3d8c:	08 95       	ret

00003d8e <SPI_set_config_func>:
    3d8e:	e8 2f       	mov	r30, r24
    3d90:	f0 e0       	ldi	r31, 0x00	; 0
    3d92:	ee 0f       	add	r30, r30
    3d94:	ff 1f       	adc	r31, r31
    3d96:	e5 57       	subi	r30, 0x75	; 117
    3d98:	fd 4f       	sbci	r31, 0xFD	; 253
    3d9a:	71 83       	std	Z+1, r23	; 0x01
    3d9c:	60 83       	st	Z, r22
    3d9e:	08 95       	ret

00003da0 <__SPKR_TIMER1_COMPA_vect>:
    3da0:	0e 94 d3 1e 	call	0x3da6	; 0x3da6 <SPKR_clk>
    3da4:	08 95       	ret

00003da6 <SPKR_clk>:
    3da6:	80 91 9d 02 	lds	r24, 0x029D
    3daa:	90 91 9e 02 	lds	r25, 0x029E
    3dae:	a0 91 9f 02 	lds	r26, 0x029F
    3db2:	b0 91 a0 02 	lds	r27, 0x02A0
    3db6:	20 91 a1 02 	lds	r18, 0x02A1
    3dba:	30 91 a2 02 	lds	r19, 0x02A2
    3dbe:	40 91 a3 02 	lds	r20, 0x02A3
    3dc2:	50 91 a4 02 	lds	r21, 0x02A4
    3dc6:	28 0f       	add	r18, r24
    3dc8:	39 1f       	adc	r19, r25
    3dca:	4a 1f       	adc	r20, r26
    3dcc:	5b 1f       	adc	r21, r27
    3dce:	20 93 9d 02 	sts	0x029D, r18
    3dd2:	30 93 9e 02 	sts	0x029E, r19
    3dd6:	40 93 9f 02 	sts	0x029F, r20
    3dda:	50 93 a0 02 	sts	0x02A0, r21
    3dde:	80 91 9d 02 	lds	r24, 0x029D
    3de2:	90 91 9e 02 	lds	r25, 0x029E
    3de6:	a0 91 9f 02 	lds	r26, 0x029F
    3dea:	b0 91 a0 02 	lds	r27, 0x02A0
    3dee:	88 51       	subi	r24, 0x18	; 24
    3df0:	96 4f       	sbci	r25, 0xF6	; 246
    3df2:	a0 40       	sbci	r26, 0x00	; 0
    3df4:	b0 40       	sbci	r27, 0x00	; 0
    3df6:	bc f0       	brlt	.+46     	; 0x3e26 <SPKR_clk+0x80>
    3df8:	8b b1       	in	r24, 0x0b	; 11
    3dfa:	80 58       	subi	r24, 0x80	; 128
    3dfc:	8b b9       	out	0x0b, r24	; 11
    3dfe:	80 91 9d 02 	lds	r24, 0x029D
    3e02:	90 91 9e 02 	lds	r25, 0x029E
    3e06:	a0 91 9f 02 	lds	r26, 0x029F
    3e0a:	b0 91 a0 02 	lds	r27, 0x02A0
    3e0e:	88 51       	subi	r24, 0x18	; 24
    3e10:	96 4f       	sbci	r25, 0xF6	; 246
    3e12:	a0 40       	sbci	r26, 0x00	; 0
    3e14:	b0 40       	sbci	r27, 0x00	; 0
    3e16:	80 93 9d 02 	sts	0x029D, r24
    3e1a:	90 93 9e 02 	sts	0x029E, r25
    3e1e:	a0 93 9f 02 	sts	0x029F, r26
    3e22:	b0 93 a0 02 	sts	0x02A0, r27
    3e26:	08 95       	ret

00003e28 <__SPKR_close_beep_mode>:
    3e28:	8a e0       	ldi	r24, 0x0A	; 10
    3e2a:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    3e2e:	81 30       	cpi	r24, 0x01	; 1
    3e30:	41 f4       	brne	.+16     	; 0x3e42 <__SPKR_close_beep_mode+0x1a>
    3e32:	0e 94 73 21 	call	0x42e6	; 0x42e6 <__SPKR_close>
    3e36:	10 92 9c 02 	sts	0x029C, r1
    3e3a:	8a e0       	ldi	r24, 0x0A	; 10
    3e3c:	60 e0       	ldi	r22, 0x00	; 0
    3e3e:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    3e42:	08 95       	ret

00003e44 <__SPKR_close_tone_mode>:
    3e44:	89 e0       	ldi	r24, 0x09	; 9
    3e46:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    3e4a:	81 30       	cpi	r24, 0x01	; 1
    3e4c:	d9 f4       	brne	.+54     	; 0x3e84 <__SPKR_close_tone_mode+0x40>
    3e4e:	80 91 9b 02 	lds	r24, 0x029B
    3e52:	88 23       	and	r24, r24
    3e54:	11 f0       	breq	.+4      	; 0x3e5a <__SPKR_close_tone_mode+0x16>
    3e56:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <__SPKR_stop>
    3e5a:	82 e0       	ldi	r24, 0x02	; 2
    3e5c:	0e 94 73 21 	call	0x42e6	; 0x42e6 <__SPKR_close>
    3e60:	80 91 a9 02 	lds	r24, 0x02A9
    3e64:	90 91 aa 02 	lds	r25, 0x02AA
    3e68:	00 97       	sbiw	r24, 0x00	; 0
    3e6a:	31 f0       	breq	.+12     	; 0x3e78 <__SPKR_close_tone_mode+0x34>
    3e6c:	0e 94 32 2e 	call	0x5c64	; 0x5c64 <free>
    3e70:	10 92 aa 02 	sts	0x02AA, r1
    3e74:	10 92 a9 02 	sts	0x02A9, r1
    3e78:	10 92 9b 02 	sts	0x029B, r1
    3e7c:	89 e0       	ldi	r24, 0x09	; 9
    3e7e:	60 e0       	ldi	r22, 0x00	; 0
    3e80:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    3e84:	08 95       	ret

00003e86 <SPKR_close>:
    3e86:	81 30       	cpi	r24, 0x01	; 1
    3e88:	29 f0       	breq	.+10     	; 0x3e94 <SPKR_close+0xe>
    3e8a:	82 30       	cpi	r24, 0x02	; 2
    3e8c:	29 f4       	brne	.+10     	; 0x3e98 <SPKR_close+0x12>
    3e8e:	0e 94 22 1f 	call	0x3e44	; 0x3e44 <__SPKR_close_tone_mode>
    3e92:	08 95       	ret
    3e94:	0e 94 14 1f 	call	0x3e28	; 0x3e28 <__SPKR_close_beep_mode>
    3e98:	08 95       	ret

00003e9a <__SPKR_init>:
    3e9a:	98 2f       	mov	r25, r24
    3e9c:	80 91 9b 02 	lds	r24, 0x029B
    3ea0:	88 23       	and	r24, r24
    3ea2:	31 f4       	brne	.+12     	; 0x3eb0 <__SPKR_init+0x16>
    3ea4:	80 91 9c 02 	lds	r24, 0x029C
    3ea8:	88 23       	and	r24, r24
    3eaa:	11 f4       	brne	.+4      	; 0x3eb0 <__SPKR_init+0x16>
    3eac:	57 9a       	sbi	0x0a, 7	; 10
    3eae:	5f 98       	cbi	0x0b, 7	; 11
    3eb0:	80 91 9b 02 	lds	r24, 0x029B
    3eb4:	88 23       	and	r24, r24
    3eb6:	d1 f4       	brne	.+52     	; 0x3eec <__SPKR_init+0x52>
    3eb8:	92 30       	cpi	r25, 0x02	; 2
    3eba:	c1 f4       	brne	.+48     	; 0x3eec <__SPKR_init+0x52>
    3ebc:	10 92 80 00 	sts	0x0080, r1
    3ec0:	10 92 81 00 	sts	0x0081, r1
    3ec4:	80 91 81 00 	lds	r24, 0x0081
    3ec8:	88 60       	ori	r24, 0x08	; 8
    3eca:	80 93 81 00 	sts	0x0081, r24
    3ece:	80 91 81 00 	lds	r24, 0x0081
    3ed2:	81 60       	ori	r24, 0x01	; 1
    3ed4:	80 93 81 00 	sts	0x0081, r24
    3ed8:	10 92 85 00 	sts	0x0085, r1
    3edc:	10 92 84 00 	sts	0x0084, r1
    3ee0:	81 e0       	ldi	r24, 0x01	; 1
    3ee2:	80 93 89 00 	sts	0x0089, r24
    3ee6:	80 e9       	ldi	r24, 0x90	; 144
    3ee8:	80 93 88 00 	sts	0x0088, r24
    3eec:	08 95       	ret

00003eee <SPKR_play_beep>:
    3eee:	8f 92       	push	r8
    3ef0:	9f 92       	push	r9
    3ef2:	af 92       	push	r10
    3ef4:	bf 92       	push	r11
    3ef6:	cf 92       	push	r12
    3ef8:	df 92       	push	r13
    3efa:	ef 92       	push	r14
    3efc:	ff 92       	push	r15
    3efe:	0f 93       	push	r16
    3f00:	1f 93       	push	r17
    3f02:	cf 93       	push	r28
    3f04:	df 93       	push	r29
    3f06:	4b 01       	movw	r8, r22
    3f08:	5c 01       	movw	r10, r24
    3f0a:	ea 01       	movw	r28, r20
    3f0c:	b9 01       	movw	r22, r18
    3f0e:	21 15       	cp	r18, r1
    3f10:	31 05       	cpc	r19, r1
    3f12:	39 f1       	breq	.+78     	; 0x3f62 <SPKR_play_beep+0x74>
    3f14:	9e 01       	movw	r18, r28
    3f16:	44 27       	eor	r20, r20
    3f18:	37 fd       	sbrc	r19, 7
    3f1a:	40 95       	com	r20
    3f1c:	54 2f       	mov	r21, r20
    3f1e:	65 36       	cpi	r22, 0x65	; 101
    3f20:	71 05       	cpc	r23, r1
    3f22:	10 f0       	brcs	.+4      	; 0x3f28 <SPKR_play_beep+0x3a>
    3f24:	64 e6       	ldi	r22, 0x64	; 100
    3f26:	70 e0       	ldi	r23, 0x00	; 0
    3f28:	80 e0       	ldi	r24, 0x00	; 0
    3f2a:	90 e0       	ldi	r25, 0x00	; 0
    3f2c:	0e 94 e6 2c 	call	0x59cc	; 0x59cc <__mulsi3>
    3f30:	24 e6       	ldi	r18, 0x64	; 100
    3f32:	30 e0       	ldi	r19, 0x00	; 0
    3f34:	40 e0       	ldi	r20, 0x00	; 0
    3f36:	50 e0       	ldi	r21, 0x00	; 0
    3f38:	0e 94 18 2d 	call	0x5a30	; 0x5a30 <__udivmodsi4>
    3f3c:	79 01       	movw	r14, r18
    3f3e:	8a 01       	movw	r16, r20
    3f40:	c5 01       	movw	r24, r10
    3f42:	b4 01       	movw	r22, r8
    3f44:	0e 94 5c 21 	call	0x42b8	; 0x42b8 <SPKR_beep>
    3f48:	c7 01       	movw	r24, r14
    3f4a:	0e 94 a8 19 	call	0x3350	; 0x3350 <TMRSRVC_delay>
    3f4e:	60 e0       	ldi	r22, 0x00	; 0
    3f50:	70 e0       	ldi	r23, 0x00	; 0
    3f52:	80 e0       	ldi	r24, 0x00	; 0
    3f54:	90 e0       	ldi	r25, 0x00	; 0
    3f56:	0e 94 5c 21 	call	0x42b8	; 0x42b8 <SPKR_beep>
    3f5a:	ce 01       	movw	r24, r28
    3f5c:	8e 19       	sub	r24, r14
    3f5e:	9f 09       	sbc	r25, r15
    3f60:	04 c0       	rjmp	.+8      	; 0x3f6a <SPKR_play_beep+0x7c>
    3f62:	41 15       	cp	r20, r1
    3f64:	51 05       	cpc	r21, r1
    3f66:	19 f0       	breq	.+6      	; 0x3f6e <SPKR_play_beep+0x80>
    3f68:	ca 01       	movw	r24, r20
    3f6a:	0e 94 a8 19 	call	0x3350	; 0x3350 <TMRSRVC_delay>
    3f6e:	df 91       	pop	r29
    3f70:	cf 91       	pop	r28
    3f72:	1f 91       	pop	r17
    3f74:	0f 91       	pop	r16
    3f76:	ff 90       	pop	r15
    3f78:	ef 90       	pop	r14
    3f7a:	df 90       	pop	r13
    3f7c:	cf 90       	pop	r12
    3f7e:	bf 90       	pop	r11
    3f80:	af 90       	pop	r10
    3f82:	9f 90       	pop	r9
    3f84:	8f 90       	pop	r8
    3f86:	08 95       	ret

00003f88 <__SPKR_stop>:
    3f88:	ef e6       	ldi	r30, 0x6F	; 111
    3f8a:	f0 e0       	ldi	r31, 0x00	; 0
    3f8c:	80 81       	ld	r24, Z
    3f8e:	8d 7f       	andi	r24, 0xFD	; 253
    3f90:	80 83       	st	Z, r24
    3f92:	08 95       	ret

00003f94 <STEPPER_go>:
    3f94:	98 2f       	mov	r25, r24
    3f96:	81 e0       	ldi	r24, 0x01	; 1
    3f98:	80 93 d9 04 	sts	0x04D9, r24
    3f9c:	91 30       	cpi	r25, 0x01	; 1
    3f9e:	51 f0       	breq	.+20     	; 0x3fb4 <STEPPER_go+0x20>
    3fa0:	91 30       	cpi	r25, 0x01	; 1
    3fa2:	18 f0       	brcs	.+6      	; 0x3faa <STEPPER_go+0x16>
    3fa4:	92 30       	cpi	r25, 0x02	; 2
    3fa6:	41 f4       	brne	.+16     	; 0x3fb8 <STEPPER_go+0x24>
    3fa8:	03 c0       	rjmp	.+6      	; 0x3fb0 <STEPPER_go+0x1c>
    3faa:	10 92 c1 04 	sts	0x04C1, r1
    3fae:	04 c0       	rjmp	.+8      	; 0x3fb8 <STEPPER_go+0x24>
    3fb0:	10 92 c1 04 	sts	0x04C1, r1
    3fb4:	10 92 c2 04 	sts	0x04C2, r1
    3fb8:	10 92 d9 04 	sts	0x04D9, r1
    3fbc:	08 95       	ret

00003fbe <__STEPPER_init>:
    3fbe:	3a 9a       	sbi	0x07, 2	; 7
    3fc0:	3b 9a       	sbi	0x07, 3	; 7
    3fc2:	3c 9a       	sbi	0x07, 4	; 7
    3fc4:	3d 9a       	sbi	0x07, 5	; 7
    3fc6:	3e 9a       	sbi	0x07, 6	; 7
    3fc8:	3f 9a       	sbi	0x07, 7	; 7
    3fca:	88 b1       	in	r24, 0x08	; 8
    3fcc:	83 70       	andi	r24, 0x03	; 3
    3fce:	88 b9       	out	0x08, r24	; 8
    3fd0:	08 95       	ret

00003fd2 <STEPPER_set_steps>:
    3fd2:	98 2f       	mov	r25, r24
    3fd4:	81 e0       	ldi	r24, 0x01	; 1
    3fd6:	80 93 d9 04 	sts	0x04D9, r24
    3fda:	91 30       	cpi	r25, 0x01	; 1
    3fdc:	71 f0       	breq	.+28     	; 0x3ffa <STEPPER_set_steps+0x28>
    3fde:	91 30       	cpi	r25, 0x01	; 1
    3fe0:	18 f0       	brcs	.+6      	; 0x3fe8 <STEPPER_set_steps+0x16>
    3fe2:	92 30       	cpi	r25, 0x02	; 2
    3fe4:	71 f4       	brne	.+28     	; 0x4002 <STEPPER_set_steps+0x30>
    3fe6:	05 c0       	rjmp	.+10     	; 0x3ff2 <STEPPER_set_steps+0x20>
    3fe8:	70 93 b6 04 	sts	0x04B6, r23
    3fec:	60 93 b5 04 	sts	0x04B5, r22
    3ff0:	08 c0       	rjmp	.+16     	; 0x4002 <STEPPER_set_steps+0x30>
    3ff2:	70 93 b6 04 	sts	0x04B6, r23
    3ff6:	60 93 b5 04 	sts	0x04B5, r22
    3ffa:	70 93 b8 04 	sts	0x04B8, r23
    3ffe:	60 93 b7 04 	sts	0x04B7, r22
    4002:	10 92 d9 04 	sts	0x04D9, r1
    4006:	08 95       	ret

00004008 <STEPPER_set_stop_mode>:
    4008:	98 2f       	mov	r25, r24
    400a:	81 e0       	ldi	r24, 0x01	; 1
    400c:	80 93 d9 04 	sts	0x04D9, r24
    4010:	91 30       	cpi	r25, 0x01	; 1
    4012:	51 f0       	breq	.+20     	; 0x4028 <STEPPER_set_stop_mode+0x20>
    4014:	91 30       	cpi	r25, 0x01	; 1
    4016:	18 f0       	brcs	.+6      	; 0x401e <STEPPER_set_stop_mode+0x16>
    4018:	92 30       	cpi	r25, 0x02	; 2
    401a:	41 f4       	brne	.+16     	; 0x402c <STEPPER_set_stop_mode+0x24>
    401c:	03 c0       	rjmp	.+6      	; 0x4024 <STEPPER_set_stop_mode+0x1c>
    401e:	60 93 c3 04 	sts	0x04C3, r22
    4022:	04 c0       	rjmp	.+8      	; 0x402c <STEPPER_set_stop_mode+0x24>
    4024:	60 93 c3 04 	sts	0x04C3, r22
    4028:	60 93 c4 04 	sts	0x04C4, r22
    402c:	10 92 d9 04 	sts	0x04D9, r1
    4030:	08 95       	ret

00004032 <STEPPER_setup_decels>:
    4032:	0f 93       	push	r16
    4034:	1f 93       	push	r17
    4036:	cf 93       	push	r28
    4038:	df 93       	push	r29
    403a:	eb 01       	movw	r28, r22
    403c:	8a 01       	movw	r16, r20
    403e:	81 30       	cpi	r24, 0x01	; 1
    4040:	01 f1       	breq	.+64     	; 0x4082 <STEPPER_setup_decels+0x50>
    4042:	81 30       	cpi	r24, 0x01	; 1
    4044:	18 f0       	brcs	.+6      	; 0x404c <STEPPER_setup_decels+0x1a>
    4046:	82 30       	cpi	r24, 0x02	; 2
    4048:	61 f5       	brne	.+88     	; 0x40a2 <STEPPER_setup_decels+0x70>
    404a:	0d c0       	rjmp	.+26     	; 0x4066 <STEPPER_setup_decels+0x34>
    404c:	80 91 ad 04 	lds	r24, 0x04AD
    4050:	90 91 ae 04 	lds	r25, 0x04AE
    4054:	89 2b       	or	r24, r25
    4056:	11 f0       	breq	.+4      	; 0x405c <STEPPER_setup_decels+0x2a>
    4058:	80 e0       	ldi	r24, 0x00	; 0
    405a:	1a c0       	rjmp	.+52     	; 0x4090 <STEPPER_setup_decels+0x5e>
    405c:	10 92 ba 04 	sts	0x04BA, r1
    4060:	10 92 b9 04 	sts	0x04B9, r1
    4064:	1e c0       	rjmp	.+60     	; 0x40a2 <STEPPER_setup_decels+0x70>
    4066:	80 91 ad 04 	lds	r24, 0x04AD
    406a:	90 91 ae 04 	lds	r25, 0x04AE
    406e:	89 2b       	or	r24, r25
    4070:	21 f0       	breq	.+8      	; 0x407a <STEPPER_setup_decels+0x48>
    4072:	80 e0       	ldi	r24, 0x00	; 0
    4074:	0e 94 8f 21 	call	0x431e	; 0x431e <STEPPER_set_decel_step_values>
    4078:	04 c0       	rjmp	.+8      	; 0x4082 <STEPPER_setup_decels+0x50>
    407a:	10 92 ba 04 	sts	0x04BA, r1
    407e:	10 92 b9 04 	sts	0x04B9, r1
    4082:	80 91 af 04 	lds	r24, 0x04AF
    4086:	90 91 b0 04 	lds	r25, 0x04B0
    408a:	89 2b       	or	r24, r25
    408c:	31 f0       	breq	.+12     	; 0x409a <STEPPER_setup_decels+0x68>
    408e:	81 e0       	ldi	r24, 0x01	; 1
    4090:	be 01       	movw	r22, r28
    4092:	a8 01       	movw	r20, r16
    4094:	0e 94 8f 21 	call	0x431e	; 0x431e <STEPPER_set_decel_step_values>
    4098:	04 c0       	rjmp	.+8      	; 0x40a2 <STEPPER_setup_decels+0x70>
    409a:	10 92 bc 04 	sts	0x04BC, r1
    409e:	10 92 bb 04 	sts	0x04BB, r1
    40a2:	df 91       	pop	r29
    40a4:	cf 91       	pop	r28
    40a6:	1f 91       	pop	r17
    40a8:	0f 91       	pop	r16
    40aa:	08 95       	ret

000040ac <SYS_init>:
    40ac:	10 92 dc 04 	sts	0x04DC, r1
    40b0:	10 92 dd 04 	sts	0x04DD, r1
    40b4:	10 92 e1 04 	sts	0x04E1, r1
    40b8:	10 92 de 04 	sts	0x04DE, r1
    40bc:	10 92 e0 04 	sts	0x04E0, r1
    40c0:	10 92 e2 04 	sts	0x04E2, r1
    40c4:	10 92 e3 04 	sts	0x04E3, r1
    40c8:	10 92 e4 04 	sts	0x04E4, r1
    40cc:	10 92 e5 04 	sts	0x04E5, r1
    40d0:	10 92 e6 04 	sts	0x04E6, r1
    40d4:	10 92 e7 04 	sts	0x04E7, r1
    40d8:	10 92 e8 04 	sts	0x04E8, r1
    40dc:	10 92 e9 04 	sts	0x04E9, r1
    40e0:	10 92 ea 04 	sts	0x04EA, r1
    40e4:	10 92 eb 04 	sts	0x04EB, r1
    40e8:	10 92 ec 04 	sts	0x04EC, r1
    40ec:	10 92 ed 04 	sts	0x04ED, r1
    40f0:	08 95       	ret

000040f2 <TMRSRVC_insert>:
    40f2:	cf 92       	push	r12
    40f4:	df 92       	push	r13
    40f6:	ef 92       	push	r14
    40f8:	ff 92       	push	r15
    40fa:	0f 93       	push	r16
    40fc:	1f 93       	push	r17
    40fe:	cf 93       	push	r28
    4100:	df 93       	push	r29
    4102:	ec 01       	movw	r28, r24
    4104:	80 91 13 05 	lds	r24, 0x0513
    4108:	88 23       	and	r24, r24
    410a:	39 f4       	brne	.+14     	; 0x411a <TMRSRVC_insert+0x28>
    410c:	d0 93 15 05 	sts	0x0515, r29
    4110:	c0 93 14 05 	sts	0x0514, r28
    4114:	0e 94 07 21 	call	0x420e	; 0x420e <TMRSRVC_start>
    4118:	47 c0       	rjmp	.+142    	; 0x41a8 <TMRSRVC_insert+0xb6>
    411a:	c0 90 14 05 	lds	r12, 0x0514
    411e:	d0 90 15 05 	lds	r13, 0x0515
    4122:	00 e0       	ldi	r16, 0x00	; 0
    4124:	10 e0       	ldi	r17, 0x00	; 0
    4126:	ee 24       	eor	r14, r14
    4128:	ff 24       	eor	r15, r15
    412a:	37 c0       	rjmp	.+110    	; 0x419a <TMRSRVC_insert+0xa8>
    412c:	a8 81       	ld	r26, Y
    412e:	b9 81       	ldd	r27, Y+1	; 0x01
    4130:	fd 01       	movw	r30, r26
    4132:	64 81       	ldd	r22, Z+4	; 0x04
    4134:	75 81       	ldd	r23, Z+5	; 0x05
    4136:	f6 01       	movw	r30, r12
    4138:	40 81       	ld	r20, Z
    413a:	51 81       	ldd	r21, Z+1	; 0x01
    413c:	fa 01       	movw	r30, r20
    413e:	84 81       	ldd	r24, Z+4	; 0x04
    4140:	95 81       	ldd	r25, Z+5	; 0x05
    4142:	9b 01       	movw	r18, r22
    4144:	28 1b       	sub	r18, r24
    4146:	39 0b       	sbc	r19, r25
    4148:	37 ff       	sbrs	r19, 7
    414a:	0f c0       	rjmp	.+30     	; 0x416a <TMRSRVC_insert+0x78>
    414c:	86 1b       	sub	r24, r22
    414e:	97 0b       	sbc	r25, r23
    4150:	95 83       	std	Z+5, r25	; 0x05
    4152:	84 83       	std	Z+4, r24	; 0x04
    4154:	db 82       	std	Y+3, r13	; 0x03
    4156:	ca 82       	std	Y+2, r12	; 0x02
    4158:	01 2b       	or	r16, r17
    415a:	29 f4       	brne	.+10     	; 0x4166 <TMRSRVC_insert+0x74>
    415c:	d0 93 15 05 	sts	0x0515, r29
    4160:	c0 93 14 05 	sts	0x0514, r28
    4164:	21 c0       	rjmp	.+66     	; 0x41a8 <TMRSRVC_insert+0xb6>
    4166:	f7 01       	movw	r30, r14
    4168:	0c c0       	rjmp	.+24     	; 0x4182 <TMRSRVC_insert+0x90>
    416a:	f6 01       	movw	r30, r12
    416c:	82 81       	ldd	r24, Z+2	; 0x02
    416e:	93 81       	ldd	r25, Z+3	; 0x03
    4170:	21 15       	cp	r18, r1
    4172:	31 05       	cpc	r19, r1
    4174:	49 f4       	brne	.+18     	; 0x4188 <TMRSRVC_insert+0x96>
    4176:	fd 01       	movw	r30, r26
    4178:	15 82       	std	Z+5, r1	; 0x05
    417a:	14 82       	std	Z+4, r1	; 0x04
    417c:	9b 83       	std	Y+3, r25	; 0x03
    417e:	8a 83       	std	Y+2, r24	; 0x02
    4180:	f6 01       	movw	r30, r12
    4182:	d3 83       	std	Z+3, r29	; 0x03
    4184:	c2 83       	std	Z+2, r28	; 0x02
    4186:	10 c0       	rjmp	.+32     	; 0x41a8 <TMRSRVC_insert+0xb6>
    4188:	fd 01       	movw	r30, r26
    418a:	35 83       	std	Z+5, r19	; 0x05
    418c:	24 83       	std	Z+4, r18	; 0x04
    418e:	00 97       	sbiw	r24, 0x00	; 0
    4190:	b9 f3       	breq	.-18     	; 0x4180 <TMRSRVC_insert+0x8e>
    4192:	0f 5f       	subi	r16, 0xFF	; 255
    4194:	1f 4f       	sbci	r17, 0xFF	; 255
    4196:	76 01       	movw	r14, r12
    4198:	6c 01       	movw	r12, r24
    419a:	80 91 13 05 	lds	r24, 0x0513
    419e:	90 e0       	ldi	r25, 0x00	; 0
    41a0:	08 17       	cp	r16, r24
    41a2:	19 07       	cpc	r17, r25
    41a4:	18 f2       	brcs	.-122    	; 0x412c <TMRSRVC_insert+0x3a>
    41a6:	ec cf       	rjmp	.-40     	; 0x4180 <TMRSRVC_insert+0x8e>
    41a8:	80 91 13 05 	lds	r24, 0x0513
    41ac:	8f 5f       	subi	r24, 0xFF	; 255
    41ae:	80 93 13 05 	sts	0x0513, r24
    41b2:	df 91       	pop	r29
    41b4:	cf 91       	pop	r28
    41b6:	1f 91       	pop	r17
    41b8:	0f 91       	pop	r16
    41ba:	ff 90       	pop	r15
    41bc:	ef 90       	pop	r14
    41be:	df 90       	pop	r13
    41c0:	cf 90       	pop	r12
    41c2:	08 95       	ret

000041c4 <TMRSRVC_open>:
    41c4:	88 e0       	ldi	r24, 0x08	; 8
    41c6:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    41ca:	88 23       	and	r24, r24
    41cc:	b9 f4       	brne	.+46     	; 0x41fc <TMRSRVC_open+0x38>
    41ce:	10 92 13 05 	sts	0x0513, r1
    41d2:	10 92 15 05 	sts	0x0515, r1
    41d6:	10 92 14 05 	sts	0x0514, r1
    41da:	10 92 ab 02 	sts	0x02AB, r1
    41de:	10 92 ac 02 	sts	0x02AC, r1
    41e2:	80 e1       	ldi	r24, 0x10	; 16
    41e4:	6c ef       	ldi	r22, 0xFC	; 252
    41e6:	71 e2       	ldi	r23, 0x21	; 33
    41e8:	0e 94 18 21 	call	0x4230	; 0x4230 <__ISR_attach>
    41ec:	0e 94 03 22 	call	0x4406	; 0x4406 <__TMRSRVC_init>
    41f0:	0e 94 01 21 	call	0x4202	; 0x4202 <__TMRSRVC_start>
    41f4:	88 e0       	ldi	r24, 0x08	; 8
    41f6:	61 e0       	ldi	r22, 0x01	; 1
    41f8:	0e 94 93 18 	call	0x3126	; 0x3126 <SYS_set_state>
    41fc:	88 e0       	ldi	r24, 0x08	; 8
    41fe:	91 e0       	ldi	r25, 0x01	; 1
    4200:	08 95       	ret

00004202 <__TMRSRVC_start>:
    4202:	ee e6       	ldi	r30, 0x6E	; 110
    4204:	f0 e0       	ldi	r31, 0x00	; 0
    4206:	80 81       	ld	r24, Z
    4208:	82 60       	ori	r24, 0x02	; 2
    420a:	80 83       	st	Z, r24
    420c:	08 95       	ret

0000420e <TMRSRVC_start>:
    420e:	81 e0       	ldi	r24, 0x01	; 1
    4210:	80 93 ac 02 	sts	0x02AC, r24
    4214:	08 95       	ret

00004216 <I2C_enable>:
    4216:	80 91 16 05 	lds	r24, 0x0516
    421a:	81 30       	cpi	r24, 0x01	; 1
    421c:	29 f4       	brne	.+10     	; 0x4228 <I2C_enable+0x12>
    421e:	80 91 bc 00 	lds	r24, 0x00BC
    4222:	84 60       	ori	r24, 0x04	; 4
    4224:	80 93 bc 00 	sts	0x00BC, r24
    4228:	08 95       	ret

0000422a <__I2C_init>:
    422a:	38 98       	cbi	0x07, 0	; 7
    422c:	39 98       	cbi	0x07, 1	; 7
    422e:	08 95       	ret

00004230 <__ISR_attach>:
    4230:	80 32       	cpi	r24, 0x20	; 32
    4232:	18 f0       	brcs	.+6      	; 0x423a <__ISR_attach+0xa>
    4234:	20 e0       	ldi	r18, 0x00	; 0
    4236:	30 e0       	ldi	r19, 0x00	; 0
    4238:	0a c0       	rjmp	.+20     	; 0x424e <__ISR_attach+0x1e>
    423a:	e8 2f       	mov	r30, r24
    423c:	f0 e0       	ldi	r31, 0x00	; 0
    423e:	ee 0f       	add	r30, r30
    4240:	ff 1f       	adc	r31, r31
    4242:	e5 5b       	subi	r30, 0xB5	; 181
    4244:	fd 4f       	sbci	r31, 0xFD	; 253
    4246:	20 81       	ld	r18, Z
    4248:	31 81       	ldd	r19, Z+1	; 0x01
    424a:	71 83       	std	Z+1, r23	; 0x01
    424c:	60 83       	st	Z, r22
    424e:	c9 01       	movw	r24, r18
    4250:	08 95       	ret

00004252 <__ATMEGA_init>:
    4252:	24 9a       	sbi	0x04, 4	; 4
    4254:	2c 9a       	sbi	0x05, 4	; 5
    4256:	08 95       	ret

00004258 <SPI_default_config>:
    4258:	83 e5       	ldi	r24, 0x53	; 83
    425a:	8c bd       	out	0x2c, r24	; 44
    425c:	81 e0       	ldi	r24, 0x01	; 1
    425e:	8d bd       	out	0x2d, r24	; 45
    4260:	8d e0       	ldi	r24, 0x0D	; 13
    4262:	8a 95       	dec	r24
    4264:	f1 f7       	brne	.-4      	; 0x4262 <SPI_default_config+0xa>
    4266:	08 95       	ret

00004268 <SPI_ATtiny0_config>:
    4268:	83 e5       	ldi	r24, 0x53	; 83
    426a:	8c bd       	out	0x2c, r24	; 44
    426c:	1d bc       	out	0x2d, r1	; 45
    426e:	84 ef       	ldi	r24, 0xF4	; 244
    4270:	91 e0       	ldi	r25, 0x01	; 1
    4272:	01 97       	sbiw	r24, 0x01	; 1
    4274:	f1 f7       	brne	.-4      	; 0x4272 <SPI_ATtiny0_config+0xa>
    4276:	08 95       	ret

00004278 <SPI_PSXC_config>:
    4278:	8f e7       	ldi	r24, 0x7F	; 127
    427a:	8c bd       	out	0x2c, r24	; 44
    427c:	1d bc       	out	0x2d, r1	; 45
    427e:	84 ef       	ldi	r24, 0xF4	; 244
    4280:	91 e0       	ldi	r25, 0x01	; 1
    4282:	01 97       	sbiw	r24, 0x01	; 1
    4284:	f1 f7       	brne	.-4      	; 0x4282 <SPI_PSXC_config+0xa>
    4286:	08 95       	ret

00004288 <SPI_LCD_config>:
    4288:	83 e5       	ldi	r24, 0x53	; 83
    428a:	8c bd       	out	0x2c, r24	; 44
    428c:	81 e0       	ldi	r24, 0x01	; 1
    428e:	8d bd       	out	0x2d, r24	; 45
    4290:	8d e0       	ldi	r24, 0x0D	; 13
    4292:	8a 95       	dec	r24
    4294:	f1 f7       	brne	.-4      	; 0x4292 <SPI_LCD_config+0xa>
    4296:	08 95       	ret

00004298 <SPI_FLASH_config>:
    4298:	83 e5       	ldi	r24, 0x53	; 83
    429a:	8c bd       	out	0x2c, r24	; 44
    429c:	81 e0       	ldi	r24, 0x01	; 1
    429e:	8d bd       	out	0x2d, r24	; 45
    42a0:	84 ef       	ldi	r24, 0xF4	; 244
    42a2:	91 e0       	ldi	r25, 0x01	; 1
    42a4:	01 97       	sbiw	r24, 0x01	; 1
    42a6:	f1 f7       	brne	.-4      	; 0x42a4 <SPI_FLASH_config+0xc>
    42a8:	08 95       	ret

000042aa <__SPI_init>:
    42aa:	25 9a       	sbi	0x04, 5	; 4
    42ac:	26 98       	cbi	0x04, 6	; 4
    42ae:	27 9a       	sbi	0x04, 7	; 4
    42b0:	20 9a       	sbi	0x04, 0	; 4
    42b2:	21 9a       	sbi	0x04, 1	; 4
    42b4:	22 9a       	sbi	0x04, 2	; 4
    42b6:	08 95       	ret

000042b8 <SPKR_beep>:
    42b8:	9b 01       	movw	r18, r22
    42ba:	ac 01       	movw	r20, r24
    42bc:	80 91 9c 02 	lds	r24, 0x029C
    42c0:	88 23       	and	r24, r24
    42c2:	81 f0       	breq	.+32     	; 0x42e4 <SPKR_beep+0x2c>
    42c4:	da 01       	movw	r26, r20
    42c6:	c9 01       	movw	r24, r18
    42c8:	88 0f       	add	r24, r24
    42ca:	99 1f       	adc	r25, r25
    42cc:	aa 1f       	adc	r26, r26
    42ce:	bb 1f       	adc	r27, r27
    42d0:	90 93 a8 02 	sts	0x02A8, r25
    42d4:	80 93 a7 02 	sts	0x02A7, r24
    42d8:	21 15       	cp	r18, r1
    42da:	31 05       	cpc	r19, r1
    42dc:	41 05       	cpc	r20, r1
    42de:	51 05       	cpc	r21, r1
    42e0:	09 f4       	brne	.+2      	; 0x42e4 <SPKR_beep+0x2c>
    42e2:	5f 98       	cbi	0x0b, 7	; 11
    42e4:	08 95       	ret

000042e6 <__SPKR_close>:
    42e6:	82 30       	cpi	r24, 0x02	; 2
    42e8:	29 f4       	brne	.+10     	; 0x42f4 <__SPKR_close+0xe>
    42ea:	80 91 81 00 	lds	r24, 0x0081
    42ee:	8e 7f       	andi	r24, 0xFE	; 254
    42f0:	80 93 81 00 	sts	0x0081, r24
    42f4:	80 91 9b 02 	lds	r24, 0x029B
    42f8:	81 30       	cpi	r24, 0x01	; 1
    42fa:	31 f4       	brne	.+12     	; 0x4308 <__SPKR_close+0x22>
    42fc:	80 91 9c 02 	lds	r24, 0x029C
    4300:	81 30       	cpi	r24, 0x01	; 1
    4302:	11 f4       	brne	.+4      	; 0x4308 <__SPKR_close+0x22>
    4304:	00 00       	nop
    4306:	08 95       	ret
    4308:	80 91 9b 02 	lds	r24, 0x029B
    430c:	81 30       	cpi	r24, 0x01	; 1
    430e:	21 f0       	breq	.+8      	; 0x4318 <__SPKR_close+0x32>
    4310:	80 91 9c 02 	lds	r24, 0x029C
    4314:	81 30       	cpi	r24, 0x01	; 1
    4316:	11 f4       	brne	.+4      	; 0x431c <__SPKR_close+0x36>
    4318:	5f 98       	cbi	0x0b, 7	; 11
    431a:	57 98       	cbi	0x0a, 7	; 10
    431c:	08 95       	ret

0000431e <STEPPER_set_decel_step_values>:
    431e:	ef 92       	push	r14
    4320:	ff 92       	push	r15
    4322:	0f 93       	push	r16
    4324:	1f 93       	push	r17
    4326:	cf 93       	push	r28
    4328:	df 93       	push	r29
    432a:	eb 01       	movw	r28, r22
    432c:	88 23       	and	r24, r24
    432e:	21 f0       	breq	.+8      	; 0x4338 <STEPPER_set_decel_step_values+0x1a>
    4330:	81 30       	cpi	r24, 0x01	; 1
    4332:	09 f0       	breq	.+2      	; 0x4336 <STEPPER_set_decel_step_values+0x18>
    4334:	5a c0       	rjmp	.+180    	; 0x43ea <STEPPER_set_decel_step_values+0xcc>
    4336:	2d c0       	rjmp	.+90     	; 0x4392 <STEPPER_set_decel_step_values+0x74>
    4338:	9a 01       	movw	r18, r20
    433a:	40 e0       	ldi	r20, 0x00	; 0
    433c:	50 e0       	ldi	r21, 0x00	; 0
    433e:	ca 01       	movw	r24, r20
    4340:	b9 01       	movw	r22, r18
    4342:	0e 94 e6 2c 	call	0x59cc	; 0x59cc <__mulsi3>
    4346:	20 91 ad 04 	lds	r18, 0x04AD
    434a:	30 91 ae 04 	lds	r19, 0x04AE
    434e:	22 0f       	add	r18, r18
    4350:	33 1f       	adc	r19, r19
    4352:	40 e0       	ldi	r20, 0x00	; 0
    4354:	50 e0       	ldi	r21, 0x00	; 0
    4356:	0e 94 18 2d 	call	0x5a30	; 0x5a30 <__udivmodsi4>
    435a:	79 01       	movw	r14, r18
    435c:	8a 01       	movw	r16, r20
    435e:	a8 01       	movw	r20, r16
    4360:	97 01       	movw	r18, r14
    4362:	22 0f       	add	r18, r18
    4364:	33 1f       	adc	r19, r19
    4366:	44 1f       	adc	r20, r20
    4368:	55 1f       	adc	r21, r21
    436a:	ce 01       	movw	r24, r28
    436c:	a0 e0       	ldi	r26, 0x00	; 0
    436e:	b0 e0       	ldi	r27, 0x00	; 0
    4370:	82 17       	cp	r24, r18
    4372:	93 07       	cpc	r25, r19
    4374:	a4 07       	cpc	r26, r20
    4376:	b5 07       	cpc	r27, r21
    4378:	28 f0       	brcs	.+10     	; 0x4384 <STEPPER_set_decel_step_values+0x66>
    437a:	f0 92 ba 04 	sts	0x04BA, r15
    437e:	e0 92 b9 04 	sts	0x04B9, r14
    4382:	33 c0       	rjmp	.+102    	; 0x43ea <STEPPER_set_decel_step_values+0xcc>
    4384:	d6 95       	lsr	r29
    4386:	c7 95       	ror	r28
    4388:	d0 93 ba 04 	sts	0x04BA, r29
    438c:	c0 93 b9 04 	sts	0x04B9, r28
    4390:	2c c0       	rjmp	.+88     	; 0x43ea <STEPPER_set_decel_step_values+0xcc>
    4392:	9a 01       	movw	r18, r20
    4394:	40 e0       	ldi	r20, 0x00	; 0
    4396:	50 e0       	ldi	r21, 0x00	; 0
    4398:	ca 01       	movw	r24, r20
    439a:	b9 01       	movw	r22, r18
    439c:	0e 94 e6 2c 	call	0x59cc	; 0x59cc <__mulsi3>
    43a0:	20 91 af 04 	lds	r18, 0x04AF
    43a4:	30 91 b0 04 	lds	r19, 0x04B0
    43a8:	22 0f       	add	r18, r18
    43aa:	33 1f       	adc	r19, r19
    43ac:	40 e0       	ldi	r20, 0x00	; 0
    43ae:	50 e0       	ldi	r21, 0x00	; 0
    43b0:	0e 94 18 2d 	call	0x5a30	; 0x5a30 <__udivmodsi4>
    43b4:	79 01       	movw	r14, r18
    43b6:	8a 01       	movw	r16, r20
    43b8:	a8 01       	movw	r20, r16
    43ba:	97 01       	movw	r18, r14
    43bc:	22 0f       	add	r18, r18
    43be:	33 1f       	adc	r19, r19
    43c0:	44 1f       	adc	r20, r20
    43c2:	55 1f       	adc	r21, r21
    43c4:	ce 01       	movw	r24, r28
    43c6:	a0 e0       	ldi	r26, 0x00	; 0
    43c8:	b0 e0       	ldi	r27, 0x00	; 0
    43ca:	82 17       	cp	r24, r18
    43cc:	93 07       	cpc	r25, r19
    43ce:	a4 07       	cpc	r26, r20
    43d0:	b5 07       	cpc	r27, r21
    43d2:	28 f0       	brcs	.+10     	; 0x43de <STEPPER_set_decel_step_values+0xc0>
    43d4:	f0 92 bc 04 	sts	0x04BC, r15
    43d8:	e0 92 bb 04 	sts	0x04BB, r14
    43dc:	06 c0       	rjmp	.+12     	; 0x43ea <STEPPER_set_decel_step_values+0xcc>
    43de:	d6 95       	lsr	r29
    43e0:	c7 95       	ror	r28
    43e2:	d0 93 bc 04 	sts	0x04BC, r29
    43e6:	c0 93 bb 04 	sts	0x04BB, r28
    43ea:	df 91       	pop	r29
    43ec:	cf 91       	pop	r28
    43ee:	1f 91       	pop	r17
    43f0:	0f 91       	pop	r16
    43f2:	ff 90       	pop	r15
    43f4:	ef 90       	pop	r14
    43f6:	08 95       	ret

000043f8 <__TIMER0_COMPA_vect>:
    43f8:	0e 94 0c 22 	call	0x4418	; 0x4418 <TMRSRVC_tick>
    43fc:	0e 94 4c 22 	call	0x4498	; 0x4498 <STEPPER_clk>
    4400:	0e 94 25 22 	call	0x444a	; 0x444a <SPKR_beep_clk>
    4404:	08 95       	ret

00004406 <__TMRSRVC_init>:
    4406:	84 b5       	in	r24, 0x24	; 36
    4408:	82 60       	ori	r24, 0x02	; 2
    440a:	84 bd       	out	0x24, r24	; 36
    440c:	85 b5       	in	r24, 0x25	; 37
    440e:	84 60       	ori	r24, 0x04	; 4
    4410:	85 bd       	out	0x25, r24	; 37
    4412:	8e e4       	ldi	r24, 0x4E	; 78
    4414:	87 bd       	out	0x27, r24	; 39
    4416:	08 95       	ret

00004418 <TMRSRVC_tick>:
    4418:	88 e0       	ldi	r24, 0x08	; 8
    441a:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    441e:	88 23       	and	r24, r24
    4420:	11 f4       	brne	.+4      	; 0x4426 <TMRSRVC_tick+0xe>
    4422:	84 e0       	ldi	r24, 0x04	; 4
    4424:	08 95       	ret
    4426:	80 91 ac 02 	lds	r24, 0x02AC
    442a:	88 23       	and	r24, r24
    442c:	11 f4       	brne	.+4      	; 0x4432 <TMRSRVC_tick+0x1a>
    442e:	83 e0       	ldi	r24, 0x03	; 3
    4430:	08 95       	ret
    4432:	80 91 ab 02 	lds	r24, 0x02AB
    4436:	88 23       	and	r24, r24
    4438:	11 f0       	breq	.+4      	; 0x443e <TMRSRVC_tick+0x26>
    443a:	82 e0       	ldi	r24, 0x02	; 2
    443c:	08 95       	ret
    443e:	0e 94 be 24 	call	0x497c	; 0x497c <TMRSRVC_process>
    4442:	81 30       	cpi	r24, 0x01	; 1
    4444:	e1 f3       	breq	.-8      	; 0x443e <TMRSRVC_tick+0x26>
    4446:	80 e0       	ldi	r24, 0x00	; 0
    4448:	08 95       	ret

0000444a <SPKR_beep_clk>:
    444a:	80 91 9c 02 	lds	r24, 0x029C
    444e:	81 30       	cpi	r24, 0x01	; 1
    4450:	11 f5       	brne	.+68     	; 0x4496 <SPKR_beep_clk+0x4c>
    4452:	80 91 a5 02 	lds	r24, 0x02A5
    4456:	90 91 a6 02 	lds	r25, 0x02A6
    445a:	20 91 a7 02 	lds	r18, 0x02A7
    445e:	30 91 a8 02 	lds	r19, 0x02A8
    4462:	28 0f       	add	r18, r24
    4464:	39 1f       	adc	r19, r25
    4466:	30 93 a6 02 	sts	0x02A6, r19
    446a:	20 93 a5 02 	sts	0x02A5, r18
    446e:	80 91 a5 02 	lds	r24, 0x02A5
    4472:	90 91 a6 02 	lds	r25, 0x02A6
    4476:	88 5e       	subi	r24, 0xE8	; 232
    4478:	93 40       	sbci	r25, 0x03	; 3
    447a:	6c f0       	brlt	.+26     	; 0x4496 <SPKR_beep_clk+0x4c>
    447c:	8b b1       	in	r24, 0x0b	; 11
    447e:	80 58       	subi	r24, 0x80	; 128
    4480:	8b b9       	out	0x0b, r24	; 11
    4482:	80 91 a5 02 	lds	r24, 0x02A5
    4486:	90 91 a6 02 	lds	r25, 0x02A6
    448a:	88 5e       	subi	r24, 0xE8	; 232
    448c:	93 40       	sbci	r25, 0x03	; 3
    448e:	90 93 a6 02 	sts	0x02A6, r25
    4492:	80 93 a5 02 	sts	0x02A5, r24
    4496:	08 95       	ret

00004498 <STEPPER_clk>:
    4498:	87 e0       	ldi	r24, 0x07	; 7
    449a:	0e 94 4b 18 	call	0x3096	; 0x3096 <SYS_get_state>
    449e:	81 30       	cpi	r24, 0x01	; 1
    44a0:	09 f0       	breq	.+2      	; 0x44a4 <STEPPER_clk+0xc>
    44a2:	aa c0       	rjmp	.+340    	; 0x45f8 <STEPPER_clk+0x160>
    44a4:	80 91 ad 04 	lds	r24, 0x04AD
    44a8:	90 91 ae 04 	lds	r25, 0x04AE
    44ac:	89 2b       	or	r24, r25
    44ae:	09 f1       	breq	.+66     	; 0x44f2 <STEPPER_clk+0x5a>
    44b0:	80 91 d1 04 	lds	r24, 0x04D1
    44b4:	90 91 d2 04 	lds	r25, 0x04D2
    44b8:	20 91 ad 04 	lds	r18, 0x04AD
    44bc:	30 91 ae 04 	lds	r19, 0x04AE
    44c0:	82 0f       	add	r24, r18
    44c2:	93 1f       	adc	r25, r19
    44c4:	90 93 d2 04 	sts	0x04D2, r25
    44c8:	80 93 d1 04 	sts	0x04D1, r24
    44cc:	80 91 d1 04 	lds	r24, 0x04D1
    44d0:	90 91 d2 04 	lds	r25, 0x04D2
    44d4:	88 5e       	subi	r24, 0xE8	; 232
    44d6:	93 40       	sbci	r25, 0x03	; 3
    44d8:	a4 f0       	brlt	.+40     	; 0x4502 <STEPPER_clk+0x6a>
    44da:	80 91 d1 04 	lds	r24, 0x04D1
    44de:	90 91 d2 04 	lds	r25, 0x04D2
    44e2:	88 5e       	subi	r24, 0xE8	; 232
    44e4:	93 40       	sbci	r25, 0x03	; 3
    44e6:	90 93 d2 04 	sts	0x04D2, r25
    44ea:	80 93 d1 04 	sts	0x04D1, r24
    44ee:	41 e0       	ldi	r20, 0x01	; 1
    44f0:	09 c0       	rjmp	.+18     	; 0x4504 <STEPPER_clk+0x6c>
    44f2:	80 91 a5 04 	lds	r24, 0x04A5
    44f6:	90 91 a6 04 	lds	r25, 0x04A6
    44fa:	90 93 aa 04 	sts	0x04AA, r25
    44fe:	80 93 a9 04 	sts	0x04A9, r24
    4502:	40 e0       	ldi	r20, 0x00	; 0
    4504:	80 91 af 04 	lds	r24, 0x04AF
    4508:	90 91 b0 04 	lds	r25, 0x04B0
    450c:	89 2b       	or	r24, r25
    450e:	09 f1       	breq	.+66     	; 0x4552 <STEPPER_clk+0xba>
    4510:	80 91 d3 04 	lds	r24, 0x04D3
    4514:	90 91 d4 04 	lds	r25, 0x04D4
    4518:	20 91 af 04 	lds	r18, 0x04AF
    451c:	30 91 b0 04 	lds	r19, 0x04B0
    4520:	82 0f       	add	r24, r18
    4522:	93 1f       	adc	r25, r19
    4524:	90 93 d4 04 	sts	0x04D4, r25
    4528:	80 93 d3 04 	sts	0x04D3, r24
    452c:	80 91 d3 04 	lds	r24, 0x04D3
    4530:	90 91 d4 04 	lds	r25, 0x04D4
    4534:	88 5e       	subi	r24, 0xE8	; 232
    4536:	93 40       	sbci	r25, 0x03	; 3
    4538:	a4 f0       	brlt	.+40     	; 0x4562 <STEPPER_clk+0xca>
    453a:	80 91 d3 04 	lds	r24, 0x04D3
    453e:	90 91 d4 04 	lds	r25, 0x04D4
    4542:	88 5e       	subi	r24, 0xE8	; 232
    4544:	93 40       	sbci	r25, 0x03	; 3
    4546:	90 93 d4 04 	sts	0x04D4, r25
    454a:	80 93 d3 04 	sts	0x04D3, r24
    454e:	61 e0       	ldi	r22, 0x01	; 1
    4550:	09 c0       	rjmp	.+18     	; 0x4564 <STEPPER_clk+0xcc>
    4552:	80 91 a7 04 	lds	r24, 0x04A7
    4556:	90 91 a8 04 	lds	r25, 0x04A8
    455a:	90 93 ac 04 	sts	0x04AC, r25
    455e:	80 93 ab 04 	sts	0x04AB, r24
    4562:	60 e0       	ldi	r22, 0x00	; 0
    4564:	84 2f       	mov	r24, r20
    4566:	0e 94 fd 22 	call	0x45fa	; 0x45fa <STEPPER_process_accel>
    456a:	80 91 cd 04 	lds	r24, 0x04CD
    456e:	90 91 ce 04 	lds	r25, 0x04CE
    4572:	20 91 a9 04 	lds	r18, 0x04A9
    4576:	30 91 aa 04 	lds	r19, 0x04AA
    457a:	28 0f       	add	r18, r24
    457c:	39 1f       	adc	r19, r25
    457e:	30 93 ce 04 	sts	0x04CE, r19
    4582:	20 93 cd 04 	sts	0x04CD, r18
    4586:	80 91 cd 04 	lds	r24, 0x04CD
    458a:	90 91 ce 04 	lds	r25, 0x04CE
    458e:	88 5e       	subi	r24, 0xE8	; 232
    4590:	93 40       	sbci	r25, 0x03	; 3
    4592:	14 f4       	brge	.+4      	; 0x4598 <STEPPER_clk+0x100>
    4594:	40 e0       	ldi	r20, 0x00	; 0
    4596:	0b c0       	rjmp	.+22     	; 0x45ae <STEPPER_clk+0x116>
    4598:	80 91 cd 04 	lds	r24, 0x04CD
    459c:	90 91 ce 04 	lds	r25, 0x04CE
    45a0:	88 5e       	subi	r24, 0xE8	; 232
    45a2:	93 40       	sbci	r25, 0x03	; 3
    45a4:	90 93 ce 04 	sts	0x04CE, r25
    45a8:	80 93 cd 04 	sts	0x04CD, r24
    45ac:	41 e0       	ldi	r20, 0x01	; 1
    45ae:	80 91 cf 04 	lds	r24, 0x04CF
    45b2:	90 91 d0 04 	lds	r25, 0x04D0
    45b6:	20 91 ab 04 	lds	r18, 0x04AB
    45ba:	30 91 ac 04 	lds	r19, 0x04AC
    45be:	28 0f       	add	r18, r24
    45c0:	39 1f       	adc	r19, r25
    45c2:	30 93 d0 04 	sts	0x04D0, r19
    45c6:	20 93 cf 04 	sts	0x04CF, r18
    45ca:	80 91 cf 04 	lds	r24, 0x04CF
    45ce:	90 91 d0 04 	lds	r25, 0x04D0
    45d2:	88 5e       	subi	r24, 0xE8	; 232
    45d4:	93 40       	sbci	r25, 0x03	; 3
    45d6:	14 f4       	brge	.+4      	; 0x45dc <STEPPER_clk+0x144>
    45d8:	60 e0       	ldi	r22, 0x00	; 0
    45da:	0b c0       	rjmp	.+22     	; 0x45f2 <STEPPER_clk+0x15a>
    45dc:	80 91 cf 04 	lds	r24, 0x04CF
    45e0:	90 91 d0 04 	lds	r25, 0x04D0
    45e4:	88 5e       	subi	r24, 0xE8	; 232
    45e6:	93 40       	sbci	r25, 0x03	; 3
    45e8:	90 93 d0 04 	sts	0x04D0, r25
    45ec:	80 93 cf 04 	sts	0x04CF, r24
    45f0:	61 e0       	ldi	r22, 0x01	; 1
    45f2:	84 2f       	mov	r24, r20
    45f4:	0e 94 42 23 	call	0x4684	; 0x4684 <STEPPER_process_run_mode>
    45f8:	08 95       	ret

000045fa <STEPPER_process_accel>:
    45fa:	88 23       	and	r24, r24
    45fc:	f1 f0       	breq	.+60     	; 0x463a <STEPPER_process_accel+0x40>
    45fe:	20 91 a5 04 	lds	r18, 0x04A5
    4602:	30 91 a6 04 	lds	r19, 0x04A6
    4606:	80 91 a9 04 	lds	r24, 0x04A9
    460a:	90 91 aa 04 	lds	r25, 0x04AA
    460e:	28 1b       	sub	r18, r24
    4610:	39 0b       	sbc	r19, r25
    4612:	12 16       	cp	r1, r18
    4614:	13 06       	cpc	r1, r19
    4616:	34 f4       	brge	.+12     	; 0x4624 <STEPPER_process_accel+0x2a>
    4618:	80 91 a9 04 	lds	r24, 0x04A9
    461c:	90 91 aa 04 	lds	r25, 0x04AA
    4620:	01 96       	adiw	r24, 0x01	; 1
    4622:	07 c0       	rjmp	.+14     	; 0x4632 <STEPPER_process_accel+0x38>
    4624:	23 2b       	or	r18, r19
    4626:	49 f0       	breq	.+18     	; 0x463a <STEPPER_process_accel+0x40>
    4628:	80 91 a9 04 	lds	r24, 0x04A9
    462c:	90 91 aa 04 	lds	r25, 0x04AA
    4630:	01 97       	sbiw	r24, 0x01	; 1
    4632:	90 93 aa 04 	sts	0x04AA, r25
    4636:	80 93 a9 04 	sts	0x04A9, r24
    463a:	66 23       	and	r22, r22
    463c:	11 f1       	breq	.+68     	; 0x4682 <STEPPER_process_accel+0x88>
    463e:	20 91 a7 04 	lds	r18, 0x04A7
    4642:	30 91 a8 04 	lds	r19, 0x04A8
    4646:	80 91 ab 04 	lds	r24, 0x04AB
    464a:	90 91 ac 04 	lds	r25, 0x04AC
    464e:	28 1b       	sub	r18, r24
    4650:	39 0b       	sbc	r19, r25
    4652:	12 16       	cp	r1, r18
    4654:	13 06       	cpc	r1, r19
    4656:	54 f4       	brge	.+20     	; 0x466c <STEPPER_process_accel+0x72>
    4658:	80 91 ab 04 	lds	r24, 0x04AB
    465c:	90 91 ac 04 	lds	r25, 0x04AC
    4660:	01 96       	adiw	r24, 0x01	; 1
    4662:	90 93 ac 04 	sts	0x04AC, r25
    4666:	80 93 ab 04 	sts	0x04AB, r24
    466a:	08 95       	ret
    466c:	23 2b       	or	r18, r19
    466e:	49 f0       	breq	.+18     	; 0x4682 <STEPPER_process_accel+0x88>
    4670:	80 91 ab 04 	lds	r24, 0x04AB
    4674:	90 91 ac 04 	lds	r25, 0x04AC
    4678:	01 97       	sbiw	r24, 0x01	; 1
    467a:	90 93 ac 04 	sts	0x04AC, r25
    467e:	80 93 ab 04 	sts	0x04AB, r24
    4682:	08 95       	ret

00004684 <STEPPER_process_run_mode>:
    4684:	0f 93       	push	r16
    4686:	1f 93       	push	r17
    4688:	18 2f       	mov	r17, r24
    468a:	06 2f       	mov	r16, r22
    468c:	80 91 d9 04 	lds	r24, 0x04D9
    4690:	88 23       	and	r24, r24
    4692:	09 f0       	breq	.+2      	; 0x4696 <STEPPER_process_run_mode+0x12>
    4694:	e7 c0       	rjmp	.+462    	; 0x4864 <STEPPER_process_run_mode+0x1e0>
    4696:	80 91 c1 04 	lds	r24, 0x04C1
    469a:	88 23       	and	r24, r24
    469c:	09 f0       	breq	.+2      	; 0x46a0 <STEPPER_process_run_mode+0x1c>
    469e:	5a c0       	rjmp	.+180    	; 0x4754 <STEPPER_process_run_mode+0xd0>
    46a0:	80 91 a9 04 	lds	r24, 0x04A9
    46a4:	90 91 aa 04 	lds	r25, 0x04AA
    46a8:	89 2b       	or	r24, r25
    46aa:	e9 f4       	brne	.+58     	; 0x46e6 <STEPPER_process_run_mode+0x62>
    46ac:	80 91 ad 02 	lds	r24, 0x02AD
    46b0:	83 7e       	andi	r24, 0xE3	; 227
    46b2:	80 93 ad 02 	sts	0x02AD, r24
    46b6:	10 92 ca 04 	sts	0x04CA, r1
    46ba:	80 91 d5 04 	lds	r24, 0x04D5
    46be:	88 23       	and	r24, r24
    46c0:	09 f4       	brne	.+2      	; 0x46c4 <STEPPER_process_run_mode+0x40>
    46c2:	5d c0       	rjmp	.+186    	; 0x477e <STEPPER_process_run_mode+0xfa>
    46c4:	60 91 c3 04 	lds	r22, 0x04C3
    46c8:	80 e0       	ldi	r24, 0x00	; 0
    46ca:	0e 94 99 24 	call	0x4932	; 0x4932 <STEPPER_stop>
    46ce:	e0 91 d7 04 	lds	r30, 0x04D7
    46d2:	f0 91 d8 04 	lds	r31, 0x04D8
    46d6:	30 97       	sbiw	r30, 0x00	; 0
    46d8:	09 f4       	brne	.+2      	; 0x46dc <STEPPER_process_run_mode+0x58>
    46da:	51 c0       	rjmp	.+162    	; 0x477e <STEPPER_process_run_mode+0xfa>
    46dc:	81 e0       	ldi	r24, 0x01	; 1
    46de:	80 83       	st	Z, r24
    46e0:	10 92 d5 04 	sts	0x04D5, r1
    46e4:	4c c0       	rjmp	.+152    	; 0x477e <STEPPER_process_run_mode+0xfa>
    46e6:	80 91 a3 04 	lds	r24, 0x04A3
    46ea:	81 30       	cpi	r24, 0x01	; 1
    46ec:	41 f4       	brne	.+16     	; 0x46fe <STEPPER_process_run_mode+0x7a>
    46ee:	80 91 b5 04 	lds	r24, 0x04B5
    46f2:	90 91 b6 04 	lds	r25, 0x04B6
    46f6:	01 97       	sbiw	r24, 0x01	; 1
    46f8:	11 f4       	brne	.+4      	; 0x46fe <STEPPER_process_run_mode+0x7a>
    46fa:	11 e0       	ldi	r17, 0x01	; 1
    46fc:	02 c0       	rjmp	.+4      	; 0x4702 <STEPPER_process_run_mode+0x7e>
    46fe:	11 23       	and	r17, r17
    4700:	f1 f1       	breq	.+124    	; 0x477e <STEPPER_process_run_mode+0xfa>
    4702:	e0 91 c8 04 	lds	r30, 0x04C8
    4706:	f0 e0       	ldi	r31, 0x00	; 0
    4708:	e6 54       	subi	r30, 0x46	; 70
    470a:	fe 4f       	sbci	r31, 0xFE	; 254
    470c:	90 91 ad 02 	lds	r25, 0x02AD
    4710:	93 7e       	andi	r25, 0xE3	; 227
    4712:	80 81       	ld	r24, Z
    4714:	89 2b       	or	r24, r25
    4716:	80 93 ad 02 	sts	0x02AD, r24
    471a:	80 91 c6 04 	lds	r24, 0x04C6
    471e:	88 23       	and	r24, r24
    4720:	21 f4       	brne	.+8      	; 0x472a <STEPPER_process_run_mode+0xa6>
    4722:	80 91 c8 04 	lds	r24, 0x04C8
    4726:	8f 5f       	subi	r24, 0xFF	; 255
    4728:	03 c0       	rjmp	.+6      	; 0x4730 <STEPPER_process_run_mode+0xac>
    472a:	80 91 c8 04 	lds	r24, 0x04C8
    472e:	81 50       	subi	r24, 0x01	; 1
    4730:	80 93 c8 04 	sts	0x04C8, r24
    4734:	80 91 c8 04 	lds	r24, 0x04C8
    4738:	83 70       	andi	r24, 0x03	; 3
    473a:	80 93 c8 04 	sts	0x04C8, r24
    473e:	81 e0       	ldi	r24, 0x01	; 1
    4740:	80 93 ca 04 	sts	0x04CA, r24
    4744:	80 91 a3 04 	lds	r24, 0x04A3
    4748:	81 30       	cpi	r24, 0x01	; 1
    474a:	c9 f4       	brne	.+50     	; 0x477e <STEPPER_process_run_mode+0xfa>
    474c:	80 e0       	ldi	r24, 0x00	; 0
    474e:	0e 94 45 24 	call	0x488a	; 0x488a <STEPPER_process_step_mode>
    4752:	15 c0       	rjmp	.+42     	; 0x477e <STEPPER_process_run_mode+0xfa>
    4754:	90 91 ad 02 	lds	r25, 0x02AD
    4758:	93 7e       	andi	r25, 0xE3	; 227
    475a:	90 93 ad 02 	sts	0x02AD, r25
    475e:	e0 91 c8 04 	lds	r30, 0x04C8
    4762:	f0 e0       	ldi	r31, 0x00	; 0
    4764:	e6 54       	subi	r30, 0x46	; 70
    4766:	fe 4f       	sbci	r31, 0xFE	; 254
    4768:	80 81       	ld	r24, Z
    476a:	89 2b       	or	r24, r25
    476c:	80 93 ad 02 	sts	0x02AD, r24
    4770:	82 e0       	ldi	r24, 0x02	; 2
    4772:	80 93 ca 04 	sts	0x04CA, r24
    4776:	10 92 aa 04 	sts	0x04AA, r1
    477a:	10 92 a9 04 	sts	0x04A9, r1
    477e:	80 91 c2 04 	lds	r24, 0x04C2
    4782:	88 23       	and	r24, r24
    4784:	09 f0       	breq	.+2      	; 0x4788 <STEPPER_process_run_mode+0x104>
    4786:	59 c0       	rjmp	.+178    	; 0x483a <STEPPER_process_run_mode+0x1b6>
    4788:	80 91 ab 04 	lds	r24, 0x04AB
    478c:	90 91 ac 04 	lds	r25, 0x04AC
    4790:	89 2b       	or	r24, r25
    4792:	e9 f4       	brne	.+58     	; 0x47ce <STEPPER_process_run_mode+0x14a>
    4794:	80 91 ad 02 	lds	r24, 0x02AD
    4798:	8f 71       	andi	r24, 0x1F	; 31
    479a:	80 93 ad 02 	sts	0x02AD, r24
    479e:	10 92 cb 04 	sts	0x04CB, r1
    47a2:	80 91 d6 04 	lds	r24, 0x04D6
    47a6:	88 23       	and	r24, r24
    47a8:	09 f4       	brne	.+2      	; 0x47ac <STEPPER_process_run_mode+0x128>
    47aa:	5c c0       	rjmp	.+184    	; 0x4864 <STEPPER_process_run_mode+0x1e0>
    47ac:	60 91 c4 04 	lds	r22, 0x04C4
    47b0:	81 e0       	ldi	r24, 0x01	; 1
    47b2:	0e 94 99 24 	call	0x4932	; 0x4932 <STEPPER_stop>
    47b6:	e0 91 d7 04 	lds	r30, 0x04D7
    47ba:	f0 91 d8 04 	lds	r31, 0x04D8
    47be:	30 97       	sbiw	r30, 0x00	; 0
    47c0:	09 f4       	brne	.+2      	; 0x47c4 <STEPPER_process_run_mode+0x140>
    47c2:	50 c0       	rjmp	.+160    	; 0x4864 <STEPPER_process_run_mode+0x1e0>
    47c4:	81 e0       	ldi	r24, 0x01	; 1
    47c6:	81 83       	std	Z+1, r24	; 0x01
    47c8:	10 92 d6 04 	sts	0x04D6, r1
    47cc:	4b c0       	rjmp	.+150    	; 0x4864 <STEPPER_process_run_mode+0x1e0>
    47ce:	80 91 a4 04 	lds	r24, 0x04A4
    47d2:	81 30       	cpi	r24, 0x01	; 1
    47d4:	41 f4       	brne	.+16     	; 0x47e6 <STEPPER_process_run_mode+0x162>
    47d6:	80 91 b7 04 	lds	r24, 0x04B7
    47da:	90 91 b8 04 	lds	r25, 0x04B8
    47de:	01 97       	sbiw	r24, 0x01	; 1
    47e0:	11 f4       	brne	.+4      	; 0x47e6 <STEPPER_process_run_mode+0x162>
    47e2:	01 e0       	ldi	r16, 0x01	; 1
    47e4:	02 c0       	rjmp	.+4      	; 0x47ea <STEPPER_process_run_mode+0x166>
    47e6:	00 23       	and	r16, r16
    47e8:	e9 f1       	breq	.+122    	; 0x4864 <STEPPER_process_run_mode+0x1e0>
    47ea:	e0 91 c9 04 	lds	r30, 0x04C9
    47ee:	f0 e0       	ldi	r31, 0x00	; 0
    47f0:	e2 54       	subi	r30, 0x42	; 66
    47f2:	fe 4f       	sbci	r31, 0xFE	; 254
    47f4:	90 91 ad 02 	lds	r25, 0x02AD
    47f8:	9f 71       	andi	r25, 0x1F	; 31
    47fa:	80 81       	ld	r24, Z
    47fc:	89 2b       	or	r24, r25
    47fe:	80 93 ad 02 	sts	0x02AD, r24
    4802:	80 91 c7 04 	lds	r24, 0x04C7
    4806:	88 23       	and	r24, r24
    4808:	21 f4       	brne	.+8      	; 0x4812 <STEPPER_process_run_mode+0x18e>
    480a:	80 91 c9 04 	lds	r24, 0x04C9
    480e:	8f 5f       	subi	r24, 0xFF	; 255
    4810:	03 c0       	rjmp	.+6      	; 0x4818 <STEPPER_process_run_mode+0x194>
    4812:	80 91 c9 04 	lds	r24, 0x04C9
    4816:	81 50       	subi	r24, 0x01	; 1
    4818:	80 93 c9 04 	sts	0x04C9, r24
    481c:	80 91 c9 04 	lds	r24, 0x04C9
    4820:	83 70       	andi	r24, 0x03	; 3
    4822:	80 93 c9 04 	sts	0x04C9, r24
    4826:	81 e0       	ldi	r24, 0x01	; 1
    4828:	80 93 cb 04 	sts	0x04CB, r24
    482c:	80 91 a4 04 	lds	r24, 0x04A4
    4830:	81 30       	cpi	r24, 0x01	; 1
    4832:	c1 f4       	brne	.+48     	; 0x4864 <STEPPER_process_run_mode+0x1e0>
    4834:	0e 94 45 24 	call	0x488a	; 0x488a <STEPPER_process_step_mode>
    4838:	15 c0       	rjmp	.+42     	; 0x4864 <STEPPER_process_run_mode+0x1e0>
    483a:	90 91 ad 02 	lds	r25, 0x02AD
    483e:	9f 71       	andi	r25, 0x1F	; 31
    4840:	90 93 ad 02 	sts	0x02AD, r25
    4844:	e0 91 c9 04 	lds	r30, 0x04C9
    4848:	f0 e0       	ldi	r31, 0x00	; 0
    484a:	e2 54       	subi	r30, 0x42	; 66
    484c:	fe 4f       	sbci	r31, 0xFE	; 254
    484e:	80 81       	ld	r24, Z
    4850:	89 2b       	or	r24, r25
    4852:	80 93 ad 02 	sts	0x02AD, r24
    4856:	82 e0       	ldi	r24, 0x02	; 2
    4858:	80 93 cb 04 	sts	0x04CB, r24
    485c:	10 92 ac 04 	sts	0x04AC, r1
    4860:	10 92 ab 04 	sts	0x04AB, r1
    4864:	80 91 cc 04 	lds	r24, 0x04CC
    4868:	88 23       	and	r24, r24
    486a:	31 f4       	brne	.+12     	; 0x4878 <STEPPER_process_run_mode+0x1f4>
    486c:	8d ea       	ldi	r24, 0xAD	; 173
    486e:	92 e0       	ldi	r25, 0x02	; 2
    4870:	61 2f       	mov	r22, r17
    4872:	40 2f       	mov	r20, r16
    4874:	0e 94 2c 25 	call	0x4a58	; 0x4a58 <STEPPER_process_pwm>
    4878:	88 b1       	in	r24, 0x08	; 8
    487a:	83 70       	andi	r24, 0x03	; 3
    487c:	90 91 ad 02 	lds	r25, 0x02AD
    4880:	89 2b       	or	r24, r25
    4882:	88 b9       	out	0x08, r24	; 8
    4884:	1f 91       	pop	r17
    4886:	0f 91       	pop	r16
    4888:	08 95       	ret

0000488a <STEPPER_process_step_mode>:
    488a:	88 23       	and	r24, r24
    488c:	21 f0       	breq	.+8      	; 0x4896 <STEPPER_process_step_mode+0xc>
    488e:	81 30       	cpi	r24, 0x01	; 1
    4890:	09 f0       	breq	.+2      	; 0x4894 <STEPPER_process_step_mode+0xa>
    4892:	4e c0       	rjmp	.+156    	; 0x4930 <STEPPER_process_step_mode+0xa6>
    4894:	27 c0       	rjmp	.+78     	; 0x48e4 <STEPPER_process_step_mode+0x5a>
    4896:	80 91 b5 04 	lds	r24, 0x04B5
    489a:	90 91 b6 04 	lds	r25, 0x04B6
    489e:	89 2b       	or	r24, r25
    48a0:	49 f0       	breq	.+18     	; 0x48b4 <STEPPER_process_step_mode+0x2a>
    48a2:	80 91 b5 04 	lds	r24, 0x04B5
    48a6:	90 91 b6 04 	lds	r25, 0x04B6
    48aa:	01 97       	sbiw	r24, 0x01	; 1
    48ac:	90 93 b6 04 	sts	0x04B6, r25
    48b0:	80 93 b5 04 	sts	0x04B5, r24
    48b4:	80 91 d5 04 	lds	r24, 0x04D5
    48b8:	88 23       	and	r24, r24
    48ba:	d1 f5       	brne	.+116    	; 0x4930 <STEPPER_process_step_mode+0xa6>
    48bc:	20 91 b5 04 	lds	r18, 0x04B5
    48c0:	30 91 b6 04 	lds	r19, 0x04B6
    48c4:	80 91 b9 04 	lds	r24, 0x04B9
    48c8:	90 91 ba 04 	lds	r25, 0x04BA
    48cc:	28 17       	cp	r18, r24
    48ce:	39 07       	cpc	r19, r25
    48d0:	79 f5       	brne	.+94     	; 0x4930 <STEPPER_process_step_mode+0xa6>
    48d2:	80 e0       	ldi	r24, 0x00	; 0
    48d4:	60 e0       	ldi	r22, 0x00	; 0
    48d6:	70 e0       	ldi	r23, 0x00	; 0
    48d8:	0e 94 4f 17 	call	0x2e9e	; 0x2e9e <STEPPER_set_speed>
    48dc:	81 e0       	ldi	r24, 0x01	; 1
    48de:	80 93 d5 04 	sts	0x04D5, r24
    48e2:	08 95       	ret
    48e4:	80 91 b7 04 	lds	r24, 0x04B7
    48e8:	90 91 b8 04 	lds	r25, 0x04B8
    48ec:	89 2b       	or	r24, r25
    48ee:	49 f0       	breq	.+18     	; 0x4902 <STEPPER_process_step_mode+0x78>
    48f0:	80 91 b7 04 	lds	r24, 0x04B7
    48f4:	90 91 b8 04 	lds	r25, 0x04B8
    48f8:	01 97       	sbiw	r24, 0x01	; 1
    48fa:	90 93 b8 04 	sts	0x04B8, r25
    48fe:	80 93 b7 04 	sts	0x04B7, r24
    4902:	80 91 d6 04 	lds	r24, 0x04D6
    4906:	88 23       	and	r24, r24
    4908:	99 f4       	brne	.+38     	; 0x4930 <STEPPER_process_step_mode+0xa6>
    490a:	20 91 b7 04 	lds	r18, 0x04B7
    490e:	30 91 b8 04 	lds	r19, 0x04B8
    4912:	80 91 bb 04 	lds	r24, 0x04BB
    4916:	90 91 bc 04 	lds	r25, 0x04BC
    491a:	28 17       	cp	r18, r24
    491c:	39 07       	cpc	r19, r25
    491e:	41 f4       	brne	.+16     	; 0x4930 <STEPPER_process_step_mode+0xa6>
    4920:	81 e0       	ldi	r24, 0x01	; 1
    4922:	60 e0       	ldi	r22, 0x00	; 0
    4924:	70 e0       	ldi	r23, 0x00	; 0
    4926:	0e 94 4f 17 	call	0x2e9e	; 0x2e9e <STEPPER_set_speed>
    492a:	81 e0       	ldi	r24, 0x01	; 1
    492c:	80 93 d6 04 	sts	0x04D6, r24
    4930:	08 95       	ret

00004932 <STEPPER_stop>:
    4932:	0f 93       	push	r16
    4934:	1f 93       	push	r17
    4936:	18 2f       	mov	r17, r24
    4938:	06 2f       	mov	r16, r22
    493a:	66 23       	and	r22, r22
    493c:	49 f4       	brne	.+18     	; 0x4950 <STEPPER_stop+0x1e>
    493e:	60 e0       	ldi	r22, 0x00	; 0
    4940:	70 e0       	ldi	r23, 0x00	; 0
    4942:	0e 94 4f 17 	call	0x2e9e	; 0x2e9e <STEPPER_set_speed>
    4946:	81 2f       	mov	r24, r17
    4948:	60 e0       	ldi	r22, 0x00	; 0
    494a:	70 e0       	ldi	r23, 0x00	; 0
    494c:	0e 94 e9 1f 	call	0x3fd2	; 0x3fd2 <STEPPER_set_steps>
    4950:	81 e0       	ldi	r24, 0x01	; 1
    4952:	80 93 d9 04 	sts	0x04D9, r24
    4956:	11 30       	cpi	r17, 0x01	; 1
    4958:	51 f0       	breq	.+20     	; 0x496e <STEPPER_stop+0x3c>
    495a:	11 30       	cpi	r17, 0x01	; 1
    495c:	18 f0       	brcs	.+6      	; 0x4964 <STEPPER_stop+0x32>
    495e:	12 30       	cpi	r17, 0x02	; 2
    4960:	41 f4       	brne	.+16     	; 0x4972 <STEPPER_stop+0x40>
    4962:	03 c0       	rjmp	.+6      	; 0x496a <STEPPER_stop+0x38>
    4964:	00 93 c1 04 	sts	0x04C1, r16
    4968:	04 c0       	rjmp	.+8      	; 0x4972 <STEPPER_stop+0x40>
    496a:	00 93 c1 04 	sts	0x04C1, r16
    496e:	00 93 c2 04 	sts	0x04C2, r16
    4972:	10 92 d9 04 	sts	0x04D9, r1
    4976:	1f 91       	pop	r17
    4978:	0f 91       	pop	r16
    497a:	08 95       	ret

0000497c <TMRSRVC_process>:
    497c:	ff 92       	push	r15
    497e:	0f 93       	push	r16
    4980:	1f 93       	push	r17
    4982:	cf 93       	push	r28
    4984:	df 93       	push	r29
    4986:	80 91 13 05 	lds	r24, 0x0513
    498a:	88 23       	and	r24, r24
    498c:	09 f4       	brne	.+2      	; 0x4990 <TMRSRVC_process+0x14>
    498e:	59 c0       	rjmp	.+178    	; 0x4a42 <TMRSRVC_process+0xc6>
    4990:	00 91 14 05 	lds	r16, 0x0514
    4994:	10 91 15 05 	lds	r17, 0x0515
    4998:	f8 01       	movw	r30, r16
    499a:	c0 81       	ld	r28, Z
    499c:	d1 81       	ldd	r29, Z+1	; 0x01
    499e:	8c 81       	ldd	r24, Y+4	; 0x04
    49a0:	9d 81       	ldd	r25, Y+5	; 0x05
    49a2:	01 97       	sbiw	r24, 0x01	; 1
    49a4:	9d 83       	std	Y+5, r25	; 0x05
    49a6:	8c 83       	std	Y+4, r24	; 0x04
    49a8:	18 16       	cp	r1, r24
    49aa:	19 06       	cpc	r1, r25
    49ac:	0c f4       	brge	.+2      	; 0x49b0 <TMRSRVC_process+0x34>
    49ae:	49 c0       	rjmp	.+146    	; 0x4a42 <TMRSRVC_process+0xc6>
    49b0:	89 81       	ldd	r24, Y+1	; 0x01
    49b2:	80 ff       	sbrs	r24, 0
    49b4:	05 c0       	rjmp	.+10     	; 0x49c0 <TMRSRVC_process+0x44>
    49b6:	8e 81       	ldd	r24, Y+6	; 0x06
    49b8:	88 23       	and	r24, r24
    49ba:	11 f4       	brne	.+4      	; 0x49c0 <TMRSRVC_process+0x44>
    49bc:	81 e0       	ldi	r24, 0x01	; 1
    49be:	8e 83       	std	Y+6, r24	; 0x06
    49c0:	89 81       	ldd	r24, Y+1	; 0x01
    49c2:	81 ff       	sbrs	r24, 1
    49c4:	03 c0       	rjmp	.+6      	; 0x49cc <TMRSRVC_process+0x50>
    49c6:	ef 81       	ldd	r30, Y+7	; 0x07
    49c8:	f8 85       	ldd	r31, Y+8	; 0x08
    49ca:	09 95       	icall
    49cc:	80 91 13 05 	lds	r24, 0x0513
    49d0:	82 30       	cpi	r24, 0x02	; 2
    49d2:	a8 f0       	brcs	.+42     	; 0x49fe <TMRSRVC_process+0x82>
    49d4:	f8 01       	movw	r30, r16
    49d6:	82 81       	ldd	r24, Z+2	; 0x02
    49d8:	93 81       	ldd	r25, Z+3	; 0x03
    49da:	90 93 15 05 	sts	0x0515, r25
    49de:	80 93 14 05 	sts	0x0514, r24
    49e2:	13 82       	std	Z+3, r1	; 0x03
    49e4:	12 82       	std	Z+2, r1	; 0x02
    49e6:	e0 91 00 00 	lds	r30, 0x0000
    49ea:	f0 91 01 00 	lds	r31, 0x0001
    49ee:	84 81       	ldd	r24, Z+4	; 0x04
    49f0:	95 81       	ldd	r25, Z+5	; 0x05
    49f2:	18 16       	cp	r1, r24
    49f4:	19 06       	cpc	r1, r25
    49f6:	3c f0       	brlt	.+14     	; 0x4a06 <TMRSRVC_process+0x8a>
    49f8:	ff 24       	eor	r15, r15
    49fa:	f3 94       	inc	r15
    49fc:	05 c0       	rjmp	.+10     	; 0x4a08 <TMRSRVC_process+0x8c>
    49fe:	10 92 15 05 	sts	0x0515, r1
    4a02:	10 92 14 05 	sts	0x0514, r1
    4a06:	ff 24       	eor	r15, r15
    4a08:	80 91 13 05 	lds	r24, 0x0513
    4a0c:	81 50       	subi	r24, 0x01	; 1
    4a0e:	80 93 13 05 	sts	0x0513, r24
    4a12:	80 91 13 05 	lds	r24, 0x0513
    4a16:	88 23       	and	r24, r24
    4a18:	11 f4       	brne	.+4      	; 0x4a1e <TMRSRVC_process+0xa2>
    4a1a:	0e 94 29 25 	call	0x4a52	; 0x4a52 <TMRSRVC_stop>
    4a1e:	89 81       	ldd	r24, Y+1	; 0x01
    4a20:	82 ff       	sbrs	r24, 2
    4a22:	08 c0       	rjmp	.+16     	; 0x4a34 <TMRSRVC_process+0xb8>
    4a24:	8a 81       	ldd	r24, Y+2	; 0x02
    4a26:	9b 81       	ldd	r25, Y+3	; 0x03
    4a28:	9d 83       	std	Y+5, r25	; 0x05
    4a2a:	8c 83       	std	Y+4, r24	; 0x04
    4a2c:	c8 01       	movw	r24, r16
    4a2e:	0e 94 79 20 	call	0x40f2	; 0x40f2 <TMRSRVC_insert>
    4a32:	08 c0       	rjmp	.+16     	; 0x4a44 <TMRSRVC_process+0xc8>
    4a34:	c8 01       	movw	r24, r16
    4a36:	0e 94 32 2e 	call	0x5c64	; 0x5c64 <free>
    4a3a:	89 81       	ldd	r24, Y+1	; 0x01
    4a3c:	8f 7e       	andi	r24, 0xEF	; 239
    4a3e:	89 83       	std	Y+1, r24	; 0x01
    4a40:	01 c0       	rjmp	.+2      	; 0x4a44 <TMRSRVC_process+0xc8>
    4a42:	ff 24       	eor	r15, r15
    4a44:	8f 2d       	mov	r24, r15
    4a46:	df 91       	pop	r29
    4a48:	cf 91       	pop	r28
    4a4a:	1f 91       	pop	r17
    4a4c:	0f 91       	pop	r16
    4a4e:	ff 90       	pop	r15
    4a50:	08 95       	ret

00004a52 <TMRSRVC_stop>:
    4a52:	10 92 ac 02 	sts	0x02AC, r1
    4a56:	08 95       	ret

00004a58 <STEPPER_process_pwm>:
    4a58:	fc 01       	movw	r30, r24
    4a5a:	80 91 ca 04 	lds	r24, 0x04CA
    4a5e:	82 30       	cpi	r24, 0x02	; 2
    4a60:	69 f4       	brne	.+26     	; 0x4a7c <STEPPER_process_pwm+0x24>
    4a62:	80 91 b1 02 	lds	r24, 0x02B1
    4a66:	91 e0       	ldi	r25, 0x01	; 1
    4a68:	89 27       	eor	r24, r25
    4a6a:	80 93 b1 02 	sts	0x02B1, r24
    4a6e:	88 23       	and	r24, r24
    4a70:	09 f0       	breq	.+2      	; 0x4a74 <STEPPER_process_pwm+0x1c>
    4a72:	3e c0       	rjmp	.+124    	; 0x4af0 <STEPPER_process_pwm+0x98>
    4a74:	80 81       	ld	r24, Z
    4a76:	83 7e       	andi	r24, 0xE3	; 227
    4a78:	80 83       	st	Z, r24
    4a7a:	3a c0       	rjmp	.+116    	; 0x4af0 <STEPPER_process_pwm+0x98>
    4a7c:	80 91 a9 04 	lds	r24, 0x04A9
    4a80:	90 91 aa 04 	lds	r25, 0x04AA
    4a84:	c3 97       	sbiw	r24, 0x33	; 51
    4a86:	a4 f5       	brge	.+104    	; 0x4af0 <STEPPER_process_pwm+0x98>
    4a88:	66 23       	and	r22, r22
    4a8a:	d1 f0       	breq	.+52     	; 0x4ac0 <STEPPER_process_pwm+0x68>
    4a8c:	20 91 a9 04 	lds	r18, 0x04A9
    4a90:	30 91 aa 04 	lds	r19, 0x04AA
    4a94:	80 e6       	ldi	r24, 0x60	; 96
    4a96:	90 e0       	ldi	r25, 0x00	; 0
    4a98:	bc 01       	movw	r22, r24
    4a9a:	26 9f       	mul	r18, r22
    4a9c:	c0 01       	movw	r24, r0
    4a9e:	27 9f       	mul	r18, r23
    4aa0:	90 0d       	add	r25, r0
    4aa2:	36 9f       	mul	r19, r22
    4aa4:	90 0d       	add	r25, r0
    4aa6:	11 24       	eor	r1, r1
    4aa8:	88 0f       	add	r24, r24
    4aaa:	89 2f       	mov	r24, r25
    4aac:	88 1f       	adc	r24, r24
    4aae:	99 0b       	sbc	r25, r25
    4ab0:	90 93 be 04 	sts	0x04BE, r25
    4ab4:	80 93 bd 04 	sts	0x04BD, r24
    4ab8:	81 e0       	ldi	r24, 0x01	; 1
    4aba:	80 93 af 02 	sts	0x02AF, r24
    4abe:	18 c0       	rjmp	.+48     	; 0x4af0 <STEPPER_process_pwm+0x98>
    4ac0:	80 91 af 02 	lds	r24, 0x02AF
    4ac4:	88 23       	and	r24, r24
    4ac6:	a1 f0       	breq	.+40     	; 0x4af0 <STEPPER_process_pwm+0x98>
    4ac8:	80 91 bd 04 	lds	r24, 0x04BD
    4acc:	90 91 be 04 	lds	r25, 0x04BE
    4ad0:	01 97       	sbiw	r24, 0x01	; 1
    4ad2:	90 93 be 04 	sts	0x04BE, r25
    4ad6:	80 93 bd 04 	sts	0x04BD, r24
    4ada:	80 91 bd 04 	lds	r24, 0x04BD
    4ade:	90 91 be 04 	lds	r25, 0x04BE
    4ae2:	89 2b       	or	r24, r25
    4ae4:	29 f4       	brne	.+10     	; 0x4af0 <STEPPER_process_pwm+0x98>
    4ae6:	80 81       	ld	r24, Z
    4ae8:	83 7e       	andi	r24, 0xE3	; 227
    4aea:	80 83       	st	Z, r24
    4aec:	10 92 af 02 	sts	0x02AF, r1
    4af0:	80 91 cb 04 	lds	r24, 0x04CB
    4af4:	82 30       	cpi	r24, 0x02	; 2
    4af6:	69 f4       	brne	.+26     	; 0x4b12 <STEPPER_process_pwm+0xba>
    4af8:	80 91 b0 02 	lds	r24, 0x02B0
    4afc:	91 e0       	ldi	r25, 0x01	; 1
    4afe:	89 27       	eor	r24, r25
    4b00:	80 93 b0 02 	sts	0x02B0, r24
    4b04:	88 23       	and	r24, r24
    4b06:	09 f0       	breq	.+2      	; 0x4b0a <STEPPER_process_pwm+0xb2>
    4b08:	3e c0       	rjmp	.+124    	; 0x4b86 <STEPPER_process_pwm+0x12e>
    4b0a:	80 81       	ld	r24, Z
    4b0c:	8f 71       	andi	r24, 0x1F	; 31
    4b0e:	80 83       	st	Z, r24
    4b10:	08 95       	ret
    4b12:	80 91 ab 04 	lds	r24, 0x04AB
    4b16:	90 91 ac 04 	lds	r25, 0x04AC
    4b1a:	c3 97       	sbiw	r24, 0x33	; 51
    4b1c:	a4 f5       	brge	.+104    	; 0x4b86 <STEPPER_process_pwm+0x12e>
    4b1e:	44 23       	and	r20, r20
    4b20:	d1 f0       	breq	.+52     	; 0x4b56 <STEPPER_process_pwm+0xfe>
    4b22:	20 91 ab 04 	lds	r18, 0x04AB
    4b26:	30 91 ac 04 	lds	r19, 0x04AC
    4b2a:	80 e6       	ldi	r24, 0x60	; 96
    4b2c:	90 e0       	ldi	r25, 0x00	; 0
    4b2e:	ac 01       	movw	r20, r24
    4b30:	24 9f       	mul	r18, r20
    4b32:	c0 01       	movw	r24, r0
    4b34:	25 9f       	mul	r18, r21
    4b36:	90 0d       	add	r25, r0
    4b38:	34 9f       	mul	r19, r20
    4b3a:	90 0d       	add	r25, r0
    4b3c:	11 24       	eor	r1, r1
    4b3e:	88 0f       	add	r24, r24
    4b40:	89 2f       	mov	r24, r25
    4b42:	88 1f       	adc	r24, r24
    4b44:	99 0b       	sbc	r25, r25
    4b46:	90 93 c0 04 	sts	0x04C0, r25
    4b4a:	80 93 bf 04 	sts	0x04BF, r24
    4b4e:	81 e0       	ldi	r24, 0x01	; 1
    4b50:	80 93 ae 02 	sts	0x02AE, r24
    4b54:	08 95       	ret
    4b56:	80 91 ae 02 	lds	r24, 0x02AE
    4b5a:	88 23       	and	r24, r24
    4b5c:	a1 f0       	breq	.+40     	; 0x4b86 <STEPPER_process_pwm+0x12e>
    4b5e:	80 91 bf 04 	lds	r24, 0x04BF
    4b62:	90 91 c0 04 	lds	r25, 0x04C0
    4b66:	01 97       	sbiw	r24, 0x01	; 1
    4b68:	90 93 c0 04 	sts	0x04C0, r25
    4b6c:	80 93 bf 04 	sts	0x04BF, r24
    4b70:	80 91 bf 04 	lds	r24, 0x04BF
    4b74:	90 91 c0 04 	lds	r25, 0x04C0
    4b78:	89 2b       	or	r24, r25
    4b7a:	29 f4       	brne	.+10     	; 0x4b86 <STEPPER_process_pwm+0x12e>
    4b7c:	80 81       	ld	r24, Z
    4b7e:	8f 71       	andi	r24, 0x1F	; 31
    4b80:	80 83       	st	Z, r24
    4b82:	10 92 ae 02 	sts	0x02AE, r1
    4b86:	08 95       	ret

00004b88 <__subsf3>:
    4b88:	50 58       	subi	r21, 0x80	; 128

00004b8a <__addsf3>:
    4b8a:	bb 27       	eor	r27, r27
    4b8c:	aa 27       	eor	r26, r26
    4b8e:	0e d0       	rcall	.+28     	; 0x4bac <__addsf3x>
    4b90:	75 c1       	rjmp	.+746    	; 0x4e7c <__fp_round>
    4b92:	66 d1       	rcall	.+716    	; 0x4e60 <__fp_pscA>
    4b94:	30 f0       	brcs	.+12     	; 0x4ba2 <__addsf3+0x18>
    4b96:	6b d1       	rcall	.+726    	; 0x4e6e <__fp_pscB>
    4b98:	20 f0       	brcs	.+8      	; 0x4ba2 <__addsf3+0x18>
    4b9a:	31 f4       	brne	.+12     	; 0x4ba8 <__addsf3+0x1e>
    4b9c:	9f 3f       	cpi	r25, 0xFF	; 255
    4b9e:	11 f4       	brne	.+4      	; 0x4ba4 <__addsf3+0x1a>
    4ba0:	1e f4       	brtc	.+6      	; 0x4ba8 <__addsf3+0x1e>
    4ba2:	5b c1       	rjmp	.+694    	; 0x4e5a <__fp_nan>
    4ba4:	0e f4       	brtc	.+2      	; 0x4ba8 <__addsf3+0x1e>
    4ba6:	e0 95       	com	r30
    4ba8:	e7 fb       	bst	r30, 7
    4baa:	51 c1       	rjmp	.+674    	; 0x4e4e <__fp_inf>

00004bac <__addsf3x>:
    4bac:	e9 2f       	mov	r30, r25
    4bae:	77 d1       	rcall	.+750    	; 0x4e9e <__fp_split3>
    4bb0:	80 f3       	brcs	.-32     	; 0x4b92 <__addsf3+0x8>
    4bb2:	ba 17       	cp	r27, r26
    4bb4:	62 07       	cpc	r22, r18
    4bb6:	73 07       	cpc	r23, r19
    4bb8:	84 07       	cpc	r24, r20
    4bba:	95 07       	cpc	r25, r21
    4bbc:	18 f0       	brcs	.+6      	; 0x4bc4 <__addsf3x+0x18>
    4bbe:	71 f4       	brne	.+28     	; 0x4bdc <__addsf3x+0x30>
    4bc0:	9e f5       	brtc	.+102    	; 0x4c28 <__addsf3x+0x7c>
    4bc2:	8f c1       	rjmp	.+798    	; 0x4ee2 <__fp_zero>
    4bc4:	0e f4       	brtc	.+2      	; 0x4bc8 <__addsf3x+0x1c>
    4bc6:	e0 95       	com	r30
    4bc8:	0b 2e       	mov	r0, r27
    4bca:	ba 2f       	mov	r27, r26
    4bcc:	a0 2d       	mov	r26, r0
    4bce:	0b 01       	movw	r0, r22
    4bd0:	b9 01       	movw	r22, r18
    4bd2:	90 01       	movw	r18, r0
    4bd4:	0c 01       	movw	r0, r24
    4bd6:	ca 01       	movw	r24, r20
    4bd8:	a0 01       	movw	r20, r0
    4bda:	11 24       	eor	r1, r1
    4bdc:	ff 27       	eor	r31, r31
    4bde:	59 1b       	sub	r21, r25
    4be0:	99 f0       	breq	.+38     	; 0x4c08 <__addsf3x+0x5c>
    4be2:	59 3f       	cpi	r21, 0xF9	; 249
    4be4:	50 f4       	brcc	.+20     	; 0x4bfa <__addsf3x+0x4e>
    4be6:	50 3e       	cpi	r21, 0xE0	; 224
    4be8:	68 f1       	brcs	.+90     	; 0x4c44 <__addsf3x+0x98>
    4bea:	1a 16       	cp	r1, r26
    4bec:	f0 40       	sbci	r31, 0x00	; 0
    4bee:	a2 2f       	mov	r26, r18
    4bf0:	23 2f       	mov	r18, r19
    4bf2:	34 2f       	mov	r19, r20
    4bf4:	44 27       	eor	r20, r20
    4bf6:	58 5f       	subi	r21, 0xF8	; 248
    4bf8:	f3 cf       	rjmp	.-26     	; 0x4be0 <__addsf3x+0x34>
    4bfa:	46 95       	lsr	r20
    4bfc:	37 95       	ror	r19
    4bfe:	27 95       	ror	r18
    4c00:	a7 95       	ror	r26
    4c02:	f0 40       	sbci	r31, 0x00	; 0
    4c04:	53 95       	inc	r21
    4c06:	c9 f7       	brne	.-14     	; 0x4bfa <__addsf3x+0x4e>
    4c08:	7e f4       	brtc	.+30     	; 0x4c28 <__addsf3x+0x7c>
    4c0a:	1f 16       	cp	r1, r31
    4c0c:	ba 0b       	sbc	r27, r26
    4c0e:	62 0b       	sbc	r22, r18
    4c10:	73 0b       	sbc	r23, r19
    4c12:	84 0b       	sbc	r24, r20
    4c14:	ba f0       	brmi	.+46     	; 0x4c44 <__addsf3x+0x98>
    4c16:	91 50       	subi	r25, 0x01	; 1
    4c18:	a1 f0       	breq	.+40     	; 0x4c42 <__addsf3x+0x96>
    4c1a:	ff 0f       	add	r31, r31
    4c1c:	bb 1f       	adc	r27, r27
    4c1e:	66 1f       	adc	r22, r22
    4c20:	77 1f       	adc	r23, r23
    4c22:	88 1f       	adc	r24, r24
    4c24:	c2 f7       	brpl	.-16     	; 0x4c16 <__addsf3x+0x6a>
    4c26:	0e c0       	rjmp	.+28     	; 0x4c44 <__addsf3x+0x98>
    4c28:	ba 0f       	add	r27, r26
    4c2a:	62 1f       	adc	r22, r18
    4c2c:	73 1f       	adc	r23, r19
    4c2e:	84 1f       	adc	r24, r20
    4c30:	48 f4       	brcc	.+18     	; 0x4c44 <__addsf3x+0x98>
    4c32:	87 95       	ror	r24
    4c34:	77 95       	ror	r23
    4c36:	67 95       	ror	r22
    4c38:	b7 95       	ror	r27
    4c3a:	f7 95       	ror	r31
    4c3c:	9e 3f       	cpi	r25, 0xFE	; 254
    4c3e:	08 f0       	brcs	.+2      	; 0x4c42 <__addsf3x+0x96>
    4c40:	b3 cf       	rjmp	.-154    	; 0x4ba8 <__addsf3+0x1e>
    4c42:	93 95       	inc	r25
    4c44:	88 0f       	add	r24, r24
    4c46:	08 f0       	brcs	.+2      	; 0x4c4a <__addsf3x+0x9e>
    4c48:	99 27       	eor	r25, r25
    4c4a:	ee 0f       	add	r30, r30
    4c4c:	97 95       	ror	r25
    4c4e:	87 95       	ror	r24
    4c50:	08 95       	ret

00004c52 <__cmpsf2>:
    4c52:	d9 d0       	rcall	.+434    	; 0x4e06 <__fp_cmp>
    4c54:	08 f4       	brcc	.+2      	; 0x4c58 <__cmpsf2+0x6>
    4c56:	81 e0       	ldi	r24, 0x01	; 1
    4c58:	08 95       	ret

00004c5a <__divsf3>:
    4c5a:	0c d0       	rcall	.+24     	; 0x4c74 <__divsf3x>
    4c5c:	0f c1       	rjmp	.+542    	; 0x4e7c <__fp_round>
    4c5e:	07 d1       	rcall	.+526    	; 0x4e6e <__fp_pscB>
    4c60:	40 f0       	brcs	.+16     	; 0x4c72 <__divsf3+0x18>
    4c62:	fe d0       	rcall	.+508    	; 0x4e60 <__fp_pscA>
    4c64:	30 f0       	brcs	.+12     	; 0x4c72 <__divsf3+0x18>
    4c66:	21 f4       	brne	.+8      	; 0x4c70 <__divsf3+0x16>
    4c68:	5f 3f       	cpi	r21, 0xFF	; 255
    4c6a:	19 f0       	breq	.+6      	; 0x4c72 <__divsf3+0x18>
    4c6c:	f0 c0       	rjmp	.+480    	; 0x4e4e <__fp_inf>
    4c6e:	51 11       	cpse	r21, r1
    4c70:	39 c1       	rjmp	.+626    	; 0x4ee4 <__fp_szero>
    4c72:	f3 c0       	rjmp	.+486    	; 0x4e5a <__fp_nan>

00004c74 <__divsf3x>:
    4c74:	14 d1       	rcall	.+552    	; 0x4e9e <__fp_split3>
    4c76:	98 f3       	brcs	.-26     	; 0x4c5e <__divsf3+0x4>

00004c78 <__divsf3_pse>:
    4c78:	99 23       	and	r25, r25
    4c7a:	c9 f3       	breq	.-14     	; 0x4c6e <__divsf3+0x14>
    4c7c:	55 23       	and	r21, r21
    4c7e:	b1 f3       	breq	.-20     	; 0x4c6c <__divsf3+0x12>
    4c80:	95 1b       	sub	r25, r21
    4c82:	55 0b       	sbc	r21, r21
    4c84:	bb 27       	eor	r27, r27
    4c86:	aa 27       	eor	r26, r26
    4c88:	62 17       	cp	r22, r18
    4c8a:	73 07       	cpc	r23, r19
    4c8c:	84 07       	cpc	r24, r20
    4c8e:	38 f0       	brcs	.+14     	; 0x4c9e <__divsf3_pse+0x26>
    4c90:	9f 5f       	subi	r25, 0xFF	; 255
    4c92:	5f 4f       	sbci	r21, 0xFF	; 255
    4c94:	22 0f       	add	r18, r18
    4c96:	33 1f       	adc	r19, r19
    4c98:	44 1f       	adc	r20, r20
    4c9a:	aa 1f       	adc	r26, r26
    4c9c:	a9 f3       	breq	.-22     	; 0x4c88 <__divsf3_pse+0x10>
    4c9e:	33 d0       	rcall	.+102    	; 0x4d06 <__divsf3_pse+0x8e>
    4ca0:	0e 2e       	mov	r0, r30
    4ca2:	3a f0       	brmi	.+14     	; 0x4cb2 <__divsf3_pse+0x3a>
    4ca4:	e0 e8       	ldi	r30, 0x80	; 128
    4ca6:	30 d0       	rcall	.+96     	; 0x4d08 <__divsf3_pse+0x90>
    4ca8:	91 50       	subi	r25, 0x01	; 1
    4caa:	50 40       	sbci	r21, 0x00	; 0
    4cac:	e6 95       	lsr	r30
    4cae:	00 1c       	adc	r0, r0
    4cb0:	ca f7       	brpl	.-14     	; 0x4ca4 <__divsf3_pse+0x2c>
    4cb2:	29 d0       	rcall	.+82     	; 0x4d06 <__divsf3_pse+0x8e>
    4cb4:	fe 2f       	mov	r31, r30
    4cb6:	27 d0       	rcall	.+78     	; 0x4d06 <__divsf3_pse+0x8e>
    4cb8:	66 0f       	add	r22, r22
    4cba:	77 1f       	adc	r23, r23
    4cbc:	88 1f       	adc	r24, r24
    4cbe:	bb 1f       	adc	r27, r27
    4cc0:	26 17       	cp	r18, r22
    4cc2:	37 07       	cpc	r19, r23
    4cc4:	48 07       	cpc	r20, r24
    4cc6:	ab 07       	cpc	r26, r27
    4cc8:	b0 e8       	ldi	r27, 0x80	; 128
    4cca:	09 f0       	breq	.+2      	; 0x4cce <__divsf3_pse+0x56>
    4ccc:	bb 0b       	sbc	r27, r27
    4cce:	80 2d       	mov	r24, r0
    4cd0:	bf 01       	movw	r22, r30
    4cd2:	ff 27       	eor	r31, r31
    4cd4:	93 58       	subi	r25, 0x83	; 131
    4cd6:	5f 4f       	sbci	r21, 0xFF	; 255
    4cd8:	2a f0       	brmi	.+10     	; 0x4ce4 <__divsf3_pse+0x6c>
    4cda:	9e 3f       	cpi	r25, 0xFE	; 254
    4cdc:	51 05       	cpc	r21, r1
    4cde:	68 f0       	brcs	.+26     	; 0x4cfa <__divsf3_pse+0x82>
    4ce0:	b6 c0       	rjmp	.+364    	; 0x4e4e <__fp_inf>
    4ce2:	00 c1       	rjmp	.+512    	; 0x4ee4 <__fp_szero>
    4ce4:	5f 3f       	cpi	r21, 0xFF	; 255
    4ce6:	ec f3       	brlt	.-6      	; 0x4ce2 <__divsf3_pse+0x6a>
    4ce8:	98 3e       	cpi	r25, 0xE8	; 232
    4cea:	dc f3       	brlt	.-10     	; 0x4ce2 <__divsf3_pse+0x6a>
    4cec:	86 95       	lsr	r24
    4cee:	77 95       	ror	r23
    4cf0:	67 95       	ror	r22
    4cf2:	b7 95       	ror	r27
    4cf4:	f7 95       	ror	r31
    4cf6:	9f 5f       	subi	r25, 0xFF	; 255
    4cf8:	c9 f7       	brne	.-14     	; 0x4cec <__divsf3_pse+0x74>
    4cfa:	88 0f       	add	r24, r24
    4cfc:	91 1d       	adc	r25, r1
    4cfe:	96 95       	lsr	r25
    4d00:	87 95       	ror	r24
    4d02:	97 f9       	bld	r25, 7
    4d04:	08 95       	ret
    4d06:	e1 e0       	ldi	r30, 0x01	; 1
    4d08:	66 0f       	add	r22, r22
    4d0a:	77 1f       	adc	r23, r23
    4d0c:	88 1f       	adc	r24, r24
    4d0e:	bb 1f       	adc	r27, r27
    4d10:	62 17       	cp	r22, r18
    4d12:	73 07       	cpc	r23, r19
    4d14:	84 07       	cpc	r24, r20
    4d16:	ba 07       	cpc	r27, r26
    4d18:	20 f0       	brcs	.+8      	; 0x4d22 <__divsf3_pse+0xaa>
    4d1a:	62 1b       	sub	r22, r18
    4d1c:	73 0b       	sbc	r23, r19
    4d1e:	84 0b       	sbc	r24, r20
    4d20:	ba 0b       	sbc	r27, r26
    4d22:	ee 1f       	adc	r30, r30
    4d24:	88 f7       	brcc	.-30     	; 0x4d08 <__divsf3_pse+0x90>
    4d26:	e0 95       	com	r30
    4d28:	08 95       	ret

00004d2a <__fixsfsi>:
    4d2a:	04 d0       	rcall	.+8      	; 0x4d34 <__fixunssfsi>
    4d2c:	68 94       	set
    4d2e:	b1 11       	cpse	r27, r1
    4d30:	d9 c0       	rjmp	.+434    	; 0x4ee4 <__fp_szero>
    4d32:	08 95       	ret

00004d34 <__fixunssfsi>:
    4d34:	bc d0       	rcall	.+376    	; 0x4eae <__fp_splitA>
    4d36:	88 f0       	brcs	.+34     	; 0x4d5a <__fixunssfsi+0x26>
    4d38:	9f 57       	subi	r25, 0x7F	; 127
    4d3a:	90 f0       	brcs	.+36     	; 0x4d60 <__fixunssfsi+0x2c>
    4d3c:	b9 2f       	mov	r27, r25
    4d3e:	99 27       	eor	r25, r25
    4d40:	b7 51       	subi	r27, 0x17	; 23
    4d42:	a0 f0       	brcs	.+40     	; 0x4d6c <__fixunssfsi+0x38>
    4d44:	d1 f0       	breq	.+52     	; 0x4d7a <__fixunssfsi+0x46>
    4d46:	66 0f       	add	r22, r22
    4d48:	77 1f       	adc	r23, r23
    4d4a:	88 1f       	adc	r24, r24
    4d4c:	99 1f       	adc	r25, r25
    4d4e:	1a f0       	brmi	.+6      	; 0x4d56 <__fixunssfsi+0x22>
    4d50:	ba 95       	dec	r27
    4d52:	c9 f7       	brne	.-14     	; 0x4d46 <__fixunssfsi+0x12>
    4d54:	12 c0       	rjmp	.+36     	; 0x4d7a <__fixunssfsi+0x46>
    4d56:	b1 30       	cpi	r27, 0x01	; 1
    4d58:	81 f0       	breq	.+32     	; 0x4d7a <__fixunssfsi+0x46>
    4d5a:	c3 d0       	rcall	.+390    	; 0x4ee2 <__fp_zero>
    4d5c:	b1 e0       	ldi	r27, 0x01	; 1
    4d5e:	08 95       	ret
    4d60:	c0 c0       	rjmp	.+384    	; 0x4ee2 <__fp_zero>
    4d62:	67 2f       	mov	r22, r23
    4d64:	78 2f       	mov	r23, r24
    4d66:	88 27       	eor	r24, r24
    4d68:	b8 5f       	subi	r27, 0xF8	; 248
    4d6a:	39 f0       	breq	.+14     	; 0x4d7a <__fixunssfsi+0x46>
    4d6c:	b9 3f       	cpi	r27, 0xF9	; 249
    4d6e:	cc f3       	brlt	.-14     	; 0x4d62 <__fixunssfsi+0x2e>
    4d70:	86 95       	lsr	r24
    4d72:	77 95       	ror	r23
    4d74:	67 95       	ror	r22
    4d76:	b3 95       	inc	r27
    4d78:	d9 f7       	brne	.-10     	; 0x4d70 <__fixunssfsi+0x3c>
    4d7a:	3e f4       	brtc	.+14     	; 0x4d8a <__fixunssfsi+0x56>
    4d7c:	90 95       	com	r25
    4d7e:	80 95       	com	r24
    4d80:	70 95       	com	r23
    4d82:	61 95       	neg	r22
    4d84:	7f 4f       	sbci	r23, 0xFF	; 255
    4d86:	8f 4f       	sbci	r24, 0xFF	; 255
    4d88:	9f 4f       	sbci	r25, 0xFF	; 255
    4d8a:	08 95       	ret

00004d8c <__floatunsisf>:
    4d8c:	e8 94       	clt
    4d8e:	09 c0       	rjmp	.+18     	; 0x4da2 <__floatsisf+0x12>

00004d90 <__floatsisf>:
    4d90:	97 fb       	bst	r25, 7
    4d92:	3e f4       	brtc	.+14     	; 0x4da2 <__floatsisf+0x12>
    4d94:	90 95       	com	r25
    4d96:	80 95       	com	r24
    4d98:	70 95       	com	r23
    4d9a:	61 95       	neg	r22
    4d9c:	7f 4f       	sbci	r23, 0xFF	; 255
    4d9e:	8f 4f       	sbci	r24, 0xFF	; 255
    4da0:	9f 4f       	sbci	r25, 0xFF	; 255
    4da2:	99 23       	and	r25, r25
    4da4:	a9 f0       	breq	.+42     	; 0x4dd0 <__floatsisf+0x40>
    4da6:	f9 2f       	mov	r31, r25
    4da8:	96 e9       	ldi	r25, 0x96	; 150
    4daa:	bb 27       	eor	r27, r27
    4dac:	93 95       	inc	r25
    4dae:	f6 95       	lsr	r31
    4db0:	87 95       	ror	r24
    4db2:	77 95       	ror	r23
    4db4:	67 95       	ror	r22
    4db6:	b7 95       	ror	r27
    4db8:	f1 11       	cpse	r31, r1
    4dba:	f8 cf       	rjmp	.-16     	; 0x4dac <__floatsisf+0x1c>
    4dbc:	fa f4       	brpl	.+62     	; 0x4dfc <__floatsisf+0x6c>
    4dbe:	bb 0f       	add	r27, r27
    4dc0:	11 f4       	brne	.+4      	; 0x4dc6 <__floatsisf+0x36>
    4dc2:	60 ff       	sbrs	r22, 0
    4dc4:	1b c0       	rjmp	.+54     	; 0x4dfc <__floatsisf+0x6c>
    4dc6:	6f 5f       	subi	r22, 0xFF	; 255
    4dc8:	7f 4f       	sbci	r23, 0xFF	; 255
    4dca:	8f 4f       	sbci	r24, 0xFF	; 255
    4dcc:	9f 4f       	sbci	r25, 0xFF	; 255
    4dce:	16 c0       	rjmp	.+44     	; 0x4dfc <__floatsisf+0x6c>
    4dd0:	88 23       	and	r24, r24
    4dd2:	11 f0       	breq	.+4      	; 0x4dd8 <__floatsisf+0x48>
    4dd4:	96 e9       	ldi	r25, 0x96	; 150
    4dd6:	11 c0       	rjmp	.+34     	; 0x4dfa <__floatsisf+0x6a>
    4dd8:	77 23       	and	r23, r23
    4dda:	21 f0       	breq	.+8      	; 0x4de4 <__floatsisf+0x54>
    4ddc:	9e e8       	ldi	r25, 0x8E	; 142
    4dde:	87 2f       	mov	r24, r23
    4de0:	76 2f       	mov	r23, r22
    4de2:	05 c0       	rjmp	.+10     	; 0x4dee <__floatsisf+0x5e>
    4de4:	66 23       	and	r22, r22
    4de6:	71 f0       	breq	.+28     	; 0x4e04 <__floatsisf+0x74>
    4de8:	96 e8       	ldi	r25, 0x86	; 134
    4dea:	86 2f       	mov	r24, r22
    4dec:	70 e0       	ldi	r23, 0x00	; 0
    4dee:	60 e0       	ldi	r22, 0x00	; 0
    4df0:	2a f0       	brmi	.+10     	; 0x4dfc <__floatsisf+0x6c>
    4df2:	9a 95       	dec	r25
    4df4:	66 0f       	add	r22, r22
    4df6:	77 1f       	adc	r23, r23
    4df8:	88 1f       	adc	r24, r24
    4dfa:	da f7       	brpl	.-10     	; 0x4df2 <__floatsisf+0x62>
    4dfc:	88 0f       	add	r24, r24
    4dfe:	96 95       	lsr	r25
    4e00:	87 95       	ror	r24
    4e02:	97 f9       	bld	r25, 7
    4e04:	08 95       	ret

00004e06 <__fp_cmp>:
    4e06:	99 0f       	add	r25, r25
    4e08:	00 08       	sbc	r0, r0
    4e0a:	55 0f       	add	r21, r21
    4e0c:	aa 0b       	sbc	r26, r26
    4e0e:	e0 e8       	ldi	r30, 0x80	; 128
    4e10:	fe ef       	ldi	r31, 0xFE	; 254
    4e12:	16 16       	cp	r1, r22
    4e14:	17 06       	cpc	r1, r23
    4e16:	e8 07       	cpc	r30, r24
    4e18:	f9 07       	cpc	r31, r25
    4e1a:	c0 f0       	brcs	.+48     	; 0x4e4c <__fp_cmp+0x46>
    4e1c:	12 16       	cp	r1, r18
    4e1e:	13 06       	cpc	r1, r19
    4e20:	e4 07       	cpc	r30, r20
    4e22:	f5 07       	cpc	r31, r21
    4e24:	98 f0       	brcs	.+38     	; 0x4e4c <__fp_cmp+0x46>
    4e26:	62 1b       	sub	r22, r18
    4e28:	73 0b       	sbc	r23, r19
    4e2a:	84 0b       	sbc	r24, r20
    4e2c:	95 0b       	sbc	r25, r21
    4e2e:	39 f4       	brne	.+14     	; 0x4e3e <__fp_cmp+0x38>
    4e30:	0a 26       	eor	r0, r26
    4e32:	61 f0       	breq	.+24     	; 0x4e4c <__fp_cmp+0x46>
    4e34:	23 2b       	or	r18, r19
    4e36:	24 2b       	or	r18, r20
    4e38:	25 2b       	or	r18, r21
    4e3a:	21 f4       	brne	.+8      	; 0x4e44 <__fp_cmp+0x3e>
    4e3c:	08 95       	ret
    4e3e:	0a 26       	eor	r0, r26
    4e40:	09 f4       	brne	.+2      	; 0x4e44 <__fp_cmp+0x3e>
    4e42:	a1 40       	sbci	r26, 0x01	; 1
    4e44:	a6 95       	lsr	r26
    4e46:	8f ef       	ldi	r24, 0xFF	; 255
    4e48:	81 1d       	adc	r24, r1
    4e4a:	81 1d       	adc	r24, r1
    4e4c:	08 95       	ret

00004e4e <__fp_inf>:
    4e4e:	97 f9       	bld	r25, 7
    4e50:	9f 67       	ori	r25, 0x7F	; 127
    4e52:	80 e8       	ldi	r24, 0x80	; 128
    4e54:	70 e0       	ldi	r23, 0x00	; 0
    4e56:	60 e0       	ldi	r22, 0x00	; 0
    4e58:	08 95       	ret

00004e5a <__fp_nan>:
    4e5a:	9f ef       	ldi	r25, 0xFF	; 255
    4e5c:	80 ec       	ldi	r24, 0xC0	; 192
    4e5e:	08 95       	ret

00004e60 <__fp_pscA>:
    4e60:	00 24       	eor	r0, r0
    4e62:	0a 94       	dec	r0
    4e64:	16 16       	cp	r1, r22
    4e66:	17 06       	cpc	r1, r23
    4e68:	18 06       	cpc	r1, r24
    4e6a:	09 06       	cpc	r0, r25
    4e6c:	08 95       	ret

00004e6e <__fp_pscB>:
    4e6e:	00 24       	eor	r0, r0
    4e70:	0a 94       	dec	r0
    4e72:	12 16       	cp	r1, r18
    4e74:	13 06       	cpc	r1, r19
    4e76:	14 06       	cpc	r1, r20
    4e78:	05 06       	cpc	r0, r21
    4e7a:	08 95       	ret

00004e7c <__fp_round>:
    4e7c:	09 2e       	mov	r0, r25
    4e7e:	03 94       	inc	r0
    4e80:	00 0c       	add	r0, r0
    4e82:	11 f4       	brne	.+4      	; 0x4e88 <__fp_round+0xc>
    4e84:	88 23       	and	r24, r24
    4e86:	52 f0       	brmi	.+20     	; 0x4e9c <__fp_round+0x20>
    4e88:	bb 0f       	add	r27, r27
    4e8a:	40 f4       	brcc	.+16     	; 0x4e9c <__fp_round+0x20>
    4e8c:	bf 2b       	or	r27, r31
    4e8e:	11 f4       	brne	.+4      	; 0x4e94 <__fp_round+0x18>
    4e90:	60 ff       	sbrs	r22, 0
    4e92:	04 c0       	rjmp	.+8      	; 0x4e9c <__fp_round+0x20>
    4e94:	6f 5f       	subi	r22, 0xFF	; 255
    4e96:	7f 4f       	sbci	r23, 0xFF	; 255
    4e98:	8f 4f       	sbci	r24, 0xFF	; 255
    4e9a:	9f 4f       	sbci	r25, 0xFF	; 255
    4e9c:	08 95       	ret

00004e9e <__fp_split3>:
    4e9e:	57 fd       	sbrc	r21, 7
    4ea0:	90 58       	subi	r25, 0x80	; 128
    4ea2:	44 0f       	add	r20, r20
    4ea4:	55 1f       	adc	r21, r21
    4ea6:	59 f0       	breq	.+22     	; 0x4ebe <__fp_splitA+0x10>
    4ea8:	5f 3f       	cpi	r21, 0xFF	; 255
    4eaa:	71 f0       	breq	.+28     	; 0x4ec8 <__fp_splitA+0x1a>
    4eac:	47 95       	ror	r20

00004eae <__fp_splitA>:
    4eae:	88 0f       	add	r24, r24
    4eb0:	97 fb       	bst	r25, 7
    4eb2:	99 1f       	adc	r25, r25
    4eb4:	61 f0       	breq	.+24     	; 0x4ece <__fp_splitA+0x20>
    4eb6:	9f 3f       	cpi	r25, 0xFF	; 255
    4eb8:	79 f0       	breq	.+30     	; 0x4ed8 <__fp_splitA+0x2a>
    4eba:	87 95       	ror	r24
    4ebc:	08 95       	ret
    4ebe:	12 16       	cp	r1, r18
    4ec0:	13 06       	cpc	r1, r19
    4ec2:	14 06       	cpc	r1, r20
    4ec4:	55 1f       	adc	r21, r21
    4ec6:	f2 cf       	rjmp	.-28     	; 0x4eac <__fp_split3+0xe>
    4ec8:	46 95       	lsr	r20
    4eca:	f1 df       	rcall	.-30     	; 0x4eae <__fp_splitA>
    4ecc:	08 c0       	rjmp	.+16     	; 0x4ede <__fp_splitA+0x30>
    4ece:	16 16       	cp	r1, r22
    4ed0:	17 06       	cpc	r1, r23
    4ed2:	18 06       	cpc	r1, r24
    4ed4:	99 1f       	adc	r25, r25
    4ed6:	f1 cf       	rjmp	.-30     	; 0x4eba <__fp_splitA+0xc>
    4ed8:	86 95       	lsr	r24
    4eda:	71 05       	cpc	r23, r1
    4edc:	61 05       	cpc	r22, r1
    4ede:	08 94       	sec
    4ee0:	08 95       	ret

00004ee2 <__fp_zero>:
    4ee2:	e8 94       	clt

00004ee4 <__fp_szero>:
    4ee4:	bb 27       	eor	r27, r27
    4ee6:	66 27       	eor	r22, r22
    4ee8:	77 27       	eor	r23, r23
    4eea:	cb 01       	movw	r24, r22
    4eec:	97 f9       	bld	r25, 7
    4eee:	08 95       	ret

00004ef0 <__gesf2>:
    4ef0:	8a df       	rcall	.-236    	; 0x4e06 <__fp_cmp>
    4ef2:	08 f4       	brcc	.+2      	; 0x4ef6 <__gesf2+0x6>
    4ef4:	8f ef       	ldi	r24, 0xFF	; 255
    4ef6:	08 95       	ret

00004ef8 <lrint>:
    4ef8:	da df       	rcall	.-76     	; 0x4eae <__fp_splitA>
    4efa:	a8 f1       	brcs	.+106    	; 0x4f66 <lrint+0x6e>
    4efc:	9e 57       	subi	r25, 0x7E	; 126
    4efe:	a8 f1       	brcs	.+106    	; 0x4f6a <lrint+0x72>
    4f00:	98 51       	subi	r25, 0x18	; 24
    4f02:	60 f0       	brcs	.+24     	; 0x4f1c <lrint+0x24>
    4f04:	39 f1       	breq	.+78     	; 0x4f54 <lrint+0x5c>
    4f06:	98 30       	cpi	r25, 0x08	; 8
    4f08:	70 f5       	brcc	.+92     	; 0x4f66 <lrint+0x6e>
    4f0a:	09 2e       	mov	r0, r25
    4f0c:	99 27       	eor	r25, r25
    4f0e:	66 0f       	add	r22, r22
    4f10:	77 1f       	adc	r23, r23
    4f12:	88 1f       	adc	r24, r24
    4f14:	99 1f       	adc	r25, r25
    4f16:	0a 94       	dec	r0
    4f18:	d1 f7       	brne	.-12     	; 0x4f0e <lrint+0x16>
    4f1a:	1c c0       	rjmp	.+56     	; 0x4f54 <lrint+0x5c>
    4f1c:	bb 27       	eor	r27, r27
    4f1e:	99 3f       	cpi	r25, 0xF9	; 249
    4f20:	4c f4       	brge	.+18     	; 0x4f34 <lrint+0x3c>
    4f22:	b1 11       	cpse	r27, r1
    4f24:	b1 e0       	ldi	r27, 0x01	; 1
    4f26:	b6 2b       	or	r27, r22
    4f28:	67 2f       	mov	r22, r23
    4f2a:	78 2f       	mov	r23, r24
    4f2c:	88 27       	eor	r24, r24
    4f2e:	98 5f       	subi	r25, 0xF8	; 248
    4f30:	b1 f7       	brne	.-20     	; 0x4f1e <lrint+0x26>
    4f32:	08 c0       	rjmp	.+16     	; 0x4f44 <lrint+0x4c>
    4f34:	86 95       	lsr	r24
    4f36:	77 95       	ror	r23
    4f38:	67 95       	ror	r22
    4f3a:	b7 95       	ror	r27
    4f3c:	08 f4       	brcc	.+2      	; 0x4f40 <lrint+0x48>
    4f3e:	b1 60       	ori	r27, 0x01	; 1
    4f40:	93 95       	inc	r25
    4f42:	c1 f7       	brne	.-16     	; 0x4f34 <lrint+0x3c>
    4f44:	bb 0f       	add	r27, r27
    4f46:	30 f4       	brcc	.+12     	; 0x4f54 <lrint+0x5c>
    4f48:	11 f4       	brne	.+4      	; 0x4f4e <lrint+0x56>
    4f4a:	60 ff       	sbrs	r22, 0
    4f4c:	03 c0       	rjmp	.+6      	; 0x4f54 <lrint+0x5c>
    4f4e:	6f 5f       	subi	r22, 0xFF	; 255
    4f50:	7f 4f       	sbci	r23, 0xFF	; 255
    4f52:	8f 4f       	sbci	r24, 0xFF	; 255
    4f54:	3e f4       	brtc	.+14     	; 0x4f64 <lrint+0x6c>
    4f56:	90 95       	com	r25
    4f58:	80 95       	com	r24
    4f5a:	70 95       	com	r23
    4f5c:	61 95       	neg	r22
    4f5e:	7f 4f       	sbci	r23, 0xFF	; 255
    4f60:	8f 4f       	sbci	r24, 0xFF	; 255
    4f62:	9f 4f       	sbci	r25, 0xFF	; 255
    4f64:	08 95       	ret
    4f66:	68 94       	set
    4f68:	bd cf       	rjmp	.-134    	; 0x4ee4 <__fp_szero>
    4f6a:	bb cf       	rjmp	.-138    	; 0x4ee2 <__fp_zero>

00004f6c <__mulsf3>:
    4f6c:	0b d0       	rcall	.+22     	; 0x4f84 <__mulsf3x>
    4f6e:	86 cf       	rjmp	.-244    	; 0x4e7c <__fp_round>
    4f70:	77 df       	rcall	.-274    	; 0x4e60 <__fp_pscA>
    4f72:	28 f0       	brcs	.+10     	; 0x4f7e <__mulsf3+0x12>
    4f74:	7c df       	rcall	.-264    	; 0x4e6e <__fp_pscB>
    4f76:	18 f0       	brcs	.+6      	; 0x4f7e <__mulsf3+0x12>
    4f78:	95 23       	and	r25, r21
    4f7a:	09 f0       	breq	.+2      	; 0x4f7e <__mulsf3+0x12>
    4f7c:	68 cf       	rjmp	.-304    	; 0x4e4e <__fp_inf>
    4f7e:	6d cf       	rjmp	.-294    	; 0x4e5a <__fp_nan>
    4f80:	11 24       	eor	r1, r1
    4f82:	b0 cf       	rjmp	.-160    	; 0x4ee4 <__fp_szero>

00004f84 <__mulsf3x>:
    4f84:	8c df       	rcall	.-232    	; 0x4e9e <__fp_split3>
    4f86:	a0 f3       	brcs	.-24     	; 0x4f70 <__mulsf3+0x4>

00004f88 <__mulsf3_pse>:
    4f88:	95 9f       	mul	r25, r21
    4f8a:	d1 f3       	breq	.-12     	; 0x4f80 <__mulsf3+0x14>
    4f8c:	95 0f       	add	r25, r21
    4f8e:	50 e0       	ldi	r21, 0x00	; 0
    4f90:	55 1f       	adc	r21, r21
    4f92:	62 9f       	mul	r22, r18
    4f94:	f0 01       	movw	r30, r0
    4f96:	72 9f       	mul	r23, r18
    4f98:	bb 27       	eor	r27, r27
    4f9a:	f0 0d       	add	r31, r0
    4f9c:	b1 1d       	adc	r27, r1
    4f9e:	63 9f       	mul	r22, r19
    4fa0:	aa 27       	eor	r26, r26
    4fa2:	f0 0d       	add	r31, r0
    4fa4:	b1 1d       	adc	r27, r1
    4fa6:	aa 1f       	adc	r26, r26
    4fa8:	64 9f       	mul	r22, r20
    4faa:	66 27       	eor	r22, r22
    4fac:	b0 0d       	add	r27, r0
    4fae:	a1 1d       	adc	r26, r1
    4fb0:	66 1f       	adc	r22, r22
    4fb2:	82 9f       	mul	r24, r18
    4fb4:	22 27       	eor	r18, r18
    4fb6:	b0 0d       	add	r27, r0
    4fb8:	a1 1d       	adc	r26, r1
    4fba:	62 1f       	adc	r22, r18
    4fbc:	73 9f       	mul	r23, r19
    4fbe:	b0 0d       	add	r27, r0
    4fc0:	a1 1d       	adc	r26, r1
    4fc2:	62 1f       	adc	r22, r18
    4fc4:	83 9f       	mul	r24, r19
    4fc6:	a0 0d       	add	r26, r0
    4fc8:	61 1d       	adc	r22, r1
    4fca:	22 1f       	adc	r18, r18
    4fcc:	74 9f       	mul	r23, r20
    4fce:	33 27       	eor	r19, r19
    4fd0:	a0 0d       	add	r26, r0
    4fd2:	61 1d       	adc	r22, r1
    4fd4:	23 1f       	adc	r18, r19
    4fd6:	84 9f       	mul	r24, r20
    4fd8:	60 0d       	add	r22, r0
    4fda:	21 1d       	adc	r18, r1
    4fdc:	82 2f       	mov	r24, r18
    4fde:	76 2f       	mov	r23, r22
    4fe0:	6a 2f       	mov	r22, r26
    4fe2:	11 24       	eor	r1, r1
    4fe4:	9f 57       	subi	r25, 0x7F	; 127
    4fe6:	50 40       	sbci	r21, 0x00	; 0
    4fe8:	8a f0       	brmi	.+34     	; 0x500c <__mulsf3_pse+0x84>
    4fea:	e1 f0       	breq	.+56     	; 0x5024 <__mulsf3_pse+0x9c>
    4fec:	88 23       	and	r24, r24
    4fee:	4a f0       	brmi	.+18     	; 0x5002 <__mulsf3_pse+0x7a>
    4ff0:	ee 0f       	add	r30, r30
    4ff2:	ff 1f       	adc	r31, r31
    4ff4:	bb 1f       	adc	r27, r27
    4ff6:	66 1f       	adc	r22, r22
    4ff8:	77 1f       	adc	r23, r23
    4ffa:	88 1f       	adc	r24, r24
    4ffc:	91 50       	subi	r25, 0x01	; 1
    4ffe:	50 40       	sbci	r21, 0x00	; 0
    5000:	a9 f7       	brne	.-22     	; 0x4fec <__mulsf3_pse+0x64>
    5002:	9e 3f       	cpi	r25, 0xFE	; 254
    5004:	51 05       	cpc	r21, r1
    5006:	70 f0       	brcs	.+28     	; 0x5024 <__mulsf3_pse+0x9c>
    5008:	22 cf       	rjmp	.-444    	; 0x4e4e <__fp_inf>
    500a:	6c cf       	rjmp	.-296    	; 0x4ee4 <__fp_szero>
    500c:	5f 3f       	cpi	r21, 0xFF	; 255
    500e:	ec f3       	brlt	.-6      	; 0x500a <__mulsf3_pse+0x82>
    5010:	98 3e       	cpi	r25, 0xE8	; 232
    5012:	dc f3       	brlt	.-10     	; 0x500a <__mulsf3_pse+0x82>
    5014:	86 95       	lsr	r24
    5016:	77 95       	ror	r23
    5018:	67 95       	ror	r22
    501a:	b7 95       	ror	r27
    501c:	f7 95       	ror	r31
    501e:	e7 95       	ror	r30
    5020:	9f 5f       	subi	r25, 0xFF	; 255
    5022:	c1 f7       	brne	.-16     	; 0x5014 <__mulsf3_pse+0x8c>
    5024:	fe 2b       	or	r31, r30
    5026:	88 0f       	add	r24, r24
    5028:	91 1d       	adc	r25, r1
    502a:	96 95       	lsr	r25
    502c:	87 95       	ror	r24
    502e:	97 f9       	bld	r25, 7
    5030:	08 95       	ret

00005032 <pow>:
    5032:	fa 01       	movw	r30, r20
    5034:	ee 0f       	add	r30, r30
    5036:	ff 1f       	adc	r31, r31
    5038:	30 96       	adiw	r30, 0x00	; 0
    503a:	21 05       	cpc	r18, r1
    503c:	31 05       	cpc	r19, r1
    503e:	99 f1       	breq	.+102    	; 0x50a6 <pow+0x74>
    5040:	61 15       	cp	r22, r1
    5042:	71 05       	cpc	r23, r1
    5044:	61 f4       	brne	.+24     	; 0x505e <pow+0x2c>
    5046:	80 38       	cpi	r24, 0x80	; 128
    5048:	bf e3       	ldi	r27, 0x3F	; 63
    504a:	9b 07       	cpc	r25, r27
    504c:	49 f1       	breq	.+82     	; 0x50a0 <pow+0x6e>
    504e:	68 94       	set
    5050:	90 38       	cpi	r25, 0x80	; 128
    5052:	81 05       	cpc	r24, r1
    5054:	61 f0       	breq	.+24     	; 0x506e <pow+0x3c>
    5056:	80 38       	cpi	r24, 0x80	; 128
    5058:	bf ef       	ldi	r27, 0xFF	; 255
    505a:	9b 07       	cpc	r25, r27
    505c:	41 f0       	breq	.+16     	; 0x506e <pow+0x3c>
    505e:	99 23       	and	r25, r25
    5060:	42 f5       	brpl	.+80     	; 0x50b2 <pow+0x80>
    5062:	ff 3f       	cpi	r31, 0xFF	; 255
    5064:	e1 05       	cpc	r30, r1
    5066:	31 05       	cpc	r19, r1
    5068:	21 05       	cpc	r18, r1
    506a:	11 f1       	breq	.+68     	; 0x50b0 <pow+0x7e>
    506c:	e8 94       	clt
    506e:	08 94       	sec
    5070:	e7 95       	ror	r30
    5072:	d9 01       	movw	r26, r18
    5074:	aa 23       	and	r26, r26
    5076:	29 f4       	brne	.+10     	; 0x5082 <pow+0x50>
    5078:	ab 2f       	mov	r26, r27
    507a:	be 2f       	mov	r27, r30
    507c:	f8 5f       	subi	r31, 0xF8	; 248
    507e:	d0 f3       	brcs	.-12     	; 0x5074 <pow+0x42>
    5080:	10 c0       	rjmp	.+32     	; 0x50a2 <pow+0x70>
    5082:	ff 5f       	subi	r31, 0xFF	; 255
    5084:	70 f4       	brcc	.+28     	; 0x50a2 <pow+0x70>
    5086:	a6 95       	lsr	r26
    5088:	e0 f7       	brcc	.-8      	; 0x5082 <pow+0x50>
    508a:	f7 39       	cpi	r31, 0x97	; 151
    508c:	50 f0       	brcs	.+20     	; 0x50a2 <pow+0x70>
    508e:	19 f0       	breq	.+6      	; 0x5096 <pow+0x64>
    5090:	ff 3a       	cpi	r31, 0xAF	; 175
    5092:	38 f4       	brcc	.+14     	; 0x50a2 <pow+0x70>
    5094:	9f 77       	andi	r25, 0x7F	; 127
    5096:	9f 93       	push	r25
    5098:	0c d0       	rcall	.+24     	; 0x50b2 <pow+0x80>
    509a:	0f 90       	pop	r0
    509c:	07 fc       	sbrc	r0, 7
    509e:	90 58       	subi	r25, 0x80	; 128
    50a0:	08 95       	ret
    50a2:	3e f0       	brts	.+14     	; 0x50b2 <pow+0x80>
    50a4:	da ce       	rjmp	.-588    	; 0x4e5a <__fp_nan>
    50a6:	60 e0       	ldi	r22, 0x00	; 0
    50a8:	70 e0       	ldi	r23, 0x00	; 0
    50aa:	80 e8       	ldi	r24, 0x80	; 128
    50ac:	9f e3       	ldi	r25, 0x3F	; 63
    50ae:	08 95       	ret
    50b0:	4f e7       	ldi	r20, 0x7F	; 127
    50b2:	9f 77       	andi	r25, 0x7F	; 127
    50b4:	5f 93       	push	r21
    50b6:	4f 93       	push	r20
    50b8:	3f 93       	push	r19
    50ba:	2f 93       	push	r18
    50bc:	9e d0       	rcall	.+316    	; 0x51fa <log>
    50be:	2f 91       	pop	r18
    50c0:	3f 91       	pop	r19
    50c2:	4f 91       	pop	r20
    50c4:	5f 91       	pop	r21
    50c6:	52 df       	rcall	.-348    	; 0x4f6c <__mulsf3>
    50c8:	05 c0       	rjmp	.+10     	; 0x50d4 <exp>
    50ca:	19 f4       	brne	.+6      	; 0x50d2 <pow+0xa0>
    50cc:	0e f0       	brts	.+2      	; 0x50d0 <pow+0x9e>
    50ce:	bf ce       	rjmp	.-642    	; 0x4e4e <__fp_inf>
    50d0:	08 cf       	rjmp	.-496    	; 0x4ee2 <__fp_zero>
    50d2:	c3 ce       	rjmp	.-634    	; 0x4e5a <__fp_nan>

000050d4 <exp>:
    50d4:	ec de       	rcall	.-552    	; 0x4eae <__fp_splitA>
    50d6:	c8 f3       	brcs	.-14     	; 0x50ca <pow+0x98>
    50d8:	96 38       	cpi	r25, 0x86	; 134
    50da:	c0 f7       	brcc	.-16     	; 0x50cc <pow+0x9a>
    50dc:	07 f8       	bld	r0, 7
    50de:	0f 92       	push	r0
    50e0:	e8 94       	clt
    50e2:	2b e3       	ldi	r18, 0x3B	; 59
    50e4:	3a ea       	ldi	r19, 0xAA	; 170
    50e6:	48 eb       	ldi	r20, 0xB8	; 184
    50e8:	5f e7       	ldi	r21, 0x7F	; 127
    50ea:	4e df       	rcall	.-356    	; 0x4f88 <__mulsf3_pse>
    50ec:	0f 92       	push	r0
    50ee:	0f 92       	push	r0
    50f0:	0f 92       	push	r0
    50f2:	4d b7       	in	r20, 0x3d	; 61
    50f4:	5e b7       	in	r21, 0x3e	; 62
    50f6:	0f 92       	push	r0
    50f8:	c0 d0       	rcall	.+384    	; 0x527a <modf>
    50fa:	e8 ec       	ldi	r30, 0xC8	; 200
    50fc:	f0 e0       	ldi	r31, 0x00	; 0
    50fe:	16 d0       	rcall	.+44     	; 0x512c <__fp_powser>
    5100:	4f 91       	pop	r20
    5102:	5f 91       	pop	r21
    5104:	ef 91       	pop	r30
    5106:	ff 91       	pop	r31
    5108:	e5 95       	asr	r30
    510a:	ee 1f       	adc	r30, r30
    510c:	ff 1f       	adc	r31, r31
    510e:	49 f0       	breq	.+18     	; 0x5122 <exp+0x4e>
    5110:	fe 57       	subi	r31, 0x7E	; 126
    5112:	e0 68       	ori	r30, 0x80	; 128
    5114:	44 27       	eor	r20, r20
    5116:	ee 0f       	add	r30, r30
    5118:	44 1f       	adc	r20, r20
    511a:	fa 95       	dec	r31
    511c:	e1 f7       	brne	.-8      	; 0x5116 <exp+0x42>
    511e:	41 95       	neg	r20
    5120:	55 0b       	sbc	r21, r21
    5122:	32 d0       	rcall	.+100    	; 0x5188 <ldexp>
    5124:	0f 90       	pop	r0
    5126:	07 fe       	sbrs	r0, 7
    5128:	26 c0       	rjmp	.+76     	; 0x5176 <inverse>
    512a:	08 95       	ret

0000512c <__fp_powser>:
    512c:	df 93       	push	r29
    512e:	cf 93       	push	r28
    5130:	1f 93       	push	r17
    5132:	0f 93       	push	r16
    5134:	ff 92       	push	r15
    5136:	ef 92       	push	r14
    5138:	df 92       	push	r13
    513a:	7b 01       	movw	r14, r22
    513c:	8c 01       	movw	r16, r24
    513e:	68 94       	set
    5140:	05 c0       	rjmp	.+10     	; 0x514c <__fp_powser+0x20>
    5142:	da 2e       	mov	r13, r26
    5144:	ef 01       	movw	r28, r30
    5146:	1e df       	rcall	.-452    	; 0x4f84 <__mulsf3x>
    5148:	fe 01       	movw	r30, r28
    514a:	e8 94       	clt
    514c:	a5 91       	lpm	r26, Z+
    514e:	25 91       	lpm	r18, Z+
    5150:	35 91       	lpm	r19, Z+
    5152:	45 91       	lpm	r20, Z+
    5154:	55 91       	lpm	r21, Z+
    5156:	ae f3       	brts	.-22     	; 0x5142 <__fp_powser+0x16>
    5158:	ef 01       	movw	r28, r30
    515a:	28 dd       	rcall	.-1456   	; 0x4bac <__addsf3x>
    515c:	fe 01       	movw	r30, r28
    515e:	97 01       	movw	r18, r14
    5160:	a8 01       	movw	r20, r16
    5162:	da 94       	dec	r13
    5164:	79 f7       	brne	.-34     	; 0x5144 <__fp_powser+0x18>
    5166:	df 90       	pop	r13
    5168:	ef 90       	pop	r14
    516a:	ff 90       	pop	r15
    516c:	0f 91       	pop	r16
    516e:	1f 91       	pop	r17
    5170:	cf 91       	pop	r28
    5172:	df 91       	pop	r29
    5174:	08 95       	ret

00005176 <inverse>:
    5176:	9b 01       	movw	r18, r22
    5178:	ac 01       	movw	r20, r24
    517a:	60 e0       	ldi	r22, 0x00	; 0
    517c:	70 e0       	ldi	r23, 0x00	; 0
    517e:	80 e8       	ldi	r24, 0x80	; 128
    5180:	9f e3       	ldi	r25, 0x3F	; 63
    5182:	6b cd       	rjmp	.-1322   	; 0x4c5a <__divsf3>
    5184:	64 ce       	rjmp	.-824    	; 0x4e4e <__fp_inf>
    5186:	ac c0       	rjmp	.+344    	; 0x52e0 <__fp_mpack>

00005188 <ldexp>:
    5188:	92 de       	rcall	.-732    	; 0x4eae <__fp_splitA>
    518a:	e8 f3       	brcs	.-6      	; 0x5186 <inverse+0x10>
    518c:	99 23       	and	r25, r25
    518e:	d9 f3       	breq	.-10     	; 0x5186 <inverse+0x10>
    5190:	94 0f       	add	r25, r20
    5192:	51 1d       	adc	r21, r1
    5194:	bb f3       	brvs	.-18     	; 0x5184 <inverse+0xe>
    5196:	91 50       	subi	r25, 0x01	; 1
    5198:	50 40       	sbci	r21, 0x00	; 0
    519a:	94 f0       	brlt	.+36     	; 0x51c0 <ldexp+0x38>
    519c:	59 f0       	breq	.+22     	; 0x51b4 <ldexp+0x2c>
    519e:	88 23       	and	r24, r24
    51a0:	32 f0       	brmi	.+12     	; 0x51ae <ldexp+0x26>
    51a2:	66 0f       	add	r22, r22
    51a4:	77 1f       	adc	r23, r23
    51a6:	88 1f       	adc	r24, r24
    51a8:	91 50       	subi	r25, 0x01	; 1
    51aa:	50 40       	sbci	r21, 0x00	; 0
    51ac:	c1 f7       	brne	.-16     	; 0x519e <ldexp+0x16>
    51ae:	9e 3f       	cpi	r25, 0xFE	; 254
    51b0:	51 05       	cpc	r21, r1
    51b2:	44 f7       	brge	.-48     	; 0x5184 <inverse+0xe>
    51b4:	88 0f       	add	r24, r24
    51b6:	91 1d       	adc	r25, r1
    51b8:	96 95       	lsr	r25
    51ba:	87 95       	ror	r24
    51bc:	97 f9       	bld	r25, 7
    51be:	08 95       	ret
    51c0:	5f 3f       	cpi	r21, 0xFF	; 255
    51c2:	ac f0       	brlt	.+42     	; 0x51ee <ldexp+0x66>
    51c4:	98 3e       	cpi	r25, 0xE8	; 232
    51c6:	9c f0       	brlt	.+38     	; 0x51ee <ldexp+0x66>
    51c8:	bb 27       	eor	r27, r27
    51ca:	86 95       	lsr	r24
    51cc:	77 95       	ror	r23
    51ce:	67 95       	ror	r22
    51d0:	b7 95       	ror	r27
    51d2:	08 f4       	brcc	.+2      	; 0x51d6 <ldexp+0x4e>
    51d4:	b1 60       	ori	r27, 0x01	; 1
    51d6:	93 95       	inc	r25
    51d8:	c1 f7       	brne	.-16     	; 0x51ca <ldexp+0x42>
    51da:	bb 0f       	add	r27, r27
    51dc:	58 f7       	brcc	.-42     	; 0x51b4 <ldexp+0x2c>
    51de:	11 f4       	brne	.+4      	; 0x51e4 <ldexp+0x5c>
    51e0:	60 ff       	sbrs	r22, 0
    51e2:	e8 cf       	rjmp	.-48     	; 0x51b4 <ldexp+0x2c>
    51e4:	6f 5f       	subi	r22, 0xFF	; 255
    51e6:	7f 4f       	sbci	r23, 0xFF	; 255
    51e8:	8f 4f       	sbci	r24, 0xFF	; 255
    51ea:	9f 4f       	sbci	r25, 0xFF	; 255
    51ec:	e3 cf       	rjmp	.-58     	; 0x51b4 <ldexp+0x2c>
    51ee:	7a ce       	rjmp	.-780    	; 0x4ee4 <__fp_szero>
    51f0:	0e f0       	brts	.+2      	; 0x51f4 <ldexp+0x6c>
    51f2:	76 c0       	rjmp	.+236    	; 0x52e0 <__fp_mpack>
    51f4:	32 ce       	rjmp	.-924    	; 0x4e5a <__fp_nan>
    51f6:	68 94       	set
    51f8:	2a ce       	rjmp	.-940    	; 0x4e4e <__fp_inf>

000051fa <log>:
    51fa:	59 de       	rcall	.-846    	; 0x4eae <__fp_splitA>
    51fc:	c8 f3       	brcs	.-14     	; 0x51f0 <ldexp+0x68>
    51fe:	99 23       	and	r25, r25
    5200:	d1 f3       	breq	.-12     	; 0x51f6 <ldexp+0x6e>
    5202:	c6 f3       	brts	.-16     	; 0x51f4 <ldexp+0x6c>
    5204:	df 93       	push	r29
    5206:	cf 93       	push	r28
    5208:	1f 93       	push	r17
    520a:	0f 93       	push	r16
    520c:	ff 92       	push	r15
    520e:	c9 2f       	mov	r28, r25
    5210:	dd 27       	eor	r29, r29
    5212:	88 23       	and	r24, r24
    5214:	2a f0       	brmi	.+10     	; 0x5220 <log+0x26>
    5216:	21 97       	sbiw	r28, 0x01	; 1
    5218:	66 0f       	add	r22, r22
    521a:	77 1f       	adc	r23, r23
    521c:	88 1f       	adc	r24, r24
    521e:	da f7       	brpl	.-10     	; 0x5216 <log+0x1c>
    5220:	20 e0       	ldi	r18, 0x00	; 0
    5222:	30 e0       	ldi	r19, 0x00	; 0
    5224:	40 e8       	ldi	r20, 0x80	; 128
    5226:	5f eb       	ldi	r21, 0xBF	; 191
    5228:	9f e3       	ldi	r25, 0x3F	; 63
    522a:	88 39       	cpi	r24, 0x98	; 152
    522c:	20 f0       	brcs	.+8      	; 0x5236 <log+0x3c>
    522e:	80 3e       	cpi	r24, 0xE0	; 224
    5230:	30 f0       	brcs	.+12     	; 0x523e <log+0x44>
    5232:	21 96       	adiw	r28, 0x01	; 1
    5234:	8f 77       	andi	r24, 0x7F	; 127
    5236:	a9 dc       	rcall	.-1710   	; 0x4b8a <__addsf3>
    5238:	e0 ef       	ldi	r30, 0xF0	; 240
    523a:	f0 e0       	ldi	r31, 0x00	; 0
    523c:	03 c0       	rjmp	.+6      	; 0x5244 <log+0x4a>
    523e:	a5 dc       	rcall	.-1718   	; 0x4b8a <__addsf3>
    5240:	ed e1       	ldi	r30, 0x1D	; 29
    5242:	f1 e0       	ldi	r31, 0x01	; 1
    5244:	73 df       	rcall	.-282    	; 0x512c <__fp_powser>
    5246:	8b 01       	movw	r16, r22
    5248:	be 01       	movw	r22, r28
    524a:	ec 01       	movw	r28, r24
    524c:	fb 2e       	mov	r15, r27
    524e:	6f 57       	subi	r22, 0x7F	; 127
    5250:	71 09       	sbc	r23, r1
    5252:	75 95       	asr	r23
    5254:	77 1f       	adc	r23, r23
    5256:	88 0b       	sbc	r24, r24
    5258:	99 0b       	sbc	r25, r25
    525a:	9a dd       	rcall	.-1228   	; 0x4d90 <__floatsisf>
    525c:	28 e1       	ldi	r18, 0x18	; 24
    525e:	32 e7       	ldi	r19, 0x72	; 114
    5260:	41 e3       	ldi	r20, 0x31	; 49
    5262:	5f e3       	ldi	r21, 0x3F	; 63
    5264:	8f de       	rcall	.-738    	; 0x4f84 <__mulsf3x>
    5266:	af 2d       	mov	r26, r15
    5268:	98 01       	movw	r18, r16
    526a:	ae 01       	movw	r20, r28
    526c:	ff 90       	pop	r15
    526e:	0f 91       	pop	r16
    5270:	1f 91       	pop	r17
    5272:	cf 91       	pop	r28
    5274:	df 91       	pop	r29
    5276:	9a dc       	rcall	.-1740   	; 0x4bac <__addsf3x>
    5278:	01 ce       	rjmp	.-1022   	; 0x4e7c <__fp_round>

0000527a <modf>:
    527a:	fa 01       	movw	r30, r20
    527c:	dc 01       	movw	r26, r24
    527e:	aa 0f       	add	r26, r26
    5280:	bb 1f       	adc	r27, r27
    5282:	9b 01       	movw	r18, r22
    5284:	ac 01       	movw	r20, r24
    5286:	bf 57       	subi	r27, 0x7F	; 127
    5288:	28 f4       	brcc	.+10     	; 0x5294 <modf+0x1a>
    528a:	22 27       	eor	r18, r18
    528c:	33 27       	eor	r19, r19
    528e:	44 27       	eor	r20, r20
    5290:	50 78       	andi	r21, 0x80	; 128
    5292:	1f c0       	rjmp	.+62     	; 0x52d2 <modf+0x58>
    5294:	b7 51       	subi	r27, 0x17	; 23
    5296:	88 f4       	brcc	.+34     	; 0x52ba <modf+0x40>
    5298:	ab 2f       	mov	r26, r27
    529a:	00 24       	eor	r0, r0
    529c:	46 95       	lsr	r20
    529e:	37 95       	ror	r19
    52a0:	27 95       	ror	r18
    52a2:	01 1c       	adc	r0, r1
    52a4:	a3 95       	inc	r26
    52a6:	d2 f3       	brmi	.-12     	; 0x529c <modf+0x22>
    52a8:	00 20       	and	r0, r0
    52aa:	69 f0       	breq	.+26     	; 0x52c6 <modf+0x4c>
    52ac:	22 0f       	add	r18, r18
    52ae:	33 1f       	adc	r19, r19
    52b0:	44 1f       	adc	r20, r20
    52b2:	b3 95       	inc	r27
    52b4:	da f3       	brmi	.-10     	; 0x52ac <modf+0x32>
    52b6:	0d d0       	rcall	.+26     	; 0x52d2 <modf+0x58>
    52b8:	67 cc       	rjmp	.-1842   	; 0x4b88 <__subsf3>
    52ba:	61 30       	cpi	r22, 0x01	; 1
    52bc:	71 05       	cpc	r23, r1
    52be:	a0 e8       	ldi	r26, 0x80	; 128
    52c0:	8a 07       	cpc	r24, r26
    52c2:	b9 46       	sbci	r27, 0x69	; 105
    52c4:	30 f4       	brcc	.+12     	; 0x52d2 <modf+0x58>
    52c6:	9b 01       	movw	r18, r22
    52c8:	ac 01       	movw	r20, r24
    52ca:	66 27       	eor	r22, r22
    52cc:	77 27       	eor	r23, r23
    52ce:	88 27       	eor	r24, r24
    52d0:	90 78       	andi	r25, 0x80	; 128
    52d2:	30 96       	adiw	r30, 0x00	; 0
    52d4:	21 f0       	breq	.+8      	; 0x52de <modf+0x64>
    52d6:	20 83       	st	Z, r18
    52d8:	31 83       	std	Z+1, r19	; 0x01
    52da:	42 83       	std	Z+2, r20	; 0x02
    52dc:	53 83       	std	Z+3, r21	; 0x03
    52de:	08 95       	ret

000052e0 <__fp_mpack>:
    52e0:	9f 3f       	cpi	r25, 0xFF	; 255
    52e2:	31 f0       	breq	.+12     	; 0x52f0 <__fp_mpack_finite+0xc>

000052e4 <__fp_mpack_finite>:
    52e4:	91 50       	subi	r25, 0x01	; 1
    52e6:	20 f4       	brcc	.+8      	; 0x52f0 <__fp_mpack_finite+0xc>
    52e8:	87 95       	ror	r24
    52ea:	77 95       	ror	r23
    52ec:	67 95       	ror	r22
    52ee:	b7 95       	ror	r27
    52f0:	88 0f       	add	r24, r24
    52f2:	91 1d       	adc	r25, r1
    52f4:	96 95       	lsr	r25
    52f6:	87 95       	ror	r24
    52f8:	97 f9       	bld	r25, 7
    52fa:	08 95       	ret

000052fc <vfprintf>:
    52fc:	a1 e1       	ldi	r26, 0x11	; 17
    52fe:	b0 e0       	ldi	r27, 0x00	; 0
    5300:	e3 e8       	ldi	r30, 0x83	; 131
    5302:	f9 e2       	ldi	r31, 0x29	; 41
    5304:	b7 c3       	rjmp	.+1902   	; 0x5a74 <__prologue_saves__>
    5306:	3c 01       	movw	r6, r24
    5308:	7f 87       	std	Y+15, r23	; 0x0f
    530a:	6e 87       	std	Y+14, r22	; 0x0e
    530c:	6a 01       	movw	r12, r20
    530e:	fc 01       	movw	r30, r24
    5310:	17 82       	std	Z+7, r1	; 0x07
    5312:	16 82       	std	Z+6, r1	; 0x06
    5314:	83 81       	ldd	r24, Z+3	; 0x03
    5316:	81 fd       	sbrc	r24, 1
    5318:	03 c0       	rjmp	.+6      	; 0x5320 <vfprintf+0x24>
    531a:	6f ef       	ldi	r22, 0xFF	; 255
    531c:	7f ef       	ldi	r23, 0xFF	; 255
    531e:	52 c3       	rjmp	.+1700   	; 0x59c4 <vfprintf+0x6c8>
    5320:	9e 01       	movw	r18, r28
    5322:	2f 5f       	subi	r18, 0xFF	; 255
    5324:	3f 4f       	sbci	r19, 0xFF	; 255
    5326:	39 8b       	std	Y+17, r19	; 0x11
    5328:	28 8b       	std	Y+16, r18	; 0x10
    532a:	f3 01       	movw	r30, r6
    532c:	23 81       	ldd	r18, Z+3	; 0x03
    532e:	ee 85       	ldd	r30, Y+14	; 0x0e
    5330:	ff 85       	ldd	r31, Y+15	; 0x0f
    5332:	23 fd       	sbrc	r18, 3
    5334:	85 91       	lpm	r24, Z+
    5336:	23 ff       	sbrs	r18, 3
    5338:	81 91       	ld	r24, Z+
    533a:	ff 87       	std	Y+15, r31	; 0x0f
    533c:	ee 87       	std	Y+14, r30	; 0x0e
    533e:	88 23       	and	r24, r24
    5340:	09 f4       	brne	.+2      	; 0x5344 <vfprintf+0x48>
    5342:	3d c3       	rjmp	.+1658   	; 0x59be <vfprintf+0x6c2>
    5344:	85 32       	cpi	r24, 0x25	; 37
    5346:	51 f4       	brne	.+20     	; 0x535c <vfprintf+0x60>
    5348:	ee 85       	ldd	r30, Y+14	; 0x0e
    534a:	ff 85       	ldd	r31, Y+15	; 0x0f
    534c:	23 fd       	sbrc	r18, 3
    534e:	85 91       	lpm	r24, Z+
    5350:	23 ff       	sbrs	r18, 3
    5352:	81 91       	ld	r24, Z+
    5354:	ff 87       	std	Y+15, r31	; 0x0f
    5356:	ee 87       	std	Y+14, r30	; 0x0e
    5358:	85 32       	cpi	r24, 0x25	; 37
    535a:	21 f4       	brne	.+8      	; 0x5364 <vfprintf+0x68>
    535c:	90 e0       	ldi	r25, 0x00	; 0
    535e:	b3 01       	movw	r22, r6
    5360:	20 d6       	rcall	.+3136   	; 0x5fa2 <fputc>
    5362:	e3 cf       	rjmp	.-58     	; 0x532a <vfprintf+0x2e>
    5364:	98 2f       	mov	r25, r24
    5366:	10 e0       	ldi	r17, 0x00	; 0
    5368:	88 24       	eor	r8, r8
    536a:	99 24       	eor	r9, r9
    536c:	10 32       	cpi	r17, 0x20	; 32
    536e:	b0 f4       	brcc	.+44     	; 0x539c <vfprintf+0xa0>
    5370:	9b 32       	cpi	r25, 0x2B	; 43
    5372:	69 f0       	breq	.+26     	; 0x538e <vfprintf+0x92>
    5374:	9c 32       	cpi	r25, 0x2C	; 44
    5376:	28 f4       	brcc	.+10     	; 0x5382 <vfprintf+0x86>
    5378:	90 32       	cpi	r25, 0x20	; 32
    537a:	51 f0       	breq	.+20     	; 0x5390 <vfprintf+0x94>
    537c:	93 32       	cpi	r25, 0x23	; 35
    537e:	71 f4       	brne	.+28     	; 0x539c <vfprintf+0xa0>
    5380:	0b c0       	rjmp	.+22     	; 0x5398 <vfprintf+0x9c>
    5382:	9d 32       	cpi	r25, 0x2D	; 45
    5384:	39 f0       	breq	.+14     	; 0x5394 <vfprintf+0x98>
    5386:	90 33       	cpi	r25, 0x30	; 48
    5388:	49 f4       	brne	.+18     	; 0x539c <vfprintf+0xa0>
    538a:	11 60       	ori	r17, 0x01	; 1
    538c:	28 c0       	rjmp	.+80     	; 0x53de <vfprintf+0xe2>
    538e:	12 60       	ori	r17, 0x02	; 2
    5390:	14 60       	ori	r17, 0x04	; 4
    5392:	25 c0       	rjmp	.+74     	; 0x53de <vfprintf+0xe2>
    5394:	18 60       	ori	r17, 0x08	; 8
    5396:	23 c0       	rjmp	.+70     	; 0x53de <vfprintf+0xe2>
    5398:	10 61       	ori	r17, 0x10	; 16
    539a:	21 c0       	rjmp	.+66     	; 0x53de <vfprintf+0xe2>
    539c:	17 fd       	sbrc	r17, 7
    539e:	2a c0       	rjmp	.+84     	; 0x53f4 <vfprintf+0xf8>
    53a0:	89 2f       	mov	r24, r25
    53a2:	80 53       	subi	r24, 0x30	; 48
    53a4:	8a 30       	cpi	r24, 0x0A	; 10
    53a6:	78 f4       	brcc	.+30     	; 0x53c6 <vfprintf+0xca>
    53a8:	16 ff       	sbrs	r17, 6
    53aa:	06 c0       	rjmp	.+12     	; 0x53b8 <vfprintf+0xbc>
    53ac:	fa e0       	ldi	r31, 0x0A	; 10
    53ae:	9f 9e       	mul	r9, r31
    53b0:	90 2c       	mov	r9, r0
    53b2:	11 24       	eor	r1, r1
    53b4:	98 0e       	add	r9, r24
    53b6:	13 c0       	rjmp	.+38     	; 0x53de <vfprintf+0xe2>
    53b8:	3a e0       	ldi	r19, 0x0A	; 10
    53ba:	83 9e       	mul	r8, r19
    53bc:	80 2c       	mov	r8, r0
    53be:	11 24       	eor	r1, r1
    53c0:	88 0e       	add	r8, r24
    53c2:	10 62       	ori	r17, 0x20	; 32
    53c4:	0c c0       	rjmp	.+24     	; 0x53de <vfprintf+0xe2>
    53c6:	9e 32       	cpi	r25, 0x2E	; 46
    53c8:	21 f4       	brne	.+8      	; 0x53d2 <vfprintf+0xd6>
    53ca:	16 fd       	sbrc	r17, 6
    53cc:	f8 c2       	rjmp	.+1520   	; 0x59be <vfprintf+0x6c2>
    53ce:	10 64       	ori	r17, 0x40	; 64
    53d0:	06 c0       	rjmp	.+12     	; 0x53de <vfprintf+0xe2>
    53d2:	9c 36       	cpi	r25, 0x6C	; 108
    53d4:	11 f4       	brne	.+4      	; 0x53da <vfprintf+0xde>
    53d6:	10 68       	ori	r17, 0x80	; 128
    53d8:	02 c0       	rjmp	.+4      	; 0x53de <vfprintf+0xe2>
    53da:	98 36       	cpi	r25, 0x68	; 104
    53dc:	59 f4       	brne	.+22     	; 0x53f4 <vfprintf+0xf8>
    53de:	ee 85       	ldd	r30, Y+14	; 0x0e
    53e0:	ff 85       	ldd	r31, Y+15	; 0x0f
    53e2:	23 fd       	sbrc	r18, 3
    53e4:	95 91       	lpm	r25, Z+
    53e6:	23 ff       	sbrs	r18, 3
    53e8:	91 91       	ld	r25, Z+
    53ea:	ff 87       	std	Y+15, r31	; 0x0f
    53ec:	ee 87       	std	Y+14, r30	; 0x0e
    53ee:	99 23       	and	r25, r25
    53f0:	09 f0       	breq	.+2      	; 0x53f4 <vfprintf+0xf8>
    53f2:	bc cf       	rjmp	.-136    	; 0x536c <vfprintf+0x70>
    53f4:	89 2f       	mov	r24, r25
    53f6:	85 54       	subi	r24, 0x45	; 69
    53f8:	83 30       	cpi	r24, 0x03	; 3
    53fa:	20 f4       	brcc	.+8      	; 0x5404 <vfprintf+0x108>
    53fc:	81 2f       	mov	r24, r17
    53fe:	80 61       	ori	r24, 0x10	; 16
    5400:	90 5e       	subi	r25, 0xE0	; 224
    5402:	07 c0       	rjmp	.+14     	; 0x5412 <vfprintf+0x116>
    5404:	89 2f       	mov	r24, r25
    5406:	85 56       	subi	r24, 0x65	; 101
    5408:	83 30       	cpi	r24, 0x03	; 3
    540a:	08 f0       	brcs	.+2      	; 0x540e <vfprintf+0x112>
    540c:	8f c1       	rjmp	.+798    	; 0x572c <vfprintf+0x430>
    540e:	81 2f       	mov	r24, r17
    5410:	8f 7e       	andi	r24, 0xEF	; 239
    5412:	86 fd       	sbrc	r24, 6
    5414:	02 c0       	rjmp	.+4      	; 0x541a <vfprintf+0x11e>
    5416:	76 e0       	ldi	r23, 0x06	; 6
    5418:	97 2e       	mov	r9, r23
    541a:	6f e3       	ldi	r22, 0x3F	; 63
    541c:	f6 2e       	mov	r15, r22
    541e:	f8 22       	and	r15, r24
    5420:	95 36       	cpi	r25, 0x65	; 101
    5422:	19 f4       	brne	.+6      	; 0x542a <vfprintf+0x12e>
    5424:	f0 e4       	ldi	r31, 0x40	; 64
    5426:	ff 2a       	or	r15, r31
    5428:	07 c0       	rjmp	.+14     	; 0x5438 <vfprintf+0x13c>
    542a:	96 36       	cpi	r25, 0x66	; 102
    542c:	19 f4       	brne	.+6      	; 0x5434 <vfprintf+0x138>
    542e:	20 e8       	ldi	r18, 0x80	; 128
    5430:	f2 2a       	or	r15, r18
    5432:	02 c0       	rjmp	.+4      	; 0x5438 <vfprintf+0x13c>
    5434:	91 10       	cpse	r9, r1
    5436:	9a 94       	dec	r9
    5438:	f7 fe       	sbrs	r15, 7
    543a:	0a c0       	rjmp	.+20     	; 0x5450 <vfprintf+0x154>
    543c:	3b e3       	ldi	r19, 0x3B	; 59
    543e:	39 15       	cp	r19, r9
    5440:	18 f4       	brcc	.+6      	; 0x5448 <vfprintf+0x14c>
    5442:	5c e3       	ldi	r21, 0x3C	; 60
    5444:	b5 2e       	mov	r11, r21
    5446:	02 c0       	rjmp	.+4      	; 0x544c <vfprintf+0x150>
    5448:	b9 2c       	mov	r11, r9
    544a:	b3 94       	inc	r11
    544c:	27 e0       	ldi	r18, 0x07	; 7
    544e:	09 c0       	rjmp	.+18     	; 0x5462 <vfprintf+0x166>
    5450:	47 e0       	ldi	r20, 0x07	; 7
    5452:	49 15       	cp	r20, r9
    5454:	20 f4       	brcc	.+8      	; 0x545e <vfprintf+0x162>
    5456:	bb 24       	eor	r11, r11
    5458:	47 e0       	ldi	r20, 0x07	; 7
    545a:	94 2e       	mov	r9, r20
    545c:	f7 cf       	rjmp	.-18     	; 0x544c <vfprintf+0x150>
    545e:	29 2d       	mov	r18, r9
    5460:	bb 24       	eor	r11, r11
    5462:	c6 01       	movw	r24, r12
    5464:	04 96       	adiw	r24, 0x04	; 4
    5466:	9d 87       	std	Y+13, r25	; 0x0d
    5468:	8c 87       	std	Y+12, r24	; 0x0c
    546a:	f6 01       	movw	r30, r12
    546c:	60 81       	ld	r22, Z
    546e:	71 81       	ldd	r23, Z+1	; 0x01
    5470:	82 81       	ldd	r24, Z+2	; 0x02
    5472:	93 81       	ldd	r25, Z+3	; 0x03
    5474:	ae 01       	movw	r20, r28
    5476:	4f 5f       	subi	r20, 0xFF	; 255
    5478:	5f 4f       	sbci	r21, 0xFF	; 255
    547a:	0b 2d       	mov	r16, r11
    547c:	a4 d4       	rcall	.+2376   	; 0x5dc6 <__ftoa_engine>
    547e:	6c 01       	movw	r12, r24
    5480:	09 81       	ldd	r16, Y+1	; 0x01
    5482:	20 2e       	mov	r2, r16
    5484:	33 24       	eor	r3, r3
    5486:	00 ff       	sbrs	r16, 0
    5488:	04 c0       	rjmp	.+8      	; 0x5492 <vfprintf+0x196>
    548a:	03 fd       	sbrc	r16, 3
    548c:	02 c0       	rjmp	.+4      	; 0x5492 <vfprintf+0x196>
    548e:	1d e2       	ldi	r17, 0x2D	; 45
    5490:	09 c0       	rjmp	.+18     	; 0x54a4 <vfprintf+0x1a8>
    5492:	f1 fe       	sbrs	r15, 1
    5494:	02 c0       	rjmp	.+4      	; 0x549a <vfprintf+0x19e>
    5496:	1b e2       	ldi	r17, 0x2B	; 43
    5498:	05 c0       	rjmp	.+10     	; 0x54a4 <vfprintf+0x1a8>
    549a:	f2 fc       	sbrc	r15, 2
    549c:	02 c0       	rjmp	.+4      	; 0x54a2 <vfprintf+0x1a6>
    549e:	10 e0       	ldi	r17, 0x00	; 0
    54a0:	01 c0       	rjmp	.+2      	; 0x54a4 <vfprintf+0x1a8>
    54a2:	10 e2       	ldi	r17, 0x20	; 32
    54a4:	c1 01       	movw	r24, r2
    54a6:	8c 70       	andi	r24, 0x0C	; 12
    54a8:	90 70       	andi	r25, 0x00	; 0
    54aa:	89 2b       	or	r24, r25
    54ac:	a1 f1       	breq	.+104    	; 0x5516 <vfprintf+0x21a>
    54ae:	11 23       	and	r17, r17
    54b0:	11 f4       	brne	.+4      	; 0x54b6 <vfprintf+0x1ba>
    54b2:	83 e0       	ldi	r24, 0x03	; 3
    54b4:	01 c0       	rjmp	.+2      	; 0x54b8 <vfprintf+0x1bc>
    54b6:	84 e0       	ldi	r24, 0x04	; 4
    54b8:	88 15       	cp	r24, r8
    54ba:	10 f0       	brcs	.+4      	; 0x54c0 <vfprintf+0x1c4>
    54bc:	88 24       	eor	r8, r8
    54be:	09 c0       	rjmp	.+18     	; 0x54d2 <vfprintf+0x1d6>
    54c0:	88 1a       	sub	r8, r24
    54c2:	f3 fc       	sbrc	r15, 3
    54c4:	06 c0       	rjmp	.+12     	; 0x54d2 <vfprintf+0x1d6>
    54c6:	80 e2       	ldi	r24, 0x20	; 32
    54c8:	90 e0       	ldi	r25, 0x00	; 0
    54ca:	b3 01       	movw	r22, r6
    54cc:	6a d5       	rcall	.+2772   	; 0x5fa2 <fputc>
    54ce:	8a 94       	dec	r8
    54d0:	d1 f7       	brne	.-12     	; 0x54c6 <vfprintf+0x1ca>
    54d2:	11 23       	and	r17, r17
    54d4:	21 f0       	breq	.+8      	; 0x54de <vfprintf+0x1e2>
    54d6:	81 2f       	mov	r24, r17
    54d8:	90 e0       	ldi	r25, 0x00	; 0
    54da:	b3 01       	movw	r22, r6
    54dc:	62 d5       	rcall	.+2756   	; 0x5fa2 <fputc>
    54de:	23 fe       	sbrs	r2, 3
    54e0:	03 c0       	rjmp	.+6      	; 0x54e8 <vfprintf+0x1ec>
    54e2:	0f e5       	ldi	r16, 0x5F	; 95
    54e4:	15 e0       	ldi	r17, 0x05	; 5
    54e6:	0d c0       	rjmp	.+26     	; 0x5502 <vfprintf+0x206>
    54e8:	03 e6       	ldi	r16, 0x63	; 99
    54ea:	15 e0       	ldi	r17, 0x05	; 5
    54ec:	0a c0       	rjmp	.+20     	; 0x5502 <vfprintf+0x206>
    54ee:	e1 14       	cp	r14, r1
    54f0:	f1 04       	cpc	r15, r1
    54f2:	09 f0       	breq	.+2      	; 0x54f6 <vfprintf+0x1fa>
    54f4:	80 52       	subi	r24, 0x20	; 32
    54f6:	90 e0       	ldi	r25, 0x00	; 0
    54f8:	b3 01       	movw	r22, r6
    54fa:	53 d5       	rcall	.+2726   	; 0x5fa2 <fputc>
    54fc:	0f 5f       	subi	r16, 0xFF	; 255
    54fe:	1f 4f       	sbci	r17, 0xFF	; 255
    5500:	05 c0       	rjmp	.+10     	; 0x550c <vfprintf+0x210>
    5502:	ef 2c       	mov	r14, r15
    5504:	ff 24       	eor	r15, r15
    5506:	f0 e1       	ldi	r31, 0x10	; 16
    5508:	ef 22       	and	r14, r31
    550a:	ff 24       	eor	r15, r15
    550c:	f8 01       	movw	r30, r16
    550e:	84 91       	lpm	r24, Z+
    5510:	88 23       	and	r24, r24
    5512:	69 f7       	brne	.-38     	; 0x54ee <vfprintf+0x1f2>
    5514:	08 c1       	rjmp	.+528    	; 0x5726 <vfprintf+0x42a>
    5516:	f7 fe       	sbrs	r15, 7
    5518:	12 c0       	rjmp	.+36     	; 0x553e <vfprintf+0x242>
    551a:	bc 0c       	add	r11, r12
    551c:	24 fe       	sbrs	r2, 4
    551e:	04 c0       	rjmp	.+8      	; 0x5528 <vfprintf+0x22c>
    5520:	8a 81       	ldd	r24, Y+2	; 0x02
    5522:	81 33       	cpi	r24, 0x31	; 49
    5524:	09 f4       	brne	.+2      	; 0x5528 <vfprintf+0x22c>
    5526:	ba 94       	dec	r11
    5528:	1b 14       	cp	r1, r11
    552a:	1c f0       	brlt	.+6      	; 0x5532 <vfprintf+0x236>
    552c:	bb 24       	eor	r11, r11
    552e:	b3 94       	inc	r11
    5530:	2d c0       	rjmp	.+90     	; 0x558c <vfprintf+0x290>
    5532:	f8 e0       	ldi	r31, 0x08	; 8
    5534:	fb 15       	cp	r31, r11
    5536:	50 f5       	brcc	.+84     	; 0x558c <vfprintf+0x290>
    5538:	38 e0       	ldi	r19, 0x08	; 8
    553a:	b3 2e       	mov	r11, r19
    553c:	27 c0       	rjmp	.+78     	; 0x558c <vfprintf+0x290>
    553e:	f6 fc       	sbrc	r15, 6
    5540:	25 c0       	rjmp	.+74     	; 0x558c <vfprintf+0x290>
    5542:	89 2d       	mov	r24, r9
    5544:	90 e0       	ldi	r25, 0x00	; 0
    5546:	8c 15       	cp	r24, r12
    5548:	9d 05       	cpc	r25, r13
    554a:	4c f0       	brlt	.+18     	; 0x555e <vfprintf+0x262>
    554c:	2c ef       	ldi	r18, 0xFC	; 252
    554e:	c2 16       	cp	r12, r18
    5550:	2f ef       	ldi	r18, 0xFF	; 255
    5552:	d2 06       	cpc	r13, r18
    5554:	24 f0       	brlt	.+8      	; 0x555e <vfprintf+0x262>
    5556:	30 e8       	ldi	r19, 0x80	; 128
    5558:	f3 2a       	or	r15, r19
    555a:	01 c0       	rjmp	.+2      	; 0x555e <vfprintf+0x262>
    555c:	9a 94       	dec	r9
    555e:	99 20       	and	r9, r9
    5560:	49 f0       	breq	.+18     	; 0x5574 <vfprintf+0x278>
    5562:	e2 e0       	ldi	r30, 0x02	; 2
    5564:	f0 e0       	ldi	r31, 0x00	; 0
    5566:	ec 0f       	add	r30, r28
    5568:	fd 1f       	adc	r31, r29
    556a:	e9 0d       	add	r30, r9
    556c:	f1 1d       	adc	r31, r1
    556e:	80 81       	ld	r24, Z
    5570:	80 33       	cpi	r24, 0x30	; 48
    5572:	a1 f3       	breq	.-24     	; 0x555c <vfprintf+0x260>
    5574:	f7 fe       	sbrs	r15, 7
    5576:	0a c0       	rjmp	.+20     	; 0x558c <vfprintf+0x290>
    5578:	b9 2c       	mov	r11, r9
    557a:	b3 94       	inc	r11
    557c:	89 2d       	mov	r24, r9
    557e:	90 e0       	ldi	r25, 0x00	; 0
    5580:	c8 16       	cp	r12, r24
    5582:	d9 06       	cpc	r13, r25
    5584:	14 f0       	brlt	.+4      	; 0x558a <vfprintf+0x28e>
    5586:	99 24       	eor	r9, r9
    5588:	01 c0       	rjmp	.+2      	; 0x558c <vfprintf+0x290>
    558a:	9c 18       	sub	r9, r12
    558c:	f7 fc       	sbrc	r15, 7
    558e:	03 c0       	rjmp	.+6      	; 0x5596 <vfprintf+0x29a>
    5590:	25 e0       	ldi	r18, 0x05	; 5
    5592:	30 e0       	ldi	r19, 0x00	; 0
    5594:	09 c0       	rjmp	.+18     	; 0x55a8 <vfprintf+0x2ac>
    5596:	1c 14       	cp	r1, r12
    5598:	1d 04       	cpc	r1, r13
    559a:	1c f0       	brlt	.+6      	; 0x55a2 <vfprintf+0x2a6>
    559c:	21 e0       	ldi	r18, 0x01	; 1
    559e:	30 e0       	ldi	r19, 0x00	; 0
    55a0:	03 c0       	rjmp	.+6      	; 0x55a8 <vfprintf+0x2ac>
    55a2:	96 01       	movw	r18, r12
    55a4:	2f 5f       	subi	r18, 0xFF	; 255
    55a6:	3f 4f       	sbci	r19, 0xFF	; 255
    55a8:	11 23       	and	r17, r17
    55aa:	11 f0       	breq	.+4      	; 0x55b0 <vfprintf+0x2b4>
    55ac:	2f 5f       	subi	r18, 0xFF	; 255
    55ae:	3f 4f       	sbci	r19, 0xFF	; 255
    55b0:	99 20       	and	r9, r9
    55b2:	29 f0       	breq	.+10     	; 0x55be <vfprintf+0x2c2>
    55b4:	89 2d       	mov	r24, r9
    55b6:	90 e0       	ldi	r25, 0x00	; 0
    55b8:	01 96       	adiw	r24, 0x01	; 1
    55ba:	28 0f       	add	r18, r24
    55bc:	39 1f       	adc	r19, r25
    55be:	88 2d       	mov	r24, r8
    55c0:	90 e0       	ldi	r25, 0x00	; 0
    55c2:	28 17       	cp	r18, r24
    55c4:	39 07       	cpc	r19, r25
    55c6:	14 f0       	brlt	.+4      	; 0x55cc <vfprintf+0x2d0>
    55c8:	88 24       	eor	r8, r8
    55ca:	01 c0       	rjmp	.+2      	; 0x55ce <vfprintf+0x2d2>
    55cc:	82 1a       	sub	r8, r18
    55ce:	4f 2c       	mov	r4, r15
    55d0:	55 24       	eor	r5, r5
    55d2:	c2 01       	movw	r24, r4
    55d4:	89 70       	andi	r24, 0x09	; 9
    55d6:	90 70       	andi	r25, 0x00	; 0
    55d8:	89 2b       	or	r24, r25
    55da:	31 f0       	breq	.+12     	; 0x55e8 <vfprintf+0x2ec>
    55dc:	07 c0       	rjmp	.+14     	; 0x55ec <vfprintf+0x2f0>
    55de:	80 e2       	ldi	r24, 0x20	; 32
    55e0:	90 e0       	ldi	r25, 0x00	; 0
    55e2:	b3 01       	movw	r22, r6
    55e4:	de d4       	rcall	.+2492   	; 0x5fa2 <fputc>
    55e6:	8a 94       	dec	r8
    55e8:	88 20       	and	r8, r8
    55ea:	c9 f7       	brne	.-14     	; 0x55de <vfprintf+0x2e2>
    55ec:	11 23       	and	r17, r17
    55ee:	21 f0       	breq	.+8      	; 0x55f8 <vfprintf+0x2fc>
    55f0:	81 2f       	mov	r24, r17
    55f2:	90 e0       	ldi	r25, 0x00	; 0
    55f4:	b3 01       	movw	r22, r6
    55f6:	d5 d4       	rcall	.+2474   	; 0x5fa2 <fputc>
    55f8:	43 fe       	sbrs	r4, 3
    55fa:	06 c0       	rjmp	.+12     	; 0x5608 <vfprintf+0x30c>
    55fc:	07 c0       	rjmp	.+14     	; 0x560c <vfprintf+0x310>
    55fe:	80 e3       	ldi	r24, 0x30	; 48
    5600:	90 e0       	ldi	r25, 0x00	; 0
    5602:	b3 01       	movw	r22, r6
    5604:	ce d4       	rcall	.+2460   	; 0x5fa2 <fputc>
    5606:	8a 94       	dec	r8
    5608:	88 20       	and	r8, r8
    560a:	c9 f7       	brne	.-14     	; 0x55fe <vfprintf+0x302>
    560c:	f7 fe       	sbrs	r15, 7
    560e:	44 c0       	rjmp	.+136    	; 0x5698 <vfprintf+0x39c>
    5610:	86 01       	movw	r16, r12
    5612:	d7 fe       	sbrs	r13, 7
    5614:	02 c0       	rjmp	.+4      	; 0x561a <vfprintf+0x31e>
    5616:	00 e0       	ldi	r16, 0x00	; 0
    5618:	10 e0       	ldi	r17, 0x00	; 0
    561a:	76 01       	movw	r14, r12
    561c:	08 94       	sec
    561e:	e1 1c       	adc	r14, r1
    5620:	f1 1c       	adc	r15, r1
    5622:	e0 1a       	sub	r14, r16
    5624:	f1 0a       	sbc	r15, r17
    5626:	41 e0       	ldi	r20, 0x01	; 1
    5628:	50 e0       	ldi	r21, 0x00	; 0
    562a:	4c 0f       	add	r20, r28
    562c:	5d 1f       	adc	r21, r29
    562e:	e4 0e       	add	r14, r20
    5630:	f5 1e       	adc	r15, r21
    5632:	26 01       	movw	r4, r12
    5634:	4b 18       	sub	r4, r11
    5636:	51 08       	sbc	r5, r1
    5638:	89 2d       	mov	r24, r9
    563a:	90 e0       	ldi	r25, 0x00	; 0
    563c:	aa 24       	eor	r10, r10
    563e:	bb 24       	eor	r11, r11
    5640:	a8 1a       	sub	r10, r24
    5642:	b9 0a       	sbc	r11, r25
    5644:	5f ef       	ldi	r21, 0xFF	; 255
    5646:	0f 3f       	cpi	r16, 0xFF	; 255
    5648:	15 07       	cpc	r17, r21
    564a:	21 f4       	brne	.+8      	; 0x5654 <vfprintf+0x358>
    564c:	8e e2       	ldi	r24, 0x2E	; 46
    564e:	90 e0       	ldi	r25, 0x00	; 0
    5650:	b3 01       	movw	r22, r6
    5652:	a7 d4       	rcall	.+2382   	; 0x5fa2 <fputc>
    5654:	c0 16       	cp	r12, r16
    5656:	d1 06       	cpc	r13, r17
    5658:	34 f0       	brlt	.+12     	; 0x5666 <vfprintf+0x36a>
    565a:	40 16       	cp	r4, r16
    565c:	51 06       	cpc	r5, r17
    565e:	1c f4       	brge	.+6      	; 0x5666 <vfprintf+0x36a>
    5660:	f7 01       	movw	r30, r14
    5662:	80 81       	ld	r24, Z
    5664:	01 c0       	rjmp	.+2      	; 0x5668 <vfprintf+0x36c>
    5666:	80 e3       	ldi	r24, 0x30	; 48
    5668:	01 50       	subi	r16, 0x01	; 1
    566a:	10 40       	sbci	r17, 0x00	; 0
    566c:	08 94       	sec
    566e:	e1 1c       	adc	r14, r1
    5670:	f1 1c       	adc	r15, r1
    5672:	0a 15       	cp	r16, r10
    5674:	1b 05       	cpc	r17, r11
    5676:	24 f0       	brlt	.+8      	; 0x5680 <vfprintf+0x384>
    5678:	90 e0       	ldi	r25, 0x00	; 0
    567a:	b3 01       	movw	r22, r6
    567c:	92 d4       	rcall	.+2340   	; 0x5fa2 <fputc>
    567e:	e2 cf       	rjmp	.-60     	; 0x5644 <vfprintf+0x348>
    5680:	0c 15       	cp	r16, r12
    5682:	1d 05       	cpc	r17, r13
    5684:	39 f4       	brne	.+14     	; 0x5694 <vfprintf+0x398>
    5686:	9a 81       	ldd	r25, Y+2	; 0x02
    5688:	96 33       	cpi	r25, 0x36	; 54
    568a:	18 f4       	brcc	.+6      	; 0x5692 <vfprintf+0x396>
    568c:	95 33       	cpi	r25, 0x35	; 53
    568e:	11 f4       	brne	.+4      	; 0x5694 <vfprintf+0x398>
    5690:	24 fe       	sbrs	r2, 4
    5692:	81 e3       	ldi	r24, 0x31	; 49
    5694:	90 e0       	ldi	r25, 0x00	; 0
    5696:	45 c0       	rjmp	.+138    	; 0x5722 <vfprintf+0x426>
    5698:	8a 81       	ldd	r24, Y+2	; 0x02
    569a:	81 33       	cpi	r24, 0x31	; 49
    569c:	09 f0       	breq	.+2      	; 0x56a0 <vfprintf+0x3a4>
    569e:	0f 7e       	andi	r16, 0xEF	; 239
    56a0:	90 e0       	ldi	r25, 0x00	; 0
    56a2:	b3 01       	movw	r22, r6
    56a4:	7e d4       	rcall	.+2300   	; 0x5fa2 <fputc>
    56a6:	99 20       	and	r9, r9
    56a8:	91 f0       	breq	.+36     	; 0x56ce <vfprintf+0x3d2>
    56aa:	8e e2       	ldi	r24, 0x2E	; 46
    56ac:	90 e0       	ldi	r25, 0x00	; 0
    56ae:	b3 01       	movw	r22, r6
    56b0:	78 d4       	rcall	.+2288   	; 0x5fa2 <fputc>
    56b2:	12 e0       	ldi	r17, 0x02	; 2
    56b4:	e1 e0       	ldi	r30, 0x01	; 1
    56b6:	f0 e0       	ldi	r31, 0x00	; 0
    56b8:	ec 0f       	add	r30, r28
    56ba:	fd 1f       	adc	r31, r29
    56bc:	e1 0f       	add	r30, r17
    56be:	f1 1d       	adc	r31, r1
    56c0:	1f 5f       	subi	r17, 0xFF	; 255
    56c2:	80 81       	ld	r24, Z
    56c4:	90 e0       	ldi	r25, 0x00	; 0
    56c6:	b3 01       	movw	r22, r6
    56c8:	6c d4       	rcall	.+2264   	; 0x5fa2 <fputc>
    56ca:	9a 94       	dec	r9
    56cc:	99 f7       	brne	.-26     	; 0x56b4 <vfprintf+0x3b8>
    56ce:	44 fc       	sbrc	r4, 4
    56d0:	03 c0       	rjmp	.+6      	; 0x56d8 <vfprintf+0x3dc>
    56d2:	85 e6       	ldi	r24, 0x65	; 101
    56d4:	90 e0       	ldi	r25, 0x00	; 0
    56d6:	02 c0       	rjmp	.+4      	; 0x56dc <vfprintf+0x3e0>
    56d8:	85 e4       	ldi	r24, 0x45	; 69
    56da:	90 e0       	ldi	r25, 0x00	; 0
    56dc:	b3 01       	movw	r22, r6
    56de:	61 d4       	rcall	.+2242   	; 0x5fa2 <fputc>
    56e0:	d7 fc       	sbrc	r13, 7
    56e2:	05 c0       	rjmp	.+10     	; 0x56ee <vfprintf+0x3f2>
    56e4:	c1 14       	cp	r12, r1
    56e6:	d1 04       	cpc	r13, r1
    56e8:	41 f4       	brne	.+16     	; 0x56fa <vfprintf+0x3fe>
    56ea:	04 ff       	sbrs	r16, 4
    56ec:	06 c0       	rjmp	.+12     	; 0x56fa <vfprintf+0x3fe>
    56ee:	d0 94       	com	r13
    56f0:	c1 94       	neg	r12
    56f2:	d1 08       	sbc	r13, r1
    56f4:	d3 94       	inc	r13
    56f6:	8d e2       	ldi	r24, 0x2D	; 45
    56f8:	01 c0       	rjmp	.+2      	; 0x56fc <vfprintf+0x400>
    56fa:	8b e2       	ldi	r24, 0x2B	; 43
    56fc:	90 e0       	ldi	r25, 0x00	; 0
    56fe:	b3 01       	movw	r22, r6
    5700:	50 d4       	rcall	.+2208   	; 0x5fa2 <fputc>
    5702:	80 e3       	ldi	r24, 0x30	; 48
    5704:	05 c0       	rjmp	.+10     	; 0x5710 <vfprintf+0x414>
    5706:	8f 5f       	subi	r24, 0xFF	; 255
    5708:	26 ef       	ldi	r18, 0xF6	; 246
    570a:	3f ef       	ldi	r19, 0xFF	; 255
    570c:	c2 0e       	add	r12, r18
    570e:	d3 1e       	adc	r13, r19
    5710:	3a e0       	ldi	r19, 0x0A	; 10
    5712:	c3 16       	cp	r12, r19
    5714:	d1 04       	cpc	r13, r1
    5716:	bc f7       	brge	.-18     	; 0x5706 <vfprintf+0x40a>
    5718:	90 e0       	ldi	r25, 0x00	; 0
    571a:	b3 01       	movw	r22, r6
    571c:	42 d4       	rcall	.+2180   	; 0x5fa2 <fputc>
    571e:	c6 01       	movw	r24, r12
    5720:	c0 96       	adiw	r24, 0x30	; 48
    5722:	b3 01       	movw	r22, r6
    5724:	3e d4       	rcall	.+2172   	; 0x5fa2 <fputc>
    5726:	cc 84       	ldd	r12, Y+12	; 0x0c
    5728:	dd 84       	ldd	r13, Y+13	; 0x0d
    572a:	46 c1       	rjmp	.+652    	; 0x59b8 <vfprintf+0x6bc>
    572c:	93 36       	cpi	r25, 0x63	; 99
    572e:	31 f0       	breq	.+12     	; 0x573c <vfprintf+0x440>
    5730:	93 37       	cpi	r25, 0x73	; 115
    5732:	99 f0       	breq	.+38     	; 0x575a <vfprintf+0x45e>
    5734:	93 35       	cpi	r25, 0x53	; 83
    5736:	09 f0       	breq	.+2      	; 0x573a <vfprintf+0x43e>
    5738:	55 c0       	rjmp	.+170    	; 0x57e4 <vfprintf+0x4e8>
    573a:	22 c0       	rjmp	.+68     	; 0x5780 <vfprintf+0x484>
    573c:	f6 01       	movw	r30, r12
    573e:	80 81       	ld	r24, Z
    5740:	89 83       	std	Y+1, r24	; 0x01
    5742:	5e 01       	movw	r10, r28
    5744:	08 94       	sec
    5746:	a1 1c       	adc	r10, r1
    5748:	b1 1c       	adc	r11, r1
    574a:	22 e0       	ldi	r18, 0x02	; 2
    574c:	30 e0       	ldi	r19, 0x00	; 0
    574e:	c2 0e       	add	r12, r18
    5750:	d3 1e       	adc	r13, r19
    5752:	21 e0       	ldi	r18, 0x01	; 1
    5754:	e2 2e       	mov	r14, r18
    5756:	f1 2c       	mov	r15, r1
    5758:	11 c0       	rjmp	.+34     	; 0x577c <vfprintf+0x480>
    575a:	f6 01       	movw	r30, r12
    575c:	a0 80       	ld	r10, Z
    575e:	b1 80       	ldd	r11, Z+1	; 0x01
    5760:	16 fd       	sbrc	r17, 6
    5762:	03 c0       	rjmp	.+6      	; 0x576a <vfprintf+0x46e>
    5764:	6f ef       	ldi	r22, 0xFF	; 255
    5766:	7f ef       	ldi	r23, 0xFF	; 255
    5768:	02 c0       	rjmp	.+4      	; 0x576e <vfprintf+0x472>
    576a:	69 2d       	mov	r22, r9
    576c:	70 e0       	ldi	r23, 0x00	; 0
    576e:	22 e0       	ldi	r18, 0x02	; 2
    5770:	30 e0       	ldi	r19, 0x00	; 0
    5772:	c2 0e       	add	r12, r18
    5774:	d3 1e       	adc	r13, r19
    5776:	c5 01       	movw	r24, r10
    5778:	09 d4       	rcall	.+2066   	; 0x5f8c <strnlen>
    577a:	7c 01       	movw	r14, r24
    577c:	1f 77       	andi	r17, 0x7F	; 127
    577e:	12 c0       	rjmp	.+36     	; 0x57a4 <vfprintf+0x4a8>
    5780:	f6 01       	movw	r30, r12
    5782:	a0 80       	ld	r10, Z
    5784:	b1 80       	ldd	r11, Z+1	; 0x01
    5786:	16 fd       	sbrc	r17, 6
    5788:	03 c0       	rjmp	.+6      	; 0x5790 <vfprintf+0x494>
    578a:	6f ef       	ldi	r22, 0xFF	; 255
    578c:	7f ef       	ldi	r23, 0xFF	; 255
    578e:	02 c0       	rjmp	.+4      	; 0x5794 <vfprintf+0x498>
    5790:	69 2d       	mov	r22, r9
    5792:	70 e0       	ldi	r23, 0x00	; 0
    5794:	22 e0       	ldi	r18, 0x02	; 2
    5796:	30 e0       	ldi	r19, 0x00	; 0
    5798:	c2 0e       	add	r12, r18
    579a:	d3 1e       	adc	r13, r19
    579c:	c5 01       	movw	r24, r10
    579e:	eb d3       	rcall	.+2006   	; 0x5f76 <strnlen_P>
    57a0:	7c 01       	movw	r14, r24
    57a2:	10 68       	ori	r17, 0x80	; 128
    57a4:	13 ff       	sbrs	r17, 3
    57a6:	06 c0       	rjmp	.+12     	; 0x57b4 <vfprintf+0x4b8>
    57a8:	19 c0       	rjmp	.+50     	; 0x57dc <vfprintf+0x4e0>
    57aa:	80 e2       	ldi	r24, 0x20	; 32
    57ac:	90 e0       	ldi	r25, 0x00	; 0
    57ae:	b3 01       	movw	r22, r6
    57b0:	f8 d3       	rcall	.+2032   	; 0x5fa2 <fputc>
    57b2:	8a 94       	dec	r8
    57b4:	88 2d       	mov	r24, r8
    57b6:	90 e0       	ldi	r25, 0x00	; 0
    57b8:	e8 16       	cp	r14, r24
    57ba:	f9 06       	cpc	r15, r25
    57bc:	b0 f3       	brcs	.-20     	; 0x57aa <vfprintf+0x4ae>
    57be:	0e c0       	rjmp	.+28     	; 0x57dc <vfprintf+0x4e0>
    57c0:	f5 01       	movw	r30, r10
    57c2:	17 fd       	sbrc	r17, 7
    57c4:	85 91       	lpm	r24, Z+
    57c6:	17 ff       	sbrs	r17, 7
    57c8:	81 91       	ld	r24, Z+
    57ca:	5f 01       	movw	r10, r30
    57cc:	90 e0       	ldi	r25, 0x00	; 0
    57ce:	b3 01       	movw	r22, r6
    57d0:	e8 d3       	rcall	.+2000   	; 0x5fa2 <fputc>
    57d2:	81 10       	cpse	r8, r1
    57d4:	8a 94       	dec	r8
    57d6:	08 94       	sec
    57d8:	e1 08       	sbc	r14, r1
    57da:	f1 08       	sbc	r15, r1
    57dc:	e1 14       	cp	r14, r1
    57de:	f1 04       	cpc	r15, r1
    57e0:	79 f7       	brne	.-34     	; 0x57c0 <vfprintf+0x4c4>
    57e2:	ea c0       	rjmp	.+468    	; 0x59b8 <vfprintf+0x6bc>
    57e4:	94 36       	cpi	r25, 0x64	; 100
    57e6:	11 f0       	breq	.+4      	; 0x57ec <vfprintf+0x4f0>
    57e8:	99 36       	cpi	r25, 0x69	; 105
    57ea:	81 f5       	brne	.+96     	; 0x584c <vfprintf+0x550>
    57ec:	17 ff       	sbrs	r17, 7
    57ee:	08 c0       	rjmp	.+16     	; 0x5800 <vfprintf+0x504>
    57f0:	f6 01       	movw	r30, r12
    57f2:	20 81       	ld	r18, Z
    57f4:	31 81       	ldd	r19, Z+1	; 0x01
    57f6:	42 81       	ldd	r20, Z+2	; 0x02
    57f8:	53 81       	ldd	r21, Z+3	; 0x03
    57fa:	84 e0       	ldi	r24, 0x04	; 4
    57fc:	90 e0       	ldi	r25, 0x00	; 0
    57fe:	0a c0       	rjmp	.+20     	; 0x5814 <vfprintf+0x518>
    5800:	f6 01       	movw	r30, r12
    5802:	80 81       	ld	r24, Z
    5804:	91 81       	ldd	r25, Z+1	; 0x01
    5806:	9c 01       	movw	r18, r24
    5808:	44 27       	eor	r20, r20
    580a:	37 fd       	sbrc	r19, 7
    580c:	40 95       	com	r20
    580e:	54 2f       	mov	r21, r20
    5810:	82 e0       	ldi	r24, 0x02	; 2
    5812:	90 e0       	ldi	r25, 0x00	; 0
    5814:	c8 0e       	add	r12, r24
    5816:	d9 1e       	adc	r13, r25
    5818:	9f e6       	ldi	r25, 0x6F	; 111
    581a:	f9 2e       	mov	r15, r25
    581c:	f1 22       	and	r15, r17
    581e:	57 ff       	sbrs	r21, 7
    5820:	09 c0       	rjmp	.+18     	; 0x5834 <vfprintf+0x538>
    5822:	50 95       	com	r21
    5824:	40 95       	com	r20
    5826:	30 95       	com	r19
    5828:	21 95       	neg	r18
    582a:	3f 4f       	sbci	r19, 0xFF	; 255
    582c:	4f 4f       	sbci	r20, 0xFF	; 255
    582e:	5f 4f       	sbci	r21, 0xFF	; 255
    5830:	90 e8       	ldi	r25, 0x80	; 128
    5832:	f9 2a       	or	r15, r25
    5834:	ca 01       	movw	r24, r20
    5836:	b9 01       	movw	r22, r18
    5838:	ae 01       	movw	r20, r28
    583a:	4f 5f       	subi	r20, 0xFF	; 255
    583c:	5f 4f       	sbci	r21, 0xFF	; 255
    583e:	2a e0       	ldi	r18, 0x0A	; 10
    5840:	30 e0       	ldi	r19, 0x00	; 0
    5842:	22 d4       	rcall	.+2116   	; 0x6088 <__ultoa_invert>
    5844:	e8 2e       	mov	r14, r24
    5846:	e8 89       	ldd	r30, Y+16	; 0x10
    5848:	ee 1a       	sub	r14, r30
    584a:	40 c0       	rjmp	.+128    	; 0x58cc <vfprintf+0x5d0>
    584c:	95 37       	cpi	r25, 0x75	; 117
    584e:	21 f4       	brne	.+8      	; 0x5858 <vfprintf+0x55c>
    5850:	1f 7e       	andi	r17, 0xEF	; 239
    5852:	2a e0       	ldi	r18, 0x0A	; 10
    5854:	30 e0       	ldi	r19, 0x00	; 0
    5856:	1c c0       	rjmp	.+56     	; 0x5890 <vfprintf+0x594>
    5858:	19 7f       	andi	r17, 0xF9	; 249
    585a:	9f 36       	cpi	r25, 0x6F	; 111
    585c:	61 f0       	breq	.+24     	; 0x5876 <vfprintf+0x57a>
    585e:	90 37       	cpi	r25, 0x70	; 112
    5860:	20 f4       	brcc	.+8      	; 0x586a <vfprintf+0x56e>
    5862:	98 35       	cpi	r25, 0x58	; 88
    5864:	09 f0       	breq	.+2      	; 0x5868 <vfprintf+0x56c>
    5866:	ab c0       	rjmp	.+342    	; 0x59be <vfprintf+0x6c2>
    5868:	0f c0       	rjmp	.+30     	; 0x5888 <vfprintf+0x58c>
    586a:	90 37       	cpi	r25, 0x70	; 112
    586c:	39 f0       	breq	.+14     	; 0x587c <vfprintf+0x580>
    586e:	98 37       	cpi	r25, 0x78	; 120
    5870:	09 f0       	breq	.+2      	; 0x5874 <vfprintf+0x578>
    5872:	a5 c0       	rjmp	.+330    	; 0x59be <vfprintf+0x6c2>
    5874:	04 c0       	rjmp	.+8      	; 0x587e <vfprintf+0x582>
    5876:	28 e0       	ldi	r18, 0x08	; 8
    5878:	30 e0       	ldi	r19, 0x00	; 0
    587a:	0a c0       	rjmp	.+20     	; 0x5890 <vfprintf+0x594>
    587c:	10 61       	ori	r17, 0x10	; 16
    587e:	14 fd       	sbrc	r17, 4
    5880:	14 60       	ori	r17, 0x04	; 4
    5882:	20 e1       	ldi	r18, 0x10	; 16
    5884:	30 e0       	ldi	r19, 0x00	; 0
    5886:	04 c0       	rjmp	.+8      	; 0x5890 <vfprintf+0x594>
    5888:	14 fd       	sbrc	r17, 4
    588a:	16 60       	ori	r17, 0x06	; 6
    588c:	20 e1       	ldi	r18, 0x10	; 16
    588e:	32 e0       	ldi	r19, 0x02	; 2
    5890:	17 ff       	sbrs	r17, 7
    5892:	08 c0       	rjmp	.+16     	; 0x58a4 <vfprintf+0x5a8>
    5894:	f6 01       	movw	r30, r12
    5896:	60 81       	ld	r22, Z
    5898:	71 81       	ldd	r23, Z+1	; 0x01
    589a:	82 81       	ldd	r24, Z+2	; 0x02
    589c:	93 81       	ldd	r25, Z+3	; 0x03
    589e:	44 e0       	ldi	r20, 0x04	; 4
    58a0:	50 e0       	ldi	r21, 0x00	; 0
    58a2:	08 c0       	rjmp	.+16     	; 0x58b4 <vfprintf+0x5b8>
    58a4:	f6 01       	movw	r30, r12
    58a6:	80 81       	ld	r24, Z
    58a8:	91 81       	ldd	r25, Z+1	; 0x01
    58aa:	bc 01       	movw	r22, r24
    58ac:	80 e0       	ldi	r24, 0x00	; 0
    58ae:	90 e0       	ldi	r25, 0x00	; 0
    58b0:	42 e0       	ldi	r20, 0x02	; 2
    58b2:	50 e0       	ldi	r21, 0x00	; 0
    58b4:	c4 0e       	add	r12, r20
    58b6:	d5 1e       	adc	r13, r21
    58b8:	ae 01       	movw	r20, r28
    58ba:	4f 5f       	subi	r20, 0xFF	; 255
    58bc:	5f 4f       	sbci	r21, 0xFF	; 255
    58be:	e4 d3       	rcall	.+1992   	; 0x6088 <__ultoa_invert>
    58c0:	e8 2e       	mov	r14, r24
    58c2:	58 89       	ldd	r21, Y+16	; 0x10
    58c4:	e5 1a       	sub	r14, r21
    58c6:	8f e7       	ldi	r24, 0x7F	; 127
    58c8:	f8 2e       	mov	r15, r24
    58ca:	f1 22       	and	r15, r17
    58cc:	f6 fe       	sbrs	r15, 6
    58ce:	0b c0       	rjmp	.+22     	; 0x58e6 <vfprintf+0x5ea>
    58d0:	8e ef       	ldi	r24, 0xFE	; 254
    58d2:	f8 22       	and	r15, r24
    58d4:	e9 14       	cp	r14, r9
    58d6:	38 f4       	brcc	.+14     	; 0x58e6 <vfprintf+0x5ea>
    58d8:	f4 fe       	sbrs	r15, 4
    58da:	07 c0       	rjmp	.+14     	; 0x58ea <vfprintf+0x5ee>
    58dc:	f2 fc       	sbrc	r15, 2
    58de:	05 c0       	rjmp	.+10     	; 0x58ea <vfprintf+0x5ee>
    58e0:	9f ee       	ldi	r25, 0xEF	; 239
    58e2:	f9 22       	and	r15, r25
    58e4:	02 c0       	rjmp	.+4      	; 0x58ea <vfprintf+0x5ee>
    58e6:	1e 2d       	mov	r17, r14
    58e8:	01 c0       	rjmp	.+2      	; 0x58ec <vfprintf+0x5f0>
    58ea:	19 2d       	mov	r17, r9
    58ec:	f4 fe       	sbrs	r15, 4
    58ee:	0d c0       	rjmp	.+26     	; 0x590a <vfprintf+0x60e>
    58f0:	fe 01       	movw	r30, r28
    58f2:	ee 0d       	add	r30, r14
    58f4:	f1 1d       	adc	r31, r1
    58f6:	80 81       	ld	r24, Z
    58f8:	80 33       	cpi	r24, 0x30	; 48
    58fa:	19 f4       	brne	.+6      	; 0x5902 <vfprintf+0x606>
    58fc:	e9 ee       	ldi	r30, 0xE9	; 233
    58fe:	fe 22       	and	r15, r30
    5900:	08 c0       	rjmp	.+16     	; 0x5912 <vfprintf+0x616>
    5902:	1f 5f       	subi	r17, 0xFF	; 255
    5904:	f2 fe       	sbrs	r15, 2
    5906:	05 c0       	rjmp	.+10     	; 0x5912 <vfprintf+0x616>
    5908:	03 c0       	rjmp	.+6      	; 0x5910 <vfprintf+0x614>
    590a:	8f 2d       	mov	r24, r15
    590c:	86 78       	andi	r24, 0x86	; 134
    590e:	09 f0       	breq	.+2      	; 0x5912 <vfprintf+0x616>
    5910:	1f 5f       	subi	r17, 0xFF	; 255
    5912:	0f 2d       	mov	r16, r15
    5914:	f3 fc       	sbrc	r15, 3
    5916:	13 c0       	rjmp	.+38     	; 0x593e <vfprintf+0x642>
    5918:	f0 fe       	sbrs	r15, 0
    591a:	0e c0       	rjmp	.+28     	; 0x5938 <vfprintf+0x63c>
    591c:	18 15       	cp	r17, r8
    591e:	10 f0       	brcs	.+4      	; 0x5924 <vfprintf+0x628>
    5920:	9e 2c       	mov	r9, r14
    5922:	0a c0       	rjmp	.+20     	; 0x5938 <vfprintf+0x63c>
    5924:	9e 2c       	mov	r9, r14
    5926:	98 0c       	add	r9, r8
    5928:	91 1a       	sub	r9, r17
    592a:	18 2d       	mov	r17, r8
    592c:	05 c0       	rjmp	.+10     	; 0x5938 <vfprintf+0x63c>
    592e:	80 e2       	ldi	r24, 0x20	; 32
    5930:	90 e0       	ldi	r25, 0x00	; 0
    5932:	b3 01       	movw	r22, r6
    5934:	36 d3       	rcall	.+1644   	; 0x5fa2 <fputc>
    5936:	1f 5f       	subi	r17, 0xFF	; 255
    5938:	18 15       	cp	r17, r8
    593a:	c8 f3       	brcs	.-14     	; 0x592e <vfprintf+0x632>
    593c:	04 c0       	rjmp	.+8      	; 0x5946 <vfprintf+0x64a>
    593e:	18 15       	cp	r17, r8
    5940:	10 f4       	brcc	.+4      	; 0x5946 <vfprintf+0x64a>
    5942:	81 1a       	sub	r8, r17
    5944:	01 c0       	rjmp	.+2      	; 0x5948 <vfprintf+0x64c>
    5946:	88 24       	eor	r8, r8
    5948:	04 ff       	sbrs	r16, 4
    594a:	0e c0       	rjmp	.+28     	; 0x5968 <vfprintf+0x66c>
    594c:	80 e3       	ldi	r24, 0x30	; 48
    594e:	90 e0       	ldi	r25, 0x00	; 0
    5950:	b3 01       	movw	r22, r6
    5952:	27 d3       	rcall	.+1614   	; 0x5fa2 <fputc>
    5954:	02 ff       	sbrs	r16, 2
    5956:	1b c0       	rjmp	.+54     	; 0x598e <vfprintf+0x692>
    5958:	01 fd       	sbrc	r16, 1
    595a:	03 c0       	rjmp	.+6      	; 0x5962 <vfprintf+0x666>
    595c:	88 e7       	ldi	r24, 0x78	; 120
    595e:	90 e0       	ldi	r25, 0x00	; 0
    5960:	0e c0       	rjmp	.+28     	; 0x597e <vfprintf+0x682>
    5962:	88 e5       	ldi	r24, 0x58	; 88
    5964:	90 e0       	ldi	r25, 0x00	; 0
    5966:	0b c0       	rjmp	.+22     	; 0x597e <vfprintf+0x682>
    5968:	80 2f       	mov	r24, r16
    596a:	86 78       	andi	r24, 0x86	; 134
    596c:	81 f0       	breq	.+32     	; 0x598e <vfprintf+0x692>
    596e:	01 ff       	sbrs	r16, 1
    5970:	02 c0       	rjmp	.+4      	; 0x5976 <vfprintf+0x67a>
    5972:	8b e2       	ldi	r24, 0x2B	; 43
    5974:	01 c0       	rjmp	.+2      	; 0x5978 <vfprintf+0x67c>
    5976:	80 e2       	ldi	r24, 0x20	; 32
    5978:	f7 fc       	sbrc	r15, 7
    597a:	8d e2       	ldi	r24, 0x2D	; 45
    597c:	90 e0       	ldi	r25, 0x00	; 0
    597e:	b3 01       	movw	r22, r6
    5980:	10 d3       	rcall	.+1568   	; 0x5fa2 <fputc>
    5982:	05 c0       	rjmp	.+10     	; 0x598e <vfprintf+0x692>
    5984:	80 e3       	ldi	r24, 0x30	; 48
    5986:	90 e0       	ldi	r25, 0x00	; 0
    5988:	b3 01       	movw	r22, r6
    598a:	0b d3       	rcall	.+1558   	; 0x5fa2 <fputc>
    598c:	9a 94       	dec	r9
    598e:	e9 14       	cp	r14, r9
    5990:	c8 f3       	brcs	.-14     	; 0x5984 <vfprintf+0x688>
    5992:	ea 94       	dec	r14
    5994:	e1 e0       	ldi	r30, 0x01	; 1
    5996:	f0 e0       	ldi	r31, 0x00	; 0
    5998:	ec 0f       	add	r30, r28
    599a:	fd 1f       	adc	r31, r29
    599c:	ee 0d       	add	r30, r14
    599e:	f1 1d       	adc	r31, r1
    59a0:	80 81       	ld	r24, Z
    59a2:	90 e0       	ldi	r25, 0x00	; 0
    59a4:	b3 01       	movw	r22, r6
    59a6:	fd d2       	rcall	.+1530   	; 0x5fa2 <fputc>
    59a8:	ee 20       	and	r14, r14
    59aa:	99 f7       	brne	.-26     	; 0x5992 <vfprintf+0x696>
    59ac:	05 c0       	rjmp	.+10     	; 0x59b8 <vfprintf+0x6bc>
    59ae:	80 e2       	ldi	r24, 0x20	; 32
    59b0:	90 e0       	ldi	r25, 0x00	; 0
    59b2:	b3 01       	movw	r22, r6
    59b4:	f6 d2       	rcall	.+1516   	; 0x5fa2 <fputc>
    59b6:	8a 94       	dec	r8
    59b8:	88 20       	and	r8, r8
    59ba:	c9 f7       	brne	.-14     	; 0x59ae <vfprintf+0x6b2>
    59bc:	b6 cc       	rjmp	.-1684   	; 0x532a <vfprintf+0x2e>
    59be:	f3 01       	movw	r30, r6
    59c0:	66 81       	ldd	r22, Z+6	; 0x06
    59c2:	77 81       	ldd	r23, Z+7	; 0x07
    59c4:	cb 01       	movw	r24, r22
    59c6:	61 96       	adiw	r28, 0x11	; 17
    59c8:	e2 e1       	ldi	r30, 0x12	; 18
    59ca:	70 c0       	rjmp	.+224    	; 0x5aac <__epilogue_restores__>

000059cc <__mulsi3>:
    59cc:	62 9f       	mul	r22, r18
    59ce:	d0 01       	movw	r26, r0
    59d0:	73 9f       	mul	r23, r19
    59d2:	f0 01       	movw	r30, r0
    59d4:	82 9f       	mul	r24, r18
    59d6:	e0 0d       	add	r30, r0
    59d8:	f1 1d       	adc	r31, r1
    59da:	64 9f       	mul	r22, r20
    59dc:	e0 0d       	add	r30, r0
    59de:	f1 1d       	adc	r31, r1
    59e0:	92 9f       	mul	r25, r18
    59e2:	f0 0d       	add	r31, r0
    59e4:	83 9f       	mul	r24, r19
    59e6:	f0 0d       	add	r31, r0
    59e8:	74 9f       	mul	r23, r20
    59ea:	f0 0d       	add	r31, r0
    59ec:	65 9f       	mul	r22, r21
    59ee:	f0 0d       	add	r31, r0
    59f0:	99 27       	eor	r25, r25
    59f2:	72 9f       	mul	r23, r18
    59f4:	b0 0d       	add	r27, r0
    59f6:	e1 1d       	adc	r30, r1
    59f8:	f9 1f       	adc	r31, r25
    59fa:	63 9f       	mul	r22, r19
    59fc:	b0 0d       	add	r27, r0
    59fe:	e1 1d       	adc	r30, r1
    5a00:	f9 1f       	adc	r31, r25
    5a02:	bd 01       	movw	r22, r26
    5a04:	cf 01       	movw	r24, r30
    5a06:	11 24       	eor	r1, r1
    5a08:	08 95       	ret

00005a0a <__divmodhi4>:
    5a0a:	97 fb       	bst	r25, 7
    5a0c:	09 2e       	mov	r0, r25
    5a0e:	07 26       	eor	r0, r23
    5a10:	0a d0       	rcall	.+20     	; 0x5a26 <__divmodhi4_neg1>
    5a12:	77 fd       	sbrc	r23, 7
    5a14:	04 d0       	rcall	.+8      	; 0x5a1e <__divmodhi4_neg2>
    5a16:	65 d0       	rcall	.+202    	; 0x5ae2 <__udivmodhi4>
    5a18:	06 d0       	rcall	.+12     	; 0x5a26 <__divmodhi4_neg1>
    5a1a:	00 20       	and	r0, r0
    5a1c:	1a f4       	brpl	.+6      	; 0x5a24 <__divmodhi4_exit>

00005a1e <__divmodhi4_neg2>:
    5a1e:	70 95       	com	r23
    5a20:	61 95       	neg	r22
    5a22:	7f 4f       	sbci	r23, 0xFF	; 255

00005a24 <__divmodhi4_exit>:
    5a24:	08 95       	ret

00005a26 <__divmodhi4_neg1>:
    5a26:	f6 f7       	brtc	.-4      	; 0x5a24 <__divmodhi4_exit>
    5a28:	90 95       	com	r25
    5a2a:	81 95       	neg	r24
    5a2c:	9f 4f       	sbci	r25, 0xFF	; 255
    5a2e:	08 95       	ret

00005a30 <__udivmodsi4>:
    5a30:	a1 e2       	ldi	r26, 0x21	; 33
    5a32:	1a 2e       	mov	r1, r26
    5a34:	aa 1b       	sub	r26, r26
    5a36:	bb 1b       	sub	r27, r27
    5a38:	fd 01       	movw	r30, r26
    5a3a:	0d c0       	rjmp	.+26     	; 0x5a56 <__udivmodsi4_ep>

00005a3c <__udivmodsi4_loop>:
    5a3c:	aa 1f       	adc	r26, r26
    5a3e:	bb 1f       	adc	r27, r27
    5a40:	ee 1f       	adc	r30, r30
    5a42:	ff 1f       	adc	r31, r31
    5a44:	a2 17       	cp	r26, r18
    5a46:	b3 07       	cpc	r27, r19
    5a48:	e4 07       	cpc	r30, r20
    5a4a:	f5 07       	cpc	r31, r21
    5a4c:	20 f0       	brcs	.+8      	; 0x5a56 <__udivmodsi4_ep>
    5a4e:	a2 1b       	sub	r26, r18
    5a50:	b3 0b       	sbc	r27, r19
    5a52:	e4 0b       	sbc	r30, r20
    5a54:	f5 0b       	sbc	r31, r21

00005a56 <__udivmodsi4_ep>:
    5a56:	66 1f       	adc	r22, r22
    5a58:	77 1f       	adc	r23, r23
    5a5a:	88 1f       	adc	r24, r24
    5a5c:	99 1f       	adc	r25, r25
    5a5e:	1a 94       	dec	r1
    5a60:	69 f7       	brne	.-38     	; 0x5a3c <__udivmodsi4_loop>
    5a62:	60 95       	com	r22
    5a64:	70 95       	com	r23
    5a66:	80 95       	com	r24
    5a68:	90 95       	com	r25
    5a6a:	9b 01       	movw	r18, r22
    5a6c:	ac 01       	movw	r20, r24
    5a6e:	bd 01       	movw	r22, r26
    5a70:	cf 01       	movw	r24, r30
    5a72:	08 95       	ret

00005a74 <__prologue_saves__>:
    5a74:	2f 92       	push	r2
    5a76:	3f 92       	push	r3
    5a78:	4f 92       	push	r4
    5a7a:	5f 92       	push	r5
    5a7c:	6f 92       	push	r6
    5a7e:	7f 92       	push	r7
    5a80:	8f 92       	push	r8
    5a82:	9f 92       	push	r9
    5a84:	af 92       	push	r10
    5a86:	bf 92       	push	r11
    5a88:	cf 92       	push	r12
    5a8a:	df 92       	push	r13
    5a8c:	ef 92       	push	r14
    5a8e:	ff 92       	push	r15
    5a90:	0f 93       	push	r16
    5a92:	1f 93       	push	r17
    5a94:	cf 93       	push	r28
    5a96:	df 93       	push	r29
    5a98:	cd b7       	in	r28, 0x3d	; 61
    5a9a:	de b7       	in	r29, 0x3e	; 62
    5a9c:	ca 1b       	sub	r28, r26
    5a9e:	db 0b       	sbc	r29, r27
    5aa0:	0f b6       	in	r0, 0x3f	; 63
    5aa2:	f8 94       	cli
    5aa4:	de bf       	out	0x3e, r29	; 62
    5aa6:	0f be       	out	0x3f, r0	; 63
    5aa8:	cd bf       	out	0x3d, r28	; 61
    5aaa:	09 94       	ijmp

00005aac <__epilogue_restores__>:
    5aac:	2a 88       	ldd	r2, Y+18	; 0x12
    5aae:	39 88       	ldd	r3, Y+17	; 0x11
    5ab0:	48 88       	ldd	r4, Y+16	; 0x10
    5ab2:	5f 84       	ldd	r5, Y+15	; 0x0f
    5ab4:	6e 84       	ldd	r6, Y+14	; 0x0e
    5ab6:	7d 84       	ldd	r7, Y+13	; 0x0d
    5ab8:	8c 84       	ldd	r8, Y+12	; 0x0c
    5aba:	9b 84       	ldd	r9, Y+11	; 0x0b
    5abc:	aa 84       	ldd	r10, Y+10	; 0x0a
    5abe:	b9 84       	ldd	r11, Y+9	; 0x09
    5ac0:	c8 84       	ldd	r12, Y+8	; 0x08
    5ac2:	df 80       	ldd	r13, Y+7	; 0x07
    5ac4:	ee 80       	ldd	r14, Y+6	; 0x06
    5ac6:	fd 80       	ldd	r15, Y+5	; 0x05
    5ac8:	0c 81       	ldd	r16, Y+4	; 0x04
    5aca:	1b 81       	ldd	r17, Y+3	; 0x03
    5acc:	aa 81       	ldd	r26, Y+2	; 0x02
    5ace:	b9 81       	ldd	r27, Y+1	; 0x01
    5ad0:	ce 0f       	add	r28, r30
    5ad2:	d1 1d       	adc	r29, r1
    5ad4:	0f b6       	in	r0, 0x3f	; 63
    5ad6:	f8 94       	cli
    5ad8:	de bf       	out	0x3e, r29	; 62
    5ada:	0f be       	out	0x3f, r0	; 63
    5adc:	cd bf       	out	0x3d, r28	; 61
    5ade:	ed 01       	movw	r28, r26
    5ae0:	08 95       	ret

00005ae2 <__udivmodhi4>:
    5ae2:	aa 1b       	sub	r26, r26
    5ae4:	bb 1b       	sub	r27, r27
    5ae6:	51 e1       	ldi	r21, 0x11	; 17
    5ae8:	07 c0       	rjmp	.+14     	; 0x5af8 <__udivmodhi4_ep>

00005aea <__udivmodhi4_loop>:
    5aea:	aa 1f       	adc	r26, r26
    5aec:	bb 1f       	adc	r27, r27
    5aee:	a6 17       	cp	r26, r22
    5af0:	b7 07       	cpc	r27, r23
    5af2:	10 f0       	brcs	.+4      	; 0x5af8 <__udivmodhi4_ep>
    5af4:	a6 1b       	sub	r26, r22
    5af6:	b7 0b       	sbc	r27, r23

00005af8 <__udivmodhi4_ep>:
    5af8:	88 1f       	adc	r24, r24
    5afa:	99 1f       	adc	r25, r25
    5afc:	5a 95       	dec	r21
    5afe:	a9 f7       	brne	.-22     	; 0x5aea <__udivmodhi4_loop>
    5b00:	80 95       	com	r24
    5b02:	90 95       	com	r25
    5b04:	bc 01       	movw	r22, r24
    5b06:	cd 01       	movw	r24, r26
    5b08:	08 95       	ret

00005b0a <malloc>:
    5b0a:	cf 93       	push	r28
    5b0c:	df 93       	push	r29
    5b0e:	bc 01       	movw	r22, r24
    5b10:	82 30       	cpi	r24, 0x02	; 2
    5b12:	91 05       	cpc	r25, r1
    5b14:	10 f4       	brcc	.+4      	; 0x5b1a <malloc+0x10>
    5b16:	62 e0       	ldi	r22, 0x02	; 2
    5b18:	70 e0       	ldi	r23, 0x00	; 0
    5b1a:	a0 91 1d 05 	lds	r26, 0x051D
    5b1e:	b0 91 1e 05 	lds	r27, 0x051E
    5b22:	ed 01       	movw	r28, r26
    5b24:	e0 e0       	ldi	r30, 0x00	; 0
    5b26:	f0 e0       	ldi	r31, 0x00	; 0
    5b28:	40 e0       	ldi	r20, 0x00	; 0
    5b2a:	50 e0       	ldi	r21, 0x00	; 0
    5b2c:	21 c0       	rjmp	.+66     	; 0x5b70 <malloc+0x66>
    5b2e:	88 81       	ld	r24, Y
    5b30:	99 81       	ldd	r25, Y+1	; 0x01
    5b32:	86 17       	cp	r24, r22
    5b34:	97 07       	cpc	r25, r23
    5b36:	69 f4       	brne	.+26     	; 0x5b52 <malloc+0x48>
    5b38:	8a 81       	ldd	r24, Y+2	; 0x02
    5b3a:	9b 81       	ldd	r25, Y+3	; 0x03
    5b3c:	30 97       	sbiw	r30, 0x00	; 0
    5b3e:	19 f0       	breq	.+6      	; 0x5b46 <malloc+0x3c>
    5b40:	93 83       	std	Z+3, r25	; 0x03
    5b42:	82 83       	std	Z+2, r24	; 0x02
    5b44:	04 c0       	rjmp	.+8      	; 0x5b4e <malloc+0x44>
    5b46:	90 93 1e 05 	sts	0x051E, r25
    5b4a:	80 93 1d 05 	sts	0x051D, r24
    5b4e:	fe 01       	movw	r30, r28
    5b50:	34 c0       	rjmp	.+104    	; 0x5bba <malloc+0xb0>
    5b52:	68 17       	cp	r22, r24
    5b54:	79 07       	cpc	r23, r25
    5b56:	38 f4       	brcc	.+14     	; 0x5b66 <malloc+0x5c>
    5b58:	41 15       	cp	r20, r1
    5b5a:	51 05       	cpc	r21, r1
    5b5c:	19 f0       	breq	.+6      	; 0x5b64 <malloc+0x5a>
    5b5e:	84 17       	cp	r24, r20
    5b60:	95 07       	cpc	r25, r21
    5b62:	08 f4       	brcc	.+2      	; 0x5b66 <malloc+0x5c>
    5b64:	ac 01       	movw	r20, r24
    5b66:	fe 01       	movw	r30, r28
    5b68:	8a 81       	ldd	r24, Y+2	; 0x02
    5b6a:	9b 81       	ldd	r25, Y+3	; 0x03
    5b6c:	9c 01       	movw	r18, r24
    5b6e:	e9 01       	movw	r28, r18
    5b70:	20 97       	sbiw	r28, 0x00	; 0
    5b72:	e9 f6       	brne	.-70     	; 0x5b2e <malloc+0x24>
    5b74:	41 15       	cp	r20, r1
    5b76:	51 05       	cpc	r21, r1
    5b78:	a9 f1       	breq	.+106    	; 0x5be4 <malloc+0xda>
    5b7a:	ca 01       	movw	r24, r20
    5b7c:	86 1b       	sub	r24, r22
    5b7e:	97 0b       	sbc	r25, r23
    5b80:	04 97       	sbiw	r24, 0x04	; 4
    5b82:	08 f4       	brcc	.+2      	; 0x5b86 <malloc+0x7c>
    5b84:	ba 01       	movw	r22, r20
    5b86:	e0 e0       	ldi	r30, 0x00	; 0
    5b88:	f0 e0       	ldi	r31, 0x00	; 0
    5b8a:	2a c0       	rjmp	.+84     	; 0x5be0 <malloc+0xd6>
    5b8c:	8d 91       	ld	r24, X+
    5b8e:	9c 91       	ld	r25, X
    5b90:	11 97       	sbiw	r26, 0x01	; 1
    5b92:	84 17       	cp	r24, r20
    5b94:	95 07       	cpc	r25, r21
    5b96:	f9 f4       	brne	.+62     	; 0x5bd6 <malloc+0xcc>
    5b98:	64 17       	cp	r22, r20
    5b9a:	75 07       	cpc	r23, r21
    5b9c:	81 f4       	brne	.+32     	; 0x5bbe <malloc+0xb4>
    5b9e:	12 96       	adiw	r26, 0x02	; 2
    5ba0:	8d 91       	ld	r24, X+
    5ba2:	9c 91       	ld	r25, X
    5ba4:	13 97       	sbiw	r26, 0x03	; 3
    5ba6:	30 97       	sbiw	r30, 0x00	; 0
    5ba8:	19 f0       	breq	.+6      	; 0x5bb0 <malloc+0xa6>
    5baa:	93 83       	std	Z+3, r25	; 0x03
    5bac:	82 83       	std	Z+2, r24	; 0x02
    5bae:	04 c0       	rjmp	.+8      	; 0x5bb8 <malloc+0xae>
    5bb0:	90 93 1e 05 	sts	0x051E, r25
    5bb4:	80 93 1d 05 	sts	0x051D, r24
    5bb8:	fd 01       	movw	r30, r26
    5bba:	32 96       	adiw	r30, 0x02	; 2
    5bbc:	4f c0       	rjmp	.+158    	; 0x5c5c <malloc+0x152>
    5bbe:	ca 01       	movw	r24, r20
    5bc0:	86 1b       	sub	r24, r22
    5bc2:	97 0b       	sbc	r25, r23
    5bc4:	fd 01       	movw	r30, r26
    5bc6:	e8 0f       	add	r30, r24
    5bc8:	f9 1f       	adc	r31, r25
    5bca:	61 93       	st	Z+, r22
    5bcc:	71 93       	st	Z+, r23
    5bce:	02 97       	sbiw	r24, 0x02	; 2
    5bd0:	8d 93       	st	X+, r24
    5bd2:	9c 93       	st	X, r25
    5bd4:	43 c0       	rjmp	.+134    	; 0x5c5c <malloc+0x152>
    5bd6:	fd 01       	movw	r30, r26
    5bd8:	82 81       	ldd	r24, Z+2	; 0x02
    5bda:	93 81       	ldd	r25, Z+3	; 0x03
    5bdc:	9c 01       	movw	r18, r24
    5bde:	d9 01       	movw	r26, r18
    5be0:	10 97       	sbiw	r26, 0x00	; 0
    5be2:	a1 f6       	brne	.-88     	; 0x5b8c <malloc+0x82>
    5be4:	80 91 1b 05 	lds	r24, 0x051B
    5be8:	90 91 1c 05 	lds	r25, 0x051C
    5bec:	89 2b       	or	r24, r25
    5bee:	41 f4       	brne	.+16     	; 0x5c00 <malloc+0xf6>
    5bf0:	80 91 10 02 	lds	r24, 0x0210
    5bf4:	90 91 11 02 	lds	r25, 0x0211
    5bf8:	90 93 1c 05 	sts	0x051C, r25
    5bfc:	80 93 1b 05 	sts	0x051B, r24
    5c00:	40 91 12 02 	lds	r20, 0x0212
    5c04:	50 91 13 02 	lds	r21, 0x0213
    5c08:	41 15       	cp	r20, r1
    5c0a:	51 05       	cpc	r21, r1
    5c0c:	41 f4       	brne	.+16     	; 0x5c1e <malloc+0x114>
    5c0e:	4d b7       	in	r20, 0x3d	; 61
    5c10:	5e b7       	in	r21, 0x3e	; 62
    5c12:	80 91 0e 02 	lds	r24, 0x020E
    5c16:	90 91 0f 02 	lds	r25, 0x020F
    5c1a:	48 1b       	sub	r20, r24
    5c1c:	59 0b       	sbc	r21, r25
    5c1e:	20 91 1b 05 	lds	r18, 0x051B
    5c22:	30 91 1c 05 	lds	r19, 0x051C
    5c26:	24 17       	cp	r18, r20
    5c28:	35 07       	cpc	r19, r21
    5c2a:	b0 f4       	brcc	.+44     	; 0x5c58 <malloc+0x14e>
    5c2c:	ca 01       	movw	r24, r20
    5c2e:	82 1b       	sub	r24, r18
    5c30:	93 0b       	sbc	r25, r19
    5c32:	86 17       	cp	r24, r22
    5c34:	97 07       	cpc	r25, r23
    5c36:	80 f0       	brcs	.+32     	; 0x5c58 <malloc+0x14e>
    5c38:	ab 01       	movw	r20, r22
    5c3a:	4e 5f       	subi	r20, 0xFE	; 254
    5c3c:	5f 4f       	sbci	r21, 0xFF	; 255
    5c3e:	84 17       	cp	r24, r20
    5c40:	95 07       	cpc	r25, r21
    5c42:	50 f0       	brcs	.+20     	; 0x5c58 <malloc+0x14e>
    5c44:	42 0f       	add	r20, r18
    5c46:	53 1f       	adc	r21, r19
    5c48:	50 93 1c 05 	sts	0x051C, r21
    5c4c:	40 93 1b 05 	sts	0x051B, r20
    5c50:	f9 01       	movw	r30, r18
    5c52:	61 93       	st	Z+, r22
    5c54:	71 93       	st	Z+, r23
    5c56:	02 c0       	rjmp	.+4      	; 0x5c5c <malloc+0x152>
    5c58:	e0 e0       	ldi	r30, 0x00	; 0
    5c5a:	f0 e0       	ldi	r31, 0x00	; 0
    5c5c:	cf 01       	movw	r24, r30
    5c5e:	df 91       	pop	r29
    5c60:	cf 91       	pop	r28
    5c62:	08 95       	ret

00005c64 <free>:
    5c64:	cf 93       	push	r28
    5c66:	df 93       	push	r29
    5c68:	00 97       	sbiw	r24, 0x00	; 0
    5c6a:	09 f4       	brne	.+2      	; 0x5c6e <free+0xa>
    5c6c:	50 c0       	rjmp	.+160    	; 0x5d0e <free+0xaa>
    5c6e:	ec 01       	movw	r28, r24
    5c70:	22 97       	sbiw	r28, 0x02	; 2
    5c72:	1b 82       	std	Y+3, r1	; 0x03
    5c74:	1a 82       	std	Y+2, r1	; 0x02
    5c76:	a0 91 1d 05 	lds	r26, 0x051D
    5c7a:	b0 91 1e 05 	lds	r27, 0x051E
    5c7e:	10 97       	sbiw	r26, 0x00	; 0
    5c80:	09 f1       	breq	.+66     	; 0x5cc4 <free+0x60>
    5c82:	40 e0       	ldi	r20, 0x00	; 0
    5c84:	50 e0       	ldi	r21, 0x00	; 0
    5c86:	ac 17       	cp	r26, r28
    5c88:	bd 07       	cpc	r27, r29
    5c8a:	08 f1       	brcs	.+66     	; 0x5cce <free+0x6a>
    5c8c:	bb 83       	std	Y+3, r27	; 0x03
    5c8e:	aa 83       	std	Y+2, r26	; 0x02
    5c90:	fe 01       	movw	r30, r28
    5c92:	21 91       	ld	r18, Z+
    5c94:	31 91       	ld	r19, Z+
    5c96:	e2 0f       	add	r30, r18
    5c98:	f3 1f       	adc	r31, r19
    5c9a:	ae 17       	cp	r26, r30
    5c9c:	bf 07       	cpc	r27, r31
    5c9e:	79 f4       	brne	.+30     	; 0x5cbe <free+0x5a>
    5ca0:	8d 91       	ld	r24, X+
    5ca2:	9c 91       	ld	r25, X
    5ca4:	11 97       	sbiw	r26, 0x01	; 1
    5ca6:	28 0f       	add	r18, r24
    5ca8:	39 1f       	adc	r19, r25
    5caa:	2e 5f       	subi	r18, 0xFE	; 254
    5cac:	3f 4f       	sbci	r19, 0xFF	; 255
    5cae:	39 83       	std	Y+1, r19	; 0x01
    5cb0:	28 83       	st	Y, r18
    5cb2:	12 96       	adiw	r26, 0x02	; 2
    5cb4:	8d 91       	ld	r24, X+
    5cb6:	9c 91       	ld	r25, X
    5cb8:	13 97       	sbiw	r26, 0x03	; 3
    5cba:	9b 83       	std	Y+3, r25	; 0x03
    5cbc:	8a 83       	std	Y+2, r24	; 0x02
    5cbe:	41 15       	cp	r20, r1
    5cc0:	51 05       	cpc	r21, r1
    5cc2:	71 f4       	brne	.+28     	; 0x5ce0 <free+0x7c>
    5cc4:	d0 93 1e 05 	sts	0x051E, r29
    5cc8:	c0 93 1d 05 	sts	0x051D, r28
    5ccc:	20 c0       	rjmp	.+64     	; 0x5d0e <free+0xaa>
    5cce:	12 96       	adiw	r26, 0x02	; 2
    5cd0:	8d 91       	ld	r24, X+
    5cd2:	9c 91       	ld	r25, X
    5cd4:	13 97       	sbiw	r26, 0x03	; 3
    5cd6:	ad 01       	movw	r20, r26
    5cd8:	00 97       	sbiw	r24, 0x00	; 0
    5cda:	11 f0       	breq	.+4      	; 0x5ce0 <free+0x7c>
    5cdc:	dc 01       	movw	r26, r24
    5cde:	d3 cf       	rjmp	.-90     	; 0x5c86 <free+0x22>
    5ce0:	fa 01       	movw	r30, r20
    5ce2:	d3 83       	std	Z+3, r29	; 0x03
    5ce4:	c2 83       	std	Z+2, r28	; 0x02
    5ce6:	21 91       	ld	r18, Z+
    5ce8:	31 91       	ld	r19, Z+
    5cea:	e2 0f       	add	r30, r18
    5cec:	f3 1f       	adc	r31, r19
    5cee:	ce 17       	cp	r28, r30
    5cf0:	df 07       	cpc	r29, r31
    5cf2:	69 f4       	brne	.+26     	; 0x5d0e <free+0xaa>
    5cf4:	88 81       	ld	r24, Y
    5cf6:	99 81       	ldd	r25, Y+1	; 0x01
    5cf8:	28 0f       	add	r18, r24
    5cfa:	39 1f       	adc	r19, r25
    5cfc:	2e 5f       	subi	r18, 0xFE	; 254
    5cfe:	3f 4f       	sbci	r19, 0xFF	; 255
    5d00:	fa 01       	movw	r30, r20
    5d02:	31 83       	std	Z+1, r19	; 0x01
    5d04:	20 83       	st	Z, r18
    5d06:	8a 81       	ldd	r24, Y+2	; 0x02
    5d08:	9b 81       	ldd	r25, Y+3	; 0x03
    5d0a:	93 83       	std	Z+3, r25	; 0x03
    5d0c:	82 83       	std	Z+2, r24	; 0x02
    5d0e:	df 91       	pop	r29
    5d10:	cf 91       	pop	r28
    5d12:	08 95       	ret

00005d14 <do_rand>:
    5d14:	a0 e0       	ldi	r26, 0x00	; 0
    5d16:	b0 e0       	ldi	r27, 0x00	; 0
    5d18:	ef e8       	ldi	r30, 0x8F	; 143
    5d1a:	fe e2       	ldi	r31, 0x2E	; 46
    5d1c:	b3 ce       	rjmp	.-666    	; 0x5a84 <__prologue_saves__+0x10>
    5d1e:	ec 01       	movw	r28, r24
    5d20:	a8 80       	ld	r10, Y
    5d22:	b9 80       	ldd	r11, Y+1	; 0x01
    5d24:	ca 80       	ldd	r12, Y+2	; 0x02
    5d26:	db 80       	ldd	r13, Y+3	; 0x03
    5d28:	a1 14       	cp	r10, r1
    5d2a:	b1 04       	cpc	r11, r1
    5d2c:	c1 04       	cpc	r12, r1
    5d2e:	d1 04       	cpc	r13, r1
    5d30:	41 f4       	brne	.+16     	; 0x5d42 <do_rand+0x2e>
    5d32:	84 e2       	ldi	r24, 0x24	; 36
    5d34:	a8 2e       	mov	r10, r24
    5d36:	89 ed       	ldi	r24, 0xD9	; 217
    5d38:	b8 2e       	mov	r11, r24
    5d3a:	8b e5       	ldi	r24, 0x5B	; 91
    5d3c:	c8 2e       	mov	r12, r24
    5d3e:	87 e0       	ldi	r24, 0x07	; 7
    5d40:	d8 2e       	mov	r13, r24
    5d42:	c6 01       	movw	r24, r12
    5d44:	b5 01       	movw	r22, r10
    5d46:	2d e1       	ldi	r18, 0x1D	; 29
    5d48:	33 ef       	ldi	r19, 0xF3	; 243
    5d4a:	41 e0       	ldi	r20, 0x01	; 1
    5d4c:	50 e0       	ldi	r21, 0x00	; 0
    5d4e:	fa d1       	rcall	.+1012   	; 0x6144 <__divmodsi4>
    5d50:	27 ea       	ldi	r18, 0xA7	; 167
    5d52:	31 e4       	ldi	r19, 0x41	; 65
    5d54:	40 e0       	ldi	r20, 0x00	; 0
    5d56:	50 e0       	ldi	r21, 0x00	; 0
    5d58:	39 de       	rcall	.-910    	; 0x59cc <__mulsi3>
    5d5a:	7b 01       	movw	r14, r22
    5d5c:	8c 01       	movw	r16, r24
    5d5e:	c6 01       	movw	r24, r12
    5d60:	b5 01       	movw	r22, r10
    5d62:	2d e1       	ldi	r18, 0x1D	; 29
    5d64:	33 ef       	ldi	r19, 0xF3	; 243
    5d66:	41 e0       	ldi	r20, 0x01	; 1
    5d68:	50 e0       	ldi	r21, 0x00	; 0
    5d6a:	ec d1       	rcall	.+984    	; 0x6144 <__divmodsi4>
    5d6c:	ca 01       	movw	r24, r20
    5d6e:	b9 01       	movw	r22, r18
    5d70:	2c ee       	ldi	r18, 0xEC	; 236
    5d72:	34 ef       	ldi	r19, 0xF4	; 244
    5d74:	4f ef       	ldi	r20, 0xFF	; 255
    5d76:	5f ef       	ldi	r21, 0xFF	; 255
    5d78:	29 de       	rcall	.-942    	; 0x59cc <__mulsi3>
    5d7a:	6e 0d       	add	r22, r14
    5d7c:	7f 1d       	adc	r23, r15
    5d7e:	80 1f       	adc	r24, r16
    5d80:	91 1f       	adc	r25, r17
    5d82:	97 ff       	sbrs	r25, 7
    5d84:	04 c0       	rjmp	.+8      	; 0x5d8e <do_rand+0x7a>
    5d86:	61 50       	subi	r22, 0x01	; 1
    5d88:	70 40       	sbci	r23, 0x00	; 0
    5d8a:	80 40       	sbci	r24, 0x00	; 0
    5d8c:	90 48       	sbci	r25, 0x80	; 128
    5d8e:	68 83       	st	Y, r22
    5d90:	79 83       	std	Y+1, r23	; 0x01
    5d92:	8a 83       	std	Y+2, r24	; 0x02
    5d94:	9b 83       	std	Y+3, r25	; 0x03
    5d96:	9b 01       	movw	r18, r22
    5d98:	3f 77       	andi	r19, 0x7F	; 127
    5d9a:	c9 01       	movw	r24, r18
    5d9c:	cd b7       	in	r28, 0x3d	; 61
    5d9e:	de b7       	in	r29, 0x3e	; 62
    5da0:	ea e0       	ldi	r30, 0x0A	; 10
    5da2:	8c ce       	rjmp	.-744    	; 0x5abc <__epilogue_restores__+0x10>

00005da4 <rand_r>:
    5da4:	b7 df       	rcall	.-146    	; 0x5d14 <do_rand>
    5da6:	08 95       	ret

00005da8 <rand>:
    5da8:	84 e1       	ldi	r24, 0x14	; 20
    5daa:	92 e0       	ldi	r25, 0x02	; 2
    5dac:	b3 df       	rcall	.-154    	; 0x5d14 <do_rand>
    5dae:	08 95       	ret

00005db0 <srand>:
    5db0:	a0 e0       	ldi	r26, 0x00	; 0
    5db2:	b0 e0       	ldi	r27, 0x00	; 0
    5db4:	80 93 14 02 	sts	0x0214, r24
    5db8:	90 93 15 02 	sts	0x0215, r25
    5dbc:	a0 93 16 02 	sts	0x0216, r26
    5dc0:	b0 93 17 02 	sts	0x0217, r27
    5dc4:	08 95       	ret

00005dc6 <__ftoa_engine>:
    5dc6:	28 30       	cpi	r18, 0x08	; 8
    5dc8:	08 f0       	brcs	.+2      	; 0x5dcc <__ftoa_engine+0x6>
    5dca:	27 e0       	ldi	r18, 0x07	; 7
    5dcc:	33 27       	eor	r19, r19
    5dce:	da 01       	movw	r26, r20
    5dd0:	99 0f       	add	r25, r25
    5dd2:	31 1d       	adc	r19, r1
    5dd4:	87 fd       	sbrc	r24, 7
    5dd6:	91 60       	ori	r25, 0x01	; 1
    5dd8:	00 96       	adiw	r24, 0x00	; 0
    5dda:	61 05       	cpc	r22, r1
    5ddc:	71 05       	cpc	r23, r1
    5dde:	39 f4       	brne	.+14     	; 0x5dee <__ftoa_engine+0x28>
    5de0:	32 60       	ori	r19, 0x02	; 2
    5de2:	2e 5f       	subi	r18, 0xFE	; 254
    5de4:	3d 93       	st	X+, r19
    5de6:	30 e3       	ldi	r19, 0x30	; 48
    5de8:	2a 95       	dec	r18
    5dea:	e1 f7       	brne	.-8      	; 0x5de4 <__ftoa_engine+0x1e>
    5dec:	08 95       	ret
    5dee:	9f 3f       	cpi	r25, 0xFF	; 255
    5df0:	30 f0       	brcs	.+12     	; 0x5dfe <__ftoa_engine+0x38>
    5df2:	80 38       	cpi	r24, 0x80	; 128
    5df4:	71 05       	cpc	r23, r1
    5df6:	61 05       	cpc	r22, r1
    5df8:	09 f0       	breq	.+2      	; 0x5dfc <__ftoa_engine+0x36>
    5dfa:	3c 5f       	subi	r19, 0xFC	; 252
    5dfc:	3c 5f       	subi	r19, 0xFC	; 252
    5dfe:	3d 93       	st	X+, r19
    5e00:	91 30       	cpi	r25, 0x01	; 1
    5e02:	08 f0       	brcs	.+2      	; 0x5e06 <__ftoa_engine+0x40>
    5e04:	80 68       	ori	r24, 0x80	; 128
    5e06:	91 1d       	adc	r25, r1
    5e08:	df 93       	push	r29
    5e0a:	cf 93       	push	r28
    5e0c:	1f 93       	push	r17
    5e0e:	0f 93       	push	r16
    5e10:	ff 92       	push	r15
    5e12:	ef 92       	push	r14
    5e14:	19 2f       	mov	r17, r25
    5e16:	98 7f       	andi	r25, 0xF8	; 248
    5e18:	96 95       	lsr	r25
    5e1a:	e9 2f       	mov	r30, r25
    5e1c:	96 95       	lsr	r25
    5e1e:	96 95       	lsr	r25
    5e20:	e9 0f       	add	r30, r25
    5e22:	ff 27       	eor	r31, r31
    5e24:	ef 53       	subi	r30, 0x3F	; 63
    5e26:	fa 4f       	sbci	r31, 0xFA	; 250
    5e28:	99 27       	eor	r25, r25
    5e2a:	33 27       	eor	r19, r19
    5e2c:	ee 24       	eor	r14, r14
    5e2e:	ff 24       	eor	r15, r15
    5e30:	a7 01       	movw	r20, r14
    5e32:	e7 01       	movw	r28, r14
    5e34:	05 90       	lpm	r0, Z+
    5e36:	08 94       	sec
    5e38:	07 94       	ror	r0
    5e3a:	28 f4       	brcc	.+10     	; 0x5e46 <__ftoa_engine+0x80>
    5e3c:	36 0f       	add	r19, r22
    5e3e:	e7 1e       	adc	r14, r23
    5e40:	f8 1e       	adc	r15, r24
    5e42:	49 1f       	adc	r20, r25
    5e44:	51 1d       	adc	r21, r1
    5e46:	66 0f       	add	r22, r22
    5e48:	77 1f       	adc	r23, r23
    5e4a:	88 1f       	adc	r24, r24
    5e4c:	99 1f       	adc	r25, r25
    5e4e:	06 94       	lsr	r0
    5e50:	a1 f7       	brne	.-24     	; 0x5e3a <__ftoa_engine+0x74>
    5e52:	05 90       	lpm	r0, Z+
    5e54:	07 94       	ror	r0
    5e56:	28 f4       	brcc	.+10     	; 0x5e62 <__ftoa_engine+0x9c>
    5e58:	e7 0e       	add	r14, r23
    5e5a:	f8 1e       	adc	r15, r24
    5e5c:	49 1f       	adc	r20, r25
    5e5e:	56 1f       	adc	r21, r22
    5e60:	c1 1d       	adc	r28, r1
    5e62:	77 0f       	add	r23, r23
    5e64:	88 1f       	adc	r24, r24
    5e66:	99 1f       	adc	r25, r25
    5e68:	66 1f       	adc	r22, r22
    5e6a:	06 94       	lsr	r0
    5e6c:	a1 f7       	brne	.-24     	; 0x5e56 <__ftoa_engine+0x90>
    5e6e:	05 90       	lpm	r0, Z+
    5e70:	07 94       	ror	r0
    5e72:	28 f4       	brcc	.+10     	; 0x5e7e <__ftoa_engine+0xb8>
    5e74:	f8 0e       	add	r15, r24
    5e76:	49 1f       	adc	r20, r25
    5e78:	56 1f       	adc	r21, r22
    5e7a:	c7 1f       	adc	r28, r23
    5e7c:	d1 1d       	adc	r29, r1
    5e7e:	88 0f       	add	r24, r24
    5e80:	99 1f       	adc	r25, r25
    5e82:	66 1f       	adc	r22, r22
    5e84:	77 1f       	adc	r23, r23
    5e86:	06 94       	lsr	r0
    5e88:	a1 f7       	brne	.-24     	; 0x5e72 <__ftoa_engine+0xac>
    5e8a:	05 90       	lpm	r0, Z+
    5e8c:	07 94       	ror	r0
    5e8e:	20 f4       	brcc	.+8      	; 0x5e98 <__ftoa_engine+0xd2>
    5e90:	49 0f       	add	r20, r25
    5e92:	56 1f       	adc	r21, r22
    5e94:	c7 1f       	adc	r28, r23
    5e96:	d8 1f       	adc	r29, r24
    5e98:	99 0f       	add	r25, r25
    5e9a:	66 1f       	adc	r22, r22
    5e9c:	77 1f       	adc	r23, r23
    5e9e:	88 1f       	adc	r24, r24
    5ea0:	06 94       	lsr	r0
    5ea2:	a9 f7       	brne	.-22     	; 0x5e8e <__ftoa_engine+0xc8>
    5ea4:	84 91       	lpm	r24, Z+
    5ea6:	10 95       	com	r17
    5ea8:	17 70       	andi	r17, 0x07	; 7
    5eaa:	41 f0       	breq	.+16     	; 0x5ebc <__ftoa_engine+0xf6>
    5eac:	d6 95       	lsr	r29
    5eae:	c7 95       	ror	r28
    5eb0:	57 95       	ror	r21
    5eb2:	47 95       	ror	r20
    5eb4:	f7 94       	ror	r15
    5eb6:	e7 94       	ror	r14
    5eb8:	1a 95       	dec	r17
    5eba:	c1 f7       	brne	.-16     	; 0x5eac <__ftoa_engine+0xe6>
    5ebc:	e7 e6       	ldi	r30, 0x67	; 103
    5ebe:	f5 e0       	ldi	r31, 0x05	; 5
    5ec0:	68 94       	set
    5ec2:	15 90       	lpm	r1, Z+
    5ec4:	15 91       	lpm	r17, Z+
    5ec6:	35 91       	lpm	r19, Z+
    5ec8:	65 91       	lpm	r22, Z+
    5eca:	95 91       	lpm	r25, Z+
    5ecc:	05 90       	lpm	r0, Z+
    5ece:	7f e2       	ldi	r23, 0x2F	; 47
    5ed0:	73 95       	inc	r23
    5ed2:	e1 18       	sub	r14, r1
    5ed4:	f1 0a       	sbc	r15, r17
    5ed6:	43 0b       	sbc	r20, r19
    5ed8:	56 0b       	sbc	r21, r22
    5eda:	c9 0b       	sbc	r28, r25
    5edc:	d0 09       	sbc	r29, r0
    5ede:	c0 f7       	brcc	.-16     	; 0x5ed0 <__ftoa_engine+0x10a>
    5ee0:	e1 0c       	add	r14, r1
    5ee2:	f1 1e       	adc	r15, r17
    5ee4:	43 1f       	adc	r20, r19
    5ee6:	56 1f       	adc	r21, r22
    5ee8:	c9 1f       	adc	r28, r25
    5eea:	d0 1d       	adc	r29, r0
    5eec:	7e f4       	brtc	.+30     	; 0x5f0c <__ftoa_engine+0x146>
    5eee:	70 33       	cpi	r23, 0x30	; 48
    5ef0:	11 f4       	brne	.+4      	; 0x5ef6 <__ftoa_engine+0x130>
    5ef2:	8a 95       	dec	r24
    5ef4:	e6 cf       	rjmp	.-52     	; 0x5ec2 <__ftoa_engine+0xfc>
    5ef6:	e8 94       	clt
    5ef8:	01 50       	subi	r16, 0x01	; 1
    5efa:	30 f0       	brcs	.+12     	; 0x5f08 <__ftoa_engine+0x142>
    5efc:	08 0f       	add	r16, r24
    5efe:	0a f4       	brpl	.+2      	; 0x5f02 <__ftoa_engine+0x13c>
    5f00:	00 27       	eor	r16, r16
    5f02:	02 17       	cp	r16, r18
    5f04:	08 f4       	brcc	.+2      	; 0x5f08 <__ftoa_engine+0x142>
    5f06:	20 2f       	mov	r18, r16
    5f08:	23 95       	inc	r18
    5f0a:	02 2f       	mov	r16, r18
    5f0c:	7a 33       	cpi	r23, 0x3A	; 58
    5f0e:	28 f0       	brcs	.+10     	; 0x5f1a <__ftoa_engine+0x154>
    5f10:	79 e3       	ldi	r23, 0x39	; 57
    5f12:	7d 93       	st	X+, r23
    5f14:	2a 95       	dec	r18
    5f16:	e9 f7       	brne	.-6      	; 0x5f12 <__ftoa_engine+0x14c>
    5f18:	10 c0       	rjmp	.+32     	; 0x5f3a <__ftoa_engine+0x174>
    5f1a:	7d 93       	st	X+, r23
    5f1c:	2a 95       	dec	r18
    5f1e:	89 f6       	brne	.-94     	; 0x5ec2 <__ftoa_engine+0xfc>
    5f20:	06 94       	lsr	r0
    5f22:	97 95       	ror	r25
    5f24:	67 95       	ror	r22
    5f26:	37 95       	ror	r19
    5f28:	17 95       	ror	r17
    5f2a:	17 94       	ror	r1
    5f2c:	e1 18       	sub	r14, r1
    5f2e:	f1 0a       	sbc	r15, r17
    5f30:	43 0b       	sbc	r20, r19
    5f32:	56 0b       	sbc	r21, r22
    5f34:	c9 0b       	sbc	r28, r25
    5f36:	d0 09       	sbc	r29, r0
    5f38:	98 f0       	brcs	.+38     	; 0x5f60 <__ftoa_engine+0x19a>
    5f3a:	23 95       	inc	r18
    5f3c:	7e 91       	ld	r23, -X
    5f3e:	73 95       	inc	r23
    5f40:	7a 33       	cpi	r23, 0x3A	; 58
    5f42:	08 f0       	brcs	.+2      	; 0x5f46 <__ftoa_engine+0x180>
    5f44:	70 e3       	ldi	r23, 0x30	; 48
    5f46:	7c 93       	st	X, r23
    5f48:	20 13       	cpse	r18, r16
    5f4a:	b8 f7       	brcc	.-18     	; 0x5f3a <__ftoa_engine+0x174>
    5f4c:	7e 91       	ld	r23, -X
    5f4e:	70 61       	ori	r23, 0x10	; 16
    5f50:	7d 93       	st	X+, r23
    5f52:	30 f0       	brcs	.+12     	; 0x5f60 <__ftoa_engine+0x19a>
    5f54:	83 95       	inc	r24
    5f56:	71 e3       	ldi	r23, 0x31	; 49
    5f58:	7d 93       	st	X+, r23
    5f5a:	70 e3       	ldi	r23, 0x30	; 48
    5f5c:	2a 95       	dec	r18
    5f5e:	e1 f7       	brne	.-8      	; 0x5f58 <__ftoa_engine+0x192>
    5f60:	11 24       	eor	r1, r1
    5f62:	ef 90       	pop	r14
    5f64:	ff 90       	pop	r15
    5f66:	0f 91       	pop	r16
    5f68:	1f 91       	pop	r17
    5f6a:	cf 91       	pop	r28
    5f6c:	df 91       	pop	r29
    5f6e:	99 27       	eor	r25, r25
    5f70:	87 fd       	sbrc	r24, 7
    5f72:	90 95       	com	r25
    5f74:	08 95       	ret

00005f76 <strnlen_P>:
    5f76:	fc 01       	movw	r30, r24
    5f78:	05 90       	lpm	r0, Z+
    5f7a:	61 50       	subi	r22, 0x01	; 1
    5f7c:	70 40       	sbci	r23, 0x00	; 0
    5f7e:	01 10       	cpse	r0, r1
    5f80:	d8 f7       	brcc	.-10     	; 0x5f78 <strnlen_P+0x2>
    5f82:	80 95       	com	r24
    5f84:	90 95       	com	r25
    5f86:	8e 0f       	add	r24, r30
    5f88:	9f 1f       	adc	r25, r31
    5f8a:	08 95       	ret

00005f8c <strnlen>:
    5f8c:	fc 01       	movw	r30, r24
    5f8e:	61 50       	subi	r22, 0x01	; 1
    5f90:	70 40       	sbci	r23, 0x00	; 0
    5f92:	01 90       	ld	r0, Z+
    5f94:	01 10       	cpse	r0, r1
    5f96:	d8 f7       	brcc	.-10     	; 0x5f8e <strnlen+0x2>
    5f98:	80 95       	com	r24
    5f9a:	90 95       	com	r25
    5f9c:	8e 0f       	add	r24, r30
    5f9e:	9f 1f       	adc	r25, r31
    5fa0:	08 95       	ret

00005fa2 <fputc>:
    5fa2:	0f 93       	push	r16
    5fa4:	1f 93       	push	r17
    5fa6:	cf 93       	push	r28
    5fa8:	df 93       	push	r29
    5faa:	8c 01       	movw	r16, r24
    5fac:	eb 01       	movw	r28, r22
    5fae:	8b 81       	ldd	r24, Y+3	; 0x03
    5fb0:	81 ff       	sbrs	r24, 1
    5fb2:	1b c0       	rjmp	.+54     	; 0x5fea <fputc+0x48>
    5fb4:	82 ff       	sbrs	r24, 2
    5fb6:	0d c0       	rjmp	.+26     	; 0x5fd2 <fputc+0x30>
    5fb8:	2e 81       	ldd	r18, Y+6	; 0x06
    5fba:	3f 81       	ldd	r19, Y+7	; 0x07
    5fbc:	8c 81       	ldd	r24, Y+4	; 0x04
    5fbe:	9d 81       	ldd	r25, Y+5	; 0x05
    5fc0:	28 17       	cp	r18, r24
    5fc2:	39 07       	cpc	r19, r25
    5fc4:	64 f4       	brge	.+24     	; 0x5fde <fputc+0x3c>
    5fc6:	e8 81       	ld	r30, Y
    5fc8:	f9 81       	ldd	r31, Y+1	; 0x01
    5fca:	01 93       	st	Z+, r16
    5fcc:	f9 83       	std	Y+1, r31	; 0x01
    5fce:	e8 83       	st	Y, r30
    5fd0:	06 c0       	rjmp	.+12     	; 0x5fde <fputc+0x3c>
    5fd2:	e8 85       	ldd	r30, Y+8	; 0x08
    5fd4:	f9 85       	ldd	r31, Y+9	; 0x09
    5fd6:	80 2f       	mov	r24, r16
    5fd8:	09 95       	icall
    5fda:	89 2b       	or	r24, r25
    5fdc:	31 f4       	brne	.+12     	; 0x5fea <fputc+0x48>
    5fde:	8e 81       	ldd	r24, Y+6	; 0x06
    5fe0:	9f 81       	ldd	r25, Y+7	; 0x07
    5fe2:	01 96       	adiw	r24, 0x01	; 1
    5fe4:	9f 83       	std	Y+7, r25	; 0x07
    5fe6:	8e 83       	std	Y+6, r24	; 0x06
    5fe8:	02 c0       	rjmp	.+4      	; 0x5fee <fputc+0x4c>
    5fea:	0f ef       	ldi	r16, 0xFF	; 255
    5fec:	1f ef       	ldi	r17, 0xFF	; 255
    5fee:	c8 01       	movw	r24, r16
    5ff0:	df 91       	pop	r29
    5ff2:	cf 91       	pop	r28
    5ff4:	1f 91       	pop	r17
    5ff6:	0f 91       	pop	r16
    5ff8:	08 95       	ret

00005ffa <printf>:
    5ffa:	a0 e0       	ldi	r26, 0x00	; 0
    5ffc:	b0 e0       	ldi	r27, 0x00	; 0
    5ffe:	e2 e0       	ldi	r30, 0x02	; 2
    6000:	f0 e3       	ldi	r31, 0x30	; 48
    6002:	48 cd       	rjmp	.-1392   	; 0x5a94 <__prologue_saves__+0x20>
    6004:	fe 01       	movw	r30, r28
    6006:	35 96       	adiw	r30, 0x05	; 5
    6008:	61 91       	ld	r22, Z+
    600a:	71 91       	ld	r23, Z+
    600c:	80 91 21 05 	lds	r24, 0x0521
    6010:	90 91 22 05 	lds	r25, 0x0522
    6014:	af 01       	movw	r20, r30
    6016:	72 d9       	rcall	.-3356   	; 0x52fc <vfprintf>
    6018:	20 96       	adiw	r28, 0x00	; 0
    601a:	e2 e0       	ldi	r30, 0x02	; 2
    601c:	57 cd       	rjmp	.-1362   	; 0x5acc <__epilogue_restores__+0x20>

0000601e <puts>:
    601e:	0f 93       	push	r16
    6020:	1f 93       	push	r17
    6022:	cf 93       	push	r28
    6024:	df 93       	push	r29
    6026:	8c 01       	movw	r16, r24
    6028:	e0 91 21 05 	lds	r30, 0x0521
    602c:	f0 91 22 05 	lds	r31, 0x0522
    6030:	83 81       	ldd	r24, Z+3	; 0x03
    6032:	81 ff       	sbrs	r24, 1
    6034:	21 c0       	rjmp	.+66     	; 0x6078 <puts+0x5a>
    6036:	c0 e0       	ldi	r28, 0x00	; 0
    6038:	d0 e0       	ldi	r29, 0x00	; 0
    603a:	0d c0       	rjmp	.+26     	; 0x6056 <puts+0x38>
    603c:	e0 91 21 05 	lds	r30, 0x0521
    6040:	f0 91 22 05 	lds	r31, 0x0522
    6044:	20 85       	ldd	r18, Z+8	; 0x08
    6046:	31 85       	ldd	r19, Z+9	; 0x09
    6048:	bf 01       	movw	r22, r30
    604a:	f9 01       	movw	r30, r18
    604c:	09 95       	icall
    604e:	89 2b       	or	r24, r25
    6050:	11 f0       	breq	.+4      	; 0x6056 <puts+0x38>
    6052:	cf ef       	ldi	r28, 0xFF	; 255
    6054:	df ef       	ldi	r29, 0xFF	; 255
    6056:	f8 01       	movw	r30, r16
    6058:	81 91       	ld	r24, Z+
    605a:	8f 01       	movw	r16, r30
    605c:	88 23       	and	r24, r24
    605e:	71 f7       	brne	.-36     	; 0x603c <puts+0x1e>
    6060:	e0 91 21 05 	lds	r30, 0x0521
    6064:	f0 91 22 05 	lds	r31, 0x0522
    6068:	20 85       	ldd	r18, Z+8	; 0x08
    606a:	31 85       	ldd	r19, Z+9	; 0x09
    606c:	8a e0       	ldi	r24, 0x0A	; 10
    606e:	bf 01       	movw	r22, r30
    6070:	f9 01       	movw	r30, r18
    6072:	09 95       	icall
    6074:	89 2b       	or	r24, r25
    6076:	11 f0       	breq	.+4      	; 0x607c <puts+0x5e>
    6078:	cf ef       	ldi	r28, 0xFF	; 255
    607a:	df ef       	ldi	r29, 0xFF	; 255
    607c:	ce 01       	movw	r24, r28
    607e:	df 91       	pop	r29
    6080:	cf 91       	pop	r28
    6082:	1f 91       	pop	r17
    6084:	0f 91       	pop	r16
    6086:	08 95       	ret

00006088 <__ultoa_invert>:
    6088:	fa 01       	movw	r30, r20
    608a:	aa 27       	eor	r26, r26
    608c:	28 30       	cpi	r18, 0x08	; 8
    608e:	51 f1       	breq	.+84     	; 0x60e4 <__ultoa_invert+0x5c>
    6090:	20 31       	cpi	r18, 0x10	; 16
    6092:	81 f1       	breq	.+96     	; 0x60f4 <__ultoa_invert+0x6c>
    6094:	e8 94       	clt
    6096:	6f 93       	push	r22
    6098:	6e 7f       	andi	r22, 0xFE	; 254
    609a:	6e 5f       	subi	r22, 0xFE	; 254
    609c:	7f 4f       	sbci	r23, 0xFF	; 255
    609e:	8f 4f       	sbci	r24, 0xFF	; 255
    60a0:	9f 4f       	sbci	r25, 0xFF	; 255
    60a2:	af 4f       	sbci	r26, 0xFF	; 255
    60a4:	b1 e0       	ldi	r27, 0x01	; 1
    60a6:	3e d0       	rcall	.+124    	; 0x6124 <__ultoa_invert+0x9c>
    60a8:	b4 e0       	ldi	r27, 0x04	; 4
    60aa:	3c d0       	rcall	.+120    	; 0x6124 <__ultoa_invert+0x9c>
    60ac:	67 0f       	add	r22, r23
    60ae:	78 1f       	adc	r23, r24
    60b0:	89 1f       	adc	r24, r25
    60b2:	9a 1f       	adc	r25, r26
    60b4:	a1 1d       	adc	r26, r1
    60b6:	68 0f       	add	r22, r24
    60b8:	79 1f       	adc	r23, r25
    60ba:	8a 1f       	adc	r24, r26
    60bc:	91 1d       	adc	r25, r1
    60be:	a1 1d       	adc	r26, r1
    60c0:	6a 0f       	add	r22, r26
    60c2:	71 1d       	adc	r23, r1
    60c4:	81 1d       	adc	r24, r1
    60c6:	91 1d       	adc	r25, r1
    60c8:	a1 1d       	adc	r26, r1
    60ca:	20 d0       	rcall	.+64     	; 0x610c <__ultoa_invert+0x84>
    60cc:	09 f4       	brne	.+2      	; 0x60d0 <__ultoa_invert+0x48>
    60ce:	68 94       	set
    60d0:	3f 91       	pop	r19
    60d2:	2a e0       	ldi	r18, 0x0A	; 10
    60d4:	26 9f       	mul	r18, r22
    60d6:	11 24       	eor	r1, r1
    60d8:	30 19       	sub	r19, r0
    60da:	30 5d       	subi	r19, 0xD0	; 208
    60dc:	31 93       	st	Z+, r19
    60de:	de f6       	brtc	.-74     	; 0x6096 <__ultoa_invert+0xe>
    60e0:	cf 01       	movw	r24, r30
    60e2:	08 95       	ret
    60e4:	46 2f       	mov	r20, r22
    60e6:	47 70       	andi	r20, 0x07	; 7
    60e8:	40 5d       	subi	r20, 0xD0	; 208
    60ea:	41 93       	st	Z+, r20
    60ec:	b3 e0       	ldi	r27, 0x03	; 3
    60ee:	0f d0       	rcall	.+30     	; 0x610e <__ultoa_invert+0x86>
    60f0:	c9 f7       	brne	.-14     	; 0x60e4 <__ultoa_invert+0x5c>
    60f2:	f6 cf       	rjmp	.-20     	; 0x60e0 <__ultoa_invert+0x58>
    60f4:	46 2f       	mov	r20, r22
    60f6:	4f 70       	andi	r20, 0x0F	; 15
    60f8:	40 5d       	subi	r20, 0xD0	; 208
    60fa:	4a 33       	cpi	r20, 0x3A	; 58
    60fc:	18 f0       	brcs	.+6      	; 0x6104 <__ultoa_invert+0x7c>
    60fe:	49 5d       	subi	r20, 0xD9	; 217
    6100:	31 fd       	sbrc	r19, 1
    6102:	40 52       	subi	r20, 0x20	; 32
    6104:	41 93       	st	Z+, r20
    6106:	02 d0       	rcall	.+4      	; 0x610c <__ultoa_invert+0x84>
    6108:	a9 f7       	brne	.-22     	; 0x60f4 <__ultoa_invert+0x6c>
    610a:	ea cf       	rjmp	.-44     	; 0x60e0 <__ultoa_invert+0x58>
    610c:	b4 e0       	ldi	r27, 0x04	; 4
    610e:	a6 95       	lsr	r26
    6110:	97 95       	ror	r25
    6112:	87 95       	ror	r24
    6114:	77 95       	ror	r23
    6116:	67 95       	ror	r22
    6118:	ba 95       	dec	r27
    611a:	c9 f7       	brne	.-14     	; 0x610e <__ultoa_invert+0x86>
    611c:	00 97       	sbiw	r24, 0x00	; 0
    611e:	61 05       	cpc	r22, r1
    6120:	71 05       	cpc	r23, r1
    6122:	08 95       	ret
    6124:	9b 01       	movw	r18, r22
    6126:	ac 01       	movw	r20, r24
    6128:	0a 2e       	mov	r0, r26
    612a:	06 94       	lsr	r0
    612c:	57 95       	ror	r21
    612e:	47 95       	ror	r20
    6130:	37 95       	ror	r19
    6132:	27 95       	ror	r18
    6134:	ba 95       	dec	r27
    6136:	c9 f7       	brne	.-14     	; 0x612a <__ultoa_invert+0xa2>
    6138:	62 0f       	add	r22, r18
    613a:	73 1f       	adc	r23, r19
    613c:	84 1f       	adc	r24, r20
    613e:	95 1f       	adc	r25, r21
    6140:	a0 1d       	adc	r26, r0
    6142:	08 95       	ret

00006144 <__divmodsi4>:
    6144:	97 fb       	bst	r25, 7
    6146:	09 2e       	mov	r0, r25
    6148:	05 26       	eor	r0, r21
    614a:	0e d0       	rcall	.+28     	; 0x6168 <__divmodsi4_neg1>
    614c:	57 fd       	sbrc	r21, 7
    614e:	04 d0       	rcall	.+8      	; 0x6158 <__divmodsi4_neg2>
    6150:	6f dc       	rcall	.-1826   	; 0x5a30 <__udivmodsi4>
    6152:	0a d0       	rcall	.+20     	; 0x6168 <__divmodsi4_neg1>
    6154:	00 1c       	adc	r0, r0
    6156:	38 f4       	brcc	.+14     	; 0x6166 <__divmodsi4_exit>

00006158 <__divmodsi4_neg2>:
    6158:	50 95       	com	r21
    615a:	40 95       	com	r20
    615c:	30 95       	com	r19
    615e:	21 95       	neg	r18
    6160:	3f 4f       	sbci	r19, 0xFF	; 255
    6162:	4f 4f       	sbci	r20, 0xFF	; 255
    6164:	5f 4f       	sbci	r21, 0xFF	; 255

00006166 <__divmodsi4_exit>:
    6166:	08 95       	ret

00006168 <__divmodsi4_neg1>:
    6168:	f6 f7       	brtc	.-4      	; 0x6166 <__divmodsi4_exit>
    616a:	90 95       	com	r25
    616c:	80 95       	com	r24
    616e:	70 95       	com	r23
    6170:	61 95       	neg	r22
    6172:	7f 4f       	sbci	r23, 0xFF	; 255
    6174:	8f 4f       	sbci	r24, 0xFF	; 255
    6176:	9f 4f       	sbci	r25, 0xFF	; 255
    6178:	08 95       	ret

0000617a <_exit>:
    617a:	f8 94       	cli

0000617c <__stop_program>:
    617c:	ff cf       	rjmp	.-2      	; 0x617c <__stop_program>
=======
    27f0:	0e 94 5b 12 	call	0x24b6	; 0x24b6 <moveWorld>
    27f4:	f5 cf       	rjmp	.-22     	; 0x27e0 <CBOT_main+0x92>

000027f6 <ADC_open>:
    27f6:	8f e0       	ldi	r24, 0x0F	; 15
    27f8:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    27fc:	88 23       	and	r24, r24
    27fe:	31 f4       	brne	.+12     	; 0x280c <ADC_open+0x16>
    2800:	0e 94 3e 1c 	call	0x387c	; 0x387c <__ADC_init>
    2804:	8f e0       	ldi	r24, 0x0F	; 15
    2806:	61 e0       	ldi	r22, 0x01	; 1
    2808:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    280c:	8f e0       	ldi	r24, 0x0F	; 15
    280e:	91 e0       	ldi	r25, 0x01	; 1
    2810:	08 95       	ret

00002812 <ADC_sample>:
    2812:	8f e0       	ldi	r24, 0x0F	; 15
    2814:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    2818:	81 30       	cpi	r24, 0x01	; 1
    281a:	19 f0       	breq	.+6      	; 0x2822 <ADC_sample+0x10>
    281c:	20 e0       	ldi	r18, 0x00	; 0
    281e:	30 e0       	ldi	r19, 0x00	; 0
    2820:	13 c0       	rjmp	.+38     	; 0x2848 <ADC_sample+0x36>
    2822:	80 91 7a 00 	lds	r24, 0x007A
    2826:	80 64       	ori	r24, 0x40	; 64
    2828:	80 93 7a 00 	sts	0x007A, r24
    282c:	80 91 7a 00 	lds	r24, 0x007A
    2830:	86 fd       	sbrc	r24, 6
    2832:	fc cf       	rjmp	.-8      	; 0x282c <ADC_sample+0x1a>
    2834:	30 91 78 00 	lds	r19, 0x0078
    2838:	20 91 79 00 	lds	r18, 0x0079
    283c:	92 2f       	mov	r25, r18
    283e:	80 e0       	ldi	r24, 0x00	; 0
    2840:	23 2f       	mov	r18, r19
    2842:	30 e0       	ldi	r19, 0x00	; 0
    2844:	28 2b       	or	r18, r24
    2846:	39 2b       	or	r19, r25
    2848:	c9 01       	movw	r24, r18
    284a:	08 95       	ret

0000284c <ADC_set_channel>:
    284c:	58 2f       	mov	r21, r24
    284e:	80 91 e8 01 	lds	r24, 0x01E8
    2852:	88 30       	cpi	r24, 0x08	; 8
    2854:	d8 f4       	brcc	.+54     	; 0x288c <ADC_set_channel+0x40>
    2856:	40 91 7e 00 	lds	r20, 0x007E
    285a:	21 e0       	ldi	r18, 0x01	; 1
    285c:	30 e0       	ldi	r19, 0x00	; 0
    285e:	b9 01       	movw	r22, r18
    2860:	02 c0       	rjmp	.+4      	; 0x2866 <ADC_set_channel+0x1a>
    2862:	66 0f       	add	r22, r22
    2864:	77 1f       	adc	r23, r23
    2866:	8a 95       	dec	r24
    2868:	e2 f7       	brpl	.-8      	; 0x2862 <ADC_set_channel+0x16>
    286a:	cb 01       	movw	r24, r22
    286c:	80 95       	com	r24
    286e:	84 23       	and	r24, r20
    2870:	80 93 7e 00 	sts	0x007E, r24
    2874:	80 91 7e 00 	lds	r24, 0x007E
    2878:	05 2e       	mov	r0, r21
    287a:	02 c0       	rjmp	.+4      	; 0x2880 <ADC_set_channel+0x34>
    287c:	22 0f       	add	r18, r18
    287e:	33 1f       	adc	r19, r19
    2880:	0a 94       	dec	r0
    2882:	e2 f7       	brpl	.-8      	; 0x287c <ADC_set_channel+0x30>
    2884:	82 2b       	or	r24, r18
    2886:	80 93 7e 00 	sts	0x007E, r24
    288a:	0d c0       	rjmp	.+26     	; 0x28a6 <ADC_set_channel+0x5a>
    288c:	20 91 7e 00 	lds	r18, 0x007E
    2890:	81 e0       	ldi	r24, 0x01	; 1
    2892:	90 e0       	ldi	r25, 0x00	; 0
    2894:	05 2e       	mov	r0, r21
    2896:	02 c0       	rjmp	.+4      	; 0x289c <ADC_set_channel+0x50>
    2898:	88 0f       	add	r24, r24
    289a:	99 1f       	adc	r25, r25
    289c:	0a 94       	dec	r0
    289e:	e2 f7       	brpl	.-8      	; 0x2898 <ADC_set_channel+0x4c>
    28a0:	28 2b       	or	r18, r24
    28a2:	20 93 7e 00 	sts	0x007E, r18
    28a6:	50 93 e8 01 	sts	0x01E8, r21
    28aa:	80 91 7c 00 	lds	r24, 0x007C
    28ae:	5f 71       	andi	r21, 0x1F	; 31
    28b0:	80 7e       	andi	r24, 0xE0	; 224
    28b2:	85 2b       	or	r24, r21
    28b4:	80 93 7c 00 	sts	0x007C, r24
    28b8:	08 95       	ret

000028ba <ADC_set_VREF>:
    28ba:	ec e7       	ldi	r30, 0x7C	; 124
    28bc:	f0 e0       	ldi	r31, 0x00	; 0
    28be:	90 81       	ld	r25, Z
    28c0:	82 95       	swap	r24
    28c2:	88 0f       	add	r24, r24
    28c4:	88 0f       	add	r24, r24
    28c6:	80 7c       	andi	r24, 0xC0	; 192
    28c8:	9f 73       	andi	r25, 0x3F	; 63
    28ca:	98 2b       	or	r25, r24
    28cc:	90 83       	st	Z, r25
    28ce:	08 95       	ret

000028d0 <main>:
    28d0:	0e 94 57 1c 	call	0x38ae	; 0x38ae <CBOT_ISR_init>
    28d4:	0e 94 49 1c 	call	0x3892	; 0x3892 <CBOT_init>
    28d8:	0e 94 a7 13 	call	0x274e	; 0x274e <CBOT_main>
    28dc:	80 e0       	ldi	r24, 0x00	; 0
    28de:	90 e0       	ldi	r25, 0x00	; 0
    28e0:	08 95       	ret

000028e2 <LCD_clear>:
    28e2:	0f 93       	push	r16
    28e4:	1f 93       	push	r17
    28e6:	80 e4       	ldi	r24, 0x40	; 64
    28e8:	60 e0       	ldi	r22, 0x00	; 0
    28ea:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    28ee:	00 e0       	ldi	r16, 0x00	; 0
    28f0:	80 2f       	mov	r24, r16
    28f2:	60 e0       	ldi	r22, 0x00	; 0
    28f4:	0e 94 37 15 	call	0x2a6e	; 0x2a6e <LCD_set_PGC_addr>
    28f8:	10 e0       	ldi	r17, 0x00	; 0
    28fa:	80 e0       	ldi	r24, 0x00	; 0
    28fc:	61 e0       	ldi	r22, 0x01	; 1
    28fe:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    2902:	1f 5f       	subi	r17, 0xFF	; 255
    2904:	10 38       	cpi	r17, 0x80	; 128
    2906:	c9 f7       	brne	.-14     	; 0x28fa <LCD_clear+0x18>
    2908:	0f 5f       	subi	r16, 0xFF	; 255
    290a:	04 30       	cpi	r16, 0x04	; 4
    290c:	89 f7       	brne	.-30     	; 0x28f0 <LCD_clear+0xe>
    290e:	83 e0       	ldi	r24, 0x03	; 3
    2910:	60 e0       	ldi	r22, 0x00	; 0
    2912:	0e 94 30 15 	call	0x2a60	; 0x2a60 <LCD_set_next_PGC>
    2916:	1f 91       	pop	r17
    2918:	0f 91       	pop	r16
    291a:	08 95       	ret

0000291c <LCD_open>:
    291c:	0f 93       	push	r16
    291e:	1f 93       	push	r17
    2920:	82 e0       	ldi	r24, 0x02	; 2
    2922:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    2926:	88 23       	and	r24, r24
    2928:	11 f4       	brne	.+4      	; 0x292e <LCD_open+0x12>
    292a:	82 e0       	ldi	r24, 0x02	; 2
    292c:	06 c0       	rjmp	.+12     	; 0x293a <LCD_open+0x1e>
    292e:	81 e0       	ldi	r24, 0x01	; 1
    2930:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    2934:	88 23       	and	r24, r24
    2936:	19 f4       	brne	.+6      	; 0x293e <LCD_open+0x22>
    2938:	81 e0       	ldi	r24, 0x01	; 1
    293a:	90 e0       	ldi	r25, 0x00	; 0
    293c:	6d c0       	rjmp	.+218    	; 0x2a18 <LCD_open+0xfc>
    293e:	0e 94 bf 1e 	call	0x3d7e	; 0x3d7e <__LCD_init>
    2942:	85 e0       	ldi	r24, 0x05	; 5
    2944:	61 e0       	ldi	r22, 0x01	; 1
    2946:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    294a:	8e ea       	ldi	r24, 0xAE	; 174
    294c:	60 e0       	ldi	r22, 0x00	; 0
    294e:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    2952:	82 ea       	ldi	r24, 0xA2	; 162
    2954:	60 e0       	ldi	r22, 0x00	; 0
    2956:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    295a:	80 ea       	ldi	r24, 0xA0	; 160
    295c:	60 e0       	ldi	r22, 0x00	; 0
    295e:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    2962:	00 e5       	ldi	r16, 0x50	; 80
    2964:	13 ec       	ldi	r17, 0xC3	; 195
    2966:	c8 01       	movw	r24, r16
    2968:	01 97       	sbiw	r24, 0x01	; 1
    296a:	f1 f7       	brne	.-4      	; 0x2968 <LCD_open+0x4c>
    296c:	80 ec       	ldi	r24, 0xC0	; 192
    296e:	60 e0       	ldi	r22, 0x00	; 0
    2970:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    2974:	8f e2       	ldi	r24, 0x2F	; 47
    2976:	60 e0       	ldi	r22, 0x00	; 0
    2978:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    297c:	81 e8       	ldi	r24, 0x81	; 129
    297e:	60 e0       	ldi	r22, 0x00	; 0
    2980:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    2984:	86 e1       	ldi	r24, 0x16	; 22
    2986:	60 e0       	ldi	r22, 0x00	; 0
    2988:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    298c:	82 e2       	ldi	r24, 0x22	; 34
    298e:	60 e0       	ldi	r22, 0x00	; 0
    2990:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    2994:	c8 01       	movw	r24, r16
    2996:	01 97       	sbiw	r24, 0x01	; 1
    2998:	f1 f7       	brne	.-4      	; 0x2996 <LCD_open+0x7a>
    299a:	8f ea       	ldi	r24, 0xAF	; 175
    299c:	60 e0       	ldi	r22, 0x00	; 0
    299e:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    29a2:	86 ea       	ldi	r24, 0xA6	; 166
    29a4:	60 e0       	ldi	r22, 0x00	; 0
    29a6:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    29aa:	85 ea       	ldi	r24, 0xA5	; 165
    29ac:	60 e0       	ldi	r22, 0x00	; 0
    29ae:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    29b2:	80 e0       	ldi	r24, 0x00	; 0
    29b4:	90 e0       	ldi	r25, 0x00	; 0
    29b6:	28 e8       	ldi	r18, 0x88	; 136
    29b8:	33 e1       	ldi	r19, 0x13	; 19
    29ba:	f9 01       	movw	r30, r18
    29bc:	31 97       	sbiw	r30, 0x01	; 1
    29be:	f1 f7       	brne	.-4      	; 0x29bc <LCD_open+0xa0>
    29c0:	01 96       	adiw	r24, 0x01	; 1
    29c2:	43 e0       	ldi	r20, 0x03	; 3
    29c4:	88 3e       	cpi	r24, 0xE8	; 232
    29c6:	94 07       	cpc	r25, r20
    29c8:	c1 f7       	brne	.-16     	; 0x29ba <LCD_open+0x9e>
    29ca:	83 eb       	ldi	r24, 0xB3	; 179
    29cc:	60 e0       	ldi	r22, 0x00	; 0
    29ce:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    29d2:	80 e4       	ldi	r24, 0x40	; 64
    29d4:	60 e0       	ldi	r22, 0x00	; 0
    29d6:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    29da:	83 e0       	ldi	r24, 0x03	; 3
    29dc:	60 e0       	ldi	r22, 0x00	; 0
    29de:	0e 94 37 15 	call	0x2a6e	; 0x2a6e <LCD_set_PGC_addr>
    29e2:	83 e0       	ldi	r24, 0x03	; 3
    29e4:	60 e0       	ldi	r22, 0x00	; 0
    29e6:	0e 94 30 15 	call	0x2a60	; 0x2a60 <LCD_set_next_PGC>
    29ea:	10 92 2d 05 	sts	0x052D, r1
    29ee:	10 92 2f 05 	sts	0x052F, r1
    29f2:	10 92 2e 05 	sts	0x052E, r1
    29f6:	87 ef       	ldi	r24, 0xF7	; 247
    29f8:	91 e0       	ldi	r25, 0x01	; 1
    29fa:	90 93 5e 05 	sts	0x055E, r25
    29fe:	80 93 5d 05 	sts	0x055D, r24
    2a02:	88 e1       	ldi	r24, 0x18	; 24
    2a04:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <LCD_set_backlight>
    2a08:	0e 94 71 14 	call	0x28e2	; 0x28e2 <LCD_clear>
    2a0c:	84 ea       	ldi	r24, 0xA4	; 164
    2a0e:	60 e0       	ldi	r22, 0x00	; 0
    2a10:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    2a14:	85 e0       	ldi	r24, 0x05	; 5
    2a16:	91 e0       	ldi	r25, 0x01	; 1
    2a18:	1f 91       	pop	r17
    2a1a:	0f 91       	pop	r16
    2a1c:	08 95       	ret

00002a1e <LCD_set_backlight>:
    2a1e:	1f 93       	push	r17
    2a20:	18 2f       	mov	r17, r24
    2a22:	85 e0       	ldi	r24, 0x05	; 5
    2a24:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    2a28:	81 30       	cpi	r24, 0x01	; 1
    2a2a:	c1 f4       	brne	.+48     	; 0x2a5c <LCD_set_backlight+0x3e>
    2a2c:	87 e0       	ldi	r24, 0x07	; 7
    2a2e:	0e 94 8c 15 	call	0x2b18	; 0x2b18 <SPI_set_slave_addr>
    2a32:	82 e0       	ldi	r24, 0x02	; 2
    2a34:	6a e0       	ldi	r22, 0x0A	; 10
    2a36:	0e 94 dd 15 	call	0x2bba	; 0x2bba <SPI_transmit>
    2a3a:	82 e0       	ldi	r24, 0x02	; 2
    2a3c:	61 eb       	ldi	r22, 0xB1	; 177
    2a3e:	0e 94 dd 15 	call	0x2bba	; 0x2bba <SPI_transmit>
    2a42:	61 2f       	mov	r22, r17
    2a44:	11 32       	cpi	r17, 0x21	; 33
    2a46:	08 f0       	brcs	.+2      	; 0x2a4a <LCD_set_backlight+0x2c>
    2a48:	60 e2       	ldi	r22, 0x20	; 32
    2a4a:	82 e0       	ldi	r24, 0x02	; 2
    2a4c:	0e 94 dd 15 	call	0x2bba	; 0x2bba <SPI_transmit>
    2a50:	89 ee       	ldi	r24, 0xE9	; 233
    2a52:	8a 95       	dec	r24
    2a54:	f1 f7       	brne	.-4      	; 0x2a52 <LCD_set_backlight+0x34>
    2a56:	87 e0       	ldi	r24, 0x07	; 7
    2a58:	0e 94 8c 15 	call	0x2b18	; 0x2b18 <SPI_set_slave_addr>
    2a5c:	1f 91       	pop	r17
    2a5e:	08 95       	ret

00002a60 <LCD_set_next_PGC>:
    2a60:	83 70       	andi	r24, 0x03	; 3
    2a62:	6f 77       	andi	r22, 0x7F	; 127
    2a64:	60 93 2b 05 	sts	0x052B, r22
    2a68:	80 93 2c 05 	sts	0x052C, r24
    2a6c:	08 95       	ret

00002a6e <LCD_set_PGC_addr>:
    2a6e:	0f 93       	push	r16
    2a70:	1f 93       	push	r17
    2a72:	06 2f       	mov	r16, r22
    2a74:	16 2f       	mov	r17, r22
    2a76:	1f 77       	andi	r17, 0x7F	; 127
    2a78:	83 70       	andi	r24, 0x03	; 3
    2a7a:	80 6b       	ori	r24, 0xB0	; 176
    2a7c:	60 e0       	ldi	r22, 0x00	; 0
    2a7e:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    2a82:	12 95       	swap	r17
    2a84:	1f 70       	andi	r17, 0x0F	; 15
    2a86:	81 2f       	mov	r24, r17
    2a88:	80 61       	ori	r24, 0x10	; 16
    2a8a:	60 e0       	ldi	r22, 0x00	; 0
    2a8c:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    2a90:	80 2f       	mov	r24, r16
    2a92:	8f 70       	andi	r24, 0x0F	; 15
    2a94:	60 e0       	ldi	r22, 0x00	; 0
    2a96:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    2a9a:	1f 91       	pop	r17
    2a9c:	0f 91       	pop	r16
    2a9e:	08 95       	ret

00002aa0 <LCD_write>:
    2aa0:	0f 93       	push	r16
    2aa2:	1f 93       	push	r17
    2aa4:	08 2f       	mov	r16, r24
    2aa6:	16 2f       	mov	r17, r22
    2aa8:	85 e0       	ldi	r24, 0x05	; 5
    2aaa:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    2aae:	81 30       	cpi	r24, 0x01	; 1
    2ab0:	79 f4       	brne	.+30     	; 0x2ad0 <LCD_write+0x30>
    2ab2:	11 23       	and	r17, r17
    2ab4:	19 f0       	breq	.+6      	; 0x2abc <LCD_write+0x1c>
    2ab6:	11 30       	cpi	r17, 0x01	; 1
    2ab8:	21 f4       	brne	.+8      	; 0x2ac2 <LCD_write+0x22>
    2aba:	02 c0       	rjmp	.+4      	; 0x2ac0 <LCD_write+0x20>
    2abc:	2b 98       	cbi	0x05, 3	; 5
    2abe:	01 c0       	rjmp	.+2      	; 0x2ac2 <LCD_write+0x22>
    2ac0:	2b 9a       	sbi	0x05, 3	; 5
    2ac2:	86 e0       	ldi	r24, 0x06	; 6
    2ac4:	8a 95       	dec	r24
    2ac6:	f1 f7       	brne	.-4      	; 0x2ac4 <LCD_write+0x24>
    2ac8:	80 e0       	ldi	r24, 0x00	; 0
    2aca:	60 2f       	mov	r22, r16
    2acc:	0e 94 dd 15 	call	0x2bba	; 0x2bba <SPI_transmit>
    2ad0:	1f 91       	pop	r17
    2ad2:	0f 91       	pop	r16
    2ad4:	08 95       	ret

00002ad6 <LED_clr_pattern>:
    2ad6:	1f 93       	push	r17
    2ad8:	18 2f       	mov	r17, r24
    2ada:	86 e0       	ldi	r24, 0x06	; 6
    2adc:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    2ae0:	81 30       	cpi	r24, 0x01	; 1
    2ae2:	19 f4       	brne	.+6      	; 0x2aea <LED_clr_pattern+0x14>
    2ae4:	81 2f       	mov	r24, r17
    2ae6:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <__LED_clr_pattern>
    2aea:	1f 91       	pop	r17
    2aec:	08 95       	ret

00002aee <LED_open>:
    2aee:	0e 94 73 1f 	call	0x3ee6	; 0x3ee6 <__LED_init>
    2af2:	86 e0       	ldi	r24, 0x06	; 6
    2af4:	61 e0       	ldi	r22, 0x01	; 1
    2af6:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    2afa:	86 e0       	ldi	r24, 0x06	; 6
    2afc:	91 e0       	ldi	r25, 0x01	; 1
    2afe:	08 95       	ret

00002b00 <LED_set_pattern>:
    2b00:	1f 93       	push	r17
    2b02:	18 2f       	mov	r17, r24
    2b04:	86 e0       	ldi	r24, 0x06	; 6
    2b06:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    2b0a:	81 30       	cpi	r24, 0x01	; 1
    2b0c:	19 f4       	brne	.+6      	; 0x2b14 <LED_set_pattern+0x14>
    2b0e:	81 2f       	mov	r24, r17
    2b10:	0e 94 76 1f 	call	0x3eec	; 0x3eec <__LED_set_pattern>
    2b14:	1f 91       	pop	r17
    2b16:	08 95       	ret

00002b18 <SPI_set_slave_addr>:
    2b18:	1f 93       	push	r17
    2b1a:	18 2f       	mov	r17, r24
    2b1c:	82 e0       	ldi	r24, 0x02	; 2
    2b1e:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    2b22:	81 30       	cpi	r24, 0x01	; 1
    2b24:	09 f0       	breq	.+2      	; 0x2b28 <SPI_set_slave_addr+0x10>
    2b26:	47 c0       	rjmp	.+142    	; 0x2bb6 <SPI_set_slave_addr+0x9e>
    2b28:	91 2f       	mov	r25, r17
    2b2a:	97 70       	andi	r25, 0x07	; 7
    2b2c:	80 91 30 05 	lds	r24, 0x0530
    2b30:	98 17       	cp	r25, r24
    2b32:	09 f4       	brne	.+2      	; 0x2b36 <SPI_set_slave_addr+0x1e>
    2b34:	40 c0       	rjmp	.+128    	; 0x2bb6 <SPI_set_slave_addr+0x9e>
    2b36:	90 93 30 05 	sts	0x0530, r25
    2b3a:	85 b1       	in	r24, 0x05	; 5
    2b3c:	88 7f       	andi	r24, 0xF8	; 248
    2b3e:	89 2b       	or	r24, r25
    2b40:	85 b9       	out	0x05, r24	; 5
    2b42:	93 30       	cpi	r25, 0x03	; 3
    2b44:	11 f1       	breq	.+68     	; 0x2b8a <SPI_set_slave_addr+0x72>
    2b46:	94 30       	cpi	r25, 0x04	; 4
    2b48:	28 f4       	brcc	.+10     	; 0x2b54 <SPI_set_slave_addr+0x3c>
    2b4a:	91 30       	cpi	r25, 0x01	; 1
    2b4c:	51 f0       	breq	.+20     	; 0x2b62 <SPI_set_slave_addr+0x4a>
    2b4e:	92 30       	cpi	r25, 0x02	; 2
    2b50:	90 f4       	brcc	.+36     	; 0x2b76 <SPI_set_slave_addr+0x5e>
    2b52:	0c c0       	rjmp	.+24     	; 0x2b6c <SPI_set_slave_addr+0x54>
    2b54:	95 30       	cpi	r25, 0x05	; 5
    2b56:	19 f1       	breq	.+70     	; 0x2b9e <SPI_set_slave_addr+0x86>
    2b58:	95 30       	cpi	r25, 0x05	; 5
    2b5a:	e0 f0       	brcs	.+56     	; 0x2b94 <SPI_set_slave_addr+0x7c>
    2b5c:	96 30       	cpi	r25, 0x06	; 6
    2b5e:	21 f5       	brne	.+72     	; 0x2ba8 <SPI_set_slave_addr+0x90>
    2b60:	0f c0       	rjmp	.+30     	; 0x2b80 <SPI_set_slave_addr+0x68>
    2b62:	e0 91 c0 02 	lds	r30, 0x02C0
    2b66:	f0 91 c1 02 	lds	r31, 0x02C1
    2b6a:	22 c0       	rjmp	.+68     	; 0x2bb0 <SPI_set_slave_addr+0x98>
    2b6c:	e0 91 be 02 	lds	r30, 0x02BE
    2b70:	f0 91 bf 02 	lds	r31, 0x02BF
    2b74:	1d c0       	rjmp	.+58     	; 0x2bb0 <SPI_set_slave_addr+0x98>
    2b76:	e0 91 c2 02 	lds	r30, 0x02C2
    2b7a:	f0 91 c3 02 	lds	r31, 0x02C3
    2b7e:	18 c0       	rjmp	.+48     	; 0x2bb0 <SPI_set_slave_addr+0x98>
    2b80:	e0 91 ca 02 	lds	r30, 0x02CA
    2b84:	f0 91 cb 02 	lds	r31, 0x02CB
    2b88:	13 c0       	rjmp	.+38     	; 0x2bb0 <SPI_set_slave_addr+0x98>
    2b8a:	e0 91 c4 02 	lds	r30, 0x02C4
    2b8e:	f0 91 c5 02 	lds	r31, 0x02C5
    2b92:	0e c0       	rjmp	.+28     	; 0x2bb0 <SPI_set_slave_addr+0x98>
    2b94:	e0 91 c6 02 	lds	r30, 0x02C6
    2b98:	f0 91 c7 02 	lds	r31, 0x02C7
    2b9c:	09 c0       	rjmp	.+18     	; 0x2bb0 <SPI_set_slave_addr+0x98>
    2b9e:	e0 91 c8 02 	lds	r30, 0x02C8
    2ba2:	f0 91 c9 02 	lds	r31, 0x02C9
    2ba6:	04 c0       	rjmp	.+8      	; 0x2bb0 <SPI_set_slave_addr+0x98>
    2ba8:	e0 91 cc 02 	lds	r30, 0x02CC
    2bac:	f0 91 cd 02 	lds	r31, 0x02CD
    2bb0:	30 97       	sbiw	r30, 0x00	; 0
    2bb2:	09 f0       	breq	.+2      	; 0x2bb6 <SPI_set_slave_addr+0x9e>
    2bb4:	09 95       	icall
    2bb6:	1f 91       	pop	r17
    2bb8:	08 95       	ret

00002bba <SPI_transmit>:
    2bba:	1f 93       	push	r17
    2bbc:	16 2f       	mov	r17, r22
    2bbe:	0e 94 8c 15 	call	0x2b18	; 0x2b18 <SPI_set_slave_addr>
    2bc2:	82 e0       	ldi	r24, 0x02	; 2
    2bc4:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    2bc8:	81 30       	cpi	r24, 0x01	; 1
    2bca:	21 f4       	brne	.+8      	; 0x2bd4 <SPI_transmit+0x1a>
    2bcc:	1e bd       	out	0x2e, r17	; 46
    2bce:	0d b4       	in	r0, 0x2d	; 45
    2bd0:	07 fe       	sbrs	r0, 7
    2bd2:	fd cf       	rjmp	.-6      	; 0x2bce <SPI_transmit+0x14>
    2bd4:	1f 91       	pop	r17
    2bd6:	08 95       	ret

00002bd8 <__SPKR_set_up_freq_LUT>:
    2bd8:	0f 93       	push	r16
    2bda:	1f 93       	push	r17
    2bdc:	cf 93       	push	r28
    2bde:	df 93       	push	r29
    2be0:	80 e2       	ldi	r24, 0x20	; 32
    2be2:	91 e0       	ldi	r25, 0x01	; 1
    2be4:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <malloc>
    2be8:	9c 01       	movw	r18, r24
    2bea:	90 93 dd 02 	sts	0x02DD, r25
    2bee:	80 93 dc 02 	sts	0x02DC, r24
    2bf2:	89 2b       	or	r24, r25
    2bf4:	11 f4       	brne	.+4      	; 0x2bfa <__SPKR_set_up_freq_LUT+0x22>
    2bf6:	80 e0       	ldi	r24, 0x00	; 0
    2bf8:	39 c0       	rjmp	.+114    	; 0x2c6c <__SPKR_set_up_freq_LUT+0x94>
    2bfa:	89 01       	movw	r16, r18
    2bfc:	c0 e0       	ldi	r28, 0x00	; 0
    2bfe:	d0 e0       	ldi	r29, 0x00	; 0
    2c00:	be 01       	movw	r22, r28
    2c02:	80 e0       	ldi	r24, 0x00	; 0
    2c04:	90 e0       	ldi	r25, 0x00	; 0
    2c06:	0e 94 2a 28 	call	0x5054	; 0x5054 <__floatunsisf>
    2c0a:	20 e0       	ldi	r18, 0x00	; 0
    2c0c:	30 e0       	ldi	r19, 0x00	; 0
    2c0e:	40 ea       	ldi	r20, 0xA0	; 160
    2c10:	51 e4       	ldi	r21, 0x41	; 65
    2c12:	0e 94 91 27 	call	0x4f22	; 0x4f22 <__divsf3>
    2c16:	27 ef       	ldi	r18, 0xF7	; 247
    2c18:	35 e7       	ldi	r19, 0x75	; 117
    2c1a:	40 e0       	ldi	r20, 0x00	; 0
    2c1c:	5f e3       	ldi	r21, 0x3F	; 63
    2c1e:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    2c22:	9b 01       	movw	r18, r22
    2c24:	ac 01       	movw	r20, r24
    2c26:	60 e0       	ldi	r22, 0x00	; 0
    2c28:	70 e0       	ldi	r23, 0x00	; 0
    2c2a:	80 e2       	ldi	r24, 0x20	; 32
    2c2c:	91 e4       	ldi	r25, 0x41	; 65
    2c2e:	0e 94 7d 29 	call	0x52fa	; 0x52fa <pow>
    2c32:	9b 01       	movw	r18, r22
    2c34:	ac 01       	movw	r20, r24
    2c36:	ca 01       	movw	r24, r20
    2c38:	b9 01       	movw	r22, r18
    2c3a:	2d ec       	ldi	r18, 0xCD	; 205
    2c3c:	3c ec       	ldi	r19, 0xCC	; 204
    2c3e:	42 e8       	ldi	r20, 0x82	; 130
    2c40:	51 e4       	ldi	r21, 0x41	; 65
    2c42:	0e 94 1a 29 	call	0x5234	; 0x5234 <__mulsf3>
    2c46:	0e 94 e0 28 	call	0x51c0	; 0x51c0 <lrint>
    2c4a:	2a e0       	ldi	r18, 0x0A	; 10
    2c4c:	30 e0       	ldi	r19, 0x00	; 0
    2c4e:	40 e0       	ldi	r20, 0x00	; 0
    2c50:	50 e0       	ldi	r21, 0x00	; 0
    2c52:	0e 94 4a 2e 	call	0x5c94	; 0x5c94 <__mulsi3>
    2c56:	f8 01       	movw	r30, r16
    2c58:	61 93       	st	Z+, r22
    2c5a:	71 93       	st	Z+, r23
    2c5c:	81 93       	st	Z+, r24
    2c5e:	91 93       	st	Z+, r25
    2c60:	8f 01       	movw	r16, r30
    2c62:	21 96       	adiw	r28, 0x01	; 1
    2c64:	c8 34       	cpi	r28, 0x48	; 72
    2c66:	d1 05       	cpc	r29, r1
    2c68:	59 f6       	brne	.-106    	; 0x2c00 <__SPKR_set_up_freq_LUT+0x28>
    2c6a:	81 e0       	ldi	r24, 0x01	; 1
    2c6c:	df 91       	pop	r29
    2c6e:	cf 91       	pop	r28
    2c70:	1f 91       	pop	r17
    2c72:	0f 91       	pop	r16
    2c74:	08 95       	ret

00002c76 <__SPKR_open_beep_mode>:
    2c76:	8a e0       	ldi	r24, 0x0A	; 10
    2c78:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    2c7c:	88 23       	and	r24, r24
    2c7e:	71 f4       	brne	.+28     	; 0x2c9c <__SPKR_open_beep_mode+0x26>
    2c80:	10 92 d9 02 	sts	0x02D9, r1
    2c84:	10 92 d8 02 	sts	0x02D8, r1
    2c88:	81 e0       	ldi	r24, 0x01	; 1
    2c8a:	0e 94 b1 20 	call	0x4162	; 0x4162 <__SPKR_init>
    2c8e:	81 e0       	ldi	r24, 0x01	; 1
    2c90:	80 93 cf 02 	sts	0x02CF, r24
    2c94:	8a e0       	ldi	r24, 0x0A	; 10
    2c96:	61 e0       	ldi	r22, 0x01	; 1
    2c98:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    2c9c:	8a e0       	ldi	r24, 0x0A	; 10
    2c9e:	91 e0       	ldi	r25, 0x01	; 1
    2ca0:	08 95       	ret

00002ca2 <__SPKR_open_tone_mode>:
    2ca2:	1f 93       	push	r17
    2ca4:	8b e0       	ldi	r24, 0x0B	; 11
    2ca6:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    2caa:	88 23       	and	r24, r24
    2cac:	11 f0       	breq	.+4      	; 0x2cb2 <__SPKR_open_tone_mode+0x10>
    2cae:	90 e0       	ldi	r25, 0x00	; 0
    2cb0:	21 c0       	rjmp	.+66     	; 0x2cf4 <__SPKR_open_tone_mode+0x52>
    2cb2:	89 e0       	ldi	r24, 0x09	; 9
    2cb4:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    2cb8:	88 23       	and	r24, r24
    2cba:	d9 f4       	brne	.+54     	; 0x2cf2 <__SPKR_open_tone_mode+0x50>
    2cbc:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <__SPKR_set_up_freq_LUT>
    2cc0:	18 2f       	mov	r17, r24
    2cc2:	81 30       	cpi	r24, 0x01	; 1
    2cc4:	b1 f4       	brne	.+44     	; 0x2cf2 <__SPKR_open_tone_mode+0x50>
    2cc6:	10 92 d0 02 	sts	0x02D0, r1
    2cca:	10 92 d1 02 	sts	0x02D1, r1
    2cce:	10 92 d2 02 	sts	0x02D2, r1
    2cd2:	10 92 d3 02 	sts	0x02D3, r1
    2cd6:	8d e0       	ldi	r24, 0x0D	; 13
    2cd8:	64 e3       	ldi	r22, 0x34	; 52
    2cda:	70 e2       	ldi	r23, 0x20	; 32
    2cdc:	0e 94 97 1e 	call	0x3d2e	; 0x3d2e <ISR_attach>
    2ce0:	82 e0       	ldi	r24, 0x02	; 2
    2ce2:	0e 94 b1 20 	call	0x4162	; 0x4162 <__SPKR_init>
    2ce6:	10 93 ce 02 	sts	0x02CE, r17
    2cea:	89 e0       	ldi	r24, 0x09	; 9
    2cec:	61 e0       	ldi	r22, 0x01	; 1
    2cee:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    2cf2:	91 e0       	ldi	r25, 0x01	; 1
    2cf4:	89 e0       	ldi	r24, 0x09	; 9
    2cf6:	1f 91       	pop	r17
    2cf8:	08 95       	ret

00002cfa <SPKR_open>:
    2cfa:	81 30       	cpi	r24, 0x01	; 1
    2cfc:	29 f0       	breq	.+10     	; 0x2d08 <SPKR_open+0xe>
    2cfe:	82 30       	cpi	r24, 0x02	; 2
    2d00:	31 f0       	breq	.+12     	; 0x2d0e <SPKR_open+0x14>
    2d02:	90 e0       	ldi	r25, 0x00	; 0
    2d04:	89 e0       	ldi	r24, 0x09	; 9
    2d06:	08 95       	ret
    2d08:	0e 94 3b 16 	call	0x2c76	; 0x2c76 <__SPKR_open_beep_mode>
    2d0c:	08 95       	ret
    2d0e:	0e 94 51 16 	call	0x2ca2	; 0x2ca2 <__SPKR_open_tone_mode>
    2d12:	08 95       	ret

00002d14 <STEPPER_get_nSteps>:
    2d14:	80 91 f1 04 	lds	r24, 0x04F1
    2d18:	90 91 f2 04 	lds	r25, 0x04F2
    2d1c:	20 91 f3 04 	lds	r18, 0x04F3
    2d20:	30 91 f4 04 	lds	r19, 0x04F4
    2d24:	bc 01       	movw	r22, r24
    2d26:	c9 01       	movw	r24, r18
    2d28:	08 95       	ret

00002d2a <STEPPER_stepmode>:
    2d2a:	2f 92       	push	r2
    2d2c:	3f 92       	push	r3
    2d2e:	4f 92       	push	r4
    2d30:	5f 92       	push	r5
    2d32:	6f 92       	push	r6
    2d34:	7f 92       	push	r7
    2d36:	8f 92       	push	r8
    2d38:	9f 92       	push	r9
    2d3a:	af 92       	push	r10
    2d3c:	bf 92       	push	r11
    2d3e:	cf 92       	push	r12
    2d40:	df 92       	push	r13
    2d42:	ef 92       	push	r14
    2d44:	ff 92       	push	r15
    2d46:	0f 93       	push	r16
    2d48:	1f 93       	push	r17
    2d4a:	df 93       	push	r29
    2d4c:	cf 93       	push	r28
    2d4e:	cd b7       	in	r28, 0x3d	; 61
    2d50:	de b7       	in	r29, 0x3e	; 62
    2d52:	58 2e       	mov	r5, r24
    2d54:	96 2e       	mov	r9, r22
    2d56:	44 2e       	mov	r4, r20
    2d58:	39 01       	movw	r6, r18
    2d5a:	3c 2c       	mov	r3, r12
    2d5c:	c9 8c       	ldd	r12, Y+25	; 0x19
    2d5e:	da 8c       	ldd	r13, Y+26	; 0x1a
    2d60:	2b 8c       	ldd	r2, Y+27	; 0x1b
    2d62:	81 e0       	ldi	r24, 0x01	; 1
    2d64:	68 17       	cp	r22, r24
    2d66:	39 f1       	breq	.+78     	; 0x2db6 <STEPPER_stepmode+0x8c>
    2d68:	68 17       	cp	r22, r24
    2d6a:	28 f0       	brcs	.+10     	; 0x2d76 <STEPPER_stepmode+0x4c>
    2d6c:	92 e0       	ldi	r25, 0x02	; 2
    2d6e:	69 17       	cp	r22, r25
    2d70:	09 f0       	breq	.+2      	; 0x2d74 <STEPPER_stepmode+0x4a>
    2d72:	85 c0       	rjmp	.+266    	; 0x2e7e <STEPPER_stepmode+0x154>
    2d74:	49 c0       	rjmp	.+146    	; 0x2e08 <STEPPER_stepmode+0xde>
    2d76:	80 e0       	ldi	r24, 0x00	; 0
    2d78:	61 e0       	ldi	r22, 0x01	; 1
    2d7a:	0e 94 9e 18 	call	0x313c	; 0x313c <STEPPER_set_mode>
    2d7e:	80 e0       	ldi	r24, 0x00	; 0
    2d80:	b7 01       	movw	r22, r14
    2d82:	0e 94 67 18 	call	0x30ce	; 0x30ce <STEPPER_set_accel>
    2d86:	80 e0       	ldi	r24, 0x00	; 0
    2d88:	64 2d       	mov	r22, r4
    2d8a:	a3 01       	movw	r20, r6
    2d8c:	98 01       	movw	r18, r16
    2d8e:	03 2d       	mov	r16, r3
    2d90:	ee 24       	eor	r14, r14
    2d92:	e3 94       	inc	r14
    2d94:	e6 e1       	ldi	r30, 0x16	; 22
    2d96:	ce 2e       	mov	r12, r30
    2d98:	e5 e0       	ldi	r30, 0x05	; 5
    2d9a:	de 2e       	mov	r13, r30
    2d9c:	0e 94 d5 18 	call	0x31aa	; 0x31aa <STEPPER_step>
    2da0:	55 20       	and	r5, r5
    2da2:	09 f0       	breq	.+2      	; 0x2da6 <STEPPER_stepmode+0x7c>
    2da4:	6c c0       	rjmp	.+216    	; 0x2e7e <STEPPER_stepmode+0x154>
    2da6:	00 d0       	rcall	.+0      	; 0x2da8 <STEPPER_stepmode+0x7e>
    2da8:	0f 92       	push	r0
    2daa:	ed b7       	in	r30, 0x3d	; 61
    2dac:	fe b7       	in	r31, 0x3e	; 62
    2dae:	11 82       	std	Z+1, r1	; 0x01
    2db0:	b3 82       	std	Z+3, r11	; 0x03
    2db2:	a2 82       	std	Z+2, r10	; 0x02
    2db4:	23 c0       	rjmp	.+70     	; 0x2dfc <STEPPER_stepmode+0xd2>
    2db6:	81 e0       	ldi	r24, 0x01	; 1
    2db8:	61 e0       	ldi	r22, 0x01	; 1
    2dba:	0e 94 9e 18 	call	0x313c	; 0x313c <STEPPER_set_mode>
    2dbe:	81 e0       	ldi	r24, 0x01	; 1
    2dc0:	b6 01       	movw	r22, r12
    2dc2:	0e 94 67 18 	call	0x30ce	; 0x30ce <STEPPER_set_accel>
    2dc6:	81 e0       	ldi	r24, 0x01	; 1
    2dc8:	68 2d       	mov	r22, r8
    2dca:	4d 89       	ldd	r20, Y+21	; 0x15
    2dcc:	5e 89       	ldd	r21, Y+22	; 0x16
    2dce:	2f 89       	ldd	r18, Y+23	; 0x17
    2dd0:	38 8d       	ldd	r19, Y+24	; 0x18
    2dd2:	02 2d       	mov	r16, r2
    2dd4:	ee 24       	eor	r14, r14
    2dd6:	e3 94       	inc	r14
    2dd8:	76 e1       	ldi	r23, 0x16	; 22
    2dda:	c7 2e       	mov	r12, r23
    2ddc:	75 e0       	ldi	r23, 0x05	; 5
    2dde:	d7 2e       	mov	r13, r23
    2de0:	0e 94 d5 18 	call	0x31aa	; 0x31aa <STEPPER_step>
    2de4:	55 20       	and	r5, r5
    2de6:	09 f0       	breq	.+2      	; 0x2dea <STEPPER_stepmode+0xc0>
    2de8:	4a c0       	rjmp	.+148    	; 0x2e7e <STEPPER_stepmode+0x154>
    2dea:	00 d0       	rcall	.+0      	; 0x2dec <STEPPER_stepmode+0xc2>
    2dec:	0f 92       	push	r0
    2dee:	ed b7       	in	r30, 0x3d	; 61
    2df0:	fe b7       	in	r31, 0x3e	; 62
    2df2:	91 82       	std	Z+1, r9	; 0x01
    2df4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2df6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2df8:	93 83       	std	Z+3, r25	; 0x03
    2dfa:	82 83       	std	Z+2, r24	; 0x02
    2dfc:	0e 94 61 19 	call	0x32c2	; 0x32c2 <STEPPER_wait_and_then>
    2e00:	0f 90       	pop	r0
    2e02:	0f 90       	pop	r0
    2e04:	0f 90       	pop	r0
    2e06:	3b c0       	rjmp	.+118    	; 0x2e7e <STEPPER_stepmode+0x154>
    2e08:	82 e0       	ldi	r24, 0x02	; 2
    2e0a:	61 e0       	ldi	r22, 0x01	; 1
    2e0c:	0e 94 9e 18 	call	0x313c	; 0x313c <STEPPER_set_mode>
    2e10:	80 e0       	ldi	r24, 0x00	; 0
    2e12:	b7 01       	movw	r22, r14
    2e14:	0e 94 67 18 	call	0x30ce	; 0x30ce <STEPPER_set_accel>
    2e18:	81 e0       	ldi	r24, 0x01	; 1
    2e1a:	b6 01       	movw	r22, r12
    2e1c:	0e 94 67 18 	call	0x30ce	; 0x30ce <STEPPER_set_accel>
    2e20:	80 e0       	ldi	r24, 0x00	; 0
    2e22:	64 2d       	mov	r22, r4
    2e24:	a3 01       	movw	r20, r6
    2e26:	98 01       	movw	r18, r16
    2e28:	03 2d       	mov	r16, r3
    2e2a:	ee 24       	eor	r14, r14
    2e2c:	e3 94       	inc	r14
    2e2e:	96 e1       	ldi	r25, 0x16	; 22
    2e30:	c9 2e       	mov	r12, r25
    2e32:	95 e0       	ldi	r25, 0x05	; 5
    2e34:	d9 2e       	mov	r13, r25
    2e36:	0e 94 d5 18 	call	0x31aa	; 0x31aa <STEPPER_step>
    2e3a:	81 e0       	ldi	r24, 0x01	; 1
    2e3c:	68 2d       	mov	r22, r8
    2e3e:	4d 89       	ldd	r20, Y+21	; 0x15
    2e40:	5e 89       	ldd	r21, Y+22	; 0x16
    2e42:	2f 89       	ldd	r18, Y+23	; 0x17
    2e44:	38 8d       	ldd	r19, Y+24	; 0x18
    2e46:	02 2d       	mov	r16, r2
    2e48:	0e 94 d5 18 	call	0x31aa	; 0x31aa <STEPPER_step>
    2e4c:	55 20       	and	r5, r5
    2e4e:	b9 f4       	brne	.+46     	; 0x2e7e <STEPPER_stepmode+0x154>
    2e50:	00 d0       	rcall	.+0      	; 0x2e52 <STEPPER_stepmode+0x128>
    2e52:	00 d0       	rcall	.+0      	; 0x2e54 <STEPPER_stepmode+0x12a>
    2e54:	0f 92       	push	r0
    2e56:	ad b7       	in	r26, 0x3d	; 61
    2e58:	be b7       	in	r27, 0x3e	; 62
    2e5a:	11 96       	adiw	r26, 0x01	; 1
    2e5c:	ed b7       	in	r30, 0x3d	; 61
    2e5e:	fe b7       	in	r31, 0x3e	; 62
    2e60:	91 82       	std	Z+1, r9	; 0x01
    2e62:	fd 01       	movw	r30, r26
    2e64:	b2 82       	std	Z+2, r11	; 0x02
    2e66:	a1 82       	std	Z+1, r10	; 0x01
    2e68:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2e6a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2e6c:	94 83       	std	Z+4, r25	; 0x04
    2e6e:	83 83       	std	Z+3, r24	; 0x03
    2e70:	0e 94 61 19 	call	0x32c2	; 0x32c2 <STEPPER_wait_and_then>
    2e74:	0f 90       	pop	r0
    2e76:	0f 90       	pop	r0
    2e78:	0f 90       	pop	r0
    2e7a:	0f 90       	pop	r0
    2e7c:	0f 90       	pop	r0
    2e7e:	cf 91       	pop	r28
    2e80:	df 91       	pop	r29
    2e82:	1f 91       	pop	r17
    2e84:	0f 91       	pop	r16
    2e86:	ff 90       	pop	r15
    2e88:	ef 90       	pop	r14
    2e8a:	df 90       	pop	r13
    2e8c:	cf 90       	pop	r12
    2e8e:	bf 90       	pop	r11
    2e90:	af 90       	pop	r10
    2e92:	9f 90       	pop	r9
    2e94:	8f 90       	pop	r8
    2e96:	7f 90       	pop	r7
    2e98:	6f 90       	pop	r6
    2e9a:	5f 90       	pop	r5
    2e9c:	4f 90       	pop	r4
    2e9e:	3f 90       	pop	r3
    2ea0:	2f 90       	pop	r2
    2ea2:	08 95       	ret

00002ea4 <STEPPER_move>:
    2ea4:	6f 92       	push	r6
    2ea6:	7f 92       	push	r7
    2ea8:	8f 92       	push	r8
    2eaa:	9f 92       	push	r9
    2eac:	af 92       	push	r10
    2eae:	bf 92       	push	r11
    2eb0:	cf 92       	push	r12
    2eb2:	df 92       	push	r13
    2eb4:	ef 92       	push	r14
    2eb6:	ff 92       	push	r15
    2eb8:	0f 93       	push	r16
    2eba:	1f 93       	push	r17
    2ebc:	df 93       	push	r29
    2ebe:	cf 93       	push	r28
    2ec0:	cd b7       	in	r28, 0x3d	; 61
    2ec2:	de b7       	in	r29, 0x3e	; 62
    2ec4:	94 2e       	mov	r9, r20
    2ec6:	7c 2d       	mov	r23, r12
    2ec8:	d5 01       	movw	r26, r10
    2eca:	49 89       	ldd	r20, Y+17	; 0x11
    2ecc:	5a 89       	ldd	r21, Y+18	; 0x12
    2ece:	ab 88       	ldd	r10, Y+19	; 0x13
    2ed0:	bc 88       	ldd	r11, Y+20	; 0x14
    2ed2:	cd 88       	ldd	r12, Y+21	; 0x15
    2ed4:	de 88       	ldd	r13, Y+22	; 0x16
    2ed6:	9f 89       	ldd	r25, Y+23	; 0x17
    2ed8:	81 30       	cpi	r24, 0x01	; 1
    2eda:	09 f4       	brne	.+2      	; 0x2ede <STEPPER_move+0x3a>
    2edc:	57 c0       	rjmp	.+174    	; 0x2f8c <STEPPER_move+0xe8>
    2ede:	81 30       	cpi	r24, 0x01	; 1
    2ee0:	b8 f1       	brcs	.+110    	; 0x2f50 <STEPPER_move+0xac>
    2ee2:	82 30       	cpi	r24, 0x02	; 2
    2ee4:	09 f0       	breq	.+2      	; 0x2ee8 <STEPPER_move+0x44>
    2ee6:	76 c0       	rjmp	.+236    	; 0x2fd4 <STEPPER_move+0x130>
    2ee8:	61 30       	cpi	r22, 0x01	; 1
    2eea:	91 f0       	breq	.+36     	; 0x2f10 <STEPPER_move+0x6c>
    2eec:	61 30       	cpi	r22, 0x01	; 1
    2eee:	20 f0       	brcs	.+8      	; 0x2ef8 <STEPPER_move+0x54>
    2ef0:	62 30       	cpi	r22, 0x02	; 2
    2ef2:	09 f0       	breq	.+2      	; 0x2ef6 <STEPPER_move+0x52>
    2ef4:	6f c0       	rjmp	.+222    	; 0x2fd4 <STEPPER_move+0x130>
    2ef6:	15 c0       	rjmp	.+42     	; 0x2f22 <STEPPER_move+0x7e>
    2ef8:	80 e0       	ldi	r24, 0x00	; 0
    2efa:	60 e0       	ldi	r22, 0x00	; 0
    2efc:	0e 94 9e 18 	call	0x313c	; 0x313c <STEPPER_set_mode>
    2f00:	80 e0       	ldi	r24, 0x00	; 0
    2f02:	b7 01       	movw	r22, r14
    2f04:	0e 94 67 18 	call	0x30ce	; 0x30ce <STEPPER_set_accel>
    2f08:	80 e0       	ldi	r24, 0x00	; 0
    2f0a:	69 2d       	mov	r22, r9
    2f0c:	a8 01       	movw	r20, r16
    2f0e:	1d c0       	rjmp	.+58     	; 0x2f4a <STEPPER_move+0xa6>
    2f10:	81 e0       	ldi	r24, 0x01	; 1
    2f12:	60 e0       	ldi	r22, 0x00	; 0
    2f14:	0e 94 9e 18 	call	0x313c	; 0x313c <STEPPER_set_mode>
    2f18:	81 e0       	ldi	r24, 0x01	; 1
    2f1a:	b6 01       	movw	r22, r12
    2f1c:	0e 94 67 18 	call	0x30ce	; 0x30ce <STEPPER_set_accel>
    2f20:	11 c0       	rjmp	.+34     	; 0x2f44 <STEPPER_move+0xa0>
    2f22:	82 e0       	ldi	r24, 0x02	; 2
    2f24:	60 e0       	ldi	r22, 0x00	; 0
    2f26:	0e 94 9e 18 	call	0x313c	; 0x313c <STEPPER_set_mode>
    2f2a:	80 e0       	ldi	r24, 0x00	; 0
    2f2c:	b7 01       	movw	r22, r14
    2f2e:	0e 94 67 18 	call	0x30ce	; 0x30ce <STEPPER_set_accel>
    2f32:	81 e0       	ldi	r24, 0x01	; 1
    2f34:	b6 01       	movw	r22, r12
    2f36:	0e 94 67 18 	call	0x30ce	; 0x30ce <STEPPER_set_accel>
    2f3a:	80 e0       	ldi	r24, 0x00	; 0
    2f3c:	69 2d       	mov	r22, r9
    2f3e:	a8 01       	movw	r20, r16
    2f40:	0e 94 50 18 	call	0x30a0	; 0x30a0 <STEPPER_run>
    2f44:	81 e0       	ldi	r24, 0x01	; 1
    2f46:	68 2d       	mov	r22, r8
    2f48:	a5 01       	movw	r20, r10
    2f4a:	0e 94 50 18 	call	0x30a0	; 0x30a0 <STEPPER_run>
    2f4e:	42 c0       	rjmp	.+132    	; 0x2fd4 <STEPPER_move+0x130>
    2f50:	ed b7       	in	r30, 0x3d	; 61
    2f52:	fe b7       	in	r31, 0x3e	; 62
    2f54:	39 97       	sbiw	r30, 0x09	; 9
    2f56:	0f b6       	in	r0, 0x3f	; 63
    2f58:	f8 94       	cli
    2f5a:	fe bf       	out	0x3e, r31	; 62
    2f5c:	0f be       	out	0x3f, r0	; 63
    2f5e:	ed bf       	out	0x3d, r30	; 61
    2f60:	6d b6       	in	r6, 0x3d	; 61
    2f62:	7e b6       	in	r7, 0x3e	; 62
    2f64:	08 94       	sec
    2f66:	61 1c       	adc	r6, r1
    2f68:	71 1c       	adc	r7, r1
    2f6a:	52 83       	std	Z+2, r21	; 0x02
    2f6c:	41 83       	std	Z+1, r20	; 0x01
    2f6e:	f3 01       	movw	r30, r6
    2f70:	b3 82       	std	Z+3, r11	; 0x03
    2f72:	a2 82       	std	Z+2, r10	; 0x02
    2f74:	d5 82       	std	Z+5, r13	; 0x05
    2f76:	c4 82       	std	Z+4, r12	; 0x04
    2f78:	96 83       	std	Z+6, r25	; 0x06
    2f7a:	88 8d       	ldd	r24, Y+24	; 0x18
    2f7c:	99 8d       	ldd	r25, Y+25	; 0x19
    2f7e:	90 87       	std	Z+8, r25	; 0x08
    2f80:	87 83       	std	Z+7, r24	; 0x07
    2f82:	80 e0       	ldi	r24, 0x00	; 0
    2f84:	49 2d       	mov	r20, r9
    2f86:	c7 2e       	mov	r12, r23
    2f88:	5d 01       	movw	r10, r26
    2f8a:	1a c0       	rjmp	.+52     	; 0x2fc0 <STEPPER_move+0x11c>
    2f8c:	ed b7       	in	r30, 0x3d	; 61
    2f8e:	fe b7       	in	r31, 0x3e	; 62
    2f90:	39 97       	sbiw	r30, 0x09	; 9
    2f92:	0f b6       	in	r0, 0x3f	; 63
    2f94:	f8 94       	cli
    2f96:	fe bf       	out	0x3e, r31	; 62
    2f98:	0f be       	out	0x3f, r0	; 63
    2f9a:	ed bf       	out	0x3d, r30	; 61
    2f9c:	ad b7       	in	r26, 0x3d	; 61
    2f9e:	be b7       	in	r27, 0x3e	; 62
    2fa0:	11 96       	adiw	r26, 0x01	; 1
    2fa2:	52 83       	std	Z+2, r21	; 0x02
    2fa4:	41 83       	std	Z+1, r20	; 0x01
    2fa6:	fd 01       	movw	r30, r26
    2fa8:	b3 82       	std	Z+3, r11	; 0x03
    2faa:	a2 82       	std	Z+2, r10	; 0x02
    2fac:	d5 82       	std	Z+5, r13	; 0x05
    2fae:	c4 82       	std	Z+4, r12	; 0x04
    2fb0:	96 83       	std	Z+6, r25	; 0x06
    2fb2:	10 86       	std	Z+8, r1	; 0x08
    2fb4:	17 82       	std	Z+7, r1	; 0x07
    2fb6:	81 e0       	ldi	r24, 0x01	; 1
    2fb8:	49 2d       	mov	r20, r9
    2fba:	c7 2e       	mov	r12, r23
    2fbc:	aa 24       	eor	r10, r10
    2fbe:	bb 24       	eor	r11, r11
    2fc0:	0e 94 95 16 	call	0x2d2a	; 0x2d2a <STEPPER_stepmode>
    2fc4:	8d b7       	in	r24, 0x3d	; 61
    2fc6:	9e b7       	in	r25, 0x3e	; 62
    2fc8:	09 96       	adiw	r24, 0x09	; 9
    2fca:	0f b6       	in	r0, 0x3f	; 63
    2fcc:	f8 94       	cli
    2fce:	9e bf       	out	0x3e, r25	; 62
    2fd0:	0f be       	out	0x3f, r0	; 63
    2fd2:	8d bf       	out	0x3d, r24	; 61
    2fd4:	cf 91       	pop	r28
    2fd6:	df 91       	pop	r29
    2fd8:	1f 91       	pop	r17
    2fda:	0f 91       	pop	r16
    2fdc:	ff 90       	pop	r15
    2fde:	ef 90       	pop	r14
    2fe0:	df 90       	pop	r13
    2fe2:	cf 90       	pop	r12
    2fe4:	bf 90       	pop	r11
    2fe6:	af 90       	pop	r10
    2fe8:	9f 90       	pop	r9
    2fea:	8f 90       	pop	r8
    2fec:	7f 90       	pop	r7
    2fee:	6f 90       	pop	r6
    2ff0:	08 95       	ret

00002ff2 <STEPPER_open>:
    2ff2:	0e 94 43 21 	call	0x4286	; 0x4286 <__STEPPER_init>
    2ff6:	81 e0       	ldi	r24, 0x01	; 1
    2ff8:	80 93 15 05 	sts	0x0515, r24
    2ffc:	ef ed       	ldi	r30, 0xDF	; 223
    2ffe:	f4 e0       	ldi	r31, 0x04	; 4
    3000:	11 92       	st	Z+, r1
    3002:	11 92       	st	Z+, r1
    3004:	11 82       	std	Z+1, r1	; 0x01
    3006:	10 82       	st	Z, r1
    3008:	32 96       	adiw	r30, 0x02	; 2
    300a:	11 82       	std	Z+1, r1	; 0x01
    300c:	10 82       	st	Z, r1
    300e:	32 96       	adiw	r30, 0x02	; 2
    3010:	11 82       	std	Z+1, r1	; 0x01
    3012:	10 82       	st	Z, r1
    3014:	32 96       	adiw	r30, 0x02	; 2
    3016:	11 82       	std	Z+1, r1	; 0x01
    3018:	10 82       	st	Z, r1
    301a:	32 96       	adiw	r30, 0x02	; 2
    301c:	11 82       	std	Z+1, r1	; 0x01
    301e:	10 82       	st	Z, r1
    3020:	32 96       	adiw	r30, 0x02	; 2
    3022:	11 82       	std	Z+1, r1	; 0x01
    3024:	10 82       	st	Z, r1
    3026:	32 96       	adiw	r30, 0x02	; 2
    3028:	11 82       	std	Z+1, r1	; 0x01
    302a:	10 82       	st	Z, r1
    302c:	32 96       	adiw	r30, 0x02	; 2
    302e:	11 82       	std	Z+1, r1	; 0x01
    3030:	10 82       	st	Z, r1
    3032:	32 96       	adiw	r30, 0x02	; 2
    3034:	11 82       	std	Z+1, r1	; 0x01
    3036:	10 82       	st	Z, r1
    3038:	32 96       	adiw	r30, 0x02	; 2
    303a:	11 82       	std	Z+1, r1	; 0x01
    303c:	10 82       	st	Z, r1
    303e:	32 96       	adiw	r30, 0x02	; 2
    3040:	11 82       	std	Z+1, r1	; 0x01
    3042:	10 82       	st	Z, r1
    3044:	32 96       	adiw	r30, 0x02	; 2
    3046:	11 82       	std	Z+1, r1	; 0x01
    3048:	10 82       	st	Z, r1
    304a:	36 96       	adiw	r30, 0x06	; 6
    304c:	11 92       	st	Z+, r1
    304e:	11 92       	st	Z+, r1
    3050:	11 92       	st	Z+, r1
    3052:	10 82       	st	Z, r1
    3054:	32 96       	adiw	r30, 0x02	; 2
    3056:	11 92       	st	Z+, r1
    3058:	11 92       	st	Z+, r1
    305a:	11 92       	st	Z+, r1
    305c:	11 92       	st	Z+, r1
    305e:	11 92       	st	Z+, r1
    3060:	11 92       	st	Z+, r1
    3062:	11 92       	st	Z+, r1
    3064:	11 82       	std	Z+1, r1	; 0x01
    3066:	10 82       	st	Z, r1
    3068:	32 96       	adiw	r30, 0x02	; 2
    306a:	11 82       	std	Z+1, r1	; 0x01
    306c:	10 82       	st	Z, r1
    306e:	32 96       	adiw	r30, 0x02	; 2
    3070:	11 82       	std	Z+1, r1	; 0x01
    3072:	10 82       	st	Z, r1
    3074:	32 96       	adiw	r30, 0x02	; 2
    3076:	11 82       	std	Z+1, r1	; 0x01
    3078:	10 82       	st	Z, r1
    307a:	76 97       	sbiw	r30, 0x16	; 22
    307c:	11 82       	std	Z+1, r1	; 0x01
    307e:	10 82       	st	Z, r1
    3080:	32 96       	adiw	r30, 0x02	; 2
    3082:	11 82       	std	Z+1, r1	; 0x01
    3084:	10 82       	st	Z, r1
    3086:	10 92 14 05 	sts	0x0514, r1
    308a:	10 92 13 05 	sts	0x0513, r1
    308e:	10 92 15 05 	sts	0x0515, r1
    3092:	87 e0       	ldi	r24, 0x07	; 7
    3094:	61 e0       	ldi	r22, 0x01	; 1
    3096:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    309a:	87 e0       	ldi	r24, 0x07	; 7
    309c:	91 e0       	ldi	r25, 0x01	; 1
    309e:	08 95       	ret

000030a0 <STEPPER_run>:
    30a0:	ef 92       	push	r14
    30a2:	ff 92       	push	r15
    30a4:	0f 93       	push	r16
    30a6:	1f 93       	push	r17
    30a8:	18 2f       	mov	r17, r24
    30aa:	06 2f       	mov	r16, r22
    30ac:	7a 01       	movw	r14, r20
    30ae:	60 e0       	ldi	r22, 0x00	; 0
    30b0:	0e 94 9e 18 	call	0x313c	; 0x313c <STEPPER_set_mode>
    30b4:	81 2f       	mov	r24, r17
    30b6:	60 2f       	mov	r22, r16
    30b8:	0e 94 89 18 	call	0x3112	; 0x3112 <STEPPER_set_dir>
    30bc:	81 2f       	mov	r24, r17
    30be:	b7 01       	movw	r22, r14
    30c0:	0e 94 b3 18 	call	0x3166	; 0x3166 <STEPPER_set_speed>
    30c4:	1f 91       	pop	r17
    30c6:	0f 91       	pop	r16
    30c8:	ff 90       	pop	r15
    30ca:	ef 90       	pop	r14
    30cc:	08 95       	ret

000030ce <STEPPER_set_accel>:
    30ce:	48 2f       	mov	r20, r24
    30d0:	81 e0       	ldi	r24, 0x01	; 1
    30d2:	80 93 15 05 	sts	0x0515, r24
    30d6:	cb 01       	movw	r24, r22
    30d8:	23 e0       	ldi	r18, 0x03	; 3
    30da:	69 3e       	cpi	r22, 0xE9	; 233
    30dc:	72 07       	cpc	r23, r18
    30de:	10 f0       	brcs	.+4      	; 0x30e4 <STEPPER_set_accel+0x16>
    30e0:	88 ee       	ldi	r24, 0xE8	; 232
    30e2:	93 e0       	ldi	r25, 0x03	; 3
    30e4:	41 30       	cpi	r20, 0x01	; 1
    30e6:	71 f0       	breq	.+28     	; 0x3104 <STEPPER_set_accel+0x36>
    30e8:	41 30       	cpi	r20, 0x01	; 1
    30ea:	18 f0       	brcs	.+6      	; 0x30f2 <STEPPER_set_accel+0x24>
    30ec:	42 30       	cpi	r20, 0x02	; 2
    30ee:	71 f4       	brne	.+28     	; 0x310c <STEPPER_set_accel+0x3e>
    30f0:	05 c0       	rjmp	.+10     	; 0x30fc <STEPPER_set_accel+0x2e>
    30f2:	90 93 ea 04 	sts	0x04EA, r25
    30f6:	80 93 e9 04 	sts	0x04E9, r24
    30fa:	08 c0       	rjmp	.+16     	; 0x310c <STEPPER_set_accel+0x3e>
    30fc:	90 93 ea 04 	sts	0x04EA, r25
    3100:	80 93 e9 04 	sts	0x04E9, r24
    3104:	90 93 ec 04 	sts	0x04EC, r25
    3108:	80 93 eb 04 	sts	0x04EB, r24
    310c:	10 92 15 05 	sts	0x0515, r1
    3110:	08 95       	ret

00003112 <STEPPER_set_dir>:
    3112:	98 2f       	mov	r25, r24
    3114:	81 e0       	ldi	r24, 0x01	; 1
    3116:	80 93 15 05 	sts	0x0515, r24
    311a:	91 30       	cpi	r25, 0x01	; 1
    311c:	51 f0       	breq	.+20     	; 0x3132 <STEPPER_set_dir+0x20>
    311e:	91 30       	cpi	r25, 0x01	; 1
    3120:	18 f0       	brcs	.+6      	; 0x3128 <STEPPER_set_dir+0x16>
    3122:	92 30       	cpi	r25, 0x02	; 2
    3124:	41 f4       	brne	.+16     	; 0x3136 <STEPPER_set_dir+0x24>
    3126:	03 c0       	rjmp	.+6      	; 0x312e <STEPPER_set_dir+0x1c>
    3128:	60 93 02 05 	sts	0x0502, r22
    312c:	04 c0       	rjmp	.+8      	; 0x3136 <STEPPER_set_dir+0x24>
    312e:	60 93 02 05 	sts	0x0502, r22
    3132:	60 93 03 05 	sts	0x0503, r22
    3136:	10 92 15 05 	sts	0x0515, r1
    313a:	08 95       	ret

0000313c <STEPPER_set_mode>:
    313c:	98 2f       	mov	r25, r24
    313e:	81 e0       	ldi	r24, 0x01	; 1
    3140:	80 93 15 05 	sts	0x0515, r24
    3144:	91 30       	cpi	r25, 0x01	; 1
    3146:	51 f0       	breq	.+20     	; 0x315c <STEPPER_set_mode+0x20>
    3148:	91 30       	cpi	r25, 0x01	; 1
    314a:	18 f0       	brcs	.+6      	; 0x3152 <STEPPER_set_mode+0x16>
    314c:	92 30       	cpi	r25, 0x02	; 2
    314e:	41 f4       	brne	.+16     	; 0x3160 <STEPPER_set_mode+0x24>
    3150:	03 c0       	rjmp	.+6      	; 0x3158 <STEPPER_set_mode+0x1c>
    3152:	60 93 df 04 	sts	0x04DF, r22
    3156:	04 c0       	rjmp	.+8      	; 0x3160 <STEPPER_set_mode+0x24>
    3158:	60 93 df 04 	sts	0x04DF, r22
    315c:	60 93 e0 04 	sts	0x04E0, r22
    3160:	10 92 15 05 	sts	0x0515, r1
    3164:	08 95       	ret

00003166 <STEPPER_set_speed>:
    3166:	48 2f       	mov	r20, r24
    3168:	81 e0       	ldi	r24, 0x01	; 1
    316a:	80 93 15 05 	sts	0x0515, r24
    316e:	cb 01       	movw	r24, r22
    3170:	21 e0       	ldi	r18, 0x01	; 1
    3172:	61 39       	cpi	r22, 0x91	; 145
    3174:	72 07       	cpc	r23, r18
    3176:	10 f0       	brcs	.+4      	; 0x317c <STEPPER_set_speed+0x16>
    3178:	80 e9       	ldi	r24, 0x90	; 144
    317a:	91 e0       	ldi	r25, 0x01	; 1
    317c:	41 30       	cpi	r20, 0x01	; 1
    317e:	71 f0       	breq	.+28     	; 0x319c <STEPPER_set_speed+0x36>
    3180:	41 30       	cpi	r20, 0x01	; 1
    3182:	18 f0       	brcs	.+6      	; 0x318a <STEPPER_set_speed+0x24>
    3184:	42 30       	cpi	r20, 0x02	; 2
    3186:	71 f4       	brne	.+28     	; 0x31a4 <STEPPER_set_speed+0x3e>
    3188:	05 c0       	rjmp	.+10     	; 0x3194 <STEPPER_set_speed+0x2e>
    318a:	90 93 e2 04 	sts	0x04E2, r25
    318e:	80 93 e1 04 	sts	0x04E1, r24
    3192:	08 c0       	rjmp	.+16     	; 0x31a4 <STEPPER_set_speed+0x3e>
    3194:	90 93 e2 04 	sts	0x04E2, r25
    3198:	80 93 e1 04 	sts	0x04E1, r24
    319c:	90 93 e4 04 	sts	0x04E4, r25
    31a0:	80 93 e3 04 	sts	0x04E3, r24
    31a4:	10 92 15 05 	sts	0x0515, r1
    31a8:	08 95       	ret

000031aa <STEPPER_step>:
    31aa:	8f 92       	push	r8
    31ac:	9f 92       	push	r9
    31ae:	af 92       	push	r10
    31b0:	bf 92       	push	r11
    31b2:	cf 92       	push	r12
    31b4:	df 92       	push	r13
    31b6:	ef 92       	push	r14
    31b8:	ff 92       	push	r15
    31ba:	0f 93       	push	r16
    31bc:	1f 93       	push	r17
    31be:	cf 93       	push	r28
    31c0:	df 93       	push	r29
    31c2:	18 2f       	mov	r17, r24
    31c4:	f6 2e       	mov	r15, r22
    31c6:	5a 01       	movw	r10, r20
    31c8:	49 01       	movw	r8, r18
    31ca:	e6 01       	movw	r28, r12
    31cc:	61 e0       	ldi	r22, 0x01	; 1
    31ce:	0e 94 9e 18 	call	0x313c	; 0x313c <STEPPER_set_mode>
    31d2:	81 2f       	mov	r24, r17
    31d4:	b5 01       	movw	r22, r10
    31d6:	a4 01       	movw	r20, r8
    31d8:	0e 94 7d 21 	call	0x42fa	; 0x42fa <STEPPER_setup_decels>
    31dc:	81 2f       	mov	r24, r17
    31de:	6f 2d       	mov	r22, r15
    31e0:	0e 94 89 18 	call	0x3112	; 0x3112 <STEPPER_set_dir>
    31e4:	81 2f       	mov	r24, r17
    31e6:	60 2f       	mov	r22, r16
    31e8:	0e 94 68 21 	call	0x42d0	; 0x42d0 <STEPPER_set_stop_mode>
    31ec:	81 2f       	mov	r24, r17
    31ee:	b5 01       	movw	r22, r10
    31f0:	0e 94 4d 21 	call	0x429a	; 0x429a <STEPPER_set_steps>
    31f4:	c1 14       	cp	r12, r1
    31f6:	d1 04       	cpc	r13, r1
    31f8:	99 f0       	breq	.+38     	; 0x3220 <STEPPER_step+0x76>
    31fa:	11 30       	cpi	r17, 0x01	; 1
    31fc:	49 f0       	breq	.+18     	; 0x3210 <STEPPER_step+0x66>
    31fe:	11 30       	cpi	r17, 0x01	; 1
    3200:	18 f0       	brcs	.+6      	; 0x3208 <STEPPER_step+0x5e>
    3202:	12 30       	cpi	r17, 0x02	; 2
    3204:	69 f4       	brne	.+26     	; 0x3220 <STEPPER_step+0x76>
    3206:	06 c0       	rjmp	.+12     	; 0x3214 <STEPPER_step+0x6a>
    3208:	18 82       	st	Y, r1
    320a:	10 92 11 05 	sts	0x0511, r1
    320e:	08 c0       	rjmp	.+16     	; 0x3220 <STEPPER_step+0x76>
    3210:	19 82       	std	Y+1, r1	; 0x01
    3212:	04 c0       	rjmp	.+8      	; 0x321c <STEPPER_step+0x72>
    3214:	18 82       	st	Y, r1
    3216:	19 82       	std	Y+1, r1	; 0x01
    3218:	10 92 11 05 	sts	0x0511, r1
    321c:	10 92 12 05 	sts	0x0512, r1
    3220:	d0 93 14 05 	sts	0x0514, r29
    3224:	c0 93 13 05 	sts	0x0513, r28
    3228:	ee 20       	and	r14, r14
    322a:	b9 f5       	brne	.+110    	; 0x329a <STEPPER_step+0xf0>
    322c:	8e e6       	ldi	r24, 0x6E	; 110
    322e:	92 e0       	ldi	r25, 0x02	; 2
    3230:	90 93 14 05 	sts	0x0514, r25
    3234:	80 93 13 05 	sts	0x0513, r24
    3238:	81 2f       	mov	r24, r17
    323a:	b4 01       	movw	r22, r8
    323c:	0e 94 b3 18 	call	0x3166	; 0x3166 <STEPPER_set_speed>
    3240:	81 2f       	mov	r24, r17
    3242:	0e 94 2e 21 	call	0x425c	; 0x425c <STEPPER_go>
    3246:	11 30       	cpi	r17, 0x01	; 1
    3248:	71 f0       	breq	.+28     	; 0x3266 <STEPPER_step+0xbc>
    324a:	11 30       	cpi	r17, 0x01	; 1
    324c:	18 f0       	brcs	.+6      	; 0x3254 <STEPPER_step+0xaa>
    324e:	12 30       	cpi	r17, 0x02	; 2
    3250:	59 f5       	brne	.+86     	; 0x32a8 <STEPPER_step+0xfe>
    3252:	12 c0       	rjmp	.+36     	; 0x3278 <STEPPER_step+0xce>
    3254:	10 92 6e 02 	sts	0x026E, r1
    3258:	10 92 11 05 	sts	0x0511, r1
    325c:	80 91 6e 02 	lds	r24, 0x026E
    3260:	88 23       	and	r24, r24
    3262:	e1 f3       	breq	.-8      	; 0x325c <STEPPER_step+0xb2>
    3264:	21 c0       	rjmp	.+66     	; 0x32a8 <STEPPER_step+0xfe>
    3266:	10 92 6f 02 	sts	0x026F, r1
    326a:	10 92 12 05 	sts	0x0512, r1
    326e:	80 91 6f 02 	lds	r24, 0x026F
    3272:	88 23       	and	r24, r24
    3274:	e1 f3       	breq	.-8      	; 0x326e <STEPPER_step+0xc4>
    3276:	18 c0       	rjmp	.+48     	; 0x32a8 <STEPPER_step+0xfe>
    3278:	10 92 6e 02 	sts	0x026E, r1
    327c:	10 92 6f 02 	sts	0x026F, r1
    3280:	10 92 11 05 	sts	0x0511, r1
    3284:	10 92 12 05 	sts	0x0512, r1
    3288:	80 91 6e 02 	lds	r24, 0x026E
    328c:	88 23       	and	r24, r24
    328e:	e1 f3       	breq	.-8      	; 0x3288 <STEPPER_step+0xde>
    3290:	80 91 6f 02 	lds	r24, 0x026F
    3294:	88 23       	and	r24, r24
    3296:	c1 f3       	breq	.-16     	; 0x3288 <STEPPER_step+0xde>
    3298:	07 c0       	rjmp	.+14     	; 0x32a8 <STEPPER_step+0xfe>
    329a:	81 2f       	mov	r24, r17
    329c:	b4 01       	movw	r22, r8
    329e:	0e 94 b3 18 	call	0x3166	; 0x3166 <STEPPER_set_speed>
    32a2:	81 2f       	mov	r24, r17
    32a4:	0e 94 2e 21 	call	0x425c	; 0x425c <STEPPER_go>
    32a8:	df 91       	pop	r29
    32aa:	cf 91       	pop	r28
    32ac:	1f 91       	pop	r17
    32ae:	0f 91       	pop	r16
    32b0:	ff 90       	pop	r15
    32b2:	ef 90       	pop	r14
    32b4:	df 90       	pop	r13
    32b6:	cf 90       	pop	r12
    32b8:	bf 90       	pop	r11
    32ba:	af 90       	pop	r10
    32bc:	9f 90       	pop	r9
    32be:	8f 90       	pop	r8
    32c0:	08 95       	ret

000032c2 <STEPPER_wait_and_then>:
    32c2:	cf 92       	push	r12
    32c4:	df 92       	push	r13
    32c6:	ef 92       	push	r14
    32c8:	ff 92       	push	r15
    32ca:	0f 93       	push	r16
    32cc:	1f 93       	push	r17
    32ce:	df 93       	push	r29
    32d0:	cf 93       	push	r28
    32d2:	cd b7       	in	r28, 0x3d	; 61
    32d4:	de b7       	in	r29, 0x3e	; 62
    32d6:	8b 85       	ldd	r24, Y+11	; 0x0b
    32d8:	81 30       	cpi	r24, 0x01	; 1
    32da:	61 f0       	breq	.+24     	; 0x32f4 <STEPPER_wait_and_then+0x32>
    32dc:	81 30       	cpi	r24, 0x01	; 1
    32de:	18 f0       	brcs	.+6      	; 0x32e6 <STEPPER_wait_and_then+0x24>
    32e0:	82 30       	cpi	r24, 0x02	; 2
    32e2:	a1 f5       	brne	.+104    	; 0x334c <STEPPER_wait_and_then+0x8a>
    32e4:	11 c0       	rjmp	.+34     	; 0x3308 <STEPPER_wait_and_then+0x46>
    32e6:	ec 85       	ldd	r30, Y+12	; 0x0c
    32e8:	fd 85       	ldd	r31, Y+13	; 0x0d
    32ea:	80 91 16 05 	lds	r24, 0x0516
    32ee:	88 23       	and	r24, r24
    32f0:	e1 f3       	breq	.-8      	; 0x32ea <STEPPER_wait_and_then+0x28>
    32f2:	06 c0       	rjmp	.+12     	; 0x3300 <STEPPER_wait_and_then+0x3e>
    32f4:	ec 85       	ldd	r30, Y+12	; 0x0c
    32f6:	fd 85       	ldd	r31, Y+13	; 0x0d
    32f8:	80 91 17 05 	lds	r24, 0x0517
    32fc:	88 23       	and	r24, r24
    32fe:	e1 f3       	breq	.-8      	; 0x32f8 <STEPPER_wait_and_then+0x36>
    3300:	30 97       	sbiw	r30, 0x00	; 0
    3302:	21 f1       	breq	.+72     	; 0x334c <STEPPER_wait_and_then+0x8a>
    3304:	09 95       	icall
    3306:	22 c0       	rjmp	.+68     	; 0x334c <STEPPER_wait_and_then+0x8a>
    3308:	cc 84       	ldd	r12, Y+12	; 0x0c
    330a:	dd 84       	ldd	r13, Y+13	; 0x0d
    330c:	ee 84       	ldd	r14, Y+14	; 0x0e
    330e:	ff 84       	ldd	r15, Y+15	; 0x0f
    3310:	00 e0       	ldi	r16, 0x00	; 0
    3312:	10 e0       	ldi	r17, 0x00	; 0
    3314:	00 23       	and	r16, r16
    3316:	51 f4       	brne	.+20     	; 0x332c <STEPPER_wait_and_then+0x6a>
    3318:	80 91 16 05 	lds	r24, 0x0516
    331c:	88 23       	and	r24, r24
    331e:	31 f0       	breq	.+12     	; 0x332c <STEPPER_wait_and_then+0x6a>
    3320:	c1 14       	cp	r12, r1
    3322:	d1 04       	cpc	r13, r1
    3324:	11 f0       	breq	.+4      	; 0x332a <STEPPER_wait_and_then+0x68>
    3326:	f6 01       	movw	r30, r12
    3328:	09 95       	icall
    332a:	01 e0       	ldi	r16, 0x01	; 1
    332c:	11 23       	and	r17, r17
    332e:	51 f4       	brne	.+20     	; 0x3344 <STEPPER_wait_and_then+0x82>
    3330:	80 91 17 05 	lds	r24, 0x0517
    3334:	88 23       	and	r24, r24
    3336:	31 f0       	breq	.+12     	; 0x3344 <STEPPER_wait_and_then+0x82>
    3338:	e1 14       	cp	r14, r1
    333a:	f1 04       	cpc	r15, r1
    333c:	11 f0       	breq	.+4      	; 0x3342 <STEPPER_wait_and_then+0x80>
    333e:	f7 01       	movw	r30, r14
    3340:	09 95       	icall
    3342:	11 e0       	ldi	r17, 0x01	; 1
    3344:	00 23       	and	r16, r16
    3346:	31 f3       	breq	.-52     	; 0x3314 <STEPPER_wait_and_then+0x52>
    3348:	11 23       	and	r17, r17
    334a:	21 f3       	breq	.-56     	; 0x3314 <STEPPER_wait_and_then+0x52>
    334c:	cf 91       	pop	r28
    334e:	df 91       	pop	r29
    3350:	1f 91       	pop	r17
    3352:	0f 91       	pop	r16
    3354:	ff 90       	pop	r15
    3356:	ef 90       	pop	r14
    3358:	df 90       	pop	r13
    335a:	cf 90       	pop	r12
    335c:	08 95       	ret

0000335e <SYS_get_state>:
    335e:	e8 2f       	mov	r30, r24
    3360:	f0 e0       	ldi	r31, 0x00	; 0
    3362:	e3 31       	cpi	r30, 0x13	; 19
    3364:	f1 05       	cpc	r31, r1
    3366:	40 f4       	brcc	.+16     	; 0x3378 <SYS_get_state+0x1a>
    3368:	e2 5c       	subi	r30, 0xC2	; 194
    336a:	ff 4f       	sbci	r31, 0xFF	; 255
    336c:	ee 0f       	add	r30, r30
    336e:	ff 1f       	adc	r31, r31
    3370:	05 90       	lpm	r0, Z+
    3372:	f4 91       	lpm	r31, Z+
    3374:	e0 2d       	mov	r30, r0
    3376:	09 94       	ijmp
    3378:	80 e0       	ldi	r24, 0x00	; 0
    337a:	08 95       	ret
    337c:	80 91 18 05 	lds	r24, 0x0518
    3380:	08 95       	ret
    3382:	80 91 19 05 	lds	r24, 0x0519
    3386:	08 95       	ret
    3388:	80 91 1a 05 	lds	r24, 0x051A
    338c:	08 95       	ret
    338e:	80 91 1b 05 	lds	r24, 0x051B
    3392:	08 95       	ret
    3394:	80 91 1c 05 	lds	r24, 0x051C
    3398:	08 95       	ret
    339a:	80 91 1e 05 	lds	r24, 0x051E
    339e:	08 95       	ret
    33a0:	80 91 1d 05 	lds	r24, 0x051D
    33a4:	08 95       	ret
    33a6:	80 91 1f 05 	lds	r24, 0x051F
    33aa:	08 95       	ret
    33ac:	80 91 20 05 	lds	r24, 0x0520
    33b0:	08 95       	ret
    33b2:	80 91 21 05 	lds	r24, 0x0521
    33b6:	08 95       	ret
    33b8:	80 91 22 05 	lds	r24, 0x0522
    33bc:	08 95       	ret
    33be:	80 91 23 05 	lds	r24, 0x0523
    33c2:	08 95       	ret
    33c4:	80 91 24 05 	lds	r24, 0x0524
    33c8:	08 95       	ret
    33ca:	80 91 25 05 	lds	r24, 0x0525
    33ce:	08 95       	ret
    33d0:	80 91 26 05 	lds	r24, 0x0526
    33d4:	08 95       	ret
    33d6:	80 91 27 05 	lds	r24, 0x0527
    33da:	08 95       	ret
    33dc:	80 91 28 05 	lds	r24, 0x0528
    33e0:	08 95       	ret
    33e2:	80 91 29 05 	lds	r24, 0x0529
    33e6:	08 95       	ret
    33e8:	80 91 2a 05 	lds	r24, 0x052A
    33ec:	08 95       	ret

000033ee <SYS_set_state>:
    33ee:	e8 2f       	mov	r30, r24
    33f0:	f0 e0       	ldi	r31, 0x00	; 0
    33f2:	e3 31       	cpi	r30, 0x13	; 19
    33f4:	f1 05       	cpc	r31, r1
    33f6:	08 f0       	brcs	.+2      	; 0x33fa <SYS_set_state+0xc>
    33f8:	40 c0       	rjmp	.+128    	; 0x347a <SYS_set_state+0x8c>
    33fa:	ef 5a       	subi	r30, 0xAF	; 175
    33fc:	ff 4f       	sbci	r31, 0xFF	; 255
    33fe:	ee 0f       	add	r30, r30
    3400:	ff 1f       	adc	r31, r31
    3402:	05 90       	lpm	r0, Z+
    3404:	f4 91       	lpm	r31, Z+
    3406:	e0 2d       	mov	r30, r0
    3408:	09 94       	ijmp
    340a:	60 93 18 05 	sts	0x0518, r22
    340e:	08 95       	ret
    3410:	60 93 19 05 	sts	0x0519, r22
    3414:	08 95       	ret
    3416:	60 93 1a 05 	sts	0x051A, r22
    341a:	08 95       	ret
    341c:	60 93 1b 05 	sts	0x051B, r22
    3420:	08 95       	ret
    3422:	60 93 1c 05 	sts	0x051C, r22
    3426:	08 95       	ret
    3428:	60 93 1e 05 	sts	0x051E, r22
    342c:	08 95       	ret
    342e:	60 93 1d 05 	sts	0x051D, r22
    3432:	08 95       	ret
    3434:	60 93 1f 05 	sts	0x051F, r22
    3438:	08 95       	ret
    343a:	60 93 20 05 	sts	0x0520, r22
    343e:	08 95       	ret
    3440:	60 93 21 05 	sts	0x0521, r22
    3444:	08 95       	ret
    3446:	60 93 22 05 	sts	0x0522, r22
    344a:	08 95       	ret
    344c:	60 93 23 05 	sts	0x0523, r22
    3450:	08 95       	ret
    3452:	60 93 24 05 	sts	0x0524, r22
    3456:	08 95       	ret
    3458:	60 93 25 05 	sts	0x0525, r22
    345c:	08 95       	ret
    345e:	60 93 26 05 	sts	0x0526, r22
    3462:	08 95       	ret
    3464:	60 93 27 05 	sts	0x0527, r22
    3468:	08 95       	ret
    346a:	60 93 28 05 	sts	0x0528, r22
    346e:	08 95       	ret
    3470:	60 93 29 05 	sts	0x0529, r22
    3474:	08 95       	ret
    3476:	60 93 28 05 	sts	0x0528, r22
    347a:	08 95       	ret

0000347c <ATTINY_get_sensors>:
    347c:	0f 93       	push	r16
    347e:	1f 93       	push	r17
    3480:	81 e0       	ldi	r24, 0x01	; 1
    3482:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    3486:	81 30       	cpi	r24, 0x01	; 1
    3488:	11 f0       	breq	.+4      	; 0x348e <ATTINY_get_sensors+0x12>
    348a:	00 e0       	ldi	r16, 0x00	; 0
    348c:	24 c0       	rjmp	.+72     	; 0x34d6 <ATTINY_get_sensors+0x5a>
    348e:	87 e0       	ldi	r24, 0x07	; 7
    3490:	0e 94 8c 15 	call	0x2b18	; 0x2b18 <SPI_set_slave_addr>
    3494:	82 e0       	ldi	r24, 0x02	; 2
    3496:	6a e0       	ldi	r22, 0x0A	; 10
    3498:	0e 94 dd 15 	call	0x2bba	; 0x2bba <SPI_transmit>
    349c:	82 e0       	ldi	r24, 0x02	; 2
    349e:	62 eb       	ldi	r22, 0xB2	; 178
    34a0:	0e 94 dd 15 	call	0x2bba	; 0x2bba <SPI_transmit>
    34a4:	18 ec       	ldi	r17, 0xC8	; 200
    34a6:	81 2f       	mov	r24, r17
    34a8:	8a 95       	dec	r24
    34aa:	f1 f7       	brne	.-4      	; 0x34a8 <ATTINY_get_sensors+0x2c>
    34ac:	82 e0       	ldi	r24, 0x02	; 2
    34ae:	60 e0       	ldi	r22, 0x00	; 0
    34b0:	0e 94 19 20 	call	0x4032	; 0x4032 <SPI_receive>
    34b4:	08 2f       	mov	r16, r24
    34b6:	81 2f       	mov	r24, r17
    34b8:	8a 95       	dec	r24
    34ba:	f1 f7       	brne	.-4      	; 0x34b8 <ATTINY_get_sensors+0x3c>
    34bc:	82 e0       	ldi	r24, 0x02	; 2
    34be:	60 e0       	ldi	r22, 0x00	; 0
    34c0:	0e 94 19 20 	call	0x4032	; 0x4032 <SPI_receive>
    34c4:	1a 95       	dec	r17
    34c6:	f1 f7       	brne	.-4      	; 0x34c4 <ATTINY_get_sensors+0x48>
    34c8:	87 e0       	ldi	r24, 0x07	; 7
    34ca:	0e 94 8c 15 	call	0x2b18	; 0x2b18 <SPI_set_slave_addr>
    34ce:	88 e8       	ldi	r24, 0x88	; 136
    34d0:	93 e1       	ldi	r25, 0x13	; 19
    34d2:	01 97       	sbiw	r24, 0x01	; 1
    34d4:	f1 f7       	brne	.-4      	; 0x34d2 <ATTINY_get_sensors+0x56>
    34d6:	80 2f       	mov	r24, r16
    34d8:	1f 91       	pop	r17
    34da:	0f 91       	pop	r16
    34dc:	08 95       	ret

000034de <ATTINY_get_SW_state>:
    34de:	1f 93       	push	r17
    34e0:	cf 93       	push	r28
    34e2:	df 93       	push	r29
    34e4:	18 2f       	mov	r17, r24
    34e6:	80 91 71 02 	lds	r24, 0x0271
    34ea:	88 23       	and	r24, r24
    34ec:	41 f0       	breq	.+16     	; 0x34fe <ATTINY_get_SW_state+0x20>
    34ee:	80 91 7b 02 	lds	r24, 0x027B
    34f2:	88 23       	and	r24, r24
    34f4:	99 f0       	breq	.+38     	; 0x351c <ATTINY_get_SW_state+0x3e>
    34f6:	10 92 71 02 	sts	0x0271, r1
    34fa:	10 92 7b 02 	sts	0x027B, r1
    34fe:	0e 94 3e 1a 	call	0x347c	; 0x347c <ATTINY_get_sensors>
    3502:	80 93 70 02 	sts	0x0270, r24
    3506:	85 e7       	ldi	r24, 0x75	; 117
    3508:	92 e0       	ldi	r25, 0x02	; 2
    350a:	61 e0       	ldi	r22, 0x01	; 1
    350c:	40 e0       	ldi	r20, 0x00	; 0
    350e:	22 e3       	ldi	r18, 0x32	; 50
    3510:	30 e0       	ldi	r19, 0x00	; 0
    3512:	0e 94 2d 1b 	call	0x365a	; 0x365a <TMRSRVC_new>
    3516:	81 e0       	ldi	r24, 0x01	; 1
    3518:	80 93 71 02 	sts	0x0271, r24
    351c:	90 91 70 02 	lds	r25, 0x0270
    3520:	a1 2f       	mov	r26, r17
    3522:	b0 e0       	ldi	r27, 0x00	; 0
    3524:	ed 01       	movw	r28, r26
    3526:	cf 50       	subi	r28, 0x0F	; 15
    3528:	de 4f       	sbci	r29, 0xFE	; 254
    352a:	88 81       	ld	r24, Y
    352c:	88 23       	and	r24, r24
    352e:	69 f0       	breq	.+26     	; 0x354a <ATTINY_get_SW_state+0x6c>
    3530:	fd 01       	movw	r30, r26
    3532:	ec 50       	subi	r30, 0x0C	; 12
    3534:	fe 4f       	sbci	r31, 0xFE	; 254
    3536:	80 81       	ld	r24, Z
    3538:	98 23       	and	r25, r24
    353a:	c1 f0       	breq	.+48     	; 0x356c <ATTINY_get_SW_state+0x8e>
    353c:	fd 01       	movw	r30, r26
    353e:	ee 58       	subi	r30, 0x8E	; 142
    3540:	fd 4f       	sbci	r31, 0xFD	; 253
    3542:	81 e0       	ldi	r24, 0x01	; 1
    3544:	80 83       	st	Z, r24
    3546:	18 82       	st	Y, r1
    3548:	11 c0       	rjmp	.+34     	; 0x356c <ATTINY_get_SW_state+0x8e>
    354a:	fd 01       	movw	r30, r26
    354c:	ee 58       	subi	r30, 0x8E	; 142
    354e:	fd 4f       	sbci	r31, 0xFD	; 253
    3550:	80 81       	ld	r24, Z
    3552:	81 11       	cpse	r24, r1
    3554:	10 82       	st	Z, r1
    3556:	fd 01       	movw	r30, r26
    3558:	ec 50       	subi	r30, 0x0C	; 12
    355a:	fe 4f       	sbci	r31, 0xFE	; 254
    355c:	80 81       	ld	r24, Z
    355e:	98 23       	and	r25, r24
    3560:	29 f4       	brne	.+10     	; 0x356c <ATTINY_get_SW_state+0x8e>
    3562:	fd 01       	movw	r30, r26
    3564:	ef 50       	subi	r30, 0x0F	; 15
    3566:	fe 4f       	sbci	r31, 0xFE	; 254
    3568:	81 e0       	ldi	r24, 0x01	; 1
    356a:	80 83       	st	Z, r24
    356c:	ae 58       	subi	r26, 0x8E	; 142
    356e:	bd 4f       	sbci	r27, 0xFD	; 253
    3570:	8c 91       	ld	r24, X
    3572:	df 91       	pop	r29
    3574:	cf 91       	pop	r28
    3576:	1f 91       	pop	r17
    3578:	08 95       	ret

0000357a <ATTINY_open>:
    357a:	82 e0       	ldi	r24, 0x02	; 2
    357c:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    3580:	88 23       	and	r24, r24
    3582:	19 f4       	brne	.+6      	; 0x358a <ATTINY_open+0x10>
    3584:	90 e0       	ldi	r25, 0x00	; 0
    3586:	82 e0       	ldi	r24, 0x02	; 2
    3588:	08 95       	ret
    358a:	10 92 46 05 	sts	0x0546, r1
    358e:	10 92 45 05 	sts	0x0545, r1
    3592:	10 92 48 05 	sts	0x0548, r1
    3596:	10 92 47 05 	sts	0x0547, r1
    359a:	10 92 4a 05 	sts	0x054A, r1
    359e:	10 92 49 05 	sts	0x0549, r1
    35a2:	10 92 4c 05 	sts	0x054C, r1
    35a6:	10 92 4b 05 	sts	0x054B, r1
    35aa:	10 92 4e 05 	sts	0x054E, r1
    35ae:	10 92 4d 05 	sts	0x054D, r1
    35b2:	80 e9       	ldi	r24, 0x90	; 144
    35b4:	91 e0       	ldi	r25, 0x01	; 1
    35b6:	90 93 32 05 	sts	0x0532, r25
    35ba:	80 93 31 05 	sts	0x0531, r24
    35be:	90 93 34 05 	sts	0x0534, r25
    35c2:	80 93 33 05 	sts	0x0533, r24
    35c6:	90 93 36 05 	sts	0x0536, r25
    35ca:	80 93 35 05 	sts	0x0535, r24
    35ce:	90 93 38 05 	sts	0x0538, r25
    35d2:	80 93 37 05 	sts	0x0537, r24
    35d6:	90 93 3a 05 	sts	0x053A, r25
    35da:	80 93 39 05 	sts	0x0539, r24
    35de:	84 e3       	ldi	r24, 0x34	; 52
    35e0:	98 e0       	ldi	r25, 0x08	; 8
    35e2:	90 93 3c 05 	sts	0x053C, r25
    35e6:	80 93 3b 05 	sts	0x053B, r24
    35ea:	90 93 3e 05 	sts	0x053E, r25
    35ee:	80 93 3d 05 	sts	0x053D, r24
    35f2:	90 93 40 05 	sts	0x0540, r25
    35f6:	80 93 3f 05 	sts	0x053F, r24
    35fa:	90 93 42 05 	sts	0x0542, r25
    35fe:	80 93 41 05 	sts	0x0541, r24
    3602:	90 93 44 05 	sts	0x0544, r25
    3606:	80 93 43 05 	sts	0x0543, r24
    360a:	81 e0       	ldi	r24, 0x01	; 1
    360c:	61 e0       	ldi	r22, 0x01	; 1
    360e:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    3612:	91 e0       	ldi	r25, 0x01	; 1
    3614:	81 e0       	ldi	r24, 0x01	; 1
    3616:	08 95       	ret

00003618 <TMRSRVC_delay>:
    3618:	df 93       	push	r29
    361a:	cf 93       	push	r28
    361c:	cd b7       	in	r28, 0x3d	; 61
    361e:	de b7       	in	r29, 0x3e	; 62
    3620:	29 97       	sbiw	r28, 0x09	; 9
    3622:	0f b6       	in	r0, 0x3f	; 63
    3624:	f8 94       	cli
    3626:	de bf       	out	0x3e, r29	; 62
    3628:	0f be       	out	0x3f, r0	; 63
    362a:	cd bf       	out	0x3d, r28	; 61
    362c:	9c 01       	movw	r18, r24
    362e:	ce 01       	movw	r24, r28
    3630:	01 96       	adiw	r24, 0x01	; 1
    3632:	61 e0       	ldi	r22, 0x01	; 1
    3634:	40 e0       	ldi	r20, 0x00	; 0
    3636:	0e 94 2d 1b 	call	0x365a	; 0x365a <TMRSRVC_new>
    363a:	98 2f       	mov	r25, r24
    363c:	88 23       	and	r24, r24
    363e:	19 f4       	brne	.+6      	; 0x3646 <TMRSRVC_delay+0x2e>
    3640:	8f 81       	ldd	r24, Y+7	; 0x07
    3642:	88 23       	and	r24, r24
    3644:	e9 f3       	breq	.-6      	; 0x3640 <TMRSRVC_delay+0x28>
    3646:	89 2f       	mov	r24, r25
    3648:	29 96       	adiw	r28, 0x09	; 9
    364a:	0f b6       	in	r0, 0x3f	; 63
    364c:	f8 94       	cli
    364e:	de bf       	out	0x3e, r29	; 62
    3650:	0f be       	out	0x3f, r0	; 63
    3652:	cd bf       	out	0x3d, r28	; 61
    3654:	cf 91       	pop	r28
    3656:	df 91       	pop	r29
    3658:	08 95       	ret

0000365a <TMRSRVC_new>:
    365a:	ef 92       	push	r14
    365c:	ff 92       	push	r15
    365e:	0f 93       	push	r16
    3660:	1f 93       	push	r17
    3662:	cf 93       	push	r28
    3664:	df 93       	push	r29
    3666:	ec 01       	movw	r28, r24
    3668:	f6 2e       	mov	r15, r22
    366a:	e4 2e       	mov	r14, r20
    366c:	89 01       	movw	r16, r18
    366e:	88 e0       	ldi	r24, 0x08	; 8
    3670:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    3674:	81 30       	cpi	r24, 0x01	; 1
    3676:	11 f0       	breq	.+4      	; 0x367c <TMRSRVC_new+0x22>
    3678:	81 e0       	ldi	r24, 0x01	; 1
    367a:	26 c0       	rjmp	.+76     	; 0x36c8 <TMRSRVC_new+0x6e>
    367c:	84 e0       	ldi	r24, 0x04	; 4
    367e:	90 e0       	ldi	r25, 0x00	; 0
    3680:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <malloc>
    3684:	fc 01       	movw	r30, r24
    3686:	00 97       	sbiw	r24, 0x00	; 0
    3688:	11 f4       	brne	.+4      	; 0x368e <TMRSRVC_new+0x34>
    368a:	82 e0       	ldi	r24, 0x02	; 2
    368c:	1d c0       	rjmp	.+58     	; 0x36c8 <TMRSRVC_new+0x6e>
    368e:	f9 82       	std	Y+1, r15	; 0x01
    3690:	f0 fc       	sbrc	r15, 0
    3692:	1e 82       	std	Y+6, r1	; 0x06
    3694:	81 e0       	ldi	r24, 0x01	; 1
    3696:	e8 16       	cp	r14, r24
    3698:	19 f4       	brne	.+6      	; 0x36a0 <TMRSRVC_new+0x46>
    369a:	89 81       	ldd	r24, Y+1	; 0x01
    369c:	84 60       	ori	r24, 0x04	; 4
    369e:	89 83       	std	Y+1, r24	; 0x01
    36a0:	89 81       	ldd	r24, Y+1	; 0x01
    36a2:	88 60       	ori	r24, 0x08	; 8
    36a4:	89 83       	std	Y+1, r24	; 0x01
    36a6:	1b 83       	std	Y+3, r17	; 0x03
    36a8:	0a 83       	std	Y+2, r16	; 0x02
    36aa:	1d 83       	std	Y+5, r17	; 0x05
    36ac:	0c 83       	std	Y+4, r16	; 0x04
    36ae:	d1 83       	std	Z+1, r29	; 0x01
    36b0:	c0 83       	st	Z, r28
    36b2:	13 82       	std	Z+3, r1	; 0x03
    36b4:	12 82       	std	Z+2, r1	; 0x02
    36b6:	81 e0       	ldi	r24, 0x01	; 1
    36b8:	80 93 de 02 	sts	0x02DE, r24
    36bc:	cf 01       	movw	r24, r30
    36be:	0e 94 dd 21 	call	0x43ba	; 0x43ba <TMRSRVC_insert>
    36c2:	10 92 de 02 	sts	0x02DE, r1
    36c6:	80 e0       	ldi	r24, 0x00	; 0
    36c8:	df 91       	pop	r29
    36ca:	cf 91       	pop	r28
    36cc:	1f 91       	pop	r17
    36ce:	0f 91       	pop	r16
    36d0:	ff 90       	pop	r15
    36d2:	ef 90       	pop	r14
    36d4:	08 95       	ret

000036d6 <I2C_MSTR_get>:
    36d6:	fc 01       	movw	r30, r24
    36d8:	80 91 52 05 	lds	r24, 0x0552
    36dc:	81 30       	cpi	r24, 0x01	; 1
    36de:	11 f0       	breq	.+4      	; 0x36e4 <I2C_MSTR_get+0xe>
    36e0:	85 e0       	ldi	r24, 0x05	; 5
    36e2:	08 95       	ret
    36e4:	80 91 53 05 	lds	r24, 0x0553
    36e8:	81 30       	cpi	r24, 0x01	; 1
    36ea:	11 f0       	breq	.+4      	; 0x36f0 <I2C_MSTR_get+0x1a>
    36ec:	8a e0       	ldi	r24, 0x0A	; 10
    36ee:	08 95       	ret
    36f0:	61 30       	cpi	r22, 0x01	; 1
    36f2:	11 f4       	brne	.+4      	; 0x36f8 <I2C_MSTR_get+0x22>
    36f4:	84 ec       	ldi	r24, 0xC4	; 196
    36f6:	01 c0       	rjmp	.+2      	; 0x36fa <I2C_MSTR_get+0x24>
    36f8:	84 e8       	ldi	r24, 0x84	; 132
    36fa:	80 93 bc 00 	sts	0x00BC, r24
    36fe:	80 91 bc 00 	lds	r24, 0x00BC
    3702:	87 ff       	sbrs	r24, 7
    3704:	fc cf       	rjmp	.-8      	; 0x36fe <I2C_MSTR_get+0x28>
    3706:	61 30       	cpi	r22, 0x01	; 1
    3708:	31 f4       	brne	.+12     	; 0x3716 <I2C_MSTR_get+0x40>
    370a:	80 91 b9 00 	lds	r24, 0x00B9
    370e:	88 7f       	andi	r24, 0xF8	; 248
    3710:	80 35       	cpi	r24, 0x50	; 80
    3712:	59 f4       	brne	.+22     	; 0x372a <I2C_MSTR_get+0x54>
    3714:	05 c0       	rjmp	.+10     	; 0x3720 <I2C_MSTR_get+0x4a>
    3716:	80 91 b9 00 	lds	r24, 0x00B9
    371a:	88 7f       	andi	r24, 0xF8	; 248
    371c:	88 35       	cpi	r24, 0x58	; 88
    371e:	29 f4       	brne	.+10     	; 0x372a <I2C_MSTR_get+0x54>
    3720:	80 91 bb 00 	lds	r24, 0x00BB
    3724:	80 83       	st	Z, r24
    3726:	80 e0       	ldi	r24, 0x00	; 0
    3728:	08 95       	ret
    372a:	82 e0       	ldi	r24, 0x02	; 2
    372c:	08 95       	ret

0000372e <I2C_MSTR_send>:
    372e:	98 2f       	mov	r25, r24
    3730:	80 91 52 05 	lds	r24, 0x0552
    3734:	81 30       	cpi	r24, 0x01	; 1
    3736:	11 f0       	breq	.+4      	; 0x373c <I2C_MSTR_send+0xe>
    3738:	85 e0       	ldi	r24, 0x05	; 5
    373a:	08 95       	ret
    373c:	80 91 53 05 	lds	r24, 0x0553
    3740:	81 30       	cpi	r24, 0x01	; 1
    3742:	11 f0       	breq	.+4      	; 0x3748 <I2C_MSTR_send+0x1a>
    3744:	8a e0       	ldi	r24, 0x0A	; 10
    3746:	08 95       	ret
    3748:	90 93 bb 00 	sts	0x00BB, r25
    374c:	84 e8       	ldi	r24, 0x84	; 132
    374e:	80 93 bc 00 	sts	0x00BC, r24
    3752:	80 91 bc 00 	lds	r24, 0x00BC
    3756:	87 ff       	sbrs	r24, 7
    3758:	fc cf       	rjmp	.-8      	; 0x3752 <I2C_MSTR_send+0x24>
    375a:	80 91 b9 00 	lds	r24, 0x00B9
    375e:	90 e0       	ldi	r25, 0x00	; 0
    3760:	88 7f       	andi	r24, 0xF8	; 248
    3762:	90 70       	andi	r25, 0x00	; 0
    3764:	88 32       	cpi	r24, 0x28	; 40
    3766:	91 05       	cpc	r25, r1
    3768:	21 f0       	breq	.+8      	; 0x3772 <I2C_MSTR_send+0x44>
    376a:	c0 97       	sbiw	r24, 0x30	; 48
    376c:	21 f4       	brne	.+8      	; 0x3776 <I2C_MSTR_send+0x48>
    376e:	83 e0       	ldi	r24, 0x03	; 3
    3770:	08 95       	ret
    3772:	80 e0       	ldi	r24, 0x00	; 0
    3774:	08 95       	ret
    3776:	8c e0       	ldi	r24, 0x0C	; 12
    3778:	08 95       	ret

0000377a <I2C_MSTR_start>:
    377a:	98 2f       	mov	r25, r24
    377c:	20 91 52 05 	lds	r18, 0x0552
    3780:	21 30       	cpi	r18, 0x01	; 1
    3782:	11 f0       	breq	.+4      	; 0x3788 <I2C_MSTR_start+0xe>
    3784:	85 e0       	ldi	r24, 0x05	; 5
    3786:	08 95       	ret
    3788:	80 91 54 05 	lds	r24, 0x0554
    378c:	81 30       	cpi	r24, 0x01	; 1
    378e:	11 f4       	brne	.+4      	; 0x3794 <I2C_MSTR_start+0x1a>
    3790:	89 e0       	ldi	r24, 0x09	; 9
    3792:	08 95       	ret
    3794:	20 93 53 05 	sts	0x0553, r18
    3798:	84 ea       	ldi	r24, 0xA4	; 164
    379a:	80 93 bc 00 	sts	0x00BC, r24
    379e:	80 91 bc 00 	lds	r24, 0x00BC
    37a2:	87 ff       	sbrs	r24, 7
    37a4:	fc cf       	rjmp	.-8      	; 0x379e <I2C_MSTR_start+0x24>
    37a6:	80 91 b9 00 	lds	r24, 0x00B9
    37aa:	88 7f       	andi	r24, 0xF8	; 248
    37ac:	88 30       	cpi	r24, 0x08	; 8
    37ae:	39 f0       	breq	.+14     	; 0x37be <I2C_MSTR_start+0x44>
    37b0:	80 91 b9 00 	lds	r24, 0x00B9
    37b4:	88 7f       	andi	r24, 0xF8	; 248
    37b6:	80 31       	cpi	r24, 0x10	; 16
    37b8:	11 f0       	breq	.+4      	; 0x37be <I2C_MSTR_start+0x44>
    37ba:	81 e0       	ldi	r24, 0x01	; 1
    37bc:	08 95       	ret
    37be:	61 30       	cpi	r22, 0x01	; 1
    37c0:	19 f4       	brne	.+6      	; 0x37c8 <I2C_MSTR_start+0x4e>
    37c2:	99 0f       	add	r25, r25
    37c4:	91 60       	ori	r25, 0x01	; 1
    37c6:	03 c0       	rjmp	.+6      	; 0x37ce <I2C_MSTR_start+0x54>
    37c8:	66 23       	and	r22, r22
    37ca:	19 f4       	brne	.+6      	; 0x37d2 <I2C_MSTR_start+0x58>
    37cc:	99 0f       	add	r25, r25
    37ce:	90 93 bb 00 	sts	0x00BB, r25
    37d2:	84 e8       	ldi	r24, 0x84	; 132
    37d4:	80 93 bc 00 	sts	0x00BC, r24
    37d8:	80 91 bc 00 	lds	r24, 0x00BC
    37dc:	87 ff       	sbrs	r24, 7
    37de:	fc cf       	rjmp	.-8      	; 0x37d8 <I2C_MSTR_start+0x5e>
    37e0:	61 30       	cpi	r22, 0x01	; 1
    37e2:	31 f4       	brne	.+12     	; 0x37f0 <I2C_MSTR_start+0x76>
    37e4:	80 91 b9 00 	lds	r24, 0x00B9
    37e8:	88 7f       	andi	r24, 0xF8	; 248
    37ea:	80 34       	cpi	r24, 0x40	; 64
    37ec:	41 f4       	brne	.+16     	; 0x37fe <I2C_MSTR_start+0x84>
    37ee:	09 c0       	rjmp	.+18     	; 0x3802 <I2C_MSTR_start+0x88>
    37f0:	66 23       	and	r22, r22
    37f2:	39 f4       	brne	.+14     	; 0x3802 <I2C_MSTR_start+0x88>
    37f4:	80 91 b9 00 	lds	r24, 0x00B9
    37f8:	88 7f       	andi	r24, 0xF8	; 248
    37fa:	88 31       	cpi	r24, 0x18	; 24
    37fc:	11 f0       	breq	.+4      	; 0x3802 <I2C_MSTR_start+0x88>
    37fe:	82 e0       	ldi	r24, 0x02	; 2
    3800:	08 95       	ret
    3802:	80 e0       	ldi	r24, 0x00	; 0
    3804:	08 95       	ret

00003806 <I2C_MSTR_stop>:
    3806:	80 91 53 05 	lds	r24, 0x0553
    380a:	81 30       	cpi	r24, 0x01	; 1
    380c:	11 f0       	breq	.+4      	; 0x3812 <I2C_MSTR_stop+0xc>
    380e:	8a e0       	ldi	r24, 0x0A	; 10
    3810:	08 95       	ret
    3812:	80 91 55 05 	lds	r24, 0x0555
    3816:	81 30       	cpi	r24, 0x01	; 1
    3818:	29 f4       	brne	.+10     	; 0x3824 <I2C_MSTR_stop+0x1e>
    381a:	85 e9       	ldi	r24, 0x95	; 149
    381c:	80 93 bc 00 	sts	0x00BC, r24
    3820:	80 e0       	ldi	r24, 0x00	; 0
    3822:	08 95       	ret
    3824:	84 e9       	ldi	r24, 0x94	; 148
    3826:	80 93 bc 00 	sts	0x00BC, r24
    382a:	80 e0       	ldi	r24, 0x00	; 0
    382c:	08 95       	ret

0000382e <I2C_open>:
    382e:	82 e1       	ldi	r24, 0x12	; 18
    3830:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    3834:	88 23       	and	r24, r24
    3836:	b1 f4       	brne	.+44     	; 0x3864 <I2C_open+0x36>
    3838:	10 92 52 05 	sts	0x0552, r1
    383c:	10 92 53 05 	sts	0x0553, r1
    3840:	10 92 54 05 	sts	0x0554, r1
    3844:	10 92 55 05 	sts	0x0555, r1
    3848:	10 92 56 05 	sts	0x0556, r1
    384c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <__I2C_init>
    3850:	87 e1       	ldi	r24, 0x17	; 23
    3852:	60 e0       	ldi	r22, 0x00	; 0
    3854:	0e 94 35 1c 	call	0x386a	; 0x386a <I2C_set_BRG>
    3858:	0e 94 6f 22 	call	0x44de	; 0x44de <I2C_enable>
    385c:	82 e1       	ldi	r24, 0x12	; 18
    385e:	61 e0       	ldi	r22, 0x01	; 1
    3860:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    3864:	82 e1       	ldi	r24, 0x12	; 18
    3866:	90 e0       	ldi	r25, 0x00	; 0
    3868:	08 95       	ret

0000386a <I2C_set_BRG>:
    386a:	63 70       	andi	r22, 0x03	; 3
    386c:	60 93 b9 00 	sts	0x00B9, r22
    3870:	80 93 b8 00 	sts	0x00B8, r24
    3874:	81 e0       	ldi	r24, 0x01	; 1
    3876:	80 93 52 05 	sts	0x0552, r24
    387a:	08 95       	ret

0000387c <__ADC_init>:
    387c:	8f e1       	ldi	r24, 0x1F	; 31
    387e:	80 93 7c 00 	sts	0x007C, r24
    3882:	ea e7       	ldi	r30, 0x7A	; 122
    3884:	f0 e0       	ldi	r31, 0x00	; 0
    3886:	87 e0       	ldi	r24, 0x07	; 7
    3888:	80 83       	st	Z, r24
    388a:	80 81       	ld	r24, Z
    388c:	80 68       	ori	r24, 0x80	; 128
    388e:	80 83       	st	Z, r24
    3890:	08 95       	ret

00003892 <CBOT_init>:
    3892:	0e 94 ba 21 	call	0x4374	; 0x4374 <SYS_init>
    3896:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <ATMEGA_open>
    389a:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <ISR_open>
    389e:	0e 94 46 22 	call	0x448c	; 0x448c <TMRSRVC_open>
    38a2:	0e 94 e0 1f 	call	0x3fc0	; 0x3fc0 <SPI_open>
    38a6:	0e 94 bd 1a 	call	0x357a	; 0x357a <ATTINY_open>
    38aa:	78 94       	sei
    38ac:	08 95       	ret

000038ae <CBOT_ISR_init>:
    38ae:	00 00       	nop
    38b0:	08 95       	ret

000038b2 <__vector_16>:
    38b2:	1f 92       	push	r1
    38b4:	0f 92       	push	r0
    38b6:	0f b6       	in	r0, 0x3f	; 63
    38b8:	0f 92       	push	r0
    38ba:	11 24       	eor	r1, r1
    38bc:	2f 93       	push	r18
    38be:	3f 93       	push	r19
    38c0:	4f 93       	push	r20
    38c2:	5f 93       	push	r21
    38c4:	6f 93       	push	r22
    38c6:	7f 93       	push	r23
    38c8:	8f 93       	push	r24
    38ca:	9f 93       	push	r25
    38cc:	af 93       	push	r26
    38ce:	bf 93       	push	r27
    38d0:	ef 93       	push	r30
    38d2:	ff 93       	push	r31
    38d4:	e0 91 9e 02 	lds	r30, 0x029E
    38d8:	f0 91 9f 02 	lds	r31, 0x029F
    38dc:	30 97       	sbiw	r30, 0x00	; 0
    38de:	09 f0       	breq	.+2      	; 0x38e2 <__vector_16+0x30>
    38e0:	09 95       	icall
    38e2:	ff 91       	pop	r31
    38e4:	ef 91       	pop	r30
    38e6:	bf 91       	pop	r27
    38e8:	af 91       	pop	r26
    38ea:	9f 91       	pop	r25
    38ec:	8f 91       	pop	r24
    38ee:	7f 91       	pop	r23
    38f0:	6f 91       	pop	r22
    38f2:	5f 91       	pop	r21
    38f4:	4f 91       	pop	r20
    38f6:	3f 91       	pop	r19
    38f8:	2f 91       	pop	r18
    38fa:	0f 90       	pop	r0
    38fc:	0f be       	out	0x3f, r0	; 63
    38fe:	0f 90       	pop	r0
    3900:	1f 90       	pop	r1
    3902:	18 95       	reti

00003904 <__vector_17>:
    3904:	1f 92       	push	r1
    3906:	0f 92       	push	r0
    3908:	0f b6       	in	r0, 0x3f	; 63
    390a:	0f 92       	push	r0
    390c:	11 24       	eor	r1, r1
    390e:	2f 93       	push	r18
    3910:	3f 93       	push	r19
    3912:	4f 93       	push	r20
    3914:	5f 93       	push	r21
    3916:	6f 93       	push	r22
    3918:	7f 93       	push	r23
    391a:	8f 93       	push	r24
    391c:	9f 93       	push	r25
    391e:	af 93       	push	r26
    3920:	bf 93       	push	r27
    3922:	ef 93       	push	r30
    3924:	ff 93       	push	r31
    3926:	e0 91 a0 02 	lds	r30, 0x02A0
    392a:	f0 91 a1 02 	lds	r31, 0x02A1
    392e:	30 97       	sbiw	r30, 0x00	; 0
    3930:	09 f0       	breq	.+2      	; 0x3934 <__vector_17+0x30>
    3932:	09 95       	icall
    3934:	ff 91       	pop	r31
    3936:	ef 91       	pop	r30
    3938:	bf 91       	pop	r27
    393a:	af 91       	pop	r26
    393c:	9f 91       	pop	r25
    393e:	8f 91       	pop	r24
    3940:	7f 91       	pop	r23
    3942:	6f 91       	pop	r22
    3944:	5f 91       	pop	r21
    3946:	4f 91       	pop	r20
    3948:	3f 91       	pop	r19
    394a:	2f 91       	pop	r18
    394c:	0f 90       	pop	r0
    394e:	0f be       	out	0x3f, r0	; 63
    3950:	0f 90       	pop	r0
    3952:	1f 90       	pop	r1
    3954:	18 95       	reti

00003956 <__vector_18>:
    3956:	1f 92       	push	r1
    3958:	0f 92       	push	r0
    395a:	0f b6       	in	r0, 0x3f	; 63
    395c:	0f 92       	push	r0
    395e:	11 24       	eor	r1, r1
    3960:	2f 93       	push	r18
    3962:	3f 93       	push	r19
    3964:	4f 93       	push	r20
    3966:	5f 93       	push	r21
    3968:	6f 93       	push	r22
    396a:	7f 93       	push	r23
    396c:	8f 93       	push	r24
    396e:	9f 93       	push	r25
    3970:	af 93       	push	r26
    3972:	bf 93       	push	r27
    3974:	ef 93       	push	r30
    3976:	ff 93       	push	r31
    3978:	e0 91 a2 02 	lds	r30, 0x02A2
    397c:	f0 91 a3 02 	lds	r31, 0x02A3
    3980:	30 97       	sbiw	r30, 0x00	; 0
    3982:	09 f0       	breq	.+2      	; 0x3986 <__vector_18+0x30>
    3984:	09 95       	icall
    3986:	ff 91       	pop	r31
    3988:	ef 91       	pop	r30
    398a:	bf 91       	pop	r27
    398c:	af 91       	pop	r26
    398e:	9f 91       	pop	r25
    3990:	8f 91       	pop	r24
    3992:	7f 91       	pop	r23
    3994:	6f 91       	pop	r22
    3996:	5f 91       	pop	r21
    3998:	4f 91       	pop	r20
    399a:	3f 91       	pop	r19
    399c:	2f 91       	pop	r18
    399e:	0f 90       	pop	r0
    39a0:	0f be       	out	0x3f, r0	; 63
    39a2:	0f 90       	pop	r0
    39a4:	1f 90       	pop	r1
    39a6:	18 95       	reti

000039a8 <__vector_9>:
    39a8:	1f 92       	push	r1
    39aa:	0f 92       	push	r0
    39ac:	0f b6       	in	r0, 0x3f	; 63
    39ae:	0f 92       	push	r0
    39b0:	11 24       	eor	r1, r1
    39b2:	2f 93       	push	r18
    39b4:	3f 93       	push	r19
    39b6:	4f 93       	push	r20
    39b8:	5f 93       	push	r21
    39ba:	6f 93       	push	r22
    39bc:	7f 93       	push	r23
    39be:	8f 93       	push	r24
    39c0:	9f 93       	push	r25
    39c2:	af 93       	push	r26
    39c4:	bf 93       	push	r27
    39c6:	ef 93       	push	r30
    39c8:	ff 93       	push	r31
    39ca:	e0 91 90 02 	lds	r30, 0x0290
    39ce:	f0 91 91 02 	lds	r31, 0x0291
    39d2:	30 97       	sbiw	r30, 0x00	; 0
    39d4:	09 f0       	breq	.+2      	; 0x39d8 <__vector_9+0x30>
    39d6:	09 95       	icall
    39d8:	ff 91       	pop	r31
    39da:	ef 91       	pop	r30
    39dc:	bf 91       	pop	r27
    39de:	af 91       	pop	r26
    39e0:	9f 91       	pop	r25
    39e2:	8f 91       	pop	r24
    39e4:	7f 91       	pop	r23
    39e6:	6f 91       	pop	r22
    39e8:	5f 91       	pop	r21
    39ea:	4f 91       	pop	r20
    39ec:	3f 91       	pop	r19
    39ee:	2f 91       	pop	r18
    39f0:	0f 90       	pop	r0
    39f2:	0f be       	out	0x3f, r0	; 63
    39f4:	0f 90       	pop	r0
    39f6:	1f 90       	pop	r1
    39f8:	18 95       	reti

000039fa <__vector_10>:
    39fa:	1f 92       	push	r1
    39fc:	0f 92       	push	r0
    39fe:	0f b6       	in	r0, 0x3f	; 63
    3a00:	0f 92       	push	r0
    3a02:	11 24       	eor	r1, r1
    3a04:	2f 93       	push	r18
    3a06:	3f 93       	push	r19
    3a08:	4f 93       	push	r20
    3a0a:	5f 93       	push	r21
    3a0c:	6f 93       	push	r22
    3a0e:	7f 93       	push	r23
    3a10:	8f 93       	push	r24
    3a12:	9f 93       	push	r25
    3a14:	af 93       	push	r26
    3a16:	bf 93       	push	r27
    3a18:	ef 93       	push	r30
    3a1a:	ff 93       	push	r31
    3a1c:	e0 91 92 02 	lds	r30, 0x0292
    3a20:	f0 91 93 02 	lds	r31, 0x0293
    3a24:	30 97       	sbiw	r30, 0x00	; 0
    3a26:	09 f0       	breq	.+2      	; 0x3a2a <__vector_10+0x30>
    3a28:	09 95       	icall
    3a2a:	ff 91       	pop	r31
    3a2c:	ef 91       	pop	r30
    3a2e:	bf 91       	pop	r27
    3a30:	af 91       	pop	r26
    3a32:	9f 91       	pop	r25
    3a34:	8f 91       	pop	r24
    3a36:	7f 91       	pop	r23
    3a38:	6f 91       	pop	r22
    3a3a:	5f 91       	pop	r21
    3a3c:	4f 91       	pop	r20
    3a3e:	3f 91       	pop	r19
    3a40:	2f 91       	pop	r18
    3a42:	0f 90       	pop	r0
    3a44:	0f be       	out	0x3f, r0	; 63
    3a46:	0f 90       	pop	r0
    3a48:	1f 90       	pop	r1
    3a4a:	18 95       	reti

00003a4c <__vector_11>:
    3a4c:	1f 92       	push	r1
    3a4e:	0f 92       	push	r0
    3a50:	0f b6       	in	r0, 0x3f	; 63
    3a52:	0f 92       	push	r0
    3a54:	11 24       	eor	r1, r1
    3a56:	2f 93       	push	r18
    3a58:	3f 93       	push	r19
    3a5a:	4f 93       	push	r20
    3a5c:	5f 93       	push	r21
    3a5e:	6f 93       	push	r22
    3a60:	7f 93       	push	r23
    3a62:	8f 93       	push	r24
    3a64:	9f 93       	push	r25
    3a66:	af 93       	push	r26
    3a68:	bf 93       	push	r27
    3a6a:	ef 93       	push	r30
    3a6c:	ff 93       	push	r31
    3a6e:	e0 91 94 02 	lds	r30, 0x0294
    3a72:	f0 91 95 02 	lds	r31, 0x0295
    3a76:	30 97       	sbiw	r30, 0x00	; 0
    3a78:	09 f0       	breq	.+2      	; 0x3a7c <__vector_11+0x30>
    3a7a:	09 95       	icall
    3a7c:	ff 91       	pop	r31
    3a7e:	ef 91       	pop	r30
    3a80:	bf 91       	pop	r27
    3a82:	af 91       	pop	r26
    3a84:	9f 91       	pop	r25
    3a86:	8f 91       	pop	r24
    3a88:	7f 91       	pop	r23
    3a8a:	6f 91       	pop	r22
    3a8c:	5f 91       	pop	r21
    3a8e:	4f 91       	pop	r20
    3a90:	3f 91       	pop	r19
    3a92:	2f 91       	pop	r18
    3a94:	0f 90       	pop	r0
    3a96:	0f be       	out	0x3f, r0	; 63
    3a98:	0f 90       	pop	r0
    3a9a:	1f 90       	pop	r1
    3a9c:	18 95       	reti

00003a9e <__vector_13>:
    3a9e:	1f 92       	push	r1
    3aa0:	0f 92       	push	r0
    3aa2:	0f b6       	in	r0, 0x3f	; 63
    3aa4:	0f 92       	push	r0
    3aa6:	11 24       	eor	r1, r1
    3aa8:	2f 93       	push	r18
    3aaa:	3f 93       	push	r19
    3aac:	4f 93       	push	r20
    3aae:	5f 93       	push	r21
    3ab0:	6f 93       	push	r22
    3ab2:	7f 93       	push	r23
    3ab4:	8f 93       	push	r24
    3ab6:	9f 93       	push	r25
    3ab8:	af 93       	push	r26
    3aba:	bf 93       	push	r27
    3abc:	ef 93       	push	r30
    3abe:	ff 93       	push	r31
    3ac0:	e0 91 98 02 	lds	r30, 0x0298
    3ac4:	f0 91 99 02 	lds	r31, 0x0299
    3ac8:	30 97       	sbiw	r30, 0x00	; 0
    3aca:	09 f0       	breq	.+2      	; 0x3ace <__vector_13+0x30>
    3acc:	09 95       	icall
    3ace:	ff 91       	pop	r31
    3ad0:	ef 91       	pop	r30
    3ad2:	bf 91       	pop	r27
    3ad4:	af 91       	pop	r26
    3ad6:	9f 91       	pop	r25
    3ad8:	8f 91       	pop	r24
    3ada:	7f 91       	pop	r23
    3adc:	6f 91       	pop	r22
    3ade:	5f 91       	pop	r21
    3ae0:	4f 91       	pop	r20
    3ae2:	3f 91       	pop	r19
    3ae4:	2f 91       	pop	r18
    3ae6:	0f 90       	pop	r0
    3ae8:	0f be       	out	0x3f, r0	; 63
    3aea:	0f 90       	pop	r0
    3aec:	1f 90       	pop	r1
    3aee:	18 95       	reti

00003af0 <__vector_14>:
    3af0:	1f 92       	push	r1
    3af2:	0f 92       	push	r0
    3af4:	0f b6       	in	r0, 0x3f	; 63
    3af6:	0f 92       	push	r0
    3af8:	11 24       	eor	r1, r1
    3afa:	2f 93       	push	r18
    3afc:	3f 93       	push	r19
    3afe:	4f 93       	push	r20
    3b00:	5f 93       	push	r21
    3b02:	6f 93       	push	r22
    3b04:	7f 93       	push	r23
    3b06:	8f 93       	push	r24
    3b08:	9f 93       	push	r25
    3b0a:	af 93       	push	r26
    3b0c:	bf 93       	push	r27
    3b0e:	ef 93       	push	r30
    3b10:	ff 93       	push	r31
    3b12:	e0 91 9a 02 	lds	r30, 0x029A
    3b16:	f0 91 9b 02 	lds	r31, 0x029B
    3b1a:	30 97       	sbiw	r30, 0x00	; 0
    3b1c:	09 f0       	breq	.+2      	; 0x3b20 <__vector_14+0x30>
    3b1e:	09 95       	icall
    3b20:	ff 91       	pop	r31
    3b22:	ef 91       	pop	r30
    3b24:	bf 91       	pop	r27
    3b26:	af 91       	pop	r26
    3b28:	9f 91       	pop	r25
    3b2a:	8f 91       	pop	r24
    3b2c:	7f 91       	pop	r23
    3b2e:	6f 91       	pop	r22
    3b30:	5f 91       	pop	r21
    3b32:	4f 91       	pop	r20
    3b34:	3f 91       	pop	r19
    3b36:	2f 91       	pop	r18
    3b38:	0f 90       	pop	r0
    3b3a:	0f be       	out	0x3f, r0	; 63
    3b3c:	0f 90       	pop	r0
    3b3e:	1f 90       	pop	r1
    3b40:	18 95       	reti

00003b42 <__vector_12>:
    3b42:	1f 92       	push	r1
    3b44:	0f 92       	push	r0
    3b46:	0f b6       	in	r0, 0x3f	; 63
    3b48:	0f 92       	push	r0
    3b4a:	11 24       	eor	r1, r1
    3b4c:	2f 93       	push	r18
    3b4e:	3f 93       	push	r19
    3b50:	4f 93       	push	r20
    3b52:	5f 93       	push	r21
    3b54:	6f 93       	push	r22
    3b56:	7f 93       	push	r23
    3b58:	8f 93       	push	r24
    3b5a:	9f 93       	push	r25
    3b5c:	af 93       	push	r26
    3b5e:	bf 93       	push	r27
    3b60:	ef 93       	push	r30
    3b62:	ff 93       	push	r31
    3b64:	e0 91 96 02 	lds	r30, 0x0296
    3b68:	f0 91 97 02 	lds	r31, 0x0297
    3b6c:	30 97       	sbiw	r30, 0x00	; 0
    3b6e:	09 f0       	breq	.+2      	; 0x3b72 <__vector_12+0x30>
    3b70:	09 95       	icall
    3b72:	ff 91       	pop	r31
    3b74:	ef 91       	pop	r30
    3b76:	bf 91       	pop	r27
    3b78:	af 91       	pop	r26
    3b7a:	9f 91       	pop	r25
    3b7c:	8f 91       	pop	r24
    3b7e:	7f 91       	pop	r23
    3b80:	6f 91       	pop	r22
    3b82:	5f 91       	pop	r21
    3b84:	4f 91       	pop	r20
    3b86:	3f 91       	pop	r19
    3b88:	2f 91       	pop	r18
    3b8a:	0f 90       	pop	r0
    3b8c:	0f be       	out	0x3f, r0	; 63
    3b8e:	0f 90       	pop	r0
    3b90:	1f 90       	pop	r1
    3b92:	18 95       	reti

00003b94 <__vector_15>:
    3b94:	1f 92       	push	r1
    3b96:	0f 92       	push	r0
    3b98:	0f b6       	in	r0, 0x3f	; 63
    3b9a:	0f 92       	push	r0
    3b9c:	11 24       	eor	r1, r1
    3b9e:	2f 93       	push	r18
    3ba0:	3f 93       	push	r19
    3ba2:	4f 93       	push	r20
    3ba4:	5f 93       	push	r21
    3ba6:	6f 93       	push	r22
    3ba8:	7f 93       	push	r23
    3baa:	8f 93       	push	r24
    3bac:	9f 93       	push	r25
    3bae:	af 93       	push	r26
    3bb0:	bf 93       	push	r27
    3bb2:	ef 93       	push	r30
    3bb4:	ff 93       	push	r31
    3bb6:	e0 91 9c 02 	lds	r30, 0x029C
    3bba:	f0 91 9d 02 	lds	r31, 0x029D
    3bbe:	30 97       	sbiw	r30, 0x00	; 0
    3bc0:	09 f0       	breq	.+2      	; 0x3bc4 <__vector_15+0x30>
    3bc2:	09 95       	icall
    3bc4:	ff 91       	pop	r31
    3bc6:	ef 91       	pop	r30
    3bc8:	bf 91       	pop	r27
    3bca:	af 91       	pop	r26
    3bcc:	9f 91       	pop	r25
    3bce:	8f 91       	pop	r24
    3bd0:	7f 91       	pop	r23
    3bd2:	6f 91       	pop	r22
    3bd4:	5f 91       	pop	r21
    3bd6:	4f 91       	pop	r20
    3bd8:	3f 91       	pop	r19
    3bda:	2f 91       	pop	r18
    3bdc:	0f 90       	pop	r0
    3bde:	0f be       	out	0x3f, r0	; 63
    3be0:	0f 90       	pop	r0
    3be2:	1f 90       	pop	r1
    3be4:	18 95       	reti

00003be6 <__vector_4>:
    3be6:	1f 92       	push	r1
    3be8:	0f 92       	push	r0
    3bea:	0f b6       	in	r0, 0x3f	; 63
    3bec:	0f 92       	push	r0
    3bee:	11 24       	eor	r1, r1
    3bf0:	2f 93       	push	r18
    3bf2:	3f 93       	push	r19
    3bf4:	4f 93       	push	r20
    3bf6:	5f 93       	push	r21
    3bf8:	6f 93       	push	r22
    3bfa:	7f 93       	push	r23
    3bfc:	8f 93       	push	r24
    3bfe:	9f 93       	push	r25
    3c00:	af 93       	push	r26
    3c02:	bf 93       	push	r27
    3c04:	ef 93       	push	r30
    3c06:	ff 93       	push	r31
    3c08:	e0 91 86 02 	lds	r30, 0x0286
    3c0c:	f0 91 87 02 	lds	r31, 0x0287
    3c10:	30 97       	sbiw	r30, 0x00	; 0
    3c12:	09 f0       	breq	.+2      	; 0x3c16 <__vector_4+0x30>
    3c14:	09 95       	icall
    3c16:	ff 91       	pop	r31
    3c18:	ef 91       	pop	r30
    3c1a:	bf 91       	pop	r27
    3c1c:	af 91       	pop	r26
    3c1e:	9f 91       	pop	r25
    3c20:	8f 91       	pop	r24
    3c22:	7f 91       	pop	r23
    3c24:	6f 91       	pop	r22
    3c26:	5f 91       	pop	r21
    3c28:	4f 91       	pop	r20
    3c2a:	3f 91       	pop	r19
    3c2c:	2f 91       	pop	r18
    3c2e:	0f 90       	pop	r0
    3c30:	0f be       	out	0x3f, r0	; 63
    3c32:	0f 90       	pop	r0
    3c34:	1f 90       	pop	r1
    3c36:	18 95       	reti

00003c38 <__vector_5>:
    3c38:	1f 92       	push	r1
    3c3a:	0f 92       	push	r0
    3c3c:	0f b6       	in	r0, 0x3f	; 63
    3c3e:	0f 92       	push	r0
    3c40:	11 24       	eor	r1, r1
    3c42:	2f 93       	push	r18
    3c44:	3f 93       	push	r19
    3c46:	4f 93       	push	r20
    3c48:	5f 93       	push	r21
    3c4a:	6f 93       	push	r22
    3c4c:	7f 93       	push	r23
    3c4e:	8f 93       	push	r24
    3c50:	9f 93       	push	r25
    3c52:	af 93       	push	r26
    3c54:	bf 93       	push	r27
    3c56:	ef 93       	push	r30
    3c58:	ff 93       	push	r31
    3c5a:	e0 91 88 02 	lds	r30, 0x0288
    3c5e:	f0 91 89 02 	lds	r31, 0x0289
    3c62:	30 97       	sbiw	r30, 0x00	; 0
    3c64:	09 f0       	breq	.+2      	; 0x3c68 <__vector_5+0x30>
    3c66:	09 95       	icall
    3c68:	ff 91       	pop	r31
    3c6a:	ef 91       	pop	r30
    3c6c:	bf 91       	pop	r27
    3c6e:	af 91       	pop	r26
    3c70:	9f 91       	pop	r25
    3c72:	8f 91       	pop	r24
    3c74:	7f 91       	pop	r23
    3c76:	6f 91       	pop	r22
    3c78:	5f 91       	pop	r21
    3c7a:	4f 91       	pop	r20
    3c7c:	3f 91       	pop	r19
    3c7e:	2f 91       	pop	r18
    3c80:	0f 90       	pop	r0
    3c82:	0f be       	out	0x3f, r0	; 63
    3c84:	0f 90       	pop	r0
    3c86:	1f 90       	pop	r1
    3c88:	18 95       	reti

00003c8a <__vector_6>:
    3c8a:	1f 92       	push	r1
    3c8c:	0f 92       	push	r0
    3c8e:	0f b6       	in	r0, 0x3f	; 63
    3c90:	0f 92       	push	r0
    3c92:	11 24       	eor	r1, r1
    3c94:	2f 93       	push	r18
    3c96:	3f 93       	push	r19
    3c98:	4f 93       	push	r20
    3c9a:	5f 93       	push	r21
    3c9c:	6f 93       	push	r22
    3c9e:	7f 93       	push	r23
    3ca0:	8f 93       	push	r24
    3ca2:	9f 93       	push	r25
    3ca4:	af 93       	push	r26
    3ca6:	bf 93       	push	r27
    3ca8:	ef 93       	push	r30
    3caa:	ff 93       	push	r31
    3cac:	e0 91 8a 02 	lds	r30, 0x028A
    3cb0:	f0 91 8b 02 	lds	r31, 0x028B
    3cb4:	30 97       	sbiw	r30, 0x00	; 0
    3cb6:	09 f0       	breq	.+2      	; 0x3cba <__vector_6+0x30>
    3cb8:	09 95       	icall
    3cba:	ff 91       	pop	r31
    3cbc:	ef 91       	pop	r30
    3cbe:	bf 91       	pop	r27
    3cc0:	af 91       	pop	r26
    3cc2:	9f 91       	pop	r25
    3cc4:	8f 91       	pop	r24
    3cc6:	7f 91       	pop	r23
    3cc8:	6f 91       	pop	r22
    3cca:	5f 91       	pop	r21
    3ccc:	4f 91       	pop	r20
    3cce:	3f 91       	pop	r19
    3cd0:	2f 91       	pop	r18
    3cd2:	0f 90       	pop	r0
    3cd4:	0f be       	out	0x3f, r0	; 63
    3cd6:	0f 90       	pop	r0
    3cd8:	1f 90       	pop	r1
    3cda:	18 95       	reti

00003cdc <__vector_7>:
    3cdc:	1f 92       	push	r1
    3cde:	0f 92       	push	r0
    3ce0:	0f b6       	in	r0, 0x3f	; 63
    3ce2:	0f 92       	push	r0
    3ce4:	11 24       	eor	r1, r1
    3ce6:	2f 93       	push	r18
    3ce8:	3f 93       	push	r19
    3cea:	4f 93       	push	r20
    3cec:	5f 93       	push	r21
    3cee:	6f 93       	push	r22
    3cf0:	7f 93       	push	r23
    3cf2:	8f 93       	push	r24
    3cf4:	9f 93       	push	r25
    3cf6:	af 93       	push	r26
    3cf8:	bf 93       	push	r27
    3cfa:	ef 93       	push	r30
    3cfc:	ff 93       	push	r31
    3cfe:	e0 91 8c 02 	lds	r30, 0x028C
    3d02:	f0 91 8d 02 	lds	r31, 0x028D
    3d06:	30 97       	sbiw	r30, 0x00	; 0
    3d08:	09 f0       	breq	.+2      	; 0x3d0c <__vector_7+0x30>
    3d0a:	09 95       	icall
    3d0c:	ff 91       	pop	r31
    3d0e:	ef 91       	pop	r30
    3d10:	bf 91       	pop	r27
    3d12:	af 91       	pop	r26
    3d14:	9f 91       	pop	r25
    3d16:	8f 91       	pop	r24
    3d18:	7f 91       	pop	r23
    3d1a:	6f 91       	pop	r22
    3d1c:	5f 91       	pop	r21
    3d1e:	4f 91       	pop	r20
    3d20:	3f 91       	pop	r19
    3d22:	2f 91       	pop	r18
    3d24:	0f 90       	pop	r0
    3d26:	0f be       	out	0x3f, r0	; 63
    3d28:	0f 90       	pop	r0
    3d2a:	1f 90       	pop	r1
    3d2c:	18 95       	reti

00003d2e <ISR_attach>:
    3d2e:	e8 2f       	mov	r30, r24
    3d30:	80 32       	cpi	r24, 0x20	; 32
    3d32:	68 f4       	brcc	.+26     	; 0x3d4e <ISR_attach+0x20>
    3d34:	80 51       	subi	r24, 0x10	; 16
    3d36:	83 30       	cpi	r24, 0x03	; 3
    3d38:	50 f0       	brcs	.+20     	; 0x3d4e <ISR_attach+0x20>
    3d3a:	f0 e0       	ldi	r31, 0x00	; 0
    3d3c:	ee 0f       	add	r30, r30
    3d3e:	ff 1f       	adc	r31, r31
    3d40:	e2 58       	subi	r30, 0x82	; 130
    3d42:	fd 4f       	sbci	r31, 0xFD	; 253
    3d44:	20 81       	ld	r18, Z
    3d46:	31 81       	ldd	r19, Z+1	; 0x01
    3d48:	71 83       	std	Z+1, r23	; 0x01
    3d4a:	60 83       	st	Z, r22
    3d4c:	02 c0       	rjmp	.+4      	; 0x3d52 <ISR_attach+0x24>
    3d4e:	20 e0       	ldi	r18, 0x00	; 0
    3d50:	30 e0       	ldi	r19, 0x00	; 0
    3d52:	c9 01       	movw	r24, r18
    3d54:	08 95       	ret

00003d56 <ISR_open>:
    3d56:	80 e1       	ldi	r24, 0x10	; 16
    3d58:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    3d5c:	88 23       	and	r24, r24
    3d5e:	61 f4       	brne	.+24     	; 0x3d78 <ISR_open+0x22>
    3d60:	ee e7       	ldi	r30, 0x7E	; 126
    3d62:	f2 e0       	ldi	r31, 0x02	; 2
    3d64:	11 92       	st	Z+, r1
    3d66:	11 92       	st	Z+, r1
    3d68:	82 e0       	ldi	r24, 0x02	; 2
    3d6a:	ee 3b       	cpi	r30, 0xBE	; 190
    3d6c:	f8 07       	cpc	r31, r24
    3d6e:	d1 f7       	brne	.-12     	; 0x3d64 <ISR_open+0xe>
    3d70:	80 e1       	ldi	r24, 0x10	; 16
    3d72:	61 e0       	ldi	r22, 0x01	; 1
    3d74:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    3d78:	80 e1       	ldi	r24, 0x10	; 16
    3d7a:	91 e0       	ldi	r25, 0x01	; 1
    3d7c:	08 95       	ret

00003d7e <__LCD_init>:
    3d7e:	23 9a       	sbi	0x04, 3	; 4
    3d80:	08 95       	ret

00003d82 <__LCD_putchar>:
    3d82:	ff 92       	push	r15
    3d84:	0f 93       	push	r16
    3d86:	1f 93       	push	r17
    3d88:	cf 93       	push	r28
    3d8a:	df 93       	push	r29
    3d8c:	f8 2e       	mov	r15, r24
    3d8e:	8a e0       	ldi	r24, 0x0A	; 10
    3d90:	f8 16       	cp	r15, r24
    3d92:	b1 f0       	breq	.+44     	; 0x3dc0 <__LCD_putchar+0x3e>
    3d94:	8f 15       	cp	r24, r15
    3d96:	48 f0       	brcs	.+18     	; 0x3daa <__LCD_putchar+0x28>
    3d98:	e8 e0       	ldi	r30, 0x08	; 8
    3d9a:	fe 16       	cp	r15, r30
    3d9c:	b9 f1       	breq	.+110    	; 0x3e0c <__LCD_putchar+0x8a>
    3d9e:	ef 15       	cp	r30, r15
    3da0:	38 f1       	brcs	.+78     	; 0x3df0 <__LCD_putchar+0x6e>
    3da2:	f7 e0       	ldi	r31, 0x07	; 7
    3da4:	ff 16       	cp	r15, r31
    3da6:	51 f4       	brne	.+20     	; 0x3dbc <__LCD_putchar+0x3a>
    3da8:	3b c0       	rjmp	.+118    	; 0x3e20 <__LCD_putchar+0x9e>
    3daa:	8d e0       	ldi	r24, 0x0D	; 13
    3dac:	f8 16       	cp	r15, r24
    3dae:	59 f0       	breq	.+22     	; 0x3dc6 <__LCD_putchar+0x44>
    3db0:	eb e1       	ldi	r30, 0x1B	; 27
    3db2:	fe 16       	cp	r15, r30
    3db4:	89 f0       	breq	.+34     	; 0x3dd8 <__LCD_putchar+0x56>
    3db6:	fc e0       	ldi	r31, 0x0C	; 12
    3db8:	ff 16       	cp	r15, r31
    3dba:	41 f0       	breq	.+16     	; 0x3dcc <__LCD_putchar+0x4a>
    3dbc:	01 e0       	ldi	r16, 0x01	; 1
    3dbe:	41 c0       	rjmp	.+130    	; 0x3e42 <__LCD_putchar+0xc0>
    3dc0:	10 92 2b 05 	sts	0x052B, r1
    3dc4:	03 c0       	rjmp	.+6      	; 0x3dcc <__LCD_putchar+0x4a>
    3dc6:	10 92 2b 05 	sts	0x052B, r1
    3dca:	3a c0       	rjmp	.+116    	; 0x3e40 <__LCD_putchar+0xbe>
    3dcc:	80 91 2c 05 	lds	r24, 0x052C
    3dd0:	81 50       	subi	r24, 0x01	; 1
    3dd2:	80 93 2c 05 	sts	0x052C, r24
    3dd6:	34 c0       	rjmp	.+104    	; 0x3e40 <__LCD_putchar+0xbe>
    3dd8:	0e 94 71 14 	call	0x28e2	; 0x28e2 <LCD_clear>
    3ddc:	14 c0       	rjmp	.+40     	; 0x3e06 <__LCD_putchar+0x84>
    3dde:	80 e0       	ldi	r24, 0x00	; 0
    3de0:	61 e0       	ldi	r22, 0x01	; 1
    3de2:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    3de6:	80 91 2b 05 	lds	r24, 0x052B
    3dea:	8f 5f       	subi	r24, 0xFF	; 255
    3dec:	80 93 2b 05 	sts	0x052B, r24
    3df0:	80 91 2b 05 	lds	r24, 0x052B
    3df4:	87 ff       	sbrs	r24, 7
    3df6:	f3 cf       	rjmp	.-26     	; 0x3dde <__LCD_putchar+0x5c>
    3df8:	10 92 2b 05 	sts	0x052B, r1
    3dfc:	80 91 2c 05 	lds	r24, 0x052C
    3e00:	81 50       	subi	r24, 0x01	; 1
    3e02:	80 93 2c 05 	sts	0x052C, r24
    3e06:	00 e0       	ldi	r16, 0x00	; 0
    3e08:	11 e0       	ldi	r17, 0x01	; 1
    3e0a:	1c c0       	rjmp	.+56     	; 0x3e44 <__LCD_putchar+0xc2>
    3e0c:	80 91 2b 05 	lds	r24, 0x052B
    3e10:	88 23       	and	r24, r24
    3e12:	b1 f0       	breq	.+44     	; 0x3e40 <__LCD_putchar+0xbe>
    3e14:	80 91 2b 05 	lds	r24, 0x052B
    3e18:	86 50       	subi	r24, 0x06	; 6
    3e1a:	80 93 2b 05 	sts	0x052B, r24
    3e1e:	10 c0       	rjmp	.+32     	; 0x3e40 <__LCD_putchar+0xbe>
    3e20:	81 e0       	ldi	r24, 0x01	; 1
    3e22:	0e 94 7d 16 	call	0x2cfa	; 0x2cfa <SPKR_open>
    3e26:	64 ef       	ldi	r22, 0xF4	; 244
    3e28:	71 e0       	ldi	r23, 0x01	; 1
    3e2a:	80 e0       	ldi	r24, 0x00	; 0
    3e2c:	90 e0       	ldi	r25, 0x00	; 0
    3e2e:	4d e7       	ldi	r20, 0x7D	; 125
    3e30:	50 e0       	ldi	r21, 0x00	; 0
    3e32:	24 e6       	ldi	r18, 0x64	; 100
    3e34:	30 e0       	ldi	r19, 0x00	; 0
    3e36:	0e 94 db 20 	call	0x41b6	; 0x41b6 <SPKR_play_beep>
    3e3a:	81 e0       	ldi	r24, 0x01	; 1
    3e3c:	0e 94 a7 20 	call	0x414e	; 0x414e <SPKR_close>
    3e40:	00 e0       	ldi	r16, 0x00	; 0
    3e42:	10 e0       	ldi	r17, 0x00	; 0
    3e44:	80 91 2c 05 	lds	r24, 0x052C
    3e48:	60 91 2b 05 	lds	r22, 0x052B
    3e4c:	0e 94 37 15 	call	0x2a6e	; 0x2a6e <LCD_set_PGC_addr>
    3e50:	00 23       	and	r16, r16
    3e52:	51 f1       	breq	.+84     	; 0x3ea8 <__LCD_putchar+0x126>
    3e54:	85 e0       	ldi	r24, 0x05	; 5
    3e56:	f8 9e       	mul	r15, r24
    3e58:	c0 01       	movw	r24, r0
    3e5a:	11 24       	eor	r1, r1
    3e5c:	ec 01       	movw	r28, r24
    3e5e:	c3 55       	subi	r28, 0x53	; 83
    3e60:	df 4f       	sbci	r29, 0xFF	; 255
    3e62:	8c 01       	movw	r16, r24
    3e64:	0e 54       	subi	r16, 0x4E	; 78
    3e66:	1f 4f       	sbci	r17, 0xFF	; 255
    3e68:	fe 01       	movw	r30, r28
    3e6a:	84 91       	lpm	r24, Z+
    3e6c:	61 e0       	ldi	r22, 0x01	; 1
    3e6e:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    3e72:	21 96       	adiw	r28, 0x01	; 1
    3e74:	c0 17       	cp	r28, r16
    3e76:	d1 07       	cpc	r29, r17
    3e78:	b9 f7       	brne	.-18     	; 0x3e68 <__LCD_putchar+0xe6>
    3e7a:	80 e0       	ldi	r24, 0x00	; 0
    3e7c:	61 e0       	ldi	r22, 0x01	; 1
    3e7e:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <LCD_write>
    3e82:	80 91 2b 05 	lds	r24, 0x052B
    3e86:	8a 5f       	subi	r24, 0xFA	; 250
    3e88:	80 93 2b 05 	sts	0x052B, r24
    3e8c:	80 91 2b 05 	lds	r24, 0x052B
    3e90:	90 e0       	ldi	r25, 0x00	; 0
    3e92:	8c 37       	cpi	r24, 0x7C	; 124
    3e94:	91 05       	cpc	r25, r1
    3e96:	3c f0       	brlt	.+14     	; 0x3ea6 <__LCD_putchar+0x124>
    3e98:	10 92 2b 05 	sts	0x052B, r1
    3e9c:	80 91 2c 05 	lds	r24, 0x052C
    3ea0:	81 50       	subi	r24, 0x01	; 1
    3ea2:	80 93 2c 05 	sts	0x052C, r24
    3ea6:	11 e0       	ldi	r17, 0x01	; 1
    3ea8:	80 91 2c 05 	lds	r24, 0x052C
    3eac:	83 70       	andi	r24, 0x03	; 3
    3eae:	80 93 2c 05 	sts	0x052C, r24
    3eb2:	11 30       	cpi	r17, 0x01	; 1
    3eb4:	59 f4       	brne	.+22     	; 0x3ecc <__LCD_putchar+0x14a>
    3eb6:	80 91 2d 05 	lds	r24, 0x052D
    3eba:	81 30       	cpi	r24, 0x01	; 1
    3ebc:	39 f4       	brne	.+14     	; 0x3ecc <__LCD_putchar+0x14a>
    3ebe:	e0 91 2e 05 	lds	r30, 0x052E
    3ec2:	f0 91 2f 05 	lds	r31, 0x052F
    3ec6:	30 97       	sbiw	r30, 0x00	; 0
    3ec8:	09 f0       	breq	.+2      	; 0x3ecc <__LCD_putchar+0x14a>
    3eca:	09 95       	icall
    3ecc:	80 e0       	ldi	r24, 0x00	; 0
    3ece:	90 e0       	ldi	r25, 0x00	; 0
    3ed0:	df 91       	pop	r29
    3ed2:	cf 91       	pop	r28
    3ed4:	1f 91       	pop	r17
    3ed6:	0f 91       	pop	r16
    3ed8:	ff 90       	pop	r15
    3eda:	08 95       	ret

00003edc <__LED_clr_pattern>:
    3edc:	85 fd       	sbrc	r24, 5
    3ede:	5d 98       	cbi	0x0b, 5	; 11
    3ee0:	86 fd       	sbrc	r24, 6
    3ee2:	5e 98       	cbi	0x0b, 6	; 11
    3ee4:	08 95       	ret

00003ee6 <__LED_init>:
    3ee6:	55 9a       	sbi	0x0a, 5	; 10
    3ee8:	56 9a       	sbi	0x0a, 6	; 10
    3eea:	08 95       	ret

00003eec <__LED_set_pattern>:
    3eec:	85 fd       	sbrc	r24, 5
    3eee:	5d 9a       	sbi	0x0b, 5	; 11
    3ef0:	86 fd       	sbrc	r24, 6
    3ef2:	5e 9a       	sbi	0x0b, 6	; 11
    3ef4:	08 95       	ret

00003ef6 <ATMEGA_open>:
    3ef6:	80 e0       	ldi	r24, 0x00	; 0
    3ef8:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    3efc:	88 23       	and	r24, r24
    3efe:	51 f4       	brne	.+20     	; 0x3f14 <ATMEGA_open+0x1e>
    3f00:	f8 94       	cli
    3f02:	0e 94 8d 22 	call	0x451a	; 0x451a <__ATMEGA_init>
    3f06:	81 e0       	ldi	r24, 0x01	; 1
    3f08:	0e 94 8d 1f 	call	0x3f1a	; 0x3f1a <ATMEGA_set_clk_mode>
    3f0c:	80 e0       	ldi	r24, 0x00	; 0
    3f0e:	61 e0       	ldi	r22, 0x01	; 1
    3f10:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    3f14:	80 e0       	ldi	r24, 0x00	; 0
    3f16:	91 e0       	ldi	r25, 0x01	; 1
    3f18:	08 95       	ret

00003f1a <ATMEGA_set_clk_mode>:
    3f1a:	81 30       	cpi	r24, 0x01	; 1
    3f1c:	49 f0       	breq	.+18     	; 0x3f30 <ATMEGA_set_clk_mode+0x16>
    3f1e:	f8 94       	cli
    3f20:	81 30       	cpi	r24, 0x01	; 1
    3f22:	20 f1       	brcs	.+72     	; 0x3f6c <ATMEGA_set_clk_mode+0x52>
    3f24:	82 30       	cpi	r24, 0x02	; 2
    3f26:	b1 f0       	breq	.+44     	; 0x3f54 <ATMEGA_set_clk_mode+0x3a>
    3f28:	83 30       	cpi	r24, 0x03	; 3
    3f2a:	09 f0       	breq	.+2      	; 0x3f2e <ATMEGA_set_clk_mode+0x14>
    3f2c:	45 c0       	rjmp	.+138    	; 0x3fb8 <ATMEGA_set_clk_mode+0x9e>
    3f2e:	17 c0       	rjmp	.+46     	; 0x3f5e <ATMEGA_set_clk_mode+0x44>
    3f30:	2c 9a       	sbi	0x05, 4	; 5
    3f32:	80 e8       	ldi	r24, 0x80	; 128
    3f34:	80 93 61 00 	sts	0x0061, r24
    3f38:	10 92 61 00 	sts	0x0061, r1
    3f3c:	80 e0       	ldi	r24, 0x00	; 0
    3f3e:	90 e0       	ldi	r25, 0x00	; 0
    3f40:	00 00       	nop
    3f42:	01 96       	adiw	r24, 0x01	; 1
    3f44:	88 32       	cpi	r24, 0x28	; 40
    3f46:	91 05       	cpc	r25, r1
    3f48:	d9 f7       	brne	.-10     	; 0x3f40 <ATMEGA_set_clk_mode+0x26>
    3f4a:	10 92 68 00 	sts	0x0068, r1
    3f4e:	10 92 6b 00 	sts	0x006B, r1
    3f52:	08 95       	ret
    3f54:	80 e8       	ldi	r24, 0x80	; 128
    3f56:	80 93 61 00 	sts	0x0061, r24
    3f5a:	83 e0       	ldi	r24, 0x03	; 3
    3f5c:	04 c0       	rjmp	.+8      	; 0x3f66 <ATMEGA_set_clk_mode+0x4c>
    3f5e:	80 e8       	ldi	r24, 0x80	; 128
    3f60:	80 93 61 00 	sts	0x0061, r24
    3f64:	88 e0       	ldi	r24, 0x08	; 8
    3f66:	80 93 61 00 	sts	0x0061, r24
    3f6a:	28 c0       	rjmp	.+80     	; 0x3fbc <ATMEGA_set_clk_mode+0xa2>
    3f6c:	80 e0       	ldi	r24, 0x00	; 0
    3f6e:	90 e0       	ldi	r25, 0x00	; 0
    3f70:	00 00       	nop
    3f72:	01 96       	adiw	r24, 0x01	; 1
    3f74:	2d e6       	ldi	r18, 0x6D	; 109
    3f76:	80 36       	cpi	r24, 0x60	; 96
    3f78:	92 07       	cpc	r25, r18
    3f7a:	d1 f7       	brne	.-12     	; 0x3f70 <ATMEGA_set_clk_mode+0x56>
    3f7c:	2c 98       	cbi	0x05, 4	; 5
    3f7e:	80 e0       	ldi	r24, 0x00	; 0
    3f80:	90 e0       	ldi	r25, 0x00	; 0
    3f82:	00 00       	nop
    3f84:	01 96       	adiw	r24, 0x01	; 1
    3f86:	2d e6       	ldi	r18, 0x6D	; 109
    3f88:	80 36       	cpi	r24, 0x60	; 96
    3f8a:	92 07       	cpc	r25, r18
    3f8c:	d1 f7       	brne	.-12     	; 0x3f82 <ATMEGA_set_clk_mode+0x68>
    3f8e:	10 92 7a 00 	sts	0x007A, r1
    3f92:	8f ef       	ldi	r24, 0xFF	; 255
    3f94:	80 93 64 00 	sts	0x0064, r24
    3f98:	80 91 68 00 	lds	r24, 0x0068
    3f9c:	81 60       	ori	r24, 0x01	; 1
    3f9e:	80 93 68 00 	sts	0x0068, r24
    3fa2:	80 91 6b 00 	lds	r24, 0x006B
    3fa6:	84 60       	ori	r24, 0x04	; 4
    3fa8:	80 93 6b 00 	sts	0x006B, r24
    3fac:	78 94       	sei
    3fae:	83 b7       	in	r24, 0x33	; 51
    3fb0:	81 60       	ori	r24, 0x01	; 1
    3fb2:	83 bf       	out	0x33, r24	; 51
    3fb4:	88 95       	sleep
    3fb6:	08 95       	ret
    3fb8:	82 30       	cpi	r24, 0x02	; 2
    3fba:	08 f0       	brcs	.+2      	; 0x3fbe <ATMEGA_set_clk_mode+0xa4>
    3fbc:	78 94       	sei
    3fbe:	08 95       	ret

00003fc0 <SPI_open>:
    3fc0:	0f 93       	push	r16
    3fc2:	1f 93       	push	r17
    3fc4:	0e 94 b9 22 	call	0x4572	; 0x4572 <__SPI_init>
    3fc8:	80 e0       	ldi	r24, 0x00	; 0
    3fca:	68 ea       	ldi	r22, 0xA8	; 168
    3fcc:	72 e2       	ldi	r23, 0x22	; 34
    3fce:	0e 94 2b 20 	call	0x4056	; 0x4056 <SPI_set_config_func>
    3fd2:	81 e0       	ldi	r24, 0x01	; 1
    3fd4:	60 ea       	ldi	r22, 0xA0	; 160
    3fd6:	72 e2       	ldi	r23, 0x22	; 34
    3fd8:	0e 94 2b 20 	call	0x4056	; 0x4056 <SPI_set_config_func>
    3fdc:	82 e0       	ldi	r24, 0x02	; 2
    3fde:	68 e9       	ldi	r22, 0x98	; 152
    3fe0:	72 e2       	ldi	r23, 0x22	; 34
    3fe2:	0e 94 2b 20 	call	0x4056	; 0x4056 <SPI_set_config_func>
    3fe6:	86 e0       	ldi	r24, 0x06	; 6
    3fe8:	60 eb       	ldi	r22, 0xB0	; 176
    3fea:	72 e2       	ldi	r23, 0x22	; 34
    3fec:	0e 94 2b 20 	call	0x4056	; 0x4056 <SPI_set_config_func>
    3ff0:	00 e9       	ldi	r16, 0x90	; 144
    3ff2:	12 e2       	ldi	r17, 0x22	; 34
    3ff4:	83 e0       	ldi	r24, 0x03	; 3
    3ff6:	b8 01       	movw	r22, r16
    3ff8:	0e 94 2b 20 	call	0x4056	; 0x4056 <SPI_set_config_func>
    3ffc:	84 e0       	ldi	r24, 0x04	; 4
    3ffe:	b8 01       	movw	r22, r16
    4000:	0e 94 2b 20 	call	0x4056	; 0x4056 <SPI_set_config_func>
    4004:	85 e0       	ldi	r24, 0x05	; 5
    4006:	b8 01       	movw	r22, r16
    4008:	0e 94 2b 20 	call	0x4056	; 0x4056 <SPI_set_config_func>
    400c:	87 e0       	ldi	r24, 0x07	; 7
    400e:	b8 01       	movw	r22, r16
    4010:	0e 94 2b 20 	call	0x4056	; 0x4056 <SPI_set_config_func>
    4014:	82 e0       	ldi	r24, 0x02	; 2
    4016:	61 e0       	ldi	r22, 0x01	; 1
    4018:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    401c:	8f ef       	ldi	r24, 0xFF	; 255
    401e:	80 93 30 05 	sts	0x0530, r24
    4022:	87 e0       	ldi	r24, 0x07	; 7
    4024:	0e 94 8c 15 	call	0x2b18	; 0x2b18 <SPI_set_slave_addr>
    4028:	82 e0       	ldi	r24, 0x02	; 2
    402a:	91 e0       	ldi	r25, 0x01	; 1
    402c:	1f 91       	pop	r17
    402e:	0f 91       	pop	r16
    4030:	08 95       	ret

00004032 <SPI_receive>:
    4032:	1f 93       	push	r17
    4034:	16 2f       	mov	r17, r22
    4036:	0e 94 8c 15 	call	0x2b18	; 0x2b18 <SPI_set_slave_addr>
    403a:	82 e0       	ldi	r24, 0x02	; 2
    403c:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    4040:	81 30       	cpi	r24, 0x01	; 1
    4042:	11 f0       	breq	.+4      	; 0x4048 <SPI_receive+0x16>
    4044:	80 e0       	ldi	r24, 0x00	; 0
    4046:	05 c0       	rjmp	.+10     	; 0x4052 <SPI_receive+0x20>
    4048:	1e bd       	out	0x2e, r17	; 46
    404a:	0d b4       	in	r0, 0x2d	; 45
    404c:	07 fe       	sbrs	r0, 7
    404e:	fd cf       	rjmp	.-6      	; 0x404a <SPI_receive+0x18>
    4050:	8e b5       	in	r24, 0x2e	; 46
    4052:	1f 91       	pop	r17
    4054:	08 95       	ret

00004056 <SPI_set_config_func>:
    4056:	e8 2f       	mov	r30, r24
    4058:	f0 e0       	ldi	r31, 0x00	; 0
    405a:	ee 0f       	add	r30, r30
    405c:	ff 1f       	adc	r31, r31
    405e:	e2 54       	subi	r30, 0x42	; 66
    4060:	fd 4f       	sbci	r31, 0xFD	; 253
    4062:	71 83       	std	Z+1, r23	; 0x01
    4064:	60 83       	st	Z, r22
    4066:	08 95       	ret

00004068 <__SPKR_TIMER1_COMPA_vect>:
    4068:	0e 94 37 20 	call	0x406e	; 0x406e <SPKR_clk>
    406c:	08 95       	ret

0000406e <SPKR_clk>:
    406e:	80 91 d0 02 	lds	r24, 0x02D0
    4072:	90 91 d1 02 	lds	r25, 0x02D1
    4076:	a0 91 d2 02 	lds	r26, 0x02D2
    407a:	b0 91 d3 02 	lds	r27, 0x02D3
    407e:	20 91 d4 02 	lds	r18, 0x02D4
    4082:	30 91 d5 02 	lds	r19, 0x02D5
    4086:	40 91 d6 02 	lds	r20, 0x02D6
    408a:	50 91 d7 02 	lds	r21, 0x02D7
    408e:	28 0f       	add	r18, r24
    4090:	39 1f       	adc	r19, r25
    4092:	4a 1f       	adc	r20, r26
    4094:	5b 1f       	adc	r21, r27
    4096:	20 93 d0 02 	sts	0x02D0, r18
    409a:	30 93 d1 02 	sts	0x02D1, r19
    409e:	40 93 d2 02 	sts	0x02D2, r20
    40a2:	50 93 d3 02 	sts	0x02D3, r21
    40a6:	80 91 d0 02 	lds	r24, 0x02D0
    40aa:	90 91 d1 02 	lds	r25, 0x02D1
    40ae:	a0 91 d2 02 	lds	r26, 0x02D2
    40b2:	b0 91 d3 02 	lds	r27, 0x02D3
    40b6:	88 51       	subi	r24, 0x18	; 24
    40b8:	96 4f       	sbci	r25, 0xF6	; 246
    40ba:	a0 40       	sbci	r26, 0x00	; 0
    40bc:	b0 40       	sbci	r27, 0x00	; 0
    40be:	bc f0       	brlt	.+46     	; 0x40ee <SPKR_clk+0x80>
    40c0:	8b b1       	in	r24, 0x0b	; 11
    40c2:	80 58       	subi	r24, 0x80	; 128
    40c4:	8b b9       	out	0x0b, r24	; 11
    40c6:	80 91 d0 02 	lds	r24, 0x02D0
    40ca:	90 91 d1 02 	lds	r25, 0x02D1
    40ce:	a0 91 d2 02 	lds	r26, 0x02D2
    40d2:	b0 91 d3 02 	lds	r27, 0x02D3
    40d6:	88 51       	subi	r24, 0x18	; 24
    40d8:	96 4f       	sbci	r25, 0xF6	; 246
    40da:	a0 40       	sbci	r26, 0x00	; 0
    40dc:	b0 40       	sbci	r27, 0x00	; 0
    40de:	80 93 d0 02 	sts	0x02D0, r24
    40e2:	90 93 d1 02 	sts	0x02D1, r25
    40e6:	a0 93 d2 02 	sts	0x02D2, r26
    40ea:	b0 93 d3 02 	sts	0x02D3, r27
    40ee:	08 95       	ret

000040f0 <__SPKR_close_beep_mode>:
    40f0:	8a e0       	ldi	r24, 0x0A	; 10
    40f2:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    40f6:	81 30       	cpi	r24, 0x01	; 1
    40f8:	41 f4       	brne	.+16     	; 0x410a <__SPKR_close_beep_mode+0x1a>
    40fa:	0e 94 d7 22 	call	0x45ae	; 0x45ae <__SPKR_close>
    40fe:	10 92 cf 02 	sts	0x02CF, r1
    4102:	8a e0       	ldi	r24, 0x0A	; 10
    4104:	60 e0       	ldi	r22, 0x00	; 0
    4106:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    410a:	08 95       	ret

0000410c <__SPKR_close_tone_mode>:
    410c:	89 e0       	ldi	r24, 0x09	; 9
    410e:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    4112:	81 30       	cpi	r24, 0x01	; 1
    4114:	d9 f4       	brne	.+54     	; 0x414c <__SPKR_close_tone_mode+0x40>
    4116:	80 91 ce 02 	lds	r24, 0x02CE
    411a:	88 23       	and	r24, r24
    411c:	11 f0       	breq	.+4      	; 0x4122 <__SPKR_close_tone_mode+0x16>
    411e:	0e 94 28 21 	call	0x4250	; 0x4250 <__SPKR_stop>
    4122:	82 e0       	ldi	r24, 0x02	; 2
    4124:	0e 94 d7 22 	call	0x45ae	; 0x45ae <__SPKR_close>
    4128:	80 91 dc 02 	lds	r24, 0x02DC
    412c:	90 91 dd 02 	lds	r25, 0x02DD
    4130:	00 97       	sbiw	r24, 0x00	; 0
    4132:	31 f0       	breq	.+12     	; 0x4140 <__SPKR_close_tone_mode+0x34>
    4134:	0e 94 96 2f 	call	0x5f2c	; 0x5f2c <free>
    4138:	10 92 dd 02 	sts	0x02DD, r1
    413c:	10 92 dc 02 	sts	0x02DC, r1
    4140:	10 92 ce 02 	sts	0x02CE, r1
    4144:	89 e0       	ldi	r24, 0x09	; 9
    4146:	60 e0       	ldi	r22, 0x00	; 0
    4148:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    414c:	08 95       	ret

0000414e <SPKR_close>:
    414e:	81 30       	cpi	r24, 0x01	; 1
    4150:	29 f0       	breq	.+10     	; 0x415c <SPKR_close+0xe>
    4152:	82 30       	cpi	r24, 0x02	; 2
    4154:	29 f4       	brne	.+10     	; 0x4160 <SPKR_close+0x12>
    4156:	0e 94 86 20 	call	0x410c	; 0x410c <__SPKR_close_tone_mode>
    415a:	08 95       	ret
    415c:	0e 94 78 20 	call	0x40f0	; 0x40f0 <__SPKR_close_beep_mode>
    4160:	08 95       	ret

00004162 <__SPKR_init>:
    4162:	98 2f       	mov	r25, r24
    4164:	80 91 ce 02 	lds	r24, 0x02CE
    4168:	88 23       	and	r24, r24
    416a:	31 f4       	brne	.+12     	; 0x4178 <__SPKR_init+0x16>
    416c:	80 91 cf 02 	lds	r24, 0x02CF
    4170:	88 23       	and	r24, r24
    4172:	11 f4       	brne	.+4      	; 0x4178 <__SPKR_init+0x16>
    4174:	57 9a       	sbi	0x0a, 7	; 10
    4176:	5f 98       	cbi	0x0b, 7	; 11
    4178:	80 91 ce 02 	lds	r24, 0x02CE
    417c:	88 23       	and	r24, r24
    417e:	d1 f4       	brne	.+52     	; 0x41b4 <__SPKR_init+0x52>
    4180:	92 30       	cpi	r25, 0x02	; 2
    4182:	c1 f4       	brne	.+48     	; 0x41b4 <__SPKR_init+0x52>
    4184:	10 92 80 00 	sts	0x0080, r1
    4188:	10 92 81 00 	sts	0x0081, r1
    418c:	80 91 81 00 	lds	r24, 0x0081
    4190:	88 60       	ori	r24, 0x08	; 8
    4192:	80 93 81 00 	sts	0x0081, r24
    4196:	80 91 81 00 	lds	r24, 0x0081
    419a:	81 60       	ori	r24, 0x01	; 1
    419c:	80 93 81 00 	sts	0x0081, r24
    41a0:	10 92 85 00 	sts	0x0085, r1
    41a4:	10 92 84 00 	sts	0x0084, r1
    41a8:	81 e0       	ldi	r24, 0x01	; 1
    41aa:	80 93 89 00 	sts	0x0089, r24
    41ae:	80 e9       	ldi	r24, 0x90	; 144
    41b0:	80 93 88 00 	sts	0x0088, r24
    41b4:	08 95       	ret

000041b6 <SPKR_play_beep>:
    41b6:	8f 92       	push	r8
    41b8:	9f 92       	push	r9
    41ba:	af 92       	push	r10
    41bc:	bf 92       	push	r11
    41be:	cf 92       	push	r12
    41c0:	df 92       	push	r13
    41c2:	ef 92       	push	r14
    41c4:	ff 92       	push	r15
    41c6:	0f 93       	push	r16
    41c8:	1f 93       	push	r17
    41ca:	cf 93       	push	r28
    41cc:	df 93       	push	r29
    41ce:	4b 01       	movw	r8, r22
    41d0:	5c 01       	movw	r10, r24
    41d2:	ea 01       	movw	r28, r20
    41d4:	b9 01       	movw	r22, r18
    41d6:	21 15       	cp	r18, r1
    41d8:	31 05       	cpc	r19, r1
    41da:	39 f1       	breq	.+78     	; 0x422a <SPKR_play_beep+0x74>
    41dc:	9e 01       	movw	r18, r28
    41de:	44 27       	eor	r20, r20
    41e0:	37 fd       	sbrc	r19, 7
    41e2:	40 95       	com	r20
    41e4:	54 2f       	mov	r21, r20
    41e6:	65 36       	cpi	r22, 0x65	; 101
    41e8:	71 05       	cpc	r23, r1
    41ea:	10 f0       	brcs	.+4      	; 0x41f0 <SPKR_play_beep+0x3a>
    41ec:	64 e6       	ldi	r22, 0x64	; 100
    41ee:	70 e0       	ldi	r23, 0x00	; 0
    41f0:	80 e0       	ldi	r24, 0x00	; 0
    41f2:	90 e0       	ldi	r25, 0x00	; 0
    41f4:	0e 94 4a 2e 	call	0x5c94	; 0x5c94 <__mulsi3>
    41f8:	24 e6       	ldi	r18, 0x64	; 100
    41fa:	30 e0       	ldi	r19, 0x00	; 0
    41fc:	40 e0       	ldi	r20, 0x00	; 0
    41fe:	50 e0       	ldi	r21, 0x00	; 0
    4200:	0e 94 7c 2e 	call	0x5cf8	; 0x5cf8 <__udivmodsi4>
    4204:	79 01       	movw	r14, r18
    4206:	8a 01       	movw	r16, r20
    4208:	c5 01       	movw	r24, r10
    420a:	b4 01       	movw	r22, r8
    420c:	0e 94 c0 22 	call	0x4580	; 0x4580 <SPKR_beep>
    4210:	c7 01       	movw	r24, r14
    4212:	0e 94 0c 1b 	call	0x3618	; 0x3618 <TMRSRVC_delay>
    4216:	60 e0       	ldi	r22, 0x00	; 0
    4218:	70 e0       	ldi	r23, 0x00	; 0
    421a:	80 e0       	ldi	r24, 0x00	; 0
    421c:	90 e0       	ldi	r25, 0x00	; 0
    421e:	0e 94 c0 22 	call	0x4580	; 0x4580 <SPKR_beep>
    4222:	ce 01       	movw	r24, r28
    4224:	8e 19       	sub	r24, r14
    4226:	9f 09       	sbc	r25, r15
    4228:	04 c0       	rjmp	.+8      	; 0x4232 <SPKR_play_beep+0x7c>
    422a:	41 15       	cp	r20, r1
    422c:	51 05       	cpc	r21, r1
    422e:	19 f0       	breq	.+6      	; 0x4236 <SPKR_play_beep+0x80>
    4230:	ca 01       	movw	r24, r20
    4232:	0e 94 0c 1b 	call	0x3618	; 0x3618 <TMRSRVC_delay>
    4236:	df 91       	pop	r29
    4238:	cf 91       	pop	r28
    423a:	1f 91       	pop	r17
    423c:	0f 91       	pop	r16
    423e:	ff 90       	pop	r15
    4240:	ef 90       	pop	r14
    4242:	df 90       	pop	r13
    4244:	cf 90       	pop	r12
    4246:	bf 90       	pop	r11
    4248:	af 90       	pop	r10
    424a:	9f 90       	pop	r9
    424c:	8f 90       	pop	r8
    424e:	08 95       	ret

00004250 <__SPKR_stop>:
    4250:	ef e6       	ldi	r30, 0x6F	; 111
    4252:	f0 e0       	ldi	r31, 0x00	; 0
    4254:	80 81       	ld	r24, Z
    4256:	8d 7f       	andi	r24, 0xFD	; 253
    4258:	80 83       	st	Z, r24
    425a:	08 95       	ret

0000425c <STEPPER_go>:
    425c:	98 2f       	mov	r25, r24
    425e:	81 e0       	ldi	r24, 0x01	; 1
    4260:	80 93 15 05 	sts	0x0515, r24
    4264:	91 30       	cpi	r25, 0x01	; 1
    4266:	51 f0       	breq	.+20     	; 0x427c <STEPPER_go+0x20>
    4268:	91 30       	cpi	r25, 0x01	; 1
    426a:	18 f0       	brcs	.+6      	; 0x4272 <STEPPER_go+0x16>
    426c:	92 30       	cpi	r25, 0x02	; 2
    426e:	41 f4       	brne	.+16     	; 0x4280 <STEPPER_go+0x24>
    4270:	03 c0       	rjmp	.+6      	; 0x4278 <STEPPER_go+0x1c>
    4272:	10 92 fd 04 	sts	0x04FD, r1
    4276:	04 c0       	rjmp	.+8      	; 0x4280 <STEPPER_go+0x24>
    4278:	10 92 fd 04 	sts	0x04FD, r1
    427c:	10 92 fe 04 	sts	0x04FE, r1
    4280:	10 92 15 05 	sts	0x0515, r1
    4284:	08 95       	ret

00004286 <__STEPPER_init>:
    4286:	3a 9a       	sbi	0x07, 2	; 7
    4288:	3b 9a       	sbi	0x07, 3	; 7
    428a:	3c 9a       	sbi	0x07, 4	; 7
    428c:	3d 9a       	sbi	0x07, 5	; 7
    428e:	3e 9a       	sbi	0x07, 6	; 7
    4290:	3f 9a       	sbi	0x07, 7	; 7
    4292:	88 b1       	in	r24, 0x08	; 8
    4294:	83 70       	andi	r24, 0x03	; 3
    4296:	88 b9       	out	0x08, r24	; 8
    4298:	08 95       	ret

0000429a <STEPPER_set_steps>:
    429a:	98 2f       	mov	r25, r24
    429c:	81 e0       	ldi	r24, 0x01	; 1
    429e:	80 93 15 05 	sts	0x0515, r24
    42a2:	91 30       	cpi	r25, 0x01	; 1
    42a4:	71 f0       	breq	.+28     	; 0x42c2 <STEPPER_set_steps+0x28>
    42a6:	91 30       	cpi	r25, 0x01	; 1
    42a8:	18 f0       	brcs	.+6      	; 0x42b0 <STEPPER_set_steps+0x16>
    42aa:	92 30       	cpi	r25, 0x02	; 2
    42ac:	71 f4       	brne	.+28     	; 0x42ca <STEPPER_set_steps+0x30>
    42ae:	05 c0       	rjmp	.+10     	; 0x42ba <STEPPER_set_steps+0x20>
    42b0:	70 93 f2 04 	sts	0x04F2, r23
    42b4:	60 93 f1 04 	sts	0x04F1, r22
    42b8:	08 c0       	rjmp	.+16     	; 0x42ca <STEPPER_set_steps+0x30>
    42ba:	70 93 f2 04 	sts	0x04F2, r23
    42be:	60 93 f1 04 	sts	0x04F1, r22
    42c2:	70 93 f4 04 	sts	0x04F4, r23
    42c6:	60 93 f3 04 	sts	0x04F3, r22
    42ca:	10 92 15 05 	sts	0x0515, r1
    42ce:	08 95       	ret

000042d0 <STEPPER_set_stop_mode>:
    42d0:	98 2f       	mov	r25, r24
    42d2:	81 e0       	ldi	r24, 0x01	; 1
    42d4:	80 93 15 05 	sts	0x0515, r24
    42d8:	91 30       	cpi	r25, 0x01	; 1
    42da:	51 f0       	breq	.+20     	; 0x42f0 <STEPPER_set_stop_mode+0x20>
    42dc:	91 30       	cpi	r25, 0x01	; 1
    42de:	18 f0       	brcs	.+6      	; 0x42e6 <STEPPER_set_stop_mode+0x16>
    42e0:	92 30       	cpi	r25, 0x02	; 2
    42e2:	41 f4       	brne	.+16     	; 0x42f4 <STEPPER_set_stop_mode+0x24>
    42e4:	03 c0       	rjmp	.+6      	; 0x42ec <STEPPER_set_stop_mode+0x1c>
    42e6:	60 93 ff 04 	sts	0x04FF, r22
    42ea:	04 c0       	rjmp	.+8      	; 0x42f4 <STEPPER_set_stop_mode+0x24>
    42ec:	60 93 ff 04 	sts	0x04FF, r22
    42f0:	60 93 00 05 	sts	0x0500, r22
    42f4:	10 92 15 05 	sts	0x0515, r1
    42f8:	08 95       	ret

000042fa <STEPPER_setup_decels>:
    42fa:	0f 93       	push	r16
    42fc:	1f 93       	push	r17
    42fe:	cf 93       	push	r28
    4300:	df 93       	push	r29
    4302:	eb 01       	movw	r28, r22
    4304:	8a 01       	movw	r16, r20
    4306:	81 30       	cpi	r24, 0x01	; 1
    4308:	01 f1       	breq	.+64     	; 0x434a <STEPPER_setup_decels+0x50>
    430a:	81 30       	cpi	r24, 0x01	; 1
    430c:	18 f0       	brcs	.+6      	; 0x4314 <STEPPER_setup_decels+0x1a>
    430e:	82 30       	cpi	r24, 0x02	; 2
    4310:	61 f5       	brne	.+88     	; 0x436a <STEPPER_setup_decels+0x70>
    4312:	0d c0       	rjmp	.+26     	; 0x432e <STEPPER_setup_decels+0x34>
    4314:	80 91 e9 04 	lds	r24, 0x04E9
    4318:	90 91 ea 04 	lds	r25, 0x04EA
    431c:	89 2b       	or	r24, r25
    431e:	11 f0       	breq	.+4      	; 0x4324 <STEPPER_setup_decels+0x2a>
    4320:	80 e0       	ldi	r24, 0x00	; 0
    4322:	1a c0       	rjmp	.+52     	; 0x4358 <STEPPER_setup_decels+0x5e>
    4324:	10 92 f6 04 	sts	0x04F6, r1
    4328:	10 92 f5 04 	sts	0x04F5, r1
    432c:	1e c0       	rjmp	.+60     	; 0x436a <STEPPER_setup_decels+0x70>
    432e:	80 91 e9 04 	lds	r24, 0x04E9
    4332:	90 91 ea 04 	lds	r25, 0x04EA
    4336:	89 2b       	or	r24, r25
    4338:	21 f0       	breq	.+8      	; 0x4342 <STEPPER_setup_decels+0x48>
    433a:	80 e0       	ldi	r24, 0x00	; 0
    433c:	0e 94 f3 22 	call	0x45e6	; 0x45e6 <STEPPER_set_decel_step_values>
    4340:	04 c0       	rjmp	.+8      	; 0x434a <STEPPER_setup_decels+0x50>
    4342:	10 92 f6 04 	sts	0x04F6, r1
    4346:	10 92 f5 04 	sts	0x04F5, r1
    434a:	80 91 eb 04 	lds	r24, 0x04EB
    434e:	90 91 ec 04 	lds	r25, 0x04EC
    4352:	89 2b       	or	r24, r25
    4354:	31 f0       	breq	.+12     	; 0x4362 <STEPPER_setup_decels+0x68>
    4356:	81 e0       	ldi	r24, 0x01	; 1
    4358:	be 01       	movw	r22, r28
    435a:	a8 01       	movw	r20, r16
    435c:	0e 94 f3 22 	call	0x45e6	; 0x45e6 <STEPPER_set_decel_step_values>
    4360:	04 c0       	rjmp	.+8      	; 0x436a <STEPPER_setup_decels+0x70>
    4362:	10 92 f8 04 	sts	0x04F8, r1
    4366:	10 92 f7 04 	sts	0x04F7, r1
    436a:	df 91       	pop	r29
    436c:	cf 91       	pop	r28
    436e:	1f 91       	pop	r17
    4370:	0f 91       	pop	r16
    4372:	08 95       	ret

00004374 <SYS_init>:
    4374:	10 92 18 05 	sts	0x0518, r1
    4378:	10 92 19 05 	sts	0x0519, r1
    437c:	10 92 1d 05 	sts	0x051D, r1
    4380:	10 92 1a 05 	sts	0x051A, r1
    4384:	10 92 1c 05 	sts	0x051C, r1
    4388:	10 92 1e 05 	sts	0x051E, r1
    438c:	10 92 1f 05 	sts	0x051F, r1
    4390:	10 92 20 05 	sts	0x0520, r1
    4394:	10 92 21 05 	sts	0x0521, r1
    4398:	10 92 22 05 	sts	0x0522, r1
    439c:	10 92 23 05 	sts	0x0523, r1
    43a0:	10 92 24 05 	sts	0x0524, r1
    43a4:	10 92 25 05 	sts	0x0525, r1
    43a8:	10 92 26 05 	sts	0x0526, r1
    43ac:	10 92 27 05 	sts	0x0527, r1
    43b0:	10 92 28 05 	sts	0x0528, r1
    43b4:	10 92 29 05 	sts	0x0529, r1
    43b8:	08 95       	ret

000043ba <TMRSRVC_insert>:
    43ba:	cf 92       	push	r12
    43bc:	df 92       	push	r13
    43be:	ef 92       	push	r14
    43c0:	ff 92       	push	r15
    43c2:	0f 93       	push	r16
    43c4:	1f 93       	push	r17
    43c6:	cf 93       	push	r28
    43c8:	df 93       	push	r29
    43ca:	ec 01       	movw	r28, r24
    43cc:	80 91 4f 05 	lds	r24, 0x054F
    43d0:	88 23       	and	r24, r24
    43d2:	39 f4       	brne	.+14     	; 0x43e2 <TMRSRVC_insert+0x28>
    43d4:	d0 93 51 05 	sts	0x0551, r29
    43d8:	c0 93 50 05 	sts	0x0550, r28
    43dc:	0e 94 6b 22 	call	0x44d6	; 0x44d6 <TMRSRVC_start>
    43e0:	47 c0       	rjmp	.+142    	; 0x4470 <TMRSRVC_insert+0xb6>
    43e2:	c0 90 50 05 	lds	r12, 0x0550
    43e6:	d0 90 51 05 	lds	r13, 0x0551
    43ea:	00 e0       	ldi	r16, 0x00	; 0
    43ec:	10 e0       	ldi	r17, 0x00	; 0
    43ee:	ee 24       	eor	r14, r14
    43f0:	ff 24       	eor	r15, r15
    43f2:	37 c0       	rjmp	.+110    	; 0x4462 <TMRSRVC_insert+0xa8>
    43f4:	a8 81       	ld	r26, Y
    43f6:	b9 81       	ldd	r27, Y+1	; 0x01
    43f8:	fd 01       	movw	r30, r26
    43fa:	64 81       	ldd	r22, Z+4	; 0x04
    43fc:	75 81       	ldd	r23, Z+5	; 0x05
    43fe:	f6 01       	movw	r30, r12
    4400:	40 81       	ld	r20, Z
    4402:	51 81       	ldd	r21, Z+1	; 0x01
    4404:	fa 01       	movw	r30, r20
    4406:	84 81       	ldd	r24, Z+4	; 0x04
    4408:	95 81       	ldd	r25, Z+5	; 0x05
    440a:	9b 01       	movw	r18, r22
    440c:	28 1b       	sub	r18, r24
    440e:	39 0b       	sbc	r19, r25
    4410:	37 ff       	sbrs	r19, 7
    4412:	0f c0       	rjmp	.+30     	; 0x4432 <TMRSRVC_insert+0x78>
    4414:	86 1b       	sub	r24, r22
    4416:	97 0b       	sbc	r25, r23
    4418:	95 83       	std	Z+5, r25	; 0x05
    441a:	84 83       	std	Z+4, r24	; 0x04
    441c:	db 82       	std	Y+3, r13	; 0x03
    441e:	ca 82       	std	Y+2, r12	; 0x02
    4420:	01 2b       	or	r16, r17
    4422:	29 f4       	brne	.+10     	; 0x442e <TMRSRVC_insert+0x74>
    4424:	d0 93 51 05 	sts	0x0551, r29
    4428:	c0 93 50 05 	sts	0x0550, r28
    442c:	21 c0       	rjmp	.+66     	; 0x4470 <TMRSRVC_insert+0xb6>
    442e:	f7 01       	movw	r30, r14
    4430:	0c c0       	rjmp	.+24     	; 0x444a <TMRSRVC_insert+0x90>
    4432:	f6 01       	movw	r30, r12
    4434:	82 81       	ldd	r24, Z+2	; 0x02
    4436:	93 81       	ldd	r25, Z+3	; 0x03
    4438:	21 15       	cp	r18, r1
    443a:	31 05       	cpc	r19, r1
    443c:	49 f4       	brne	.+18     	; 0x4450 <TMRSRVC_insert+0x96>
    443e:	fd 01       	movw	r30, r26
    4440:	15 82       	std	Z+5, r1	; 0x05
    4442:	14 82       	std	Z+4, r1	; 0x04
    4444:	9b 83       	std	Y+3, r25	; 0x03
    4446:	8a 83       	std	Y+2, r24	; 0x02
    4448:	f6 01       	movw	r30, r12
    444a:	d3 83       	std	Z+3, r29	; 0x03
    444c:	c2 83       	std	Z+2, r28	; 0x02
    444e:	10 c0       	rjmp	.+32     	; 0x4470 <TMRSRVC_insert+0xb6>
    4450:	fd 01       	movw	r30, r26
    4452:	35 83       	std	Z+5, r19	; 0x05
    4454:	24 83       	std	Z+4, r18	; 0x04
    4456:	00 97       	sbiw	r24, 0x00	; 0
    4458:	b9 f3       	breq	.-18     	; 0x4448 <TMRSRVC_insert+0x8e>
    445a:	0f 5f       	subi	r16, 0xFF	; 255
    445c:	1f 4f       	sbci	r17, 0xFF	; 255
    445e:	76 01       	movw	r14, r12
    4460:	6c 01       	movw	r12, r24
    4462:	80 91 4f 05 	lds	r24, 0x054F
    4466:	90 e0       	ldi	r25, 0x00	; 0
    4468:	08 17       	cp	r16, r24
    446a:	19 07       	cpc	r17, r25
    446c:	18 f2       	brcs	.-122    	; 0x43f4 <TMRSRVC_insert+0x3a>
    446e:	ec cf       	rjmp	.-40     	; 0x4448 <TMRSRVC_insert+0x8e>
    4470:	80 91 4f 05 	lds	r24, 0x054F
    4474:	8f 5f       	subi	r24, 0xFF	; 255
    4476:	80 93 4f 05 	sts	0x054F, r24
    447a:	df 91       	pop	r29
    447c:	cf 91       	pop	r28
    447e:	1f 91       	pop	r17
    4480:	0f 91       	pop	r16
    4482:	ff 90       	pop	r15
    4484:	ef 90       	pop	r14
    4486:	df 90       	pop	r13
    4488:	cf 90       	pop	r12
    448a:	08 95       	ret

0000448c <TMRSRVC_open>:
    448c:	88 e0       	ldi	r24, 0x08	; 8
    448e:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    4492:	88 23       	and	r24, r24
    4494:	b9 f4       	brne	.+46     	; 0x44c4 <TMRSRVC_open+0x38>
    4496:	10 92 4f 05 	sts	0x054F, r1
    449a:	10 92 51 05 	sts	0x0551, r1
    449e:	10 92 50 05 	sts	0x0550, r1
    44a2:	10 92 de 02 	sts	0x02DE, r1
    44a6:	10 92 df 02 	sts	0x02DF, r1
    44aa:	80 e1       	ldi	r24, 0x10	; 16
    44ac:	60 e6       	ldi	r22, 0x60	; 96
    44ae:	73 e2       	ldi	r23, 0x23	; 35
    44b0:	0e 94 7c 22 	call	0x44f8	; 0x44f8 <__ISR_attach>
    44b4:	0e 94 67 23 	call	0x46ce	; 0x46ce <__TMRSRVC_init>
    44b8:	0e 94 65 22 	call	0x44ca	; 0x44ca <__TMRSRVC_start>
    44bc:	88 e0       	ldi	r24, 0x08	; 8
    44be:	61 e0       	ldi	r22, 0x01	; 1
    44c0:	0e 94 f7 19 	call	0x33ee	; 0x33ee <SYS_set_state>
    44c4:	88 e0       	ldi	r24, 0x08	; 8
    44c6:	91 e0       	ldi	r25, 0x01	; 1
    44c8:	08 95       	ret

000044ca <__TMRSRVC_start>:
    44ca:	ee e6       	ldi	r30, 0x6E	; 110
    44cc:	f0 e0       	ldi	r31, 0x00	; 0
    44ce:	80 81       	ld	r24, Z
    44d0:	82 60       	ori	r24, 0x02	; 2
    44d2:	80 83       	st	Z, r24
    44d4:	08 95       	ret

000044d6 <TMRSRVC_start>:
    44d6:	81 e0       	ldi	r24, 0x01	; 1
    44d8:	80 93 df 02 	sts	0x02DF, r24
    44dc:	08 95       	ret

000044de <I2C_enable>:
    44de:	80 91 52 05 	lds	r24, 0x0552
    44e2:	81 30       	cpi	r24, 0x01	; 1
    44e4:	29 f4       	brne	.+10     	; 0x44f0 <I2C_enable+0x12>
    44e6:	80 91 bc 00 	lds	r24, 0x00BC
    44ea:	84 60       	ori	r24, 0x04	; 4
    44ec:	80 93 bc 00 	sts	0x00BC, r24
    44f0:	08 95       	ret

000044f2 <__I2C_init>:
    44f2:	38 98       	cbi	0x07, 0	; 7
    44f4:	39 98       	cbi	0x07, 1	; 7
    44f6:	08 95       	ret

000044f8 <__ISR_attach>:
    44f8:	80 32       	cpi	r24, 0x20	; 32
    44fa:	18 f0       	brcs	.+6      	; 0x4502 <__ISR_attach+0xa>
    44fc:	20 e0       	ldi	r18, 0x00	; 0
    44fe:	30 e0       	ldi	r19, 0x00	; 0
    4500:	0a c0       	rjmp	.+20     	; 0x4516 <__ISR_attach+0x1e>
    4502:	e8 2f       	mov	r30, r24
    4504:	f0 e0       	ldi	r31, 0x00	; 0
    4506:	ee 0f       	add	r30, r30
    4508:	ff 1f       	adc	r31, r31
    450a:	e2 58       	subi	r30, 0x82	; 130
    450c:	fd 4f       	sbci	r31, 0xFD	; 253
    450e:	20 81       	ld	r18, Z
    4510:	31 81       	ldd	r19, Z+1	; 0x01
    4512:	71 83       	std	Z+1, r23	; 0x01
    4514:	60 83       	st	Z, r22
    4516:	c9 01       	movw	r24, r18
    4518:	08 95       	ret

0000451a <__ATMEGA_init>:
    451a:	24 9a       	sbi	0x04, 4	; 4
    451c:	2c 9a       	sbi	0x05, 4	; 5
    451e:	08 95       	ret

00004520 <SPI_default_config>:
    4520:	83 e5       	ldi	r24, 0x53	; 83
    4522:	8c bd       	out	0x2c, r24	; 44
    4524:	81 e0       	ldi	r24, 0x01	; 1
    4526:	8d bd       	out	0x2d, r24	; 45
    4528:	8d e0       	ldi	r24, 0x0D	; 13
    452a:	8a 95       	dec	r24
    452c:	f1 f7       	brne	.-4      	; 0x452a <SPI_default_config+0xa>
    452e:	08 95       	ret

00004530 <SPI_ATtiny0_config>:
    4530:	83 e5       	ldi	r24, 0x53	; 83
    4532:	8c bd       	out	0x2c, r24	; 44
    4534:	1d bc       	out	0x2d, r1	; 45
    4536:	84 ef       	ldi	r24, 0xF4	; 244
    4538:	91 e0       	ldi	r25, 0x01	; 1
    453a:	01 97       	sbiw	r24, 0x01	; 1
    453c:	f1 f7       	brne	.-4      	; 0x453a <SPI_ATtiny0_config+0xa>
    453e:	08 95       	ret

00004540 <SPI_PSXC_config>:
    4540:	8f e7       	ldi	r24, 0x7F	; 127
    4542:	8c bd       	out	0x2c, r24	; 44
    4544:	1d bc       	out	0x2d, r1	; 45
    4546:	84 ef       	ldi	r24, 0xF4	; 244
    4548:	91 e0       	ldi	r25, 0x01	; 1
    454a:	01 97       	sbiw	r24, 0x01	; 1
    454c:	f1 f7       	brne	.-4      	; 0x454a <SPI_PSXC_config+0xa>
    454e:	08 95       	ret

00004550 <SPI_LCD_config>:
    4550:	83 e5       	ldi	r24, 0x53	; 83
    4552:	8c bd       	out	0x2c, r24	; 44
    4554:	81 e0       	ldi	r24, 0x01	; 1
    4556:	8d bd       	out	0x2d, r24	; 45
    4558:	8d e0       	ldi	r24, 0x0D	; 13
    455a:	8a 95       	dec	r24
    455c:	f1 f7       	brne	.-4      	; 0x455a <SPI_LCD_config+0xa>
    455e:	08 95       	ret

00004560 <SPI_FLASH_config>:
    4560:	83 e5       	ldi	r24, 0x53	; 83
    4562:	8c bd       	out	0x2c, r24	; 44
    4564:	81 e0       	ldi	r24, 0x01	; 1
    4566:	8d bd       	out	0x2d, r24	; 45
    4568:	84 ef       	ldi	r24, 0xF4	; 244
    456a:	91 e0       	ldi	r25, 0x01	; 1
    456c:	01 97       	sbiw	r24, 0x01	; 1
    456e:	f1 f7       	brne	.-4      	; 0x456c <SPI_FLASH_config+0xc>
    4570:	08 95       	ret

00004572 <__SPI_init>:
    4572:	25 9a       	sbi	0x04, 5	; 4
    4574:	26 98       	cbi	0x04, 6	; 4
    4576:	27 9a       	sbi	0x04, 7	; 4
    4578:	20 9a       	sbi	0x04, 0	; 4
    457a:	21 9a       	sbi	0x04, 1	; 4
    457c:	22 9a       	sbi	0x04, 2	; 4
    457e:	08 95       	ret

00004580 <SPKR_beep>:
    4580:	9b 01       	movw	r18, r22
    4582:	ac 01       	movw	r20, r24
    4584:	80 91 cf 02 	lds	r24, 0x02CF
    4588:	88 23       	and	r24, r24
    458a:	81 f0       	breq	.+32     	; 0x45ac <SPKR_beep+0x2c>
    458c:	da 01       	movw	r26, r20
    458e:	c9 01       	movw	r24, r18
    4590:	88 0f       	add	r24, r24
    4592:	99 1f       	adc	r25, r25
    4594:	aa 1f       	adc	r26, r26
    4596:	bb 1f       	adc	r27, r27
    4598:	90 93 db 02 	sts	0x02DB, r25
    459c:	80 93 da 02 	sts	0x02DA, r24
    45a0:	21 15       	cp	r18, r1
    45a2:	31 05       	cpc	r19, r1
    45a4:	41 05       	cpc	r20, r1
    45a6:	51 05       	cpc	r21, r1
    45a8:	09 f4       	brne	.+2      	; 0x45ac <SPKR_beep+0x2c>
    45aa:	5f 98       	cbi	0x0b, 7	; 11
    45ac:	08 95       	ret

000045ae <__SPKR_close>:
    45ae:	82 30       	cpi	r24, 0x02	; 2
    45b0:	29 f4       	brne	.+10     	; 0x45bc <__SPKR_close+0xe>
    45b2:	80 91 81 00 	lds	r24, 0x0081
    45b6:	8e 7f       	andi	r24, 0xFE	; 254
    45b8:	80 93 81 00 	sts	0x0081, r24
    45bc:	80 91 ce 02 	lds	r24, 0x02CE
    45c0:	81 30       	cpi	r24, 0x01	; 1
    45c2:	31 f4       	brne	.+12     	; 0x45d0 <__SPKR_close+0x22>
    45c4:	80 91 cf 02 	lds	r24, 0x02CF
    45c8:	81 30       	cpi	r24, 0x01	; 1
    45ca:	11 f4       	brne	.+4      	; 0x45d0 <__SPKR_close+0x22>
    45cc:	00 00       	nop
    45ce:	08 95       	ret
    45d0:	80 91 ce 02 	lds	r24, 0x02CE
    45d4:	81 30       	cpi	r24, 0x01	; 1
    45d6:	21 f0       	breq	.+8      	; 0x45e0 <__SPKR_close+0x32>
    45d8:	80 91 cf 02 	lds	r24, 0x02CF
    45dc:	81 30       	cpi	r24, 0x01	; 1
    45de:	11 f4       	brne	.+4      	; 0x45e4 <__SPKR_close+0x36>
    45e0:	5f 98       	cbi	0x0b, 7	; 11
    45e2:	57 98       	cbi	0x0a, 7	; 10
    45e4:	08 95       	ret

000045e6 <STEPPER_set_decel_step_values>:
    45e6:	ef 92       	push	r14
    45e8:	ff 92       	push	r15
    45ea:	0f 93       	push	r16
    45ec:	1f 93       	push	r17
    45ee:	cf 93       	push	r28
    45f0:	df 93       	push	r29
    45f2:	eb 01       	movw	r28, r22
    45f4:	88 23       	and	r24, r24
    45f6:	21 f0       	breq	.+8      	; 0x4600 <STEPPER_set_decel_step_values+0x1a>
    45f8:	81 30       	cpi	r24, 0x01	; 1
    45fa:	09 f0       	breq	.+2      	; 0x45fe <STEPPER_set_decel_step_values+0x18>
    45fc:	5a c0       	rjmp	.+180    	; 0x46b2 <STEPPER_set_decel_step_values+0xcc>
    45fe:	2d c0       	rjmp	.+90     	; 0x465a <STEPPER_set_decel_step_values+0x74>
    4600:	9a 01       	movw	r18, r20
    4602:	40 e0       	ldi	r20, 0x00	; 0
    4604:	50 e0       	ldi	r21, 0x00	; 0
    4606:	ca 01       	movw	r24, r20
    4608:	b9 01       	movw	r22, r18
    460a:	0e 94 4a 2e 	call	0x5c94	; 0x5c94 <__mulsi3>
    460e:	20 91 e9 04 	lds	r18, 0x04E9
    4612:	30 91 ea 04 	lds	r19, 0x04EA
    4616:	22 0f       	add	r18, r18
    4618:	33 1f       	adc	r19, r19
    461a:	40 e0       	ldi	r20, 0x00	; 0
    461c:	50 e0       	ldi	r21, 0x00	; 0
    461e:	0e 94 7c 2e 	call	0x5cf8	; 0x5cf8 <__udivmodsi4>
    4622:	79 01       	movw	r14, r18
    4624:	8a 01       	movw	r16, r20
    4626:	a8 01       	movw	r20, r16
    4628:	97 01       	movw	r18, r14
    462a:	22 0f       	add	r18, r18
    462c:	33 1f       	adc	r19, r19
    462e:	44 1f       	adc	r20, r20
    4630:	55 1f       	adc	r21, r21
    4632:	ce 01       	movw	r24, r28
    4634:	a0 e0       	ldi	r26, 0x00	; 0
    4636:	b0 e0       	ldi	r27, 0x00	; 0
    4638:	82 17       	cp	r24, r18
    463a:	93 07       	cpc	r25, r19
    463c:	a4 07       	cpc	r26, r20
    463e:	b5 07       	cpc	r27, r21
    4640:	28 f0       	brcs	.+10     	; 0x464c <STEPPER_set_decel_step_values+0x66>
    4642:	f0 92 f6 04 	sts	0x04F6, r15
    4646:	e0 92 f5 04 	sts	0x04F5, r14
    464a:	33 c0       	rjmp	.+102    	; 0x46b2 <STEPPER_set_decel_step_values+0xcc>
    464c:	d6 95       	lsr	r29
    464e:	c7 95       	ror	r28
    4650:	d0 93 f6 04 	sts	0x04F6, r29
    4654:	c0 93 f5 04 	sts	0x04F5, r28
    4658:	2c c0       	rjmp	.+88     	; 0x46b2 <STEPPER_set_decel_step_values+0xcc>
    465a:	9a 01       	movw	r18, r20
    465c:	40 e0       	ldi	r20, 0x00	; 0
    465e:	50 e0       	ldi	r21, 0x00	; 0
    4660:	ca 01       	movw	r24, r20
    4662:	b9 01       	movw	r22, r18
    4664:	0e 94 4a 2e 	call	0x5c94	; 0x5c94 <__mulsi3>
    4668:	20 91 eb 04 	lds	r18, 0x04EB
    466c:	30 91 ec 04 	lds	r19, 0x04EC
    4670:	22 0f       	add	r18, r18
    4672:	33 1f       	adc	r19, r19
    4674:	40 e0       	ldi	r20, 0x00	; 0
    4676:	50 e0       	ldi	r21, 0x00	; 0
    4678:	0e 94 7c 2e 	call	0x5cf8	; 0x5cf8 <__udivmodsi4>
    467c:	79 01       	movw	r14, r18
    467e:	8a 01       	movw	r16, r20
    4680:	a8 01       	movw	r20, r16
    4682:	97 01       	movw	r18, r14
    4684:	22 0f       	add	r18, r18
    4686:	33 1f       	adc	r19, r19
    4688:	44 1f       	adc	r20, r20
    468a:	55 1f       	adc	r21, r21
    468c:	ce 01       	movw	r24, r28
    468e:	a0 e0       	ldi	r26, 0x00	; 0
    4690:	b0 e0       	ldi	r27, 0x00	; 0
    4692:	82 17       	cp	r24, r18
    4694:	93 07       	cpc	r25, r19
    4696:	a4 07       	cpc	r26, r20
    4698:	b5 07       	cpc	r27, r21
    469a:	28 f0       	brcs	.+10     	; 0x46a6 <STEPPER_set_decel_step_values+0xc0>
    469c:	f0 92 f8 04 	sts	0x04F8, r15
    46a0:	e0 92 f7 04 	sts	0x04F7, r14
    46a4:	06 c0       	rjmp	.+12     	; 0x46b2 <STEPPER_set_decel_step_values+0xcc>
    46a6:	d6 95       	lsr	r29
    46a8:	c7 95       	ror	r28
    46aa:	d0 93 f8 04 	sts	0x04F8, r29
    46ae:	c0 93 f7 04 	sts	0x04F7, r28
    46b2:	df 91       	pop	r29
    46b4:	cf 91       	pop	r28
    46b6:	1f 91       	pop	r17
    46b8:	0f 91       	pop	r16
    46ba:	ff 90       	pop	r15
    46bc:	ef 90       	pop	r14
    46be:	08 95       	ret

000046c0 <__TIMER0_COMPA_vect>:
    46c0:	0e 94 70 23 	call	0x46e0	; 0x46e0 <TMRSRVC_tick>
    46c4:	0e 94 b0 23 	call	0x4760	; 0x4760 <STEPPER_clk>
    46c8:	0e 94 89 23 	call	0x4712	; 0x4712 <SPKR_beep_clk>
    46cc:	08 95       	ret

000046ce <__TMRSRVC_init>:
    46ce:	84 b5       	in	r24, 0x24	; 36
    46d0:	82 60       	ori	r24, 0x02	; 2
    46d2:	84 bd       	out	0x24, r24	; 36
    46d4:	85 b5       	in	r24, 0x25	; 37
    46d6:	84 60       	ori	r24, 0x04	; 4
    46d8:	85 bd       	out	0x25, r24	; 37
    46da:	8e e4       	ldi	r24, 0x4E	; 78
    46dc:	87 bd       	out	0x27, r24	; 39
    46de:	08 95       	ret

000046e0 <TMRSRVC_tick>:
    46e0:	88 e0       	ldi	r24, 0x08	; 8
    46e2:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    46e6:	88 23       	and	r24, r24
    46e8:	11 f4       	brne	.+4      	; 0x46ee <TMRSRVC_tick+0xe>
    46ea:	84 e0       	ldi	r24, 0x04	; 4
    46ec:	08 95       	ret
    46ee:	80 91 df 02 	lds	r24, 0x02DF
    46f2:	88 23       	and	r24, r24
    46f4:	11 f4       	brne	.+4      	; 0x46fa <TMRSRVC_tick+0x1a>
    46f6:	83 e0       	ldi	r24, 0x03	; 3
    46f8:	08 95       	ret
    46fa:	80 91 de 02 	lds	r24, 0x02DE
    46fe:	88 23       	and	r24, r24
    4700:	11 f0       	breq	.+4      	; 0x4706 <TMRSRVC_tick+0x26>
    4702:	82 e0       	ldi	r24, 0x02	; 2
    4704:	08 95       	ret
    4706:	0e 94 22 26 	call	0x4c44	; 0x4c44 <TMRSRVC_process>
    470a:	81 30       	cpi	r24, 0x01	; 1
    470c:	e1 f3       	breq	.-8      	; 0x4706 <TMRSRVC_tick+0x26>
    470e:	80 e0       	ldi	r24, 0x00	; 0
    4710:	08 95       	ret

00004712 <SPKR_beep_clk>:
    4712:	80 91 cf 02 	lds	r24, 0x02CF
    4716:	81 30       	cpi	r24, 0x01	; 1
    4718:	11 f5       	brne	.+68     	; 0x475e <SPKR_beep_clk+0x4c>
    471a:	80 91 d8 02 	lds	r24, 0x02D8
    471e:	90 91 d9 02 	lds	r25, 0x02D9
    4722:	20 91 da 02 	lds	r18, 0x02DA
    4726:	30 91 db 02 	lds	r19, 0x02DB
    472a:	28 0f       	add	r18, r24
    472c:	39 1f       	adc	r19, r25
    472e:	30 93 d9 02 	sts	0x02D9, r19
    4732:	20 93 d8 02 	sts	0x02D8, r18
    4736:	80 91 d8 02 	lds	r24, 0x02D8
    473a:	90 91 d9 02 	lds	r25, 0x02D9
    473e:	88 5e       	subi	r24, 0xE8	; 232
    4740:	93 40       	sbci	r25, 0x03	; 3
    4742:	6c f0       	brlt	.+26     	; 0x475e <SPKR_beep_clk+0x4c>
    4744:	8b b1       	in	r24, 0x0b	; 11
    4746:	80 58       	subi	r24, 0x80	; 128
    4748:	8b b9       	out	0x0b, r24	; 11
    474a:	80 91 d8 02 	lds	r24, 0x02D8
    474e:	90 91 d9 02 	lds	r25, 0x02D9
    4752:	88 5e       	subi	r24, 0xE8	; 232
    4754:	93 40       	sbci	r25, 0x03	; 3
    4756:	90 93 d9 02 	sts	0x02D9, r25
    475a:	80 93 d8 02 	sts	0x02D8, r24
    475e:	08 95       	ret

00004760 <STEPPER_clk>:
    4760:	87 e0       	ldi	r24, 0x07	; 7
    4762:	0e 94 af 19 	call	0x335e	; 0x335e <SYS_get_state>
    4766:	81 30       	cpi	r24, 0x01	; 1
    4768:	09 f0       	breq	.+2      	; 0x476c <STEPPER_clk+0xc>
    476a:	aa c0       	rjmp	.+340    	; 0x48c0 <STEPPER_clk+0x160>
    476c:	80 91 e9 04 	lds	r24, 0x04E9
    4770:	90 91 ea 04 	lds	r25, 0x04EA
    4774:	89 2b       	or	r24, r25
    4776:	09 f1       	breq	.+66     	; 0x47ba <STEPPER_clk+0x5a>
    4778:	80 91 0d 05 	lds	r24, 0x050D
    477c:	90 91 0e 05 	lds	r25, 0x050E
    4780:	20 91 e9 04 	lds	r18, 0x04E9
    4784:	30 91 ea 04 	lds	r19, 0x04EA
    4788:	82 0f       	add	r24, r18
    478a:	93 1f       	adc	r25, r19
    478c:	90 93 0e 05 	sts	0x050E, r25
    4790:	80 93 0d 05 	sts	0x050D, r24
    4794:	80 91 0d 05 	lds	r24, 0x050D
    4798:	90 91 0e 05 	lds	r25, 0x050E
    479c:	88 5e       	subi	r24, 0xE8	; 232
    479e:	93 40       	sbci	r25, 0x03	; 3
    47a0:	a4 f0       	brlt	.+40     	; 0x47ca <STEPPER_clk+0x6a>
    47a2:	80 91 0d 05 	lds	r24, 0x050D
    47a6:	90 91 0e 05 	lds	r25, 0x050E
    47aa:	88 5e       	subi	r24, 0xE8	; 232
    47ac:	93 40       	sbci	r25, 0x03	; 3
    47ae:	90 93 0e 05 	sts	0x050E, r25
    47b2:	80 93 0d 05 	sts	0x050D, r24
    47b6:	41 e0       	ldi	r20, 0x01	; 1
    47b8:	09 c0       	rjmp	.+18     	; 0x47cc <STEPPER_clk+0x6c>
    47ba:	80 91 e1 04 	lds	r24, 0x04E1
    47be:	90 91 e2 04 	lds	r25, 0x04E2
    47c2:	90 93 e6 04 	sts	0x04E6, r25
    47c6:	80 93 e5 04 	sts	0x04E5, r24
    47ca:	40 e0       	ldi	r20, 0x00	; 0
    47cc:	80 91 eb 04 	lds	r24, 0x04EB
    47d0:	90 91 ec 04 	lds	r25, 0x04EC
    47d4:	89 2b       	or	r24, r25
    47d6:	09 f1       	breq	.+66     	; 0x481a <STEPPER_clk+0xba>
    47d8:	80 91 0f 05 	lds	r24, 0x050F
    47dc:	90 91 10 05 	lds	r25, 0x0510
    47e0:	20 91 eb 04 	lds	r18, 0x04EB
    47e4:	30 91 ec 04 	lds	r19, 0x04EC
    47e8:	82 0f       	add	r24, r18
    47ea:	93 1f       	adc	r25, r19
    47ec:	90 93 10 05 	sts	0x0510, r25
    47f0:	80 93 0f 05 	sts	0x050F, r24
    47f4:	80 91 0f 05 	lds	r24, 0x050F
    47f8:	90 91 10 05 	lds	r25, 0x0510
    47fc:	88 5e       	subi	r24, 0xE8	; 232
    47fe:	93 40       	sbci	r25, 0x03	; 3
    4800:	a4 f0       	brlt	.+40     	; 0x482a <STEPPER_clk+0xca>
    4802:	80 91 0f 05 	lds	r24, 0x050F
    4806:	90 91 10 05 	lds	r25, 0x0510
    480a:	88 5e       	subi	r24, 0xE8	; 232
    480c:	93 40       	sbci	r25, 0x03	; 3
    480e:	90 93 10 05 	sts	0x0510, r25
    4812:	80 93 0f 05 	sts	0x050F, r24
    4816:	61 e0       	ldi	r22, 0x01	; 1
    4818:	09 c0       	rjmp	.+18     	; 0x482c <STEPPER_clk+0xcc>
    481a:	80 91 e3 04 	lds	r24, 0x04E3
    481e:	90 91 e4 04 	lds	r25, 0x04E4
    4822:	90 93 e8 04 	sts	0x04E8, r25
    4826:	80 93 e7 04 	sts	0x04E7, r24
    482a:	60 e0       	ldi	r22, 0x00	; 0
    482c:	84 2f       	mov	r24, r20
    482e:	0e 94 61 24 	call	0x48c2	; 0x48c2 <STEPPER_process_accel>
    4832:	80 91 09 05 	lds	r24, 0x0509
    4836:	90 91 0a 05 	lds	r25, 0x050A
    483a:	20 91 e5 04 	lds	r18, 0x04E5
    483e:	30 91 e6 04 	lds	r19, 0x04E6
    4842:	28 0f       	add	r18, r24
    4844:	39 1f       	adc	r19, r25
    4846:	30 93 0a 05 	sts	0x050A, r19
    484a:	20 93 09 05 	sts	0x0509, r18
    484e:	80 91 09 05 	lds	r24, 0x0509
    4852:	90 91 0a 05 	lds	r25, 0x050A
    4856:	88 5e       	subi	r24, 0xE8	; 232
    4858:	93 40       	sbci	r25, 0x03	; 3
    485a:	14 f4       	brge	.+4      	; 0x4860 <STEPPER_clk+0x100>
    485c:	40 e0       	ldi	r20, 0x00	; 0
    485e:	0b c0       	rjmp	.+22     	; 0x4876 <STEPPER_clk+0x116>
    4860:	80 91 09 05 	lds	r24, 0x0509
    4864:	90 91 0a 05 	lds	r25, 0x050A
    4868:	88 5e       	subi	r24, 0xE8	; 232
    486a:	93 40       	sbci	r25, 0x03	; 3
    486c:	90 93 0a 05 	sts	0x050A, r25
    4870:	80 93 09 05 	sts	0x0509, r24
    4874:	41 e0       	ldi	r20, 0x01	; 1
    4876:	80 91 0b 05 	lds	r24, 0x050B
    487a:	90 91 0c 05 	lds	r25, 0x050C
    487e:	20 91 e7 04 	lds	r18, 0x04E7
    4882:	30 91 e8 04 	lds	r19, 0x04E8
    4886:	28 0f       	add	r18, r24
    4888:	39 1f       	adc	r19, r25
    488a:	30 93 0c 05 	sts	0x050C, r19
    488e:	20 93 0b 05 	sts	0x050B, r18
    4892:	80 91 0b 05 	lds	r24, 0x050B
    4896:	90 91 0c 05 	lds	r25, 0x050C
    489a:	88 5e       	subi	r24, 0xE8	; 232
    489c:	93 40       	sbci	r25, 0x03	; 3
    489e:	14 f4       	brge	.+4      	; 0x48a4 <STEPPER_clk+0x144>
    48a0:	60 e0       	ldi	r22, 0x00	; 0
    48a2:	0b c0       	rjmp	.+22     	; 0x48ba <STEPPER_clk+0x15a>
    48a4:	80 91 0b 05 	lds	r24, 0x050B
    48a8:	90 91 0c 05 	lds	r25, 0x050C
    48ac:	88 5e       	subi	r24, 0xE8	; 232
    48ae:	93 40       	sbci	r25, 0x03	; 3
    48b0:	90 93 0c 05 	sts	0x050C, r25
    48b4:	80 93 0b 05 	sts	0x050B, r24
    48b8:	61 e0       	ldi	r22, 0x01	; 1
    48ba:	84 2f       	mov	r24, r20
    48bc:	0e 94 a6 24 	call	0x494c	; 0x494c <STEPPER_process_run_mode>
    48c0:	08 95       	ret

000048c2 <STEPPER_process_accel>:
    48c2:	88 23       	and	r24, r24
    48c4:	f1 f0       	breq	.+60     	; 0x4902 <STEPPER_process_accel+0x40>
    48c6:	20 91 e1 04 	lds	r18, 0x04E1
    48ca:	30 91 e2 04 	lds	r19, 0x04E2
    48ce:	80 91 e5 04 	lds	r24, 0x04E5
    48d2:	90 91 e6 04 	lds	r25, 0x04E6
    48d6:	28 1b       	sub	r18, r24
    48d8:	39 0b       	sbc	r19, r25
    48da:	12 16       	cp	r1, r18
    48dc:	13 06       	cpc	r1, r19
    48de:	34 f4       	brge	.+12     	; 0x48ec <STEPPER_process_accel+0x2a>
    48e0:	80 91 e5 04 	lds	r24, 0x04E5
    48e4:	90 91 e6 04 	lds	r25, 0x04E6
    48e8:	01 96       	adiw	r24, 0x01	; 1
    48ea:	07 c0       	rjmp	.+14     	; 0x48fa <STEPPER_process_accel+0x38>
    48ec:	23 2b       	or	r18, r19
    48ee:	49 f0       	breq	.+18     	; 0x4902 <STEPPER_process_accel+0x40>
    48f0:	80 91 e5 04 	lds	r24, 0x04E5
    48f4:	90 91 e6 04 	lds	r25, 0x04E6
    48f8:	01 97       	sbiw	r24, 0x01	; 1
    48fa:	90 93 e6 04 	sts	0x04E6, r25
    48fe:	80 93 e5 04 	sts	0x04E5, r24
    4902:	66 23       	and	r22, r22
    4904:	11 f1       	breq	.+68     	; 0x494a <STEPPER_process_accel+0x88>
    4906:	20 91 e3 04 	lds	r18, 0x04E3
    490a:	30 91 e4 04 	lds	r19, 0x04E4
    490e:	80 91 e7 04 	lds	r24, 0x04E7
    4912:	90 91 e8 04 	lds	r25, 0x04E8
    4916:	28 1b       	sub	r18, r24
    4918:	39 0b       	sbc	r19, r25
    491a:	12 16       	cp	r1, r18
    491c:	13 06       	cpc	r1, r19
    491e:	54 f4       	brge	.+20     	; 0x4934 <STEPPER_process_accel+0x72>
    4920:	80 91 e7 04 	lds	r24, 0x04E7
    4924:	90 91 e8 04 	lds	r25, 0x04E8
    4928:	01 96       	adiw	r24, 0x01	; 1
    492a:	90 93 e8 04 	sts	0x04E8, r25
    492e:	80 93 e7 04 	sts	0x04E7, r24
    4932:	08 95       	ret
    4934:	23 2b       	or	r18, r19
    4936:	49 f0       	breq	.+18     	; 0x494a <STEPPER_process_accel+0x88>
    4938:	80 91 e7 04 	lds	r24, 0x04E7
    493c:	90 91 e8 04 	lds	r25, 0x04E8
    4940:	01 97       	sbiw	r24, 0x01	; 1
    4942:	90 93 e8 04 	sts	0x04E8, r25
    4946:	80 93 e7 04 	sts	0x04E7, r24
    494a:	08 95       	ret

0000494c <STEPPER_process_run_mode>:
    494c:	0f 93       	push	r16
    494e:	1f 93       	push	r17
    4950:	18 2f       	mov	r17, r24
    4952:	06 2f       	mov	r16, r22
    4954:	80 91 15 05 	lds	r24, 0x0515
    4958:	88 23       	and	r24, r24
    495a:	09 f0       	breq	.+2      	; 0x495e <STEPPER_process_run_mode+0x12>
    495c:	e7 c0       	rjmp	.+462    	; 0x4b2c <STEPPER_process_run_mode+0x1e0>
    495e:	80 91 fd 04 	lds	r24, 0x04FD
    4962:	88 23       	and	r24, r24
    4964:	09 f0       	breq	.+2      	; 0x4968 <STEPPER_process_run_mode+0x1c>
    4966:	5a c0       	rjmp	.+180    	; 0x4a1c <STEPPER_process_run_mode+0xd0>
    4968:	80 91 e5 04 	lds	r24, 0x04E5
    496c:	90 91 e6 04 	lds	r25, 0x04E6
    4970:	89 2b       	or	r24, r25
    4972:	e9 f4       	brne	.+58     	; 0x49ae <STEPPER_process_run_mode+0x62>
    4974:	80 91 e0 02 	lds	r24, 0x02E0
    4978:	83 7e       	andi	r24, 0xE3	; 227
    497a:	80 93 e0 02 	sts	0x02E0, r24
    497e:	10 92 06 05 	sts	0x0506, r1
    4982:	80 91 11 05 	lds	r24, 0x0511
    4986:	88 23       	and	r24, r24
    4988:	09 f4       	brne	.+2      	; 0x498c <STEPPER_process_run_mode+0x40>
    498a:	5d c0       	rjmp	.+186    	; 0x4a46 <STEPPER_process_run_mode+0xfa>
    498c:	60 91 ff 04 	lds	r22, 0x04FF
    4990:	80 e0       	ldi	r24, 0x00	; 0
    4992:	0e 94 fd 25 	call	0x4bfa	; 0x4bfa <STEPPER_stop>
    4996:	e0 91 13 05 	lds	r30, 0x0513
    499a:	f0 91 14 05 	lds	r31, 0x0514
    499e:	30 97       	sbiw	r30, 0x00	; 0
    49a0:	09 f4       	brne	.+2      	; 0x49a4 <STEPPER_process_run_mode+0x58>
    49a2:	51 c0       	rjmp	.+162    	; 0x4a46 <STEPPER_process_run_mode+0xfa>
    49a4:	81 e0       	ldi	r24, 0x01	; 1
    49a6:	80 83       	st	Z, r24
    49a8:	10 92 11 05 	sts	0x0511, r1
    49ac:	4c c0       	rjmp	.+152    	; 0x4a46 <STEPPER_process_run_mode+0xfa>
    49ae:	80 91 df 04 	lds	r24, 0x04DF
    49b2:	81 30       	cpi	r24, 0x01	; 1
    49b4:	41 f4       	brne	.+16     	; 0x49c6 <STEPPER_process_run_mode+0x7a>
    49b6:	80 91 f1 04 	lds	r24, 0x04F1
    49ba:	90 91 f2 04 	lds	r25, 0x04F2
    49be:	01 97       	sbiw	r24, 0x01	; 1
    49c0:	11 f4       	brne	.+4      	; 0x49c6 <STEPPER_process_run_mode+0x7a>
    49c2:	11 e0       	ldi	r17, 0x01	; 1
    49c4:	02 c0       	rjmp	.+4      	; 0x49ca <STEPPER_process_run_mode+0x7e>
    49c6:	11 23       	and	r17, r17
    49c8:	f1 f1       	breq	.+124    	; 0x4a46 <STEPPER_process_run_mode+0xfa>
    49ca:	e0 91 04 05 	lds	r30, 0x0504
    49ce:	f0 e0       	ldi	r31, 0x00	; 0
    49d0:	e7 51       	subi	r30, 0x17	; 23
    49d2:	fe 4f       	sbci	r31, 0xFE	; 254
    49d4:	90 91 e0 02 	lds	r25, 0x02E0
    49d8:	93 7e       	andi	r25, 0xE3	; 227
    49da:	80 81       	ld	r24, Z
    49dc:	89 2b       	or	r24, r25
    49de:	80 93 e0 02 	sts	0x02E0, r24
    49e2:	80 91 02 05 	lds	r24, 0x0502
    49e6:	88 23       	and	r24, r24
    49e8:	21 f4       	brne	.+8      	; 0x49f2 <STEPPER_process_run_mode+0xa6>
    49ea:	80 91 04 05 	lds	r24, 0x0504
    49ee:	8f 5f       	subi	r24, 0xFF	; 255
    49f0:	03 c0       	rjmp	.+6      	; 0x49f8 <STEPPER_process_run_mode+0xac>
    49f2:	80 91 04 05 	lds	r24, 0x0504
    49f6:	81 50       	subi	r24, 0x01	; 1
    49f8:	80 93 04 05 	sts	0x0504, r24
    49fc:	80 91 04 05 	lds	r24, 0x0504
    4a00:	83 70       	andi	r24, 0x03	; 3
    4a02:	80 93 04 05 	sts	0x0504, r24
    4a06:	81 e0       	ldi	r24, 0x01	; 1
    4a08:	80 93 06 05 	sts	0x0506, r24
    4a0c:	80 91 df 04 	lds	r24, 0x04DF
    4a10:	81 30       	cpi	r24, 0x01	; 1
    4a12:	c9 f4       	brne	.+50     	; 0x4a46 <STEPPER_process_run_mode+0xfa>
    4a14:	80 e0       	ldi	r24, 0x00	; 0
    4a16:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <STEPPER_process_step_mode>
    4a1a:	15 c0       	rjmp	.+42     	; 0x4a46 <STEPPER_process_run_mode+0xfa>
    4a1c:	90 91 e0 02 	lds	r25, 0x02E0
    4a20:	93 7e       	andi	r25, 0xE3	; 227
    4a22:	90 93 e0 02 	sts	0x02E0, r25
    4a26:	e0 91 04 05 	lds	r30, 0x0504
    4a2a:	f0 e0       	ldi	r31, 0x00	; 0
    4a2c:	e7 51       	subi	r30, 0x17	; 23
    4a2e:	fe 4f       	sbci	r31, 0xFE	; 254
    4a30:	80 81       	ld	r24, Z
    4a32:	89 2b       	or	r24, r25
    4a34:	80 93 e0 02 	sts	0x02E0, r24
    4a38:	82 e0       	ldi	r24, 0x02	; 2
    4a3a:	80 93 06 05 	sts	0x0506, r24
    4a3e:	10 92 e6 04 	sts	0x04E6, r1
    4a42:	10 92 e5 04 	sts	0x04E5, r1
    4a46:	80 91 fe 04 	lds	r24, 0x04FE
    4a4a:	88 23       	and	r24, r24
    4a4c:	09 f0       	breq	.+2      	; 0x4a50 <STEPPER_process_run_mode+0x104>
    4a4e:	59 c0       	rjmp	.+178    	; 0x4b02 <STEPPER_process_run_mode+0x1b6>
    4a50:	80 91 e7 04 	lds	r24, 0x04E7
    4a54:	90 91 e8 04 	lds	r25, 0x04E8
    4a58:	89 2b       	or	r24, r25
    4a5a:	e9 f4       	brne	.+58     	; 0x4a96 <STEPPER_process_run_mode+0x14a>
    4a5c:	80 91 e0 02 	lds	r24, 0x02E0
    4a60:	8f 71       	andi	r24, 0x1F	; 31
    4a62:	80 93 e0 02 	sts	0x02E0, r24
    4a66:	10 92 07 05 	sts	0x0507, r1
    4a6a:	80 91 12 05 	lds	r24, 0x0512
    4a6e:	88 23       	and	r24, r24
    4a70:	09 f4       	brne	.+2      	; 0x4a74 <STEPPER_process_run_mode+0x128>
    4a72:	5c c0       	rjmp	.+184    	; 0x4b2c <STEPPER_process_run_mode+0x1e0>
    4a74:	60 91 00 05 	lds	r22, 0x0500
    4a78:	81 e0       	ldi	r24, 0x01	; 1
    4a7a:	0e 94 fd 25 	call	0x4bfa	; 0x4bfa <STEPPER_stop>
    4a7e:	e0 91 13 05 	lds	r30, 0x0513
    4a82:	f0 91 14 05 	lds	r31, 0x0514
    4a86:	30 97       	sbiw	r30, 0x00	; 0
    4a88:	09 f4       	brne	.+2      	; 0x4a8c <STEPPER_process_run_mode+0x140>
    4a8a:	50 c0       	rjmp	.+160    	; 0x4b2c <STEPPER_process_run_mode+0x1e0>
    4a8c:	81 e0       	ldi	r24, 0x01	; 1
    4a8e:	81 83       	std	Z+1, r24	; 0x01
    4a90:	10 92 12 05 	sts	0x0512, r1
    4a94:	4b c0       	rjmp	.+150    	; 0x4b2c <STEPPER_process_run_mode+0x1e0>
    4a96:	80 91 e0 04 	lds	r24, 0x04E0
    4a9a:	81 30       	cpi	r24, 0x01	; 1
    4a9c:	41 f4       	brne	.+16     	; 0x4aae <STEPPER_process_run_mode+0x162>
    4a9e:	80 91 f3 04 	lds	r24, 0x04F3
    4aa2:	90 91 f4 04 	lds	r25, 0x04F4
    4aa6:	01 97       	sbiw	r24, 0x01	; 1
    4aa8:	11 f4       	brne	.+4      	; 0x4aae <STEPPER_process_run_mode+0x162>
    4aaa:	01 e0       	ldi	r16, 0x01	; 1
    4aac:	02 c0       	rjmp	.+4      	; 0x4ab2 <STEPPER_process_run_mode+0x166>
    4aae:	00 23       	and	r16, r16
    4ab0:	e9 f1       	breq	.+122    	; 0x4b2c <STEPPER_process_run_mode+0x1e0>
    4ab2:	e0 91 05 05 	lds	r30, 0x0505
    4ab6:	f0 e0       	ldi	r31, 0x00	; 0
    4ab8:	e3 51       	subi	r30, 0x13	; 19
    4aba:	fe 4f       	sbci	r31, 0xFE	; 254
    4abc:	90 91 e0 02 	lds	r25, 0x02E0
    4ac0:	9f 71       	andi	r25, 0x1F	; 31
    4ac2:	80 81       	ld	r24, Z
    4ac4:	89 2b       	or	r24, r25
    4ac6:	80 93 e0 02 	sts	0x02E0, r24
    4aca:	80 91 03 05 	lds	r24, 0x0503
    4ace:	88 23       	and	r24, r24
    4ad0:	21 f4       	brne	.+8      	; 0x4ada <STEPPER_process_run_mode+0x18e>
    4ad2:	80 91 05 05 	lds	r24, 0x0505
    4ad6:	8f 5f       	subi	r24, 0xFF	; 255
    4ad8:	03 c0       	rjmp	.+6      	; 0x4ae0 <STEPPER_process_run_mode+0x194>
    4ada:	80 91 05 05 	lds	r24, 0x0505
    4ade:	81 50       	subi	r24, 0x01	; 1
    4ae0:	80 93 05 05 	sts	0x0505, r24
    4ae4:	80 91 05 05 	lds	r24, 0x0505
    4ae8:	83 70       	andi	r24, 0x03	; 3
    4aea:	80 93 05 05 	sts	0x0505, r24
    4aee:	81 e0       	ldi	r24, 0x01	; 1
    4af0:	80 93 07 05 	sts	0x0507, r24
    4af4:	80 91 e0 04 	lds	r24, 0x04E0
    4af8:	81 30       	cpi	r24, 0x01	; 1
    4afa:	c1 f4       	brne	.+48     	; 0x4b2c <STEPPER_process_run_mode+0x1e0>
    4afc:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <STEPPER_process_step_mode>
    4b00:	15 c0       	rjmp	.+42     	; 0x4b2c <STEPPER_process_run_mode+0x1e0>
    4b02:	90 91 e0 02 	lds	r25, 0x02E0
    4b06:	9f 71       	andi	r25, 0x1F	; 31
    4b08:	90 93 e0 02 	sts	0x02E0, r25
    4b0c:	e0 91 05 05 	lds	r30, 0x0505
    4b10:	f0 e0       	ldi	r31, 0x00	; 0
    4b12:	e3 51       	subi	r30, 0x13	; 19
    4b14:	fe 4f       	sbci	r31, 0xFE	; 254
    4b16:	80 81       	ld	r24, Z
    4b18:	89 2b       	or	r24, r25
    4b1a:	80 93 e0 02 	sts	0x02E0, r24
    4b1e:	82 e0       	ldi	r24, 0x02	; 2
    4b20:	80 93 07 05 	sts	0x0507, r24
    4b24:	10 92 e8 04 	sts	0x04E8, r1
    4b28:	10 92 e7 04 	sts	0x04E7, r1
    4b2c:	80 91 08 05 	lds	r24, 0x0508
    4b30:	88 23       	and	r24, r24
    4b32:	31 f4       	brne	.+12     	; 0x4b40 <STEPPER_process_run_mode+0x1f4>
    4b34:	80 ee       	ldi	r24, 0xE0	; 224
    4b36:	92 e0       	ldi	r25, 0x02	; 2
    4b38:	61 2f       	mov	r22, r17
    4b3a:	40 2f       	mov	r20, r16
    4b3c:	0e 94 90 26 	call	0x4d20	; 0x4d20 <STEPPER_process_pwm>
    4b40:	88 b1       	in	r24, 0x08	; 8
    4b42:	83 70       	andi	r24, 0x03	; 3
    4b44:	90 91 e0 02 	lds	r25, 0x02E0
    4b48:	89 2b       	or	r24, r25
    4b4a:	88 b9       	out	0x08, r24	; 8
    4b4c:	1f 91       	pop	r17
    4b4e:	0f 91       	pop	r16
    4b50:	08 95       	ret

00004b52 <STEPPER_process_step_mode>:
    4b52:	88 23       	and	r24, r24
    4b54:	21 f0       	breq	.+8      	; 0x4b5e <STEPPER_process_step_mode+0xc>
    4b56:	81 30       	cpi	r24, 0x01	; 1
    4b58:	09 f0       	breq	.+2      	; 0x4b5c <STEPPER_process_step_mode+0xa>
    4b5a:	4e c0       	rjmp	.+156    	; 0x4bf8 <STEPPER_process_step_mode+0xa6>
    4b5c:	27 c0       	rjmp	.+78     	; 0x4bac <STEPPER_process_step_mode+0x5a>
    4b5e:	80 91 f1 04 	lds	r24, 0x04F1
    4b62:	90 91 f2 04 	lds	r25, 0x04F2
    4b66:	89 2b       	or	r24, r25
    4b68:	49 f0       	breq	.+18     	; 0x4b7c <STEPPER_process_step_mode+0x2a>
    4b6a:	80 91 f1 04 	lds	r24, 0x04F1
    4b6e:	90 91 f2 04 	lds	r25, 0x04F2
    4b72:	01 97       	sbiw	r24, 0x01	; 1
    4b74:	90 93 f2 04 	sts	0x04F2, r25
    4b78:	80 93 f1 04 	sts	0x04F1, r24
    4b7c:	80 91 11 05 	lds	r24, 0x0511
    4b80:	88 23       	and	r24, r24
    4b82:	d1 f5       	brne	.+116    	; 0x4bf8 <STEPPER_process_step_mode+0xa6>
    4b84:	20 91 f1 04 	lds	r18, 0x04F1
    4b88:	30 91 f2 04 	lds	r19, 0x04F2
    4b8c:	80 91 f5 04 	lds	r24, 0x04F5
    4b90:	90 91 f6 04 	lds	r25, 0x04F6
    4b94:	28 17       	cp	r18, r24
    4b96:	39 07       	cpc	r19, r25
    4b98:	79 f5       	brne	.+94     	; 0x4bf8 <STEPPER_process_step_mode+0xa6>
    4b9a:	80 e0       	ldi	r24, 0x00	; 0
    4b9c:	60 e0       	ldi	r22, 0x00	; 0
    4b9e:	70 e0       	ldi	r23, 0x00	; 0
    4ba0:	0e 94 b3 18 	call	0x3166	; 0x3166 <STEPPER_set_speed>
    4ba4:	81 e0       	ldi	r24, 0x01	; 1
    4ba6:	80 93 11 05 	sts	0x0511, r24
    4baa:	08 95       	ret
    4bac:	80 91 f3 04 	lds	r24, 0x04F3
    4bb0:	90 91 f4 04 	lds	r25, 0x04F4
    4bb4:	89 2b       	or	r24, r25
    4bb6:	49 f0       	breq	.+18     	; 0x4bca <STEPPER_process_step_mode+0x78>
    4bb8:	80 91 f3 04 	lds	r24, 0x04F3
    4bbc:	90 91 f4 04 	lds	r25, 0x04F4
    4bc0:	01 97       	sbiw	r24, 0x01	; 1
    4bc2:	90 93 f4 04 	sts	0x04F4, r25
    4bc6:	80 93 f3 04 	sts	0x04F3, r24
    4bca:	80 91 12 05 	lds	r24, 0x0512
    4bce:	88 23       	and	r24, r24
    4bd0:	99 f4       	brne	.+38     	; 0x4bf8 <STEPPER_process_step_mode+0xa6>
    4bd2:	20 91 f3 04 	lds	r18, 0x04F3
    4bd6:	30 91 f4 04 	lds	r19, 0x04F4
    4bda:	80 91 f7 04 	lds	r24, 0x04F7
    4bde:	90 91 f8 04 	lds	r25, 0x04F8
    4be2:	28 17       	cp	r18, r24
    4be4:	39 07       	cpc	r19, r25
    4be6:	41 f4       	brne	.+16     	; 0x4bf8 <STEPPER_process_step_mode+0xa6>
    4be8:	81 e0       	ldi	r24, 0x01	; 1
    4bea:	60 e0       	ldi	r22, 0x00	; 0
    4bec:	70 e0       	ldi	r23, 0x00	; 0
    4bee:	0e 94 b3 18 	call	0x3166	; 0x3166 <STEPPER_set_speed>
    4bf2:	81 e0       	ldi	r24, 0x01	; 1
    4bf4:	80 93 12 05 	sts	0x0512, r24
    4bf8:	08 95       	ret

00004bfa <STEPPER_stop>:
    4bfa:	0f 93       	push	r16
    4bfc:	1f 93       	push	r17
    4bfe:	18 2f       	mov	r17, r24
    4c00:	06 2f       	mov	r16, r22
    4c02:	66 23       	and	r22, r22
    4c04:	49 f4       	brne	.+18     	; 0x4c18 <STEPPER_stop+0x1e>
    4c06:	60 e0       	ldi	r22, 0x00	; 0
    4c08:	70 e0       	ldi	r23, 0x00	; 0
    4c0a:	0e 94 b3 18 	call	0x3166	; 0x3166 <STEPPER_set_speed>
    4c0e:	81 2f       	mov	r24, r17
    4c10:	60 e0       	ldi	r22, 0x00	; 0
    4c12:	70 e0       	ldi	r23, 0x00	; 0
    4c14:	0e 94 4d 21 	call	0x429a	; 0x429a <STEPPER_set_steps>
    4c18:	81 e0       	ldi	r24, 0x01	; 1
    4c1a:	80 93 15 05 	sts	0x0515, r24
    4c1e:	11 30       	cpi	r17, 0x01	; 1
    4c20:	51 f0       	breq	.+20     	; 0x4c36 <STEPPER_stop+0x3c>
    4c22:	11 30       	cpi	r17, 0x01	; 1
    4c24:	18 f0       	brcs	.+6      	; 0x4c2c <STEPPER_stop+0x32>
    4c26:	12 30       	cpi	r17, 0x02	; 2
    4c28:	41 f4       	brne	.+16     	; 0x4c3a <STEPPER_stop+0x40>
    4c2a:	03 c0       	rjmp	.+6      	; 0x4c32 <STEPPER_stop+0x38>
    4c2c:	00 93 fd 04 	sts	0x04FD, r16
    4c30:	04 c0       	rjmp	.+8      	; 0x4c3a <STEPPER_stop+0x40>
    4c32:	00 93 fd 04 	sts	0x04FD, r16
    4c36:	00 93 fe 04 	sts	0x04FE, r16
    4c3a:	10 92 15 05 	sts	0x0515, r1
    4c3e:	1f 91       	pop	r17
    4c40:	0f 91       	pop	r16
    4c42:	08 95       	ret

00004c44 <TMRSRVC_process>:
    4c44:	ff 92       	push	r15
    4c46:	0f 93       	push	r16
    4c48:	1f 93       	push	r17
    4c4a:	cf 93       	push	r28
    4c4c:	df 93       	push	r29
    4c4e:	80 91 4f 05 	lds	r24, 0x054F
    4c52:	88 23       	and	r24, r24
    4c54:	09 f4       	brne	.+2      	; 0x4c58 <TMRSRVC_process+0x14>
    4c56:	59 c0       	rjmp	.+178    	; 0x4d0a <TMRSRVC_process+0xc6>
    4c58:	00 91 50 05 	lds	r16, 0x0550
    4c5c:	10 91 51 05 	lds	r17, 0x0551
    4c60:	f8 01       	movw	r30, r16
    4c62:	c0 81       	ld	r28, Z
    4c64:	d1 81       	ldd	r29, Z+1	; 0x01
    4c66:	8c 81       	ldd	r24, Y+4	; 0x04
    4c68:	9d 81       	ldd	r25, Y+5	; 0x05
    4c6a:	01 97       	sbiw	r24, 0x01	; 1
    4c6c:	9d 83       	std	Y+5, r25	; 0x05
    4c6e:	8c 83       	std	Y+4, r24	; 0x04
    4c70:	18 16       	cp	r1, r24
    4c72:	19 06       	cpc	r1, r25
    4c74:	0c f4       	brge	.+2      	; 0x4c78 <TMRSRVC_process+0x34>
    4c76:	49 c0       	rjmp	.+146    	; 0x4d0a <TMRSRVC_process+0xc6>
    4c78:	89 81       	ldd	r24, Y+1	; 0x01
    4c7a:	80 ff       	sbrs	r24, 0
    4c7c:	05 c0       	rjmp	.+10     	; 0x4c88 <TMRSRVC_process+0x44>
    4c7e:	8e 81       	ldd	r24, Y+6	; 0x06
    4c80:	88 23       	and	r24, r24
    4c82:	11 f4       	brne	.+4      	; 0x4c88 <TMRSRVC_process+0x44>
    4c84:	81 e0       	ldi	r24, 0x01	; 1
    4c86:	8e 83       	std	Y+6, r24	; 0x06
    4c88:	89 81       	ldd	r24, Y+1	; 0x01
    4c8a:	81 ff       	sbrs	r24, 1
    4c8c:	03 c0       	rjmp	.+6      	; 0x4c94 <TMRSRVC_process+0x50>
    4c8e:	ef 81       	ldd	r30, Y+7	; 0x07
    4c90:	f8 85       	ldd	r31, Y+8	; 0x08
    4c92:	09 95       	icall
    4c94:	80 91 4f 05 	lds	r24, 0x054F
    4c98:	82 30       	cpi	r24, 0x02	; 2
    4c9a:	a8 f0       	brcs	.+42     	; 0x4cc6 <TMRSRVC_process+0x82>
    4c9c:	f8 01       	movw	r30, r16
    4c9e:	82 81       	ldd	r24, Z+2	; 0x02
    4ca0:	93 81       	ldd	r25, Z+3	; 0x03
    4ca2:	90 93 51 05 	sts	0x0551, r25
    4ca6:	80 93 50 05 	sts	0x0550, r24
    4caa:	13 82       	std	Z+3, r1	; 0x03
    4cac:	12 82       	std	Z+2, r1	; 0x02
    4cae:	e0 91 00 00 	lds	r30, 0x0000
    4cb2:	f0 91 01 00 	lds	r31, 0x0001
    4cb6:	84 81       	ldd	r24, Z+4	; 0x04
    4cb8:	95 81       	ldd	r25, Z+5	; 0x05
    4cba:	18 16       	cp	r1, r24
    4cbc:	19 06       	cpc	r1, r25
    4cbe:	3c f0       	brlt	.+14     	; 0x4cce <TMRSRVC_process+0x8a>
    4cc0:	ff 24       	eor	r15, r15
    4cc2:	f3 94       	inc	r15
    4cc4:	05 c0       	rjmp	.+10     	; 0x4cd0 <TMRSRVC_process+0x8c>
    4cc6:	10 92 51 05 	sts	0x0551, r1
    4cca:	10 92 50 05 	sts	0x0550, r1
    4cce:	ff 24       	eor	r15, r15
    4cd0:	80 91 4f 05 	lds	r24, 0x054F
    4cd4:	81 50       	subi	r24, 0x01	; 1
    4cd6:	80 93 4f 05 	sts	0x054F, r24
    4cda:	80 91 4f 05 	lds	r24, 0x054F
    4cde:	88 23       	and	r24, r24
    4ce0:	11 f4       	brne	.+4      	; 0x4ce6 <TMRSRVC_process+0xa2>
    4ce2:	0e 94 8d 26 	call	0x4d1a	; 0x4d1a <TMRSRVC_stop>
    4ce6:	89 81       	ldd	r24, Y+1	; 0x01
    4ce8:	82 ff       	sbrs	r24, 2
    4cea:	08 c0       	rjmp	.+16     	; 0x4cfc <TMRSRVC_process+0xb8>
    4cec:	8a 81       	ldd	r24, Y+2	; 0x02
    4cee:	9b 81       	ldd	r25, Y+3	; 0x03
    4cf0:	9d 83       	std	Y+5, r25	; 0x05
    4cf2:	8c 83       	std	Y+4, r24	; 0x04
    4cf4:	c8 01       	movw	r24, r16
    4cf6:	0e 94 dd 21 	call	0x43ba	; 0x43ba <TMRSRVC_insert>
    4cfa:	08 c0       	rjmp	.+16     	; 0x4d0c <TMRSRVC_process+0xc8>
    4cfc:	c8 01       	movw	r24, r16
    4cfe:	0e 94 96 2f 	call	0x5f2c	; 0x5f2c <free>
    4d02:	89 81       	ldd	r24, Y+1	; 0x01
    4d04:	8f 7e       	andi	r24, 0xEF	; 239
    4d06:	89 83       	std	Y+1, r24	; 0x01
    4d08:	01 c0       	rjmp	.+2      	; 0x4d0c <TMRSRVC_process+0xc8>
    4d0a:	ff 24       	eor	r15, r15
    4d0c:	8f 2d       	mov	r24, r15
    4d0e:	df 91       	pop	r29
    4d10:	cf 91       	pop	r28
    4d12:	1f 91       	pop	r17
    4d14:	0f 91       	pop	r16
    4d16:	ff 90       	pop	r15
    4d18:	08 95       	ret

00004d1a <TMRSRVC_stop>:
    4d1a:	10 92 df 02 	sts	0x02DF, r1
    4d1e:	08 95       	ret

00004d20 <STEPPER_process_pwm>:
    4d20:	fc 01       	movw	r30, r24
    4d22:	80 91 06 05 	lds	r24, 0x0506
    4d26:	82 30       	cpi	r24, 0x02	; 2
    4d28:	69 f4       	brne	.+26     	; 0x4d44 <STEPPER_process_pwm+0x24>
    4d2a:	80 91 e4 02 	lds	r24, 0x02E4
    4d2e:	91 e0       	ldi	r25, 0x01	; 1
    4d30:	89 27       	eor	r24, r25
    4d32:	80 93 e4 02 	sts	0x02E4, r24
    4d36:	88 23       	and	r24, r24
    4d38:	09 f0       	breq	.+2      	; 0x4d3c <STEPPER_process_pwm+0x1c>
    4d3a:	3e c0       	rjmp	.+124    	; 0x4db8 <STEPPER_process_pwm+0x98>
    4d3c:	80 81       	ld	r24, Z
    4d3e:	83 7e       	andi	r24, 0xE3	; 227
    4d40:	80 83       	st	Z, r24
    4d42:	3a c0       	rjmp	.+116    	; 0x4db8 <STEPPER_process_pwm+0x98>
    4d44:	80 91 e5 04 	lds	r24, 0x04E5
    4d48:	90 91 e6 04 	lds	r25, 0x04E6
    4d4c:	c3 97       	sbiw	r24, 0x33	; 51
    4d4e:	a4 f5       	brge	.+104    	; 0x4db8 <STEPPER_process_pwm+0x98>
    4d50:	66 23       	and	r22, r22
    4d52:	d1 f0       	breq	.+52     	; 0x4d88 <STEPPER_process_pwm+0x68>
    4d54:	20 91 e5 04 	lds	r18, 0x04E5
    4d58:	30 91 e6 04 	lds	r19, 0x04E6
    4d5c:	80 e6       	ldi	r24, 0x60	; 96
    4d5e:	90 e0       	ldi	r25, 0x00	; 0
    4d60:	bc 01       	movw	r22, r24
    4d62:	26 9f       	mul	r18, r22
    4d64:	c0 01       	movw	r24, r0
    4d66:	27 9f       	mul	r18, r23
    4d68:	90 0d       	add	r25, r0
    4d6a:	36 9f       	mul	r19, r22
    4d6c:	90 0d       	add	r25, r0
    4d6e:	11 24       	eor	r1, r1
    4d70:	88 0f       	add	r24, r24
    4d72:	89 2f       	mov	r24, r25
    4d74:	88 1f       	adc	r24, r24
    4d76:	99 0b       	sbc	r25, r25
    4d78:	90 93 fa 04 	sts	0x04FA, r25
    4d7c:	80 93 f9 04 	sts	0x04F9, r24
    4d80:	81 e0       	ldi	r24, 0x01	; 1
    4d82:	80 93 e2 02 	sts	0x02E2, r24
    4d86:	18 c0       	rjmp	.+48     	; 0x4db8 <STEPPER_process_pwm+0x98>
    4d88:	80 91 e2 02 	lds	r24, 0x02E2
    4d8c:	88 23       	and	r24, r24
    4d8e:	a1 f0       	breq	.+40     	; 0x4db8 <STEPPER_process_pwm+0x98>
    4d90:	80 91 f9 04 	lds	r24, 0x04F9
    4d94:	90 91 fa 04 	lds	r25, 0x04FA
    4d98:	01 97       	sbiw	r24, 0x01	; 1
    4d9a:	90 93 fa 04 	sts	0x04FA, r25
    4d9e:	80 93 f9 04 	sts	0x04F9, r24
    4da2:	80 91 f9 04 	lds	r24, 0x04F9
    4da6:	90 91 fa 04 	lds	r25, 0x04FA
    4daa:	89 2b       	or	r24, r25
    4dac:	29 f4       	brne	.+10     	; 0x4db8 <STEPPER_process_pwm+0x98>
    4dae:	80 81       	ld	r24, Z
    4db0:	83 7e       	andi	r24, 0xE3	; 227
    4db2:	80 83       	st	Z, r24
    4db4:	10 92 e2 02 	sts	0x02E2, r1
    4db8:	80 91 07 05 	lds	r24, 0x0507
    4dbc:	82 30       	cpi	r24, 0x02	; 2
    4dbe:	69 f4       	brne	.+26     	; 0x4dda <STEPPER_process_pwm+0xba>
    4dc0:	80 91 e3 02 	lds	r24, 0x02E3
    4dc4:	91 e0       	ldi	r25, 0x01	; 1
    4dc6:	89 27       	eor	r24, r25
    4dc8:	80 93 e3 02 	sts	0x02E3, r24
    4dcc:	88 23       	and	r24, r24
    4dce:	09 f0       	breq	.+2      	; 0x4dd2 <STEPPER_process_pwm+0xb2>
    4dd0:	3e c0       	rjmp	.+124    	; 0x4e4e <STEPPER_process_pwm+0x12e>
    4dd2:	80 81       	ld	r24, Z
    4dd4:	8f 71       	andi	r24, 0x1F	; 31
    4dd6:	80 83       	st	Z, r24
    4dd8:	08 95       	ret
    4dda:	80 91 e7 04 	lds	r24, 0x04E7
    4dde:	90 91 e8 04 	lds	r25, 0x04E8
    4de2:	c3 97       	sbiw	r24, 0x33	; 51
    4de4:	a4 f5       	brge	.+104    	; 0x4e4e <STEPPER_process_pwm+0x12e>
    4de6:	44 23       	and	r20, r20
    4de8:	d1 f0       	breq	.+52     	; 0x4e1e <STEPPER_process_pwm+0xfe>
    4dea:	20 91 e7 04 	lds	r18, 0x04E7
    4dee:	30 91 e8 04 	lds	r19, 0x04E8
    4df2:	80 e6       	ldi	r24, 0x60	; 96
    4df4:	90 e0       	ldi	r25, 0x00	; 0
    4df6:	ac 01       	movw	r20, r24
    4df8:	24 9f       	mul	r18, r20
    4dfa:	c0 01       	movw	r24, r0
    4dfc:	25 9f       	mul	r18, r21
    4dfe:	90 0d       	add	r25, r0
    4e00:	34 9f       	mul	r19, r20
    4e02:	90 0d       	add	r25, r0
    4e04:	11 24       	eor	r1, r1
    4e06:	88 0f       	add	r24, r24
    4e08:	89 2f       	mov	r24, r25
    4e0a:	88 1f       	adc	r24, r24
    4e0c:	99 0b       	sbc	r25, r25
    4e0e:	90 93 fc 04 	sts	0x04FC, r25
    4e12:	80 93 fb 04 	sts	0x04FB, r24
    4e16:	81 e0       	ldi	r24, 0x01	; 1
    4e18:	80 93 e1 02 	sts	0x02E1, r24
    4e1c:	08 95       	ret
    4e1e:	80 91 e1 02 	lds	r24, 0x02E1
    4e22:	88 23       	and	r24, r24
    4e24:	a1 f0       	breq	.+40     	; 0x4e4e <STEPPER_process_pwm+0x12e>
    4e26:	80 91 fb 04 	lds	r24, 0x04FB
    4e2a:	90 91 fc 04 	lds	r25, 0x04FC
    4e2e:	01 97       	sbiw	r24, 0x01	; 1
    4e30:	90 93 fc 04 	sts	0x04FC, r25
    4e34:	80 93 fb 04 	sts	0x04FB, r24
    4e38:	80 91 fb 04 	lds	r24, 0x04FB
    4e3c:	90 91 fc 04 	lds	r25, 0x04FC
    4e40:	89 2b       	or	r24, r25
    4e42:	29 f4       	brne	.+10     	; 0x4e4e <STEPPER_process_pwm+0x12e>
    4e44:	80 81       	ld	r24, Z
    4e46:	8f 71       	andi	r24, 0x1F	; 31
    4e48:	80 83       	st	Z, r24
    4e4a:	10 92 e1 02 	sts	0x02E1, r1
    4e4e:	08 95       	ret

00004e50 <__subsf3>:
    4e50:	50 58       	subi	r21, 0x80	; 128

00004e52 <__addsf3>:
    4e52:	bb 27       	eor	r27, r27
    4e54:	aa 27       	eor	r26, r26
    4e56:	0e d0       	rcall	.+28     	; 0x4e74 <__addsf3x>
    4e58:	75 c1       	rjmp	.+746    	; 0x5144 <__fp_round>
    4e5a:	66 d1       	rcall	.+716    	; 0x5128 <__fp_pscA>
    4e5c:	30 f0       	brcs	.+12     	; 0x4e6a <__addsf3+0x18>
    4e5e:	6b d1       	rcall	.+726    	; 0x5136 <__fp_pscB>
    4e60:	20 f0       	brcs	.+8      	; 0x4e6a <__addsf3+0x18>
    4e62:	31 f4       	brne	.+12     	; 0x4e70 <__addsf3+0x1e>
    4e64:	9f 3f       	cpi	r25, 0xFF	; 255
    4e66:	11 f4       	brne	.+4      	; 0x4e6c <__addsf3+0x1a>
    4e68:	1e f4       	brtc	.+6      	; 0x4e70 <__addsf3+0x1e>
    4e6a:	5b c1       	rjmp	.+694    	; 0x5122 <__fp_nan>
    4e6c:	0e f4       	brtc	.+2      	; 0x4e70 <__addsf3+0x1e>
    4e6e:	e0 95       	com	r30
    4e70:	e7 fb       	bst	r30, 7
    4e72:	51 c1       	rjmp	.+674    	; 0x5116 <__fp_inf>

00004e74 <__addsf3x>:
    4e74:	e9 2f       	mov	r30, r25
    4e76:	77 d1       	rcall	.+750    	; 0x5166 <__fp_split3>
    4e78:	80 f3       	brcs	.-32     	; 0x4e5a <__addsf3+0x8>
    4e7a:	ba 17       	cp	r27, r26
    4e7c:	62 07       	cpc	r22, r18
    4e7e:	73 07       	cpc	r23, r19
    4e80:	84 07       	cpc	r24, r20
    4e82:	95 07       	cpc	r25, r21
    4e84:	18 f0       	brcs	.+6      	; 0x4e8c <__addsf3x+0x18>
    4e86:	71 f4       	brne	.+28     	; 0x4ea4 <__addsf3x+0x30>
    4e88:	9e f5       	brtc	.+102    	; 0x4ef0 <__addsf3x+0x7c>
    4e8a:	8f c1       	rjmp	.+798    	; 0x51aa <__fp_zero>
    4e8c:	0e f4       	brtc	.+2      	; 0x4e90 <__addsf3x+0x1c>
    4e8e:	e0 95       	com	r30
    4e90:	0b 2e       	mov	r0, r27
    4e92:	ba 2f       	mov	r27, r26
    4e94:	a0 2d       	mov	r26, r0
    4e96:	0b 01       	movw	r0, r22
    4e98:	b9 01       	movw	r22, r18
    4e9a:	90 01       	movw	r18, r0
    4e9c:	0c 01       	movw	r0, r24
    4e9e:	ca 01       	movw	r24, r20
    4ea0:	a0 01       	movw	r20, r0
    4ea2:	11 24       	eor	r1, r1
    4ea4:	ff 27       	eor	r31, r31
    4ea6:	59 1b       	sub	r21, r25
    4ea8:	99 f0       	breq	.+38     	; 0x4ed0 <__addsf3x+0x5c>
    4eaa:	59 3f       	cpi	r21, 0xF9	; 249
    4eac:	50 f4       	brcc	.+20     	; 0x4ec2 <__addsf3x+0x4e>
    4eae:	50 3e       	cpi	r21, 0xE0	; 224
    4eb0:	68 f1       	brcs	.+90     	; 0x4f0c <__addsf3x+0x98>
    4eb2:	1a 16       	cp	r1, r26
    4eb4:	f0 40       	sbci	r31, 0x00	; 0
    4eb6:	a2 2f       	mov	r26, r18
    4eb8:	23 2f       	mov	r18, r19
    4eba:	34 2f       	mov	r19, r20
    4ebc:	44 27       	eor	r20, r20
    4ebe:	58 5f       	subi	r21, 0xF8	; 248
    4ec0:	f3 cf       	rjmp	.-26     	; 0x4ea8 <__addsf3x+0x34>
    4ec2:	46 95       	lsr	r20
    4ec4:	37 95       	ror	r19
    4ec6:	27 95       	ror	r18
    4ec8:	a7 95       	ror	r26
    4eca:	f0 40       	sbci	r31, 0x00	; 0
    4ecc:	53 95       	inc	r21
    4ece:	c9 f7       	brne	.-14     	; 0x4ec2 <__addsf3x+0x4e>
    4ed0:	7e f4       	brtc	.+30     	; 0x4ef0 <__addsf3x+0x7c>
    4ed2:	1f 16       	cp	r1, r31
    4ed4:	ba 0b       	sbc	r27, r26
    4ed6:	62 0b       	sbc	r22, r18
    4ed8:	73 0b       	sbc	r23, r19
    4eda:	84 0b       	sbc	r24, r20
    4edc:	ba f0       	brmi	.+46     	; 0x4f0c <__addsf3x+0x98>
    4ede:	91 50       	subi	r25, 0x01	; 1
    4ee0:	a1 f0       	breq	.+40     	; 0x4f0a <__addsf3x+0x96>
    4ee2:	ff 0f       	add	r31, r31
    4ee4:	bb 1f       	adc	r27, r27
    4ee6:	66 1f       	adc	r22, r22
    4ee8:	77 1f       	adc	r23, r23
    4eea:	88 1f       	adc	r24, r24
    4eec:	c2 f7       	brpl	.-16     	; 0x4ede <__addsf3x+0x6a>
    4eee:	0e c0       	rjmp	.+28     	; 0x4f0c <__addsf3x+0x98>
    4ef0:	ba 0f       	add	r27, r26
    4ef2:	62 1f       	adc	r22, r18
    4ef4:	73 1f       	adc	r23, r19
    4ef6:	84 1f       	adc	r24, r20
    4ef8:	48 f4       	brcc	.+18     	; 0x4f0c <__addsf3x+0x98>
    4efa:	87 95       	ror	r24
    4efc:	77 95       	ror	r23
    4efe:	67 95       	ror	r22
    4f00:	b7 95       	ror	r27
    4f02:	f7 95       	ror	r31
    4f04:	9e 3f       	cpi	r25, 0xFE	; 254
    4f06:	08 f0       	brcs	.+2      	; 0x4f0a <__addsf3x+0x96>
    4f08:	b3 cf       	rjmp	.-154    	; 0x4e70 <__addsf3+0x1e>
    4f0a:	93 95       	inc	r25
    4f0c:	88 0f       	add	r24, r24
    4f0e:	08 f0       	brcs	.+2      	; 0x4f12 <__addsf3x+0x9e>
    4f10:	99 27       	eor	r25, r25
    4f12:	ee 0f       	add	r30, r30
    4f14:	97 95       	ror	r25
    4f16:	87 95       	ror	r24
    4f18:	08 95       	ret

00004f1a <__cmpsf2>:
    4f1a:	d9 d0       	rcall	.+434    	; 0x50ce <__fp_cmp>
    4f1c:	08 f4       	brcc	.+2      	; 0x4f20 <__cmpsf2+0x6>
    4f1e:	81 e0       	ldi	r24, 0x01	; 1
    4f20:	08 95       	ret

00004f22 <__divsf3>:
    4f22:	0c d0       	rcall	.+24     	; 0x4f3c <__divsf3x>
    4f24:	0f c1       	rjmp	.+542    	; 0x5144 <__fp_round>
    4f26:	07 d1       	rcall	.+526    	; 0x5136 <__fp_pscB>
    4f28:	40 f0       	brcs	.+16     	; 0x4f3a <__divsf3+0x18>
    4f2a:	fe d0       	rcall	.+508    	; 0x5128 <__fp_pscA>
    4f2c:	30 f0       	brcs	.+12     	; 0x4f3a <__divsf3+0x18>
    4f2e:	21 f4       	brne	.+8      	; 0x4f38 <__divsf3+0x16>
    4f30:	5f 3f       	cpi	r21, 0xFF	; 255
    4f32:	19 f0       	breq	.+6      	; 0x4f3a <__divsf3+0x18>
    4f34:	f0 c0       	rjmp	.+480    	; 0x5116 <__fp_inf>
    4f36:	51 11       	cpse	r21, r1
    4f38:	39 c1       	rjmp	.+626    	; 0x51ac <__fp_szero>
    4f3a:	f3 c0       	rjmp	.+486    	; 0x5122 <__fp_nan>

00004f3c <__divsf3x>:
    4f3c:	14 d1       	rcall	.+552    	; 0x5166 <__fp_split3>
    4f3e:	98 f3       	brcs	.-26     	; 0x4f26 <__divsf3+0x4>

00004f40 <__divsf3_pse>:
    4f40:	99 23       	and	r25, r25
    4f42:	c9 f3       	breq	.-14     	; 0x4f36 <__divsf3+0x14>
    4f44:	55 23       	and	r21, r21
    4f46:	b1 f3       	breq	.-20     	; 0x4f34 <__divsf3+0x12>
    4f48:	95 1b       	sub	r25, r21
    4f4a:	55 0b       	sbc	r21, r21
    4f4c:	bb 27       	eor	r27, r27
    4f4e:	aa 27       	eor	r26, r26
    4f50:	62 17       	cp	r22, r18
    4f52:	73 07       	cpc	r23, r19
    4f54:	84 07       	cpc	r24, r20
    4f56:	38 f0       	brcs	.+14     	; 0x4f66 <__divsf3_pse+0x26>
    4f58:	9f 5f       	subi	r25, 0xFF	; 255
    4f5a:	5f 4f       	sbci	r21, 0xFF	; 255
    4f5c:	22 0f       	add	r18, r18
    4f5e:	33 1f       	adc	r19, r19
    4f60:	44 1f       	adc	r20, r20
    4f62:	aa 1f       	adc	r26, r26
    4f64:	a9 f3       	breq	.-22     	; 0x4f50 <__divsf3_pse+0x10>
    4f66:	33 d0       	rcall	.+102    	; 0x4fce <__divsf3_pse+0x8e>
    4f68:	0e 2e       	mov	r0, r30
    4f6a:	3a f0       	brmi	.+14     	; 0x4f7a <__divsf3_pse+0x3a>
    4f6c:	e0 e8       	ldi	r30, 0x80	; 128
    4f6e:	30 d0       	rcall	.+96     	; 0x4fd0 <__divsf3_pse+0x90>
    4f70:	91 50       	subi	r25, 0x01	; 1
    4f72:	50 40       	sbci	r21, 0x00	; 0
    4f74:	e6 95       	lsr	r30
    4f76:	00 1c       	adc	r0, r0
    4f78:	ca f7       	brpl	.-14     	; 0x4f6c <__divsf3_pse+0x2c>
    4f7a:	29 d0       	rcall	.+82     	; 0x4fce <__divsf3_pse+0x8e>
    4f7c:	fe 2f       	mov	r31, r30
    4f7e:	27 d0       	rcall	.+78     	; 0x4fce <__divsf3_pse+0x8e>
    4f80:	66 0f       	add	r22, r22
    4f82:	77 1f       	adc	r23, r23
    4f84:	88 1f       	adc	r24, r24
    4f86:	bb 1f       	adc	r27, r27
    4f88:	26 17       	cp	r18, r22
    4f8a:	37 07       	cpc	r19, r23
    4f8c:	48 07       	cpc	r20, r24
    4f8e:	ab 07       	cpc	r26, r27
    4f90:	b0 e8       	ldi	r27, 0x80	; 128
    4f92:	09 f0       	breq	.+2      	; 0x4f96 <__divsf3_pse+0x56>
    4f94:	bb 0b       	sbc	r27, r27
    4f96:	80 2d       	mov	r24, r0
    4f98:	bf 01       	movw	r22, r30
    4f9a:	ff 27       	eor	r31, r31
    4f9c:	93 58       	subi	r25, 0x83	; 131
    4f9e:	5f 4f       	sbci	r21, 0xFF	; 255
    4fa0:	2a f0       	brmi	.+10     	; 0x4fac <__divsf3_pse+0x6c>
    4fa2:	9e 3f       	cpi	r25, 0xFE	; 254
    4fa4:	51 05       	cpc	r21, r1
    4fa6:	68 f0       	brcs	.+26     	; 0x4fc2 <__divsf3_pse+0x82>
    4fa8:	b6 c0       	rjmp	.+364    	; 0x5116 <__fp_inf>
    4faa:	00 c1       	rjmp	.+512    	; 0x51ac <__fp_szero>
    4fac:	5f 3f       	cpi	r21, 0xFF	; 255
    4fae:	ec f3       	brlt	.-6      	; 0x4faa <__divsf3_pse+0x6a>
    4fb0:	98 3e       	cpi	r25, 0xE8	; 232
    4fb2:	dc f3       	brlt	.-10     	; 0x4faa <__divsf3_pse+0x6a>
    4fb4:	86 95       	lsr	r24
    4fb6:	77 95       	ror	r23
    4fb8:	67 95       	ror	r22
    4fba:	b7 95       	ror	r27
    4fbc:	f7 95       	ror	r31
    4fbe:	9f 5f       	subi	r25, 0xFF	; 255
    4fc0:	c9 f7       	brne	.-14     	; 0x4fb4 <__divsf3_pse+0x74>
    4fc2:	88 0f       	add	r24, r24
    4fc4:	91 1d       	adc	r25, r1
    4fc6:	96 95       	lsr	r25
    4fc8:	87 95       	ror	r24
    4fca:	97 f9       	bld	r25, 7
    4fcc:	08 95       	ret
    4fce:	e1 e0       	ldi	r30, 0x01	; 1
    4fd0:	66 0f       	add	r22, r22
    4fd2:	77 1f       	adc	r23, r23
    4fd4:	88 1f       	adc	r24, r24
    4fd6:	bb 1f       	adc	r27, r27
    4fd8:	62 17       	cp	r22, r18
    4fda:	73 07       	cpc	r23, r19
    4fdc:	84 07       	cpc	r24, r20
    4fde:	ba 07       	cpc	r27, r26
    4fe0:	20 f0       	brcs	.+8      	; 0x4fea <__divsf3_pse+0xaa>
    4fe2:	62 1b       	sub	r22, r18
    4fe4:	73 0b       	sbc	r23, r19
    4fe6:	84 0b       	sbc	r24, r20
    4fe8:	ba 0b       	sbc	r27, r26
    4fea:	ee 1f       	adc	r30, r30
    4fec:	88 f7       	brcc	.-30     	; 0x4fd0 <__divsf3_pse+0x90>
    4fee:	e0 95       	com	r30
    4ff0:	08 95       	ret

00004ff2 <__fixsfsi>:
    4ff2:	04 d0       	rcall	.+8      	; 0x4ffc <__fixunssfsi>
    4ff4:	68 94       	set
    4ff6:	b1 11       	cpse	r27, r1
    4ff8:	d9 c0       	rjmp	.+434    	; 0x51ac <__fp_szero>
    4ffa:	08 95       	ret

00004ffc <__fixunssfsi>:
    4ffc:	bc d0       	rcall	.+376    	; 0x5176 <__fp_splitA>
    4ffe:	88 f0       	brcs	.+34     	; 0x5022 <__fixunssfsi+0x26>
    5000:	9f 57       	subi	r25, 0x7F	; 127
    5002:	90 f0       	brcs	.+36     	; 0x5028 <__fixunssfsi+0x2c>
    5004:	b9 2f       	mov	r27, r25
    5006:	99 27       	eor	r25, r25
    5008:	b7 51       	subi	r27, 0x17	; 23
    500a:	a0 f0       	brcs	.+40     	; 0x5034 <__fixunssfsi+0x38>
    500c:	d1 f0       	breq	.+52     	; 0x5042 <__fixunssfsi+0x46>
    500e:	66 0f       	add	r22, r22
    5010:	77 1f       	adc	r23, r23
    5012:	88 1f       	adc	r24, r24
    5014:	99 1f       	adc	r25, r25
    5016:	1a f0       	brmi	.+6      	; 0x501e <__fixunssfsi+0x22>
    5018:	ba 95       	dec	r27
    501a:	c9 f7       	brne	.-14     	; 0x500e <__fixunssfsi+0x12>
    501c:	12 c0       	rjmp	.+36     	; 0x5042 <__fixunssfsi+0x46>
    501e:	b1 30       	cpi	r27, 0x01	; 1
    5020:	81 f0       	breq	.+32     	; 0x5042 <__fixunssfsi+0x46>
    5022:	c3 d0       	rcall	.+390    	; 0x51aa <__fp_zero>
    5024:	b1 e0       	ldi	r27, 0x01	; 1
    5026:	08 95       	ret
    5028:	c0 c0       	rjmp	.+384    	; 0x51aa <__fp_zero>
    502a:	67 2f       	mov	r22, r23
    502c:	78 2f       	mov	r23, r24
    502e:	88 27       	eor	r24, r24
    5030:	b8 5f       	subi	r27, 0xF8	; 248
    5032:	39 f0       	breq	.+14     	; 0x5042 <__fixunssfsi+0x46>
    5034:	b9 3f       	cpi	r27, 0xF9	; 249
    5036:	cc f3       	brlt	.-14     	; 0x502a <__fixunssfsi+0x2e>
    5038:	86 95       	lsr	r24
    503a:	77 95       	ror	r23
    503c:	67 95       	ror	r22
    503e:	b3 95       	inc	r27
    5040:	d9 f7       	brne	.-10     	; 0x5038 <__fixunssfsi+0x3c>
    5042:	3e f4       	brtc	.+14     	; 0x5052 <__fixunssfsi+0x56>
    5044:	90 95       	com	r25
    5046:	80 95       	com	r24
    5048:	70 95       	com	r23
    504a:	61 95       	neg	r22
    504c:	7f 4f       	sbci	r23, 0xFF	; 255
    504e:	8f 4f       	sbci	r24, 0xFF	; 255
    5050:	9f 4f       	sbci	r25, 0xFF	; 255
    5052:	08 95       	ret

00005054 <__floatunsisf>:
    5054:	e8 94       	clt
    5056:	09 c0       	rjmp	.+18     	; 0x506a <__floatsisf+0x12>

00005058 <__floatsisf>:
    5058:	97 fb       	bst	r25, 7
    505a:	3e f4       	brtc	.+14     	; 0x506a <__floatsisf+0x12>
    505c:	90 95       	com	r25
    505e:	80 95       	com	r24
    5060:	70 95       	com	r23
    5062:	61 95       	neg	r22
    5064:	7f 4f       	sbci	r23, 0xFF	; 255
    5066:	8f 4f       	sbci	r24, 0xFF	; 255
    5068:	9f 4f       	sbci	r25, 0xFF	; 255
    506a:	99 23       	and	r25, r25
    506c:	a9 f0       	breq	.+42     	; 0x5098 <__floatsisf+0x40>
    506e:	f9 2f       	mov	r31, r25
    5070:	96 e9       	ldi	r25, 0x96	; 150
    5072:	bb 27       	eor	r27, r27
    5074:	93 95       	inc	r25
    5076:	f6 95       	lsr	r31
    5078:	87 95       	ror	r24
    507a:	77 95       	ror	r23
    507c:	67 95       	ror	r22
    507e:	b7 95       	ror	r27
    5080:	f1 11       	cpse	r31, r1
    5082:	f8 cf       	rjmp	.-16     	; 0x5074 <__floatsisf+0x1c>
    5084:	fa f4       	brpl	.+62     	; 0x50c4 <__floatsisf+0x6c>
    5086:	bb 0f       	add	r27, r27
    5088:	11 f4       	brne	.+4      	; 0x508e <__floatsisf+0x36>
    508a:	60 ff       	sbrs	r22, 0
    508c:	1b c0       	rjmp	.+54     	; 0x50c4 <__floatsisf+0x6c>
    508e:	6f 5f       	subi	r22, 0xFF	; 255
    5090:	7f 4f       	sbci	r23, 0xFF	; 255
    5092:	8f 4f       	sbci	r24, 0xFF	; 255
    5094:	9f 4f       	sbci	r25, 0xFF	; 255
    5096:	16 c0       	rjmp	.+44     	; 0x50c4 <__floatsisf+0x6c>
    5098:	88 23       	and	r24, r24
    509a:	11 f0       	breq	.+4      	; 0x50a0 <__floatsisf+0x48>
    509c:	96 e9       	ldi	r25, 0x96	; 150
    509e:	11 c0       	rjmp	.+34     	; 0x50c2 <__floatsisf+0x6a>
    50a0:	77 23       	and	r23, r23
    50a2:	21 f0       	breq	.+8      	; 0x50ac <__floatsisf+0x54>
    50a4:	9e e8       	ldi	r25, 0x8E	; 142
    50a6:	87 2f       	mov	r24, r23
    50a8:	76 2f       	mov	r23, r22
    50aa:	05 c0       	rjmp	.+10     	; 0x50b6 <__floatsisf+0x5e>
    50ac:	66 23       	and	r22, r22
    50ae:	71 f0       	breq	.+28     	; 0x50cc <__floatsisf+0x74>
    50b0:	96 e8       	ldi	r25, 0x86	; 134
    50b2:	86 2f       	mov	r24, r22
    50b4:	70 e0       	ldi	r23, 0x00	; 0
    50b6:	60 e0       	ldi	r22, 0x00	; 0
    50b8:	2a f0       	brmi	.+10     	; 0x50c4 <__floatsisf+0x6c>
    50ba:	9a 95       	dec	r25
    50bc:	66 0f       	add	r22, r22
    50be:	77 1f       	adc	r23, r23
    50c0:	88 1f       	adc	r24, r24
    50c2:	da f7       	brpl	.-10     	; 0x50ba <__floatsisf+0x62>
    50c4:	88 0f       	add	r24, r24
    50c6:	96 95       	lsr	r25
    50c8:	87 95       	ror	r24
    50ca:	97 f9       	bld	r25, 7
    50cc:	08 95       	ret

000050ce <__fp_cmp>:
    50ce:	99 0f       	add	r25, r25
    50d0:	00 08       	sbc	r0, r0
    50d2:	55 0f       	add	r21, r21
    50d4:	aa 0b       	sbc	r26, r26
    50d6:	e0 e8       	ldi	r30, 0x80	; 128
    50d8:	fe ef       	ldi	r31, 0xFE	; 254
    50da:	16 16       	cp	r1, r22
    50dc:	17 06       	cpc	r1, r23
    50de:	e8 07       	cpc	r30, r24
    50e0:	f9 07       	cpc	r31, r25
    50e2:	c0 f0       	brcs	.+48     	; 0x5114 <__fp_cmp+0x46>
    50e4:	12 16       	cp	r1, r18
    50e6:	13 06       	cpc	r1, r19
    50e8:	e4 07       	cpc	r30, r20
    50ea:	f5 07       	cpc	r31, r21
    50ec:	98 f0       	brcs	.+38     	; 0x5114 <__fp_cmp+0x46>
    50ee:	62 1b       	sub	r22, r18
    50f0:	73 0b       	sbc	r23, r19
    50f2:	84 0b       	sbc	r24, r20
    50f4:	95 0b       	sbc	r25, r21
    50f6:	39 f4       	brne	.+14     	; 0x5106 <__fp_cmp+0x38>
    50f8:	0a 26       	eor	r0, r26
    50fa:	61 f0       	breq	.+24     	; 0x5114 <__fp_cmp+0x46>
    50fc:	23 2b       	or	r18, r19
    50fe:	24 2b       	or	r18, r20
    5100:	25 2b       	or	r18, r21
    5102:	21 f4       	brne	.+8      	; 0x510c <__fp_cmp+0x3e>
    5104:	08 95       	ret
    5106:	0a 26       	eor	r0, r26
    5108:	09 f4       	brne	.+2      	; 0x510c <__fp_cmp+0x3e>
    510a:	a1 40       	sbci	r26, 0x01	; 1
    510c:	a6 95       	lsr	r26
    510e:	8f ef       	ldi	r24, 0xFF	; 255
    5110:	81 1d       	adc	r24, r1
    5112:	81 1d       	adc	r24, r1
    5114:	08 95       	ret

00005116 <__fp_inf>:
    5116:	97 f9       	bld	r25, 7
    5118:	9f 67       	ori	r25, 0x7F	; 127
    511a:	80 e8       	ldi	r24, 0x80	; 128
    511c:	70 e0       	ldi	r23, 0x00	; 0
    511e:	60 e0       	ldi	r22, 0x00	; 0
    5120:	08 95       	ret

00005122 <__fp_nan>:
    5122:	9f ef       	ldi	r25, 0xFF	; 255
    5124:	80 ec       	ldi	r24, 0xC0	; 192
    5126:	08 95       	ret

00005128 <__fp_pscA>:
    5128:	00 24       	eor	r0, r0
    512a:	0a 94       	dec	r0
    512c:	16 16       	cp	r1, r22
    512e:	17 06       	cpc	r1, r23
    5130:	18 06       	cpc	r1, r24
    5132:	09 06       	cpc	r0, r25
    5134:	08 95       	ret

00005136 <__fp_pscB>:
    5136:	00 24       	eor	r0, r0
    5138:	0a 94       	dec	r0
    513a:	12 16       	cp	r1, r18
    513c:	13 06       	cpc	r1, r19
    513e:	14 06       	cpc	r1, r20
    5140:	05 06       	cpc	r0, r21
    5142:	08 95       	ret

00005144 <__fp_round>:
    5144:	09 2e       	mov	r0, r25
    5146:	03 94       	inc	r0
    5148:	00 0c       	add	r0, r0
    514a:	11 f4       	brne	.+4      	; 0x5150 <__fp_round+0xc>
    514c:	88 23       	and	r24, r24
    514e:	52 f0       	brmi	.+20     	; 0x5164 <__fp_round+0x20>
    5150:	bb 0f       	add	r27, r27
    5152:	40 f4       	brcc	.+16     	; 0x5164 <__fp_round+0x20>
    5154:	bf 2b       	or	r27, r31
    5156:	11 f4       	brne	.+4      	; 0x515c <__fp_round+0x18>
    5158:	60 ff       	sbrs	r22, 0
    515a:	04 c0       	rjmp	.+8      	; 0x5164 <__fp_round+0x20>
    515c:	6f 5f       	subi	r22, 0xFF	; 255
    515e:	7f 4f       	sbci	r23, 0xFF	; 255
    5160:	8f 4f       	sbci	r24, 0xFF	; 255
    5162:	9f 4f       	sbci	r25, 0xFF	; 255
    5164:	08 95       	ret

00005166 <__fp_split3>:
    5166:	57 fd       	sbrc	r21, 7
    5168:	90 58       	subi	r25, 0x80	; 128
    516a:	44 0f       	add	r20, r20
    516c:	55 1f       	adc	r21, r21
    516e:	59 f0       	breq	.+22     	; 0x5186 <__fp_splitA+0x10>
    5170:	5f 3f       	cpi	r21, 0xFF	; 255
    5172:	71 f0       	breq	.+28     	; 0x5190 <__fp_splitA+0x1a>
    5174:	47 95       	ror	r20

00005176 <__fp_splitA>:
    5176:	88 0f       	add	r24, r24
    5178:	97 fb       	bst	r25, 7
    517a:	99 1f       	adc	r25, r25
    517c:	61 f0       	breq	.+24     	; 0x5196 <__fp_splitA+0x20>
    517e:	9f 3f       	cpi	r25, 0xFF	; 255
    5180:	79 f0       	breq	.+30     	; 0x51a0 <__fp_splitA+0x2a>
    5182:	87 95       	ror	r24
    5184:	08 95       	ret
    5186:	12 16       	cp	r1, r18
    5188:	13 06       	cpc	r1, r19
    518a:	14 06       	cpc	r1, r20
    518c:	55 1f       	adc	r21, r21
    518e:	f2 cf       	rjmp	.-28     	; 0x5174 <__fp_split3+0xe>
    5190:	46 95       	lsr	r20
    5192:	f1 df       	rcall	.-30     	; 0x5176 <__fp_splitA>
    5194:	08 c0       	rjmp	.+16     	; 0x51a6 <__fp_splitA+0x30>
    5196:	16 16       	cp	r1, r22
    5198:	17 06       	cpc	r1, r23
    519a:	18 06       	cpc	r1, r24
    519c:	99 1f       	adc	r25, r25
    519e:	f1 cf       	rjmp	.-30     	; 0x5182 <__fp_splitA+0xc>
    51a0:	86 95       	lsr	r24
    51a2:	71 05       	cpc	r23, r1
    51a4:	61 05       	cpc	r22, r1
    51a6:	08 94       	sec
    51a8:	08 95       	ret

000051aa <__fp_zero>:
    51aa:	e8 94       	clt

000051ac <__fp_szero>:
    51ac:	bb 27       	eor	r27, r27
    51ae:	66 27       	eor	r22, r22
    51b0:	77 27       	eor	r23, r23
    51b2:	cb 01       	movw	r24, r22
    51b4:	97 f9       	bld	r25, 7
    51b6:	08 95       	ret

000051b8 <__gesf2>:
    51b8:	8a df       	rcall	.-236    	; 0x50ce <__fp_cmp>
    51ba:	08 f4       	brcc	.+2      	; 0x51be <__gesf2+0x6>
    51bc:	8f ef       	ldi	r24, 0xFF	; 255
    51be:	08 95       	ret

000051c0 <lrint>:
    51c0:	da df       	rcall	.-76     	; 0x5176 <__fp_splitA>
    51c2:	a8 f1       	brcs	.+106    	; 0x522e <lrint+0x6e>
    51c4:	9e 57       	subi	r25, 0x7E	; 126
    51c6:	a8 f1       	brcs	.+106    	; 0x5232 <lrint+0x72>
    51c8:	98 51       	subi	r25, 0x18	; 24
    51ca:	60 f0       	brcs	.+24     	; 0x51e4 <lrint+0x24>
    51cc:	39 f1       	breq	.+78     	; 0x521c <lrint+0x5c>
    51ce:	98 30       	cpi	r25, 0x08	; 8
    51d0:	70 f5       	brcc	.+92     	; 0x522e <lrint+0x6e>
    51d2:	09 2e       	mov	r0, r25
    51d4:	99 27       	eor	r25, r25
    51d6:	66 0f       	add	r22, r22
    51d8:	77 1f       	adc	r23, r23
    51da:	88 1f       	adc	r24, r24
    51dc:	99 1f       	adc	r25, r25
    51de:	0a 94       	dec	r0
    51e0:	d1 f7       	brne	.-12     	; 0x51d6 <lrint+0x16>
    51e2:	1c c0       	rjmp	.+56     	; 0x521c <lrint+0x5c>
    51e4:	bb 27       	eor	r27, r27
    51e6:	99 3f       	cpi	r25, 0xF9	; 249
    51e8:	4c f4       	brge	.+18     	; 0x51fc <lrint+0x3c>
    51ea:	b1 11       	cpse	r27, r1
    51ec:	b1 e0       	ldi	r27, 0x01	; 1
    51ee:	b6 2b       	or	r27, r22
    51f0:	67 2f       	mov	r22, r23
    51f2:	78 2f       	mov	r23, r24
    51f4:	88 27       	eor	r24, r24
    51f6:	98 5f       	subi	r25, 0xF8	; 248
    51f8:	b1 f7       	brne	.-20     	; 0x51e6 <lrint+0x26>
    51fa:	08 c0       	rjmp	.+16     	; 0x520c <lrint+0x4c>
    51fc:	86 95       	lsr	r24
    51fe:	77 95       	ror	r23
    5200:	67 95       	ror	r22
    5202:	b7 95       	ror	r27
    5204:	08 f4       	brcc	.+2      	; 0x5208 <lrint+0x48>
    5206:	b1 60       	ori	r27, 0x01	; 1
    5208:	93 95       	inc	r25
    520a:	c1 f7       	brne	.-16     	; 0x51fc <lrint+0x3c>
    520c:	bb 0f       	add	r27, r27
    520e:	30 f4       	brcc	.+12     	; 0x521c <lrint+0x5c>
    5210:	11 f4       	brne	.+4      	; 0x5216 <lrint+0x56>
    5212:	60 ff       	sbrs	r22, 0
    5214:	03 c0       	rjmp	.+6      	; 0x521c <lrint+0x5c>
    5216:	6f 5f       	subi	r22, 0xFF	; 255
    5218:	7f 4f       	sbci	r23, 0xFF	; 255
    521a:	8f 4f       	sbci	r24, 0xFF	; 255
    521c:	3e f4       	brtc	.+14     	; 0x522c <lrint+0x6c>
    521e:	90 95       	com	r25
    5220:	80 95       	com	r24
    5222:	70 95       	com	r23
    5224:	61 95       	neg	r22
    5226:	7f 4f       	sbci	r23, 0xFF	; 255
    5228:	8f 4f       	sbci	r24, 0xFF	; 255
    522a:	9f 4f       	sbci	r25, 0xFF	; 255
    522c:	08 95       	ret
    522e:	68 94       	set
    5230:	bd cf       	rjmp	.-134    	; 0x51ac <__fp_szero>
    5232:	bb cf       	rjmp	.-138    	; 0x51aa <__fp_zero>

00005234 <__mulsf3>:
    5234:	0b d0       	rcall	.+22     	; 0x524c <__mulsf3x>
    5236:	86 cf       	rjmp	.-244    	; 0x5144 <__fp_round>
    5238:	77 df       	rcall	.-274    	; 0x5128 <__fp_pscA>
    523a:	28 f0       	brcs	.+10     	; 0x5246 <__mulsf3+0x12>
    523c:	7c df       	rcall	.-264    	; 0x5136 <__fp_pscB>
    523e:	18 f0       	brcs	.+6      	; 0x5246 <__mulsf3+0x12>
    5240:	95 23       	and	r25, r21
    5242:	09 f0       	breq	.+2      	; 0x5246 <__mulsf3+0x12>
    5244:	68 cf       	rjmp	.-304    	; 0x5116 <__fp_inf>
    5246:	6d cf       	rjmp	.-294    	; 0x5122 <__fp_nan>
    5248:	11 24       	eor	r1, r1
    524a:	b0 cf       	rjmp	.-160    	; 0x51ac <__fp_szero>

0000524c <__mulsf3x>:
    524c:	8c df       	rcall	.-232    	; 0x5166 <__fp_split3>
    524e:	a0 f3       	brcs	.-24     	; 0x5238 <__mulsf3+0x4>

00005250 <__mulsf3_pse>:
    5250:	95 9f       	mul	r25, r21
    5252:	d1 f3       	breq	.-12     	; 0x5248 <__mulsf3+0x14>
    5254:	95 0f       	add	r25, r21
    5256:	50 e0       	ldi	r21, 0x00	; 0
    5258:	55 1f       	adc	r21, r21
    525a:	62 9f       	mul	r22, r18
    525c:	f0 01       	movw	r30, r0
    525e:	72 9f       	mul	r23, r18
    5260:	bb 27       	eor	r27, r27
    5262:	f0 0d       	add	r31, r0
    5264:	b1 1d       	adc	r27, r1
    5266:	63 9f       	mul	r22, r19
    5268:	aa 27       	eor	r26, r26
    526a:	f0 0d       	add	r31, r0
    526c:	b1 1d       	adc	r27, r1
    526e:	aa 1f       	adc	r26, r26
    5270:	64 9f       	mul	r22, r20
    5272:	66 27       	eor	r22, r22
    5274:	b0 0d       	add	r27, r0
    5276:	a1 1d       	adc	r26, r1
    5278:	66 1f       	adc	r22, r22
    527a:	82 9f       	mul	r24, r18
    527c:	22 27       	eor	r18, r18
    527e:	b0 0d       	add	r27, r0
    5280:	a1 1d       	adc	r26, r1
    5282:	62 1f       	adc	r22, r18
    5284:	73 9f       	mul	r23, r19
    5286:	b0 0d       	add	r27, r0
    5288:	a1 1d       	adc	r26, r1
    528a:	62 1f       	adc	r22, r18
    528c:	83 9f       	mul	r24, r19
    528e:	a0 0d       	add	r26, r0
    5290:	61 1d       	adc	r22, r1
    5292:	22 1f       	adc	r18, r18
    5294:	74 9f       	mul	r23, r20
    5296:	33 27       	eor	r19, r19
    5298:	a0 0d       	add	r26, r0
    529a:	61 1d       	adc	r22, r1
    529c:	23 1f       	adc	r18, r19
    529e:	84 9f       	mul	r24, r20
    52a0:	60 0d       	add	r22, r0
    52a2:	21 1d       	adc	r18, r1
    52a4:	82 2f       	mov	r24, r18
    52a6:	76 2f       	mov	r23, r22
    52a8:	6a 2f       	mov	r22, r26
    52aa:	11 24       	eor	r1, r1
    52ac:	9f 57       	subi	r25, 0x7F	; 127
    52ae:	50 40       	sbci	r21, 0x00	; 0
    52b0:	8a f0       	brmi	.+34     	; 0x52d4 <__mulsf3_pse+0x84>
    52b2:	e1 f0       	breq	.+56     	; 0x52ec <__mulsf3_pse+0x9c>
    52b4:	88 23       	and	r24, r24
    52b6:	4a f0       	brmi	.+18     	; 0x52ca <__mulsf3_pse+0x7a>
    52b8:	ee 0f       	add	r30, r30
    52ba:	ff 1f       	adc	r31, r31
    52bc:	bb 1f       	adc	r27, r27
    52be:	66 1f       	adc	r22, r22
    52c0:	77 1f       	adc	r23, r23
    52c2:	88 1f       	adc	r24, r24
    52c4:	91 50       	subi	r25, 0x01	; 1
    52c6:	50 40       	sbci	r21, 0x00	; 0
    52c8:	a9 f7       	brne	.-22     	; 0x52b4 <__mulsf3_pse+0x64>
    52ca:	9e 3f       	cpi	r25, 0xFE	; 254
    52cc:	51 05       	cpc	r21, r1
    52ce:	70 f0       	brcs	.+28     	; 0x52ec <__mulsf3_pse+0x9c>
    52d0:	22 cf       	rjmp	.-444    	; 0x5116 <__fp_inf>
    52d2:	6c cf       	rjmp	.-296    	; 0x51ac <__fp_szero>
    52d4:	5f 3f       	cpi	r21, 0xFF	; 255
    52d6:	ec f3       	brlt	.-6      	; 0x52d2 <__mulsf3_pse+0x82>
    52d8:	98 3e       	cpi	r25, 0xE8	; 232
    52da:	dc f3       	brlt	.-10     	; 0x52d2 <__mulsf3_pse+0x82>
    52dc:	86 95       	lsr	r24
    52de:	77 95       	ror	r23
    52e0:	67 95       	ror	r22
    52e2:	b7 95       	ror	r27
    52e4:	f7 95       	ror	r31
    52e6:	e7 95       	ror	r30
    52e8:	9f 5f       	subi	r25, 0xFF	; 255
    52ea:	c1 f7       	brne	.-16     	; 0x52dc <__mulsf3_pse+0x8c>
    52ec:	fe 2b       	or	r31, r30
    52ee:	88 0f       	add	r24, r24
    52f0:	91 1d       	adc	r25, r1
    52f2:	96 95       	lsr	r25
    52f4:	87 95       	ror	r24
    52f6:	97 f9       	bld	r25, 7
    52f8:	08 95       	ret

000052fa <pow>:
    52fa:	fa 01       	movw	r30, r20
    52fc:	ee 0f       	add	r30, r30
    52fe:	ff 1f       	adc	r31, r31
    5300:	30 96       	adiw	r30, 0x00	; 0
    5302:	21 05       	cpc	r18, r1
    5304:	31 05       	cpc	r19, r1
    5306:	99 f1       	breq	.+102    	; 0x536e <pow+0x74>
    5308:	61 15       	cp	r22, r1
    530a:	71 05       	cpc	r23, r1
    530c:	61 f4       	brne	.+24     	; 0x5326 <pow+0x2c>
    530e:	80 38       	cpi	r24, 0x80	; 128
    5310:	bf e3       	ldi	r27, 0x3F	; 63
    5312:	9b 07       	cpc	r25, r27
    5314:	49 f1       	breq	.+82     	; 0x5368 <pow+0x6e>
    5316:	68 94       	set
    5318:	90 38       	cpi	r25, 0x80	; 128
    531a:	81 05       	cpc	r24, r1
    531c:	61 f0       	breq	.+24     	; 0x5336 <pow+0x3c>
    531e:	80 38       	cpi	r24, 0x80	; 128
    5320:	bf ef       	ldi	r27, 0xFF	; 255
    5322:	9b 07       	cpc	r25, r27
    5324:	41 f0       	breq	.+16     	; 0x5336 <pow+0x3c>
    5326:	99 23       	and	r25, r25
    5328:	42 f5       	brpl	.+80     	; 0x537a <pow+0x80>
    532a:	ff 3f       	cpi	r31, 0xFF	; 255
    532c:	e1 05       	cpc	r30, r1
    532e:	31 05       	cpc	r19, r1
    5330:	21 05       	cpc	r18, r1
    5332:	11 f1       	breq	.+68     	; 0x5378 <pow+0x7e>
    5334:	e8 94       	clt
    5336:	08 94       	sec
    5338:	e7 95       	ror	r30
    533a:	d9 01       	movw	r26, r18
    533c:	aa 23       	and	r26, r26
    533e:	29 f4       	brne	.+10     	; 0x534a <pow+0x50>
    5340:	ab 2f       	mov	r26, r27
    5342:	be 2f       	mov	r27, r30
    5344:	f8 5f       	subi	r31, 0xF8	; 248
    5346:	d0 f3       	brcs	.-12     	; 0x533c <pow+0x42>
    5348:	10 c0       	rjmp	.+32     	; 0x536a <pow+0x70>
    534a:	ff 5f       	subi	r31, 0xFF	; 255
    534c:	70 f4       	brcc	.+28     	; 0x536a <pow+0x70>
    534e:	a6 95       	lsr	r26
    5350:	e0 f7       	brcc	.-8      	; 0x534a <pow+0x50>
    5352:	f7 39       	cpi	r31, 0x97	; 151
    5354:	50 f0       	brcs	.+20     	; 0x536a <pow+0x70>
    5356:	19 f0       	breq	.+6      	; 0x535e <pow+0x64>
    5358:	ff 3a       	cpi	r31, 0xAF	; 175
    535a:	38 f4       	brcc	.+14     	; 0x536a <pow+0x70>
    535c:	9f 77       	andi	r25, 0x7F	; 127
    535e:	9f 93       	push	r25
    5360:	0c d0       	rcall	.+24     	; 0x537a <pow+0x80>
    5362:	0f 90       	pop	r0
    5364:	07 fc       	sbrc	r0, 7
    5366:	90 58       	subi	r25, 0x80	; 128
    5368:	08 95       	ret
    536a:	3e f0       	brts	.+14     	; 0x537a <pow+0x80>
    536c:	da ce       	rjmp	.-588    	; 0x5122 <__fp_nan>
    536e:	60 e0       	ldi	r22, 0x00	; 0
    5370:	70 e0       	ldi	r23, 0x00	; 0
    5372:	80 e8       	ldi	r24, 0x80	; 128
    5374:	9f e3       	ldi	r25, 0x3F	; 63
    5376:	08 95       	ret
    5378:	4f e7       	ldi	r20, 0x7F	; 127
    537a:	9f 77       	andi	r25, 0x7F	; 127
    537c:	5f 93       	push	r21
    537e:	4f 93       	push	r20
    5380:	3f 93       	push	r19
    5382:	2f 93       	push	r18
    5384:	9e d0       	rcall	.+316    	; 0x54c2 <log>
    5386:	2f 91       	pop	r18
    5388:	3f 91       	pop	r19
    538a:	4f 91       	pop	r20
    538c:	5f 91       	pop	r21
    538e:	52 df       	rcall	.-348    	; 0x5234 <__mulsf3>
    5390:	05 c0       	rjmp	.+10     	; 0x539c <exp>
    5392:	19 f4       	brne	.+6      	; 0x539a <pow+0xa0>
    5394:	0e f0       	brts	.+2      	; 0x5398 <pow+0x9e>
    5396:	bf ce       	rjmp	.-642    	; 0x5116 <__fp_inf>
    5398:	08 cf       	rjmp	.-496    	; 0x51aa <__fp_zero>
    539a:	c3 ce       	rjmp	.-634    	; 0x5122 <__fp_nan>

0000539c <exp>:
    539c:	ec de       	rcall	.-552    	; 0x5176 <__fp_splitA>
    539e:	c8 f3       	brcs	.-14     	; 0x5392 <pow+0x98>
    53a0:	96 38       	cpi	r25, 0x86	; 134
    53a2:	c0 f7       	brcc	.-16     	; 0x5394 <pow+0x9a>
    53a4:	07 f8       	bld	r0, 7
    53a6:	0f 92       	push	r0
    53a8:	e8 94       	clt
    53aa:	2b e3       	ldi	r18, 0x3B	; 59
    53ac:	3a ea       	ldi	r19, 0xAA	; 170
    53ae:	48 eb       	ldi	r20, 0xB8	; 184
    53b0:	5f e7       	ldi	r21, 0x7F	; 127
    53b2:	4e df       	rcall	.-356    	; 0x5250 <__mulsf3_pse>
    53b4:	0f 92       	push	r0
    53b6:	0f 92       	push	r0
    53b8:	0f 92       	push	r0
    53ba:	4d b7       	in	r20, 0x3d	; 61
    53bc:	5e b7       	in	r21, 0x3e	; 62
    53be:	0f 92       	push	r0
    53c0:	c0 d0       	rcall	.+384    	; 0x5542 <modf>
    53c2:	e8 ec       	ldi	r30, 0xC8	; 200
    53c4:	f0 e0       	ldi	r31, 0x00	; 0
    53c6:	16 d0       	rcall	.+44     	; 0x53f4 <__fp_powser>
    53c8:	4f 91       	pop	r20
    53ca:	5f 91       	pop	r21
    53cc:	ef 91       	pop	r30
    53ce:	ff 91       	pop	r31
    53d0:	e5 95       	asr	r30
    53d2:	ee 1f       	adc	r30, r30
    53d4:	ff 1f       	adc	r31, r31
    53d6:	49 f0       	breq	.+18     	; 0x53ea <exp+0x4e>
    53d8:	fe 57       	subi	r31, 0x7E	; 126
    53da:	e0 68       	ori	r30, 0x80	; 128
    53dc:	44 27       	eor	r20, r20
    53de:	ee 0f       	add	r30, r30
    53e0:	44 1f       	adc	r20, r20
    53e2:	fa 95       	dec	r31
    53e4:	e1 f7       	brne	.-8      	; 0x53de <exp+0x42>
    53e6:	41 95       	neg	r20
    53e8:	55 0b       	sbc	r21, r21
    53ea:	32 d0       	rcall	.+100    	; 0x5450 <ldexp>
    53ec:	0f 90       	pop	r0
    53ee:	07 fe       	sbrs	r0, 7
    53f0:	26 c0       	rjmp	.+76     	; 0x543e <inverse>
    53f2:	08 95       	ret

000053f4 <__fp_powser>:
    53f4:	df 93       	push	r29
    53f6:	cf 93       	push	r28
    53f8:	1f 93       	push	r17
    53fa:	0f 93       	push	r16
    53fc:	ff 92       	push	r15
    53fe:	ef 92       	push	r14
    5400:	df 92       	push	r13
    5402:	7b 01       	movw	r14, r22
    5404:	8c 01       	movw	r16, r24
    5406:	68 94       	set
    5408:	05 c0       	rjmp	.+10     	; 0x5414 <__fp_powser+0x20>
    540a:	da 2e       	mov	r13, r26
    540c:	ef 01       	movw	r28, r30
    540e:	1e df       	rcall	.-452    	; 0x524c <__mulsf3x>
    5410:	fe 01       	movw	r30, r28
    5412:	e8 94       	clt
    5414:	a5 91       	lpm	r26, Z+
    5416:	25 91       	lpm	r18, Z+
    5418:	35 91       	lpm	r19, Z+
    541a:	45 91       	lpm	r20, Z+
    541c:	55 91       	lpm	r21, Z+
    541e:	ae f3       	brts	.-22     	; 0x540a <__fp_powser+0x16>
    5420:	ef 01       	movw	r28, r30
    5422:	28 dd       	rcall	.-1456   	; 0x4e74 <__addsf3x>
    5424:	fe 01       	movw	r30, r28
    5426:	97 01       	movw	r18, r14
    5428:	a8 01       	movw	r20, r16
    542a:	da 94       	dec	r13
    542c:	79 f7       	brne	.-34     	; 0x540c <__fp_powser+0x18>
    542e:	df 90       	pop	r13
    5430:	ef 90       	pop	r14
    5432:	ff 90       	pop	r15
    5434:	0f 91       	pop	r16
    5436:	1f 91       	pop	r17
    5438:	cf 91       	pop	r28
    543a:	df 91       	pop	r29
    543c:	08 95       	ret

0000543e <inverse>:
    543e:	9b 01       	movw	r18, r22
    5440:	ac 01       	movw	r20, r24
    5442:	60 e0       	ldi	r22, 0x00	; 0
    5444:	70 e0       	ldi	r23, 0x00	; 0
    5446:	80 e8       	ldi	r24, 0x80	; 128
    5448:	9f e3       	ldi	r25, 0x3F	; 63
    544a:	6b cd       	rjmp	.-1322   	; 0x4f22 <__divsf3>
    544c:	64 ce       	rjmp	.-824    	; 0x5116 <__fp_inf>
    544e:	ac c0       	rjmp	.+344    	; 0x55a8 <__fp_mpack>

00005450 <ldexp>:
    5450:	92 de       	rcall	.-732    	; 0x5176 <__fp_splitA>
    5452:	e8 f3       	brcs	.-6      	; 0x544e <inverse+0x10>
    5454:	99 23       	and	r25, r25
    5456:	d9 f3       	breq	.-10     	; 0x544e <inverse+0x10>
    5458:	94 0f       	add	r25, r20
    545a:	51 1d       	adc	r21, r1
    545c:	bb f3       	brvs	.-18     	; 0x544c <inverse+0xe>
    545e:	91 50       	subi	r25, 0x01	; 1
    5460:	50 40       	sbci	r21, 0x00	; 0
    5462:	94 f0       	brlt	.+36     	; 0x5488 <ldexp+0x38>
    5464:	59 f0       	breq	.+22     	; 0x547c <ldexp+0x2c>
    5466:	88 23       	and	r24, r24
    5468:	32 f0       	brmi	.+12     	; 0x5476 <ldexp+0x26>
    546a:	66 0f       	add	r22, r22
    546c:	77 1f       	adc	r23, r23
    546e:	88 1f       	adc	r24, r24
    5470:	91 50       	subi	r25, 0x01	; 1
    5472:	50 40       	sbci	r21, 0x00	; 0
    5474:	c1 f7       	brne	.-16     	; 0x5466 <ldexp+0x16>
    5476:	9e 3f       	cpi	r25, 0xFE	; 254
    5478:	51 05       	cpc	r21, r1
    547a:	44 f7       	brge	.-48     	; 0x544c <inverse+0xe>
    547c:	88 0f       	add	r24, r24
    547e:	91 1d       	adc	r25, r1
    5480:	96 95       	lsr	r25
    5482:	87 95       	ror	r24
    5484:	97 f9       	bld	r25, 7
    5486:	08 95       	ret
    5488:	5f 3f       	cpi	r21, 0xFF	; 255
    548a:	ac f0       	brlt	.+42     	; 0x54b6 <ldexp+0x66>
    548c:	98 3e       	cpi	r25, 0xE8	; 232
    548e:	9c f0       	brlt	.+38     	; 0x54b6 <ldexp+0x66>
    5490:	bb 27       	eor	r27, r27
    5492:	86 95       	lsr	r24
    5494:	77 95       	ror	r23
    5496:	67 95       	ror	r22
    5498:	b7 95       	ror	r27
    549a:	08 f4       	brcc	.+2      	; 0x549e <ldexp+0x4e>
    549c:	b1 60       	ori	r27, 0x01	; 1
    549e:	93 95       	inc	r25
    54a0:	c1 f7       	brne	.-16     	; 0x5492 <ldexp+0x42>
    54a2:	bb 0f       	add	r27, r27
    54a4:	58 f7       	brcc	.-42     	; 0x547c <ldexp+0x2c>
    54a6:	11 f4       	brne	.+4      	; 0x54ac <ldexp+0x5c>
    54a8:	60 ff       	sbrs	r22, 0
    54aa:	e8 cf       	rjmp	.-48     	; 0x547c <ldexp+0x2c>
    54ac:	6f 5f       	subi	r22, 0xFF	; 255
    54ae:	7f 4f       	sbci	r23, 0xFF	; 255
    54b0:	8f 4f       	sbci	r24, 0xFF	; 255
    54b2:	9f 4f       	sbci	r25, 0xFF	; 255
    54b4:	e3 cf       	rjmp	.-58     	; 0x547c <ldexp+0x2c>
    54b6:	7a ce       	rjmp	.-780    	; 0x51ac <__fp_szero>
    54b8:	0e f0       	brts	.+2      	; 0x54bc <ldexp+0x6c>
    54ba:	76 c0       	rjmp	.+236    	; 0x55a8 <__fp_mpack>
    54bc:	32 ce       	rjmp	.-924    	; 0x5122 <__fp_nan>
    54be:	68 94       	set
    54c0:	2a ce       	rjmp	.-940    	; 0x5116 <__fp_inf>

000054c2 <log>:
    54c2:	59 de       	rcall	.-846    	; 0x5176 <__fp_splitA>
    54c4:	c8 f3       	brcs	.-14     	; 0x54b8 <ldexp+0x68>
    54c6:	99 23       	and	r25, r25
    54c8:	d1 f3       	breq	.-12     	; 0x54be <ldexp+0x6e>
    54ca:	c6 f3       	brts	.-16     	; 0x54bc <ldexp+0x6c>
    54cc:	df 93       	push	r29
    54ce:	cf 93       	push	r28
    54d0:	1f 93       	push	r17
    54d2:	0f 93       	push	r16
    54d4:	ff 92       	push	r15
    54d6:	c9 2f       	mov	r28, r25
    54d8:	dd 27       	eor	r29, r29
    54da:	88 23       	and	r24, r24
    54dc:	2a f0       	brmi	.+10     	; 0x54e8 <log+0x26>
    54de:	21 97       	sbiw	r28, 0x01	; 1
    54e0:	66 0f       	add	r22, r22
    54e2:	77 1f       	adc	r23, r23
    54e4:	88 1f       	adc	r24, r24
    54e6:	da f7       	brpl	.-10     	; 0x54de <log+0x1c>
    54e8:	20 e0       	ldi	r18, 0x00	; 0
    54ea:	30 e0       	ldi	r19, 0x00	; 0
    54ec:	40 e8       	ldi	r20, 0x80	; 128
    54ee:	5f eb       	ldi	r21, 0xBF	; 191
    54f0:	9f e3       	ldi	r25, 0x3F	; 63
    54f2:	88 39       	cpi	r24, 0x98	; 152
    54f4:	20 f0       	brcs	.+8      	; 0x54fe <log+0x3c>
    54f6:	80 3e       	cpi	r24, 0xE0	; 224
    54f8:	30 f0       	brcs	.+12     	; 0x5506 <log+0x44>
    54fa:	21 96       	adiw	r28, 0x01	; 1
    54fc:	8f 77       	andi	r24, 0x7F	; 127
    54fe:	a9 dc       	rcall	.-1710   	; 0x4e52 <__addsf3>
    5500:	e0 ef       	ldi	r30, 0xF0	; 240
    5502:	f0 e0       	ldi	r31, 0x00	; 0
    5504:	03 c0       	rjmp	.+6      	; 0x550c <log+0x4a>
    5506:	a5 dc       	rcall	.-1718   	; 0x4e52 <__addsf3>
    5508:	ed e1       	ldi	r30, 0x1D	; 29
    550a:	f1 e0       	ldi	r31, 0x01	; 1
    550c:	73 df       	rcall	.-282    	; 0x53f4 <__fp_powser>
    550e:	8b 01       	movw	r16, r22
    5510:	be 01       	movw	r22, r28
    5512:	ec 01       	movw	r28, r24
    5514:	fb 2e       	mov	r15, r27
    5516:	6f 57       	subi	r22, 0x7F	; 127
    5518:	71 09       	sbc	r23, r1
    551a:	75 95       	asr	r23
    551c:	77 1f       	adc	r23, r23
    551e:	88 0b       	sbc	r24, r24
    5520:	99 0b       	sbc	r25, r25
    5522:	9a dd       	rcall	.-1228   	; 0x5058 <__floatsisf>
    5524:	28 e1       	ldi	r18, 0x18	; 24
    5526:	32 e7       	ldi	r19, 0x72	; 114
    5528:	41 e3       	ldi	r20, 0x31	; 49
    552a:	5f e3       	ldi	r21, 0x3F	; 63
    552c:	8f de       	rcall	.-738    	; 0x524c <__mulsf3x>
    552e:	af 2d       	mov	r26, r15
    5530:	98 01       	movw	r18, r16
    5532:	ae 01       	movw	r20, r28
    5534:	ff 90       	pop	r15
    5536:	0f 91       	pop	r16
    5538:	1f 91       	pop	r17
    553a:	cf 91       	pop	r28
    553c:	df 91       	pop	r29
    553e:	9a dc       	rcall	.-1740   	; 0x4e74 <__addsf3x>
    5540:	01 ce       	rjmp	.-1022   	; 0x5144 <__fp_round>

00005542 <modf>:
    5542:	fa 01       	movw	r30, r20
    5544:	dc 01       	movw	r26, r24
    5546:	aa 0f       	add	r26, r26
    5548:	bb 1f       	adc	r27, r27
    554a:	9b 01       	movw	r18, r22
    554c:	ac 01       	movw	r20, r24
    554e:	bf 57       	subi	r27, 0x7F	; 127
    5550:	28 f4       	brcc	.+10     	; 0x555c <modf+0x1a>
    5552:	22 27       	eor	r18, r18
    5554:	33 27       	eor	r19, r19
    5556:	44 27       	eor	r20, r20
    5558:	50 78       	andi	r21, 0x80	; 128
    555a:	1f c0       	rjmp	.+62     	; 0x559a <modf+0x58>
    555c:	b7 51       	subi	r27, 0x17	; 23
    555e:	88 f4       	brcc	.+34     	; 0x5582 <modf+0x40>
    5560:	ab 2f       	mov	r26, r27
    5562:	00 24       	eor	r0, r0
    5564:	46 95       	lsr	r20
    5566:	37 95       	ror	r19
    5568:	27 95       	ror	r18
    556a:	01 1c       	adc	r0, r1
    556c:	a3 95       	inc	r26
    556e:	d2 f3       	brmi	.-12     	; 0x5564 <modf+0x22>
    5570:	00 20       	and	r0, r0
    5572:	69 f0       	breq	.+26     	; 0x558e <modf+0x4c>
    5574:	22 0f       	add	r18, r18
    5576:	33 1f       	adc	r19, r19
    5578:	44 1f       	adc	r20, r20
    557a:	b3 95       	inc	r27
    557c:	da f3       	brmi	.-10     	; 0x5574 <modf+0x32>
    557e:	0d d0       	rcall	.+26     	; 0x559a <modf+0x58>
    5580:	67 cc       	rjmp	.-1842   	; 0x4e50 <__subsf3>
    5582:	61 30       	cpi	r22, 0x01	; 1
    5584:	71 05       	cpc	r23, r1
    5586:	a0 e8       	ldi	r26, 0x80	; 128
    5588:	8a 07       	cpc	r24, r26
    558a:	b9 46       	sbci	r27, 0x69	; 105
    558c:	30 f4       	brcc	.+12     	; 0x559a <modf+0x58>
    558e:	9b 01       	movw	r18, r22
    5590:	ac 01       	movw	r20, r24
    5592:	66 27       	eor	r22, r22
    5594:	77 27       	eor	r23, r23
    5596:	88 27       	eor	r24, r24
    5598:	90 78       	andi	r25, 0x80	; 128
    559a:	30 96       	adiw	r30, 0x00	; 0
    559c:	21 f0       	breq	.+8      	; 0x55a6 <modf+0x64>
    559e:	20 83       	st	Z, r18
    55a0:	31 83       	std	Z+1, r19	; 0x01
    55a2:	42 83       	std	Z+2, r20	; 0x02
    55a4:	53 83       	std	Z+3, r21	; 0x03
    55a6:	08 95       	ret

000055a8 <__fp_mpack>:
    55a8:	9f 3f       	cpi	r25, 0xFF	; 255
    55aa:	31 f0       	breq	.+12     	; 0x55b8 <__fp_mpack_finite+0xc>

000055ac <__fp_mpack_finite>:
    55ac:	91 50       	subi	r25, 0x01	; 1
    55ae:	20 f4       	brcc	.+8      	; 0x55b8 <__fp_mpack_finite+0xc>
    55b0:	87 95       	ror	r24
    55b2:	77 95       	ror	r23
    55b4:	67 95       	ror	r22
    55b6:	b7 95       	ror	r27
    55b8:	88 0f       	add	r24, r24
    55ba:	91 1d       	adc	r25, r1
    55bc:	96 95       	lsr	r25
    55be:	87 95       	ror	r24
    55c0:	97 f9       	bld	r25, 7
    55c2:	08 95       	ret

000055c4 <vfprintf>:
    55c4:	a1 e1       	ldi	r26, 0x11	; 17
    55c6:	b0 e0       	ldi	r27, 0x00	; 0
    55c8:	e7 ee       	ldi	r30, 0xE7	; 231
    55ca:	fa e2       	ldi	r31, 0x2A	; 42
    55cc:	b7 c3       	rjmp	.+1902   	; 0x5d3c <__prologue_saves__>
    55ce:	3c 01       	movw	r6, r24
    55d0:	7f 87       	std	Y+15, r23	; 0x0f
    55d2:	6e 87       	std	Y+14, r22	; 0x0e
    55d4:	6a 01       	movw	r12, r20
    55d6:	fc 01       	movw	r30, r24
    55d8:	17 82       	std	Z+7, r1	; 0x07
    55da:	16 82       	std	Z+6, r1	; 0x06
    55dc:	83 81       	ldd	r24, Z+3	; 0x03
    55de:	81 fd       	sbrc	r24, 1
    55e0:	03 c0       	rjmp	.+6      	; 0x55e8 <vfprintf+0x24>
    55e2:	6f ef       	ldi	r22, 0xFF	; 255
    55e4:	7f ef       	ldi	r23, 0xFF	; 255
    55e6:	52 c3       	rjmp	.+1700   	; 0x5c8c <vfprintf+0x6c8>
    55e8:	9e 01       	movw	r18, r28
    55ea:	2f 5f       	subi	r18, 0xFF	; 255
    55ec:	3f 4f       	sbci	r19, 0xFF	; 255
    55ee:	39 8b       	std	Y+17, r19	; 0x11
    55f0:	28 8b       	std	Y+16, r18	; 0x10
    55f2:	f3 01       	movw	r30, r6
    55f4:	23 81       	ldd	r18, Z+3	; 0x03
    55f6:	ee 85       	ldd	r30, Y+14	; 0x0e
    55f8:	ff 85       	ldd	r31, Y+15	; 0x0f
    55fa:	23 fd       	sbrc	r18, 3
    55fc:	85 91       	lpm	r24, Z+
    55fe:	23 ff       	sbrs	r18, 3
    5600:	81 91       	ld	r24, Z+
    5602:	ff 87       	std	Y+15, r31	; 0x0f
    5604:	ee 87       	std	Y+14, r30	; 0x0e
    5606:	88 23       	and	r24, r24
    5608:	09 f4       	brne	.+2      	; 0x560c <vfprintf+0x48>
    560a:	3d c3       	rjmp	.+1658   	; 0x5c86 <vfprintf+0x6c2>
    560c:	85 32       	cpi	r24, 0x25	; 37
    560e:	51 f4       	brne	.+20     	; 0x5624 <vfprintf+0x60>
    5610:	ee 85       	ldd	r30, Y+14	; 0x0e
    5612:	ff 85       	ldd	r31, Y+15	; 0x0f
    5614:	23 fd       	sbrc	r18, 3
    5616:	85 91       	lpm	r24, Z+
    5618:	23 ff       	sbrs	r18, 3
    561a:	81 91       	ld	r24, Z+
    561c:	ff 87       	std	Y+15, r31	; 0x0f
    561e:	ee 87       	std	Y+14, r30	; 0x0e
    5620:	85 32       	cpi	r24, 0x25	; 37
    5622:	21 f4       	brne	.+8      	; 0x562c <vfprintf+0x68>
    5624:	90 e0       	ldi	r25, 0x00	; 0
    5626:	b3 01       	movw	r22, r6
    5628:	20 d6       	rcall	.+3136   	; 0x626a <fputc>
    562a:	e3 cf       	rjmp	.-58     	; 0x55f2 <vfprintf+0x2e>
    562c:	98 2f       	mov	r25, r24
    562e:	10 e0       	ldi	r17, 0x00	; 0
    5630:	88 24       	eor	r8, r8
    5632:	99 24       	eor	r9, r9
    5634:	10 32       	cpi	r17, 0x20	; 32
    5636:	b0 f4       	brcc	.+44     	; 0x5664 <vfprintf+0xa0>
    5638:	9b 32       	cpi	r25, 0x2B	; 43
    563a:	69 f0       	breq	.+26     	; 0x5656 <vfprintf+0x92>
    563c:	9c 32       	cpi	r25, 0x2C	; 44
    563e:	28 f4       	brcc	.+10     	; 0x564a <vfprintf+0x86>
    5640:	90 32       	cpi	r25, 0x20	; 32
    5642:	51 f0       	breq	.+20     	; 0x5658 <vfprintf+0x94>
    5644:	93 32       	cpi	r25, 0x23	; 35
    5646:	71 f4       	brne	.+28     	; 0x5664 <vfprintf+0xa0>
    5648:	0b c0       	rjmp	.+22     	; 0x5660 <vfprintf+0x9c>
    564a:	9d 32       	cpi	r25, 0x2D	; 45
    564c:	39 f0       	breq	.+14     	; 0x565c <vfprintf+0x98>
    564e:	90 33       	cpi	r25, 0x30	; 48
    5650:	49 f4       	brne	.+18     	; 0x5664 <vfprintf+0xa0>
    5652:	11 60       	ori	r17, 0x01	; 1
    5654:	28 c0       	rjmp	.+80     	; 0x56a6 <vfprintf+0xe2>
    5656:	12 60       	ori	r17, 0x02	; 2
    5658:	14 60       	ori	r17, 0x04	; 4
    565a:	25 c0       	rjmp	.+74     	; 0x56a6 <vfprintf+0xe2>
    565c:	18 60       	ori	r17, 0x08	; 8
    565e:	23 c0       	rjmp	.+70     	; 0x56a6 <vfprintf+0xe2>
    5660:	10 61       	ori	r17, 0x10	; 16
    5662:	21 c0       	rjmp	.+66     	; 0x56a6 <vfprintf+0xe2>
    5664:	17 fd       	sbrc	r17, 7
    5666:	2a c0       	rjmp	.+84     	; 0x56bc <vfprintf+0xf8>
    5668:	89 2f       	mov	r24, r25
    566a:	80 53       	subi	r24, 0x30	; 48
    566c:	8a 30       	cpi	r24, 0x0A	; 10
    566e:	78 f4       	brcc	.+30     	; 0x568e <vfprintf+0xca>
    5670:	16 ff       	sbrs	r17, 6
    5672:	06 c0       	rjmp	.+12     	; 0x5680 <vfprintf+0xbc>
    5674:	fa e0       	ldi	r31, 0x0A	; 10
    5676:	9f 9e       	mul	r9, r31
    5678:	90 2c       	mov	r9, r0
    567a:	11 24       	eor	r1, r1
    567c:	98 0e       	add	r9, r24
    567e:	13 c0       	rjmp	.+38     	; 0x56a6 <vfprintf+0xe2>
    5680:	3a e0       	ldi	r19, 0x0A	; 10
    5682:	83 9e       	mul	r8, r19
    5684:	80 2c       	mov	r8, r0
    5686:	11 24       	eor	r1, r1
    5688:	88 0e       	add	r8, r24
    568a:	10 62       	ori	r17, 0x20	; 32
    568c:	0c c0       	rjmp	.+24     	; 0x56a6 <vfprintf+0xe2>
    568e:	9e 32       	cpi	r25, 0x2E	; 46
    5690:	21 f4       	brne	.+8      	; 0x569a <vfprintf+0xd6>
    5692:	16 fd       	sbrc	r17, 6
    5694:	f8 c2       	rjmp	.+1520   	; 0x5c86 <vfprintf+0x6c2>
    5696:	10 64       	ori	r17, 0x40	; 64
    5698:	06 c0       	rjmp	.+12     	; 0x56a6 <vfprintf+0xe2>
    569a:	9c 36       	cpi	r25, 0x6C	; 108
    569c:	11 f4       	brne	.+4      	; 0x56a2 <vfprintf+0xde>
    569e:	10 68       	ori	r17, 0x80	; 128
    56a0:	02 c0       	rjmp	.+4      	; 0x56a6 <vfprintf+0xe2>
    56a2:	98 36       	cpi	r25, 0x68	; 104
    56a4:	59 f4       	brne	.+22     	; 0x56bc <vfprintf+0xf8>
    56a6:	ee 85       	ldd	r30, Y+14	; 0x0e
    56a8:	ff 85       	ldd	r31, Y+15	; 0x0f
    56aa:	23 fd       	sbrc	r18, 3
    56ac:	95 91       	lpm	r25, Z+
    56ae:	23 ff       	sbrs	r18, 3
    56b0:	91 91       	ld	r25, Z+
    56b2:	ff 87       	std	Y+15, r31	; 0x0f
    56b4:	ee 87       	std	Y+14, r30	; 0x0e
    56b6:	99 23       	and	r25, r25
    56b8:	09 f0       	breq	.+2      	; 0x56bc <vfprintf+0xf8>
    56ba:	bc cf       	rjmp	.-136    	; 0x5634 <vfprintf+0x70>
    56bc:	89 2f       	mov	r24, r25
    56be:	85 54       	subi	r24, 0x45	; 69
    56c0:	83 30       	cpi	r24, 0x03	; 3
    56c2:	20 f4       	brcc	.+8      	; 0x56cc <vfprintf+0x108>
    56c4:	81 2f       	mov	r24, r17
    56c6:	80 61       	ori	r24, 0x10	; 16
    56c8:	90 5e       	subi	r25, 0xE0	; 224
    56ca:	07 c0       	rjmp	.+14     	; 0x56da <vfprintf+0x116>
    56cc:	89 2f       	mov	r24, r25
    56ce:	85 56       	subi	r24, 0x65	; 101
    56d0:	83 30       	cpi	r24, 0x03	; 3
    56d2:	08 f0       	brcs	.+2      	; 0x56d6 <vfprintf+0x112>
    56d4:	8f c1       	rjmp	.+798    	; 0x59f4 <vfprintf+0x430>
    56d6:	81 2f       	mov	r24, r17
    56d8:	8f 7e       	andi	r24, 0xEF	; 239
    56da:	86 fd       	sbrc	r24, 6
    56dc:	02 c0       	rjmp	.+4      	; 0x56e2 <vfprintf+0x11e>
    56de:	76 e0       	ldi	r23, 0x06	; 6
    56e0:	97 2e       	mov	r9, r23
    56e2:	6f e3       	ldi	r22, 0x3F	; 63
    56e4:	f6 2e       	mov	r15, r22
    56e6:	f8 22       	and	r15, r24
    56e8:	95 36       	cpi	r25, 0x65	; 101
    56ea:	19 f4       	brne	.+6      	; 0x56f2 <vfprintf+0x12e>
    56ec:	f0 e4       	ldi	r31, 0x40	; 64
    56ee:	ff 2a       	or	r15, r31
    56f0:	07 c0       	rjmp	.+14     	; 0x5700 <vfprintf+0x13c>
    56f2:	96 36       	cpi	r25, 0x66	; 102
    56f4:	19 f4       	brne	.+6      	; 0x56fc <vfprintf+0x138>
    56f6:	20 e8       	ldi	r18, 0x80	; 128
    56f8:	f2 2a       	or	r15, r18
    56fa:	02 c0       	rjmp	.+4      	; 0x5700 <vfprintf+0x13c>
    56fc:	91 10       	cpse	r9, r1
    56fe:	9a 94       	dec	r9
    5700:	f7 fe       	sbrs	r15, 7
    5702:	0a c0       	rjmp	.+20     	; 0x5718 <vfprintf+0x154>
    5704:	3b e3       	ldi	r19, 0x3B	; 59
    5706:	39 15       	cp	r19, r9
    5708:	18 f4       	brcc	.+6      	; 0x5710 <vfprintf+0x14c>
    570a:	5c e3       	ldi	r21, 0x3C	; 60
    570c:	b5 2e       	mov	r11, r21
    570e:	02 c0       	rjmp	.+4      	; 0x5714 <vfprintf+0x150>
    5710:	b9 2c       	mov	r11, r9
    5712:	b3 94       	inc	r11
    5714:	27 e0       	ldi	r18, 0x07	; 7
    5716:	09 c0       	rjmp	.+18     	; 0x572a <vfprintf+0x166>
    5718:	47 e0       	ldi	r20, 0x07	; 7
    571a:	49 15       	cp	r20, r9
    571c:	20 f4       	brcc	.+8      	; 0x5726 <vfprintf+0x162>
    571e:	bb 24       	eor	r11, r11
    5720:	47 e0       	ldi	r20, 0x07	; 7
    5722:	94 2e       	mov	r9, r20
    5724:	f7 cf       	rjmp	.-18     	; 0x5714 <vfprintf+0x150>
    5726:	29 2d       	mov	r18, r9
    5728:	bb 24       	eor	r11, r11
    572a:	c6 01       	movw	r24, r12
    572c:	04 96       	adiw	r24, 0x04	; 4
    572e:	9d 87       	std	Y+13, r25	; 0x0d
    5730:	8c 87       	std	Y+12, r24	; 0x0c
    5732:	f6 01       	movw	r30, r12
    5734:	60 81       	ld	r22, Z
    5736:	71 81       	ldd	r23, Z+1	; 0x01
    5738:	82 81       	ldd	r24, Z+2	; 0x02
    573a:	93 81       	ldd	r25, Z+3	; 0x03
    573c:	ae 01       	movw	r20, r28
    573e:	4f 5f       	subi	r20, 0xFF	; 255
    5740:	5f 4f       	sbci	r21, 0xFF	; 255
    5742:	0b 2d       	mov	r16, r11
    5744:	a4 d4       	rcall	.+2376   	; 0x608e <__ftoa_engine>
    5746:	6c 01       	movw	r12, r24
    5748:	09 81       	ldd	r16, Y+1	; 0x01
    574a:	20 2e       	mov	r2, r16
    574c:	33 24       	eor	r3, r3
    574e:	00 ff       	sbrs	r16, 0
    5750:	04 c0       	rjmp	.+8      	; 0x575a <vfprintf+0x196>
    5752:	03 fd       	sbrc	r16, 3
    5754:	02 c0       	rjmp	.+4      	; 0x575a <vfprintf+0x196>
    5756:	1d e2       	ldi	r17, 0x2D	; 45
    5758:	09 c0       	rjmp	.+18     	; 0x576c <vfprintf+0x1a8>
    575a:	f1 fe       	sbrs	r15, 1
    575c:	02 c0       	rjmp	.+4      	; 0x5762 <vfprintf+0x19e>
    575e:	1b e2       	ldi	r17, 0x2B	; 43
    5760:	05 c0       	rjmp	.+10     	; 0x576c <vfprintf+0x1a8>
    5762:	f2 fc       	sbrc	r15, 2
    5764:	02 c0       	rjmp	.+4      	; 0x576a <vfprintf+0x1a6>
    5766:	10 e0       	ldi	r17, 0x00	; 0
    5768:	01 c0       	rjmp	.+2      	; 0x576c <vfprintf+0x1a8>
    576a:	10 e2       	ldi	r17, 0x20	; 32
    576c:	c1 01       	movw	r24, r2
    576e:	8c 70       	andi	r24, 0x0C	; 12
    5770:	90 70       	andi	r25, 0x00	; 0
    5772:	89 2b       	or	r24, r25
    5774:	a1 f1       	breq	.+104    	; 0x57de <vfprintf+0x21a>
    5776:	11 23       	and	r17, r17
    5778:	11 f4       	brne	.+4      	; 0x577e <vfprintf+0x1ba>
    577a:	83 e0       	ldi	r24, 0x03	; 3
    577c:	01 c0       	rjmp	.+2      	; 0x5780 <vfprintf+0x1bc>
    577e:	84 e0       	ldi	r24, 0x04	; 4
    5780:	88 15       	cp	r24, r8
    5782:	10 f0       	brcs	.+4      	; 0x5788 <vfprintf+0x1c4>
    5784:	88 24       	eor	r8, r8
    5786:	09 c0       	rjmp	.+18     	; 0x579a <vfprintf+0x1d6>
    5788:	88 1a       	sub	r8, r24
    578a:	f3 fc       	sbrc	r15, 3
    578c:	06 c0       	rjmp	.+12     	; 0x579a <vfprintf+0x1d6>
    578e:	80 e2       	ldi	r24, 0x20	; 32
    5790:	90 e0       	ldi	r25, 0x00	; 0
    5792:	b3 01       	movw	r22, r6
    5794:	6a d5       	rcall	.+2772   	; 0x626a <fputc>
    5796:	8a 94       	dec	r8
    5798:	d1 f7       	brne	.-12     	; 0x578e <vfprintf+0x1ca>
    579a:	11 23       	and	r17, r17
    579c:	21 f0       	breq	.+8      	; 0x57a6 <vfprintf+0x1e2>
    579e:	81 2f       	mov	r24, r17
    57a0:	90 e0       	ldi	r25, 0x00	; 0
    57a2:	b3 01       	movw	r22, r6
    57a4:	62 d5       	rcall	.+2756   	; 0x626a <fputc>
    57a6:	23 fe       	sbrs	r2, 3
    57a8:	03 c0       	rjmp	.+6      	; 0x57b0 <vfprintf+0x1ec>
    57aa:	0f e5       	ldi	r16, 0x5F	; 95
    57ac:	15 e0       	ldi	r17, 0x05	; 5
    57ae:	0d c0       	rjmp	.+26     	; 0x57ca <vfprintf+0x206>
    57b0:	03 e6       	ldi	r16, 0x63	; 99
    57b2:	15 e0       	ldi	r17, 0x05	; 5
    57b4:	0a c0       	rjmp	.+20     	; 0x57ca <vfprintf+0x206>
    57b6:	e1 14       	cp	r14, r1
    57b8:	f1 04       	cpc	r15, r1
    57ba:	09 f0       	breq	.+2      	; 0x57be <vfprintf+0x1fa>
    57bc:	80 52       	subi	r24, 0x20	; 32
    57be:	90 e0       	ldi	r25, 0x00	; 0
    57c0:	b3 01       	movw	r22, r6
    57c2:	53 d5       	rcall	.+2726   	; 0x626a <fputc>
    57c4:	0f 5f       	subi	r16, 0xFF	; 255
    57c6:	1f 4f       	sbci	r17, 0xFF	; 255
    57c8:	05 c0       	rjmp	.+10     	; 0x57d4 <vfprintf+0x210>
    57ca:	ef 2c       	mov	r14, r15
    57cc:	ff 24       	eor	r15, r15
    57ce:	f0 e1       	ldi	r31, 0x10	; 16
    57d0:	ef 22       	and	r14, r31
    57d2:	ff 24       	eor	r15, r15
    57d4:	f8 01       	movw	r30, r16
    57d6:	84 91       	lpm	r24, Z+
    57d8:	88 23       	and	r24, r24
    57da:	69 f7       	brne	.-38     	; 0x57b6 <vfprintf+0x1f2>
    57dc:	08 c1       	rjmp	.+528    	; 0x59ee <vfprintf+0x42a>
    57de:	f7 fe       	sbrs	r15, 7
    57e0:	12 c0       	rjmp	.+36     	; 0x5806 <vfprintf+0x242>
    57e2:	bc 0c       	add	r11, r12
    57e4:	24 fe       	sbrs	r2, 4
    57e6:	04 c0       	rjmp	.+8      	; 0x57f0 <vfprintf+0x22c>
    57e8:	8a 81       	ldd	r24, Y+2	; 0x02
    57ea:	81 33       	cpi	r24, 0x31	; 49
    57ec:	09 f4       	brne	.+2      	; 0x57f0 <vfprintf+0x22c>
    57ee:	ba 94       	dec	r11
    57f0:	1b 14       	cp	r1, r11
    57f2:	1c f0       	brlt	.+6      	; 0x57fa <vfprintf+0x236>
    57f4:	bb 24       	eor	r11, r11
    57f6:	b3 94       	inc	r11
    57f8:	2d c0       	rjmp	.+90     	; 0x5854 <vfprintf+0x290>
    57fa:	f8 e0       	ldi	r31, 0x08	; 8
    57fc:	fb 15       	cp	r31, r11
    57fe:	50 f5       	brcc	.+84     	; 0x5854 <vfprintf+0x290>
    5800:	38 e0       	ldi	r19, 0x08	; 8
    5802:	b3 2e       	mov	r11, r19
    5804:	27 c0       	rjmp	.+78     	; 0x5854 <vfprintf+0x290>
    5806:	f6 fc       	sbrc	r15, 6
    5808:	25 c0       	rjmp	.+74     	; 0x5854 <vfprintf+0x290>
    580a:	89 2d       	mov	r24, r9
    580c:	90 e0       	ldi	r25, 0x00	; 0
    580e:	8c 15       	cp	r24, r12
    5810:	9d 05       	cpc	r25, r13
    5812:	4c f0       	brlt	.+18     	; 0x5826 <vfprintf+0x262>
    5814:	2c ef       	ldi	r18, 0xFC	; 252
    5816:	c2 16       	cp	r12, r18
    5818:	2f ef       	ldi	r18, 0xFF	; 255
    581a:	d2 06       	cpc	r13, r18
    581c:	24 f0       	brlt	.+8      	; 0x5826 <vfprintf+0x262>
    581e:	30 e8       	ldi	r19, 0x80	; 128
    5820:	f3 2a       	or	r15, r19
    5822:	01 c0       	rjmp	.+2      	; 0x5826 <vfprintf+0x262>
    5824:	9a 94       	dec	r9
    5826:	99 20       	and	r9, r9
    5828:	49 f0       	breq	.+18     	; 0x583c <vfprintf+0x278>
    582a:	e2 e0       	ldi	r30, 0x02	; 2
    582c:	f0 e0       	ldi	r31, 0x00	; 0
    582e:	ec 0f       	add	r30, r28
    5830:	fd 1f       	adc	r31, r29
    5832:	e9 0d       	add	r30, r9
    5834:	f1 1d       	adc	r31, r1
    5836:	80 81       	ld	r24, Z
    5838:	80 33       	cpi	r24, 0x30	; 48
    583a:	a1 f3       	breq	.-24     	; 0x5824 <vfprintf+0x260>
    583c:	f7 fe       	sbrs	r15, 7
    583e:	0a c0       	rjmp	.+20     	; 0x5854 <vfprintf+0x290>
    5840:	b9 2c       	mov	r11, r9
    5842:	b3 94       	inc	r11
    5844:	89 2d       	mov	r24, r9
    5846:	90 e0       	ldi	r25, 0x00	; 0
    5848:	c8 16       	cp	r12, r24
    584a:	d9 06       	cpc	r13, r25
    584c:	14 f0       	brlt	.+4      	; 0x5852 <vfprintf+0x28e>
    584e:	99 24       	eor	r9, r9
    5850:	01 c0       	rjmp	.+2      	; 0x5854 <vfprintf+0x290>
    5852:	9c 18       	sub	r9, r12
    5854:	f7 fc       	sbrc	r15, 7
    5856:	03 c0       	rjmp	.+6      	; 0x585e <vfprintf+0x29a>
    5858:	25 e0       	ldi	r18, 0x05	; 5
    585a:	30 e0       	ldi	r19, 0x00	; 0
    585c:	09 c0       	rjmp	.+18     	; 0x5870 <vfprintf+0x2ac>
    585e:	1c 14       	cp	r1, r12
    5860:	1d 04       	cpc	r1, r13
    5862:	1c f0       	brlt	.+6      	; 0x586a <vfprintf+0x2a6>
    5864:	21 e0       	ldi	r18, 0x01	; 1
    5866:	30 e0       	ldi	r19, 0x00	; 0
    5868:	03 c0       	rjmp	.+6      	; 0x5870 <vfprintf+0x2ac>
    586a:	96 01       	movw	r18, r12
    586c:	2f 5f       	subi	r18, 0xFF	; 255
    586e:	3f 4f       	sbci	r19, 0xFF	; 255
    5870:	11 23       	and	r17, r17
    5872:	11 f0       	breq	.+4      	; 0x5878 <vfprintf+0x2b4>
    5874:	2f 5f       	subi	r18, 0xFF	; 255
    5876:	3f 4f       	sbci	r19, 0xFF	; 255
    5878:	99 20       	and	r9, r9
    587a:	29 f0       	breq	.+10     	; 0x5886 <vfprintf+0x2c2>
    587c:	89 2d       	mov	r24, r9
    587e:	90 e0       	ldi	r25, 0x00	; 0
    5880:	01 96       	adiw	r24, 0x01	; 1
    5882:	28 0f       	add	r18, r24
    5884:	39 1f       	adc	r19, r25
    5886:	88 2d       	mov	r24, r8
    5888:	90 e0       	ldi	r25, 0x00	; 0
    588a:	28 17       	cp	r18, r24
    588c:	39 07       	cpc	r19, r25
    588e:	14 f0       	brlt	.+4      	; 0x5894 <vfprintf+0x2d0>
    5890:	88 24       	eor	r8, r8
    5892:	01 c0       	rjmp	.+2      	; 0x5896 <vfprintf+0x2d2>
    5894:	82 1a       	sub	r8, r18
    5896:	4f 2c       	mov	r4, r15
    5898:	55 24       	eor	r5, r5
    589a:	c2 01       	movw	r24, r4
    589c:	89 70       	andi	r24, 0x09	; 9
    589e:	90 70       	andi	r25, 0x00	; 0
    58a0:	89 2b       	or	r24, r25
    58a2:	31 f0       	breq	.+12     	; 0x58b0 <vfprintf+0x2ec>
    58a4:	07 c0       	rjmp	.+14     	; 0x58b4 <vfprintf+0x2f0>
    58a6:	80 e2       	ldi	r24, 0x20	; 32
    58a8:	90 e0       	ldi	r25, 0x00	; 0
    58aa:	b3 01       	movw	r22, r6
    58ac:	de d4       	rcall	.+2492   	; 0x626a <fputc>
    58ae:	8a 94       	dec	r8
    58b0:	88 20       	and	r8, r8
    58b2:	c9 f7       	brne	.-14     	; 0x58a6 <vfprintf+0x2e2>
    58b4:	11 23       	and	r17, r17
    58b6:	21 f0       	breq	.+8      	; 0x58c0 <vfprintf+0x2fc>
    58b8:	81 2f       	mov	r24, r17
    58ba:	90 e0       	ldi	r25, 0x00	; 0
    58bc:	b3 01       	movw	r22, r6
    58be:	d5 d4       	rcall	.+2474   	; 0x626a <fputc>
    58c0:	43 fe       	sbrs	r4, 3
    58c2:	06 c0       	rjmp	.+12     	; 0x58d0 <vfprintf+0x30c>
    58c4:	07 c0       	rjmp	.+14     	; 0x58d4 <vfprintf+0x310>
    58c6:	80 e3       	ldi	r24, 0x30	; 48
    58c8:	90 e0       	ldi	r25, 0x00	; 0
    58ca:	b3 01       	movw	r22, r6
    58cc:	ce d4       	rcall	.+2460   	; 0x626a <fputc>
    58ce:	8a 94       	dec	r8
    58d0:	88 20       	and	r8, r8
    58d2:	c9 f7       	brne	.-14     	; 0x58c6 <vfprintf+0x302>
    58d4:	f7 fe       	sbrs	r15, 7
    58d6:	44 c0       	rjmp	.+136    	; 0x5960 <vfprintf+0x39c>
    58d8:	86 01       	movw	r16, r12
    58da:	d7 fe       	sbrs	r13, 7
    58dc:	02 c0       	rjmp	.+4      	; 0x58e2 <vfprintf+0x31e>
    58de:	00 e0       	ldi	r16, 0x00	; 0
    58e0:	10 e0       	ldi	r17, 0x00	; 0
    58e2:	76 01       	movw	r14, r12
    58e4:	08 94       	sec
    58e6:	e1 1c       	adc	r14, r1
    58e8:	f1 1c       	adc	r15, r1
    58ea:	e0 1a       	sub	r14, r16
    58ec:	f1 0a       	sbc	r15, r17
    58ee:	41 e0       	ldi	r20, 0x01	; 1
    58f0:	50 e0       	ldi	r21, 0x00	; 0
    58f2:	4c 0f       	add	r20, r28
    58f4:	5d 1f       	adc	r21, r29
    58f6:	e4 0e       	add	r14, r20
    58f8:	f5 1e       	adc	r15, r21
    58fa:	26 01       	movw	r4, r12
    58fc:	4b 18       	sub	r4, r11
    58fe:	51 08       	sbc	r5, r1
    5900:	89 2d       	mov	r24, r9
    5902:	90 e0       	ldi	r25, 0x00	; 0
    5904:	aa 24       	eor	r10, r10
    5906:	bb 24       	eor	r11, r11
    5908:	a8 1a       	sub	r10, r24
    590a:	b9 0a       	sbc	r11, r25
    590c:	5f ef       	ldi	r21, 0xFF	; 255
    590e:	0f 3f       	cpi	r16, 0xFF	; 255
    5910:	15 07       	cpc	r17, r21
    5912:	21 f4       	brne	.+8      	; 0x591c <vfprintf+0x358>
    5914:	8e e2       	ldi	r24, 0x2E	; 46
    5916:	90 e0       	ldi	r25, 0x00	; 0
    5918:	b3 01       	movw	r22, r6
    591a:	a7 d4       	rcall	.+2382   	; 0x626a <fputc>
    591c:	c0 16       	cp	r12, r16
    591e:	d1 06       	cpc	r13, r17
    5920:	34 f0       	brlt	.+12     	; 0x592e <vfprintf+0x36a>
    5922:	40 16       	cp	r4, r16
    5924:	51 06       	cpc	r5, r17
    5926:	1c f4       	brge	.+6      	; 0x592e <vfprintf+0x36a>
    5928:	f7 01       	movw	r30, r14
    592a:	80 81       	ld	r24, Z
    592c:	01 c0       	rjmp	.+2      	; 0x5930 <vfprintf+0x36c>
    592e:	80 e3       	ldi	r24, 0x30	; 48
    5930:	01 50       	subi	r16, 0x01	; 1
    5932:	10 40       	sbci	r17, 0x00	; 0
    5934:	08 94       	sec
    5936:	e1 1c       	adc	r14, r1
    5938:	f1 1c       	adc	r15, r1
    593a:	0a 15       	cp	r16, r10
    593c:	1b 05       	cpc	r17, r11
    593e:	24 f0       	brlt	.+8      	; 0x5948 <vfprintf+0x384>
    5940:	90 e0       	ldi	r25, 0x00	; 0
    5942:	b3 01       	movw	r22, r6
    5944:	92 d4       	rcall	.+2340   	; 0x626a <fputc>
    5946:	e2 cf       	rjmp	.-60     	; 0x590c <vfprintf+0x348>
    5948:	0c 15       	cp	r16, r12
    594a:	1d 05       	cpc	r17, r13
    594c:	39 f4       	brne	.+14     	; 0x595c <vfprintf+0x398>
    594e:	9a 81       	ldd	r25, Y+2	; 0x02
    5950:	96 33       	cpi	r25, 0x36	; 54
    5952:	18 f4       	brcc	.+6      	; 0x595a <vfprintf+0x396>
    5954:	95 33       	cpi	r25, 0x35	; 53
    5956:	11 f4       	brne	.+4      	; 0x595c <vfprintf+0x398>
    5958:	24 fe       	sbrs	r2, 4
    595a:	81 e3       	ldi	r24, 0x31	; 49
    595c:	90 e0       	ldi	r25, 0x00	; 0
    595e:	45 c0       	rjmp	.+138    	; 0x59ea <vfprintf+0x426>
    5960:	8a 81       	ldd	r24, Y+2	; 0x02
    5962:	81 33       	cpi	r24, 0x31	; 49
    5964:	09 f0       	breq	.+2      	; 0x5968 <vfprintf+0x3a4>
    5966:	0f 7e       	andi	r16, 0xEF	; 239
    5968:	90 e0       	ldi	r25, 0x00	; 0
    596a:	b3 01       	movw	r22, r6
    596c:	7e d4       	rcall	.+2300   	; 0x626a <fputc>
    596e:	99 20       	and	r9, r9
    5970:	91 f0       	breq	.+36     	; 0x5996 <vfprintf+0x3d2>
    5972:	8e e2       	ldi	r24, 0x2E	; 46
    5974:	90 e0       	ldi	r25, 0x00	; 0
    5976:	b3 01       	movw	r22, r6
    5978:	78 d4       	rcall	.+2288   	; 0x626a <fputc>
    597a:	12 e0       	ldi	r17, 0x02	; 2
    597c:	e1 e0       	ldi	r30, 0x01	; 1
    597e:	f0 e0       	ldi	r31, 0x00	; 0
    5980:	ec 0f       	add	r30, r28
    5982:	fd 1f       	adc	r31, r29
    5984:	e1 0f       	add	r30, r17
    5986:	f1 1d       	adc	r31, r1
    5988:	1f 5f       	subi	r17, 0xFF	; 255
    598a:	80 81       	ld	r24, Z
    598c:	90 e0       	ldi	r25, 0x00	; 0
    598e:	b3 01       	movw	r22, r6
    5990:	6c d4       	rcall	.+2264   	; 0x626a <fputc>
    5992:	9a 94       	dec	r9
    5994:	99 f7       	brne	.-26     	; 0x597c <vfprintf+0x3b8>
    5996:	44 fc       	sbrc	r4, 4
    5998:	03 c0       	rjmp	.+6      	; 0x59a0 <vfprintf+0x3dc>
    599a:	85 e6       	ldi	r24, 0x65	; 101
    599c:	90 e0       	ldi	r25, 0x00	; 0
    599e:	02 c0       	rjmp	.+4      	; 0x59a4 <vfprintf+0x3e0>
    59a0:	85 e4       	ldi	r24, 0x45	; 69
    59a2:	90 e0       	ldi	r25, 0x00	; 0
    59a4:	b3 01       	movw	r22, r6
    59a6:	61 d4       	rcall	.+2242   	; 0x626a <fputc>
    59a8:	d7 fc       	sbrc	r13, 7
    59aa:	05 c0       	rjmp	.+10     	; 0x59b6 <vfprintf+0x3f2>
    59ac:	c1 14       	cp	r12, r1
    59ae:	d1 04       	cpc	r13, r1
    59b0:	41 f4       	brne	.+16     	; 0x59c2 <vfprintf+0x3fe>
    59b2:	04 ff       	sbrs	r16, 4
    59b4:	06 c0       	rjmp	.+12     	; 0x59c2 <vfprintf+0x3fe>
    59b6:	d0 94       	com	r13
    59b8:	c1 94       	neg	r12
    59ba:	d1 08       	sbc	r13, r1
    59bc:	d3 94       	inc	r13
    59be:	8d e2       	ldi	r24, 0x2D	; 45
    59c0:	01 c0       	rjmp	.+2      	; 0x59c4 <vfprintf+0x400>
    59c2:	8b e2       	ldi	r24, 0x2B	; 43
    59c4:	90 e0       	ldi	r25, 0x00	; 0
    59c6:	b3 01       	movw	r22, r6
    59c8:	50 d4       	rcall	.+2208   	; 0x626a <fputc>
    59ca:	80 e3       	ldi	r24, 0x30	; 48
    59cc:	05 c0       	rjmp	.+10     	; 0x59d8 <vfprintf+0x414>
    59ce:	8f 5f       	subi	r24, 0xFF	; 255
    59d0:	26 ef       	ldi	r18, 0xF6	; 246
    59d2:	3f ef       	ldi	r19, 0xFF	; 255
    59d4:	c2 0e       	add	r12, r18
    59d6:	d3 1e       	adc	r13, r19
    59d8:	3a e0       	ldi	r19, 0x0A	; 10
    59da:	c3 16       	cp	r12, r19
    59dc:	d1 04       	cpc	r13, r1
    59de:	bc f7       	brge	.-18     	; 0x59ce <vfprintf+0x40a>
    59e0:	90 e0       	ldi	r25, 0x00	; 0
    59e2:	b3 01       	movw	r22, r6
    59e4:	42 d4       	rcall	.+2180   	; 0x626a <fputc>
    59e6:	c6 01       	movw	r24, r12
    59e8:	c0 96       	adiw	r24, 0x30	; 48
    59ea:	b3 01       	movw	r22, r6
    59ec:	3e d4       	rcall	.+2172   	; 0x626a <fputc>
    59ee:	cc 84       	ldd	r12, Y+12	; 0x0c
    59f0:	dd 84       	ldd	r13, Y+13	; 0x0d
    59f2:	46 c1       	rjmp	.+652    	; 0x5c80 <vfprintf+0x6bc>
    59f4:	93 36       	cpi	r25, 0x63	; 99
    59f6:	31 f0       	breq	.+12     	; 0x5a04 <vfprintf+0x440>
    59f8:	93 37       	cpi	r25, 0x73	; 115
    59fa:	99 f0       	breq	.+38     	; 0x5a22 <vfprintf+0x45e>
    59fc:	93 35       	cpi	r25, 0x53	; 83
    59fe:	09 f0       	breq	.+2      	; 0x5a02 <vfprintf+0x43e>
    5a00:	55 c0       	rjmp	.+170    	; 0x5aac <vfprintf+0x4e8>
    5a02:	22 c0       	rjmp	.+68     	; 0x5a48 <vfprintf+0x484>
    5a04:	f6 01       	movw	r30, r12
    5a06:	80 81       	ld	r24, Z
    5a08:	89 83       	std	Y+1, r24	; 0x01
    5a0a:	5e 01       	movw	r10, r28
    5a0c:	08 94       	sec
    5a0e:	a1 1c       	adc	r10, r1
    5a10:	b1 1c       	adc	r11, r1
    5a12:	22 e0       	ldi	r18, 0x02	; 2
    5a14:	30 e0       	ldi	r19, 0x00	; 0
    5a16:	c2 0e       	add	r12, r18
    5a18:	d3 1e       	adc	r13, r19
    5a1a:	21 e0       	ldi	r18, 0x01	; 1
    5a1c:	e2 2e       	mov	r14, r18
    5a1e:	f1 2c       	mov	r15, r1
    5a20:	11 c0       	rjmp	.+34     	; 0x5a44 <vfprintf+0x480>
    5a22:	f6 01       	movw	r30, r12
    5a24:	a0 80       	ld	r10, Z
    5a26:	b1 80       	ldd	r11, Z+1	; 0x01
    5a28:	16 fd       	sbrc	r17, 6
    5a2a:	03 c0       	rjmp	.+6      	; 0x5a32 <vfprintf+0x46e>
    5a2c:	6f ef       	ldi	r22, 0xFF	; 255
    5a2e:	7f ef       	ldi	r23, 0xFF	; 255
    5a30:	02 c0       	rjmp	.+4      	; 0x5a36 <vfprintf+0x472>
    5a32:	69 2d       	mov	r22, r9
    5a34:	70 e0       	ldi	r23, 0x00	; 0
    5a36:	22 e0       	ldi	r18, 0x02	; 2
    5a38:	30 e0       	ldi	r19, 0x00	; 0
    5a3a:	c2 0e       	add	r12, r18
    5a3c:	d3 1e       	adc	r13, r19
    5a3e:	c5 01       	movw	r24, r10
    5a40:	09 d4       	rcall	.+2066   	; 0x6254 <strnlen>
    5a42:	7c 01       	movw	r14, r24
    5a44:	1f 77       	andi	r17, 0x7F	; 127
    5a46:	12 c0       	rjmp	.+36     	; 0x5a6c <vfprintf+0x4a8>
    5a48:	f6 01       	movw	r30, r12
    5a4a:	a0 80       	ld	r10, Z
    5a4c:	b1 80       	ldd	r11, Z+1	; 0x01
    5a4e:	16 fd       	sbrc	r17, 6
    5a50:	03 c0       	rjmp	.+6      	; 0x5a58 <vfprintf+0x494>
    5a52:	6f ef       	ldi	r22, 0xFF	; 255
    5a54:	7f ef       	ldi	r23, 0xFF	; 255
    5a56:	02 c0       	rjmp	.+4      	; 0x5a5c <vfprintf+0x498>
    5a58:	69 2d       	mov	r22, r9
    5a5a:	70 e0       	ldi	r23, 0x00	; 0
    5a5c:	22 e0       	ldi	r18, 0x02	; 2
    5a5e:	30 e0       	ldi	r19, 0x00	; 0
    5a60:	c2 0e       	add	r12, r18
    5a62:	d3 1e       	adc	r13, r19
    5a64:	c5 01       	movw	r24, r10
    5a66:	eb d3       	rcall	.+2006   	; 0x623e <strnlen_P>
    5a68:	7c 01       	movw	r14, r24
    5a6a:	10 68       	ori	r17, 0x80	; 128
    5a6c:	13 ff       	sbrs	r17, 3
    5a6e:	06 c0       	rjmp	.+12     	; 0x5a7c <vfprintf+0x4b8>
    5a70:	19 c0       	rjmp	.+50     	; 0x5aa4 <vfprintf+0x4e0>
    5a72:	80 e2       	ldi	r24, 0x20	; 32
    5a74:	90 e0       	ldi	r25, 0x00	; 0
    5a76:	b3 01       	movw	r22, r6
    5a78:	f8 d3       	rcall	.+2032   	; 0x626a <fputc>
    5a7a:	8a 94       	dec	r8
    5a7c:	88 2d       	mov	r24, r8
    5a7e:	90 e0       	ldi	r25, 0x00	; 0
    5a80:	e8 16       	cp	r14, r24
    5a82:	f9 06       	cpc	r15, r25
    5a84:	b0 f3       	brcs	.-20     	; 0x5a72 <vfprintf+0x4ae>
    5a86:	0e c0       	rjmp	.+28     	; 0x5aa4 <vfprintf+0x4e0>
    5a88:	f5 01       	movw	r30, r10
    5a8a:	17 fd       	sbrc	r17, 7
    5a8c:	85 91       	lpm	r24, Z+
    5a8e:	17 ff       	sbrs	r17, 7
    5a90:	81 91       	ld	r24, Z+
    5a92:	5f 01       	movw	r10, r30
    5a94:	90 e0       	ldi	r25, 0x00	; 0
    5a96:	b3 01       	movw	r22, r6
    5a98:	e8 d3       	rcall	.+2000   	; 0x626a <fputc>
    5a9a:	81 10       	cpse	r8, r1
    5a9c:	8a 94       	dec	r8
    5a9e:	08 94       	sec
    5aa0:	e1 08       	sbc	r14, r1
    5aa2:	f1 08       	sbc	r15, r1
    5aa4:	e1 14       	cp	r14, r1
    5aa6:	f1 04       	cpc	r15, r1
    5aa8:	79 f7       	brne	.-34     	; 0x5a88 <vfprintf+0x4c4>
    5aaa:	ea c0       	rjmp	.+468    	; 0x5c80 <vfprintf+0x6bc>
    5aac:	94 36       	cpi	r25, 0x64	; 100
    5aae:	11 f0       	breq	.+4      	; 0x5ab4 <vfprintf+0x4f0>
    5ab0:	99 36       	cpi	r25, 0x69	; 105
    5ab2:	81 f5       	brne	.+96     	; 0x5b14 <vfprintf+0x550>
    5ab4:	17 ff       	sbrs	r17, 7
    5ab6:	08 c0       	rjmp	.+16     	; 0x5ac8 <vfprintf+0x504>
    5ab8:	f6 01       	movw	r30, r12
    5aba:	20 81       	ld	r18, Z
    5abc:	31 81       	ldd	r19, Z+1	; 0x01
    5abe:	42 81       	ldd	r20, Z+2	; 0x02
    5ac0:	53 81       	ldd	r21, Z+3	; 0x03
    5ac2:	84 e0       	ldi	r24, 0x04	; 4
    5ac4:	90 e0       	ldi	r25, 0x00	; 0
    5ac6:	0a c0       	rjmp	.+20     	; 0x5adc <vfprintf+0x518>
    5ac8:	f6 01       	movw	r30, r12
    5aca:	80 81       	ld	r24, Z
    5acc:	91 81       	ldd	r25, Z+1	; 0x01
    5ace:	9c 01       	movw	r18, r24
    5ad0:	44 27       	eor	r20, r20
    5ad2:	37 fd       	sbrc	r19, 7
    5ad4:	40 95       	com	r20
    5ad6:	54 2f       	mov	r21, r20
    5ad8:	82 e0       	ldi	r24, 0x02	; 2
    5ada:	90 e0       	ldi	r25, 0x00	; 0
    5adc:	c8 0e       	add	r12, r24
    5ade:	d9 1e       	adc	r13, r25
    5ae0:	9f e6       	ldi	r25, 0x6F	; 111
    5ae2:	f9 2e       	mov	r15, r25
    5ae4:	f1 22       	and	r15, r17
    5ae6:	57 ff       	sbrs	r21, 7
    5ae8:	09 c0       	rjmp	.+18     	; 0x5afc <vfprintf+0x538>
    5aea:	50 95       	com	r21
    5aec:	40 95       	com	r20
    5aee:	30 95       	com	r19
    5af0:	21 95       	neg	r18
    5af2:	3f 4f       	sbci	r19, 0xFF	; 255
    5af4:	4f 4f       	sbci	r20, 0xFF	; 255
    5af6:	5f 4f       	sbci	r21, 0xFF	; 255
    5af8:	90 e8       	ldi	r25, 0x80	; 128
    5afa:	f9 2a       	or	r15, r25
    5afc:	ca 01       	movw	r24, r20
    5afe:	b9 01       	movw	r22, r18
    5b00:	ae 01       	movw	r20, r28
    5b02:	4f 5f       	subi	r20, 0xFF	; 255
    5b04:	5f 4f       	sbci	r21, 0xFF	; 255
    5b06:	2a e0       	ldi	r18, 0x0A	; 10
    5b08:	30 e0       	ldi	r19, 0x00	; 0
    5b0a:	22 d4       	rcall	.+2116   	; 0x6350 <__ultoa_invert>
    5b0c:	e8 2e       	mov	r14, r24
    5b0e:	e8 89       	ldd	r30, Y+16	; 0x10
    5b10:	ee 1a       	sub	r14, r30
    5b12:	40 c0       	rjmp	.+128    	; 0x5b94 <vfprintf+0x5d0>
    5b14:	95 37       	cpi	r25, 0x75	; 117
    5b16:	21 f4       	brne	.+8      	; 0x5b20 <vfprintf+0x55c>
    5b18:	1f 7e       	andi	r17, 0xEF	; 239
    5b1a:	2a e0       	ldi	r18, 0x0A	; 10
    5b1c:	30 e0       	ldi	r19, 0x00	; 0
    5b1e:	1c c0       	rjmp	.+56     	; 0x5b58 <vfprintf+0x594>
    5b20:	19 7f       	andi	r17, 0xF9	; 249
    5b22:	9f 36       	cpi	r25, 0x6F	; 111
    5b24:	61 f0       	breq	.+24     	; 0x5b3e <vfprintf+0x57a>
    5b26:	90 37       	cpi	r25, 0x70	; 112
    5b28:	20 f4       	brcc	.+8      	; 0x5b32 <vfprintf+0x56e>
    5b2a:	98 35       	cpi	r25, 0x58	; 88
    5b2c:	09 f0       	breq	.+2      	; 0x5b30 <vfprintf+0x56c>
    5b2e:	ab c0       	rjmp	.+342    	; 0x5c86 <vfprintf+0x6c2>
    5b30:	0f c0       	rjmp	.+30     	; 0x5b50 <vfprintf+0x58c>
    5b32:	90 37       	cpi	r25, 0x70	; 112
    5b34:	39 f0       	breq	.+14     	; 0x5b44 <vfprintf+0x580>
    5b36:	98 37       	cpi	r25, 0x78	; 120
    5b38:	09 f0       	breq	.+2      	; 0x5b3c <vfprintf+0x578>
    5b3a:	a5 c0       	rjmp	.+330    	; 0x5c86 <vfprintf+0x6c2>
    5b3c:	04 c0       	rjmp	.+8      	; 0x5b46 <vfprintf+0x582>
    5b3e:	28 e0       	ldi	r18, 0x08	; 8
    5b40:	30 e0       	ldi	r19, 0x00	; 0
    5b42:	0a c0       	rjmp	.+20     	; 0x5b58 <vfprintf+0x594>
    5b44:	10 61       	ori	r17, 0x10	; 16
    5b46:	14 fd       	sbrc	r17, 4
    5b48:	14 60       	ori	r17, 0x04	; 4
    5b4a:	20 e1       	ldi	r18, 0x10	; 16
    5b4c:	30 e0       	ldi	r19, 0x00	; 0
    5b4e:	04 c0       	rjmp	.+8      	; 0x5b58 <vfprintf+0x594>
    5b50:	14 fd       	sbrc	r17, 4
    5b52:	16 60       	ori	r17, 0x06	; 6
    5b54:	20 e1       	ldi	r18, 0x10	; 16
    5b56:	32 e0       	ldi	r19, 0x02	; 2
    5b58:	17 ff       	sbrs	r17, 7
    5b5a:	08 c0       	rjmp	.+16     	; 0x5b6c <vfprintf+0x5a8>
    5b5c:	f6 01       	movw	r30, r12
    5b5e:	60 81       	ld	r22, Z
    5b60:	71 81       	ldd	r23, Z+1	; 0x01
    5b62:	82 81       	ldd	r24, Z+2	; 0x02
    5b64:	93 81       	ldd	r25, Z+3	; 0x03
    5b66:	44 e0       	ldi	r20, 0x04	; 4
    5b68:	50 e0       	ldi	r21, 0x00	; 0
    5b6a:	08 c0       	rjmp	.+16     	; 0x5b7c <vfprintf+0x5b8>
    5b6c:	f6 01       	movw	r30, r12
    5b6e:	80 81       	ld	r24, Z
    5b70:	91 81       	ldd	r25, Z+1	; 0x01
    5b72:	bc 01       	movw	r22, r24
    5b74:	80 e0       	ldi	r24, 0x00	; 0
    5b76:	90 e0       	ldi	r25, 0x00	; 0
    5b78:	42 e0       	ldi	r20, 0x02	; 2
    5b7a:	50 e0       	ldi	r21, 0x00	; 0
    5b7c:	c4 0e       	add	r12, r20
    5b7e:	d5 1e       	adc	r13, r21
    5b80:	ae 01       	movw	r20, r28
    5b82:	4f 5f       	subi	r20, 0xFF	; 255
    5b84:	5f 4f       	sbci	r21, 0xFF	; 255
    5b86:	e4 d3       	rcall	.+1992   	; 0x6350 <__ultoa_invert>
    5b88:	e8 2e       	mov	r14, r24
    5b8a:	58 89       	ldd	r21, Y+16	; 0x10
    5b8c:	e5 1a       	sub	r14, r21
    5b8e:	8f e7       	ldi	r24, 0x7F	; 127
    5b90:	f8 2e       	mov	r15, r24
    5b92:	f1 22       	and	r15, r17
    5b94:	f6 fe       	sbrs	r15, 6
    5b96:	0b c0       	rjmp	.+22     	; 0x5bae <vfprintf+0x5ea>
    5b98:	8e ef       	ldi	r24, 0xFE	; 254
    5b9a:	f8 22       	and	r15, r24
    5b9c:	e9 14       	cp	r14, r9
    5b9e:	38 f4       	brcc	.+14     	; 0x5bae <vfprintf+0x5ea>
    5ba0:	f4 fe       	sbrs	r15, 4
    5ba2:	07 c0       	rjmp	.+14     	; 0x5bb2 <vfprintf+0x5ee>
    5ba4:	f2 fc       	sbrc	r15, 2
    5ba6:	05 c0       	rjmp	.+10     	; 0x5bb2 <vfprintf+0x5ee>
    5ba8:	9f ee       	ldi	r25, 0xEF	; 239
    5baa:	f9 22       	and	r15, r25
    5bac:	02 c0       	rjmp	.+4      	; 0x5bb2 <vfprintf+0x5ee>
    5bae:	1e 2d       	mov	r17, r14
    5bb0:	01 c0       	rjmp	.+2      	; 0x5bb4 <vfprintf+0x5f0>
    5bb2:	19 2d       	mov	r17, r9
    5bb4:	f4 fe       	sbrs	r15, 4
    5bb6:	0d c0       	rjmp	.+26     	; 0x5bd2 <vfprintf+0x60e>
    5bb8:	fe 01       	movw	r30, r28
    5bba:	ee 0d       	add	r30, r14
    5bbc:	f1 1d       	adc	r31, r1
    5bbe:	80 81       	ld	r24, Z
    5bc0:	80 33       	cpi	r24, 0x30	; 48
    5bc2:	19 f4       	brne	.+6      	; 0x5bca <vfprintf+0x606>
    5bc4:	e9 ee       	ldi	r30, 0xE9	; 233
    5bc6:	fe 22       	and	r15, r30
    5bc8:	08 c0       	rjmp	.+16     	; 0x5bda <vfprintf+0x616>
    5bca:	1f 5f       	subi	r17, 0xFF	; 255
    5bcc:	f2 fe       	sbrs	r15, 2
    5bce:	05 c0       	rjmp	.+10     	; 0x5bda <vfprintf+0x616>
    5bd0:	03 c0       	rjmp	.+6      	; 0x5bd8 <vfprintf+0x614>
    5bd2:	8f 2d       	mov	r24, r15
    5bd4:	86 78       	andi	r24, 0x86	; 134
    5bd6:	09 f0       	breq	.+2      	; 0x5bda <vfprintf+0x616>
    5bd8:	1f 5f       	subi	r17, 0xFF	; 255
    5bda:	0f 2d       	mov	r16, r15
    5bdc:	f3 fc       	sbrc	r15, 3
    5bde:	13 c0       	rjmp	.+38     	; 0x5c06 <vfprintf+0x642>
    5be0:	f0 fe       	sbrs	r15, 0
    5be2:	0e c0       	rjmp	.+28     	; 0x5c00 <vfprintf+0x63c>
    5be4:	18 15       	cp	r17, r8
    5be6:	10 f0       	brcs	.+4      	; 0x5bec <vfprintf+0x628>
    5be8:	9e 2c       	mov	r9, r14
    5bea:	0a c0       	rjmp	.+20     	; 0x5c00 <vfprintf+0x63c>
    5bec:	9e 2c       	mov	r9, r14
    5bee:	98 0c       	add	r9, r8
    5bf0:	91 1a       	sub	r9, r17
    5bf2:	18 2d       	mov	r17, r8
    5bf4:	05 c0       	rjmp	.+10     	; 0x5c00 <vfprintf+0x63c>
    5bf6:	80 e2       	ldi	r24, 0x20	; 32
    5bf8:	90 e0       	ldi	r25, 0x00	; 0
    5bfa:	b3 01       	movw	r22, r6
    5bfc:	36 d3       	rcall	.+1644   	; 0x626a <fputc>
    5bfe:	1f 5f       	subi	r17, 0xFF	; 255
    5c00:	18 15       	cp	r17, r8
    5c02:	c8 f3       	brcs	.-14     	; 0x5bf6 <vfprintf+0x632>
    5c04:	04 c0       	rjmp	.+8      	; 0x5c0e <vfprintf+0x64a>
    5c06:	18 15       	cp	r17, r8
    5c08:	10 f4       	brcc	.+4      	; 0x5c0e <vfprintf+0x64a>
    5c0a:	81 1a       	sub	r8, r17
    5c0c:	01 c0       	rjmp	.+2      	; 0x5c10 <vfprintf+0x64c>
    5c0e:	88 24       	eor	r8, r8
    5c10:	04 ff       	sbrs	r16, 4
    5c12:	0e c0       	rjmp	.+28     	; 0x5c30 <vfprintf+0x66c>
    5c14:	80 e3       	ldi	r24, 0x30	; 48
    5c16:	90 e0       	ldi	r25, 0x00	; 0
    5c18:	b3 01       	movw	r22, r6
    5c1a:	27 d3       	rcall	.+1614   	; 0x626a <fputc>
    5c1c:	02 ff       	sbrs	r16, 2
    5c1e:	1b c0       	rjmp	.+54     	; 0x5c56 <vfprintf+0x692>
    5c20:	01 fd       	sbrc	r16, 1
    5c22:	03 c0       	rjmp	.+6      	; 0x5c2a <vfprintf+0x666>
    5c24:	88 e7       	ldi	r24, 0x78	; 120
    5c26:	90 e0       	ldi	r25, 0x00	; 0
    5c28:	0e c0       	rjmp	.+28     	; 0x5c46 <vfprintf+0x682>
    5c2a:	88 e5       	ldi	r24, 0x58	; 88
    5c2c:	90 e0       	ldi	r25, 0x00	; 0
    5c2e:	0b c0       	rjmp	.+22     	; 0x5c46 <vfprintf+0x682>
    5c30:	80 2f       	mov	r24, r16
    5c32:	86 78       	andi	r24, 0x86	; 134
    5c34:	81 f0       	breq	.+32     	; 0x5c56 <vfprintf+0x692>
    5c36:	01 ff       	sbrs	r16, 1
    5c38:	02 c0       	rjmp	.+4      	; 0x5c3e <vfprintf+0x67a>
    5c3a:	8b e2       	ldi	r24, 0x2B	; 43
    5c3c:	01 c0       	rjmp	.+2      	; 0x5c40 <vfprintf+0x67c>
    5c3e:	80 e2       	ldi	r24, 0x20	; 32
    5c40:	f7 fc       	sbrc	r15, 7
    5c42:	8d e2       	ldi	r24, 0x2D	; 45
    5c44:	90 e0       	ldi	r25, 0x00	; 0
    5c46:	b3 01       	movw	r22, r6
    5c48:	10 d3       	rcall	.+1568   	; 0x626a <fputc>
    5c4a:	05 c0       	rjmp	.+10     	; 0x5c56 <vfprintf+0x692>
    5c4c:	80 e3       	ldi	r24, 0x30	; 48
    5c4e:	90 e0       	ldi	r25, 0x00	; 0
    5c50:	b3 01       	movw	r22, r6
    5c52:	0b d3       	rcall	.+1558   	; 0x626a <fputc>
    5c54:	9a 94       	dec	r9
    5c56:	e9 14       	cp	r14, r9
    5c58:	c8 f3       	brcs	.-14     	; 0x5c4c <vfprintf+0x688>
    5c5a:	ea 94       	dec	r14
    5c5c:	e1 e0       	ldi	r30, 0x01	; 1
    5c5e:	f0 e0       	ldi	r31, 0x00	; 0
    5c60:	ec 0f       	add	r30, r28
    5c62:	fd 1f       	adc	r31, r29
    5c64:	ee 0d       	add	r30, r14
    5c66:	f1 1d       	adc	r31, r1
    5c68:	80 81       	ld	r24, Z
    5c6a:	90 e0       	ldi	r25, 0x00	; 0
    5c6c:	b3 01       	movw	r22, r6
    5c6e:	fd d2       	rcall	.+1530   	; 0x626a <fputc>
    5c70:	ee 20       	and	r14, r14
    5c72:	99 f7       	brne	.-26     	; 0x5c5a <vfprintf+0x696>
    5c74:	05 c0       	rjmp	.+10     	; 0x5c80 <vfprintf+0x6bc>
    5c76:	80 e2       	ldi	r24, 0x20	; 32
    5c78:	90 e0       	ldi	r25, 0x00	; 0
    5c7a:	b3 01       	movw	r22, r6
    5c7c:	f6 d2       	rcall	.+1516   	; 0x626a <fputc>
    5c7e:	8a 94       	dec	r8
    5c80:	88 20       	and	r8, r8
    5c82:	c9 f7       	brne	.-14     	; 0x5c76 <vfprintf+0x6b2>
    5c84:	b6 cc       	rjmp	.-1684   	; 0x55f2 <vfprintf+0x2e>
    5c86:	f3 01       	movw	r30, r6
    5c88:	66 81       	ldd	r22, Z+6	; 0x06
    5c8a:	77 81       	ldd	r23, Z+7	; 0x07
    5c8c:	cb 01       	movw	r24, r22
    5c8e:	61 96       	adiw	r28, 0x11	; 17
    5c90:	e2 e1       	ldi	r30, 0x12	; 18
    5c92:	70 c0       	rjmp	.+224    	; 0x5d74 <__epilogue_restores__>

00005c94 <__mulsi3>:
    5c94:	62 9f       	mul	r22, r18
    5c96:	d0 01       	movw	r26, r0
    5c98:	73 9f       	mul	r23, r19
    5c9a:	f0 01       	movw	r30, r0
    5c9c:	82 9f       	mul	r24, r18
    5c9e:	e0 0d       	add	r30, r0
    5ca0:	f1 1d       	adc	r31, r1
    5ca2:	64 9f       	mul	r22, r20
    5ca4:	e0 0d       	add	r30, r0
    5ca6:	f1 1d       	adc	r31, r1
    5ca8:	92 9f       	mul	r25, r18
    5caa:	f0 0d       	add	r31, r0
    5cac:	83 9f       	mul	r24, r19
    5cae:	f0 0d       	add	r31, r0
    5cb0:	74 9f       	mul	r23, r20
    5cb2:	f0 0d       	add	r31, r0
    5cb4:	65 9f       	mul	r22, r21
    5cb6:	f0 0d       	add	r31, r0
    5cb8:	99 27       	eor	r25, r25
    5cba:	72 9f       	mul	r23, r18
    5cbc:	b0 0d       	add	r27, r0
    5cbe:	e1 1d       	adc	r30, r1
    5cc0:	f9 1f       	adc	r31, r25
    5cc2:	63 9f       	mul	r22, r19
    5cc4:	b0 0d       	add	r27, r0
    5cc6:	e1 1d       	adc	r30, r1
    5cc8:	f9 1f       	adc	r31, r25
    5cca:	bd 01       	movw	r22, r26
    5ccc:	cf 01       	movw	r24, r30
    5cce:	11 24       	eor	r1, r1
    5cd0:	08 95       	ret

00005cd2 <__divmodhi4>:
    5cd2:	97 fb       	bst	r25, 7
    5cd4:	09 2e       	mov	r0, r25
    5cd6:	07 26       	eor	r0, r23
    5cd8:	0a d0       	rcall	.+20     	; 0x5cee <__divmodhi4_neg1>
    5cda:	77 fd       	sbrc	r23, 7
    5cdc:	04 d0       	rcall	.+8      	; 0x5ce6 <__divmodhi4_neg2>
    5cde:	65 d0       	rcall	.+202    	; 0x5daa <__udivmodhi4>
    5ce0:	06 d0       	rcall	.+12     	; 0x5cee <__divmodhi4_neg1>
    5ce2:	00 20       	and	r0, r0
    5ce4:	1a f4       	brpl	.+6      	; 0x5cec <__divmodhi4_exit>

00005ce6 <__divmodhi4_neg2>:
    5ce6:	70 95       	com	r23
    5ce8:	61 95       	neg	r22
    5cea:	7f 4f       	sbci	r23, 0xFF	; 255

00005cec <__divmodhi4_exit>:
    5cec:	08 95       	ret

00005cee <__divmodhi4_neg1>:
    5cee:	f6 f7       	brtc	.-4      	; 0x5cec <__divmodhi4_exit>
    5cf0:	90 95       	com	r25
    5cf2:	81 95       	neg	r24
    5cf4:	9f 4f       	sbci	r25, 0xFF	; 255
    5cf6:	08 95       	ret

00005cf8 <__udivmodsi4>:
    5cf8:	a1 e2       	ldi	r26, 0x21	; 33
    5cfa:	1a 2e       	mov	r1, r26
    5cfc:	aa 1b       	sub	r26, r26
    5cfe:	bb 1b       	sub	r27, r27
    5d00:	fd 01       	movw	r30, r26
    5d02:	0d c0       	rjmp	.+26     	; 0x5d1e <__udivmodsi4_ep>

00005d04 <__udivmodsi4_loop>:
    5d04:	aa 1f       	adc	r26, r26
    5d06:	bb 1f       	adc	r27, r27
    5d08:	ee 1f       	adc	r30, r30
    5d0a:	ff 1f       	adc	r31, r31
    5d0c:	a2 17       	cp	r26, r18
    5d0e:	b3 07       	cpc	r27, r19
    5d10:	e4 07       	cpc	r30, r20
    5d12:	f5 07       	cpc	r31, r21
    5d14:	20 f0       	brcs	.+8      	; 0x5d1e <__udivmodsi4_ep>
    5d16:	a2 1b       	sub	r26, r18
    5d18:	b3 0b       	sbc	r27, r19
    5d1a:	e4 0b       	sbc	r30, r20
    5d1c:	f5 0b       	sbc	r31, r21

00005d1e <__udivmodsi4_ep>:
    5d1e:	66 1f       	adc	r22, r22
    5d20:	77 1f       	adc	r23, r23
    5d22:	88 1f       	adc	r24, r24
    5d24:	99 1f       	adc	r25, r25
    5d26:	1a 94       	dec	r1
    5d28:	69 f7       	brne	.-38     	; 0x5d04 <__udivmodsi4_loop>
    5d2a:	60 95       	com	r22
    5d2c:	70 95       	com	r23
    5d2e:	80 95       	com	r24
    5d30:	90 95       	com	r25
    5d32:	9b 01       	movw	r18, r22
    5d34:	ac 01       	movw	r20, r24
    5d36:	bd 01       	movw	r22, r26
    5d38:	cf 01       	movw	r24, r30
    5d3a:	08 95       	ret

00005d3c <__prologue_saves__>:
    5d3c:	2f 92       	push	r2
    5d3e:	3f 92       	push	r3
    5d40:	4f 92       	push	r4
    5d42:	5f 92       	push	r5
    5d44:	6f 92       	push	r6
    5d46:	7f 92       	push	r7
    5d48:	8f 92       	push	r8
    5d4a:	9f 92       	push	r9
    5d4c:	af 92       	push	r10
    5d4e:	bf 92       	push	r11
    5d50:	cf 92       	push	r12
    5d52:	df 92       	push	r13
    5d54:	ef 92       	push	r14
    5d56:	ff 92       	push	r15
    5d58:	0f 93       	push	r16
    5d5a:	1f 93       	push	r17
    5d5c:	cf 93       	push	r28
    5d5e:	df 93       	push	r29
    5d60:	cd b7       	in	r28, 0x3d	; 61
    5d62:	de b7       	in	r29, 0x3e	; 62
    5d64:	ca 1b       	sub	r28, r26
    5d66:	db 0b       	sbc	r29, r27
    5d68:	0f b6       	in	r0, 0x3f	; 63
    5d6a:	f8 94       	cli
    5d6c:	de bf       	out	0x3e, r29	; 62
    5d6e:	0f be       	out	0x3f, r0	; 63
    5d70:	cd bf       	out	0x3d, r28	; 61
    5d72:	09 94       	ijmp

00005d74 <__epilogue_restores__>:
    5d74:	2a 88       	ldd	r2, Y+18	; 0x12
    5d76:	39 88       	ldd	r3, Y+17	; 0x11
    5d78:	48 88       	ldd	r4, Y+16	; 0x10
    5d7a:	5f 84       	ldd	r5, Y+15	; 0x0f
    5d7c:	6e 84       	ldd	r6, Y+14	; 0x0e
    5d7e:	7d 84       	ldd	r7, Y+13	; 0x0d
    5d80:	8c 84       	ldd	r8, Y+12	; 0x0c
    5d82:	9b 84       	ldd	r9, Y+11	; 0x0b
    5d84:	aa 84       	ldd	r10, Y+10	; 0x0a
    5d86:	b9 84       	ldd	r11, Y+9	; 0x09
    5d88:	c8 84       	ldd	r12, Y+8	; 0x08
    5d8a:	df 80       	ldd	r13, Y+7	; 0x07
    5d8c:	ee 80       	ldd	r14, Y+6	; 0x06
    5d8e:	fd 80       	ldd	r15, Y+5	; 0x05
    5d90:	0c 81       	ldd	r16, Y+4	; 0x04
    5d92:	1b 81       	ldd	r17, Y+3	; 0x03
    5d94:	aa 81       	ldd	r26, Y+2	; 0x02
    5d96:	b9 81       	ldd	r27, Y+1	; 0x01
    5d98:	ce 0f       	add	r28, r30
    5d9a:	d1 1d       	adc	r29, r1
    5d9c:	0f b6       	in	r0, 0x3f	; 63
    5d9e:	f8 94       	cli
    5da0:	de bf       	out	0x3e, r29	; 62
    5da2:	0f be       	out	0x3f, r0	; 63
    5da4:	cd bf       	out	0x3d, r28	; 61
    5da6:	ed 01       	movw	r28, r26
    5da8:	08 95       	ret

00005daa <__udivmodhi4>:
    5daa:	aa 1b       	sub	r26, r26
    5dac:	bb 1b       	sub	r27, r27
    5dae:	51 e1       	ldi	r21, 0x11	; 17
    5db0:	07 c0       	rjmp	.+14     	; 0x5dc0 <__udivmodhi4_ep>

00005db2 <__udivmodhi4_loop>:
    5db2:	aa 1f       	adc	r26, r26
    5db4:	bb 1f       	adc	r27, r27
    5db6:	a6 17       	cp	r26, r22
    5db8:	b7 07       	cpc	r27, r23
    5dba:	10 f0       	brcs	.+4      	; 0x5dc0 <__udivmodhi4_ep>
    5dbc:	a6 1b       	sub	r26, r22
    5dbe:	b7 0b       	sbc	r27, r23

00005dc0 <__udivmodhi4_ep>:
    5dc0:	88 1f       	adc	r24, r24
    5dc2:	99 1f       	adc	r25, r25
    5dc4:	5a 95       	dec	r21
    5dc6:	a9 f7       	brne	.-22     	; 0x5db2 <__udivmodhi4_loop>
    5dc8:	80 95       	com	r24
    5dca:	90 95       	com	r25
    5dcc:	bc 01       	movw	r22, r24
    5dce:	cd 01       	movw	r24, r26
    5dd0:	08 95       	ret

00005dd2 <malloc>:
    5dd2:	cf 93       	push	r28
    5dd4:	df 93       	push	r29
    5dd6:	bc 01       	movw	r22, r24
    5dd8:	82 30       	cpi	r24, 0x02	; 2
    5dda:	91 05       	cpc	r25, r1
    5ddc:	10 f4       	brcc	.+4      	; 0x5de2 <malloc+0x10>
    5dde:	62 e0       	ldi	r22, 0x02	; 2
    5de0:	70 e0       	ldi	r23, 0x00	; 0
    5de2:	a0 91 59 05 	lds	r26, 0x0559
    5de6:	b0 91 5a 05 	lds	r27, 0x055A
    5dea:	ed 01       	movw	r28, r26
    5dec:	e0 e0       	ldi	r30, 0x00	; 0
    5dee:	f0 e0       	ldi	r31, 0x00	; 0
    5df0:	40 e0       	ldi	r20, 0x00	; 0
    5df2:	50 e0       	ldi	r21, 0x00	; 0
    5df4:	21 c0       	rjmp	.+66     	; 0x5e38 <malloc+0x66>
    5df6:	88 81       	ld	r24, Y
    5df8:	99 81       	ldd	r25, Y+1	; 0x01
    5dfa:	86 17       	cp	r24, r22
    5dfc:	97 07       	cpc	r25, r23
    5dfe:	69 f4       	brne	.+26     	; 0x5e1a <malloc+0x48>
    5e00:	8a 81       	ldd	r24, Y+2	; 0x02
    5e02:	9b 81       	ldd	r25, Y+3	; 0x03
    5e04:	30 97       	sbiw	r30, 0x00	; 0
    5e06:	19 f0       	breq	.+6      	; 0x5e0e <malloc+0x3c>
    5e08:	93 83       	std	Z+3, r25	; 0x03
    5e0a:	82 83       	std	Z+2, r24	; 0x02
    5e0c:	04 c0       	rjmp	.+8      	; 0x5e16 <malloc+0x44>
    5e0e:	90 93 5a 05 	sts	0x055A, r25
    5e12:	80 93 59 05 	sts	0x0559, r24
    5e16:	fe 01       	movw	r30, r28
    5e18:	34 c0       	rjmp	.+104    	; 0x5e82 <malloc+0xb0>
    5e1a:	68 17       	cp	r22, r24
    5e1c:	79 07       	cpc	r23, r25
    5e1e:	38 f4       	brcc	.+14     	; 0x5e2e <malloc+0x5c>
    5e20:	41 15       	cp	r20, r1
    5e22:	51 05       	cpc	r21, r1
    5e24:	19 f0       	breq	.+6      	; 0x5e2c <malloc+0x5a>
    5e26:	84 17       	cp	r24, r20
    5e28:	95 07       	cpc	r25, r21
    5e2a:	08 f4       	brcc	.+2      	; 0x5e2e <malloc+0x5c>
    5e2c:	ac 01       	movw	r20, r24
    5e2e:	fe 01       	movw	r30, r28
    5e30:	8a 81       	ldd	r24, Y+2	; 0x02
    5e32:	9b 81       	ldd	r25, Y+3	; 0x03
    5e34:	9c 01       	movw	r18, r24
    5e36:	e9 01       	movw	r28, r18
    5e38:	20 97       	sbiw	r28, 0x00	; 0
    5e3a:	e9 f6       	brne	.-70     	; 0x5df6 <malloc+0x24>
    5e3c:	41 15       	cp	r20, r1
    5e3e:	51 05       	cpc	r21, r1
    5e40:	a9 f1       	breq	.+106    	; 0x5eac <malloc+0xda>
    5e42:	ca 01       	movw	r24, r20
    5e44:	86 1b       	sub	r24, r22
    5e46:	97 0b       	sbc	r25, r23
    5e48:	04 97       	sbiw	r24, 0x04	; 4
    5e4a:	08 f4       	brcc	.+2      	; 0x5e4e <malloc+0x7c>
    5e4c:	ba 01       	movw	r22, r20
    5e4e:	e0 e0       	ldi	r30, 0x00	; 0
    5e50:	f0 e0       	ldi	r31, 0x00	; 0
    5e52:	2a c0       	rjmp	.+84     	; 0x5ea8 <malloc+0xd6>
    5e54:	8d 91       	ld	r24, X+
    5e56:	9c 91       	ld	r25, X
    5e58:	11 97       	sbiw	r26, 0x01	; 1
    5e5a:	84 17       	cp	r24, r20
    5e5c:	95 07       	cpc	r25, r21
    5e5e:	f9 f4       	brne	.+62     	; 0x5e9e <malloc+0xcc>
    5e60:	64 17       	cp	r22, r20
    5e62:	75 07       	cpc	r23, r21
    5e64:	81 f4       	brne	.+32     	; 0x5e86 <malloc+0xb4>
    5e66:	12 96       	adiw	r26, 0x02	; 2
    5e68:	8d 91       	ld	r24, X+
    5e6a:	9c 91       	ld	r25, X
    5e6c:	13 97       	sbiw	r26, 0x03	; 3
    5e6e:	30 97       	sbiw	r30, 0x00	; 0
    5e70:	19 f0       	breq	.+6      	; 0x5e78 <malloc+0xa6>
    5e72:	93 83       	std	Z+3, r25	; 0x03
    5e74:	82 83       	std	Z+2, r24	; 0x02
    5e76:	04 c0       	rjmp	.+8      	; 0x5e80 <malloc+0xae>
    5e78:	90 93 5a 05 	sts	0x055A, r25
    5e7c:	80 93 59 05 	sts	0x0559, r24
    5e80:	fd 01       	movw	r30, r26
    5e82:	32 96       	adiw	r30, 0x02	; 2
    5e84:	4f c0       	rjmp	.+158    	; 0x5f24 <malloc+0x152>
    5e86:	ca 01       	movw	r24, r20
    5e88:	86 1b       	sub	r24, r22
    5e8a:	97 0b       	sbc	r25, r23
    5e8c:	fd 01       	movw	r30, r26
    5e8e:	e8 0f       	add	r30, r24
    5e90:	f9 1f       	adc	r31, r25
    5e92:	61 93       	st	Z+, r22
    5e94:	71 93       	st	Z+, r23
    5e96:	02 97       	sbiw	r24, 0x02	; 2
    5e98:	8d 93       	st	X+, r24
    5e9a:	9c 93       	st	X, r25
    5e9c:	43 c0       	rjmp	.+134    	; 0x5f24 <malloc+0x152>
    5e9e:	fd 01       	movw	r30, r26
    5ea0:	82 81       	ldd	r24, Z+2	; 0x02
    5ea2:	93 81       	ldd	r25, Z+3	; 0x03
    5ea4:	9c 01       	movw	r18, r24
    5ea6:	d9 01       	movw	r26, r18
    5ea8:	10 97       	sbiw	r26, 0x00	; 0
    5eaa:	a1 f6       	brne	.-88     	; 0x5e54 <malloc+0x82>
    5eac:	80 91 57 05 	lds	r24, 0x0557
    5eb0:	90 91 58 05 	lds	r25, 0x0558
    5eb4:	89 2b       	or	r24, r25
    5eb6:	41 f4       	brne	.+16     	; 0x5ec8 <malloc+0xf6>
    5eb8:	80 91 3f 02 	lds	r24, 0x023F
    5ebc:	90 91 40 02 	lds	r25, 0x0240
    5ec0:	90 93 58 05 	sts	0x0558, r25
    5ec4:	80 93 57 05 	sts	0x0557, r24
    5ec8:	40 91 41 02 	lds	r20, 0x0241
    5ecc:	50 91 42 02 	lds	r21, 0x0242
    5ed0:	41 15       	cp	r20, r1
    5ed2:	51 05       	cpc	r21, r1
    5ed4:	41 f4       	brne	.+16     	; 0x5ee6 <malloc+0x114>
    5ed6:	4d b7       	in	r20, 0x3d	; 61
    5ed8:	5e b7       	in	r21, 0x3e	; 62
    5eda:	80 91 3d 02 	lds	r24, 0x023D
    5ede:	90 91 3e 02 	lds	r25, 0x023E
    5ee2:	48 1b       	sub	r20, r24
    5ee4:	59 0b       	sbc	r21, r25
    5ee6:	20 91 57 05 	lds	r18, 0x0557
    5eea:	30 91 58 05 	lds	r19, 0x0558
    5eee:	24 17       	cp	r18, r20
    5ef0:	35 07       	cpc	r19, r21
    5ef2:	b0 f4       	brcc	.+44     	; 0x5f20 <malloc+0x14e>
    5ef4:	ca 01       	movw	r24, r20
    5ef6:	82 1b       	sub	r24, r18
    5ef8:	93 0b       	sbc	r25, r19
    5efa:	86 17       	cp	r24, r22
    5efc:	97 07       	cpc	r25, r23
    5efe:	80 f0       	brcs	.+32     	; 0x5f20 <malloc+0x14e>
    5f00:	ab 01       	movw	r20, r22
    5f02:	4e 5f       	subi	r20, 0xFE	; 254
    5f04:	5f 4f       	sbci	r21, 0xFF	; 255
    5f06:	84 17       	cp	r24, r20
    5f08:	95 07       	cpc	r25, r21
    5f0a:	50 f0       	brcs	.+20     	; 0x5f20 <malloc+0x14e>
    5f0c:	42 0f       	add	r20, r18
    5f0e:	53 1f       	adc	r21, r19
    5f10:	50 93 58 05 	sts	0x0558, r21
    5f14:	40 93 57 05 	sts	0x0557, r20
    5f18:	f9 01       	movw	r30, r18
    5f1a:	61 93       	st	Z+, r22
    5f1c:	71 93       	st	Z+, r23
    5f1e:	02 c0       	rjmp	.+4      	; 0x5f24 <malloc+0x152>
    5f20:	e0 e0       	ldi	r30, 0x00	; 0
    5f22:	f0 e0       	ldi	r31, 0x00	; 0
    5f24:	cf 01       	movw	r24, r30
    5f26:	df 91       	pop	r29
    5f28:	cf 91       	pop	r28
    5f2a:	08 95       	ret

00005f2c <free>:
    5f2c:	cf 93       	push	r28
    5f2e:	df 93       	push	r29
    5f30:	00 97       	sbiw	r24, 0x00	; 0
    5f32:	09 f4       	brne	.+2      	; 0x5f36 <free+0xa>
    5f34:	50 c0       	rjmp	.+160    	; 0x5fd6 <free+0xaa>
    5f36:	ec 01       	movw	r28, r24
    5f38:	22 97       	sbiw	r28, 0x02	; 2
    5f3a:	1b 82       	std	Y+3, r1	; 0x03
    5f3c:	1a 82       	std	Y+2, r1	; 0x02
    5f3e:	a0 91 59 05 	lds	r26, 0x0559
    5f42:	b0 91 5a 05 	lds	r27, 0x055A
    5f46:	10 97       	sbiw	r26, 0x00	; 0
    5f48:	09 f1       	breq	.+66     	; 0x5f8c <free+0x60>
    5f4a:	40 e0       	ldi	r20, 0x00	; 0
    5f4c:	50 e0       	ldi	r21, 0x00	; 0
    5f4e:	ac 17       	cp	r26, r28
    5f50:	bd 07       	cpc	r27, r29
    5f52:	08 f1       	brcs	.+66     	; 0x5f96 <free+0x6a>
    5f54:	bb 83       	std	Y+3, r27	; 0x03
    5f56:	aa 83       	std	Y+2, r26	; 0x02
    5f58:	fe 01       	movw	r30, r28
    5f5a:	21 91       	ld	r18, Z+
    5f5c:	31 91       	ld	r19, Z+
    5f5e:	e2 0f       	add	r30, r18
    5f60:	f3 1f       	adc	r31, r19
    5f62:	ae 17       	cp	r26, r30
    5f64:	bf 07       	cpc	r27, r31
    5f66:	79 f4       	brne	.+30     	; 0x5f86 <free+0x5a>
    5f68:	8d 91       	ld	r24, X+
    5f6a:	9c 91       	ld	r25, X
    5f6c:	11 97       	sbiw	r26, 0x01	; 1
    5f6e:	28 0f       	add	r18, r24
    5f70:	39 1f       	adc	r19, r25
    5f72:	2e 5f       	subi	r18, 0xFE	; 254
    5f74:	3f 4f       	sbci	r19, 0xFF	; 255
    5f76:	39 83       	std	Y+1, r19	; 0x01
    5f78:	28 83       	st	Y, r18
    5f7a:	12 96       	adiw	r26, 0x02	; 2
    5f7c:	8d 91       	ld	r24, X+
    5f7e:	9c 91       	ld	r25, X
    5f80:	13 97       	sbiw	r26, 0x03	; 3
    5f82:	9b 83       	std	Y+3, r25	; 0x03
    5f84:	8a 83       	std	Y+2, r24	; 0x02
    5f86:	41 15       	cp	r20, r1
    5f88:	51 05       	cpc	r21, r1
    5f8a:	71 f4       	brne	.+28     	; 0x5fa8 <free+0x7c>
    5f8c:	d0 93 5a 05 	sts	0x055A, r29
    5f90:	c0 93 59 05 	sts	0x0559, r28
    5f94:	20 c0       	rjmp	.+64     	; 0x5fd6 <free+0xaa>
    5f96:	12 96       	adiw	r26, 0x02	; 2
    5f98:	8d 91       	ld	r24, X+
    5f9a:	9c 91       	ld	r25, X
    5f9c:	13 97       	sbiw	r26, 0x03	; 3
    5f9e:	ad 01       	movw	r20, r26
    5fa0:	00 97       	sbiw	r24, 0x00	; 0
    5fa2:	11 f0       	breq	.+4      	; 0x5fa8 <free+0x7c>
    5fa4:	dc 01       	movw	r26, r24
    5fa6:	d3 cf       	rjmp	.-90     	; 0x5f4e <free+0x22>
    5fa8:	fa 01       	movw	r30, r20
    5faa:	d3 83       	std	Z+3, r29	; 0x03
    5fac:	c2 83       	std	Z+2, r28	; 0x02
    5fae:	21 91       	ld	r18, Z+
    5fb0:	31 91       	ld	r19, Z+
    5fb2:	e2 0f       	add	r30, r18
    5fb4:	f3 1f       	adc	r31, r19
    5fb6:	ce 17       	cp	r28, r30
    5fb8:	df 07       	cpc	r29, r31
    5fba:	69 f4       	brne	.+26     	; 0x5fd6 <free+0xaa>
    5fbc:	88 81       	ld	r24, Y
    5fbe:	99 81       	ldd	r25, Y+1	; 0x01
    5fc0:	28 0f       	add	r18, r24
    5fc2:	39 1f       	adc	r19, r25
    5fc4:	2e 5f       	subi	r18, 0xFE	; 254
    5fc6:	3f 4f       	sbci	r19, 0xFF	; 255
    5fc8:	fa 01       	movw	r30, r20
    5fca:	31 83       	std	Z+1, r19	; 0x01
    5fcc:	20 83       	st	Z, r18
    5fce:	8a 81       	ldd	r24, Y+2	; 0x02
    5fd0:	9b 81       	ldd	r25, Y+3	; 0x03
    5fd2:	93 83       	std	Z+3, r25	; 0x03
    5fd4:	82 83       	std	Z+2, r24	; 0x02
    5fd6:	df 91       	pop	r29
    5fd8:	cf 91       	pop	r28
    5fda:	08 95       	ret

00005fdc <do_rand>:
    5fdc:	a0 e0       	ldi	r26, 0x00	; 0
    5fde:	b0 e0       	ldi	r27, 0x00	; 0
    5fe0:	e3 ef       	ldi	r30, 0xF3	; 243
    5fe2:	ff e2       	ldi	r31, 0x2F	; 47
    5fe4:	b3 ce       	rjmp	.-666    	; 0x5d4c <__prologue_saves__+0x10>
    5fe6:	ec 01       	movw	r28, r24
    5fe8:	a8 80       	ld	r10, Y
    5fea:	b9 80       	ldd	r11, Y+1	; 0x01
    5fec:	ca 80       	ldd	r12, Y+2	; 0x02
    5fee:	db 80       	ldd	r13, Y+3	; 0x03
    5ff0:	a1 14       	cp	r10, r1
    5ff2:	b1 04       	cpc	r11, r1
    5ff4:	c1 04       	cpc	r12, r1
    5ff6:	d1 04       	cpc	r13, r1
    5ff8:	41 f4       	brne	.+16     	; 0x600a <do_rand+0x2e>
    5ffa:	84 e2       	ldi	r24, 0x24	; 36
    5ffc:	a8 2e       	mov	r10, r24
    5ffe:	89 ed       	ldi	r24, 0xD9	; 217
    6000:	b8 2e       	mov	r11, r24
    6002:	8b e5       	ldi	r24, 0x5B	; 91
    6004:	c8 2e       	mov	r12, r24
    6006:	87 e0       	ldi	r24, 0x07	; 7
    6008:	d8 2e       	mov	r13, r24
    600a:	c6 01       	movw	r24, r12
    600c:	b5 01       	movw	r22, r10
    600e:	2d e1       	ldi	r18, 0x1D	; 29
    6010:	33 ef       	ldi	r19, 0xF3	; 243
    6012:	41 e0       	ldi	r20, 0x01	; 1
    6014:	50 e0       	ldi	r21, 0x00	; 0
    6016:	fa d1       	rcall	.+1012   	; 0x640c <__divmodsi4>
    6018:	27 ea       	ldi	r18, 0xA7	; 167
    601a:	31 e4       	ldi	r19, 0x41	; 65
    601c:	40 e0       	ldi	r20, 0x00	; 0
    601e:	50 e0       	ldi	r21, 0x00	; 0
    6020:	39 de       	rcall	.-910    	; 0x5c94 <__mulsi3>
    6022:	7b 01       	movw	r14, r22
    6024:	8c 01       	movw	r16, r24
    6026:	c6 01       	movw	r24, r12
    6028:	b5 01       	movw	r22, r10
    602a:	2d e1       	ldi	r18, 0x1D	; 29
    602c:	33 ef       	ldi	r19, 0xF3	; 243
    602e:	41 e0       	ldi	r20, 0x01	; 1
    6030:	50 e0       	ldi	r21, 0x00	; 0
    6032:	ec d1       	rcall	.+984    	; 0x640c <__divmodsi4>
    6034:	ca 01       	movw	r24, r20
    6036:	b9 01       	movw	r22, r18
    6038:	2c ee       	ldi	r18, 0xEC	; 236
    603a:	34 ef       	ldi	r19, 0xF4	; 244
    603c:	4f ef       	ldi	r20, 0xFF	; 255
    603e:	5f ef       	ldi	r21, 0xFF	; 255
    6040:	29 de       	rcall	.-942    	; 0x5c94 <__mulsi3>
    6042:	6e 0d       	add	r22, r14
    6044:	7f 1d       	adc	r23, r15
    6046:	80 1f       	adc	r24, r16
    6048:	91 1f       	adc	r25, r17
    604a:	97 ff       	sbrs	r25, 7
    604c:	04 c0       	rjmp	.+8      	; 0x6056 <do_rand+0x7a>
    604e:	61 50       	subi	r22, 0x01	; 1
    6050:	70 40       	sbci	r23, 0x00	; 0
    6052:	80 40       	sbci	r24, 0x00	; 0
    6054:	90 48       	sbci	r25, 0x80	; 128
    6056:	68 83       	st	Y, r22
    6058:	79 83       	std	Y+1, r23	; 0x01
    605a:	8a 83       	std	Y+2, r24	; 0x02
    605c:	9b 83       	std	Y+3, r25	; 0x03
    605e:	9b 01       	movw	r18, r22
    6060:	3f 77       	andi	r19, 0x7F	; 127
    6062:	c9 01       	movw	r24, r18
    6064:	cd b7       	in	r28, 0x3d	; 61
    6066:	de b7       	in	r29, 0x3e	; 62
    6068:	ea e0       	ldi	r30, 0x0A	; 10
    606a:	8c ce       	rjmp	.-744    	; 0x5d84 <__epilogue_restores__+0x10>

0000606c <rand_r>:
    606c:	b7 df       	rcall	.-146    	; 0x5fdc <do_rand>
    606e:	08 95       	ret

00006070 <rand>:
    6070:	83 e4       	ldi	r24, 0x43	; 67
    6072:	92 e0       	ldi	r25, 0x02	; 2
    6074:	b3 df       	rcall	.-154    	; 0x5fdc <do_rand>
    6076:	08 95       	ret

00006078 <srand>:
    6078:	a0 e0       	ldi	r26, 0x00	; 0
    607a:	b0 e0       	ldi	r27, 0x00	; 0
    607c:	80 93 43 02 	sts	0x0243, r24
    6080:	90 93 44 02 	sts	0x0244, r25
    6084:	a0 93 45 02 	sts	0x0245, r26
    6088:	b0 93 46 02 	sts	0x0246, r27
    608c:	08 95       	ret

0000608e <__ftoa_engine>:
    608e:	28 30       	cpi	r18, 0x08	; 8
    6090:	08 f0       	brcs	.+2      	; 0x6094 <__ftoa_engine+0x6>
    6092:	27 e0       	ldi	r18, 0x07	; 7
    6094:	33 27       	eor	r19, r19
    6096:	da 01       	movw	r26, r20
    6098:	99 0f       	add	r25, r25
    609a:	31 1d       	adc	r19, r1
    609c:	87 fd       	sbrc	r24, 7
    609e:	91 60       	ori	r25, 0x01	; 1
    60a0:	00 96       	adiw	r24, 0x00	; 0
    60a2:	61 05       	cpc	r22, r1
    60a4:	71 05       	cpc	r23, r1
    60a6:	39 f4       	brne	.+14     	; 0x60b6 <__ftoa_engine+0x28>
    60a8:	32 60       	ori	r19, 0x02	; 2
    60aa:	2e 5f       	subi	r18, 0xFE	; 254
    60ac:	3d 93       	st	X+, r19
    60ae:	30 e3       	ldi	r19, 0x30	; 48
    60b0:	2a 95       	dec	r18
    60b2:	e1 f7       	brne	.-8      	; 0x60ac <__ftoa_engine+0x1e>
    60b4:	08 95       	ret
    60b6:	9f 3f       	cpi	r25, 0xFF	; 255
    60b8:	30 f0       	brcs	.+12     	; 0x60c6 <__ftoa_engine+0x38>
    60ba:	80 38       	cpi	r24, 0x80	; 128
    60bc:	71 05       	cpc	r23, r1
    60be:	61 05       	cpc	r22, r1
    60c0:	09 f0       	breq	.+2      	; 0x60c4 <__ftoa_engine+0x36>
    60c2:	3c 5f       	subi	r19, 0xFC	; 252
    60c4:	3c 5f       	subi	r19, 0xFC	; 252
    60c6:	3d 93       	st	X+, r19
    60c8:	91 30       	cpi	r25, 0x01	; 1
    60ca:	08 f0       	brcs	.+2      	; 0x60ce <__ftoa_engine+0x40>
    60cc:	80 68       	ori	r24, 0x80	; 128
    60ce:	91 1d       	adc	r25, r1
    60d0:	df 93       	push	r29
    60d2:	cf 93       	push	r28
    60d4:	1f 93       	push	r17
    60d6:	0f 93       	push	r16
    60d8:	ff 92       	push	r15
    60da:	ef 92       	push	r14
    60dc:	19 2f       	mov	r17, r25
    60de:	98 7f       	andi	r25, 0xF8	; 248
    60e0:	96 95       	lsr	r25
    60e2:	e9 2f       	mov	r30, r25
    60e4:	96 95       	lsr	r25
    60e6:	96 95       	lsr	r25
    60e8:	e9 0f       	add	r30, r25
    60ea:	ff 27       	eor	r31, r31
    60ec:	ef 53       	subi	r30, 0x3F	; 63
    60ee:	fa 4f       	sbci	r31, 0xFA	; 250
    60f0:	99 27       	eor	r25, r25
    60f2:	33 27       	eor	r19, r19
    60f4:	ee 24       	eor	r14, r14
    60f6:	ff 24       	eor	r15, r15
    60f8:	a7 01       	movw	r20, r14
    60fa:	e7 01       	movw	r28, r14
    60fc:	05 90       	lpm	r0, Z+
    60fe:	08 94       	sec
    6100:	07 94       	ror	r0
    6102:	28 f4       	brcc	.+10     	; 0x610e <__ftoa_engine+0x80>
    6104:	36 0f       	add	r19, r22
    6106:	e7 1e       	adc	r14, r23
    6108:	f8 1e       	adc	r15, r24
    610a:	49 1f       	adc	r20, r25
    610c:	51 1d       	adc	r21, r1
    610e:	66 0f       	add	r22, r22
    6110:	77 1f       	adc	r23, r23
    6112:	88 1f       	adc	r24, r24
    6114:	99 1f       	adc	r25, r25
    6116:	06 94       	lsr	r0
    6118:	a1 f7       	brne	.-24     	; 0x6102 <__ftoa_engine+0x74>
    611a:	05 90       	lpm	r0, Z+
    611c:	07 94       	ror	r0
    611e:	28 f4       	brcc	.+10     	; 0x612a <__ftoa_engine+0x9c>
    6120:	e7 0e       	add	r14, r23
    6122:	f8 1e       	adc	r15, r24
    6124:	49 1f       	adc	r20, r25
    6126:	56 1f       	adc	r21, r22
    6128:	c1 1d       	adc	r28, r1
    612a:	77 0f       	add	r23, r23
    612c:	88 1f       	adc	r24, r24
    612e:	99 1f       	adc	r25, r25
    6130:	66 1f       	adc	r22, r22
    6132:	06 94       	lsr	r0
    6134:	a1 f7       	brne	.-24     	; 0x611e <__ftoa_engine+0x90>
    6136:	05 90       	lpm	r0, Z+
    6138:	07 94       	ror	r0
    613a:	28 f4       	brcc	.+10     	; 0x6146 <__ftoa_engine+0xb8>
    613c:	f8 0e       	add	r15, r24
    613e:	49 1f       	adc	r20, r25
    6140:	56 1f       	adc	r21, r22
    6142:	c7 1f       	adc	r28, r23
    6144:	d1 1d       	adc	r29, r1
    6146:	88 0f       	add	r24, r24
    6148:	99 1f       	adc	r25, r25
    614a:	66 1f       	adc	r22, r22
    614c:	77 1f       	adc	r23, r23
    614e:	06 94       	lsr	r0
    6150:	a1 f7       	brne	.-24     	; 0x613a <__ftoa_engine+0xac>
    6152:	05 90       	lpm	r0, Z+
    6154:	07 94       	ror	r0
    6156:	20 f4       	brcc	.+8      	; 0x6160 <__ftoa_engine+0xd2>
    6158:	49 0f       	add	r20, r25
    615a:	56 1f       	adc	r21, r22
    615c:	c7 1f       	adc	r28, r23
    615e:	d8 1f       	adc	r29, r24
    6160:	99 0f       	add	r25, r25
    6162:	66 1f       	adc	r22, r22
    6164:	77 1f       	adc	r23, r23
    6166:	88 1f       	adc	r24, r24
    6168:	06 94       	lsr	r0
    616a:	a9 f7       	brne	.-22     	; 0x6156 <__ftoa_engine+0xc8>
    616c:	84 91       	lpm	r24, Z+
    616e:	10 95       	com	r17
    6170:	17 70       	andi	r17, 0x07	; 7
    6172:	41 f0       	breq	.+16     	; 0x6184 <__ftoa_engine+0xf6>
    6174:	d6 95       	lsr	r29
    6176:	c7 95       	ror	r28
    6178:	57 95       	ror	r21
    617a:	47 95       	ror	r20
    617c:	f7 94       	ror	r15
    617e:	e7 94       	ror	r14
    6180:	1a 95       	dec	r17
    6182:	c1 f7       	brne	.-16     	; 0x6174 <__ftoa_engine+0xe6>
    6184:	e7 e6       	ldi	r30, 0x67	; 103
    6186:	f5 e0       	ldi	r31, 0x05	; 5
    6188:	68 94       	set
    618a:	15 90       	lpm	r1, Z+
    618c:	15 91       	lpm	r17, Z+
    618e:	35 91       	lpm	r19, Z+
    6190:	65 91       	lpm	r22, Z+
    6192:	95 91       	lpm	r25, Z+
    6194:	05 90       	lpm	r0, Z+
    6196:	7f e2       	ldi	r23, 0x2F	; 47
    6198:	73 95       	inc	r23
    619a:	e1 18       	sub	r14, r1
    619c:	f1 0a       	sbc	r15, r17
    619e:	43 0b       	sbc	r20, r19
    61a0:	56 0b       	sbc	r21, r22
    61a2:	c9 0b       	sbc	r28, r25
    61a4:	d0 09       	sbc	r29, r0
    61a6:	c0 f7       	brcc	.-16     	; 0x6198 <__ftoa_engine+0x10a>
    61a8:	e1 0c       	add	r14, r1
    61aa:	f1 1e       	adc	r15, r17
    61ac:	43 1f       	adc	r20, r19
    61ae:	56 1f       	adc	r21, r22
    61b0:	c9 1f       	adc	r28, r25
    61b2:	d0 1d       	adc	r29, r0
    61b4:	7e f4       	brtc	.+30     	; 0x61d4 <__ftoa_engine+0x146>
    61b6:	70 33       	cpi	r23, 0x30	; 48
    61b8:	11 f4       	brne	.+4      	; 0x61be <__ftoa_engine+0x130>
    61ba:	8a 95       	dec	r24
    61bc:	e6 cf       	rjmp	.-52     	; 0x618a <__ftoa_engine+0xfc>
    61be:	e8 94       	clt
    61c0:	01 50       	subi	r16, 0x01	; 1
    61c2:	30 f0       	brcs	.+12     	; 0x61d0 <__ftoa_engine+0x142>
    61c4:	08 0f       	add	r16, r24
    61c6:	0a f4       	brpl	.+2      	; 0x61ca <__ftoa_engine+0x13c>
    61c8:	00 27       	eor	r16, r16
    61ca:	02 17       	cp	r16, r18
    61cc:	08 f4       	brcc	.+2      	; 0x61d0 <__ftoa_engine+0x142>
    61ce:	20 2f       	mov	r18, r16
    61d0:	23 95       	inc	r18
    61d2:	02 2f       	mov	r16, r18
    61d4:	7a 33       	cpi	r23, 0x3A	; 58
    61d6:	28 f0       	brcs	.+10     	; 0x61e2 <__ftoa_engine+0x154>
    61d8:	79 e3       	ldi	r23, 0x39	; 57
    61da:	7d 93       	st	X+, r23
    61dc:	2a 95       	dec	r18
    61de:	e9 f7       	brne	.-6      	; 0x61da <__ftoa_engine+0x14c>
    61e0:	10 c0       	rjmp	.+32     	; 0x6202 <__ftoa_engine+0x174>
    61e2:	7d 93       	st	X+, r23
    61e4:	2a 95       	dec	r18
    61e6:	89 f6       	brne	.-94     	; 0x618a <__ftoa_engine+0xfc>
    61e8:	06 94       	lsr	r0
    61ea:	97 95       	ror	r25
    61ec:	67 95       	ror	r22
    61ee:	37 95       	ror	r19
    61f0:	17 95       	ror	r17
    61f2:	17 94       	ror	r1
    61f4:	e1 18       	sub	r14, r1
    61f6:	f1 0a       	sbc	r15, r17
    61f8:	43 0b       	sbc	r20, r19
    61fa:	56 0b       	sbc	r21, r22
    61fc:	c9 0b       	sbc	r28, r25
    61fe:	d0 09       	sbc	r29, r0
    6200:	98 f0       	brcs	.+38     	; 0x6228 <__ftoa_engine+0x19a>
    6202:	23 95       	inc	r18
    6204:	7e 91       	ld	r23, -X
    6206:	73 95       	inc	r23
    6208:	7a 33       	cpi	r23, 0x3A	; 58
    620a:	08 f0       	brcs	.+2      	; 0x620e <__ftoa_engine+0x180>
    620c:	70 e3       	ldi	r23, 0x30	; 48
    620e:	7c 93       	st	X, r23
    6210:	20 13       	cpse	r18, r16
    6212:	b8 f7       	brcc	.-18     	; 0x6202 <__ftoa_engine+0x174>
    6214:	7e 91       	ld	r23, -X
    6216:	70 61       	ori	r23, 0x10	; 16
    6218:	7d 93       	st	X+, r23
    621a:	30 f0       	brcs	.+12     	; 0x6228 <__ftoa_engine+0x19a>
    621c:	83 95       	inc	r24
    621e:	71 e3       	ldi	r23, 0x31	; 49
    6220:	7d 93       	st	X+, r23
    6222:	70 e3       	ldi	r23, 0x30	; 48
    6224:	2a 95       	dec	r18
    6226:	e1 f7       	brne	.-8      	; 0x6220 <__ftoa_engine+0x192>
    6228:	11 24       	eor	r1, r1
    622a:	ef 90       	pop	r14
    622c:	ff 90       	pop	r15
    622e:	0f 91       	pop	r16
    6230:	1f 91       	pop	r17
    6232:	cf 91       	pop	r28
    6234:	df 91       	pop	r29
    6236:	99 27       	eor	r25, r25
    6238:	87 fd       	sbrc	r24, 7
    623a:	90 95       	com	r25
    623c:	08 95       	ret

0000623e <strnlen_P>:
    623e:	fc 01       	movw	r30, r24
    6240:	05 90       	lpm	r0, Z+
    6242:	61 50       	subi	r22, 0x01	; 1
    6244:	70 40       	sbci	r23, 0x00	; 0
    6246:	01 10       	cpse	r0, r1
    6248:	d8 f7       	brcc	.-10     	; 0x6240 <strnlen_P+0x2>
    624a:	80 95       	com	r24
    624c:	90 95       	com	r25
    624e:	8e 0f       	add	r24, r30
    6250:	9f 1f       	adc	r25, r31
    6252:	08 95       	ret

00006254 <strnlen>:
    6254:	fc 01       	movw	r30, r24
    6256:	61 50       	subi	r22, 0x01	; 1
    6258:	70 40       	sbci	r23, 0x00	; 0
    625a:	01 90       	ld	r0, Z+
    625c:	01 10       	cpse	r0, r1
    625e:	d8 f7       	brcc	.-10     	; 0x6256 <strnlen+0x2>
    6260:	80 95       	com	r24
    6262:	90 95       	com	r25
    6264:	8e 0f       	add	r24, r30
    6266:	9f 1f       	adc	r25, r31
    6268:	08 95       	ret

0000626a <fputc>:
    626a:	0f 93       	push	r16
    626c:	1f 93       	push	r17
    626e:	cf 93       	push	r28
    6270:	df 93       	push	r29
    6272:	8c 01       	movw	r16, r24
    6274:	eb 01       	movw	r28, r22
    6276:	8b 81       	ldd	r24, Y+3	; 0x03
    6278:	81 ff       	sbrs	r24, 1
    627a:	1b c0       	rjmp	.+54     	; 0x62b2 <fputc+0x48>
    627c:	82 ff       	sbrs	r24, 2
    627e:	0d c0       	rjmp	.+26     	; 0x629a <fputc+0x30>
    6280:	2e 81       	ldd	r18, Y+6	; 0x06
    6282:	3f 81       	ldd	r19, Y+7	; 0x07
    6284:	8c 81       	ldd	r24, Y+4	; 0x04
    6286:	9d 81       	ldd	r25, Y+5	; 0x05
    6288:	28 17       	cp	r18, r24
    628a:	39 07       	cpc	r19, r25
    628c:	64 f4       	brge	.+24     	; 0x62a6 <fputc+0x3c>
    628e:	e8 81       	ld	r30, Y
    6290:	f9 81       	ldd	r31, Y+1	; 0x01
    6292:	01 93       	st	Z+, r16
    6294:	f9 83       	std	Y+1, r31	; 0x01
    6296:	e8 83       	st	Y, r30
    6298:	06 c0       	rjmp	.+12     	; 0x62a6 <fputc+0x3c>
    629a:	e8 85       	ldd	r30, Y+8	; 0x08
    629c:	f9 85       	ldd	r31, Y+9	; 0x09
    629e:	80 2f       	mov	r24, r16
    62a0:	09 95       	icall
    62a2:	89 2b       	or	r24, r25
    62a4:	31 f4       	brne	.+12     	; 0x62b2 <fputc+0x48>
    62a6:	8e 81       	ldd	r24, Y+6	; 0x06
    62a8:	9f 81       	ldd	r25, Y+7	; 0x07
    62aa:	01 96       	adiw	r24, 0x01	; 1
    62ac:	9f 83       	std	Y+7, r25	; 0x07
    62ae:	8e 83       	std	Y+6, r24	; 0x06
    62b0:	02 c0       	rjmp	.+4      	; 0x62b6 <fputc+0x4c>
    62b2:	0f ef       	ldi	r16, 0xFF	; 255
    62b4:	1f ef       	ldi	r17, 0xFF	; 255
    62b6:	c8 01       	movw	r24, r16
    62b8:	df 91       	pop	r29
    62ba:	cf 91       	pop	r28
    62bc:	1f 91       	pop	r17
    62be:	0f 91       	pop	r16
    62c0:	08 95       	ret

000062c2 <printf>:
    62c2:	a0 e0       	ldi	r26, 0x00	; 0
    62c4:	b0 e0       	ldi	r27, 0x00	; 0
    62c6:	e6 e6       	ldi	r30, 0x66	; 102
    62c8:	f1 e3       	ldi	r31, 0x31	; 49
    62ca:	48 cd       	rjmp	.-1392   	; 0x5d5c <__prologue_saves__+0x20>
    62cc:	fe 01       	movw	r30, r28
    62ce:	35 96       	adiw	r30, 0x05	; 5
    62d0:	61 91       	ld	r22, Z+
    62d2:	71 91       	ld	r23, Z+
    62d4:	80 91 5d 05 	lds	r24, 0x055D
    62d8:	90 91 5e 05 	lds	r25, 0x055E
    62dc:	af 01       	movw	r20, r30
    62de:	72 d9       	rcall	.-3356   	; 0x55c4 <vfprintf>
    62e0:	20 96       	adiw	r28, 0x00	; 0
    62e2:	e2 e0       	ldi	r30, 0x02	; 2
    62e4:	57 cd       	rjmp	.-1362   	; 0x5d94 <__epilogue_restores__+0x20>

000062e6 <puts>:
    62e6:	0f 93       	push	r16
    62e8:	1f 93       	push	r17
    62ea:	cf 93       	push	r28
    62ec:	df 93       	push	r29
    62ee:	8c 01       	movw	r16, r24
    62f0:	e0 91 5d 05 	lds	r30, 0x055D
    62f4:	f0 91 5e 05 	lds	r31, 0x055E
    62f8:	83 81       	ldd	r24, Z+3	; 0x03
    62fa:	81 ff       	sbrs	r24, 1
    62fc:	21 c0       	rjmp	.+66     	; 0x6340 <puts+0x5a>
    62fe:	c0 e0       	ldi	r28, 0x00	; 0
    6300:	d0 e0       	ldi	r29, 0x00	; 0
    6302:	0d c0       	rjmp	.+26     	; 0x631e <puts+0x38>
    6304:	e0 91 5d 05 	lds	r30, 0x055D
    6308:	f0 91 5e 05 	lds	r31, 0x055E
    630c:	20 85       	ldd	r18, Z+8	; 0x08
    630e:	31 85       	ldd	r19, Z+9	; 0x09
    6310:	bf 01       	movw	r22, r30
    6312:	f9 01       	movw	r30, r18
    6314:	09 95       	icall
    6316:	89 2b       	or	r24, r25
    6318:	11 f0       	breq	.+4      	; 0x631e <puts+0x38>
    631a:	cf ef       	ldi	r28, 0xFF	; 255
    631c:	df ef       	ldi	r29, 0xFF	; 255
    631e:	f8 01       	movw	r30, r16
    6320:	81 91       	ld	r24, Z+
    6322:	8f 01       	movw	r16, r30
    6324:	88 23       	and	r24, r24
    6326:	71 f7       	brne	.-36     	; 0x6304 <puts+0x1e>
    6328:	e0 91 5d 05 	lds	r30, 0x055D
    632c:	f0 91 5e 05 	lds	r31, 0x055E
    6330:	20 85       	ldd	r18, Z+8	; 0x08
    6332:	31 85       	ldd	r19, Z+9	; 0x09
    6334:	8a e0       	ldi	r24, 0x0A	; 10
    6336:	bf 01       	movw	r22, r30
    6338:	f9 01       	movw	r30, r18
    633a:	09 95       	icall
    633c:	89 2b       	or	r24, r25
    633e:	11 f0       	breq	.+4      	; 0x6344 <puts+0x5e>
    6340:	cf ef       	ldi	r28, 0xFF	; 255
    6342:	df ef       	ldi	r29, 0xFF	; 255
    6344:	ce 01       	movw	r24, r28
    6346:	df 91       	pop	r29
    6348:	cf 91       	pop	r28
    634a:	1f 91       	pop	r17
    634c:	0f 91       	pop	r16
    634e:	08 95       	ret

00006350 <__ultoa_invert>:
    6350:	fa 01       	movw	r30, r20
    6352:	aa 27       	eor	r26, r26
    6354:	28 30       	cpi	r18, 0x08	; 8
    6356:	51 f1       	breq	.+84     	; 0x63ac <__ultoa_invert+0x5c>
    6358:	20 31       	cpi	r18, 0x10	; 16
    635a:	81 f1       	breq	.+96     	; 0x63bc <__ultoa_invert+0x6c>
    635c:	e8 94       	clt
    635e:	6f 93       	push	r22
    6360:	6e 7f       	andi	r22, 0xFE	; 254
    6362:	6e 5f       	subi	r22, 0xFE	; 254
    6364:	7f 4f       	sbci	r23, 0xFF	; 255
    6366:	8f 4f       	sbci	r24, 0xFF	; 255
    6368:	9f 4f       	sbci	r25, 0xFF	; 255
    636a:	af 4f       	sbci	r26, 0xFF	; 255
    636c:	b1 e0       	ldi	r27, 0x01	; 1
    636e:	3e d0       	rcall	.+124    	; 0x63ec <__ultoa_invert+0x9c>
    6370:	b4 e0       	ldi	r27, 0x04	; 4
    6372:	3c d0       	rcall	.+120    	; 0x63ec <__ultoa_invert+0x9c>
    6374:	67 0f       	add	r22, r23
    6376:	78 1f       	adc	r23, r24
    6378:	89 1f       	adc	r24, r25
    637a:	9a 1f       	adc	r25, r26
    637c:	a1 1d       	adc	r26, r1
    637e:	68 0f       	add	r22, r24
    6380:	79 1f       	adc	r23, r25
    6382:	8a 1f       	adc	r24, r26
    6384:	91 1d       	adc	r25, r1
    6386:	a1 1d       	adc	r26, r1
    6388:	6a 0f       	add	r22, r26
    638a:	71 1d       	adc	r23, r1
    638c:	81 1d       	adc	r24, r1
    638e:	91 1d       	adc	r25, r1
    6390:	a1 1d       	adc	r26, r1
    6392:	20 d0       	rcall	.+64     	; 0x63d4 <__ultoa_invert+0x84>
    6394:	09 f4       	brne	.+2      	; 0x6398 <__ultoa_invert+0x48>
    6396:	68 94       	set
    6398:	3f 91       	pop	r19
    639a:	2a e0       	ldi	r18, 0x0A	; 10
    639c:	26 9f       	mul	r18, r22
    639e:	11 24       	eor	r1, r1
    63a0:	30 19       	sub	r19, r0
    63a2:	30 5d       	subi	r19, 0xD0	; 208
    63a4:	31 93       	st	Z+, r19
    63a6:	de f6       	brtc	.-74     	; 0x635e <__ultoa_invert+0xe>
    63a8:	cf 01       	movw	r24, r30
    63aa:	08 95       	ret
    63ac:	46 2f       	mov	r20, r22
    63ae:	47 70       	andi	r20, 0x07	; 7
    63b0:	40 5d       	subi	r20, 0xD0	; 208
    63b2:	41 93       	st	Z+, r20
    63b4:	b3 e0       	ldi	r27, 0x03	; 3
    63b6:	0f d0       	rcall	.+30     	; 0x63d6 <__ultoa_invert+0x86>
    63b8:	c9 f7       	brne	.-14     	; 0x63ac <__ultoa_invert+0x5c>
    63ba:	f6 cf       	rjmp	.-20     	; 0x63a8 <__ultoa_invert+0x58>
    63bc:	46 2f       	mov	r20, r22
    63be:	4f 70       	andi	r20, 0x0F	; 15
    63c0:	40 5d       	subi	r20, 0xD0	; 208
    63c2:	4a 33       	cpi	r20, 0x3A	; 58
    63c4:	18 f0       	brcs	.+6      	; 0x63cc <__ultoa_invert+0x7c>
    63c6:	49 5d       	subi	r20, 0xD9	; 217
    63c8:	31 fd       	sbrc	r19, 1
    63ca:	40 52       	subi	r20, 0x20	; 32
    63cc:	41 93       	st	Z+, r20
    63ce:	02 d0       	rcall	.+4      	; 0x63d4 <__ultoa_invert+0x84>
    63d0:	a9 f7       	brne	.-22     	; 0x63bc <__ultoa_invert+0x6c>
    63d2:	ea cf       	rjmp	.-44     	; 0x63a8 <__ultoa_invert+0x58>
    63d4:	b4 e0       	ldi	r27, 0x04	; 4
    63d6:	a6 95       	lsr	r26
    63d8:	97 95       	ror	r25
    63da:	87 95       	ror	r24
    63dc:	77 95       	ror	r23
    63de:	67 95       	ror	r22
    63e0:	ba 95       	dec	r27
    63e2:	c9 f7       	brne	.-14     	; 0x63d6 <__ultoa_invert+0x86>
    63e4:	00 97       	sbiw	r24, 0x00	; 0
    63e6:	61 05       	cpc	r22, r1
    63e8:	71 05       	cpc	r23, r1
    63ea:	08 95       	ret
    63ec:	9b 01       	movw	r18, r22
    63ee:	ac 01       	movw	r20, r24
    63f0:	0a 2e       	mov	r0, r26
    63f2:	06 94       	lsr	r0
    63f4:	57 95       	ror	r21
    63f6:	47 95       	ror	r20
    63f8:	37 95       	ror	r19
    63fa:	27 95       	ror	r18
    63fc:	ba 95       	dec	r27
    63fe:	c9 f7       	brne	.-14     	; 0x63f2 <__ultoa_invert+0xa2>
    6400:	62 0f       	add	r22, r18
    6402:	73 1f       	adc	r23, r19
    6404:	84 1f       	adc	r24, r20
    6406:	95 1f       	adc	r25, r21
    6408:	a0 1d       	adc	r26, r0
    640a:	08 95       	ret

0000640c <__divmodsi4>:
    640c:	97 fb       	bst	r25, 7
    640e:	09 2e       	mov	r0, r25
    6410:	05 26       	eor	r0, r21
    6412:	0e d0       	rcall	.+28     	; 0x6430 <__divmodsi4_neg1>
    6414:	57 fd       	sbrc	r21, 7
    6416:	04 d0       	rcall	.+8      	; 0x6420 <__divmodsi4_neg2>
    6418:	6f dc       	rcall	.-1826   	; 0x5cf8 <__udivmodsi4>
    641a:	0a d0       	rcall	.+20     	; 0x6430 <__divmodsi4_neg1>
    641c:	00 1c       	adc	r0, r0
    641e:	38 f4       	brcc	.+14     	; 0x642e <__divmodsi4_exit>

00006420 <__divmodsi4_neg2>:
    6420:	50 95       	com	r21
    6422:	40 95       	com	r20
    6424:	30 95       	com	r19
    6426:	21 95       	neg	r18
    6428:	3f 4f       	sbci	r19, 0xFF	; 255
    642a:	4f 4f       	sbci	r20, 0xFF	; 255
    642c:	5f 4f       	sbci	r21, 0xFF	; 255

0000642e <__divmodsi4_exit>:
    642e:	08 95       	ret

00006430 <__divmodsi4_neg1>:
    6430:	f6 f7       	brtc	.-4      	; 0x642e <__divmodsi4_exit>
    6432:	90 95       	com	r25
    6434:	80 95       	com	r24
    6436:	70 95       	com	r23
    6438:	61 95       	neg	r22
    643a:	7f 4f       	sbci	r23, 0xFF	; 255
    643c:	8f 4f       	sbci	r24, 0xFF	; 255
    643e:	9f 4f       	sbci	r25, 0xFF	; 255
    6440:	08 95       	ret

00006442 <_exit>:
    6442:	f8 94       	cli

00006444 <__stop_program>:
    6444:	ff cf       	rjmp	.-2      	; 0x6444 <__stop_program>
>>>>>>> Lab6 Code
