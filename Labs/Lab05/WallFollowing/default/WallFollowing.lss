
WallFollowing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000aa  00800100  00005892  00005926  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005892  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000301  008001aa  008001aa  000059d0  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  000059d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000314  00000000  00000000  00005a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f9e  00000000  00000000  00005d24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002ae  00000000  00000000  00006cc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000cab  00000000  00000000  00006f70  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000200  00000000  00000000  00007c1c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000a74  00000000  00000000  00007e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b09  00000000  00000000  00008890  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 31 03 	jmp	0x662	; 0x662 <__ctors_end>
       4:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       8:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      10:	0c 94 19 18 	jmp	0x3032	; 0x3032 <__vector_4>
      14:	0c 94 42 18 	jmp	0x3084	; 0x3084 <__vector_5>
      18:	0c 94 6b 18 	jmp	0x30d6	; 0x30d6 <__vector_6>
      1c:	0c 94 94 18 	jmp	0x3128	; 0x3128 <__vector_7>
      20:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      24:	0c 94 fa 16 	jmp	0x2df4	; 0x2df4 <__vector_9>
      28:	0c 94 23 17 	jmp	0x2e46	; 0x2e46 <__vector_10>
      2c:	0c 94 4c 17 	jmp	0x2e98	; 0x2e98 <__vector_11>
      30:	0c 94 c7 17 	jmp	0x2f8e	; 0x2f8e <__vector_12>
      34:	0c 94 75 17 	jmp	0x2eea	; 0x2eea <__vector_13>
      38:	0c 94 9e 17 	jmp	0x2f3c	; 0x2f3c <__vector_14>
      3c:	0c 94 f0 17 	jmp	0x2fe0	; 0x2fe0 <__vector_15>
      40:	0c 94 7f 16 	jmp	0x2cfe	; 0x2cfe <__vector_16>
      44:	0c 94 a8 16 	jmp	0x2d50	; 0x2d50 <__vector_17>
      48:	0c 94 d1 16 	jmp	0x2da2	; 0x2da2 <__vector_18>
      4c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      50:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      54:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      58:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      5c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      60:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      64:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      68:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      6c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      70:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      74:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      78:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      7c:	e4 13       	cpse	r30, r20
      7e:	e7 13       	cpse	r30, r23
      80:	ea 13       	cpse	r30, r26
      82:	ed 13       	cpse	r30, r29
      84:	f6 13       	cpse	r31, r22
      86:	f0 13       	cpse	r31, r16
      88:	f3 13       	cpse	r31, r19
      8a:	f9 13       	cpse	r31, r25
      8c:	fc 13       	cpse	r31, r28
      8e:	ff 13       	cpse	r31, r31
      90:	02 14       	cp	r0, r2
      92:	05 14       	cp	r0, r5
      94:	08 14       	cp	r0, r8
      96:	0b 14       	cp	r0, r11
      98:	0e 14       	cp	r0, r14
      9a:	11 14       	cp	r1, r1
      9c:	14 14       	cp	r1, r4
      9e:	17 14       	cp	r1, r7
      a0:	1a 14       	cp	r1, r10
      a2:	2b 14       	cp	r2, r11
      a4:	2e 14       	cp	r2, r14
      a6:	31 14       	cp	r3, r1
      a8:	34 14       	cp	r3, r4
      aa:	3d 14       	cp	r3, r13
      ac:	37 14       	cp	r3, r7
      ae:	3a 14       	cp	r3, r10
      b0:	40 14       	cp	r4, r0
      b2:	43 14       	cp	r4, r3
      b4:	46 14       	cp	r4, r6
      b6:	49 14       	cp	r4, r9
      b8:	4c 14       	cp	r4, r12
      ba:	4f 14       	cp	r4, r15
      bc:	52 14       	cp	r5, r2
      be:	55 14       	cp	r5, r5
      c0:	58 14       	cp	r5, r8
      c2:	5b 14       	cp	r5, r11
      c4:	5e 14       	cp	r5, r14
      c6:	61 14       	cp	r6, r1
      c8:	07 63       	ori	r16, 0x37	; 55
      ca:	42 36       	cpi	r20, 0x62	; 98
      cc:	b7 9b       	sbis	0x16, 7	; 22
      ce:	d8 a7       	std	Y+40, r29	; 0x28
      d0:	1a 39       	cpi	r17, 0x9A	; 154
      d2:	68 56       	subi	r22, 0x68	; 104
      d4:	18 ae       	std	Y+56, r1	; 0x38
      d6:	ba ab       	std	Y+50, r27	; 0x32
      d8:	55 8c       	ldd	r5, Z+29	; 0x1d
      da:	1d 3c       	cpi	r17, 0xCD	; 205
      dc:	b7 cc       	rjmp	.-1682   	; 0xfffffa4c <__eeprom_end+0xff7efa4c>
      de:	57 63       	ori	r21, 0x37	; 55
      e0:	bd 6d       	ori	r27, 0xDD	; 221
      e2:	ed fd       	.word	0xfded	; ????
      e4:	75 3e       	cpi	r23, 0xE5	; 229
      e6:	f6 17       	cp	r31, r22
      e8:	72 31       	cpi	r23, 0x12	; 18
      ea:	bf 00       	.word	0x00bf	; ????
      ec:	00 00       	nop
      ee:	80 3f       	cpi	r24, 0xF0	; 240
      f0:	08 00       	.word	0x0008	; ????
      f2:	00 00       	nop
      f4:	be 92       	st	-X, r11
      f6:	24 49       	sbci	r18, 0x94	; 148
      f8:	12 3e       	cpi	r17, 0xE2	; 226
      fa:	ab aa       	std	Y+51, r10	; 0x33
      fc:	aa 2a       	or	r10, r26
      fe:	be cd       	rjmp	.-1156   	; 0xfffffc7c <__eeprom_end+0xff7efc7c>
     100:	cc cc       	rjmp	.-1640   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     102:	4c 3e       	cpi	r20, 0xEC	; 236
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	be ab       	std	Y+54, r27	; 0x36
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	aa 3e       	cpi	r26, 0xEA	; 234
     10e:	00 00       	nop
     110:	00 00       	nop
     112:	bf 00       	.word	0x00bf	; ????
     114:	00 00       	nop
     116:	80 3f       	cpi	r24, 0xF0	; 240
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	00 08       	sbc	r0, r0
     11e:	41 78       	andi	r20, 0x81	; 129
     120:	d3 bb       	out	0x13, r29	; 19
     122:	43 87       	std	Z+11, r20	; 0x0b
     124:	d1 13       	cpse	r29, r17
     126:	3d 19       	sub	r19, r13
     128:	0e 3c       	cpi	r16, 0xCE	; 206
     12a:	c3 bd       	out	0x23, r28	; 35
     12c:	42 82       	std	Z+2, r4	; 0x02
     12e:	ad 2b       	or	r26, r29
     130:	3e 68       	ori	r19, 0x8E	; 142
     132:	ec 82       	std	Y+4, r14	; 0x04
     134:	76 be       	out	0x36, r7	; 54
     136:	d9 8f       	std	Y+25, r29	; 0x19
     138:	e1 a9       	ldd	r30, Z+49	; 0x31
     13a:	3e 4c       	sbci	r19, 0xCE	; 206
     13c:	80 ef       	ldi	r24, 0xF0	; 240
     13e:	ff be       	out	0x3f, r15	; 63
     140:	01 c4       	rjmp	.+2050   	; 0x944 <read_pixel_1+0x44>
     142:	ff 7f       	andi	r31, 0xFF	; 255
     144:	3f 00       	.word	0x003f	; ????
     146:	00 00       	nop
	...

0000014a <char_bitmap>:
     14a:	16 05 01 00 00 00 00 00 00 00 fa 00 00 00 e0 00     ................
     15a:	e0 00 28 fe 28 fe 28 24 54 fe 54 48 c4 c8 10 26     ..(.(.($T.TH...&
     16a:	46 6c 92 aa 44 a0 00 a0 c0 00 00 00 38 44 82 00     Fl..D.......8D..
     17a:	00 82 44 38 00 28 10 7c 10 28 10 10 7c 10 10 00     ..D8.(.|.(..|...
     18a:	0a 0c 00 00 10 10 10 10 10 00 06 06 00 00 04 08     ................
     19a:	10 20 40 7c 8a 92 a2 7c 00 42 fe 02 00 42 86 8a     . @|...|.B...B..
     1aa:	92 62 84 82 a2 d2 8c 18 28 48 fe 08 e4 a2 a2 a2     .b......(H......
     1ba:	9c 3c 52 92 92 0c 80 8e 90 a0 c0 6c 92 92 92 6c     .<R........l...l
     1ca:	60 92 92 94 78 00 6c 6c 00 00 00 6a 6c 00 00 10     `...x.ll...jl...
     1da:	28 44 82 00 28 28 28 28 28 00 82 44 28 10 40 80     (D..(((((..D(.@.
     1ea:	8a 90 60 4c 92 9e 82 7c 7e 88 88 88 7e fe 92 92     ..`L...|~...~...
     1fa:	92 6c 7c 82 82 82 44 fe 82 82 44 38 fe 92 92 92     .l|...D...D8....
     20a:	82 fe 90 90 90 80 7c 82 92 92 5e fe 10 10 10 fe     ......|...^.....
     21a:	00 82 fe 82 00 04 02 82 fc 80 fe 10 28 44 82 fe     ............(D..
     22a:	02 02 02 02 fe 40 30 40 fe fe 20 10 08 fe 7c 82     .....@0@.. ...|.
     23a:	82 82 7c fe 90 90 90 60 7c 82 8a 84 7a fe 90 98     ..|....`|...z...
     24a:	94 62 62 92 92 92 8c 80 80 fe 80 80 fc 02 02 02     .bb.............
     25a:	fc f8 04 02 04 f8 fc 02 1c 02 fc c6 28 10 28 c6     ............(.(.
     26a:	e0 10 0e 10 e0 86 8a 92 a2 c2 00 fe 82 82 00 40     ...............@
     27a:	20 10 08 04 00 82 82 fe 00 20 40 80 40 20 02 02      ........ @.@ ..
     28a:	02 02 02 00 80 40 20 00 04 2a 2a 2a 1e fe 12 22     .....@ ..***..."
     29a:	22 1c 1c 22 22 22 04 1c 22 22 12 fe 1c 2a 2a 2a     ".."""..""...***
     2aa:	18 10 7e 90 80 40 30 4a 4a 4a 7c fe 10 20 20 1e     ..~..@0JJJ|..  .
     2ba:	00 22 be 02 00 04 02 22 bc 00 fe 08 14 22 00 00     ."....."....."..
     2ca:	82 fe 02 00 3e 20 18 20 1e 3e 10 20 20 1e 1c 22     ....> . .>.  .."
     2da:	22 22 1c 3e 28 28 28 10 10 28 28 18 3e 3e 10 20     "".>(((..((.>>. 
     2ea:	20 10 12 2a 2a 2a 04 20 fc 22 02 04 3c 02 02 04      ..***. ."..<...
     2fa:	3e 38 04 02 04 38 3c 02 0c 02 3c 22 14 08 14 22     >8...8<...<"..."
     30a:	30 0a 0a 0a 3c 22 26 2a 32 22 00 10 6c 82 00 00     0...<"&*2"..l...
     31a:	00 fe 00 00 00 82 6c 10 00 08 10 10 08 10 00 00     ......l.........
     32a:	00 00 00 7f 81 81 81 7f 7f 83 83 83 7f 7f 87 87     ................
     33a:	87 7f 7f 8f 8f 8f 7f 7f 9f 9f 9f 7f 7f bf bf bf     ................
     34a:	7f 7f ff ff ff 7f 20 40 ff 40 20 62 15 17 15 65     ...... @.@ b...e
     35a:	00 fb fb 00 00                                      .....

0000035f <CEENBoT_Inc_logo_bitmap>:
     35f:	00 00 00 00 00 c0 ff 03 00 e0 ff 07 00 f0 ff 0f     ................
     36f:	00 f8 ff 1f 00 78 00 1e 00 78 00 1e 00 78 00 1e     .....x...x...x..
     37f:	00 78 00 1e 00 78 00 1e 00 78 00 1e 00 78 00 1e     .x...x...x...x..
     38f:	00 78 00 1e 00 78 00 1e 00 00 00 00 00 00 00 00     .x...x..........
     39f:	00 80 ff 03 00 e0 ff 07 00 f0 ff 0f 00 f8 ff 1f     ................
     3af:	00 f8 3c 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     ..<..x<..x<..x<.
     3bf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     3cf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     3df:	00 00 00 00 00 e0 ff 03 00 f0 ff 07 00 f8 ff 0f     ................
     3ef:	00 f8 ff 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .....x<..x<..x<.
     3ff:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     40f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     41f:	00 00 00 00 00 f8 ff 03 00 f8 ff 0f 00 f8 ff 1f     ................
     42f:	00 f8 ff 1f 00 00 00 1e 00 00 00 1e 00 00 80 1f     ................
     43f:	00 00 f0 1f 00 00 ff 0f 00 e0 ff 07 00 f0 ff 00     ................
     44f:	00 f8 0f 00 00 f8 00 00 00 78 00 00 00 78 00 00     .........x...x..
     45f:	00 f8 ff 1f 00 f8 ff 1f 00 f0 ff 1f 00 e0 ff 1f     ................
	...
     477:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     487:	00 78 00 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x...x<..x<..x<.
     497:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 f8 7e 1f     .x<..x<..x<...~.
     4a7:	00 f8 ff 1f 00 f0 ff 0f 00 e0 e7 03 00 00 00 00     ................
     4b7:	00 00 00 38 00 ee ff 6c 00 2a 80 45 00 3a 00 47     ...8...l.*.E.:.G
     4c7:	fc 03 ff 6c fc 83 ff 39 00 de ff 0b 7c d0 81 0b     ...l...9....|...
     4d7:	fc d0 81 0b c0 d0 81 0b fc d0 81 0b 7c de ff 0b     ............|...
     4e7:	00 82 ff 39 70 02 ff 6c f8 3a 00 47 dc 2a 80 45     ...9p..l.:.G.*.E
     4f7:	cc ee ff 6c cc 00 00 38 00 00 00 00 0c 00 00 1e     ...l...8........
     507:	0c 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     517:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     527:	00 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     537:	00 00 00 5e 00 00 00 40 00 00 00 7c 00 00 00 40     ...^...@...|...@
     547:	00 00 00 40 00 00 00 7c 00 00 00 30 00 00 00 10     ...@...|...0....
     557:	00 00 00 30 00 00 00 7c                             ...0...|

0000055f <__c.1790>:
     55f:	6e 61 6e 00                                         nan.

00000563 <__c.1788>:
     563:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     573:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     583:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     593:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     5a3:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     5b3:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     5c3:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     5d3:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     5e3:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     5f3:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     603:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     613:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     623:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     633:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     643:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     653:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

00000662 <__ctors_end>:
     662:	11 24       	eor	r1, r1
     664:	1f be       	out	0x3f, r1	; 63
     666:	cf ef       	ldi	r28, 0xFF	; 255
     668:	d8 e0       	ldi	r29, 0x08	; 8
     66a:	de bf       	out	0x3e, r29	; 62
     66c:	cd bf       	out	0x3d, r28	; 61

0000066e <__do_copy_data>:
     66e:	11 e0       	ldi	r17, 0x01	; 1
     670:	a0 e0       	ldi	r26, 0x00	; 0
     672:	b1 e0       	ldi	r27, 0x01	; 1
     674:	e2 e9       	ldi	r30, 0x92	; 146
     676:	f8 e5       	ldi	r31, 0x58	; 88
     678:	02 c0       	rjmp	.+4      	; 0x67e <.do_copy_data_start>

0000067a <.do_copy_data_loop>:
     67a:	05 90       	lpm	r0, Z+
     67c:	0d 92       	st	X+, r0

0000067e <.do_copy_data_start>:
     67e:	aa 3a       	cpi	r26, 0xAA	; 170
     680:	b1 07       	cpc	r27, r17
     682:	d9 f7       	brne	.-10     	; 0x67a <.do_copy_data_loop>

00000684 <__do_clear_bss>:
     684:	14 e0       	ldi	r17, 0x04	; 4
     686:	aa ea       	ldi	r26, 0xAA	; 170
     688:	b1 e0       	ldi	r27, 0x01	; 1
     68a:	01 c0       	rjmp	.+2      	; 0x68e <.do_clear_bss_start>

0000068c <.do_clear_bss_loop>:
     68c:	1d 92       	st	X+, r1

0000068e <.do_clear_bss_start>:
     68e:	ab 3a       	cpi	r26, 0xAB	; 171
     690:	b1 07       	cpc	r27, r17
     692:	e1 f7       	brne	.-8      	; 0x68c <.do_clear_bss_loop>
     694:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <main>
     698:	0c 94 47 2c 	jmp	0x588e	; 0x588e <_exit>

0000069c <__bad_interrupt>:
     69c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006a0 <get_ambient_temp>:
* Output Return:	I2C_STATUS
* Overview:			Reads the ambient temperature
********************************************************************/

I2C_STATUS get_ambient_temp( unsigned char *ambient_temp )
{
     6a0:	1f 93       	push	r17
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6a8:	88 e6       	ldi	r24, 0x68	; 104
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     6b0:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     6b2:	88 23       	and	r24, r24
     6b4:	a1 f4       	brne	.+40     	; 0x6de <get_ambient_temp+0x3e>
	{

		// Send the register value (being 1).  This is
		// the register that contains the ambient temperature.
		i2c_stat = I2C_MSTR_send( __TPA81_AMBIENT );
     6b6:	81 e0       	ldi	r24, 0x01	; 1
     6b8:	0e 94 bd 15 	call	0x2b7a	; 0x2b7a <I2C_MSTR_send>
     6bc:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     6be:	88 23       	and	r24, r24
     6c0:	71 f4       	brne	.+28     	; 0x6de <get_ambient_temp+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     6c2:	88 e6       	ldi	r24, 0x68	; 104
     6c4:	61 e0       	ldi	r22, 0x01	; 1
     6c6:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     6ca:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     6cc:	88 23       	and	r24, r24
     6ce:	39 f4       	brne	.+14     	; 0x6de <get_ambient_temp+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( ambient_temp, FALSE );
     6d0:	ce 01       	movw	r24, r28
     6d2:	60 e0       	ldi	r22, 0x00	; 0
     6d4:	0e 94 91 15 	call	0x2b22	; 0x2b22 <I2C_MSTR_get>
     6d8:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     6da:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*ambient_temp = 0;
     6dc:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     6de:	0e 94 29 16 	call	0x2c52	; 0x2c52 <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_ambient_temp()
     6e2:	81 2f       	mov	r24, r17
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	1f 91       	pop	r17
     6ea:	08 95       	ret

000006ec <read_pixel_8>:
	return i2c_stat;
}

// get pixel eight
I2C_STATUS read_pixel_8( unsigned char *pixel_8)
{
     6ec:	1f 93       	push	r17
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6f4:	88 e6       	ldi	r24, 0x68	; 104
     6f6:	60 e0       	ldi	r22, 0x00	; 0
     6f8:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     6fc:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     6fe:	88 23       	and	r24, r24
     700:	a1 f4       	brne	.+40     	; 0x72a <read_pixel_8+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX8 );
     702:	89 e0       	ldi	r24, 0x09	; 9
     704:	0e 94 bd 15 	call	0x2b7a	; 0x2b7a <I2C_MSTR_send>
     708:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     70a:	88 23       	and	r24, r24
     70c:	71 f4       	brne	.+28     	; 0x72a <read_pixel_8+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     70e:	88 e6       	ldi	r24, 0x68	; 104
     710:	61 e0       	ldi	r22, 0x01	; 1
     712:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     716:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     718:	88 23       	and	r24, r24
     71a:	39 f4       	brne	.+14     	; 0x72a <read_pixel_8+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_8, FALSE );
     71c:	ce 01       	movw	r24, r28
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	0e 94 91 15 	call	0x2b22	; 0x2b22 <I2C_MSTR_get>
     724:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     726:	81 11       	cpse	r24, r1
					*pixel_8 = 0;
     728:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     72a:	0e 94 29 16 	call	0x2c52	; 0x2c52 <I2C_MSTR_stop>
	return i2c_stat;
}
     72e:	81 2f       	mov	r24, r17
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	1f 91       	pop	r17
     736:	08 95       	ret

00000738 <read_pixel_7>:
	return i2c_stat;
}

// get pixel seven
I2C_STATUS read_pixel_7( unsigned char *pixel_7)
{
     738:	1f 93       	push	r17
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     740:	88 e6       	ldi	r24, 0x68	; 104
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     748:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     74a:	88 23       	and	r24, r24
     74c:	a1 f4       	brne	.+40     	; 0x776 <read_pixel_7+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX7 );
     74e:	88 e0       	ldi	r24, 0x08	; 8
     750:	0e 94 bd 15 	call	0x2b7a	; 0x2b7a <I2C_MSTR_send>
     754:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     756:	88 23       	and	r24, r24
     758:	71 f4       	brne	.+28     	; 0x776 <read_pixel_7+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     75a:	88 e6       	ldi	r24, 0x68	; 104
     75c:	61 e0       	ldi	r22, 0x01	; 1
     75e:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     762:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     764:	88 23       	and	r24, r24
     766:	39 f4       	brne	.+14     	; 0x776 <read_pixel_7+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_7, FALSE );
     768:	ce 01       	movw	r24, r28
     76a:	60 e0       	ldi	r22, 0x00	; 0
     76c:	0e 94 91 15 	call	0x2b22	; 0x2b22 <I2C_MSTR_get>
     770:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     772:	81 11       	cpse	r24, r1
					*pixel_7 = 0;
     774:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     776:	0e 94 29 16 	call	0x2c52	; 0x2c52 <I2C_MSTR_stop>
	return i2c_stat;
}
     77a:	81 2f       	mov	r24, r17
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	1f 91       	pop	r17
     782:	08 95       	ret

00000784 <read_pixel_6>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel six
I2C_STATUS read_pixel_6( unsigned char *pixel_6)
{
     784:	1f 93       	push	r17
     786:	cf 93       	push	r28
     788:	df 93       	push	r29
     78a:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     78c:	88 e6       	ldi	r24, 0x68	; 104
     78e:	60 e0       	ldi	r22, 0x00	; 0
     790:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     794:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     796:	88 23       	and	r24, r24
     798:	a1 f4       	brne	.+40     	; 0x7c2 <read_pixel_6+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX6 );
     79a:	87 e0       	ldi	r24, 0x07	; 7
     79c:	0e 94 bd 15 	call	0x2b7a	; 0x2b7a <I2C_MSTR_send>
     7a0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7a2:	88 23       	and	r24, r24
     7a4:	71 f4       	brne	.+28     	; 0x7c2 <read_pixel_6+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7a6:	88 e6       	ldi	r24, 0x68	; 104
     7a8:	61 e0       	ldi	r22, 0x01	; 1
     7aa:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     7ae:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7b0:	88 23       	and	r24, r24
     7b2:	39 f4       	brne	.+14     	; 0x7c2 <read_pixel_6+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_6, FALSE );
     7b4:	ce 01       	movw	r24, r28
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	0e 94 91 15 	call	0x2b22	; 0x2b22 <I2C_MSTR_get>
     7bc:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     7be:	81 11       	cpse	r24, r1
					*pixel_6 = 0;
     7c0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     7c2:	0e 94 29 16 	call	0x2c52	; 0x2c52 <I2C_MSTR_stop>
	return i2c_stat;
}
     7c6:	81 2f       	mov	r24, r17
     7c8:	df 91       	pop	r29
     7ca:	cf 91       	pop	r28
     7cc:	1f 91       	pop	r17
     7ce:	08 95       	ret

000007d0 <read_pixel_5>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel five
I2C_STATUS read_pixel_5( unsigned char *pixel_5)
{
     7d0:	1f 93       	push	r17
     7d2:	cf 93       	push	r28
     7d4:	df 93       	push	r29
     7d6:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     7d8:	88 e6       	ldi	r24, 0x68	; 104
     7da:	60 e0       	ldi	r22, 0x00	; 0
     7dc:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     7e0:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     7e2:	88 23       	and	r24, r24
     7e4:	a1 f4       	brne	.+40     	; 0x80e <read_pixel_5+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX5 );
     7e6:	86 e0       	ldi	r24, 0x06	; 6
     7e8:	0e 94 bd 15 	call	0x2b7a	; 0x2b7a <I2C_MSTR_send>
     7ec:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7ee:	88 23       	and	r24, r24
     7f0:	71 f4       	brne	.+28     	; 0x80e <read_pixel_5+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7f2:	88 e6       	ldi	r24, 0x68	; 104
     7f4:	61 e0       	ldi	r22, 0x01	; 1
     7f6:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     7fa:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7fc:	88 23       	and	r24, r24
     7fe:	39 f4       	brne	.+14     	; 0x80e <read_pixel_5+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_5, FALSE );
     800:	ce 01       	movw	r24, r28
     802:	60 e0       	ldi	r22, 0x00	; 0
     804:	0e 94 91 15 	call	0x2b22	; 0x2b22 <I2C_MSTR_get>
     808:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     80a:	81 11       	cpse	r24, r1
					*pixel_5 = 0;
     80c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     80e:	0e 94 29 16 	call	0x2c52	; 0x2c52 <I2C_MSTR_stop>
	return i2c_stat;
}
     812:	81 2f       	mov	r24, r17
     814:	df 91       	pop	r29
     816:	cf 91       	pop	r28
     818:	1f 91       	pop	r17
     81a:	08 95       	ret

0000081c <read_pixel_4>:
	return i2c_stat;
}

// get pixel four
I2C_STATUS read_pixel_4( unsigned char *pixel_4)
{
     81c:	1f 93       	push	r17
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     824:	88 e6       	ldi	r24, 0x68	; 104
     826:	60 e0       	ldi	r22, 0x00	; 0
     828:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     82c:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     82e:	88 23       	and	r24, r24
     830:	a1 f4       	brne	.+40     	; 0x85a <read_pixel_4+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX4 );
     832:	85 e0       	ldi	r24, 0x05	; 5
     834:	0e 94 bd 15 	call	0x2b7a	; 0x2b7a <I2C_MSTR_send>
     838:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     83a:	88 23       	and	r24, r24
     83c:	71 f4       	brne	.+28     	; 0x85a <read_pixel_4+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     83e:	88 e6       	ldi	r24, 0x68	; 104
     840:	61 e0       	ldi	r22, 0x01	; 1
     842:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     846:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     848:	88 23       	and	r24, r24
     84a:	39 f4       	brne	.+14     	; 0x85a <read_pixel_4+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_4, FALSE );
     84c:	ce 01       	movw	r24, r28
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	0e 94 91 15 	call	0x2b22	; 0x2b22 <I2C_MSTR_get>
     854:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     856:	81 11       	cpse	r24, r1
					*pixel_4 = 0;
     858:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     85a:	0e 94 29 16 	call	0x2c52	; 0x2c52 <I2C_MSTR_stop>
	return i2c_stat;
}
     85e:	81 2f       	mov	r24, r17
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	1f 91       	pop	r17
     866:	08 95       	ret

00000868 <read_pixel_3>:
	return i2c_stat;
}

// get pixel three
I2C_STATUS read_pixel_3( unsigned char *pixel_3)
{
     868:	1f 93       	push	r17
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     870:	88 e6       	ldi	r24, 0x68	; 104
     872:	60 e0       	ldi	r22, 0x00	; 0
     874:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     878:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     87a:	88 23       	and	r24, r24
     87c:	a1 f4       	brne	.+40     	; 0x8a6 <read_pixel_3+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX3 );
     87e:	84 e0       	ldi	r24, 0x04	; 4
     880:	0e 94 bd 15 	call	0x2b7a	; 0x2b7a <I2C_MSTR_send>
     884:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     886:	88 23       	and	r24, r24
     888:	71 f4       	brne	.+28     	; 0x8a6 <read_pixel_3+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     88a:	88 e6       	ldi	r24, 0x68	; 104
     88c:	61 e0       	ldi	r22, 0x01	; 1
     88e:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     892:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     894:	88 23       	and	r24, r24
     896:	39 f4       	brne	.+14     	; 0x8a6 <read_pixel_3+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_3, FALSE );
     898:	ce 01       	movw	r24, r28
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	0e 94 91 15 	call	0x2b22	; 0x2b22 <I2C_MSTR_get>
     8a0:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8a2:	81 11       	cpse	r24, r1
					*pixel_3 = 0;
     8a4:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     8a6:	0e 94 29 16 	call	0x2c52	; 0x2c52 <I2C_MSTR_stop>
	return i2c_stat;
}
     8aa:	81 2f       	mov	r24, r17
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	1f 91       	pop	r17
     8b2:	08 95       	ret

000008b4 <read_pixel_2>:
}


// get pixel two
I2C_STATUS read_pixel_2( unsigned char *pixel_2)
{
     8b4:	1f 93       	push	r17
     8b6:	cf 93       	push	r28
     8b8:	df 93       	push	r29
     8ba:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     8bc:	88 e6       	ldi	r24, 0x68	; 104
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     8c4:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     8c6:	88 23       	and	r24, r24
     8c8:	a1 f4       	brne	.+40     	; 0x8f2 <read_pixel_2+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX2 );
     8ca:	83 e0       	ldi	r24, 0x03	; 3
     8cc:	0e 94 bd 15 	call	0x2b7a	; 0x2b7a <I2C_MSTR_send>
     8d0:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     8d2:	88 23       	and	r24, r24
     8d4:	71 f4       	brne	.+28     	; 0x8f2 <read_pixel_2+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     8d6:	88 e6       	ldi	r24, 0x68	; 104
     8d8:	61 e0       	ldi	r22, 0x01	; 1
     8da:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     8de:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     8e0:	88 23       	and	r24, r24
     8e2:	39 f4       	brne	.+14     	; 0x8f2 <read_pixel_2+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_2, FALSE );
     8e4:	ce 01       	movw	r24, r28
     8e6:	60 e0       	ldi	r22, 0x00	; 0
     8e8:	0e 94 91 15 	call	0x2b22	; 0x2b22 <I2C_MSTR_get>
     8ec:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     8ee:	81 11       	cpse	r24, r1
					*pixel_2 = 0;
     8f0:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     8f2:	0e 94 29 16 	call	0x2c52	; 0x2c52 <I2C_MSTR_stop>
	return i2c_stat;
}
     8f6:	81 2f       	mov	r24, r17
     8f8:	df 91       	pop	r29
     8fa:	cf 91       	pop	r28
     8fc:	1f 91       	pop	r17
     8fe:	08 95       	ret

00000900 <read_pixel_1>:
* Output Return:	I2C_STATUS
* Overview:			These are several pixel read values for each of the pixels
********************************************************************/
// get pixel one
I2C_STATUS read_pixel_1( unsigned char *pixel_1)
{
     900:	1f 93       	push	r17
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     908:	88 e6       	ldi	r24, 0x68	; 104
     90a:	60 e0       	ldi	r22, 0x00	; 0
     90c:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     910:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     912:	88 23       	and	r24, r24
     914:	a1 f4       	brne	.+40     	; 0x93e <read_pixel_1+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX1 );
     916:	82 e0       	ldi	r24, 0x02	; 2
     918:	0e 94 bd 15 	call	0x2b7a	; 0x2b7a <I2C_MSTR_send>
     91c:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     91e:	88 23       	and	r24, r24
     920:	71 f4       	brne	.+28     	; 0x93e <read_pixel_1+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     922:	88 e6       	ldi	r24, 0x68	; 104
     924:	61 e0       	ldi	r22, 0x01	; 1
     926:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     92a:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     92c:	88 23       	and	r24, r24
     92e:	39 f4       	brne	.+14     	; 0x93e <read_pixel_1+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_1, FALSE );
     930:	ce 01       	movw	r24, r28
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	0e 94 91 15 	call	0x2b22	; 0x2b22 <I2C_MSTR_get>
     938:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     93a:	81 11       	cpse	r24, r1
					*pixel_1 = 0;
     93c:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     93e:	0e 94 29 16 	call	0x2c52	; 0x2c52 <I2C_MSTR_stop>
	return i2c_stat;
}
     942:	81 2f       	mov	r24, r17
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	1f 91       	pop	r17
     94a:	08 95       	ret

0000094c <get_revision>:
* Input Variables:	unsigned char revision
* Output Return:	I2C_STATUS
* Overview:			
********************************************************************/
I2C_STATUS get_revision( unsigned char *revision )
{
     94c:	1f 93       	push	r17
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
     952:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     954:	88 e6       	ldi	r24, 0x68	; 104
     956:	60 e0       	ldi	r22, 0x00	; 0
     958:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     95c:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     95e:	88 23       	and	r24, r24
     960:	a1 f4       	brne	.+40     	; 0x98a <get_revision+0x3e>
	{

		// Send the register value (being 0).  This is
		// the register that contains the software revision.
		i2c_stat = I2C_MSTR_send( __TPA81_REVISION );
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	0e 94 bd 15 	call	0x2b7a	; 0x2b7a <I2C_MSTR_send>
     968:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     96a:	88 23       	and	r24, r24
     96c:	71 f4       	brne	.+28     	; 0x98a <get_revision+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     96e:	88 e6       	ldi	r24, 0x68	; 104
     970:	61 e0       	ldi	r22, 0x01	; 1
     972:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <I2C_MSTR_start>
     976:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     978:	88 23       	and	r24, r24
     97a:	39 f4       	brne	.+14     	; 0x98a <get_revision+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( revision, FALSE );
     97c:	ce 01       	movw	r24, r28
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	0e 94 91 15 	call	0x2b22	; 0x2b22 <I2C_MSTR_get>
     984:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     986:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*revision = 0;
     988:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     98a:	0e 94 29 16 	call	0x2c52	; 0x2c52 <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_revision()
     98e:	81 2f       	mov	r24, r17
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	1f 91       	pop	r17
     996:	08 95       	ret

00000998 <getBackIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <ADC_set_VREF>
	// Set the channel we will sample from.
	// Note: Swaped with frount IR for orientation
	ADC_set_channel(IRBACK_CHAN);
     99e:	85 e0       	ldi	r24, 0x05	; 5
     9a0:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9a4:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <ADC_sample>
     9a8:	a0 e0       	ldi	r26, 0x00	; 0
     9aa:	b0 e0       	ldi	r27, 0x00	; 0
     9ac:	bc 01       	movw	r22, r24
     9ae:	cd 01       	movw	r24, r26
     9b0:	0e 94 50 22 	call	0x44a0	; 0x44a0 <__floatunsisf>
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	40 ea       	ldi	r20, 0xA0	; 160
     9ba:	50 e4       	ldi	r21, 0x40	; 64
     9bc:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
     9c0:	9b 01       	movw	r18, r22
     9c2:	ac 01       	movw	r20, r24
     9c4:	60 e0       	ldi	r22, 0x00	; 0
     9c6:	70 e2       	ldi	r23, 0x20	; 32
     9c8:	86 e3       	ldi	r24, 0x36	; 54
     9ca:	95 e4       	ldi	r25, 0x45	; 69
     9cc:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
     9d0:	20 e0       	ldi	r18, 0x00	; 0
     9d2:	30 e0       	ldi	r19, 0x00	; 0
     9d4:	40 e8       	ldi	r20, 0x80	; 128
     9d6:	5f e3       	ldi	r21, 0x3F	; 63
     9d8:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     9dc:	08 95       	ret

000009de <getFrontIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     9de:	81 e0       	ldi	r24, 0x01	; 1
     9e0:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <ADC_set_VREF>
	// Set the channel we will sample from.
	// Note: Swaped with back IR for orientation
	ADC_set_channel(IRFRONT_CHAN);
     9e4:	87 e0       	ldi	r24, 0x07	; 7
     9e6:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9ea:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <ADC_sample>
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	bc 01       	movw	r22, r24
     9f4:	cd 01       	movw	r24, r26
     9f6:	0e 94 50 22 	call	0x44a0	; 0x44a0 <__floatunsisf>
     9fa:	20 e0       	ldi	r18, 0x00	; 0
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	40 ea       	ldi	r20, 0xA0	; 160
     a00:	50 e4       	ldi	r21, 0x40	; 64
     a02:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
     a06:	9b 01       	movw	r18, r22
     a08:	ac 01       	movw	r20, r24
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	70 e2       	ldi	r23, 0x20	; 32
     a0e:	86 e3       	ldi	r24, 0x36	; 54
     a10:	95 e4       	ldi	r25, 0x45	; 69
     a12:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	40 e8       	ldi	r20, 0x80	; 128
     a1c:	5f e3       	ldi	r21, 0x3F	; 63
     a1e:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a22:	08 95       	ret

00000a24 <getRightIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
     a2a:	83 e0       	ldi	r24, 0x03	; 3
     a2c:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a30:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <ADC_sample>
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	bc 01       	movw	r22, r24
     a3a:	cd 01       	movw	r24, r26
     a3c:	0e 94 50 22 	call	0x44a0	; 0x44a0 <__floatunsisf>
     a40:	20 e0       	ldi	r18, 0x00	; 0
     a42:	30 e0       	ldi	r19, 0x00	; 0
     a44:	40 ea       	ldi	r20, 0xA0	; 160
     a46:	50 e4       	ldi	r21, 0x40	; 64
     a48:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
     a4c:	9b 01       	movw	r18, r22
     a4e:	ac 01       	movw	r20, r24
     a50:	60 e0       	ldi	r22, 0x00	; 0
     a52:	70 e2       	ldi	r23, 0x20	; 32
     a54:	86 e3       	ldi	r24, 0x36	; 54
     a56:	95 e4       	ldi	r25, 0x45	; 69
     a58:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
     a5c:	20 e0       	ldi	r18, 0x00	; 0
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	40 e8       	ldi	r20, 0x80	; 128
     a62:	5f e3       	ldi	r21, 0x3F	; 63
     a64:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     a68:	08 95       	ret

00000a6a <getLeftIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
 	ADC_set_VREF( ADC_VREF_AVCC );
     a6a:	81 e0       	ldi	r24, 0x01	; 1
     a6c:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
     a70:	84 e0       	ldi	r24, 0x04	; 4
     a72:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     a76:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <ADC_sample>
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	b0 e0       	ldi	r27, 0x00	; 0
     a7e:	bc 01       	movw	r22, r24
     a80:	cd 01       	movw	r24, r26
     a82:	0e 94 50 22 	call	0x44a0	; 0x44a0 <__floatunsisf>
     a86:	20 e0       	ldi	r18, 0x00	; 0
     a88:	30 e0       	ldi	r19, 0x00	; 0
     a8a:	40 ea       	ldi	r20, 0xA0	; 160
     a8c:	50 e4       	ldi	r21, 0x40	; 64
     a8e:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
     a92:	9b 01       	movw	r18, r22
     a94:	ac 01       	movw	r20, r24
     a96:	60 e0       	ldi	r22, 0x00	; 0
     a98:	70 e2       	ldi	r23, 0x20	; 32
     a9a:	86 e3       	ldi	r24, 0x36	; 54
     a9c:	95 e4       	ldi	r25, 0x45	; 69
     a9e:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	30 e0       	ldi	r19, 0x00	; 0
     aa6:	40 e8       	ldi	r20, 0x80	; 128
     aa8:	5f e3       	ldi	r21, 0x3F	; 63
     aaa:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
     aae:	08 95       	ret

00000ab0 <getRightLight>:
********************************************************************/
float getRightLight( void )
{
	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <ADC_set_VREF>
	ADC_set_channel( RIGHT_LIGHT_CHAN );
     ab6:	85 e0       	ldi	r24, 0x05	; 5
     ab8:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <ADC_set_channel>
	adcsample = ADC_sample();
     abc:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <ADC_sample>
     ac0:	a0 e0       	ldi	r26, 0x00	; 0
     ac2:	b0 e0       	ldi	r27, 0x00	; 0
     ac4:	bc 01       	movw	r22, r24
     ac6:	cd 01       	movw	r24, r26
     ac8:	0e 94 50 22 	call	0x44a0	; 0x44a0 <__floatunsisf>
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	40 ea       	ldi	r20, 0xA0	; 160
     ad2:	5b e3       	ldi	r21, 0x3B	; 59
     ad4:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
	// LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * ( 5.0 / 1024 );
	// LCD_printf( "right: %f\n",voltage);
	return voltage;
}
     ad8:	08 95       	ret

00000ada <getLeftLight>:
float getLeftLight( void )
{

	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     ada:	81 e0       	ldi	r24, 0x01	; 1
     adc:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <ADC_set_VREF>
	ADC_set_channel( LEFT_LIGHT_CHAN );
     ae0:	86 e0       	ldi	r24, 0x06	; 6
     ae2:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <ADC_set_channel>
	adcsample = ADC_sample();
     ae6:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <ADC_sample>
     aea:	a0 e0       	ldi	r26, 0x00	; 0
     aec:	b0 e0       	ldi	r27, 0x00	; 0
     aee:	bc 01       	movw	r22, r24
     af0:	cd 01       	movw	r24, r26
     af2:	0e 94 50 22 	call	0x44a0	; 0x44a0 <__floatunsisf>
     af6:	20 e0       	ldi	r18, 0x00	; 0
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	40 ea       	ldi	r20, 0xA0	; 160
     afc:	5b e3       	ldi	r21, 0x3B	; 59
     afe:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * (5.0/ 1024.0 );
	// LCD_printf( "voltage: %f\n",voltage);
	return voltage;
}
     b02:	08 95       	ret

00000b04 <WaitButton>:
* Input Variables:	none
* Output Return:	int
* Overview:			Use a comment block like this before functions
********************************************************************/
int WaitButton( void ) 
{
     b04:	ff 92       	push	r15
     b06:	0f 93       	push	r16
     b08:	1f 93       	push	r17
     b0a:	cf 93       	push	r28
     b0c:	df 93       	push	r29
    BOOL btnState1, btnState2, btnState3;//local variables - button states
	//int rtnValue=0;//return the button value
	int rtnValue=0;

	LCD_clear();
     b0e:	0e 94 97 0e 	call	0x1d2e	; 0x1d2e <LCD_clear>

	if((ATopstat.state=SUBSYS_OPEN))
     b12:	81 e0       	ldi	r24, 0x01	; 1
     b14:	80 93 46 02 	sts	0x0246, r24
	{
       		// Get switch states.
		btnState1 = ATTINY_get_SW_state( ATTINY_SW3 );
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	0e 94 95 14 	call	0x292a	; 0x292a <ATTINY_get_SW_state>
     b1e:	18 2f       	mov	r17, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
     b20:	81 e0       	ldi	r24, 0x01	; 1
     b22:	0e 94 95 14 	call	0x292a	; 0x292a <ATTINY_get_SW_state>
     b26:	08 2f       	mov	r16, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
     b28:	82 e0       	ldi	r24, 0x02	; 2
     b2a:	0e 94 95 14 	call	0x292a	; 0x292a <ATTINY_get_SW_state>
     b2e:	f8 2e       	mov	r15, r24
		//LCD_printf("btnStates: %d %d %d \n", btnState1, btnState2, btnState3);

		if( btnState1 == TRUE ) 
     b30:	11 30       	cpi	r17, 0x01	; 1
     b32:	19 f0       	breq	.+6      	; 0xb3a <WaitButton+0x36>
     b34:	c0 e0       	ldi	r28, 0x00	; 0
     b36:	d0 e0       	ldi	r29, 0x00	; 0
     b38:	17 c0       	rjmp	.+46     	; 0xb68 <WaitButton+0x64>
		{
			LCD_printf( "SW1: Pushed\n");
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	91 e0       	ldi	r25, 0x01	; 1
     b3e:	0e 94 99 2b 	call	0x5732	; 0x5732 <puts>
			TMRSRVC_delay(1000);//wait 1 s
     b42:	88 ee       	ldi	r24, 0xE8	; 232
     b44:	93 e0       	ldi	r25, 0x03	; 3
     b46:	0e 94 32 15 	call	0x2a64	; 0x2a64 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b00100000 );//turn the red LED on
     b4a:	80 e2       	ldi	r24, 0x20	; 32
     b4c:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     b50:	80 ed       	ldi	r24, 0xD0	; 208
     b52:	97 e0       	ldi	r25, 0x07	; 7
     b54:	0e 94 32 15 	call	0x2a64	; 0x2a64 <TMRSRVC_delay>
               		LED_clr_pattern( 0b01000000 );//turn the green LED off
     b58:	80 e4       	ldi	r24, 0x40	; 64
     b5a:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b5e:	80 e2       	ldi	r24, 0x20	; 32
     b60:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <LED_clr_pattern>
     b64:	c1 e0       	ldi	r28, 0x01	; 1
     b66:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=1;
			}//end if button 1 state open

		if( btnState2 == TRUE ) 
     b68:	01 30       	cpi	r16, 0x01	; 1
     b6a:	b9 f4       	brne	.+46     	; 0xb9a <WaitButton+0x96>
		{
			LCD_printf( "SW2: Pushed\n");
     b6c:	8c e0       	ldi	r24, 0x0C	; 12
     b6e:	91 e0       	ldi	r25, 0x01	; 1
     b70:	0e 94 99 2b 	call	0x5732	; 0x5732 <puts>
			TMRSRVC_delay(1000);//wait 1 s
     b74:	88 ee       	ldi	r24, 0xE8	; 232
     b76:	93 e0       	ldi	r25, 0x03	; 3
     b78:	0e 94 32 15 	call	0x2a64	; 0x2a64 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     b7c:	80 e4       	ldi	r24, 0x40	; 64
     b7e:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     b82:	80 ed       	ldi	r24, 0xD0	; 208
     b84:	97 e0       	ldi	r25, 0x07	; 7
     b86:	0e 94 32 15 	call	0x2a64	; 0x2a64 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     b8a:	80 e4       	ldi	r24, 0x40	; 64
     b8c:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b90:	80 e2       	ldi	r24, 0x20	; 32
     b92:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <LED_clr_pattern>
     b96:	c2 e0       	ldi	r28, 0x02	; 2
     b98:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=2;
		}//end if btn 2 open

		if ( btnState3 == TRUE ) 
     b9a:	81 e0       	ldi	r24, 0x01	; 1
     b9c:	f8 16       	cp	r15, r24
     b9e:	d1 f4       	brne	.+52     	; 0xbd4 <WaitButton+0xd0>
		{
			LCD_printf( "SW3: Pushed\n");
     ba0:	88 e1       	ldi	r24, 0x18	; 24
     ba2:	91 e0       	ldi	r25, 0x01	; 1
     ba4:	0e 94 99 2b 	call	0x5732	; 0x5732 <puts>
			TMRSRVC_delay(1000);//wait 1 s
     ba8:	88 ee       	ldi	r24, 0xE8	; 232
     baa:	93 e0       	ldi	r25, 0x03	; 3
     bac:	0e 94 32 15 	call	0x2a64	; 0x2a64 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     bb0:	80 e4       	ldi	r24, 0x40	; 64
     bb2:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <LED_set_pattern>
                	LED_set_pattern( 0b00100000 );//turn the red LED on
     bb6:	80 e2       	ldi	r24, 0x20	; 32
     bb8:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     bbc:	80 ed       	ldi	r24, 0xD0	; 208
     bbe:	97 e0       	ldi	r25, 0x07	; 7
     bc0:	0e 94 32 15 	call	0x2a64	; 0x2a64 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     bc4:	80 e4       	ldi	r24, 0x40	; 64
     bc6:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     bca:	80 e2       	ldi	r24, 0x20	; 32
     bcc:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <LED_clr_pattern>
     bd0:	c3 e0       	ldi	r28, 0x03	; 3
     bd2:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=3;
		}//end if btn 3 open
            	LCD_clear();
     bd4:	0e 94 97 0e 	call	0x1d2e	; 0x1d2e <LCD_clear>
		return rtnValue;
	}//end AT while

}//end the WaitButton() function
     bd8:	ce 01       	movw	r24, r28
     bda:	df 91       	pop	r29
     bdc:	cf 91       	pop	r28
     bde:	1f 91       	pop	r17
     be0:	0f 91       	pop	r16
     be2:	ff 90       	pop	r15
     be4:	08 95       	ret

00000be6 <prefilter>:
* Overview:			This appies a prefilter to the IR data by
*					storing the history of measurements within the
*					an arrayand calculating a running average
********************************************************************/
void prefilter(char reset)
{	
     be6:	2f 92       	push	r2
     be8:	3f 92       	push	r3
     bea:	4f 92       	push	r4
     bec:	5f 92       	push	r5
     bee:	6f 92       	push	r6
     bf0:	7f 92       	push	r7
     bf2:	8f 92       	push	r8
     bf4:	9f 92       	push	r9
     bf6:	af 92       	push	r10
     bf8:	bf 92       	push	r11
     bfa:	cf 92       	push	r12
     bfc:	df 92       	push	r13
     bfe:	ef 92       	push	r14
     c00:	ff 92       	push	r15
     c02:	0f 93       	push	r16
     c04:	1f 93       	push	r17
     c06:	df 93       	push	r29
     c08:	cf 93       	push	r28
     c0a:	cd b7       	in	r28, 0x3d	; 61
     c0c:	de b7       	in	r29, 0x3e	; 62
     c0e:	64 97       	sbiw	r28, 0x14	; 20
     c10:	0f b6       	in	r0, 0x3f	; 63
     c12:	f8 94       	cli
     c14:	de bf       	out	0x3e, r29	; 62
     c16:	0f be       	out	0x3f, r0	; 63
     c18:	cd bf       	out	0x3d, r28	; 61
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
     c1a:	88 23       	and	r24, r24
     c1c:	39 f5       	brne	.+78     	; 0xc6c <prefilter+0x86>
     c1e:	87 eb       	ldi	r24, 0xB7	; 183
     c20:	92 e0       	ldi	r25, 0x02	; 2
     c22:	9c 8b       	std	Y+20, r25	; 0x14
     c24:	8b 8b       	std	Y+19, r24	; 0x13
     c26:	a1 e2       	ldi	r26, 0x21	; 33
     c28:	b4 e0       	ldi	r27, 0x04	; 4
     c2a:	be 83       	std	Y+6, r27	; 0x06
     c2c:	ad 83       	std	Y+5, r26	; 0x05
     c2e:	e7 ea       	ldi	r30, 0xA7	; 167
     c30:	f3 e0       	ldi	r31, 0x03	; 3
     c32:	fc 83       	std	Y+4, r31	; 0x04
     c34:	eb 83       	std	Y+3, r30	; 0x03
     c36:	8f e2       	ldi	r24, 0x2F	; 47
     c38:	93 e0       	ldi	r25, 0x03	; 3
     c3a:	9a 83       	std	Y+2, r25	; 0x02
     c3c:	89 83       	std	Y+1, r24	; 0x01
     c3e:	0f 2e       	mov	r0, r31
     c40:	f0 e0       	ldi	r31, 0x00	; 0
     c42:	2f 2e       	mov	r2, r31
     c44:	f0 e0       	ldi	r31, 0x00	; 0
     c46:	3f 2e       	mov	r3, r31
     c48:	f0 e0       	ldi	r31, 0x00	; 0
     c4a:	4f 2e       	mov	r4, r31
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	5f 2e       	mov	r5, r31
     c50:	f0 2d       	mov	r31, r0
     c52:	2f 86       	std	Y+15, r2	; 0x0f
     c54:	38 8a       	std	Y+16, r3	; 0x10
     c56:	49 8a       	std	Y+17, r4	; 0x11
     c58:	5a 8a       	std	Y+18, r5	; 0x12
     c5a:	2b 86       	std	Y+11, r2	; 0x0b
     c5c:	3c 86       	std	Y+12, r3	; 0x0c
     c5e:	4d 86       	std	Y+13, r4	; 0x0d
     c60:	5e 86       	std	Y+14, r5	; 0x0e
     c62:	2f 82       	std	Y+7, r2	; 0x07
     c64:	38 86       	std	Y+8, r3	; 0x08
     c66:	49 86       	std	Y+9, r4	; 0x09
     c68:	5a 86       	std	Y+10, r5	; 0x0a
     c6a:	43 c0       	rjmp	.+134    	; 0xcf2 <prefilter+0x10c>
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     c6c:	a0 90 b2 01 	lds	r10, 0x01B2
     c70:	b0 90 b3 01 	lds	r11, 0x01B3
     c74:	c0 90 b4 01 	lds	r12, 0x01B4
     c78:	d0 90 b5 01 	lds	r13, 0x01B5
			rtIR_old[i] = rtIR;
     c7c:	e0 90 b6 01 	lds	r14, 0x01B6
     c80:	f0 90 b7 01 	lds	r15, 0x01B7
     c84:	00 91 b8 01 	lds	r16, 0x01B8
     c88:	10 91 b9 01 	lds	r17, 0x01B9
			ftIR_old[i] = ftIR;
     c8c:	20 90 ba 01 	lds	r2, 0x01BA
     c90:	30 90 bb 01 	lds	r3, 0x01BB
     c94:	40 90 bc 01 	lds	r4, 0x01BC
     c98:	50 90 bd 01 	lds	r5, 0x01BD
			bkIR_old[i] = bkIR;
     c9c:	20 91 be 01 	lds	r18, 0x01BE
     ca0:	30 91 bf 01 	lds	r19, 0x01BF
     ca4:	40 91 c0 01 	lds	r20, 0x01C0
     ca8:	50 91 c1 01 	lds	r21, 0x01C1
     cac:	80 e0       	ldi	r24, 0x00	; 0
     cae:	90 e0       	ldi	r25, 0x00	; 0
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     cb0:	fc 01       	movw	r30, r24
     cb2:	e9 5b       	subi	r30, 0xB9	; 185
     cb4:	fd 4f       	sbci	r31, 0xFD	; 253
     cb6:	a0 82       	st	Z, r10
     cb8:	b1 82       	std	Z+1, r11	; 0x01
     cba:	c2 82       	std	Z+2, r12	; 0x02
     cbc:	d3 82       	std	Z+3, r13	; 0x03
			rtIR_old[i] = rtIR;
     cbe:	fc 01       	movw	r30, r24
     cc0:	ef 54       	subi	r30, 0x4F	; 79
     cc2:	fc 4f       	sbci	r31, 0xFC	; 252
     cc4:	e0 82       	st	Z, r14
     cc6:	f1 82       	std	Z+1, r15	; 0x01
     cc8:	02 83       	std	Z+2, r16	; 0x02
     cca:	13 83       	std	Z+3, r17	; 0x03
			ftIR_old[i] = ftIR;
     ccc:	fc 01       	movw	r30, r24
     cce:	e9 5c       	subi	r30, 0xC9	; 201
     cd0:	fc 4f       	sbci	r31, 0xFC	; 252
     cd2:	20 82       	st	Z, r2
     cd4:	31 82       	std	Z+1, r3	; 0x01
     cd6:	42 82       	std	Z+2, r4	; 0x02
     cd8:	53 82       	std	Z+3, r5	; 0x03
			bkIR_old[i] = bkIR;
     cda:	fc 01       	movw	r30, r24
     cdc:	e1 54       	subi	r30, 0x41	; 65
     cde:	fd 4f       	sbci	r31, 0xFD	; 253
     ce0:	20 83       	st	Z, r18
     ce2:	31 83       	std	Z+1, r19	; 0x01
     ce4:	42 83       	std	Z+2, r20	; 0x02
     ce6:	53 83       	std	Z+3, r21	; 0x03
     ce8:	04 96       	adiw	r24, 0x04	; 4
	int i;
	// if reset is true, 
	// set all the values within the array to the current measurement
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
     cea:	88 37       	cpi	r24, 0x78	; 120
     cec:	91 05       	cpc	r25, r1
     cee:	01 f7       	brne	.-64     	; 0xcb0 <prefilter+0xca>
     cf0:	96 cf       	rjmp	.-212    	; 0xc1e <prefilter+0x38>
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
	{
		j = i - 1;
		ltIR_old[i] = ltIR_old[j];
     cf2:	ab 89       	ldd	r26, Y+19	; 0x13
     cf4:	bc 89       	ldd	r27, Y+20	; 0x14
     cf6:	2d 91       	ld	r18, X+
     cf8:	3d 91       	ld	r19, X+
     cfa:	4d 91       	ld	r20, X+
     cfc:	5c 91       	ld	r21, X
     cfe:	13 97       	sbiw	r26, 0x03	; 3
     d00:	fd 01       	movw	r30, r26
     d02:	24 83       	std	Z+4, r18	; 0x04
     d04:	35 83       	std	Z+5, r19	; 0x05
     d06:	46 83       	std	Z+6, r20	; 0x06
     d08:	57 83       	std	Z+7, r21	; 0x07
		rtIR_old[i] = rtIR_old[j];
     d0a:	ad 81       	ldd	r26, Y+5	; 0x05
     d0c:	be 81       	ldd	r27, Y+6	; 0x06
     d0e:	ed 90       	ld	r14, X+
     d10:	fd 90       	ld	r15, X+
     d12:	0d 91       	ld	r16, X+
     d14:	1c 91       	ld	r17, X
     d16:	13 97       	sbiw	r26, 0x03	; 3
     d18:	fd 01       	movw	r30, r26
     d1a:	e4 82       	std	Z+4, r14	; 0x04
     d1c:	f5 82       	std	Z+5, r15	; 0x05
     d1e:	06 83       	std	Z+6, r16	; 0x06
     d20:	17 83       	std	Z+7, r17	; 0x07
		ftIR_old[i] = ftIR_old[j];
     d22:	ab 81       	ldd	r26, Y+3	; 0x03
     d24:	bc 81       	ldd	r27, Y+4	; 0x04
     d26:	ad 90       	ld	r10, X+
     d28:	bd 90       	ld	r11, X+
     d2a:	cd 90       	ld	r12, X+
     d2c:	dc 90       	ld	r13, X
     d2e:	13 97       	sbiw	r26, 0x03	; 3
     d30:	fd 01       	movw	r30, r26
     d32:	a4 82       	std	Z+4, r10	; 0x04
     d34:	b5 82       	std	Z+5, r11	; 0x05
     d36:	c6 82       	std	Z+6, r12	; 0x06
     d38:	d7 82       	std	Z+7, r13	; 0x07
		bkIR_old[i] = bkIR_old[j];
     d3a:	a9 81       	ldd	r26, Y+1	; 0x01
     d3c:	ba 81       	ldd	r27, Y+2	; 0x02
     d3e:	6d 90       	ld	r6, X+
     d40:	7d 90       	ld	r7, X+
     d42:	8d 90       	ld	r8, X+
     d44:	9c 90       	ld	r9, X
     d46:	13 97       	sbiw	r26, 0x03	; 3
     d48:	fd 01       	movw	r30, r26
     d4a:	64 82       	std	Z+4, r6	; 0x04
     d4c:	75 82       	std	Z+5, r7	; 0x05
     d4e:	86 82       	std	Z+6, r8	; 0x06
     d50:	97 82       	std	Z+7, r9	; 0x07
		ltIR_new += ltIR_old[i];
     d52:	c2 01       	movw	r24, r4
     d54:	b1 01       	movw	r22, r2
     d56:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
     d5a:	1b 01       	movw	r2, r22
     d5c:	2c 01       	movw	r4, r24
		rtIR_new += rtIR_old[i];
     d5e:	6f 85       	ldd	r22, Y+15	; 0x0f
     d60:	78 89       	ldd	r23, Y+16	; 0x10
     d62:	89 89       	ldd	r24, Y+17	; 0x11
     d64:	9a 89       	ldd	r25, Y+18	; 0x12
     d66:	a8 01       	movw	r20, r16
     d68:	97 01       	movw	r18, r14
     d6a:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
     d6e:	6f 87       	std	Y+15, r22	; 0x0f
     d70:	78 8b       	std	Y+16, r23	; 0x10
     d72:	89 8b       	std	Y+17, r24	; 0x11
     d74:	9a 8b       	std	Y+18, r25	; 0x12
		ftIR_new += ftIR_old[i];
     d76:	6b 85       	ldd	r22, Y+11	; 0x0b
     d78:	7c 85       	ldd	r23, Y+12	; 0x0c
     d7a:	8d 85       	ldd	r24, Y+13	; 0x0d
     d7c:	9e 85       	ldd	r25, Y+14	; 0x0e
     d7e:	a6 01       	movw	r20, r12
     d80:	95 01       	movw	r18, r10
     d82:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
     d86:	6b 87       	std	Y+11, r22	; 0x0b
     d88:	7c 87       	std	Y+12, r23	; 0x0c
     d8a:	8d 87       	std	Y+13, r24	; 0x0d
     d8c:	9e 87       	std	Y+14, r25	; 0x0e
		bkIR_new += bkIR_old[i];
     d8e:	6f 81       	ldd	r22, Y+7	; 0x07
     d90:	78 85       	ldd	r23, Y+8	; 0x08
     d92:	89 85       	ldd	r24, Y+9	; 0x09
     d94:	9a 85       	ldd	r25, Y+10	; 0x0a
     d96:	a4 01       	movw	r20, r8
     d98:	93 01       	movw	r18, r6
     d9a:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
     d9e:	6f 83       	std	Y+7, r22	; 0x07
     da0:	78 87       	std	Y+8, r23	; 0x08
     da2:	89 87       	std	Y+9, r24	; 0x09
     da4:	9a 87       	std	Y+10, r25	; 0x0a
     da6:	8b 89       	ldd	r24, Y+19	; 0x13
     da8:	9c 89       	ldd	r25, Y+20	; 0x14
     daa:	04 97       	sbiw	r24, 0x04	; 4
     dac:	9c 8b       	std	Y+20, r25	; 0x14
     dae:	8b 8b       	std	Y+19, r24	; 0x13
     db0:	ad 81       	ldd	r26, Y+5	; 0x05
     db2:	be 81       	ldd	r27, Y+6	; 0x06
     db4:	14 97       	sbiw	r26, 0x04	; 4
     db6:	be 83       	std	Y+6, r27	; 0x06
     db8:	ad 83       	std	Y+5, r26	; 0x05
     dba:	eb 81       	ldd	r30, Y+3	; 0x03
     dbc:	fc 81       	ldd	r31, Y+4	; 0x04
     dbe:	34 97       	sbiw	r30, 0x04	; 4
     dc0:	fc 83       	std	Y+4, r31	; 0x04
     dc2:	eb 83       	std	Y+3, r30	; 0x03
     dc4:	89 81       	ldd	r24, Y+1	; 0x01
     dc6:	9a 81       	ldd	r25, Y+2	; 0x02
     dc8:	04 97       	sbiw	r24, 0x04	; 4
     dca:	9a 83       	std	Y+2, r25	; 0x02
     dcc:	89 83       	std	Y+1, r24	; 0x01
	float ftIR_new = 0;
	float bkIR_new = 0;
	
	// Loop through the entire array and shift each element forward
	// and calculate a running sum simultaneously
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
     dce:	ab 89       	ldd	r26, Y+19	; 0x13
     dd0:	bc 89       	ldd	r27, Y+20	; 0x14
     dd2:	af 53       	subi	r26, 0x3F	; 63
     dd4:	b2 40       	sbci	r27, 0x02	; 2
     dd6:	09 f0       	breq	.+2      	; 0xdda <prefilter+0x1f4>
     dd8:	8c cf       	rjmp	.-232    	; 0xcf2 <prefilter+0x10c>
		bkIR_new += bkIR_old[i];
	}
	
	// Set the current reading to the first element 
	// within the historical array
	ltIR_old[0] = ltIR;
     dda:	80 91 b2 01 	lds	r24, 0x01B2
     dde:	90 91 b3 01 	lds	r25, 0x01B3
     de2:	a0 91 b4 01 	lds	r26, 0x01B4
     de6:	b0 91 b5 01 	lds	r27, 0x01B5
     dea:	eb 89       	ldd	r30, Y+19	; 0x13
     dec:	fc 89       	ldd	r31, Y+20	; 0x14
     dee:	80 87       	std	Z+8, r24	; 0x08
     df0:	91 87       	std	Z+9, r25	; 0x09
     df2:	a2 87       	std	Z+10, r26	; 0x0a
     df4:	b3 87       	std	Z+11, r27	; 0x0b
	rtIR_old[0] = rtIR;
     df6:	80 91 b6 01 	lds	r24, 0x01B6
     dfa:	90 91 b7 01 	lds	r25, 0x01B7
     dfe:	a0 91 b8 01 	lds	r26, 0x01B8
     e02:	b0 91 b9 01 	lds	r27, 0x01B9
     e06:	80 93 b1 03 	sts	0x03B1, r24
     e0a:	90 93 b2 03 	sts	0x03B2, r25
     e0e:	a0 93 b3 03 	sts	0x03B3, r26
     e12:	b0 93 b4 03 	sts	0x03B4, r27
	ftIR_old[0] = ftIR;
     e16:	80 91 ba 01 	lds	r24, 0x01BA
     e1a:	90 91 bb 01 	lds	r25, 0x01BB
     e1e:	a0 91 bc 01 	lds	r26, 0x01BC
     e22:	b0 91 bd 01 	lds	r27, 0x01BD
     e26:	80 93 37 03 	sts	0x0337, r24
     e2a:	90 93 38 03 	sts	0x0338, r25
     e2e:	a0 93 39 03 	sts	0x0339, r26
     e32:	b0 93 3a 03 	sts	0x033A, r27
	bkIR_old[0] = bkIR;
     e36:	80 91 be 01 	lds	r24, 0x01BE
     e3a:	90 91 bf 01 	lds	r25, 0x01BF
     e3e:	a0 91 c0 01 	lds	r26, 0x01C0
     e42:	b0 91 c1 01 	lds	r27, 0x01C1
     e46:	80 93 bf 02 	sts	0x02BF, r24
     e4a:	90 93 c0 02 	sts	0x02C0, r25
     e4e:	a0 93 c1 02 	sts	0x02C1, r26
     e52:	b0 93 c2 02 	sts	0x02C2, r27
	
	// Calculate the average value within the array
	// and said that as the new current measurement
	ltIR = ltIR_new/PREFILTER_SIZE;
     e56:	c2 01       	movw	r24, r4
     e58:	b1 01       	movw	r22, r2
     e5a:	20 e0       	ldi	r18, 0x00	; 0
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	40 ef       	ldi	r20, 0xF0	; 240
     e60:	51 e4       	ldi	r21, 0x41	; 65
     e62:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
     e66:	60 93 b2 01 	sts	0x01B2, r22
     e6a:	70 93 b3 01 	sts	0x01B3, r23
     e6e:	80 93 b4 01 	sts	0x01B4, r24
     e72:	90 93 b5 01 	sts	0x01B5, r25
	rtIR = rtIR_new/PREFILTER_SIZE;
     e76:	6f 85       	ldd	r22, Y+15	; 0x0f
     e78:	78 89       	ldd	r23, Y+16	; 0x10
     e7a:	89 89       	ldd	r24, Y+17	; 0x11
     e7c:	9a 89       	ldd	r25, Y+18	; 0x12
     e7e:	20 e0       	ldi	r18, 0x00	; 0
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	40 ef       	ldi	r20, 0xF0	; 240
     e84:	51 e4       	ldi	r21, 0x41	; 65
     e86:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
     e8a:	60 93 b6 01 	sts	0x01B6, r22
     e8e:	70 93 b7 01 	sts	0x01B7, r23
     e92:	80 93 b8 01 	sts	0x01B8, r24
     e96:	90 93 b9 01 	sts	0x01B9, r25
	ftIR = ftIR_new/PREFILTER_SIZE;
     e9a:	6b 85       	ldd	r22, Y+11	; 0x0b
     e9c:	7c 85       	ldd	r23, Y+12	; 0x0c
     e9e:	8d 85       	ldd	r24, Y+13	; 0x0d
     ea0:	9e 85       	ldd	r25, Y+14	; 0x0e
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	40 ef       	ldi	r20, 0xF0	; 240
     ea8:	51 e4       	ldi	r21, 0x41	; 65
     eaa:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
     eae:	60 93 ba 01 	sts	0x01BA, r22
     eb2:	70 93 bb 01 	sts	0x01BB, r23
     eb6:	80 93 bc 01 	sts	0x01BC, r24
     eba:	90 93 bd 01 	sts	0x01BD, r25
	bkIR = bkIR_new/PREFILTER_SIZE;
     ebe:	6f 81       	ldd	r22, Y+7	; 0x07
     ec0:	78 85       	ldd	r23, Y+8	; 0x08
     ec2:	89 85       	ldd	r24, Y+9	; 0x09
     ec4:	9a 85       	ldd	r25, Y+10	; 0x0a
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	40 ef       	ldi	r20, 0xF0	; 240
     ecc:	51 e4       	ldi	r21, 0x41	; 65
     ece:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
     ed2:	60 93 be 01 	sts	0x01BE, r22
     ed6:	70 93 bf 01 	sts	0x01BF, r23
     eda:	80 93 c0 01 	sts	0x01C0, r24
     ede:	90 93 c1 01 	sts	0x01C1, r25
}
     ee2:	64 96       	adiw	r28, 0x14	; 20
     ee4:	0f b6       	in	r0, 0x3f	; 63
     ee6:	f8 94       	cli
     ee8:	de bf       	out	0x3e, r29	; 62
     eea:	0f be       	out	0x3f, r0	; 63
     eec:	cd bf       	out	0x3d, r28	; 61
     eee:	cf 91       	pop	r28
     ef0:	df 91       	pop	r29
     ef2:	1f 91       	pop	r17
     ef4:	0f 91       	pop	r16
     ef6:	ff 90       	pop	r15
     ef8:	ef 90       	pop	r14
     efa:	df 90       	pop	r13
     efc:	cf 90       	pop	r12
     efe:	bf 90       	pop	r11
     f00:	af 90       	pop	r10
     f02:	9f 90       	pop	r9
     f04:	8f 90       	pop	r8
     f06:	7f 90       	pop	r7
     f08:	6f 90       	pop	r6
     f0a:	5f 90       	pop	r5
     f0c:	4f 90       	pop	r4
     f0e:	3f 90       	pop	r3
     f10:	2f 90       	pop	r2
     f12:	08 95       	ret

00000f14 <pidController>:
* Output Return:	float
* Overview:			This computes the control effort using a PID 
*					controller approach
********************************************************************/
float pidController(float error, char reset )
{	
     f14:	6f 92       	push	r6
     f16:	7f 92       	push	r7
     f18:	8f 92       	push	r8
     f1a:	9f 92       	push	r9
     f1c:	af 92       	push	r10
     f1e:	bf 92       	push	r11
     f20:	cf 92       	push	r12
     f22:	df 92       	push	r13
     f24:	ef 92       	push	r14
     f26:	ff 92       	push	r15
     f28:	0f 93       	push	r16
     f2a:	1f 93       	push	r17
     f2c:	3b 01       	movw	r6, r22
     f2e:	4c 01       	movw	r8, r24
	// Reset the integrator error if specified
	if(reset){
     f30:	44 23       	and	r20, r20
     f32:	61 f0       	breq	.+24     	; 0xf4c <pidController+0x38>
		Ierror = 0;
     f34:	80 e0       	ldi	r24, 0x00	; 0
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	a0 e0       	ldi	r26, 0x00	; 0
     f3a:	b0 e0       	ldi	r27, 0x00	; 0
     f3c:	80 93 aa 01 	sts	0x01AA, r24
     f40:	90 93 ab 01 	sts	0x01AB, r25
     f44:	a0 93 ac 01 	sts	0x01AC, r26
     f48:	b0 93 ad 01 	sts	0x01AD, r27
	}
	// At the current error to the running sum
	Ierror += error;
     f4c:	c4 01       	movw	r24, r8
     f4e:	b3 01       	movw	r22, r6
     f50:	20 91 aa 01 	lds	r18, 0x01AA
     f54:	30 91 ab 01 	lds	r19, 0x01AB
     f58:	40 91 ac 01 	lds	r20, 0x01AC
     f5c:	50 91 ad 01 	lds	r21, 0x01AD
     f60:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
     f64:	5b 01       	movw	r10, r22
     f66:	6c 01       	movw	r12, r24
     f68:	60 93 aa 01 	sts	0x01AA, r22
     f6c:	70 93 ab 01 	sts	0x01AB, r23
     f70:	80 93 ac 01 	sts	0x01AC, r24
     f74:	90 93 ad 01 	sts	0x01AD, r25
     f78:	c4 01       	movw	r24, r8
     f7a:	b3 01       	movw	r22, r6
     f7c:	a4 01       	movw	r20, r8
     f7e:	93 01       	movw	r18, r6
     f80:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
     f84:	7b 01       	movw	r14, r22
     f86:	8c 01       	movw	r16, r24
     f88:	c4 01       	movw	r24, r8
     f8a:	b3 01       	movw	r22, r6
     f8c:	20 91 ae 01 	lds	r18, 0x01AE
     f90:	30 91 af 01 	lds	r19, 0x01AF
     f94:	40 91 b0 01 	lds	r20, 0x01B0
     f98:	50 91 b1 01 	lds	r21, 0x01B1
     f9c:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
     fa0:	20 e0       	ldi	r18, 0x00	; 0
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	40 ea       	ldi	r20, 0xA0	; 160
     fa6:	50 e4       	ldi	r21, 0x40	; 64
     fa8:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
     fac:	9b 01       	movw	r18, r22
     fae:	ac 01       	movw	r20, r24
     fb0:	c8 01       	movw	r24, r16
     fb2:	b7 01       	movw	r22, r14
     fb4:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
     fb8:	7b 01       	movw	r14, r22
     fba:	8c 01       	movw	r16, r24
     fbc:	c6 01       	movw	r24, r12
     fbe:	b5 01       	movw	r22, r10
     fc0:	2f e6       	ldi	r18, 0x6F	; 111
     fc2:	32 e1       	ldi	r19, 0x12	; 18
     fc4:	43 e8       	ldi	r20, 0x83	; 131
     fc6:	5a e3       	ldi	r21, 0x3A	; 58
     fc8:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
     fcc:	9b 01       	movw	r18, r22
     fce:	ac 01       	movw	r20, r24
     fd0:	c8 01       	movw	r24, r16
     fd2:	b7 01       	movw	r22, r14
     fd4:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
	
	// Use the PID controller approach to calculate the effort
	float effort = (KP*error) + (KD*(error-error_old)) + (KI*Ierror);
	
	return effort;	
}
     fd8:	1f 91       	pop	r17
     fda:	0f 91       	pop	r16
     fdc:	ff 90       	pop	r15
     fde:	ef 90       	pop	r14
     fe0:	df 90       	pop	r13
     fe2:	cf 90       	pop	r12
     fe4:	bf 90       	pop	r11
     fe6:	af 90       	pop	r10
     fe8:	9f 90       	pop	r9
     fea:	8f 90       	pop	r8
     fec:	7f 90       	pop	r7
     fee:	6f 90       	pop	r6
     ff0:	08 95       	ret

00000ff2 <check_threshhold>:
* Output Return:	char
* Overview:			This check the IR values to thresholds
********************************************************************/

char check_threshhold(float F, float B, float L, float R)
{
     ff2:	2f 92       	push	r2
     ff4:	6f 92       	push	r6
     ff6:	7f 92       	push	r7
     ff8:	8f 92       	push	r8
     ffa:	9f 92       	push	r9
     ffc:	af 92       	push	r10
     ffe:	bf 92       	push	r11
    1000:	cf 92       	push	r12
    1002:	df 92       	push	r13
    1004:	ef 92       	push	r14
    1006:	ff 92       	push	r15
    1008:	0f 93       	push	r16
    100a:	1f 93       	push	r17
    100c:	df 93       	push	r29
    100e:	cf 93       	push	r28
    1010:	00 d0       	rcall	.+0      	; 0x1012 <check_threshhold+0x20>
    1012:	00 d0       	rcall	.+0      	; 0x1014 <check_threshhold+0x22>
    1014:	cd b7       	in	r28, 0x3d	; 61
    1016:	de b7       	in	r29, 0x3e	; 62
    1018:	69 83       	std	Y+1, r22	; 0x01
    101a:	7a 83       	std	Y+2, r23	; 0x02
    101c:	8b 83       	std	Y+3, r24	; 0x03
    101e:	9c 83       	std	Y+4, r25	; 0x04
	char check = 0;
	check += 0b00000001*(ftIR < F);
    1020:	60 90 ba 01 	lds	r6, 0x01BA
    1024:	70 90 bb 01 	lds	r7, 0x01BB
    1028:	80 90 bc 01 	lds	r8, 0x01BC
    102c:	90 90 bd 01 	lds	r9, 0x01BD
	check += 0b00000010*(bkIR < B);
    1030:	60 91 be 01 	lds	r22, 0x01BE
    1034:	70 91 bf 01 	lds	r23, 0x01BF
    1038:	80 91 c0 01 	lds	r24, 0x01C0
    103c:	90 91 c1 01 	lds	r25, 0x01C1
    1040:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    1044:	28 2e       	mov	r2, r24
    1046:	22 1c       	adc	r2, r2
    1048:	22 24       	eor	r2, r2
    104a:	22 1c       	adc	r2, r2
    104c:	22 0c       	add	r2, r2
	check += 0b00000100*(ltIR < L);
    104e:	60 91 b2 01 	lds	r22, 0x01B2
    1052:	70 91 b3 01 	lds	r23, 0x01B3
    1056:	80 91 b4 01 	lds	r24, 0x01B4
    105a:	90 91 b5 01 	lds	r25, 0x01B5
    105e:	a8 01       	movw	r20, r16
    1060:	97 01       	movw	r18, r14
    1062:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    1066:	08 2f       	mov	r16, r24
    1068:	00 1f       	adc	r16, r16
    106a:	00 27       	eor	r16, r16
    106c:	00 1f       	adc	r16, r16
    106e:	00 0f       	add	r16, r16
    1070:	00 0f       	add	r16, r16
	check += 0b00001000*(rtIR < R);
    1072:	60 91 b6 01 	lds	r22, 0x01B6
    1076:	70 91 b7 01 	lds	r23, 0x01B7
    107a:	80 91 b8 01 	lds	r24, 0x01B8
    107e:	90 91 b9 01 	lds	r25, 0x01B9
    1082:	a6 01       	movw	r20, r12
    1084:	95 01       	movw	r18, r10
    1086:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    108a:	18 2f       	mov	r17, r24
    108c:	11 1f       	adc	r17, r17
    108e:	11 27       	eor	r17, r17
    1090:	11 1f       	adc	r17, r17
    1092:	11 0f       	add	r17, r17
    1094:	11 0f       	add	r17, r17
    1096:	11 0f       	add	r17, r17

char check_threshhold(float F, float B, float L, float R)
{
	char check = 0;
	check += 0b00000001*(ftIR < F);
	check += 0b00000010*(bkIR < B);
    1098:	ff 24       	eor	r15, r15
    109a:	c4 01       	movw	r24, r8
    109c:	b3 01       	movw	r22, r6
    109e:	29 81       	ldd	r18, Y+1	; 0x01
    10a0:	3a 81       	ldd	r19, Y+2	; 0x02
    10a2:	4b 81       	ldd	r20, Y+3	; 0x03
    10a4:	5c 81       	ldd	r21, Y+4	; 0x04
    10a6:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    10aa:	88 23       	and	r24, r24
    10ac:	14 f4       	brge	.+4      	; 0x10b2 <check_threshhold+0xc0>
    10ae:	ff 24       	eor	r15, r15
    10b0:	f3 94       	inc	r15
    10b2:	2f 0c       	add	r2, r15
	check += 0b00000100*(ltIR < L);
    10b4:	20 0e       	add	r2, r16
	check += 0b00001000*(rtIR < R);
	return check;	
}
    10b6:	82 2d       	mov	r24, r2
    10b8:	81 0f       	add	r24, r17
    10ba:	0f 90       	pop	r0
    10bc:	0f 90       	pop	r0
    10be:	0f 90       	pop	r0
    10c0:	0f 90       	pop	r0
    10c2:	cf 91       	pop	r28
    10c4:	df 91       	pop	r29
    10c6:	1f 91       	pop	r17
    10c8:	0f 91       	pop	r16
    10ca:	ff 90       	pop	r15
    10cc:	ef 90       	pop	r14
    10ce:	df 90       	pop	r13
    10d0:	cf 90       	pop	r12
    10d2:	bf 90       	pop	r11
    10d4:	af 90       	pop	r10
    10d6:	9f 90       	pop	r9
    10d8:	8f 90       	pop	r8
    10da:	7f 90       	pop	r7
    10dc:	6f 90       	pop	r6
    10de:	2f 90       	pop	r2
    10e0:	08 95       	ret

000010e2 <move_arc_stwt>:
		// bool stepper_FWD = arcLength >= 0;
		// STEPPER_move_stwt( STEPPER_BOTH, 
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk, // Left
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk); // Right
	// }
}
    10e2:	08 95       	ret

000010e4 <checkContactIR>:
* Output Return:	none
* Overview:			Acquires status of contact sensors
********************************************************************/
void checkContactIR(void)
{
	unsigned char sensors = ATTINY_get_sensors();
    10e4:	0e 94 64 14 	call	0x28c8	; 0x28c8 <ATTINY_get_sensors>
	rightContact = 0b00000001 & sensors;
    10e8:	28 2f       	mov	r18, r24
    10ea:	21 70       	andi	r18, 0x01	; 1
    10ec:	20 93 af 03 	sts	0x03AF, r18
	leftContact =  (0b00000010 & sensors)>>1;
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	82 70       	andi	r24, 0x02	; 2
    10f4:	90 70       	andi	r25, 0x00	; 0
    10f6:	95 95       	asr	r25
    10f8:	87 95       	ror	r24
    10fa:	80 93 b0 03 	sts	0x03B0, r24
	
	
}
    10fe:	08 95       	ret

00001100 <checkLightSensor>:
*					sensors values sequentially
********************************************************************/
void checkLightSensor( void )
{
	// Update both light sensor variables
	rightLightVolt = getRightLight();
    1100:	0e 94 58 05 	call	0xab0	; 0xab0 <getRightLight>
    1104:	60 93 c2 01 	sts	0x01C2, r22
    1108:	70 93 c3 01 	sts	0x01C3, r23
    110c:	80 93 c4 01 	sts	0x01C4, r24
    1110:	90 93 c5 01 	sts	0x01C5, r25
	leftLightVolt = getLeftLight();
    1114:	0e 94 6d 05 	call	0xada	; 0xada <getLeftLight>
    1118:	60 93 c6 01 	sts	0x01C6, r22
    111c:	70 93 c7 01 	sts	0x01C7, r23
    1120:	80 93 c8 01 	sts	0x01C8, r24
    1124:	90 93 c9 01 	sts	0x01C9, r25
	// LCD_printf("R Voltage: %3.2f\nL Voltage: %3.2f\n\n\n", voltageR, voltageL);
	// TMRSRVC_delay(2000);//wait 2 seconds
	// LCD_clear;
}
    1128:	08 95       	ret

0000112a <checkIR>:
*					finding sensor values sequentially
********************************************************************/
void checkIR( void )
{
	// Update all IR values
	ftIR = getFrontIR();
    112a:	0e 94 ef 04 	call	0x9de	; 0x9de <getFrontIR>
    112e:	60 93 ba 01 	sts	0x01BA, r22
    1132:	70 93 bb 01 	sts	0x01BB, r23
    1136:	80 93 bc 01 	sts	0x01BC, r24
    113a:	90 93 bd 01 	sts	0x01BD, r25
	bkIR = 50;
    113e:	80 e0       	ldi	r24, 0x00	; 0
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	a8 e4       	ldi	r26, 0x48	; 72
    1144:	b2 e4       	ldi	r27, 0x42	; 66
    1146:	80 93 be 01 	sts	0x01BE, r24
    114a:	90 93 bf 01 	sts	0x01BF, r25
    114e:	a0 93 c0 01 	sts	0x01C0, r26
    1152:	b0 93 c1 01 	sts	0x01C1, r27
	ltIR = getLeftIR();
    1156:	0e 94 35 05 	call	0xa6a	; 0xa6a <getLeftIR>
    115a:	60 93 b2 01 	sts	0x01B2, r22
    115e:	70 93 b3 01 	sts	0x01B3, r23
    1162:	80 93 b4 01 	sts	0x01B4, r24
    1166:	90 93 b5 01 	sts	0x01B5, r25
	rtIR = getRightIR();
    116a:	0e 94 12 05 	call	0xa24	; 0xa24 <getRightIR>
    116e:	60 93 b6 01 	sts	0x01B6, r22
    1172:	70 93 b7 01 	sts	0x01B7, r23
    1176:	80 93 b8 01 	sts	0x01B8, r24
    117a:	90 93 b9 01 	sts	0x01B9, r25
}
    117e:	08 95       	ret

00001180 <moveAway>:
* Input Variables:	none
* Output Return:	char
* Overview:			Use a comment block like this before functions
********************************************************************/
char moveAway ( void )
{	
    1180:	2f 92       	push	r2
    1182:	3f 92       	push	r3
    1184:	4f 92       	push	r4
    1186:	5f 92       	push	r5
    1188:	6f 92       	push	r6
    118a:	7f 92       	push	r7
    118c:	8f 92       	push	r8
    118e:	9f 92       	push	r9
    1190:	af 92       	push	r10
    1192:	bf 92       	push	r11
    1194:	cf 92       	push	r12
    1196:	df 92       	push	r13
    1198:	ef 92       	push	r14
    119a:	ff 92       	push	r15
    119c:	0f 93       	push	r16
    119e:	1f 93       	push	r17
    11a0:	df 93       	push	r29
    11a2:	cf 93       	push	r28
    11a4:	00 d0       	rcall	.+0      	; 0x11a6 <moveAway+0x26>
    11a6:	00 d0       	rcall	.+0      	; 0x11a8 <moveAway+0x28>
    11a8:	cd b7       	in	r28, 0x3d	; 61
    11aa:	de b7       	in	r29, 0x3e	; 62
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
    11ac:	60 90 ba 01 	lds	r6, 0x01BA
    11b0:	70 90 bb 01 	lds	r7, 0x01BB
    11b4:	80 90 bc 01 	lds	r8, 0x01BC
    11b8:	90 90 bd 01 	lds	r9, 0x01BD
    11bc:	a0 90 be 01 	lds	r10, 0x01BE
    11c0:	b0 90 bf 01 	lds	r11, 0x01BF
    11c4:	c0 90 c0 01 	lds	r12, 0x01C0
    11c8:	d0 90 c1 01 	lds	r13, 0x01C1
	float moveX = rtIR - ltIR;
    11cc:	e0 90 b6 01 	lds	r14, 0x01B6
    11d0:	f0 90 b7 01 	lds	r15, 0x01B7
    11d4:	00 91 b8 01 	lds	r16, 0x01B8
    11d8:	10 91 b9 01 	lds	r17, 0x01B9
    11dc:	80 91 b2 01 	lds	r24, 0x01B2
    11e0:	90 91 b3 01 	lds	r25, 0x01B3
    11e4:	a0 91 b4 01 	lds	r26, 0x01B4
    11e8:	b0 91 b5 01 	lds	r27, 0x01B5
    11ec:	89 83       	std	Y+1, r24	; 0x01
    11ee:	9a 83       	std	Y+2, r25	; 0x02
    11f0:	ab 83       	std	Y+3, r26	; 0x03
    11f2:	bc 83       	std	Y+4, r27	; 0x04
    11f4:	c8 01       	movw	r24, r16
    11f6:	b7 01       	movw	r22, r14
    11f8:	29 81       	ldd	r18, Y+1	; 0x01
    11fa:	3a 81       	ldd	r19, Y+2	; 0x02
    11fc:	4b 81       	ldd	r20, Y+3	; 0x03
    11fe:	5c 81       	ldd	r21, Y+4	; 0x04
    1200:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
    1204:	1b 01       	movw	r2, r22
    1206:	2c 01       	movw	r4, r24
	
	// if the object is in front of us are behind us
	// move appropriately in the Y direction
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
    1208:	c4 01       	movw	r24, r8
    120a:	b3 01       	movw	r22, r6
    120c:	20 e0       	ldi	r18, 0x00	; 0
    120e:	30 e0       	ldi	r19, 0x00	; 0
    1210:	40 ee       	ldi	r20, 0xE0	; 224
    1212:	50 e4       	ldi	r21, 0x40	; 64
    1214:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    1218:	87 fd       	sbrc	r24, 7
    121a:	0b c0       	rjmp	.+22     	; 0x1232 <moveAway+0xb2>
    121c:	c6 01       	movw	r24, r12
    121e:	b5 01       	movw	r22, r10
    1220:	20 e0       	ldi	r18, 0x00	; 0
    1222:	30 e0       	ldi	r19, 0x00	; 0
    1224:	40 ee       	ldi	r20, 0xE0	; 224
    1226:	50 e4       	ldi	r21, 0x40	; 64
    1228:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    122c:	88 23       	and	r24, r24
    122e:	0c f0       	brlt	.+2      	; 0x1232 <moveAway+0xb2>
    1230:	68 c0       	rjmp	.+208    	; 0x1302 <moveAway+0x182>
{	
	char shyRobot = 0;
	
	// Use the differences between the front and back
	// left and right distances to calculate a force vector
	float moveY = ftIR - bkIR;
    1232:	c4 01       	movw	r24, r8
    1234:	b3 01       	movw	r22, r6
    1236:	a6 01       	movw	r20, r12
    1238:	95 01       	movw	r18, r10
    123a:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
    123e:	7b 01       	movw	r14, r22
    1240:	8c 01       	movw	r16, r24
	
	// if the object is in front of us are behind us
	// move appropriately in the Y direction
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
	{
			BOOL moveForward = (moveY >= 0);
    1242:	77 24       	eor	r7, r7
    1244:	20 e0       	ldi	r18, 0x00	; 0
    1246:	30 e0       	ldi	r19, 0x00	; 0
    1248:	40 e0       	ldi	r20, 0x00	; 0
    124a:	50 e0       	ldi	r21, 0x00	; 0
    124c:	0e 94 02 23 	call	0x4604	; 0x4604 <__gesf2>
    1250:	88 23       	and	r24, r24
    1252:	14 f0       	brlt	.+4      	; 0x1258 <moveAway+0xd8>
    1254:	77 24       	eor	r7, r7
    1256:	73 94       	inc	r7
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    1258:	c8 01       	movw	r24, r16
    125a:	b7 01       	movw	r22, r14
    125c:	0e 94 1f 22 	call	0x443e	; 0x443e <__fixsfsi>
    1260:	9b 01       	movw	r18, r22
    1262:	77 ff       	sbrs	r23, 7
    1264:	03 c0       	rjmp	.+6      	; 0x126c <moveAway+0xec>
    1266:	30 95       	com	r19
    1268:	21 95       	neg	r18
    126a:	3f 4f       	sbci	r19, 0xFF	; 255
    126c:	b9 01       	movw	r22, r18
    126e:	88 27       	eor	r24, r24
    1270:	77 fd       	sbrc	r23, 7
    1272:	80 95       	com	r24
    1274:	98 2f       	mov	r25, r24
    1276:	0e 94 52 22 	call	0x44a4	; 0x44a4 <__floatsisf>
    127a:	6b 01       	movw	r12, r22
    127c:	7c 01       	movw	r14, r24
    127e:	ad b7       	in	r26, 0x3d	; 61
    1280:	be b7       	in	r27, 0x3e	; 62
    1282:	19 97       	sbiw	r26, 0x09	; 9
    1284:	0f b6       	in	r0, 0x3f	; 63
    1286:	f8 94       	cli
    1288:	be bf       	out	0x3e, r27	; 62
    128a:	0f be       	out	0x3f, r0	; 63
    128c:	ad bf       	out	0x3d, r26	; 61
    128e:	0d b7       	in	r16, 0x3d	; 61
    1290:	1e b7       	in	r17, 0x3e	; 62
    1292:	0f 5f       	subi	r16, 0xFF	; 255
    1294:	1f 4f       	sbci	r17, 0xFF	; 255
    1296:	a2 01       	movw	r20, r4
    1298:	91 01       	movw	r18, r2
    129a:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
    129e:	0e 94 24 22 	call	0x4448	; 0x4448 <__fixunssfsi>
    12a2:	4b 01       	movw	r8, r22
    12a4:	5c 01       	movw	r10, r24
    12a6:	82 e3       	ldi	r24, 0x32	; 50
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	f8 01       	movw	r30, r16
    12ac:	91 83       	std	Z+1, r25	; 0x01
    12ae:	80 83       	st	Z, r24
    12b0:	c7 01       	movw	r24, r14
    12b2:	b6 01       	movw	r22, r12
    12b4:	a2 01       	movw	r20, r4
    12b6:	91 01       	movw	r18, r2
    12b8:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
    12bc:	0e 94 24 22 	call	0x4448	; 0x4448 <__fixunssfsi>
    12c0:	d8 01       	movw	r26, r16
    12c2:	13 96       	adiw	r26, 0x03	; 3
    12c4:	7c 93       	st	X, r23
    12c6:	6e 93       	st	-X, r22
    12c8:	12 97       	sbiw	r26, 0x02	; 2
    12ca:	82 ec       	ldi	r24, 0xC2	; 194
    12cc:	91 e0       	ldi	r25, 0x01	; 1
    12ce:	15 96       	adiw	r26, 0x05	; 5
    12d0:	9c 93       	st	X, r25
    12d2:	8e 93       	st	-X, r24
    12d4:	14 97       	sbiw	r26, 0x04	; 4
    12d6:	16 96       	adiw	r26, 0x06	; 6
    12d8:	1c 92       	st	X, r1
    12da:	16 97       	sbiw	r26, 0x06	; 6
    12dc:	18 96       	adiw	r26, 0x08	; 8
    12de:	1c 92       	st	X, r1
    12e0:	1e 92       	st	-X, r1
    12e2:	17 97       	sbiw	r26, 0x07	; 7
    12e4:	81 e0       	ldi	r24, 0x01	; 1
    12e6:	62 e0       	ldi	r22, 0x02	; 2
    12e8:	47 2d       	mov	r20, r7
    12ea:	22 e3       	ldi	r18, 0x32	; 50
    12ec:	30 e0       	ldi	r19, 0x00	; 0
    12ee:	84 01       	movw	r16, r8
    12f0:	e2 ec       	ldi	r30, 0xC2	; 194
    12f2:	ee 2e       	mov	r14, r30
    12f4:	e1 e0       	ldi	r30, 0x01	; 1
    12f6:	fe 2e       	mov	r15, r30
    12f8:	cc 24       	eor	r12, r12
    12fa:	aa 24       	eor	r10, r10
    12fc:	bb 24       	eor	r11, r11
    12fe:	87 2c       	mov	r8, r7
    1300:	82 c0       	rjmp	.+260    	; 0x1406 <moveAway+0x286>
			shyRobot = 1;
	}
	
	// if the object is on either side of the robot
	// rotate the robot appropriately
	else if ((rtIR < IR_OBST_R_THRESH))
    1302:	c8 01       	movw	r24, r16
    1304:	b7 01       	movw	r22, r14
    1306:	20 e0       	ldi	r18, 0x00	; 0
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	40 e2       	ldi	r20, 0x20	; 32
    130c:	51 e4       	ldi	r21, 0x41	; 65
    130e:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    1312:	88 23       	and	r24, r24
    1314:	b4 f5       	brge	.+108    	; 0x1382 <moveAway+0x202>
	{
			BOOL moveForwardR = ~(moveX <= 0);
			BOOL moveForwardL = ~(moveX > 0);
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    1316:	c2 01       	movw	r24, r4
    1318:	b1 01       	movw	r22, r2
    131a:	0e 94 1f 22 	call	0x443e	; 0x443e <__fixsfsi>
    131e:	8b 01       	movw	r16, r22
    1320:	77 ff       	sbrs	r23, 7
    1322:	03 c0       	rjmp	.+6      	; 0x132a <moveAway+0x1aa>
    1324:	10 95       	com	r17
    1326:	01 95       	neg	r16
    1328:	1f 4f       	sbci	r17, 0xFF	; 255
    132a:	2d b7       	in	r18, 0x3d	; 61
    132c:	3e b7       	in	r19, 0x3e	; 62
    132e:	29 50       	subi	r18, 0x09	; 9
    1330:	30 40       	sbci	r19, 0x00	; 0
    1332:	0f b6       	in	r0, 0x3f	; 63
    1334:	f8 94       	cli
    1336:	3e bf       	out	0x3e, r19	; 62
    1338:	0f be       	out	0x3f, r0	; 63
    133a:	2d bf       	out	0x3d, r18	; 61
    133c:	ed b7       	in	r30, 0x3d	; 61
    133e:	fe b7       	in	r31, 0x3e	; 62
    1340:	31 96       	adiw	r30, 0x01	; 1
    1342:	88 ec       	ldi	r24, 0xC8	; 200
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	ad b7       	in	r26, 0x3d	; 61
    1348:	be b7       	in	r27, 0x3e	; 62
    134a:	12 96       	adiw	r26, 0x02	; 2
    134c:	9c 93       	st	X, r25
    134e:	8e 93       	st	-X, r24
    1350:	11 97       	sbiw	r26, 0x01	; 1
    1352:	13 83       	std	Z+3, r17	; 0x03
    1354:	02 83       	std	Z+2, r16	; 0x02
    1356:	82 ec       	ldi	r24, 0xC2	; 194
    1358:	91 e0       	ldi	r25, 0x01	; 1
    135a:	95 83       	std	Z+5, r25	; 0x05
    135c:	84 83       	std	Z+4, r24	; 0x04
    135e:	16 82       	std	Z+6, r1	; 0x06
    1360:	10 86       	std	Z+8, r1	; 0x08
    1362:	17 82       	std	Z+7, r1	; 0x07
    1364:	81 e0       	ldi	r24, 0x01	; 1
    1366:	62 e0       	ldi	r22, 0x02	; 2
    1368:	40 e0       	ldi	r20, 0x00	; 0
    136a:	28 ec       	ldi	r18, 0xC8	; 200
    136c:	30 e0       	ldi	r19, 0x00	; 0
    136e:	72 ec       	ldi	r23, 0xC2	; 194
    1370:	e7 2e       	mov	r14, r23
    1372:	71 e0       	ldi	r23, 0x01	; 1
    1374:	f7 2e       	mov	r15, r23
    1376:	cc 24       	eor	r12, r12
    1378:	aa 24       	eor	r10, r10
    137a:	bb 24       	eor	r11, r11
    137c:	88 24       	eor	r8, r8
    137e:	83 94       	inc	r8
    1380:	42 c0       	rjmp	.+132    	; 0x1406 <moveAway+0x286>
			
			// if the robot was shy
			// state that fact
			shyRobot = 1;
	}
	else if ((ltIR < IR_OBST_L_THRESH))
    1382:	69 81       	ldd	r22, Y+1	; 0x01
    1384:	7a 81       	ldd	r23, Y+2	; 0x02
    1386:	8b 81       	ldd	r24, Y+3	; 0x03
    1388:	9c 81       	ldd	r25, Y+4	; 0x04
    138a:	20 e0       	ldi	r18, 0x00	; 0
    138c:	30 e0       	ldi	r19, 0x00	; 0
    138e:	40 e2       	ldi	r20, 0x20	; 32
    1390:	51 e4       	ldi	r21, 0x41	; 65
    1392:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    1396:	87 fd       	sbrc	r24, 7
    1398:	02 c0       	rjmp	.+4      	; 0x139e <moveAway+0x21e>
    139a:	80 e0       	ldi	r24, 0x00	; 0
    139c:	3f c0       	rjmp	.+126    	; 0x141c <moveAway+0x29c>
	{
			BOOL moveForwardR = ~(moveX <= 0);
			BOOL moveForwardL = ~(moveX > 0);
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    139e:	c2 01       	movw	r24, r4
    13a0:	b1 01       	movw	r22, r2
    13a2:	0e 94 1f 22 	call	0x443e	; 0x443e <__fixsfsi>
    13a6:	8b 01       	movw	r16, r22
    13a8:	77 ff       	sbrs	r23, 7
    13aa:	03 c0       	rjmp	.+6      	; 0x13b2 <moveAway+0x232>
    13ac:	10 95       	com	r17
    13ae:	01 95       	neg	r16
    13b0:	1f 4f       	sbci	r17, 0xFF	; 255
    13b2:	2d b7       	in	r18, 0x3d	; 61
    13b4:	3e b7       	in	r19, 0x3e	; 62
    13b6:	29 50       	subi	r18, 0x09	; 9
    13b8:	30 40       	sbci	r19, 0x00	; 0
    13ba:	0f b6       	in	r0, 0x3f	; 63
    13bc:	f8 94       	cli
    13be:	3e bf       	out	0x3e, r19	; 62
    13c0:	0f be       	out	0x3f, r0	; 63
    13c2:	2d bf       	out	0x3d, r18	; 61
    13c4:	ed b7       	in	r30, 0x3d	; 61
    13c6:	fe b7       	in	r31, 0x3e	; 62
    13c8:	31 96       	adiw	r30, 0x01	; 1
    13ca:	88 ec       	ldi	r24, 0xC8	; 200
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	ad b7       	in	r26, 0x3d	; 61
    13d0:	be b7       	in	r27, 0x3e	; 62
    13d2:	12 96       	adiw	r26, 0x02	; 2
    13d4:	9c 93       	st	X, r25
    13d6:	8e 93       	st	-X, r24
    13d8:	11 97       	sbiw	r26, 0x01	; 1
    13da:	13 83       	std	Z+3, r17	; 0x03
    13dc:	02 83       	std	Z+2, r16	; 0x02
    13de:	82 ec       	ldi	r24, 0xC2	; 194
    13e0:	91 e0       	ldi	r25, 0x01	; 1
    13e2:	95 83       	std	Z+5, r25	; 0x05
    13e4:	84 83       	std	Z+4, r24	; 0x04
    13e6:	16 82       	std	Z+6, r1	; 0x06
    13e8:	10 86       	std	Z+8, r1	; 0x08
    13ea:	17 82       	std	Z+7, r1	; 0x07
    13ec:	81 e0       	ldi	r24, 0x01	; 1
    13ee:	62 e0       	ldi	r22, 0x02	; 2
    13f0:	41 e0       	ldi	r20, 0x01	; 1
    13f2:	28 ec       	ldi	r18, 0xC8	; 200
    13f4:	30 e0       	ldi	r19, 0x00	; 0
    13f6:	52 ec       	ldi	r21, 0xC2	; 194
    13f8:	e5 2e       	mov	r14, r21
    13fa:	51 e0       	ldi	r21, 0x01	; 1
    13fc:	f5 2e       	mov	r15, r21
    13fe:	cc 24       	eor	r12, r12
    1400:	aa 24       	eor	r10, r10
    1402:	bb 24       	eor	r11, r11
    1404:	88 24       	eor	r8, r8
    1406:	0e 94 78 11 	call	0x22f0	; 0x22f0 <STEPPER_move>
    140a:	81 e0       	ldi	r24, 0x01	; 1
    140c:	ed b7       	in	r30, 0x3d	; 61
    140e:	fe b7       	in	r31, 0x3e	; 62
    1410:	39 96       	adiw	r30, 0x09	; 9
    1412:	0f b6       	in	r0, 0x3f	; 63
    1414:	f8 94       	cli
    1416:	fe bf       	out	0x3e, r31	; 62
    1418:	0f be       	out	0x3f, r0	; 63
    141a:	ed bf       	out	0x3d, r30	; 61
			// state that fact
			shyRobot = 1;
	}
	
	return shyRobot;
}
    141c:	0f 90       	pop	r0
    141e:	0f 90       	pop	r0
    1420:	0f 90       	pop	r0
    1422:	0f 90       	pop	r0
    1424:	cf 91       	pop	r28
    1426:	df 91       	pop	r29
    1428:	1f 91       	pop	r17
    142a:	0f 91       	pop	r16
    142c:	ff 90       	pop	r15
    142e:	ef 90       	pop	r14
    1430:	df 90       	pop	r13
    1432:	cf 90       	pop	r12
    1434:	bf 90       	pop	r11
    1436:	af 90       	pop	r10
    1438:	9f 90       	pop	r9
    143a:	8f 90       	pop	r8
    143c:	7f 90       	pop	r7
    143e:	6f 90       	pop	r6
    1440:	5f 90       	pop	r5
    1442:	4f 90       	pop	r4
    1444:	3f 90       	pop	r3
    1446:	2f 90       	pop	r2
    1448:	08 95       	ret

0000144a <moveWall>:
* Overview:			This function searches for walls and adjust the 
*					robots differential steering to attempts to
*					follow them
********************************************************************/
char moveWall( void )
{	
    144a:	5f 92       	push	r5
    144c:	6f 92       	push	r6
    144e:	7f 92       	push	r7
    1450:	8f 92       	push	r8
    1452:	9f 92       	push	r9
    1454:	af 92       	push	r10
    1456:	bf 92       	push	r11
    1458:	cf 92       	push	r12
    145a:	df 92       	push	r13
    145c:	ef 92       	push	r14
    145e:	ff 92       	push	r15
    1460:	0f 93       	push	r16
    1462:	1f 93       	push	r17
	// Check for walls
	BOOL isWall = (ftIR < IR_WALL_F_THRESH)|(bkIR < IR_WALL_B_THRESH)|(rtIR < IR_WALL_R_THRESH)|(ltIR < IR_WALL_L_THRESH);
    1464:	e0 90 be 01 	lds	r14, 0x01BE
    1468:	f0 90 bf 01 	lds	r15, 0x01BF
    146c:	00 91 c0 01 	lds	r16, 0x01C0
    1470:	10 91 c1 01 	lds	r17, 0x01C1
    1474:	55 24       	eor	r5, r5
    1476:	c8 01       	movw	r24, r16
    1478:	b7 01       	movw	r22, r14
    147a:	20 e0       	ldi	r18, 0x00	; 0
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	40 ea       	ldi	r20, 0xA0	; 160
    1480:	51 e4       	ldi	r21, 0x41	; 65
    1482:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    1486:	88 23       	and	r24, r24
    1488:	14 f4       	brge	.+4      	; 0x148e <moveWall+0x44>
    148a:	55 24       	eor	r5, r5
    148c:	53 94       	inc	r5
    148e:	a0 90 b6 01 	lds	r10, 0x01B6
    1492:	b0 90 b7 01 	lds	r11, 0x01B7
    1496:	c0 90 b8 01 	lds	r12, 0x01B8
    149a:	d0 90 b9 01 	lds	r13, 0x01B9
    149e:	60 90 b2 01 	lds	r6, 0x01B2
    14a2:	70 90 b3 01 	lds	r7, 0x01B3
    14a6:	80 90 b4 01 	lds	r8, 0x01B4
    14aa:	90 90 b5 01 	lds	r9, 0x01B5
	if(!isWall){	
    14ae:	60 91 ba 01 	lds	r22, 0x01BA
    14b2:	70 91 bb 01 	lds	r23, 0x01BB
    14b6:	80 91 bc 01 	lds	r24, 0x01BC
    14ba:	90 91 bd 01 	lds	r25, 0x01BD
    14be:	20 e0       	ldi	r18, 0x00	; 0
    14c0:	30 e0       	ldi	r19, 0x00	; 0
    14c2:	40 ea       	ldi	r20, 0xA0	; 160
    14c4:	51 e4       	ldi	r21, 0x41	; 65
    14c6:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    14ca:	87 fd       	sbrc	r24, 7
    14cc:	18 c0       	rjmp	.+48     	; 0x14fe <moveWall+0xb4>
    14ce:	55 20       	and	r5, r5
    14d0:	b1 f4       	brne	.+44     	; 0x14fe <moveWall+0xb4>
    14d2:	c6 01       	movw	r24, r12
    14d4:	b5 01       	movw	r22, r10
    14d6:	20 e0       	ldi	r18, 0x00	; 0
    14d8:	30 e0       	ldi	r19, 0x00	; 0
    14da:	40 ea       	ldi	r20, 0xA0	; 160
    14dc:	51 e4       	ldi	r21, 0x41	; 65
    14de:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    14e2:	87 fd       	sbrc	r24, 7
    14e4:	0c c0       	rjmp	.+24     	; 0x14fe <moveWall+0xb4>
    14e6:	c4 01       	movw	r24, r8
    14e8:	b3 01       	movw	r22, r6
    14ea:	20 e0       	ldi	r18, 0x00	; 0
    14ec:	30 e0       	ldi	r19, 0x00	; 0
    14ee:	40 ea       	ldi	r20, 0xA0	; 160
    14f0:	51 e4       	ldi	r21, 0x41	; 65
    14f2:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    14f6:	87 fd       	sbrc	r24, 7
    14f8:	02 c0       	rjmp	.+4      	; 0x14fe <moveWall+0xb4>
	
	// debug LCP print statement
	// LCD_clear();
	// LCD_printf("bkIR: %3.2f\nmoveWall\nError: %3f\nEffort: %3f\n", bkIR, error, effort);
	
}
    14fa:	80 e0       	ldi	r24, 0x00	; 0
    14fc:	09 c1       	rjmp	.+530    	; 0x1710 <moveWall+0x2c6>
	// A variable that contains the logic of which wall is imaginary
	BOOL isLEFT;
	
	// If there is no wall on our right side
	// place an imaginary wall just within the threshold
	if(rtIR>IR_WALL_R_THRESH){
    14fe:	c6 01       	movw	r24, r12
    1500:	b5 01       	movw	r22, r10
    1502:	20 e0       	ldi	r18, 0x00	; 0
    1504:	30 e0       	ldi	r19, 0x00	; 0
    1506:	40 ea       	ldi	r20, 0xA0	; 160
    1508:	51 e4       	ldi	r21, 0x41	; 65
    150a:	0e 94 02 23 	call	0x4604	; 0x4604 <__gesf2>
    150e:	18 16       	cp	r1, r24
    1510:	64 f4       	brge	.+24     	; 0x152a <moveWall+0xe0>
		rtIR = IR_WALL_R_THRESH-15;
    1512:	80 e0       	ldi	r24, 0x00	; 0
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	a0 ea       	ldi	r26, 0xA0	; 160
    1518:	b0 e4       	ldi	r27, 0x40	; 64
    151a:	80 93 b6 01 	sts	0x01B6, r24
    151e:	90 93 b7 01 	sts	0x01B7, r25
    1522:	a0 93 b8 01 	sts	0x01B8, r26
    1526:	b0 93 b9 01 	sts	0x01B9, r27
		isLEFT = 0;
	}
	// If there is no wall on our left side
	// place an imaginary wall just within the threshold
	if(ltIR>IR_WALL_L_THRESH){
    152a:	c4 01       	movw	r24, r8
    152c:	b3 01       	movw	r22, r6
    152e:	20 e0       	ldi	r18, 0x00	; 0
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	40 ea       	ldi	r20, 0xA0	; 160
    1534:	51 e4       	ldi	r21, 0x41	; 65
    1536:	0e 94 02 23 	call	0x4604	; 0x4604 <__gesf2>
    153a:	18 16       	cp	r1, r24
    153c:	14 f0       	brlt	.+4      	; 0x1542 <moveWall+0xf8>
    153e:	80 e0       	ldi	r24, 0x00	; 0
    1540:	0d c0       	rjmp	.+26     	; 0x155c <moveWall+0x112>
		ltIR = IR_WALL_L_THRESH-15;
    1542:	80 e0       	ldi	r24, 0x00	; 0
    1544:	90 e0       	ldi	r25, 0x00	; 0
    1546:	a0 ea       	ldi	r26, 0xA0	; 160
    1548:	b0 e4       	ldi	r27, 0x40	; 64
    154a:	80 93 b2 01 	sts	0x01B2, r24
    154e:	90 93 b3 01 	sts	0x01B3, r25
    1552:	a0 93 b4 01 	sts	0x01B4, r26
    1556:	b0 93 b5 01 	sts	0x01B5, r27
    155a:	81 e0       	ldi	r24, 0x01	; 1
	}
	
	float error;
	
	// Check to see if the wall exists in front of the robot
	if(bkIR < IR_WALL_B_THRESH)
    155c:	55 20       	and	r5, r5
    155e:	81 f1       	breq	.+96     	; 0x15c0 <moveWall+0x176>
	{
		// if the imaginary wall was on the left side
		// then biased the error so that when the robot encounters
		// an upcoming corner, the robot will turn away from both walls
		if (isLEFT)
    1560:	88 23       	and	r24, r24
    1562:	89 f0       	breq	.+34     	; 0x1586 <moveWall+0x13c>
		{
			error = rtIR - (ltIR + bkIR*bkIR);
    1564:	c8 01       	movw	r24, r16
    1566:	b7 01       	movw	r22, r14
    1568:	a8 01       	movw	r20, r16
    156a:	97 01       	movw	r18, r14
    156c:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
    1570:	20 91 b2 01 	lds	r18, 0x01B2
    1574:	30 91 b3 01 	lds	r19, 0x01B3
    1578:	40 91 b4 01 	lds	r20, 0x01B4
    157c:	50 91 b5 01 	lds	r21, 0x01B5
    1580:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
    1584:	12 c0       	rjmp	.+36     	; 0x15aa <moveWall+0x160>
		}
		// biased the error appropriately for the inverse situation
		else 
		{
			error = rtIR - (ltIR - bkIR*bkIR);
    1586:	c8 01       	movw	r24, r16
    1588:	b7 01       	movw	r22, r14
    158a:	a8 01       	movw	r20, r16
    158c:	97 01       	movw	r18, r14
    158e:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
    1592:	9b 01       	movw	r18, r22
    1594:	ac 01       	movw	r20, r24
    1596:	60 91 b2 01 	lds	r22, 0x01B2
    159a:	70 91 b3 01 	lds	r23, 0x01B3
    159e:	80 91 b4 01 	lds	r24, 0x01B4
    15a2:	90 91 b5 01 	lds	r25, 0x01B5
    15a6:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
    15aa:	9b 01       	movw	r18, r22
    15ac:	ac 01       	movw	r20, r24
    15ae:	60 91 b6 01 	lds	r22, 0x01B6
    15b2:	70 91 b7 01 	lds	r23, 0x01B7
    15b6:	80 91 b8 01 	lds	r24, 0x01B8
    15ba:	90 91 b9 01 	lds	r25, 0x01B9
    15be:	10 c0       	rjmp	.+32     	; 0x15e0 <moveWall+0x196>
	// the air is simply the right distance minus the left left distance
	// this ensures symmetry that the robot will follow in between the two walls
	// either one real and one imaginary, or both real
	else 
	{
		error = rtIR - ltIR;
    15c0:	60 91 b6 01 	lds	r22, 0x01B6
    15c4:	70 91 b7 01 	lds	r23, 0x01B7
    15c8:	80 91 b8 01 	lds	r24, 0x01B8
    15cc:	90 91 b9 01 	lds	r25, 0x01B9
    15d0:	20 91 b2 01 	lds	r18, 0x01B2
    15d4:	30 91 b3 01 	lds	r19, 0x01B3
    15d8:	40 91 b4 01 	lds	r20, 0x01B4
    15dc:	50 91 b5 01 	lds	r21, 0x01B5
    15e0:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
    15e4:	e6 2f       	mov	r30, r22
	}

	// Use the PID controller function to calculate error
	float effort = pidController(error, 0);
    15e6:	2e 2f       	mov	r18, r30
    15e8:	37 2f       	mov	r19, r23
    15ea:	48 2f       	mov	r20, r24
    15ec:	59 2f       	mov	r21, r25
    15ee:	b9 01       	movw	r22, r18
    15f0:	ca 01       	movw	r24, r20
    15f2:	40 e0       	ldi	r20, 0x00	; 0
    15f4:	0e 94 8a 07 	call	0xf14	; 0xf14 <pidController>
    15f8:	6b 01       	movw	r12, r22
    15fa:	7c 01       	movw	r14, r24
	
	// Limit the control effort to the max allowable effort
	if((abs(effort) > MAX_EFFORT)&(effort!=0)){
    15fc:	0e 94 1f 22 	call	0x443e	; 0x443e <__fixsfsi>
    1600:	8b 01       	movw	r16, r22
    1602:	77 ff       	sbrs	r23, 7
    1604:	03 c0       	rjmp	.+6      	; 0x160c <moveWall+0x1c2>
    1606:	10 95       	com	r17
    1608:	01 95       	neg	r16
    160a:	1f 4f       	sbci	r17, 0xFF	; 255
    160c:	05 36       	cpi	r16, 0x65	; 101
    160e:	11 05       	cpc	r17, r1
    1610:	fc f0       	brlt	.+62     	; 0x1650 <moveWall+0x206>
    1612:	c7 01       	movw	r24, r14
    1614:	b6 01       	movw	r22, r12
    1616:	20 e0       	ldi	r18, 0x00	; 0
    1618:	30 e0       	ldi	r19, 0x00	; 0
    161a:	40 e0       	ldi	r20, 0x00	; 0
    161c:	50 e0       	ldi	r21, 0x00	; 0
    161e:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    1622:	88 23       	and	r24, r24
    1624:	a9 f0       	breq	.+42     	; 0x1650 <moveWall+0x206>
		effort = MAX_EFFORT*(effort/abs(effort));
    1626:	b8 01       	movw	r22, r16
    1628:	88 27       	eor	r24, r24
    162a:	77 fd       	sbrc	r23, 7
    162c:	80 95       	com	r24
    162e:	98 2f       	mov	r25, r24
    1630:	0e 94 52 22 	call	0x44a4	; 0x44a4 <__floatsisf>
    1634:	9b 01       	movw	r18, r22
    1636:	ac 01       	movw	r20, r24
    1638:	c7 01       	movw	r24, r14
    163a:	b6 01       	movw	r22, r12
    163c:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
    1640:	20 e0       	ldi	r18, 0x00	; 0
    1642:	30 e0       	ldi	r19, 0x00	; 0
    1644:	48 ec       	ldi	r20, 0xC8	; 200
    1646:	52 e4       	ldi	r21, 0x42	; 66
    1648:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
    164c:	6b 01       	movw	r12, r22
    164e:	7c 01       	movw	r14, r24
	}
	
	// Calculate the stepper speeds for each wheel using a ratio
	float stepper_speed_L = MAX_SPEED/2 + (MAX_SPEED/2)*(effort/MAX_EFFORT);
    1650:	c7 01       	movw	r24, r14
    1652:	b6 01       	movw	r22, r12
    1654:	20 e0       	ldi	r18, 0x00	; 0
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	48 ec       	ldi	r20, 0xC8	; 200
    165a:	52 e4       	ldi	r21, 0x42	; 66
    165c:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
    1660:	6b 01       	movw	r12, r22
    1662:	7c 01       	movw	r14, r24
	float stepper_speed_R = MAX_SPEED/2 - (MAX_SPEED/2)*(effort/MAX_EFFORT);
	
	// Move with wall
	STEPPER_move_stnb( STEPPER_BOTH, 
    1664:	8d b7       	in	r24, 0x3d	; 61
    1666:	9e b7       	in	r25, 0x3e	; 62
    1668:	09 97       	sbiw	r24, 0x09	; 9
    166a:	0f b6       	in	r0, 0x3f	; 63
    166c:	f8 94       	cli
    166e:	9e bf       	out	0x3e, r25	; 62
    1670:	0f be       	out	0x3f, r0	; 63
    1672:	8d bf       	out	0x3d, r24	; 61
    1674:	0d b7       	in	r16, 0x3d	; 61
    1676:	1e b7       	in	r17, 0x3e	; 62
    1678:	0f 5f       	subi	r16, 0xFF	; 255
    167a:	1f 4f       	sbci	r17, 0xFF	; 255
    167c:	c7 01       	movw	r24, r14
    167e:	b6 01       	movw	r22, r12
    1680:	20 e0       	ldi	r18, 0x00	; 0
    1682:	30 e0       	ldi	r19, 0x00	; 0
    1684:	48 ec       	ldi	r20, 0xC8	; 200
    1686:	51 e4       	ldi	r21, 0x41	; 65
    1688:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
    168c:	20 e0       	ldi	r18, 0x00	; 0
    168e:	30 e0       	ldi	r19, 0x00	; 0
    1690:	48 ec       	ldi	r20, 0xC8	; 200
    1692:	51 e4       	ldi	r21, 0x41	; 65
    1694:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
    1698:	0e 94 24 22 	call	0x4448	; 0x4448 <__fixunssfsi>
    169c:	4b 01       	movw	r8, r22
    169e:	5c 01       	movw	r10, r24
    16a0:	82 e3       	ldi	r24, 0x32	; 50
    16a2:	90 e0       	ldi	r25, 0x00	; 0
    16a4:	f8 01       	movw	r30, r16
    16a6:	91 83       	std	Z+1, r25	; 0x01
    16a8:	80 83       	st	Z, r24
    16aa:	c7 01       	movw	r24, r14
    16ac:	b6 01       	movw	r22, r12
    16ae:	20 e0       	ldi	r18, 0x00	; 0
    16b0:	30 e0       	ldi	r19, 0x00	; 0
    16b2:	48 ec       	ldi	r20, 0xC8	; 200
    16b4:	51 ec       	ldi	r21, 0xC1	; 193
    16b6:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
    16ba:	20 e0       	ldi	r18, 0x00	; 0
    16bc:	30 e0       	ldi	r19, 0x00	; 0
    16be:	48 ec       	ldi	r20, 0xC8	; 200
    16c0:	51 e4       	ldi	r21, 0x41	; 65
    16c2:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
    16c6:	0e 94 24 22 	call	0x4448	; 0x4448 <__fixunssfsi>
    16ca:	f8 01       	movw	r30, r16
    16cc:	73 83       	std	Z+3, r23	; 0x03
    16ce:	62 83       	std	Z+2, r22	; 0x02
    16d0:	82 ec       	ldi	r24, 0xC2	; 194
    16d2:	91 e0       	ldi	r25, 0x01	; 1
    16d4:	95 83       	std	Z+5, r25	; 0x05
    16d6:	84 83       	std	Z+4, r24	; 0x04
    16d8:	16 82       	std	Z+6, r1	; 0x06
    16da:	10 86       	std	Z+8, r1	; 0x08
    16dc:	17 82       	std	Z+7, r1	; 0x07
    16de:	81 e0       	ldi	r24, 0x01	; 1
    16e0:	62 e0       	ldi	r22, 0x02	; 2
    16e2:	41 e0       	ldi	r20, 0x01	; 1
    16e4:	22 e3       	ldi	r18, 0x32	; 50
    16e6:	30 e0       	ldi	r19, 0x00	; 0
    16e8:	84 01       	movw	r16, r8
    16ea:	f2 ec       	ldi	r31, 0xC2	; 194
    16ec:	ef 2e       	mov	r14, r31
    16ee:	f1 e0       	ldi	r31, 0x01	; 1
    16f0:	ff 2e       	mov	r15, r31
    16f2:	cc 24       	eor	r12, r12
    16f4:	aa 24       	eor	r10, r10
    16f6:	bb 24       	eor	r11, r11
    16f8:	88 24       	eor	r8, r8
    16fa:	83 94       	inc	r8
    16fc:	0e 94 78 11 	call	0x22f0	; 0x22f0 <STEPPER_move>
    1700:	8d b7       	in	r24, 0x3d	; 61
    1702:	9e b7       	in	r25, 0x3e	; 62
    1704:	09 96       	adiw	r24, 0x09	; 9
    1706:	0f b6       	in	r0, 0x3f	; 63
    1708:	f8 94       	cli
    170a:	9e bf       	out	0x3e, r25	; 62
    170c:	0f be       	out	0x3f, r0	; 63
    170e:	8d bf       	out	0x3d, r24	; 61
	
	// debug LCP print statement
	// LCD_clear();
	// LCD_printf("bkIR: %3.2f\nmoveWall\nError: %3f\nEffort: %3f\n", bkIR, error, effort);
	
}
    1710:	1f 91       	pop	r17
    1712:	0f 91       	pop	r16
    1714:	ff 90       	pop	r15
    1716:	ef 90       	pop	r14
    1718:	df 90       	pop	r13
    171a:	cf 90       	pop	r12
    171c:	bf 90       	pop	r11
    171e:	af 90       	pop	r10
    1720:	9f 90       	pop	r9
    1722:	8f 90       	pop	r8
    1724:	7f 90       	pop	r7
    1726:	6f 90       	pop	r6
    1728:	5f 90       	pop	r5
    172a:	08 95       	ret

0000172c <moveLight>:
					 1: Light_Lover = track the light but do not collide
					 2: Light_Aggro = run towards the light and touch it
					 3: Light_Shy = run away from the light
********************************************************************/
char moveLight( int lightBehavior)
{
    172c:	3f 92       	push	r3
    172e:	4f 92       	push	r4
    1730:	5f 92       	push	r5
    1732:	6f 92       	push	r6
    1734:	7f 92       	push	r7
    1736:	8f 92       	push	r8
    1738:	9f 92       	push	r9
    173a:	af 92       	push	r10
    173c:	bf 92       	push	r11
    173e:	cf 92       	push	r12
    1740:	df 92       	push	r13
    1742:	ef 92       	push	r14
    1744:	ff 92       	push	r15
    1746:	0f 93       	push	r16
    1748:	1f 93       	push	r17
    174a:	7c 01       	movw	r14, r24
	// call the moveWall() to detect walls and return a Boolean
	
	BOOL isLight = (rightLightVolt > LIGHT_R_THRESH)||(leftLightVolt > LIGHT_L_THRESH);
    174c:	40 90 c2 01 	lds	r4, 0x01C2
    1750:	50 90 c3 01 	lds	r5, 0x01C3
    1754:	60 90 c4 01 	lds	r6, 0x01C4
    1758:	70 90 c5 01 	lds	r7, 0x01C5
    175c:	c3 01       	movw	r24, r6
    175e:	b2 01       	movw	r22, r4
    1760:	2b e7       	ldi	r18, 0x7B	; 123
    1762:	34 e1       	ldi	r19, 0x14	; 20
    1764:	46 e8       	ldi	r20, 0x86	; 134
    1766:	50 e4       	ldi	r21, 0x40	; 64
    1768:	0e 94 02 23 	call	0x4604	; 0x4604 <__gesf2>
    176c:	18 16       	cp	r1, r24
    176e:	94 f0       	brlt	.+36     	; 0x1794 <moveLight+0x68>
    1770:	00 e0       	ldi	r16, 0x00	; 0
    1772:	10 e0       	ldi	r17, 0x00	; 0
    1774:	60 91 c6 01 	lds	r22, 0x01C6
    1778:	70 91 c7 01 	lds	r23, 0x01C7
    177c:	80 91 c8 01 	lds	r24, 0x01C8
    1780:	90 91 c9 01 	lds	r25, 0x01C9
    1784:	2b e7       	ldi	r18, 0x7B	; 123
    1786:	34 e1       	ldi	r19, 0x14	; 20
    1788:	46 e8       	ldi	r20, 0x86	; 134
    178a:	50 e4       	ldi	r21, 0x40	; 64
    178c:	0e 94 02 23 	call	0x4604	; 0x4604 <__gesf2>
    1790:	18 16       	cp	r1, r24
    1792:	14 f4       	brge	.+4      	; 0x1798 <moveLight+0x6c>
    1794:	01 e0       	ldi	r16, 0x01	; 1
    1796:	10 e0       	ldi	r17, 0x00	; 0
    1798:	30 2e       	mov	r3, r16
	if(!isLight){
    179a:	00 23       	and	r16, r16
    179c:	09 f4       	brne	.+2      	; 0x17a0 <moveLight+0x74>
    179e:	31 c1       	rjmp	.+610    	; 0x1a02 <moveLight+0x2d6>
	float stepper_speed_L = 0;
	float stepper_speed_R = 0;
	BOOL direction_L = 1;
	BOOL direction_R = 1;
	
	switch(lightBehavior){
    17a0:	81 e0       	ldi	r24, 0x01	; 1
    17a2:	e8 16       	cp	r14, r24
    17a4:	f1 04       	cpc	r15, r1
    17a6:	f1 f0       	breq	.+60     	; 0x17e4 <moveLight+0xb8>
    17a8:	92 e0       	ldi	r25, 0x02	; 2
    17aa:	e9 16       	cp	r14, r25
    17ac:	f1 04       	cpc	r15, r1
    17ae:	1c f4       	brge	.+6      	; 0x17b6 <moveLight+0x8a>
    17b0:	ef 28       	or	r14, r15
    17b2:	c1 f0       	breq	.+48     	; 0x17e4 <moveLight+0xb8>
    17b4:	0a c0       	rjmp	.+20     	; 0x17ca <moveLight+0x9e>
    17b6:	e2 e0       	ldi	r30, 0x02	; 2
    17b8:	ee 16       	cp	r14, r30
    17ba:	f1 04       	cpc	r15, r1
    17bc:	09 f4       	brne	.+2      	; 0x17c0 <moveLight+0x94>
    17be:	4f c0       	rjmp	.+158    	; 0x185e <moveLight+0x132>
    17c0:	f3 e0       	ldi	r31, 0x03	; 3
    17c2:	ef 16       	cp	r14, r31
    17c4:	f1 04       	cpc	r15, r1
    17c6:	09 f4       	brne	.+2      	; 0x17ca <moveLight+0x9e>
    17c8:	7d c0       	rjmp	.+250    	; 0x18c4 <moveLight+0x198>
    17ca:	0f 2e       	mov	r0, r31
    17cc:	f0 e0       	ldi	r31, 0x00	; 0
    17ce:	cf 2e       	mov	r12, r31
    17d0:	f0 e0       	ldi	r31, 0x00	; 0
    17d2:	df 2e       	mov	r13, r31
    17d4:	f0 e0       	ldi	r31, 0x00	; 0
    17d6:	ef 2e       	mov	r14, r31
    17d8:	f0 e0       	ldi	r31, 0x00	; 0
    17da:	ff 2e       	mov	r15, r31
    17dc:	f0 2d       	mov	r31, r0
    17de:	46 01       	movw	r8, r12
    17e0:	57 01       	movw	r10, r14
    17e2:	a2 c0       	rjmp	.+324    	; 0x1928 <moveLight+0x1fc>
			stepper_speed_L = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_R_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
			stepper_speed_R = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_L_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
			break;
						
		case LIGHT_LOVER:
			stepper_speed_L = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_L_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    17e4:	60 91 c6 01 	lds	r22, 0x01C6
    17e8:	70 91 c7 01 	lds	r23, 0x01C7
    17ec:	80 91 c8 01 	lds	r24, 0x01C8
    17f0:	90 91 c9 01 	lds	r25, 0x01C9
    17f4:	2b e7       	ldi	r18, 0x7B	; 123
    17f6:	34 e1       	ldi	r19, 0x14	; 20
    17f8:	46 e8       	ldi	r20, 0x86	; 134
    17fa:	50 e4       	ldi	r21, 0x40	; 64
    17fc:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
    1800:	28 e5       	ldi	r18, 0x58	; 88
    1802:	3f e8       	ldi	r19, 0x8F	; 143
    1804:	42 e0       	ldi	r20, 0x02	; 2
    1806:	5f e3       	ldi	r21, 0x3F	; 63
    1808:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
    180c:	20 e0       	ldi	r18, 0x00	; 0
    180e:	30 e0       	ldi	r19, 0x00	; 0
    1810:	48 e4       	ldi	r20, 0x48	; 72
    1812:	52 ec       	ldi	r21, 0xC2	; 194
    1814:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
    1818:	20 e0       	ldi	r18, 0x00	; 0
    181a:	30 e0       	ldi	r19, 0x00	; 0
    181c:	48 e4       	ldi	r20, 0x48	; 72
    181e:	52 e4       	ldi	r21, 0x42	; 66
    1820:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
    1824:	6b 01       	movw	r12, r22
    1826:	7c 01       	movw	r14, r24
			stepper_speed_R = MAX_SPEED_LIGHT - MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_R_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    1828:	c3 01       	movw	r24, r6
    182a:	b2 01       	movw	r22, r4
    182c:	2b e7       	ldi	r18, 0x7B	; 123
    182e:	34 e1       	ldi	r19, 0x14	; 20
    1830:	46 e8       	ldi	r20, 0x86	; 134
    1832:	50 e4       	ldi	r21, 0x40	; 64
    1834:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
    1838:	28 e5       	ldi	r18, 0x58	; 88
    183a:	3f e8       	ldi	r19, 0x8F	; 143
    183c:	42 e0       	ldi	r20, 0x02	; 2
    183e:	5f e3       	ldi	r21, 0x3F	; 63
    1840:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
    1844:	20 e0       	ldi	r18, 0x00	; 0
    1846:	30 e0       	ldi	r19, 0x00	; 0
    1848:	48 e4       	ldi	r20, 0x48	; 72
    184a:	52 ec       	ldi	r21, 0xC2	; 194
    184c:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
    1850:	20 e0       	ldi	r18, 0x00	; 0
    1852:	30 e0       	ldi	r19, 0x00	; 0
    1854:	48 e4       	ldi	r20, 0x48	; 72
    1856:	52 e4       	ldi	r21, 0x42	; 66
    1858:	0e 94 4f 21 	call	0x429e	; 0x429e <__addsf3>
    185c:	63 c0       	rjmp	.+198    	; 0x1924 <moveLight+0x1f8>
			break;
			
		case LIGHT_AGGRO:	
			stepper_speed_R = MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_L_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    185e:	60 91 c6 01 	lds	r22, 0x01C6
    1862:	70 91 c7 01 	lds	r23, 0x01C7
    1866:	80 91 c8 01 	lds	r24, 0x01C8
    186a:	90 91 c9 01 	lds	r25, 0x01C9
    186e:	2b e7       	ldi	r18, 0x7B	; 123
    1870:	34 e1       	ldi	r19, 0x14	; 20
    1872:	46 e8       	ldi	r20, 0x86	; 134
    1874:	50 e4       	ldi	r21, 0x40	; 64
    1876:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
    187a:	28 e5       	ldi	r18, 0x58	; 88
    187c:	3f e8       	ldi	r19, 0x8F	; 143
    187e:	42 e0       	ldi	r20, 0x02	; 2
    1880:	5f e3       	ldi	r21, 0x3F	; 63
    1882:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
    1886:	20 e0       	ldi	r18, 0x00	; 0
    1888:	30 e0       	ldi	r19, 0x00	; 0
    188a:	48 e4       	ldi	r20, 0x48	; 72
    188c:	52 e4       	ldi	r21, 0x42	; 66
    188e:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
    1892:	4b 01       	movw	r8, r22
    1894:	5c 01       	movw	r10, r24
			stepper_speed_L = MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_R_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    1896:	c3 01       	movw	r24, r6
    1898:	b2 01       	movw	r22, r4
    189a:	2b e7       	ldi	r18, 0x7B	; 123
    189c:	34 e1       	ldi	r19, 0x14	; 20
    189e:	46 e8       	ldi	r20, 0x86	; 134
    18a0:	50 e4       	ldi	r21, 0x40	; 64
    18a2:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
    18a6:	28 e5       	ldi	r18, 0x58	; 88
    18a8:	3f e8       	ldi	r19, 0x8F	; 143
    18aa:	42 e0       	ldi	r20, 0x02	; 2
    18ac:	5f e3       	ldi	r21, 0x3F	; 63
    18ae:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
    18b2:	20 e0       	ldi	r18, 0x00	; 0
    18b4:	30 e0       	ldi	r19, 0x00	; 0
    18b6:	48 e4       	ldi	r20, 0x48	; 72
    18b8:	52 e4       	ldi	r21, 0x42	; 66
    18ba:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
    18be:	6b 01       	movw	r12, r22
    18c0:	7c 01       	movw	r14, r24
    18c2:	32 c0       	rjmp	.+100    	; 0x1928 <moveLight+0x1fc>
			break;
			
		case LIGHT_SHY:
			stepper_speed_L = MAX_SPEED_LIGHT*((leftLightVolt - LIGHT_L_THRESH)/(LIGHT_L_MAX - LIGHT_L_THRESH));
    18c4:	60 91 c6 01 	lds	r22, 0x01C6
    18c8:	70 91 c7 01 	lds	r23, 0x01C7
    18cc:	80 91 c8 01 	lds	r24, 0x01C8
    18d0:	90 91 c9 01 	lds	r25, 0x01C9
    18d4:	2b e7       	ldi	r18, 0x7B	; 123
    18d6:	34 e1       	ldi	r19, 0x14	; 20
    18d8:	46 e8       	ldi	r20, 0x86	; 134
    18da:	50 e4       	ldi	r21, 0x40	; 64
    18dc:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
    18e0:	28 e5       	ldi	r18, 0x58	; 88
    18e2:	3f e8       	ldi	r19, 0x8F	; 143
    18e4:	42 e0       	ldi	r20, 0x02	; 2
    18e6:	5f e3       	ldi	r21, 0x3F	; 63
    18e8:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
    18ec:	20 e0       	ldi	r18, 0x00	; 0
    18ee:	30 e0       	ldi	r19, 0x00	; 0
    18f0:	48 e4       	ldi	r20, 0x48	; 72
    18f2:	52 e4       	ldi	r21, 0x42	; 66
    18f4:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
    18f8:	6b 01       	movw	r12, r22
    18fa:	7c 01       	movw	r14, r24
			stepper_speed_R = MAX_SPEED_LIGHT*((rightLightVolt - LIGHT_R_THRESH)/(LIGHT_R_MAX - LIGHT_R_THRESH));
    18fc:	c3 01       	movw	r24, r6
    18fe:	b2 01       	movw	r22, r4
    1900:	2b e7       	ldi	r18, 0x7B	; 123
    1902:	34 e1       	ldi	r19, 0x14	; 20
    1904:	46 e8       	ldi	r20, 0x86	; 134
    1906:	50 e4       	ldi	r21, 0x40	; 64
    1908:	0e 94 4e 21 	call	0x429c	; 0x429c <__subsf3>
    190c:	28 e5       	ldi	r18, 0x58	; 88
    190e:	3f e8       	ldi	r19, 0x8F	; 143
    1910:	42 e0       	ldi	r20, 0x02	; 2
    1912:	5f e3       	ldi	r21, 0x3F	; 63
    1914:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
    1918:	20 e0       	ldi	r18, 0x00	; 0
    191a:	30 e0       	ldi	r19, 0x00	; 0
    191c:	48 e4       	ldi	r20, 0x48	; 72
    191e:	52 e4       	ldi	r21, 0x42	; 66
    1920:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
    1924:	4b 01       	movw	r8, r22
    1926:	5c 01       	movw	r10, r24
			break;
			
		default: break;
		}
		
		if(stepper_speed_L<0){
    1928:	c7 01       	movw	r24, r14
    192a:	b6 01       	movw	r22, r12
    192c:	20 e0       	ldi	r18, 0x00	; 0
    192e:	30 e0       	ldi	r19, 0x00	; 0
    1930:	40 e0       	ldi	r20, 0x00	; 0
    1932:	50 e0       	ldi	r21, 0x00	; 0
    1934:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    1938:	88 23       	and	r24, r24
    193a:	64 f4       	brge	.+24     	; 0x1954 <moveLight+0x228>
    193c:	0f 2e       	mov	r0, r31
    193e:	f0 e0       	ldi	r31, 0x00	; 0
    1940:	cf 2e       	mov	r12, r31
    1942:	f0 e0       	ldi	r31, 0x00	; 0
    1944:	df 2e       	mov	r13, r31
    1946:	f0 e0       	ldi	r31, 0x00	; 0
    1948:	ef 2e       	mov	r14, r31
    194a:	f0 e0       	ldi	r31, 0x00	; 0
    194c:	ff 2e       	mov	r15, r31
    194e:	f0 2d       	mov	r31, r0
    1950:	66 24       	eor	r6, r6
    1952:	02 c0       	rjmp	.+4      	; 0x1958 <moveLight+0x22c>
    1954:	66 24       	eor	r6, r6
    1956:	63 94       	inc	r6
			stepper_speed_L = 0;
			direction_L = 0;}
		
		if(stepper_speed_R<0){
    1958:	c5 01       	movw	r24, r10
    195a:	b4 01       	movw	r22, r8
    195c:	20 e0       	ldi	r18, 0x00	; 0
    195e:	30 e0       	ldi	r19, 0x00	; 0
    1960:	40 e0       	ldi	r20, 0x00	; 0
    1962:	50 e0       	ldi	r21, 0x00	; 0
    1964:	0e 94 b3 21 	call	0x4366	; 0x4366 <__cmpsf2>
    1968:	88 23       	and	r24, r24
    196a:	64 f4       	brge	.+24     	; 0x1984 <moveLight+0x258>
    196c:	0f 2e       	mov	r0, r31
    196e:	f0 e0       	ldi	r31, 0x00	; 0
    1970:	8f 2e       	mov	r8, r31
    1972:	f0 e0       	ldi	r31, 0x00	; 0
    1974:	9f 2e       	mov	r9, r31
    1976:	f0 e0       	ldi	r31, 0x00	; 0
    1978:	af 2e       	mov	r10, r31
    197a:	f0 e0       	ldi	r31, 0x00	; 0
    197c:	bf 2e       	mov	r11, r31
    197e:	f0 2d       	mov	r31, r0
    1980:	77 24       	eor	r7, r7
    1982:	02 c0       	rjmp	.+4      	; 0x1988 <moveLight+0x25c>
    1984:	77 24       	eor	r7, r7
    1986:	73 94       	inc	r7
			stepper_speed_R = 0;
			direction_R = 0;}
			
		// STEPPER_REV
		STEPPER_move_stnb( STEPPER_BOTH, 
    1988:	8d b7       	in	r24, 0x3d	; 61
    198a:	9e b7       	in	r25, 0x3e	; 62
    198c:	09 97       	sbiw	r24, 0x09	; 9
    198e:	0f b6       	in	r0, 0x3f	; 63
    1990:	f8 94       	cli
    1992:	9e bf       	out	0x3e, r25	; 62
    1994:	0f be       	out	0x3f, r0	; 63
    1996:	8d bf       	out	0x3d, r24	; 61
    1998:	0d b7       	in	r16, 0x3d	; 61
    199a:	1e b7       	in	r17, 0x3e	; 62
    199c:	0f 5f       	subi	r16, 0xFF	; 255
    199e:	1f 4f       	sbci	r17, 0xFF	; 255
    19a0:	c7 01       	movw	r24, r14
    19a2:	b6 01       	movw	r22, r12
    19a4:	0e 94 24 22 	call	0x4448	; 0x4448 <__fixunssfsi>
    19a8:	6b 01       	movw	r12, r22
    19aa:	7c 01       	movw	r14, r24
    19ac:	82 e3       	ldi	r24, 0x32	; 50
    19ae:	90 e0       	ldi	r25, 0x00	; 0
    19b0:	f8 01       	movw	r30, r16
    19b2:	91 83       	std	Z+1, r25	; 0x01
    19b4:	80 83       	st	Z, r24
    19b6:	c5 01       	movw	r24, r10
    19b8:	b4 01       	movw	r22, r8
    19ba:	0e 94 24 22 	call	0x4448	; 0x4448 <__fixunssfsi>
    19be:	f8 01       	movw	r30, r16
    19c0:	73 83       	std	Z+3, r23	; 0x03
    19c2:	62 83       	std	Z+2, r22	; 0x02
    19c4:	82 ec       	ldi	r24, 0xC2	; 194
    19c6:	91 e0       	ldi	r25, 0x01	; 1
    19c8:	95 83       	std	Z+5, r25	; 0x05
    19ca:	84 83       	std	Z+4, r24	; 0x04
    19cc:	16 82       	std	Z+6, r1	; 0x06
    19ce:	10 86       	std	Z+8, r1	; 0x08
    19d0:	17 82       	std	Z+7, r1	; 0x07
    19d2:	81 e0       	ldi	r24, 0x01	; 1
    19d4:	62 e0       	ldi	r22, 0x02	; 2
    19d6:	46 2d       	mov	r20, r6
    19d8:	22 e3       	ldi	r18, 0x32	; 50
    19da:	30 e0       	ldi	r19, 0x00	; 0
    19dc:	86 01       	movw	r16, r12
    19de:	a2 ec       	ldi	r26, 0xC2	; 194
    19e0:	ea 2e       	mov	r14, r26
    19e2:	a1 e0       	ldi	r26, 0x01	; 1
    19e4:	fa 2e       	mov	r15, r26
    19e6:	cc 24       	eor	r12, r12
    19e8:	aa 24       	eor	r10, r10
    19ea:	bb 24       	eor	r11, r11
    19ec:	87 2c       	mov	r8, r7
    19ee:	0e 94 78 11 	call	0x22f0	; 0x22f0 <STEPPER_move>
    19f2:	8d b7       	in	r24, 0x3d	; 61
    19f4:	9e b7       	in	r25, 0x3e	; 62
    19f6:	09 96       	adiw	r24, 0x09	; 9
    19f8:	0f b6       	in	r0, 0x3f	; 63
    19fa:	f8 94       	cli
    19fc:	9e bf       	out	0x3e, r25	; 62
    19fe:	0f be       	out	0x3f, r0	; 63
    1a00:	8d bf       	out	0x3d, r24	; 61
		direction_L, 50, stepper_speed_L, 450, STEPPER_BRK_OFF, // Left
		direction_R, 50, stepper_speed_R, 450, STEPPER_BRK_OFF ); // Right

		return isLight;
}
    1a02:	83 2d       	mov	r24, r3
    1a04:	1f 91       	pop	r17
    1a06:	0f 91       	pop	r16
    1a08:	ff 90       	pop	r15
    1a0a:	ef 90       	pop	r14
    1a0c:	df 90       	pop	r13
    1a0e:	cf 90       	pop	r12
    1a10:	bf 90       	pop	r11
    1a12:	af 90       	pop	r10
    1a14:	9f 90       	pop	r9
    1a16:	8f 90       	pop	r8
    1a18:	7f 90       	pop	r7
    1a1a:	6f 90       	pop	r6
    1a1c:	5f 90       	pop	r5
    1a1e:	4f 90       	pop	r4
    1a20:	3f 90       	pop	r3
    1a22:	08 95       	ret

00001a24 <moveBehavior>:
* Input Variables:	int
* Output Return:	char
* Overview:		    This is the currrent behavior of the robot
********************************************************************/
char moveBehavior( int behavior)
{
    1a24:	cf 93       	push	r28
    1a26:	df 93       	push	r29
    1a28:	ec 01       	movw	r28, r24
	if(moveAway()){
    1a2a:	0e 94 c0 08 	call	0x1180	; 0x1180 <moveAway>
    1a2e:	88 23       	and	r24, r24
    1a30:	71 f0       	breq	.+28     	; 0x1a4e <moveBehavior+0x2a>
		Ierror = 0;
    1a32:	80 e0       	ldi	r24, 0x00	; 0
    1a34:	90 e0       	ldi	r25, 0x00	; 0
    1a36:	a0 e0       	ldi	r26, 0x00	; 0
    1a38:	b0 e0       	ldi	r27, 0x00	; 0
    1a3a:	80 93 aa 01 	sts	0x01AA, r24
    1a3e:	90 93 ab 01 	sts	0x01AB, r25
    1a42:	a0 93 ac 01 	sts	0x01AC, r26
    1a46:	b0 93 ad 01 	sts	0x01AD, r27
    1a4a:	81 e0       	ldi	r24, 0x01	; 1
    1a4c:	12 c0       	rjmp	.+36     	; 0x1a72 <moveBehavior+0x4e>
		return 1; 
	}
	if(moveLight(behavior)){
    1a4e:	ce 01       	movw	r24, r28
    1a50:	0e 94 96 0b 	call	0x172c	; 0x172c <moveLight>
    1a54:	88 23       	and	r24, r24
    1a56:	69 f0       	breq	.+26     	; 0x1a72 <moveBehavior+0x4e>
		Ierror = 0;
    1a58:	80 e0       	ldi	r24, 0x00	; 0
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	a0 e0       	ldi	r26, 0x00	; 0
    1a5e:	b0 e0       	ldi	r27, 0x00	; 0
    1a60:	80 93 aa 01 	sts	0x01AA, r24
    1a64:	90 93 ab 01 	sts	0x01AB, r25
    1a68:	a0 93 ac 01 	sts	0x01AC, r26
    1a6c:	b0 93 ad 01 	sts	0x01AD, r27
    1a70:	82 e0       	ldi	r24, 0x02	; 2
	// if(moveWander()){
		// Ierror = 0;
		// return 4;
	// }
	return 0;	
}
    1a72:	df 91       	pop	r29
    1a74:	cf 91       	pop	r28
    1a76:	08 95       	ret

00001a78 <moveWander>:
* Output Return:	none
* Overview:			This function checks for walls and moves the 
*					robot randomly if walls are not detected
********************************************************************/
char moveWander ( void )
{	
    1a78:	8f 92       	push	r8
    1a7a:	af 92       	push	r10
    1a7c:	bf 92       	push	r11
    1a7e:	cf 92       	push	r12
    1a80:	df 92       	push	r13
    1a82:	ef 92       	push	r14
    1a84:	ff 92       	push	r15
    1a86:	0f 93       	push	r16
    1a88:	1f 93       	push	r17
    1a8a:	cf 93       	push	r28
    1a8c:	df 93       	push	r29
	// notify that we have
	char isWander = 1;
	
	// if we are wondering
	// first check the current progress of our wondering
	STEPPER_STEPS curr_steps = STEPPER_get_nSteps();
    1a8e:	0e 94 b0 10 	call	0x2160	; 0x2160 <STEPPER_get_nSteps>
	
	
	// IF my motion is complete do another random motion
	if ((curr_steps.left == 0)&(curr_steps.right == 0))
    1a92:	67 2b       	or	r22, r23
    1a94:	09 f0       	breq	.+2      	; 0x1a98 <moveWander+0x20>
    1a96:	76 c0       	rjmp	.+236    	; 0x1b84 <moveWander+0x10c>
    1a98:	89 2b       	or	r24, r25
    1a9a:	09 f0       	breq	.+2      	; 0x1a9e <moveWander+0x26>
    1a9c:	73 c0       	rjmp	.+230    	; 0x1b84 <moveWander+0x10c>
	{
		// create random values for wheel position and wheel speed
		int moveRand = rand()%400+400;
    1a9e:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <rand>
    1aa2:	8c 01       	movw	r16, r24
		float turnRandR = rand()%200+200;
    1aa4:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <rand>
    1aa8:	ec 01       	movw	r28, r24
		float turnRandL = rand()%200+200;
    1aaa:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <rand>
    1aae:	7c 01       	movw	r14, r24
		
		// Weight the chance that we will go forward slightly more
		// so that the robot may possibly traverse farther
		BOOL direction = ~((rand()%10)>7);
    1ab0:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <rand>
    1ab4:	20 e0       	ldi	r18, 0x00	; 0
    1ab6:	6a e0       	ldi	r22, 0x0A	; 10
    1ab8:	70 e0       	ldi	r23, 0x00	; 0
    1aba:	0e 94 8f 28 	call	0x511e	; 0x511e <__divmodhi4>
    1abe:	08 97       	sbiw	r24, 0x08	; 8
    1ac0:	0c f0       	brlt	.+2      	; 0x1ac4 <moveWander+0x4c>
    1ac2:	21 e0       	ldi	r18, 0x01	; 1
    1ac4:	82 2e       	mov	r8, r18
    1ac6:	80 94       	com	r8
				
		// Move.
		STEPPER_move_stnb( STEPPER_BOTH, 
    1ac8:	c8 01       	movw	r24, r16
    1aca:	60 e9       	ldi	r22, 0x90	; 144
    1acc:	71 e0       	ldi	r23, 0x01	; 1
    1ace:	0e 94 8f 28 	call	0x511e	; 0x511e <__divmodhi4>
    1ad2:	10 e9       	ldi	r17, 0x90	; 144
    1ad4:	a1 2e       	mov	r10, r17
    1ad6:	11 e0       	ldi	r17, 0x01	; 1
    1ad8:	b1 2e       	mov	r11, r17
    1ada:	a8 0e       	add	r10, r24
    1adc:	b9 1e       	adc	r11, r25
    1ade:	8d b7       	in	r24, 0x3d	; 61
    1ae0:	9e b7       	in	r25, 0x3e	; 62
    1ae2:	09 97       	sbiw	r24, 0x09	; 9
    1ae4:	0f b6       	in	r0, 0x3f	; 63
    1ae6:	f8 94       	cli
    1ae8:	9e bf       	out	0x3e, r25	; 62
    1aea:	0f be       	out	0x3f, r0	; 63
    1aec:	8d bf       	out	0x3d, r24	; 61
    1aee:	0d b7       	in	r16, 0x3d	; 61
    1af0:	1e b7       	in	r17, 0x3e	; 62
    1af2:	0f 5f       	subi	r16, 0xFF	; 255
    1af4:	1f 4f       	sbci	r17, 0xFF	; 255
    1af6:	c7 01       	movw	r24, r14
    1af8:	68 ec       	ldi	r22, 0xC8	; 200
    1afa:	70 e0       	ldi	r23, 0x00	; 0
    1afc:	0e 94 8f 28 	call	0x511e	; 0x511e <__divmodhi4>
    1b00:	88 53       	subi	r24, 0x38	; 56
    1b02:	9f 4f       	sbci	r25, 0xFF	; 255
    1b04:	aa 27       	eor	r26, r26
    1b06:	97 fd       	sbrc	r25, 7
    1b08:	a0 95       	com	r26
    1b0a:	ba 2f       	mov	r27, r26
    1b0c:	bc 01       	movw	r22, r24
    1b0e:	cd 01       	movw	r24, r26
    1b10:	0e 94 52 22 	call	0x44a4	; 0x44a4 <__floatsisf>
    1b14:	0e 94 24 22 	call	0x4448	; 0x4448 <__fixunssfsi>
    1b18:	6b 01       	movw	r12, r22
    1b1a:	7c 01       	movw	r14, r24
    1b1c:	f8 01       	movw	r30, r16
    1b1e:	b1 82       	std	Z+1, r11	; 0x01
    1b20:	a0 82       	st	Z, r10
    1b22:	ce 01       	movw	r24, r28
    1b24:	68 ec       	ldi	r22, 0xC8	; 200
    1b26:	70 e0       	ldi	r23, 0x00	; 0
    1b28:	0e 94 8f 28 	call	0x511e	; 0x511e <__divmodhi4>
    1b2c:	88 53       	subi	r24, 0x38	; 56
    1b2e:	9f 4f       	sbci	r25, 0xFF	; 255
    1b30:	aa 27       	eor	r26, r26
    1b32:	97 fd       	sbrc	r25, 7
    1b34:	a0 95       	com	r26
    1b36:	ba 2f       	mov	r27, r26
    1b38:	bc 01       	movw	r22, r24
    1b3a:	cd 01       	movw	r24, r26
    1b3c:	0e 94 52 22 	call	0x44a4	; 0x44a4 <__floatsisf>
    1b40:	0e 94 24 22 	call	0x4448	; 0x4448 <__fixunssfsi>
    1b44:	f8 01       	movw	r30, r16
    1b46:	73 83       	std	Z+3, r23	; 0x03
    1b48:	62 83       	std	Z+2, r22	; 0x02
    1b4a:	82 ec       	ldi	r24, 0xC2	; 194
    1b4c:	91 e0       	ldi	r25, 0x01	; 1
    1b4e:	95 83       	std	Z+5, r25	; 0x05
    1b50:	84 83       	std	Z+4, r24	; 0x04
    1b52:	16 82       	std	Z+6, r1	; 0x06
    1b54:	10 86       	std	Z+8, r1	; 0x08
    1b56:	17 82       	std	Z+7, r1	; 0x07
    1b58:	81 e0       	ldi	r24, 0x01	; 1
    1b5a:	62 e0       	ldi	r22, 0x02	; 2
    1b5c:	48 2d       	mov	r20, r8
    1b5e:	95 01       	movw	r18, r10
    1b60:	86 01       	movw	r16, r12
    1b62:	b2 ec       	ldi	r27, 0xC2	; 194
    1b64:	eb 2e       	mov	r14, r27
    1b66:	b1 e0       	ldi	r27, 0x01	; 1
    1b68:	fb 2e       	mov	r15, r27
    1b6a:	cc 24       	eor	r12, r12
    1b6c:	aa 24       	eor	r10, r10
    1b6e:	bb 24       	eor	r11, r11
    1b70:	0e 94 78 11 	call	0x22f0	; 0x22f0 <STEPPER_move>
    1b74:	8d b7       	in	r24, 0x3d	; 61
    1b76:	9e b7       	in	r25, 0x3e	; 62
    1b78:	09 96       	adiw	r24, 0x09	; 9
    1b7a:	0f b6       	in	r0, 0x3f	; 63
    1b7c:	f8 94       	cli
    1b7e:	9e bf       	out	0x3e, r25	; 62
    1b80:	0f be       	out	0x3f, r0	; 63
    1b82:	8d bf       	out	0x3d, r24	; 61
		// debug LCP print statement
		// LCD_clear();
		// LCD_printf("moveWander\nmoveRand: %3d\nturnRandR: %3d\nturnRandL: %3d\n",moveRand,turnRandR,turnRandL);
		}
	return isWander;
}
    1b84:	81 e0       	ldi	r24, 0x01	; 1
    1b86:	df 91       	pop	r29
    1b88:	cf 91       	pop	r28
    1b8a:	1f 91       	pop	r17
    1b8c:	0f 91       	pop	r16
    1b8e:	ff 90       	pop	r15
    1b90:	ef 90       	pop	r14
    1b92:	df 90       	pop	r13
    1b94:	cf 90       	pop	r12
    1b96:	bf 90       	pop	r11
    1b98:	af 90       	pop	r10
    1b9a:	8f 90       	pop	r8
    1b9c:	08 95       	ret

00001b9e <CBOT_main>:
/*******************************************************************
* Function:        void CBOT_main( void )
********************************************************************/

void CBOT_main( void )
{
    1b9e:	cf 93       	push	r28
    1ba0:	df 93       	push	r29
	// Initialize variables
	int btnValue=0;//value of button pushed

	ATopstat = ATTINY_open();//open the tiny microcontroller
    1ba2:	0e 94 e3 14 	call	0x29c6	; 0x29c6 <ATTINY_open>
    1ba6:	90 93 46 02 	sts	0x0246, r25
    1baa:	80 93 45 02 	sts	0x0245, r24
	LEopstat = LED_open(); //open the LED module
    1bae:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <LED_open>
    1bb2:	90 93 44 02 	sts	0x0244, r25
    1bb6:	80 93 43 02 	sts	0x0243, r24
	LCopstat = LCD_open(); //open the LCD module
    1bba:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <LCD_open>
    1bbe:	90 93 42 02 	sts	0x0242, r25
    1bc2:	80 93 41 02 	sts	0x0241, r24
	STEPPER_open(); // Open STEPPER module for use
    1bc6:	0e 94 1f 12 	call	0x243e	; 0x243e <STEPPER_open>
	SPKR_open(SPKR_BEEP_MODE);//open the speaker in beep mode
    1bca:	81 e0       	ldi	r24, 0x01	; 1
    1bcc:	0e 94 a3 10 	call	0x2146	; 0x2146 <SPKR_open>
	
	LED_open();
    1bd0:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <LED_open>
	I2C_open();
    1bd4:	0e 94 3d 16 	call	0x2c7a	; 0x2c7a <I2C_open>
	ADC_open();//open the ADC module
    1bd8:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <ADC_open>
 	ADC_set_VREF( ADC_VREF_AVCC );// Set the Voltage Reference first so VREF=5V.
    1bdc:	81 e0       	ldi	r24, 0x01	; 1
    1bde:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <ADC_set_VREF>

	// Initialize IR Values and Reset Prefilter
	checkIR();
    1be2:	0e 94 95 08 	call	0x112a	; 0x112a <checkIR>
	prefilter(1);
    1be6:	81 e0       	ldi	r24, 0x01	; 1
    1be8:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <prefilter>
		// update the sensor values
		checkLightSensor();
		checkIR();
		checkContactIR();
		
		LCD_printf("Right Contact: %i\nLeft Contact: %i\n\n\n",rightContact,leftContact);
    1bec:	c4 e2       	ldi	r28, 0x24	; 36
    1bee:	d1 e0       	ldi	r29, 0x01	; 1

	// Infinite loop
	while (1)
    {
		// update the sensor values
		checkLightSensor();
    1bf0:	0e 94 80 08 	call	0x1100	; 0x1100 <checkLightSensor>
		checkIR();
    1bf4:	0e 94 95 08 	call	0x112a	; 0x112a <checkIR>
		checkContactIR();
    1bf8:	0e 94 72 08 	call	0x10e4	; 0x10e4 <checkContactIR>
		
		LCD_printf("Right Contact: %i\nLeft Contact: %i\n\n\n",rightContact,leftContact);
    1bfc:	00 d0       	rcall	.+0      	; 0x1bfe <CBOT_main+0x60>
    1bfe:	00 d0       	rcall	.+0      	; 0x1c00 <CBOT_main+0x62>
    1c00:	00 d0       	rcall	.+0      	; 0x1c02 <CBOT_main+0x64>
    1c02:	ed b7       	in	r30, 0x3d	; 61
    1c04:	fe b7       	in	r31, 0x3e	; 62
    1c06:	31 96       	adiw	r30, 0x01	; 1
    1c08:	ad b7       	in	r26, 0x3d	; 61
    1c0a:	be b7       	in	r27, 0x3e	; 62
    1c0c:	12 96       	adiw	r26, 0x02	; 2
    1c0e:	dc 93       	st	X, r29
    1c10:	ce 93       	st	-X, r28
    1c12:	11 97       	sbiw	r26, 0x01	; 1
    1c14:	80 91 af 03 	lds	r24, 0x03AF
    1c18:	82 83       	std	Z+2, r24	; 0x02
    1c1a:	13 82       	std	Z+3, r1	; 0x03
    1c1c:	80 91 b0 03 	lds	r24, 0x03B0
    1c20:	84 83       	std	Z+4, r24	; 0x04
    1c22:	15 82       	std	Z+5, r1	; 0x05
    1c24:	0e 94 87 2b 	call	0x570e	; 0x570e <printf>
		TMRSRVC_delay(1000);//wait 1 seconds
    1c28:	8d b7       	in	r24, 0x3d	; 61
    1c2a:	9e b7       	in	r25, 0x3e	; 62
    1c2c:	06 96       	adiw	r24, 0x06	; 6
    1c2e:	0f b6       	in	r0, 0x3f	; 63
    1c30:	f8 94       	cli
    1c32:	9e bf       	out	0x3e, r25	; 62
    1c34:	0f be       	out	0x3f, r0	; 63
    1c36:	8d bf       	out	0x3d, r24	; 61
    1c38:	88 ee       	ldi	r24, 0xE8	; 232
    1c3a:	93 e0       	ldi	r25, 0x03	; 3
    1c3c:	0e 94 32 15 	call	0x2a64	; 0x2a64 <TMRSRVC_delay>
    1c40:	d7 cf       	rjmp	.-82     	; 0x1bf0 <CBOT_main+0x52>

00001c42 <ADC_open>:
    1c42:	8f e0       	ldi	r24, 0x0F	; 15
    1c44:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    1c48:	88 23       	and	r24, r24
    1c4a:	31 f4       	brne	.+12     	; 0x1c58 <ADC_open+0x16>
    1c4c:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__ADC_init>
    1c50:	8f e0       	ldi	r24, 0x0F	; 15
    1c52:	61 e0       	ldi	r22, 0x01	; 1
    1c54:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    1c58:	8f e0       	ldi	r24, 0x0F	; 15
    1c5a:	91 e0       	ldi	r25, 0x01	; 1
    1c5c:	08 95       	ret

00001c5e <ADC_sample>:
    1c5e:	8f e0       	ldi	r24, 0x0F	; 15
    1c60:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    1c64:	81 30       	cpi	r24, 0x01	; 1
    1c66:	19 f0       	breq	.+6      	; 0x1c6e <ADC_sample+0x10>
    1c68:	20 e0       	ldi	r18, 0x00	; 0
    1c6a:	30 e0       	ldi	r19, 0x00	; 0
    1c6c:	13 c0       	rjmp	.+38     	; 0x1c94 <ADC_sample+0x36>
    1c6e:	80 91 7a 00 	lds	r24, 0x007A
    1c72:	80 64       	ori	r24, 0x40	; 64
    1c74:	80 93 7a 00 	sts	0x007A, r24
    1c78:	80 91 7a 00 	lds	r24, 0x007A
    1c7c:	86 fd       	sbrc	r24, 6
    1c7e:	fc cf       	rjmp	.-8      	; 0x1c78 <ADC_sample+0x1a>
    1c80:	30 91 78 00 	lds	r19, 0x0078
    1c84:	20 91 79 00 	lds	r18, 0x0079
    1c88:	92 2f       	mov	r25, r18
    1c8a:	80 e0       	ldi	r24, 0x00	; 0
    1c8c:	23 2f       	mov	r18, r19
    1c8e:	30 e0       	ldi	r19, 0x00	; 0
    1c90:	28 2b       	or	r18, r24
    1c92:	39 2b       	or	r19, r25
    1c94:	c9 01       	movw	r24, r18
    1c96:	08 95       	ret

00001c98 <ADC_set_channel>:
    1c98:	58 2f       	mov	r21, r24
    1c9a:	80 91 4a 01 	lds	r24, 0x014A
    1c9e:	88 30       	cpi	r24, 0x08	; 8
    1ca0:	d8 f4       	brcc	.+54     	; 0x1cd8 <ADC_set_channel+0x40>
    1ca2:	40 91 7e 00 	lds	r20, 0x007E
    1ca6:	21 e0       	ldi	r18, 0x01	; 1
    1ca8:	30 e0       	ldi	r19, 0x00	; 0
    1caa:	b9 01       	movw	r22, r18
    1cac:	02 c0       	rjmp	.+4      	; 0x1cb2 <ADC_set_channel+0x1a>
    1cae:	66 0f       	add	r22, r22
    1cb0:	77 1f       	adc	r23, r23
    1cb2:	8a 95       	dec	r24
    1cb4:	e2 f7       	brpl	.-8      	; 0x1cae <ADC_set_channel+0x16>
    1cb6:	cb 01       	movw	r24, r22
    1cb8:	80 95       	com	r24
    1cba:	84 23       	and	r24, r20
    1cbc:	80 93 7e 00 	sts	0x007E, r24
    1cc0:	80 91 7e 00 	lds	r24, 0x007E
    1cc4:	05 2e       	mov	r0, r21
    1cc6:	02 c0       	rjmp	.+4      	; 0x1ccc <ADC_set_channel+0x34>
    1cc8:	22 0f       	add	r18, r18
    1cca:	33 1f       	adc	r19, r19
    1ccc:	0a 94       	dec	r0
    1cce:	e2 f7       	brpl	.-8      	; 0x1cc8 <ADC_set_channel+0x30>
    1cd0:	82 2b       	or	r24, r18
    1cd2:	80 93 7e 00 	sts	0x007E, r24
    1cd6:	0d c0       	rjmp	.+26     	; 0x1cf2 <ADC_set_channel+0x5a>
    1cd8:	20 91 7e 00 	lds	r18, 0x007E
    1cdc:	81 e0       	ldi	r24, 0x01	; 1
    1cde:	90 e0       	ldi	r25, 0x00	; 0
    1ce0:	05 2e       	mov	r0, r21
    1ce2:	02 c0       	rjmp	.+4      	; 0x1ce8 <ADC_set_channel+0x50>
    1ce4:	88 0f       	add	r24, r24
    1ce6:	99 1f       	adc	r25, r25
    1ce8:	0a 94       	dec	r0
    1cea:	e2 f7       	brpl	.-8      	; 0x1ce4 <ADC_set_channel+0x4c>
    1cec:	28 2b       	or	r18, r24
    1cee:	20 93 7e 00 	sts	0x007E, r18
    1cf2:	50 93 4a 01 	sts	0x014A, r21
    1cf6:	80 91 7c 00 	lds	r24, 0x007C
    1cfa:	5f 71       	andi	r21, 0x1F	; 31
    1cfc:	80 7e       	andi	r24, 0xE0	; 224
    1cfe:	85 2b       	or	r24, r21
    1d00:	80 93 7c 00 	sts	0x007C, r24
    1d04:	08 95       	ret

00001d06 <ADC_set_VREF>:
    1d06:	ec e7       	ldi	r30, 0x7C	; 124
    1d08:	f0 e0       	ldi	r31, 0x00	; 0
    1d0a:	90 81       	ld	r25, Z
    1d0c:	82 95       	swap	r24
    1d0e:	88 0f       	add	r24, r24
    1d10:	88 0f       	add	r24, r24
    1d12:	80 7c       	andi	r24, 0xC0	; 192
    1d14:	9f 73       	andi	r25, 0x3F	; 63
    1d16:	98 2b       	or	r25, r24
    1d18:	90 83       	st	Z, r25
    1d1a:	08 95       	ret

00001d1c <main>:
    1d1c:	0e 94 7d 16 	call	0x2cfa	; 0x2cfa <CBOT_ISR_init>
    1d20:	0e 94 6f 16 	call	0x2cde	; 0x2cde <CBOT_init>
    1d24:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <CBOT_main>
    1d28:	80 e0       	ldi	r24, 0x00	; 0
    1d2a:	90 e0       	ldi	r25, 0x00	; 0
    1d2c:	08 95       	ret

00001d2e <LCD_clear>:
    1d2e:	0f 93       	push	r16
    1d30:	1f 93       	push	r17
    1d32:	80 e4       	ldi	r24, 0x40	; 64
    1d34:	60 e0       	ldi	r22, 0x00	; 0
    1d36:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1d3a:	00 e0       	ldi	r16, 0x00	; 0
    1d3c:	80 2f       	mov	r24, r16
    1d3e:	60 e0       	ldi	r22, 0x00	; 0
    1d40:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <LCD_set_PGC_addr>
    1d44:	10 e0       	ldi	r17, 0x00	; 0
    1d46:	80 e0       	ldi	r24, 0x00	; 0
    1d48:	61 e0       	ldi	r22, 0x01	; 1
    1d4a:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1d4e:	1f 5f       	subi	r17, 0xFF	; 255
    1d50:	10 38       	cpi	r17, 0x80	; 128
    1d52:	c9 f7       	brne	.-14     	; 0x1d46 <LCD_clear+0x18>
    1d54:	0f 5f       	subi	r16, 0xFF	; 255
    1d56:	04 30       	cpi	r16, 0x04	; 4
    1d58:	89 f7       	brne	.-30     	; 0x1d3c <LCD_clear+0xe>
    1d5a:	83 e0       	ldi	r24, 0x03	; 3
    1d5c:	60 e0       	ldi	r22, 0x00	; 0
    1d5e:	0e 94 56 0f 	call	0x1eac	; 0x1eac <LCD_set_next_PGC>
    1d62:	1f 91       	pop	r17
    1d64:	0f 91       	pop	r16
    1d66:	08 95       	ret

00001d68 <LCD_open>:
    1d68:	0f 93       	push	r16
    1d6a:	1f 93       	push	r17
    1d6c:	82 e0       	ldi	r24, 0x02	; 2
    1d6e:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    1d72:	88 23       	and	r24, r24
    1d74:	11 f4       	brne	.+4      	; 0x1d7a <LCD_open+0x12>
    1d76:	82 e0       	ldi	r24, 0x02	; 2
    1d78:	06 c0       	rjmp	.+12     	; 0x1d86 <LCD_open+0x1e>
    1d7a:	81 e0       	ldi	r24, 0x01	; 1
    1d7c:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    1d80:	88 23       	and	r24, r24
    1d82:	19 f4       	brne	.+6      	; 0x1d8a <LCD_open+0x22>
    1d84:	81 e0       	ldi	r24, 0x01	; 1
    1d86:	90 e0       	ldi	r25, 0x00	; 0
    1d88:	6d c0       	rjmp	.+218    	; 0x1e64 <LCD_open+0xfc>
    1d8a:	0e 94 e5 18 	call	0x31ca	; 0x31ca <__LCD_init>
    1d8e:	85 e0       	ldi	r24, 0x05	; 5
    1d90:	61 e0       	ldi	r22, 0x01	; 1
    1d92:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    1d96:	8e ea       	ldi	r24, 0xAE	; 174
    1d98:	60 e0       	ldi	r22, 0x00	; 0
    1d9a:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1d9e:	82 ea       	ldi	r24, 0xA2	; 162
    1da0:	60 e0       	ldi	r22, 0x00	; 0
    1da2:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1da6:	80 ea       	ldi	r24, 0xA0	; 160
    1da8:	60 e0       	ldi	r22, 0x00	; 0
    1daa:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1dae:	00 e5       	ldi	r16, 0x50	; 80
    1db0:	13 ec       	ldi	r17, 0xC3	; 195
    1db2:	c8 01       	movw	r24, r16
    1db4:	01 97       	sbiw	r24, 0x01	; 1
    1db6:	f1 f7       	brne	.-4      	; 0x1db4 <LCD_open+0x4c>
    1db8:	80 ec       	ldi	r24, 0xC0	; 192
    1dba:	60 e0       	ldi	r22, 0x00	; 0
    1dbc:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1dc0:	8f e2       	ldi	r24, 0x2F	; 47
    1dc2:	60 e0       	ldi	r22, 0x00	; 0
    1dc4:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1dc8:	81 e8       	ldi	r24, 0x81	; 129
    1dca:	60 e0       	ldi	r22, 0x00	; 0
    1dcc:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1dd0:	86 e1       	ldi	r24, 0x16	; 22
    1dd2:	60 e0       	ldi	r22, 0x00	; 0
    1dd4:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1dd8:	82 e2       	ldi	r24, 0x22	; 34
    1dda:	60 e0       	ldi	r22, 0x00	; 0
    1ddc:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1de0:	c8 01       	movw	r24, r16
    1de2:	01 97       	sbiw	r24, 0x01	; 1
    1de4:	f1 f7       	brne	.-4      	; 0x1de2 <LCD_open+0x7a>
    1de6:	8f ea       	ldi	r24, 0xAF	; 175
    1de8:	60 e0       	ldi	r22, 0x00	; 0
    1dea:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1dee:	86 ea       	ldi	r24, 0xA6	; 166
    1df0:	60 e0       	ldi	r22, 0x00	; 0
    1df2:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1df6:	85 ea       	ldi	r24, 0xA5	; 165
    1df8:	60 e0       	ldi	r22, 0x00	; 0
    1dfa:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1dfe:	80 e0       	ldi	r24, 0x00	; 0
    1e00:	90 e0       	ldi	r25, 0x00	; 0
    1e02:	28 e8       	ldi	r18, 0x88	; 136
    1e04:	33 e1       	ldi	r19, 0x13	; 19
    1e06:	f9 01       	movw	r30, r18
    1e08:	31 97       	sbiw	r30, 0x01	; 1
    1e0a:	f1 f7       	brne	.-4      	; 0x1e08 <LCD_open+0xa0>
    1e0c:	01 96       	adiw	r24, 0x01	; 1
    1e0e:	43 e0       	ldi	r20, 0x03	; 3
    1e10:	88 3e       	cpi	r24, 0xE8	; 232
    1e12:	94 07       	cpc	r25, r20
    1e14:	c1 f7       	brne	.-16     	; 0x1e06 <LCD_open+0x9e>
    1e16:	83 eb       	ldi	r24, 0xB3	; 179
    1e18:	60 e0       	ldi	r22, 0x00	; 0
    1e1a:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1e1e:	80 e4       	ldi	r24, 0x40	; 64
    1e20:	60 e0       	ldi	r22, 0x00	; 0
    1e22:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1e26:	83 e0       	ldi	r24, 0x03	; 3
    1e28:	60 e0       	ldi	r22, 0x00	; 0
    1e2a:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <LCD_set_PGC_addr>
    1e2e:	83 e0       	ldi	r24, 0x03	; 3
    1e30:	60 e0       	ldi	r22, 0x00	; 0
    1e32:	0e 94 56 0f 	call	0x1eac	; 0x1eac <LCD_set_next_PGC>
    1e36:	10 92 77 04 	sts	0x0477, r1
    1e3a:	10 92 79 04 	sts	0x0479, r1
    1e3e:	10 92 78 04 	sts	0x0478, r1
    1e42:	89 e5       	ldi	r24, 0x59	; 89
    1e44:	91 e0       	ldi	r25, 0x01	; 1
    1e46:	90 93 a8 04 	sts	0x04A8, r25
    1e4a:	80 93 a7 04 	sts	0x04A7, r24
    1e4e:	88 e1       	ldi	r24, 0x18	; 24
    1e50:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <LCD_set_backlight>
    1e54:	0e 94 97 0e 	call	0x1d2e	; 0x1d2e <LCD_clear>
    1e58:	84 ea       	ldi	r24, 0xA4	; 164
    1e5a:	60 e0       	ldi	r22, 0x00	; 0
    1e5c:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1e60:	85 e0       	ldi	r24, 0x05	; 5
    1e62:	91 e0       	ldi	r25, 0x01	; 1
    1e64:	1f 91       	pop	r17
    1e66:	0f 91       	pop	r16
    1e68:	08 95       	ret

00001e6a <LCD_set_backlight>:
    1e6a:	1f 93       	push	r17
    1e6c:	18 2f       	mov	r17, r24
    1e6e:	85 e0       	ldi	r24, 0x05	; 5
    1e70:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    1e74:	81 30       	cpi	r24, 0x01	; 1
    1e76:	c1 f4       	brne	.+48     	; 0x1ea8 <LCD_set_backlight+0x3e>
    1e78:	87 e0       	ldi	r24, 0x07	; 7
    1e7a:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <SPI_set_slave_addr>
    1e7e:	82 e0       	ldi	r24, 0x02	; 2
    1e80:	6a e0       	ldi	r22, 0x0A	; 10
    1e82:	0e 94 03 10 	call	0x2006	; 0x2006 <SPI_transmit>
    1e86:	82 e0       	ldi	r24, 0x02	; 2
    1e88:	61 eb       	ldi	r22, 0xB1	; 177
    1e8a:	0e 94 03 10 	call	0x2006	; 0x2006 <SPI_transmit>
    1e8e:	61 2f       	mov	r22, r17
    1e90:	11 32       	cpi	r17, 0x21	; 33
    1e92:	08 f0       	brcs	.+2      	; 0x1e96 <LCD_set_backlight+0x2c>
    1e94:	60 e2       	ldi	r22, 0x20	; 32
    1e96:	82 e0       	ldi	r24, 0x02	; 2
    1e98:	0e 94 03 10 	call	0x2006	; 0x2006 <SPI_transmit>
    1e9c:	89 ee       	ldi	r24, 0xE9	; 233
    1e9e:	8a 95       	dec	r24
    1ea0:	f1 f7       	brne	.-4      	; 0x1e9e <LCD_set_backlight+0x34>
    1ea2:	87 e0       	ldi	r24, 0x07	; 7
    1ea4:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <SPI_set_slave_addr>
    1ea8:	1f 91       	pop	r17
    1eaa:	08 95       	ret

00001eac <LCD_set_next_PGC>:
    1eac:	83 70       	andi	r24, 0x03	; 3
    1eae:	6f 77       	andi	r22, 0x7F	; 127
    1eb0:	60 93 75 04 	sts	0x0475, r22
    1eb4:	80 93 76 04 	sts	0x0476, r24
    1eb8:	08 95       	ret

00001eba <LCD_set_PGC_addr>:
    1eba:	0f 93       	push	r16
    1ebc:	1f 93       	push	r17
    1ebe:	06 2f       	mov	r16, r22
    1ec0:	16 2f       	mov	r17, r22
    1ec2:	1f 77       	andi	r17, 0x7F	; 127
    1ec4:	83 70       	andi	r24, 0x03	; 3
    1ec6:	80 6b       	ori	r24, 0xB0	; 176
    1ec8:	60 e0       	ldi	r22, 0x00	; 0
    1eca:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1ece:	12 95       	swap	r17
    1ed0:	1f 70       	andi	r17, 0x0F	; 15
    1ed2:	81 2f       	mov	r24, r17
    1ed4:	80 61       	ori	r24, 0x10	; 16
    1ed6:	60 e0       	ldi	r22, 0x00	; 0
    1ed8:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1edc:	80 2f       	mov	r24, r16
    1ede:	8f 70       	andi	r24, 0x0F	; 15
    1ee0:	60 e0       	ldi	r22, 0x00	; 0
    1ee2:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    1ee6:	1f 91       	pop	r17
    1ee8:	0f 91       	pop	r16
    1eea:	08 95       	ret

00001eec <LCD_write>:
    1eec:	0f 93       	push	r16
    1eee:	1f 93       	push	r17
    1ef0:	08 2f       	mov	r16, r24
    1ef2:	16 2f       	mov	r17, r22
    1ef4:	85 e0       	ldi	r24, 0x05	; 5
    1ef6:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    1efa:	81 30       	cpi	r24, 0x01	; 1
    1efc:	79 f4       	brne	.+30     	; 0x1f1c <LCD_write+0x30>
    1efe:	11 23       	and	r17, r17
    1f00:	19 f0       	breq	.+6      	; 0x1f08 <LCD_write+0x1c>
    1f02:	11 30       	cpi	r17, 0x01	; 1
    1f04:	21 f4       	brne	.+8      	; 0x1f0e <LCD_write+0x22>
    1f06:	02 c0       	rjmp	.+4      	; 0x1f0c <LCD_write+0x20>
    1f08:	2b 98       	cbi	0x05, 3	; 5
    1f0a:	01 c0       	rjmp	.+2      	; 0x1f0e <LCD_write+0x22>
    1f0c:	2b 9a       	sbi	0x05, 3	; 5
    1f0e:	86 e0       	ldi	r24, 0x06	; 6
    1f10:	8a 95       	dec	r24
    1f12:	f1 f7       	brne	.-4      	; 0x1f10 <LCD_write+0x24>
    1f14:	80 e0       	ldi	r24, 0x00	; 0
    1f16:	60 2f       	mov	r22, r16
    1f18:	0e 94 03 10 	call	0x2006	; 0x2006 <SPI_transmit>
    1f1c:	1f 91       	pop	r17
    1f1e:	0f 91       	pop	r16
    1f20:	08 95       	ret

00001f22 <LED_clr_pattern>:
    1f22:	1f 93       	push	r17
    1f24:	18 2f       	mov	r17, r24
    1f26:	86 e0       	ldi	r24, 0x06	; 6
    1f28:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    1f2c:	81 30       	cpi	r24, 0x01	; 1
    1f2e:	19 f4       	brne	.+6      	; 0x1f36 <LED_clr_pattern+0x14>
    1f30:	81 2f       	mov	r24, r17
    1f32:	0e 94 94 19 	call	0x3328	; 0x3328 <__LED_clr_pattern>
    1f36:	1f 91       	pop	r17
    1f38:	08 95       	ret

00001f3a <LED_open>:
    1f3a:	0e 94 99 19 	call	0x3332	; 0x3332 <__LED_init>
    1f3e:	86 e0       	ldi	r24, 0x06	; 6
    1f40:	61 e0       	ldi	r22, 0x01	; 1
    1f42:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    1f46:	86 e0       	ldi	r24, 0x06	; 6
    1f48:	91 e0       	ldi	r25, 0x01	; 1
    1f4a:	08 95       	ret

00001f4c <LED_set_pattern>:
    1f4c:	1f 93       	push	r17
    1f4e:	18 2f       	mov	r17, r24
    1f50:	86 e0       	ldi	r24, 0x06	; 6
    1f52:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    1f56:	81 30       	cpi	r24, 0x01	; 1
    1f58:	19 f4       	brne	.+6      	; 0x1f60 <LED_set_pattern+0x14>
    1f5a:	81 2f       	mov	r24, r17
    1f5c:	0e 94 9c 19 	call	0x3338	; 0x3338 <__LED_set_pattern>
    1f60:	1f 91       	pop	r17
    1f62:	08 95       	ret

00001f64 <SPI_set_slave_addr>:
    1f64:	1f 93       	push	r17
    1f66:	18 2f       	mov	r17, r24
    1f68:	82 e0       	ldi	r24, 0x02	; 2
    1f6a:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    1f6e:	81 30       	cpi	r24, 0x01	; 1
    1f70:	09 f0       	breq	.+2      	; 0x1f74 <SPI_set_slave_addr+0x10>
    1f72:	47 c0       	rjmp	.+142    	; 0x2002 <SPI_set_slave_addr+0x9e>
    1f74:	91 2f       	mov	r25, r17
    1f76:	97 70       	andi	r25, 0x07	; 7
    1f78:	80 91 7a 04 	lds	r24, 0x047A
    1f7c:	98 17       	cp	r25, r24
    1f7e:	09 f4       	brne	.+2      	; 0x1f82 <SPI_set_slave_addr+0x1e>
    1f80:	40 c0       	rjmp	.+128    	; 0x2002 <SPI_set_slave_addr+0x9e>
    1f82:	90 93 7a 04 	sts	0x047A, r25
    1f86:	85 b1       	in	r24, 0x05	; 5
    1f88:	88 7f       	andi	r24, 0xF8	; 248
    1f8a:	89 2b       	or	r24, r25
    1f8c:	85 b9       	out	0x05, r24	; 5
    1f8e:	93 30       	cpi	r25, 0x03	; 3
    1f90:	11 f1       	breq	.+68     	; 0x1fd6 <SPI_set_slave_addr+0x72>
    1f92:	94 30       	cpi	r25, 0x04	; 4
    1f94:	28 f4       	brcc	.+10     	; 0x1fa0 <SPI_set_slave_addr+0x3c>
    1f96:	91 30       	cpi	r25, 0x01	; 1
    1f98:	51 f0       	breq	.+20     	; 0x1fae <SPI_set_slave_addr+0x4a>
    1f9a:	92 30       	cpi	r25, 0x02	; 2
    1f9c:	90 f4       	brcc	.+36     	; 0x1fc2 <SPI_set_slave_addr+0x5e>
    1f9e:	0c c0       	rjmp	.+24     	; 0x1fb8 <SPI_set_slave_addr+0x54>
    1fa0:	95 30       	cpi	r25, 0x05	; 5
    1fa2:	19 f1       	breq	.+70     	; 0x1fea <SPI_set_slave_addr+0x86>
    1fa4:	95 30       	cpi	r25, 0x05	; 5
    1fa6:	e0 f0       	brcs	.+56     	; 0x1fe0 <SPI_set_slave_addr+0x7c>
    1fa8:	96 30       	cpi	r25, 0x06	; 6
    1faa:	21 f5       	brne	.+72     	; 0x1ff4 <SPI_set_slave_addr+0x90>
    1fac:	0f c0       	rjmp	.+30     	; 0x1fcc <SPI_set_slave_addr+0x68>
    1fae:	e0 91 1c 02 	lds	r30, 0x021C
    1fb2:	f0 91 1d 02 	lds	r31, 0x021D
    1fb6:	22 c0       	rjmp	.+68     	; 0x1ffc <SPI_set_slave_addr+0x98>
    1fb8:	e0 91 1a 02 	lds	r30, 0x021A
    1fbc:	f0 91 1b 02 	lds	r31, 0x021B
    1fc0:	1d c0       	rjmp	.+58     	; 0x1ffc <SPI_set_slave_addr+0x98>
    1fc2:	e0 91 1e 02 	lds	r30, 0x021E
    1fc6:	f0 91 1f 02 	lds	r31, 0x021F
    1fca:	18 c0       	rjmp	.+48     	; 0x1ffc <SPI_set_slave_addr+0x98>
    1fcc:	e0 91 26 02 	lds	r30, 0x0226
    1fd0:	f0 91 27 02 	lds	r31, 0x0227
    1fd4:	13 c0       	rjmp	.+38     	; 0x1ffc <SPI_set_slave_addr+0x98>
    1fd6:	e0 91 20 02 	lds	r30, 0x0220
    1fda:	f0 91 21 02 	lds	r31, 0x0221
    1fde:	0e c0       	rjmp	.+28     	; 0x1ffc <SPI_set_slave_addr+0x98>
    1fe0:	e0 91 22 02 	lds	r30, 0x0222
    1fe4:	f0 91 23 02 	lds	r31, 0x0223
    1fe8:	09 c0       	rjmp	.+18     	; 0x1ffc <SPI_set_slave_addr+0x98>
    1fea:	e0 91 24 02 	lds	r30, 0x0224
    1fee:	f0 91 25 02 	lds	r31, 0x0225
    1ff2:	04 c0       	rjmp	.+8      	; 0x1ffc <SPI_set_slave_addr+0x98>
    1ff4:	e0 91 28 02 	lds	r30, 0x0228
    1ff8:	f0 91 29 02 	lds	r31, 0x0229
    1ffc:	30 97       	sbiw	r30, 0x00	; 0
    1ffe:	09 f0       	breq	.+2      	; 0x2002 <SPI_set_slave_addr+0x9e>
    2000:	09 95       	icall
    2002:	1f 91       	pop	r17
    2004:	08 95       	ret

00002006 <SPI_transmit>:
    2006:	1f 93       	push	r17
    2008:	16 2f       	mov	r17, r22
    200a:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <SPI_set_slave_addr>
    200e:	82 e0       	ldi	r24, 0x02	; 2
    2010:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    2014:	81 30       	cpi	r24, 0x01	; 1
    2016:	21 f4       	brne	.+8      	; 0x2020 <SPI_transmit+0x1a>
    2018:	1e bd       	out	0x2e, r17	; 46
    201a:	0d b4       	in	r0, 0x2d	; 45
    201c:	07 fe       	sbrs	r0, 7
    201e:	fd cf       	rjmp	.-6      	; 0x201a <SPI_transmit+0x14>
    2020:	1f 91       	pop	r17
    2022:	08 95       	ret

00002024 <__SPKR_set_up_freq_LUT>:
    2024:	0f 93       	push	r16
    2026:	1f 93       	push	r17
    2028:	cf 93       	push	r28
    202a:	df 93       	push	r29
    202c:	80 e2       	ldi	r24, 0x20	; 32
    202e:	91 e0       	ldi	r25, 0x01	; 1
    2030:	0e 94 0f 29 	call	0x521e	; 0x521e <malloc>
    2034:	9c 01       	movw	r18, r24
    2036:	90 93 39 02 	sts	0x0239, r25
    203a:	80 93 38 02 	sts	0x0238, r24
    203e:	89 2b       	or	r24, r25
    2040:	11 f4       	brne	.+4      	; 0x2046 <__SPKR_set_up_freq_LUT+0x22>
    2042:	80 e0       	ldi	r24, 0x00	; 0
    2044:	39 c0       	rjmp	.+114    	; 0x20b8 <__SPKR_set_up_freq_LUT+0x94>
    2046:	89 01       	movw	r16, r18
    2048:	c0 e0       	ldi	r28, 0x00	; 0
    204a:	d0 e0       	ldi	r29, 0x00	; 0
    204c:	be 01       	movw	r22, r28
    204e:	80 e0       	ldi	r24, 0x00	; 0
    2050:	90 e0       	ldi	r25, 0x00	; 0
    2052:	0e 94 50 22 	call	0x44a0	; 0x44a0 <__floatunsisf>
    2056:	20 e0       	ldi	r18, 0x00	; 0
    2058:	30 e0       	ldi	r19, 0x00	; 0
    205a:	40 ea       	ldi	r20, 0xA0	; 160
    205c:	51 e4       	ldi	r21, 0x41	; 65
    205e:	0e 94 b7 21 	call	0x436e	; 0x436e <__divsf3>
    2062:	27 ef       	ldi	r18, 0xF7	; 247
    2064:	35 e7       	ldi	r19, 0x75	; 117
    2066:	40 e0       	ldi	r20, 0x00	; 0
    2068:	5f e3       	ldi	r21, 0x3F	; 63
    206a:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
    206e:	9b 01       	movw	r18, r22
    2070:	ac 01       	movw	r20, r24
    2072:	60 e0       	ldi	r22, 0x00	; 0
    2074:	70 e0       	ldi	r23, 0x00	; 0
    2076:	80 e2       	ldi	r24, 0x20	; 32
    2078:	91 e4       	ldi	r25, 0x41	; 65
    207a:	0e 94 a3 23 	call	0x4746	; 0x4746 <pow>
    207e:	9b 01       	movw	r18, r22
    2080:	ac 01       	movw	r20, r24
    2082:	ca 01       	movw	r24, r20
    2084:	b9 01       	movw	r22, r18
    2086:	2d ec       	ldi	r18, 0xCD	; 205
    2088:	3c ec       	ldi	r19, 0xCC	; 204
    208a:	42 e8       	ldi	r20, 0x82	; 130
    208c:	51 e4       	ldi	r21, 0x41	; 65
    208e:	0e 94 40 23 	call	0x4680	; 0x4680 <__mulsf3>
    2092:	0e 94 06 23 	call	0x460c	; 0x460c <lrint>
    2096:	2a e0       	ldi	r18, 0x0A	; 10
    2098:	30 e0       	ldi	r19, 0x00	; 0
    209a:	40 e0       	ldi	r20, 0x00	; 0
    209c:	50 e0       	ldi	r21, 0x00	; 0
    209e:	0e 94 70 28 	call	0x50e0	; 0x50e0 <__mulsi3>
    20a2:	f8 01       	movw	r30, r16
    20a4:	61 93       	st	Z+, r22
    20a6:	71 93       	st	Z+, r23
    20a8:	81 93       	st	Z+, r24
    20aa:	91 93       	st	Z+, r25
    20ac:	8f 01       	movw	r16, r30
    20ae:	21 96       	adiw	r28, 0x01	; 1
    20b0:	c8 34       	cpi	r28, 0x48	; 72
    20b2:	d1 05       	cpc	r29, r1
    20b4:	59 f6       	brne	.-106    	; 0x204c <__SPKR_set_up_freq_LUT+0x28>
    20b6:	81 e0       	ldi	r24, 0x01	; 1
    20b8:	df 91       	pop	r29
    20ba:	cf 91       	pop	r28
    20bc:	1f 91       	pop	r17
    20be:	0f 91       	pop	r16
    20c0:	08 95       	ret

000020c2 <__SPKR_open_beep_mode>:
    20c2:	8a e0       	ldi	r24, 0x0A	; 10
    20c4:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    20c8:	88 23       	and	r24, r24
    20ca:	71 f4       	brne	.+28     	; 0x20e8 <__SPKR_open_beep_mode+0x26>
    20cc:	10 92 35 02 	sts	0x0235, r1
    20d0:	10 92 34 02 	sts	0x0234, r1
    20d4:	81 e0       	ldi	r24, 0x01	; 1
    20d6:	0e 94 d7 1a 	call	0x35ae	; 0x35ae <__SPKR_init>
    20da:	81 e0       	ldi	r24, 0x01	; 1
    20dc:	80 93 2b 02 	sts	0x022B, r24
    20e0:	8a e0       	ldi	r24, 0x0A	; 10
    20e2:	61 e0       	ldi	r22, 0x01	; 1
    20e4:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    20e8:	8a e0       	ldi	r24, 0x0A	; 10
    20ea:	91 e0       	ldi	r25, 0x01	; 1
    20ec:	08 95       	ret

000020ee <__SPKR_open_tone_mode>:
    20ee:	1f 93       	push	r17
    20f0:	8b e0       	ldi	r24, 0x0B	; 11
    20f2:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    20f6:	88 23       	and	r24, r24
    20f8:	11 f0       	breq	.+4      	; 0x20fe <__SPKR_open_tone_mode+0x10>
    20fa:	90 e0       	ldi	r25, 0x00	; 0
    20fc:	21 c0       	rjmp	.+66     	; 0x2140 <__SPKR_open_tone_mode+0x52>
    20fe:	89 e0       	ldi	r24, 0x09	; 9
    2100:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    2104:	88 23       	and	r24, r24
    2106:	d9 f4       	brne	.+54     	; 0x213e <__SPKR_open_tone_mode+0x50>
    2108:	0e 94 12 10 	call	0x2024	; 0x2024 <__SPKR_set_up_freq_LUT>
    210c:	18 2f       	mov	r17, r24
    210e:	81 30       	cpi	r24, 0x01	; 1
    2110:	b1 f4       	brne	.+44     	; 0x213e <__SPKR_open_tone_mode+0x50>
    2112:	10 92 2c 02 	sts	0x022C, r1
    2116:	10 92 2d 02 	sts	0x022D, r1
    211a:	10 92 2e 02 	sts	0x022E, r1
    211e:	10 92 2f 02 	sts	0x022F, r1
    2122:	8d e0       	ldi	r24, 0x0D	; 13
    2124:	6a e5       	ldi	r22, 0x5A	; 90
    2126:	7a e1       	ldi	r23, 0x1A	; 26
    2128:	0e 94 bd 18 	call	0x317a	; 0x317a <ISR_attach>
    212c:	82 e0       	ldi	r24, 0x02	; 2
    212e:	0e 94 d7 1a 	call	0x35ae	; 0x35ae <__SPKR_init>
    2132:	10 93 2a 02 	sts	0x022A, r17
    2136:	89 e0       	ldi	r24, 0x09	; 9
    2138:	61 e0       	ldi	r22, 0x01	; 1
    213a:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    213e:	91 e0       	ldi	r25, 0x01	; 1
    2140:	89 e0       	ldi	r24, 0x09	; 9
    2142:	1f 91       	pop	r17
    2144:	08 95       	ret

00002146 <SPKR_open>:
    2146:	81 30       	cpi	r24, 0x01	; 1
    2148:	29 f0       	breq	.+10     	; 0x2154 <SPKR_open+0xe>
    214a:	82 30       	cpi	r24, 0x02	; 2
    214c:	31 f0       	breq	.+12     	; 0x215a <SPKR_open+0x14>
    214e:	90 e0       	ldi	r25, 0x00	; 0
    2150:	89 e0       	ldi	r24, 0x09	; 9
    2152:	08 95       	ret
    2154:	0e 94 61 10 	call	0x20c2	; 0x20c2 <__SPKR_open_beep_mode>
    2158:	08 95       	ret
    215a:	0e 94 77 10 	call	0x20ee	; 0x20ee <__SPKR_open_tone_mode>
    215e:	08 95       	ret

00002160 <STEPPER_get_nSteps>:
    2160:	80 91 3b 04 	lds	r24, 0x043B
    2164:	90 91 3c 04 	lds	r25, 0x043C
    2168:	20 91 3d 04 	lds	r18, 0x043D
    216c:	30 91 3e 04 	lds	r19, 0x043E
    2170:	bc 01       	movw	r22, r24
    2172:	c9 01       	movw	r24, r18
    2174:	08 95       	ret

00002176 <STEPPER_stepmode>:
    2176:	2f 92       	push	r2
    2178:	3f 92       	push	r3
    217a:	4f 92       	push	r4
    217c:	5f 92       	push	r5
    217e:	6f 92       	push	r6
    2180:	7f 92       	push	r7
    2182:	8f 92       	push	r8
    2184:	9f 92       	push	r9
    2186:	af 92       	push	r10
    2188:	bf 92       	push	r11
    218a:	cf 92       	push	r12
    218c:	df 92       	push	r13
    218e:	ef 92       	push	r14
    2190:	ff 92       	push	r15
    2192:	0f 93       	push	r16
    2194:	1f 93       	push	r17
    2196:	df 93       	push	r29
    2198:	cf 93       	push	r28
    219a:	cd b7       	in	r28, 0x3d	; 61
    219c:	de b7       	in	r29, 0x3e	; 62
    219e:	58 2e       	mov	r5, r24
    21a0:	96 2e       	mov	r9, r22
    21a2:	44 2e       	mov	r4, r20
    21a4:	39 01       	movw	r6, r18
    21a6:	3c 2c       	mov	r3, r12
    21a8:	c9 8c       	ldd	r12, Y+25	; 0x19
    21aa:	da 8c       	ldd	r13, Y+26	; 0x1a
    21ac:	2b 8c       	ldd	r2, Y+27	; 0x1b
    21ae:	81 e0       	ldi	r24, 0x01	; 1
    21b0:	68 17       	cp	r22, r24
    21b2:	39 f1       	breq	.+78     	; 0x2202 <STEPPER_stepmode+0x8c>
    21b4:	68 17       	cp	r22, r24
    21b6:	28 f0       	brcs	.+10     	; 0x21c2 <STEPPER_stepmode+0x4c>
    21b8:	92 e0       	ldi	r25, 0x02	; 2
    21ba:	69 17       	cp	r22, r25
    21bc:	09 f0       	breq	.+2      	; 0x21c0 <STEPPER_stepmode+0x4a>
    21be:	85 c0       	rjmp	.+266    	; 0x22ca <STEPPER_stepmode+0x154>
    21c0:	49 c0       	rjmp	.+146    	; 0x2254 <STEPPER_stepmode+0xde>
    21c2:	80 e0       	ldi	r24, 0x00	; 0
    21c4:	61 e0       	ldi	r22, 0x01	; 1
    21c6:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_mode>
    21ca:	80 e0       	ldi	r24, 0x00	; 0
    21cc:	b7 01       	movw	r22, r14
    21ce:	0e 94 8d 12 	call	0x251a	; 0x251a <STEPPER_set_accel>
    21d2:	80 e0       	ldi	r24, 0x00	; 0
    21d4:	64 2d       	mov	r22, r4
    21d6:	a3 01       	movw	r20, r6
    21d8:	98 01       	movw	r18, r16
    21da:	03 2d       	mov	r16, r3
    21dc:	ee 24       	eor	r14, r14
    21de:	e3 94       	inc	r14
    21e0:	e0 e6       	ldi	r30, 0x60	; 96
    21e2:	ce 2e       	mov	r12, r30
    21e4:	e4 e0       	ldi	r30, 0x04	; 4
    21e6:	de 2e       	mov	r13, r30
    21e8:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <STEPPER_step>
    21ec:	55 20       	and	r5, r5
    21ee:	09 f0       	breq	.+2      	; 0x21f2 <STEPPER_stepmode+0x7c>
    21f0:	6c c0       	rjmp	.+216    	; 0x22ca <STEPPER_stepmode+0x154>
    21f2:	00 d0       	rcall	.+0      	; 0x21f4 <STEPPER_stepmode+0x7e>
    21f4:	0f 92       	push	r0
    21f6:	ed b7       	in	r30, 0x3d	; 61
    21f8:	fe b7       	in	r31, 0x3e	; 62
    21fa:	11 82       	std	Z+1, r1	; 0x01
    21fc:	b3 82       	std	Z+3, r11	; 0x03
    21fe:	a2 82       	std	Z+2, r10	; 0x02
    2200:	23 c0       	rjmp	.+70     	; 0x2248 <STEPPER_stepmode+0xd2>
    2202:	81 e0       	ldi	r24, 0x01	; 1
    2204:	61 e0       	ldi	r22, 0x01	; 1
    2206:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_mode>
    220a:	81 e0       	ldi	r24, 0x01	; 1
    220c:	b6 01       	movw	r22, r12
    220e:	0e 94 8d 12 	call	0x251a	; 0x251a <STEPPER_set_accel>
    2212:	81 e0       	ldi	r24, 0x01	; 1
    2214:	68 2d       	mov	r22, r8
    2216:	4d 89       	ldd	r20, Y+21	; 0x15
    2218:	5e 89       	ldd	r21, Y+22	; 0x16
    221a:	2f 89       	ldd	r18, Y+23	; 0x17
    221c:	38 8d       	ldd	r19, Y+24	; 0x18
    221e:	02 2d       	mov	r16, r2
    2220:	ee 24       	eor	r14, r14
    2222:	e3 94       	inc	r14
    2224:	70 e6       	ldi	r23, 0x60	; 96
    2226:	c7 2e       	mov	r12, r23
    2228:	74 e0       	ldi	r23, 0x04	; 4
    222a:	d7 2e       	mov	r13, r23
    222c:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <STEPPER_step>
    2230:	55 20       	and	r5, r5
    2232:	09 f0       	breq	.+2      	; 0x2236 <STEPPER_stepmode+0xc0>
    2234:	4a c0       	rjmp	.+148    	; 0x22ca <STEPPER_stepmode+0x154>
    2236:	00 d0       	rcall	.+0      	; 0x2238 <STEPPER_stepmode+0xc2>
    2238:	0f 92       	push	r0
    223a:	ed b7       	in	r30, 0x3d	; 61
    223c:	fe b7       	in	r31, 0x3e	; 62
    223e:	91 82       	std	Z+1, r9	; 0x01
    2240:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2242:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2244:	93 83       	std	Z+3, r25	; 0x03
    2246:	82 83       	std	Z+2, r24	; 0x02
    2248:	0e 94 87 13 	call	0x270e	; 0x270e <STEPPER_wait_and_then>
    224c:	0f 90       	pop	r0
    224e:	0f 90       	pop	r0
    2250:	0f 90       	pop	r0
    2252:	3b c0       	rjmp	.+118    	; 0x22ca <STEPPER_stepmode+0x154>
    2254:	82 e0       	ldi	r24, 0x02	; 2
    2256:	61 e0       	ldi	r22, 0x01	; 1
    2258:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_mode>
    225c:	80 e0       	ldi	r24, 0x00	; 0
    225e:	b7 01       	movw	r22, r14
    2260:	0e 94 8d 12 	call	0x251a	; 0x251a <STEPPER_set_accel>
    2264:	81 e0       	ldi	r24, 0x01	; 1
    2266:	b6 01       	movw	r22, r12
    2268:	0e 94 8d 12 	call	0x251a	; 0x251a <STEPPER_set_accel>
    226c:	80 e0       	ldi	r24, 0x00	; 0
    226e:	64 2d       	mov	r22, r4
    2270:	a3 01       	movw	r20, r6
    2272:	98 01       	movw	r18, r16
    2274:	03 2d       	mov	r16, r3
    2276:	ee 24       	eor	r14, r14
    2278:	e3 94       	inc	r14
    227a:	90 e6       	ldi	r25, 0x60	; 96
    227c:	c9 2e       	mov	r12, r25
    227e:	94 e0       	ldi	r25, 0x04	; 4
    2280:	d9 2e       	mov	r13, r25
    2282:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <STEPPER_step>
    2286:	81 e0       	ldi	r24, 0x01	; 1
    2288:	68 2d       	mov	r22, r8
    228a:	4d 89       	ldd	r20, Y+21	; 0x15
    228c:	5e 89       	ldd	r21, Y+22	; 0x16
    228e:	2f 89       	ldd	r18, Y+23	; 0x17
    2290:	38 8d       	ldd	r19, Y+24	; 0x18
    2292:	02 2d       	mov	r16, r2
    2294:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <STEPPER_step>
    2298:	55 20       	and	r5, r5
    229a:	b9 f4       	brne	.+46     	; 0x22ca <STEPPER_stepmode+0x154>
    229c:	00 d0       	rcall	.+0      	; 0x229e <STEPPER_stepmode+0x128>
    229e:	00 d0       	rcall	.+0      	; 0x22a0 <STEPPER_stepmode+0x12a>
    22a0:	0f 92       	push	r0
    22a2:	ad b7       	in	r26, 0x3d	; 61
    22a4:	be b7       	in	r27, 0x3e	; 62
    22a6:	11 96       	adiw	r26, 0x01	; 1
    22a8:	ed b7       	in	r30, 0x3d	; 61
    22aa:	fe b7       	in	r31, 0x3e	; 62
    22ac:	91 82       	std	Z+1, r9	; 0x01
    22ae:	fd 01       	movw	r30, r26
    22b0:	b2 82       	std	Z+2, r11	; 0x02
    22b2:	a1 82       	std	Z+1, r10	; 0x01
    22b4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    22b6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    22b8:	94 83       	std	Z+4, r25	; 0x04
    22ba:	83 83       	std	Z+3, r24	; 0x03
    22bc:	0e 94 87 13 	call	0x270e	; 0x270e <STEPPER_wait_and_then>
    22c0:	0f 90       	pop	r0
    22c2:	0f 90       	pop	r0
    22c4:	0f 90       	pop	r0
    22c6:	0f 90       	pop	r0
    22c8:	0f 90       	pop	r0
    22ca:	cf 91       	pop	r28
    22cc:	df 91       	pop	r29
    22ce:	1f 91       	pop	r17
    22d0:	0f 91       	pop	r16
    22d2:	ff 90       	pop	r15
    22d4:	ef 90       	pop	r14
    22d6:	df 90       	pop	r13
    22d8:	cf 90       	pop	r12
    22da:	bf 90       	pop	r11
    22dc:	af 90       	pop	r10
    22de:	9f 90       	pop	r9
    22e0:	8f 90       	pop	r8
    22e2:	7f 90       	pop	r7
    22e4:	6f 90       	pop	r6
    22e6:	5f 90       	pop	r5
    22e8:	4f 90       	pop	r4
    22ea:	3f 90       	pop	r3
    22ec:	2f 90       	pop	r2
    22ee:	08 95       	ret

000022f0 <STEPPER_move>:
    22f0:	6f 92       	push	r6
    22f2:	7f 92       	push	r7
    22f4:	8f 92       	push	r8
    22f6:	9f 92       	push	r9
    22f8:	af 92       	push	r10
    22fa:	bf 92       	push	r11
    22fc:	cf 92       	push	r12
    22fe:	df 92       	push	r13
    2300:	ef 92       	push	r14
    2302:	ff 92       	push	r15
    2304:	0f 93       	push	r16
    2306:	1f 93       	push	r17
    2308:	df 93       	push	r29
    230a:	cf 93       	push	r28
    230c:	cd b7       	in	r28, 0x3d	; 61
    230e:	de b7       	in	r29, 0x3e	; 62
    2310:	94 2e       	mov	r9, r20
    2312:	7c 2d       	mov	r23, r12
    2314:	d5 01       	movw	r26, r10
    2316:	49 89       	ldd	r20, Y+17	; 0x11
    2318:	5a 89       	ldd	r21, Y+18	; 0x12
    231a:	ab 88       	ldd	r10, Y+19	; 0x13
    231c:	bc 88       	ldd	r11, Y+20	; 0x14
    231e:	cd 88       	ldd	r12, Y+21	; 0x15
    2320:	de 88       	ldd	r13, Y+22	; 0x16
    2322:	9f 89       	ldd	r25, Y+23	; 0x17
    2324:	81 30       	cpi	r24, 0x01	; 1
    2326:	09 f4       	brne	.+2      	; 0x232a <STEPPER_move+0x3a>
    2328:	57 c0       	rjmp	.+174    	; 0x23d8 <STEPPER_move+0xe8>
    232a:	81 30       	cpi	r24, 0x01	; 1
    232c:	b8 f1       	brcs	.+110    	; 0x239c <STEPPER_move+0xac>
    232e:	82 30       	cpi	r24, 0x02	; 2
    2330:	09 f0       	breq	.+2      	; 0x2334 <STEPPER_move+0x44>
    2332:	76 c0       	rjmp	.+236    	; 0x2420 <STEPPER_move+0x130>
    2334:	61 30       	cpi	r22, 0x01	; 1
    2336:	91 f0       	breq	.+36     	; 0x235c <STEPPER_move+0x6c>
    2338:	61 30       	cpi	r22, 0x01	; 1
    233a:	20 f0       	brcs	.+8      	; 0x2344 <STEPPER_move+0x54>
    233c:	62 30       	cpi	r22, 0x02	; 2
    233e:	09 f0       	breq	.+2      	; 0x2342 <STEPPER_move+0x52>
    2340:	6f c0       	rjmp	.+222    	; 0x2420 <STEPPER_move+0x130>
    2342:	15 c0       	rjmp	.+42     	; 0x236e <STEPPER_move+0x7e>
    2344:	80 e0       	ldi	r24, 0x00	; 0
    2346:	60 e0       	ldi	r22, 0x00	; 0
    2348:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_mode>
    234c:	80 e0       	ldi	r24, 0x00	; 0
    234e:	b7 01       	movw	r22, r14
    2350:	0e 94 8d 12 	call	0x251a	; 0x251a <STEPPER_set_accel>
    2354:	80 e0       	ldi	r24, 0x00	; 0
    2356:	69 2d       	mov	r22, r9
    2358:	a8 01       	movw	r20, r16
    235a:	1d c0       	rjmp	.+58     	; 0x2396 <STEPPER_move+0xa6>
    235c:	81 e0       	ldi	r24, 0x01	; 1
    235e:	60 e0       	ldi	r22, 0x00	; 0
    2360:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_mode>
    2364:	81 e0       	ldi	r24, 0x01	; 1
    2366:	b6 01       	movw	r22, r12
    2368:	0e 94 8d 12 	call	0x251a	; 0x251a <STEPPER_set_accel>
    236c:	11 c0       	rjmp	.+34     	; 0x2390 <STEPPER_move+0xa0>
    236e:	82 e0       	ldi	r24, 0x02	; 2
    2370:	60 e0       	ldi	r22, 0x00	; 0
    2372:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_mode>
    2376:	80 e0       	ldi	r24, 0x00	; 0
    2378:	b7 01       	movw	r22, r14
    237a:	0e 94 8d 12 	call	0x251a	; 0x251a <STEPPER_set_accel>
    237e:	81 e0       	ldi	r24, 0x01	; 1
    2380:	b6 01       	movw	r22, r12
    2382:	0e 94 8d 12 	call	0x251a	; 0x251a <STEPPER_set_accel>
    2386:	80 e0       	ldi	r24, 0x00	; 0
    2388:	69 2d       	mov	r22, r9
    238a:	a8 01       	movw	r20, r16
    238c:	0e 94 76 12 	call	0x24ec	; 0x24ec <STEPPER_run>
    2390:	81 e0       	ldi	r24, 0x01	; 1
    2392:	68 2d       	mov	r22, r8
    2394:	a5 01       	movw	r20, r10
    2396:	0e 94 76 12 	call	0x24ec	; 0x24ec <STEPPER_run>
    239a:	42 c0       	rjmp	.+132    	; 0x2420 <STEPPER_move+0x130>
    239c:	ed b7       	in	r30, 0x3d	; 61
    239e:	fe b7       	in	r31, 0x3e	; 62
    23a0:	39 97       	sbiw	r30, 0x09	; 9
    23a2:	0f b6       	in	r0, 0x3f	; 63
    23a4:	f8 94       	cli
    23a6:	fe bf       	out	0x3e, r31	; 62
    23a8:	0f be       	out	0x3f, r0	; 63
    23aa:	ed bf       	out	0x3d, r30	; 61
    23ac:	6d b6       	in	r6, 0x3d	; 61
    23ae:	7e b6       	in	r7, 0x3e	; 62
    23b0:	08 94       	sec
    23b2:	61 1c       	adc	r6, r1
    23b4:	71 1c       	adc	r7, r1
    23b6:	52 83       	std	Z+2, r21	; 0x02
    23b8:	41 83       	std	Z+1, r20	; 0x01
    23ba:	f3 01       	movw	r30, r6
    23bc:	b3 82       	std	Z+3, r11	; 0x03
    23be:	a2 82       	std	Z+2, r10	; 0x02
    23c0:	d5 82       	std	Z+5, r13	; 0x05
    23c2:	c4 82       	std	Z+4, r12	; 0x04
    23c4:	96 83       	std	Z+6, r25	; 0x06
    23c6:	88 8d       	ldd	r24, Y+24	; 0x18
    23c8:	99 8d       	ldd	r25, Y+25	; 0x19
    23ca:	90 87       	std	Z+8, r25	; 0x08
    23cc:	87 83       	std	Z+7, r24	; 0x07
    23ce:	80 e0       	ldi	r24, 0x00	; 0
    23d0:	49 2d       	mov	r20, r9
    23d2:	c7 2e       	mov	r12, r23
    23d4:	5d 01       	movw	r10, r26
    23d6:	1a c0       	rjmp	.+52     	; 0x240c <STEPPER_move+0x11c>
    23d8:	ed b7       	in	r30, 0x3d	; 61
    23da:	fe b7       	in	r31, 0x3e	; 62
    23dc:	39 97       	sbiw	r30, 0x09	; 9
    23de:	0f b6       	in	r0, 0x3f	; 63
    23e0:	f8 94       	cli
    23e2:	fe bf       	out	0x3e, r31	; 62
    23e4:	0f be       	out	0x3f, r0	; 63
    23e6:	ed bf       	out	0x3d, r30	; 61
    23e8:	ad b7       	in	r26, 0x3d	; 61
    23ea:	be b7       	in	r27, 0x3e	; 62
    23ec:	11 96       	adiw	r26, 0x01	; 1
    23ee:	52 83       	std	Z+2, r21	; 0x02
    23f0:	41 83       	std	Z+1, r20	; 0x01
    23f2:	fd 01       	movw	r30, r26
    23f4:	b3 82       	std	Z+3, r11	; 0x03
    23f6:	a2 82       	std	Z+2, r10	; 0x02
    23f8:	d5 82       	std	Z+5, r13	; 0x05
    23fa:	c4 82       	std	Z+4, r12	; 0x04
    23fc:	96 83       	std	Z+6, r25	; 0x06
    23fe:	10 86       	std	Z+8, r1	; 0x08
    2400:	17 82       	std	Z+7, r1	; 0x07
    2402:	81 e0       	ldi	r24, 0x01	; 1
    2404:	49 2d       	mov	r20, r9
    2406:	c7 2e       	mov	r12, r23
    2408:	aa 24       	eor	r10, r10
    240a:	bb 24       	eor	r11, r11
    240c:	0e 94 bb 10 	call	0x2176	; 0x2176 <STEPPER_stepmode>
    2410:	8d b7       	in	r24, 0x3d	; 61
    2412:	9e b7       	in	r25, 0x3e	; 62
    2414:	09 96       	adiw	r24, 0x09	; 9
    2416:	0f b6       	in	r0, 0x3f	; 63
    2418:	f8 94       	cli
    241a:	9e bf       	out	0x3e, r25	; 62
    241c:	0f be       	out	0x3f, r0	; 63
    241e:	8d bf       	out	0x3d, r24	; 61
    2420:	cf 91       	pop	r28
    2422:	df 91       	pop	r29
    2424:	1f 91       	pop	r17
    2426:	0f 91       	pop	r16
    2428:	ff 90       	pop	r15
    242a:	ef 90       	pop	r14
    242c:	df 90       	pop	r13
    242e:	cf 90       	pop	r12
    2430:	bf 90       	pop	r11
    2432:	af 90       	pop	r10
    2434:	9f 90       	pop	r9
    2436:	8f 90       	pop	r8
    2438:	7f 90       	pop	r7
    243a:	6f 90       	pop	r6
    243c:	08 95       	ret

0000243e <STEPPER_open>:
    243e:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <__STEPPER_init>
    2442:	81 e0       	ldi	r24, 0x01	; 1
    2444:	80 93 5f 04 	sts	0x045F, r24
    2448:	e9 e2       	ldi	r30, 0x29	; 41
    244a:	f4 e0       	ldi	r31, 0x04	; 4
    244c:	11 92       	st	Z+, r1
    244e:	11 92       	st	Z+, r1
    2450:	11 82       	std	Z+1, r1	; 0x01
    2452:	10 82       	st	Z, r1
    2454:	32 96       	adiw	r30, 0x02	; 2
    2456:	11 82       	std	Z+1, r1	; 0x01
    2458:	10 82       	st	Z, r1
    245a:	32 96       	adiw	r30, 0x02	; 2
    245c:	11 82       	std	Z+1, r1	; 0x01
    245e:	10 82       	st	Z, r1
    2460:	32 96       	adiw	r30, 0x02	; 2
    2462:	11 82       	std	Z+1, r1	; 0x01
    2464:	10 82       	st	Z, r1
    2466:	32 96       	adiw	r30, 0x02	; 2
    2468:	11 82       	std	Z+1, r1	; 0x01
    246a:	10 82       	st	Z, r1
    246c:	32 96       	adiw	r30, 0x02	; 2
    246e:	11 82       	std	Z+1, r1	; 0x01
    2470:	10 82       	st	Z, r1
    2472:	32 96       	adiw	r30, 0x02	; 2
    2474:	11 82       	std	Z+1, r1	; 0x01
    2476:	10 82       	st	Z, r1
    2478:	32 96       	adiw	r30, 0x02	; 2
    247a:	11 82       	std	Z+1, r1	; 0x01
    247c:	10 82       	st	Z, r1
    247e:	32 96       	adiw	r30, 0x02	; 2
    2480:	11 82       	std	Z+1, r1	; 0x01
    2482:	10 82       	st	Z, r1
    2484:	32 96       	adiw	r30, 0x02	; 2
    2486:	11 82       	std	Z+1, r1	; 0x01
    2488:	10 82       	st	Z, r1
    248a:	32 96       	adiw	r30, 0x02	; 2
    248c:	11 82       	std	Z+1, r1	; 0x01
    248e:	10 82       	st	Z, r1
    2490:	32 96       	adiw	r30, 0x02	; 2
    2492:	11 82       	std	Z+1, r1	; 0x01
    2494:	10 82       	st	Z, r1
    2496:	36 96       	adiw	r30, 0x06	; 6
    2498:	11 92       	st	Z+, r1
    249a:	11 92       	st	Z+, r1
    249c:	11 92       	st	Z+, r1
    249e:	10 82       	st	Z, r1
    24a0:	32 96       	adiw	r30, 0x02	; 2
    24a2:	11 92       	st	Z+, r1
    24a4:	11 92       	st	Z+, r1
    24a6:	11 92       	st	Z+, r1
    24a8:	11 92       	st	Z+, r1
    24aa:	11 92       	st	Z+, r1
    24ac:	11 92       	st	Z+, r1
    24ae:	11 92       	st	Z+, r1
    24b0:	11 82       	std	Z+1, r1	; 0x01
    24b2:	10 82       	st	Z, r1
    24b4:	32 96       	adiw	r30, 0x02	; 2
    24b6:	11 82       	std	Z+1, r1	; 0x01
    24b8:	10 82       	st	Z, r1
    24ba:	32 96       	adiw	r30, 0x02	; 2
    24bc:	11 82       	std	Z+1, r1	; 0x01
    24be:	10 82       	st	Z, r1
    24c0:	32 96       	adiw	r30, 0x02	; 2
    24c2:	11 82       	std	Z+1, r1	; 0x01
    24c4:	10 82       	st	Z, r1
    24c6:	76 97       	sbiw	r30, 0x16	; 22
    24c8:	11 82       	std	Z+1, r1	; 0x01
    24ca:	10 82       	st	Z, r1
    24cc:	32 96       	adiw	r30, 0x02	; 2
    24ce:	11 82       	std	Z+1, r1	; 0x01
    24d0:	10 82       	st	Z, r1
    24d2:	10 92 5e 04 	sts	0x045E, r1
    24d6:	10 92 5d 04 	sts	0x045D, r1
    24da:	10 92 5f 04 	sts	0x045F, r1
    24de:	87 e0       	ldi	r24, 0x07	; 7
    24e0:	61 e0       	ldi	r22, 0x01	; 1
    24e2:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    24e6:	87 e0       	ldi	r24, 0x07	; 7
    24e8:	91 e0       	ldi	r25, 0x01	; 1
    24ea:	08 95       	ret

000024ec <STEPPER_run>:
    24ec:	ef 92       	push	r14
    24ee:	ff 92       	push	r15
    24f0:	0f 93       	push	r16
    24f2:	1f 93       	push	r17
    24f4:	18 2f       	mov	r17, r24
    24f6:	06 2f       	mov	r16, r22
    24f8:	7a 01       	movw	r14, r20
    24fa:	60 e0       	ldi	r22, 0x00	; 0
    24fc:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_mode>
    2500:	81 2f       	mov	r24, r17
    2502:	60 2f       	mov	r22, r16
    2504:	0e 94 af 12 	call	0x255e	; 0x255e <STEPPER_set_dir>
    2508:	81 2f       	mov	r24, r17
    250a:	b7 01       	movw	r22, r14
    250c:	0e 94 d9 12 	call	0x25b2	; 0x25b2 <STEPPER_set_speed>
    2510:	1f 91       	pop	r17
    2512:	0f 91       	pop	r16
    2514:	ff 90       	pop	r15
    2516:	ef 90       	pop	r14
    2518:	08 95       	ret

0000251a <STEPPER_set_accel>:
    251a:	48 2f       	mov	r20, r24
    251c:	81 e0       	ldi	r24, 0x01	; 1
    251e:	80 93 5f 04 	sts	0x045F, r24
    2522:	cb 01       	movw	r24, r22
    2524:	23 e0       	ldi	r18, 0x03	; 3
    2526:	69 3e       	cpi	r22, 0xE9	; 233
    2528:	72 07       	cpc	r23, r18
    252a:	10 f0       	brcs	.+4      	; 0x2530 <STEPPER_set_accel+0x16>
    252c:	88 ee       	ldi	r24, 0xE8	; 232
    252e:	93 e0       	ldi	r25, 0x03	; 3
    2530:	41 30       	cpi	r20, 0x01	; 1
    2532:	71 f0       	breq	.+28     	; 0x2550 <STEPPER_set_accel+0x36>
    2534:	41 30       	cpi	r20, 0x01	; 1
    2536:	18 f0       	brcs	.+6      	; 0x253e <STEPPER_set_accel+0x24>
    2538:	42 30       	cpi	r20, 0x02	; 2
    253a:	71 f4       	brne	.+28     	; 0x2558 <STEPPER_set_accel+0x3e>
    253c:	05 c0       	rjmp	.+10     	; 0x2548 <STEPPER_set_accel+0x2e>
    253e:	90 93 34 04 	sts	0x0434, r25
    2542:	80 93 33 04 	sts	0x0433, r24
    2546:	08 c0       	rjmp	.+16     	; 0x2558 <STEPPER_set_accel+0x3e>
    2548:	90 93 34 04 	sts	0x0434, r25
    254c:	80 93 33 04 	sts	0x0433, r24
    2550:	90 93 36 04 	sts	0x0436, r25
    2554:	80 93 35 04 	sts	0x0435, r24
    2558:	10 92 5f 04 	sts	0x045F, r1
    255c:	08 95       	ret

0000255e <STEPPER_set_dir>:
    255e:	98 2f       	mov	r25, r24
    2560:	81 e0       	ldi	r24, 0x01	; 1
    2562:	80 93 5f 04 	sts	0x045F, r24
    2566:	91 30       	cpi	r25, 0x01	; 1
    2568:	51 f0       	breq	.+20     	; 0x257e <STEPPER_set_dir+0x20>
    256a:	91 30       	cpi	r25, 0x01	; 1
    256c:	18 f0       	brcs	.+6      	; 0x2574 <STEPPER_set_dir+0x16>
    256e:	92 30       	cpi	r25, 0x02	; 2
    2570:	41 f4       	brne	.+16     	; 0x2582 <STEPPER_set_dir+0x24>
    2572:	03 c0       	rjmp	.+6      	; 0x257a <STEPPER_set_dir+0x1c>
    2574:	60 93 4c 04 	sts	0x044C, r22
    2578:	04 c0       	rjmp	.+8      	; 0x2582 <STEPPER_set_dir+0x24>
    257a:	60 93 4c 04 	sts	0x044C, r22
    257e:	60 93 4d 04 	sts	0x044D, r22
    2582:	10 92 5f 04 	sts	0x045F, r1
    2586:	08 95       	ret

00002588 <STEPPER_set_mode>:
    2588:	98 2f       	mov	r25, r24
    258a:	81 e0       	ldi	r24, 0x01	; 1
    258c:	80 93 5f 04 	sts	0x045F, r24
    2590:	91 30       	cpi	r25, 0x01	; 1
    2592:	51 f0       	breq	.+20     	; 0x25a8 <STEPPER_set_mode+0x20>
    2594:	91 30       	cpi	r25, 0x01	; 1
    2596:	18 f0       	brcs	.+6      	; 0x259e <STEPPER_set_mode+0x16>
    2598:	92 30       	cpi	r25, 0x02	; 2
    259a:	41 f4       	brne	.+16     	; 0x25ac <STEPPER_set_mode+0x24>
    259c:	03 c0       	rjmp	.+6      	; 0x25a4 <STEPPER_set_mode+0x1c>
    259e:	60 93 29 04 	sts	0x0429, r22
    25a2:	04 c0       	rjmp	.+8      	; 0x25ac <STEPPER_set_mode+0x24>
    25a4:	60 93 29 04 	sts	0x0429, r22
    25a8:	60 93 2a 04 	sts	0x042A, r22
    25ac:	10 92 5f 04 	sts	0x045F, r1
    25b0:	08 95       	ret

000025b2 <STEPPER_set_speed>:
    25b2:	48 2f       	mov	r20, r24
    25b4:	81 e0       	ldi	r24, 0x01	; 1
    25b6:	80 93 5f 04 	sts	0x045F, r24
    25ba:	cb 01       	movw	r24, r22
    25bc:	21 e0       	ldi	r18, 0x01	; 1
    25be:	61 39       	cpi	r22, 0x91	; 145
    25c0:	72 07       	cpc	r23, r18
    25c2:	10 f0       	brcs	.+4      	; 0x25c8 <STEPPER_set_speed+0x16>
    25c4:	80 e9       	ldi	r24, 0x90	; 144
    25c6:	91 e0       	ldi	r25, 0x01	; 1
    25c8:	41 30       	cpi	r20, 0x01	; 1
    25ca:	71 f0       	breq	.+28     	; 0x25e8 <STEPPER_set_speed+0x36>
    25cc:	41 30       	cpi	r20, 0x01	; 1
    25ce:	18 f0       	brcs	.+6      	; 0x25d6 <STEPPER_set_speed+0x24>
    25d0:	42 30       	cpi	r20, 0x02	; 2
    25d2:	71 f4       	brne	.+28     	; 0x25f0 <STEPPER_set_speed+0x3e>
    25d4:	05 c0       	rjmp	.+10     	; 0x25e0 <STEPPER_set_speed+0x2e>
    25d6:	90 93 2c 04 	sts	0x042C, r25
    25da:	80 93 2b 04 	sts	0x042B, r24
    25de:	08 c0       	rjmp	.+16     	; 0x25f0 <STEPPER_set_speed+0x3e>
    25e0:	90 93 2c 04 	sts	0x042C, r25
    25e4:	80 93 2b 04 	sts	0x042B, r24
    25e8:	90 93 2e 04 	sts	0x042E, r25
    25ec:	80 93 2d 04 	sts	0x042D, r24
    25f0:	10 92 5f 04 	sts	0x045F, r1
    25f4:	08 95       	ret

000025f6 <STEPPER_step>:
    25f6:	8f 92       	push	r8
    25f8:	9f 92       	push	r9
    25fa:	af 92       	push	r10
    25fc:	bf 92       	push	r11
    25fe:	cf 92       	push	r12
    2600:	df 92       	push	r13
    2602:	ef 92       	push	r14
    2604:	ff 92       	push	r15
    2606:	0f 93       	push	r16
    2608:	1f 93       	push	r17
    260a:	cf 93       	push	r28
    260c:	df 93       	push	r29
    260e:	18 2f       	mov	r17, r24
    2610:	f6 2e       	mov	r15, r22
    2612:	5a 01       	movw	r10, r20
    2614:	49 01       	movw	r8, r18
    2616:	e6 01       	movw	r28, r12
    2618:	61 e0       	ldi	r22, 0x01	; 1
    261a:	0e 94 c4 12 	call	0x2588	; 0x2588 <STEPPER_set_mode>
    261e:	81 2f       	mov	r24, r17
    2620:	b5 01       	movw	r22, r10
    2622:	a4 01       	movw	r20, r8
    2624:	0e 94 a3 1b 	call	0x3746	; 0x3746 <STEPPER_setup_decels>
    2628:	81 2f       	mov	r24, r17
    262a:	6f 2d       	mov	r22, r15
    262c:	0e 94 af 12 	call	0x255e	; 0x255e <STEPPER_set_dir>
    2630:	81 2f       	mov	r24, r17
    2632:	60 2f       	mov	r22, r16
    2634:	0e 94 8e 1b 	call	0x371c	; 0x371c <STEPPER_set_stop_mode>
    2638:	81 2f       	mov	r24, r17
    263a:	b5 01       	movw	r22, r10
    263c:	0e 94 73 1b 	call	0x36e6	; 0x36e6 <STEPPER_set_steps>
    2640:	c1 14       	cp	r12, r1
    2642:	d1 04       	cpc	r13, r1
    2644:	99 f0       	breq	.+38     	; 0x266c <STEPPER_step+0x76>
    2646:	11 30       	cpi	r17, 0x01	; 1
    2648:	49 f0       	breq	.+18     	; 0x265c <STEPPER_step+0x66>
    264a:	11 30       	cpi	r17, 0x01	; 1
    264c:	18 f0       	brcs	.+6      	; 0x2654 <STEPPER_step+0x5e>
    264e:	12 30       	cpi	r17, 0x02	; 2
    2650:	69 f4       	brne	.+26     	; 0x266c <STEPPER_step+0x76>
    2652:	06 c0       	rjmp	.+12     	; 0x2660 <STEPPER_step+0x6a>
    2654:	18 82       	st	Y, r1
    2656:	10 92 5b 04 	sts	0x045B, r1
    265a:	08 c0       	rjmp	.+16     	; 0x266c <STEPPER_step+0x76>
    265c:	19 82       	std	Y+1, r1	; 0x01
    265e:	04 c0       	rjmp	.+8      	; 0x2668 <STEPPER_step+0x72>
    2660:	18 82       	st	Y, r1
    2662:	19 82       	std	Y+1, r1	; 0x01
    2664:	10 92 5b 04 	sts	0x045B, r1
    2668:	10 92 5c 04 	sts	0x045C, r1
    266c:	d0 93 5e 04 	sts	0x045E, r29
    2670:	c0 93 5d 04 	sts	0x045D, r28
    2674:	ee 20       	and	r14, r14
    2676:	b9 f5       	brne	.+110    	; 0x26e6 <STEPPER_step+0xf0>
    2678:	8a ec       	ldi	r24, 0xCA	; 202
    267a:	91 e0       	ldi	r25, 0x01	; 1
    267c:	90 93 5e 04 	sts	0x045E, r25
    2680:	80 93 5d 04 	sts	0x045D, r24
    2684:	81 2f       	mov	r24, r17
    2686:	b4 01       	movw	r22, r8
    2688:	0e 94 d9 12 	call	0x25b2	; 0x25b2 <STEPPER_set_speed>
    268c:	81 2f       	mov	r24, r17
    268e:	0e 94 54 1b 	call	0x36a8	; 0x36a8 <STEPPER_go>
    2692:	11 30       	cpi	r17, 0x01	; 1
    2694:	71 f0       	breq	.+28     	; 0x26b2 <STEPPER_step+0xbc>
    2696:	11 30       	cpi	r17, 0x01	; 1
    2698:	18 f0       	brcs	.+6      	; 0x26a0 <STEPPER_step+0xaa>
    269a:	12 30       	cpi	r17, 0x02	; 2
    269c:	59 f5       	brne	.+86     	; 0x26f4 <STEPPER_step+0xfe>
    269e:	12 c0       	rjmp	.+36     	; 0x26c4 <STEPPER_step+0xce>
    26a0:	10 92 ca 01 	sts	0x01CA, r1
    26a4:	10 92 5b 04 	sts	0x045B, r1
    26a8:	80 91 ca 01 	lds	r24, 0x01CA
    26ac:	88 23       	and	r24, r24
    26ae:	e1 f3       	breq	.-8      	; 0x26a8 <STEPPER_step+0xb2>
    26b0:	21 c0       	rjmp	.+66     	; 0x26f4 <STEPPER_step+0xfe>
    26b2:	10 92 cb 01 	sts	0x01CB, r1
    26b6:	10 92 5c 04 	sts	0x045C, r1
    26ba:	80 91 cb 01 	lds	r24, 0x01CB
    26be:	88 23       	and	r24, r24
    26c0:	e1 f3       	breq	.-8      	; 0x26ba <STEPPER_step+0xc4>
    26c2:	18 c0       	rjmp	.+48     	; 0x26f4 <STEPPER_step+0xfe>
    26c4:	10 92 ca 01 	sts	0x01CA, r1
    26c8:	10 92 cb 01 	sts	0x01CB, r1
    26cc:	10 92 5b 04 	sts	0x045B, r1
    26d0:	10 92 5c 04 	sts	0x045C, r1
    26d4:	80 91 ca 01 	lds	r24, 0x01CA
    26d8:	88 23       	and	r24, r24
    26da:	e1 f3       	breq	.-8      	; 0x26d4 <STEPPER_step+0xde>
    26dc:	80 91 cb 01 	lds	r24, 0x01CB
    26e0:	88 23       	and	r24, r24
    26e2:	c1 f3       	breq	.-16     	; 0x26d4 <STEPPER_step+0xde>
    26e4:	07 c0       	rjmp	.+14     	; 0x26f4 <STEPPER_step+0xfe>
    26e6:	81 2f       	mov	r24, r17
    26e8:	b4 01       	movw	r22, r8
    26ea:	0e 94 d9 12 	call	0x25b2	; 0x25b2 <STEPPER_set_speed>
    26ee:	81 2f       	mov	r24, r17
    26f0:	0e 94 54 1b 	call	0x36a8	; 0x36a8 <STEPPER_go>
    26f4:	df 91       	pop	r29
    26f6:	cf 91       	pop	r28
    26f8:	1f 91       	pop	r17
    26fa:	0f 91       	pop	r16
    26fc:	ff 90       	pop	r15
    26fe:	ef 90       	pop	r14
    2700:	df 90       	pop	r13
    2702:	cf 90       	pop	r12
    2704:	bf 90       	pop	r11
    2706:	af 90       	pop	r10
    2708:	9f 90       	pop	r9
    270a:	8f 90       	pop	r8
    270c:	08 95       	ret

0000270e <STEPPER_wait_and_then>:
    270e:	cf 92       	push	r12
    2710:	df 92       	push	r13
    2712:	ef 92       	push	r14
    2714:	ff 92       	push	r15
    2716:	0f 93       	push	r16
    2718:	1f 93       	push	r17
    271a:	df 93       	push	r29
    271c:	cf 93       	push	r28
    271e:	cd b7       	in	r28, 0x3d	; 61
    2720:	de b7       	in	r29, 0x3e	; 62
    2722:	8b 85       	ldd	r24, Y+11	; 0x0b
    2724:	81 30       	cpi	r24, 0x01	; 1
    2726:	61 f0       	breq	.+24     	; 0x2740 <STEPPER_wait_and_then+0x32>
    2728:	81 30       	cpi	r24, 0x01	; 1
    272a:	18 f0       	brcs	.+6      	; 0x2732 <STEPPER_wait_and_then+0x24>
    272c:	82 30       	cpi	r24, 0x02	; 2
    272e:	a1 f5       	brne	.+104    	; 0x2798 <STEPPER_wait_and_then+0x8a>
    2730:	11 c0       	rjmp	.+34     	; 0x2754 <STEPPER_wait_and_then+0x46>
    2732:	ec 85       	ldd	r30, Y+12	; 0x0c
    2734:	fd 85       	ldd	r31, Y+13	; 0x0d
    2736:	80 91 60 04 	lds	r24, 0x0460
    273a:	88 23       	and	r24, r24
    273c:	e1 f3       	breq	.-8      	; 0x2736 <STEPPER_wait_and_then+0x28>
    273e:	06 c0       	rjmp	.+12     	; 0x274c <STEPPER_wait_and_then+0x3e>
    2740:	ec 85       	ldd	r30, Y+12	; 0x0c
    2742:	fd 85       	ldd	r31, Y+13	; 0x0d
    2744:	80 91 61 04 	lds	r24, 0x0461
    2748:	88 23       	and	r24, r24
    274a:	e1 f3       	breq	.-8      	; 0x2744 <STEPPER_wait_and_then+0x36>
    274c:	30 97       	sbiw	r30, 0x00	; 0
    274e:	21 f1       	breq	.+72     	; 0x2798 <STEPPER_wait_and_then+0x8a>
    2750:	09 95       	icall
    2752:	22 c0       	rjmp	.+68     	; 0x2798 <STEPPER_wait_and_then+0x8a>
    2754:	cc 84       	ldd	r12, Y+12	; 0x0c
    2756:	dd 84       	ldd	r13, Y+13	; 0x0d
    2758:	ee 84       	ldd	r14, Y+14	; 0x0e
    275a:	ff 84       	ldd	r15, Y+15	; 0x0f
    275c:	00 e0       	ldi	r16, 0x00	; 0
    275e:	10 e0       	ldi	r17, 0x00	; 0
    2760:	00 23       	and	r16, r16
    2762:	51 f4       	brne	.+20     	; 0x2778 <STEPPER_wait_and_then+0x6a>
    2764:	80 91 60 04 	lds	r24, 0x0460
    2768:	88 23       	and	r24, r24
    276a:	31 f0       	breq	.+12     	; 0x2778 <STEPPER_wait_and_then+0x6a>
    276c:	c1 14       	cp	r12, r1
    276e:	d1 04       	cpc	r13, r1
    2770:	11 f0       	breq	.+4      	; 0x2776 <STEPPER_wait_and_then+0x68>
    2772:	f6 01       	movw	r30, r12
    2774:	09 95       	icall
    2776:	01 e0       	ldi	r16, 0x01	; 1
    2778:	11 23       	and	r17, r17
    277a:	51 f4       	brne	.+20     	; 0x2790 <STEPPER_wait_and_then+0x82>
    277c:	80 91 61 04 	lds	r24, 0x0461
    2780:	88 23       	and	r24, r24
    2782:	31 f0       	breq	.+12     	; 0x2790 <STEPPER_wait_and_then+0x82>
    2784:	e1 14       	cp	r14, r1
    2786:	f1 04       	cpc	r15, r1
    2788:	11 f0       	breq	.+4      	; 0x278e <STEPPER_wait_and_then+0x80>
    278a:	f7 01       	movw	r30, r14
    278c:	09 95       	icall
    278e:	11 e0       	ldi	r17, 0x01	; 1
    2790:	00 23       	and	r16, r16
    2792:	31 f3       	breq	.-52     	; 0x2760 <STEPPER_wait_and_then+0x52>
    2794:	11 23       	and	r17, r17
    2796:	21 f3       	breq	.-56     	; 0x2760 <STEPPER_wait_and_then+0x52>
    2798:	cf 91       	pop	r28
    279a:	df 91       	pop	r29
    279c:	1f 91       	pop	r17
    279e:	0f 91       	pop	r16
    27a0:	ff 90       	pop	r15
    27a2:	ef 90       	pop	r14
    27a4:	df 90       	pop	r13
    27a6:	cf 90       	pop	r12
    27a8:	08 95       	ret

000027aa <SYS_get_state>:
    27aa:	e8 2f       	mov	r30, r24
    27ac:	f0 e0       	ldi	r31, 0x00	; 0
    27ae:	e3 31       	cpi	r30, 0x13	; 19
    27b0:	f1 05       	cpc	r31, r1
    27b2:	40 f4       	brcc	.+16     	; 0x27c4 <SYS_get_state+0x1a>
    27b4:	e2 5c       	subi	r30, 0xC2	; 194
    27b6:	ff 4f       	sbci	r31, 0xFF	; 255
    27b8:	ee 0f       	add	r30, r30
    27ba:	ff 1f       	adc	r31, r31
    27bc:	05 90       	lpm	r0, Z+
    27be:	f4 91       	lpm	r31, Z+
    27c0:	e0 2d       	mov	r30, r0
    27c2:	09 94       	ijmp
    27c4:	80 e0       	ldi	r24, 0x00	; 0
    27c6:	08 95       	ret
    27c8:	80 91 62 04 	lds	r24, 0x0462
    27cc:	08 95       	ret
    27ce:	80 91 63 04 	lds	r24, 0x0463
    27d2:	08 95       	ret
    27d4:	80 91 64 04 	lds	r24, 0x0464
    27d8:	08 95       	ret
    27da:	80 91 65 04 	lds	r24, 0x0465
    27de:	08 95       	ret
    27e0:	80 91 66 04 	lds	r24, 0x0466
    27e4:	08 95       	ret
    27e6:	80 91 68 04 	lds	r24, 0x0468
    27ea:	08 95       	ret
    27ec:	80 91 67 04 	lds	r24, 0x0467
    27f0:	08 95       	ret
    27f2:	80 91 69 04 	lds	r24, 0x0469
    27f6:	08 95       	ret
    27f8:	80 91 6a 04 	lds	r24, 0x046A
    27fc:	08 95       	ret
    27fe:	80 91 6b 04 	lds	r24, 0x046B
    2802:	08 95       	ret
    2804:	80 91 6c 04 	lds	r24, 0x046C
    2808:	08 95       	ret
    280a:	80 91 6d 04 	lds	r24, 0x046D
    280e:	08 95       	ret
    2810:	80 91 6e 04 	lds	r24, 0x046E
    2814:	08 95       	ret
    2816:	80 91 6f 04 	lds	r24, 0x046F
    281a:	08 95       	ret
    281c:	80 91 70 04 	lds	r24, 0x0470
    2820:	08 95       	ret
    2822:	80 91 71 04 	lds	r24, 0x0471
    2826:	08 95       	ret
    2828:	80 91 72 04 	lds	r24, 0x0472
    282c:	08 95       	ret
    282e:	80 91 73 04 	lds	r24, 0x0473
    2832:	08 95       	ret
    2834:	80 91 74 04 	lds	r24, 0x0474
    2838:	08 95       	ret

0000283a <SYS_set_state>:
    283a:	e8 2f       	mov	r30, r24
    283c:	f0 e0       	ldi	r31, 0x00	; 0
    283e:	e3 31       	cpi	r30, 0x13	; 19
    2840:	f1 05       	cpc	r31, r1
    2842:	08 f0       	brcs	.+2      	; 0x2846 <SYS_set_state+0xc>
    2844:	40 c0       	rjmp	.+128    	; 0x28c6 <SYS_set_state+0x8c>
    2846:	ef 5a       	subi	r30, 0xAF	; 175
    2848:	ff 4f       	sbci	r31, 0xFF	; 255
    284a:	ee 0f       	add	r30, r30
    284c:	ff 1f       	adc	r31, r31
    284e:	05 90       	lpm	r0, Z+
    2850:	f4 91       	lpm	r31, Z+
    2852:	e0 2d       	mov	r30, r0
    2854:	09 94       	ijmp
    2856:	60 93 62 04 	sts	0x0462, r22
    285a:	08 95       	ret
    285c:	60 93 63 04 	sts	0x0463, r22
    2860:	08 95       	ret
    2862:	60 93 64 04 	sts	0x0464, r22
    2866:	08 95       	ret
    2868:	60 93 65 04 	sts	0x0465, r22
    286c:	08 95       	ret
    286e:	60 93 66 04 	sts	0x0466, r22
    2872:	08 95       	ret
    2874:	60 93 68 04 	sts	0x0468, r22
    2878:	08 95       	ret
    287a:	60 93 67 04 	sts	0x0467, r22
    287e:	08 95       	ret
    2880:	60 93 69 04 	sts	0x0469, r22
    2884:	08 95       	ret
    2886:	60 93 6a 04 	sts	0x046A, r22
    288a:	08 95       	ret
    288c:	60 93 6b 04 	sts	0x046B, r22
    2890:	08 95       	ret
    2892:	60 93 6c 04 	sts	0x046C, r22
    2896:	08 95       	ret
    2898:	60 93 6d 04 	sts	0x046D, r22
    289c:	08 95       	ret
    289e:	60 93 6e 04 	sts	0x046E, r22
    28a2:	08 95       	ret
    28a4:	60 93 6f 04 	sts	0x046F, r22
    28a8:	08 95       	ret
    28aa:	60 93 70 04 	sts	0x0470, r22
    28ae:	08 95       	ret
    28b0:	60 93 71 04 	sts	0x0471, r22
    28b4:	08 95       	ret
    28b6:	60 93 72 04 	sts	0x0472, r22
    28ba:	08 95       	ret
    28bc:	60 93 73 04 	sts	0x0473, r22
    28c0:	08 95       	ret
    28c2:	60 93 72 04 	sts	0x0472, r22
    28c6:	08 95       	ret

000028c8 <ATTINY_get_sensors>:
    28c8:	0f 93       	push	r16
    28ca:	1f 93       	push	r17
    28cc:	81 e0       	ldi	r24, 0x01	; 1
    28ce:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    28d2:	81 30       	cpi	r24, 0x01	; 1
    28d4:	11 f0       	breq	.+4      	; 0x28da <ATTINY_get_sensors+0x12>
    28d6:	00 e0       	ldi	r16, 0x00	; 0
    28d8:	24 c0       	rjmp	.+72     	; 0x2922 <ATTINY_get_sensors+0x5a>
    28da:	87 e0       	ldi	r24, 0x07	; 7
    28dc:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <SPI_set_slave_addr>
    28e0:	82 e0       	ldi	r24, 0x02	; 2
    28e2:	6a e0       	ldi	r22, 0x0A	; 10
    28e4:	0e 94 03 10 	call	0x2006	; 0x2006 <SPI_transmit>
    28e8:	82 e0       	ldi	r24, 0x02	; 2
    28ea:	62 eb       	ldi	r22, 0xB2	; 178
    28ec:	0e 94 03 10 	call	0x2006	; 0x2006 <SPI_transmit>
    28f0:	18 ec       	ldi	r17, 0xC8	; 200
    28f2:	81 2f       	mov	r24, r17
    28f4:	8a 95       	dec	r24
    28f6:	f1 f7       	brne	.-4      	; 0x28f4 <ATTINY_get_sensors+0x2c>
    28f8:	82 e0       	ldi	r24, 0x02	; 2
    28fa:	60 e0       	ldi	r22, 0x00	; 0
    28fc:	0e 94 3f 1a 	call	0x347e	; 0x347e <SPI_receive>
    2900:	08 2f       	mov	r16, r24
    2902:	81 2f       	mov	r24, r17
    2904:	8a 95       	dec	r24
    2906:	f1 f7       	brne	.-4      	; 0x2904 <ATTINY_get_sensors+0x3c>
    2908:	82 e0       	ldi	r24, 0x02	; 2
    290a:	60 e0       	ldi	r22, 0x00	; 0
    290c:	0e 94 3f 1a 	call	0x347e	; 0x347e <SPI_receive>
    2910:	1a 95       	dec	r17
    2912:	f1 f7       	brne	.-4      	; 0x2910 <ATTINY_get_sensors+0x48>
    2914:	87 e0       	ldi	r24, 0x07	; 7
    2916:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <SPI_set_slave_addr>
    291a:	88 e8       	ldi	r24, 0x88	; 136
    291c:	93 e1       	ldi	r25, 0x13	; 19
    291e:	01 97       	sbiw	r24, 0x01	; 1
    2920:	f1 f7       	brne	.-4      	; 0x291e <ATTINY_get_sensors+0x56>
    2922:	80 2f       	mov	r24, r16
    2924:	1f 91       	pop	r17
    2926:	0f 91       	pop	r16
    2928:	08 95       	ret

0000292a <ATTINY_get_SW_state>:
    292a:	1f 93       	push	r17
    292c:	cf 93       	push	r28
    292e:	df 93       	push	r29
    2930:	18 2f       	mov	r17, r24
    2932:	80 91 cd 01 	lds	r24, 0x01CD
    2936:	88 23       	and	r24, r24
    2938:	41 f0       	breq	.+16     	; 0x294a <ATTINY_get_SW_state+0x20>
    293a:	80 91 d7 01 	lds	r24, 0x01D7
    293e:	88 23       	and	r24, r24
    2940:	99 f0       	breq	.+38     	; 0x2968 <ATTINY_get_SW_state+0x3e>
    2942:	10 92 cd 01 	sts	0x01CD, r1
    2946:	10 92 d7 01 	sts	0x01D7, r1
    294a:	0e 94 64 14 	call	0x28c8	; 0x28c8 <ATTINY_get_sensors>
    294e:	80 93 cc 01 	sts	0x01CC, r24
    2952:	81 ed       	ldi	r24, 0xD1	; 209
    2954:	91 e0       	ldi	r25, 0x01	; 1
    2956:	61 e0       	ldi	r22, 0x01	; 1
    2958:	40 e0       	ldi	r20, 0x00	; 0
    295a:	22 e3       	ldi	r18, 0x32	; 50
    295c:	30 e0       	ldi	r19, 0x00	; 0
    295e:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <TMRSRVC_new>
    2962:	81 e0       	ldi	r24, 0x01	; 1
    2964:	80 93 cd 01 	sts	0x01CD, r24
    2968:	90 91 cc 01 	lds	r25, 0x01CC
    296c:	a1 2f       	mov	r26, r17
    296e:	b0 e0       	ldi	r27, 0x00	; 0
    2970:	ed 01       	movw	r28, r26
    2972:	cd 5a       	subi	r28, 0xAD	; 173
    2974:	de 4f       	sbci	r29, 0xFE	; 254
    2976:	88 81       	ld	r24, Y
    2978:	88 23       	and	r24, r24
    297a:	69 f0       	breq	.+26     	; 0x2996 <ATTINY_get_SW_state+0x6c>
    297c:	fd 01       	movw	r30, r26
    297e:	ea 5a       	subi	r30, 0xAA	; 170
    2980:	fe 4f       	sbci	r31, 0xFE	; 254
    2982:	80 81       	ld	r24, Z
    2984:	98 23       	and	r25, r24
    2986:	c1 f0       	breq	.+48     	; 0x29b8 <ATTINY_get_SW_state+0x8e>
    2988:	fd 01       	movw	r30, r26
    298a:	e2 53       	subi	r30, 0x32	; 50
    298c:	fe 4f       	sbci	r31, 0xFE	; 254
    298e:	81 e0       	ldi	r24, 0x01	; 1
    2990:	80 83       	st	Z, r24
    2992:	18 82       	st	Y, r1
    2994:	11 c0       	rjmp	.+34     	; 0x29b8 <ATTINY_get_SW_state+0x8e>
    2996:	fd 01       	movw	r30, r26
    2998:	e2 53       	subi	r30, 0x32	; 50
    299a:	fe 4f       	sbci	r31, 0xFE	; 254
    299c:	80 81       	ld	r24, Z
    299e:	81 11       	cpse	r24, r1
    29a0:	10 82       	st	Z, r1
    29a2:	fd 01       	movw	r30, r26
    29a4:	ea 5a       	subi	r30, 0xAA	; 170
    29a6:	fe 4f       	sbci	r31, 0xFE	; 254
    29a8:	80 81       	ld	r24, Z
    29aa:	98 23       	and	r25, r24
    29ac:	29 f4       	brne	.+10     	; 0x29b8 <ATTINY_get_SW_state+0x8e>
    29ae:	fd 01       	movw	r30, r26
    29b0:	ed 5a       	subi	r30, 0xAD	; 173
    29b2:	fe 4f       	sbci	r31, 0xFE	; 254
    29b4:	81 e0       	ldi	r24, 0x01	; 1
    29b6:	80 83       	st	Z, r24
    29b8:	a2 53       	subi	r26, 0x32	; 50
    29ba:	be 4f       	sbci	r27, 0xFE	; 254
    29bc:	8c 91       	ld	r24, X
    29be:	df 91       	pop	r29
    29c0:	cf 91       	pop	r28
    29c2:	1f 91       	pop	r17
    29c4:	08 95       	ret

000029c6 <ATTINY_open>:
    29c6:	82 e0       	ldi	r24, 0x02	; 2
    29c8:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    29cc:	88 23       	and	r24, r24
    29ce:	19 f4       	brne	.+6      	; 0x29d6 <ATTINY_open+0x10>
    29d0:	90 e0       	ldi	r25, 0x00	; 0
    29d2:	82 e0       	ldi	r24, 0x02	; 2
    29d4:	08 95       	ret
    29d6:	10 92 90 04 	sts	0x0490, r1
    29da:	10 92 8f 04 	sts	0x048F, r1
    29de:	10 92 92 04 	sts	0x0492, r1
    29e2:	10 92 91 04 	sts	0x0491, r1
    29e6:	10 92 94 04 	sts	0x0494, r1
    29ea:	10 92 93 04 	sts	0x0493, r1
    29ee:	10 92 96 04 	sts	0x0496, r1
    29f2:	10 92 95 04 	sts	0x0495, r1
    29f6:	10 92 98 04 	sts	0x0498, r1
    29fa:	10 92 97 04 	sts	0x0497, r1
    29fe:	80 e9       	ldi	r24, 0x90	; 144
    2a00:	91 e0       	ldi	r25, 0x01	; 1
    2a02:	90 93 7c 04 	sts	0x047C, r25
    2a06:	80 93 7b 04 	sts	0x047B, r24
    2a0a:	90 93 7e 04 	sts	0x047E, r25
    2a0e:	80 93 7d 04 	sts	0x047D, r24
    2a12:	90 93 80 04 	sts	0x0480, r25
    2a16:	80 93 7f 04 	sts	0x047F, r24
    2a1a:	90 93 82 04 	sts	0x0482, r25
    2a1e:	80 93 81 04 	sts	0x0481, r24
    2a22:	90 93 84 04 	sts	0x0484, r25
    2a26:	80 93 83 04 	sts	0x0483, r24
    2a2a:	84 e3       	ldi	r24, 0x34	; 52
    2a2c:	98 e0       	ldi	r25, 0x08	; 8
    2a2e:	90 93 86 04 	sts	0x0486, r25
    2a32:	80 93 85 04 	sts	0x0485, r24
    2a36:	90 93 88 04 	sts	0x0488, r25
    2a3a:	80 93 87 04 	sts	0x0487, r24
    2a3e:	90 93 8a 04 	sts	0x048A, r25
    2a42:	80 93 89 04 	sts	0x0489, r24
    2a46:	90 93 8c 04 	sts	0x048C, r25
    2a4a:	80 93 8b 04 	sts	0x048B, r24
    2a4e:	90 93 8e 04 	sts	0x048E, r25
    2a52:	80 93 8d 04 	sts	0x048D, r24
    2a56:	81 e0       	ldi	r24, 0x01	; 1
    2a58:	61 e0       	ldi	r22, 0x01	; 1
    2a5a:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    2a5e:	91 e0       	ldi	r25, 0x01	; 1
    2a60:	81 e0       	ldi	r24, 0x01	; 1
    2a62:	08 95       	ret

00002a64 <TMRSRVC_delay>:
    2a64:	df 93       	push	r29
    2a66:	cf 93       	push	r28
    2a68:	cd b7       	in	r28, 0x3d	; 61
    2a6a:	de b7       	in	r29, 0x3e	; 62
    2a6c:	29 97       	sbiw	r28, 0x09	; 9
    2a6e:	0f b6       	in	r0, 0x3f	; 63
    2a70:	f8 94       	cli
    2a72:	de bf       	out	0x3e, r29	; 62
    2a74:	0f be       	out	0x3f, r0	; 63
    2a76:	cd bf       	out	0x3d, r28	; 61
    2a78:	9c 01       	movw	r18, r24
    2a7a:	ce 01       	movw	r24, r28
    2a7c:	01 96       	adiw	r24, 0x01	; 1
    2a7e:	61 e0       	ldi	r22, 0x01	; 1
    2a80:	40 e0       	ldi	r20, 0x00	; 0
    2a82:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <TMRSRVC_new>
    2a86:	98 2f       	mov	r25, r24
    2a88:	88 23       	and	r24, r24
    2a8a:	19 f4       	brne	.+6      	; 0x2a92 <TMRSRVC_delay+0x2e>
    2a8c:	8f 81       	ldd	r24, Y+7	; 0x07
    2a8e:	88 23       	and	r24, r24
    2a90:	e9 f3       	breq	.-6      	; 0x2a8c <TMRSRVC_delay+0x28>
    2a92:	89 2f       	mov	r24, r25
    2a94:	29 96       	adiw	r28, 0x09	; 9
    2a96:	0f b6       	in	r0, 0x3f	; 63
    2a98:	f8 94       	cli
    2a9a:	de bf       	out	0x3e, r29	; 62
    2a9c:	0f be       	out	0x3f, r0	; 63
    2a9e:	cd bf       	out	0x3d, r28	; 61
    2aa0:	cf 91       	pop	r28
    2aa2:	df 91       	pop	r29
    2aa4:	08 95       	ret

00002aa6 <TMRSRVC_new>:
    2aa6:	ef 92       	push	r14
    2aa8:	ff 92       	push	r15
    2aaa:	0f 93       	push	r16
    2aac:	1f 93       	push	r17
    2aae:	cf 93       	push	r28
    2ab0:	df 93       	push	r29
    2ab2:	ec 01       	movw	r28, r24
    2ab4:	f6 2e       	mov	r15, r22
    2ab6:	e4 2e       	mov	r14, r20
    2ab8:	89 01       	movw	r16, r18
    2aba:	88 e0       	ldi	r24, 0x08	; 8
    2abc:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    2ac0:	81 30       	cpi	r24, 0x01	; 1
    2ac2:	11 f0       	breq	.+4      	; 0x2ac8 <TMRSRVC_new+0x22>
    2ac4:	81 e0       	ldi	r24, 0x01	; 1
    2ac6:	26 c0       	rjmp	.+76     	; 0x2b14 <TMRSRVC_new+0x6e>
    2ac8:	84 e0       	ldi	r24, 0x04	; 4
    2aca:	90 e0       	ldi	r25, 0x00	; 0
    2acc:	0e 94 0f 29 	call	0x521e	; 0x521e <malloc>
    2ad0:	fc 01       	movw	r30, r24
    2ad2:	00 97       	sbiw	r24, 0x00	; 0
    2ad4:	11 f4       	brne	.+4      	; 0x2ada <TMRSRVC_new+0x34>
    2ad6:	82 e0       	ldi	r24, 0x02	; 2
    2ad8:	1d c0       	rjmp	.+58     	; 0x2b14 <TMRSRVC_new+0x6e>
    2ada:	f9 82       	std	Y+1, r15	; 0x01
    2adc:	f0 fc       	sbrc	r15, 0
    2ade:	1e 82       	std	Y+6, r1	; 0x06
    2ae0:	81 e0       	ldi	r24, 0x01	; 1
    2ae2:	e8 16       	cp	r14, r24
    2ae4:	19 f4       	brne	.+6      	; 0x2aec <TMRSRVC_new+0x46>
    2ae6:	89 81       	ldd	r24, Y+1	; 0x01
    2ae8:	84 60       	ori	r24, 0x04	; 4
    2aea:	89 83       	std	Y+1, r24	; 0x01
    2aec:	89 81       	ldd	r24, Y+1	; 0x01
    2aee:	88 60       	ori	r24, 0x08	; 8
    2af0:	89 83       	std	Y+1, r24	; 0x01
    2af2:	1b 83       	std	Y+3, r17	; 0x03
    2af4:	0a 83       	std	Y+2, r16	; 0x02
    2af6:	1d 83       	std	Y+5, r17	; 0x05
    2af8:	0c 83       	std	Y+4, r16	; 0x04
    2afa:	d1 83       	std	Z+1, r29	; 0x01
    2afc:	c0 83       	st	Z, r28
    2afe:	13 82       	std	Z+3, r1	; 0x03
    2b00:	12 82       	std	Z+2, r1	; 0x02
    2b02:	81 e0       	ldi	r24, 0x01	; 1
    2b04:	80 93 3a 02 	sts	0x023A, r24
    2b08:	cf 01       	movw	r24, r30
    2b0a:	0e 94 03 1c 	call	0x3806	; 0x3806 <TMRSRVC_insert>
    2b0e:	10 92 3a 02 	sts	0x023A, r1
    2b12:	80 e0       	ldi	r24, 0x00	; 0
    2b14:	df 91       	pop	r29
    2b16:	cf 91       	pop	r28
    2b18:	1f 91       	pop	r17
    2b1a:	0f 91       	pop	r16
    2b1c:	ff 90       	pop	r15
    2b1e:	ef 90       	pop	r14
    2b20:	08 95       	ret

00002b22 <I2C_MSTR_get>:
    2b22:	fc 01       	movw	r30, r24
    2b24:	80 91 9c 04 	lds	r24, 0x049C
    2b28:	81 30       	cpi	r24, 0x01	; 1
    2b2a:	11 f0       	breq	.+4      	; 0x2b30 <I2C_MSTR_get+0xe>
    2b2c:	85 e0       	ldi	r24, 0x05	; 5
    2b2e:	08 95       	ret
    2b30:	80 91 9d 04 	lds	r24, 0x049D
    2b34:	81 30       	cpi	r24, 0x01	; 1
    2b36:	11 f0       	breq	.+4      	; 0x2b3c <I2C_MSTR_get+0x1a>
    2b38:	8a e0       	ldi	r24, 0x0A	; 10
    2b3a:	08 95       	ret
    2b3c:	61 30       	cpi	r22, 0x01	; 1
    2b3e:	11 f4       	brne	.+4      	; 0x2b44 <I2C_MSTR_get+0x22>
    2b40:	84 ec       	ldi	r24, 0xC4	; 196
    2b42:	01 c0       	rjmp	.+2      	; 0x2b46 <I2C_MSTR_get+0x24>
    2b44:	84 e8       	ldi	r24, 0x84	; 132
    2b46:	80 93 bc 00 	sts	0x00BC, r24
    2b4a:	80 91 bc 00 	lds	r24, 0x00BC
    2b4e:	87 ff       	sbrs	r24, 7
    2b50:	fc cf       	rjmp	.-8      	; 0x2b4a <I2C_MSTR_get+0x28>
    2b52:	61 30       	cpi	r22, 0x01	; 1
    2b54:	31 f4       	brne	.+12     	; 0x2b62 <I2C_MSTR_get+0x40>
    2b56:	80 91 b9 00 	lds	r24, 0x00B9
    2b5a:	88 7f       	andi	r24, 0xF8	; 248
    2b5c:	80 35       	cpi	r24, 0x50	; 80
    2b5e:	59 f4       	brne	.+22     	; 0x2b76 <I2C_MSTR_get+0x54>
    2b60:	05 c0       	rjmp	.+10     	; 0x2b6c <I2C_MSTR_get+0x4a>
    2b62:	80 91 b9 00 	lds	r24, 0x00B9
    2b66:	88 7f       	andi	r24, 0xF8	; 248
    2b68:	88 35       	cpi	r24, 0x58	; 88
    2b6a:	29 f4       	brne	.+10     	; 0x2b76 <I2C_MSTR_get+0x54>
    2b6c:	80 91 bb 00 	lds	r24, 0x00BB
    2b70:	80 83       	st	Z, r24
    2b72:	80 e0       	ldi	r24, 0x00	; 0
    2b74:	08 95       	ret
    2b76:	82 e0       	ldi	r24, 0x02	; 2
    2b78:	08 95       	ret

00002b7a <I2C_MSTR_send>:
    2b7a:	98 2f       	mov	r25, r24
    2b7c:	80 91 9c 04 	lds	r24, 0x049C
    2b80:	81 30       	cpi	r24, 0x01	; 1
    2b82:	11 f0       	breq	.+4      	; 0x2b88 <I2C_MSTR_send+0xe>
    2b84:	85 e0       	ldi	r24, 0x05	; 5
    2b86:	08 95       	ret
    2b88:	80 91 9d 04 	lds	r24, 0x049D
    2b8c:	81 30       	cpi	r24, 0x01	; 1
    2b8e:	11 f0       	breq	.+4      	; 0x2b94 <I2C_MSTR_send+0x1a>
    2b90:	8a e0       	ldi	r24, 0x0A	; 10
    2b92:	08 95       	ret
    2b94:	90 93 bb 00 	sts	0x00BB, r25
    2b98:	84 e8       	ldi	r24, 0x84	; 132
    2b9a:	80 93 bc 00 	sts	0x00BC, r24
    2b9e:	80 91 bc 00 	lds	r24, 0x00BC
    2ba2:	87 ff       	sbrs	r24, 7
    2ba4:	fc cf       	rjmp	.-8      	; 0x2b9e <I2C_MSTR_send+0x24>
    2ba6:	80 91 b9 00 	lds	r24, 0x00B9
    2baa:	90 e0       	ldi	r25, 0x00	; 0
    2bac:	88 7f       	andi	r24, 0xF8	; 248
    2bae:	90 70       	andi	r25, 0x00	; 0
    2bb0:	88 32       	cpi	r24, 0x28	; 40
    2bb2:	91 05       	cpc	r25, r1
    2bb4:	21 f0       	breq	.+8      	; 0x2bbe <I2C_MSTR_send+0x44>
    2bb6:	c0 97       	sbiw	r24, 0x30	; 48
    2bb8:	21 f4       	brne	.+8      	; 0x2bc2 <I2C_MSTR_send+0x48>
    2bba:	83 e0       	ldi	r24, 0x03	; 3
    2bbc:	08 95       	ret
    2bbe:	80 e0       	ldi	r24, 0x00	; 0
    2bc0:	08 95       	ret
    2bc2:	8c e0       	ldi	r24, 0x0C	; 12
    2bc4:	08 95       	ret

00002bc6 <I2C_MSTR_start>:
    2bc6:	98 2f       	mov	r25, r24
    2bc8:	20 91 9c 04 	lds	r18, 0x049C
    2bcc:	21 30       	cpi	r18, 0x01	; 1
    2bce:	11 f0       	breq	.+4      	; 0x2bd4 <I2C_MSTR_start+0xe>
    2bd0:	85 e0       	ldi	r24, 0x05	; 5
    2bd2:	08 95       	ret
    2bd4:	80 91 9e 04 	lds	r24, 0x049E
    2bd8:	81 30       	cpi	r24, 0x01	; 1
    2bda:	11 f4       	brne	.+4      	; 0x2be0 <I2C_MSTR_start+0x1a>
    2bdc:	89 e0       	ldi	r24, 0x09	; 9
    2bde:	08 95       	ret
    2be0:	20 93 9d 04 	sts	0x049D, r18
    2be4:	84 ea       	ldi	r24, 0xA4	; 164
    2be6:	80 93 bc 00 	sts	0x00BC, r24
    2bea:	80 91 bc 00 	lds	r24, 0x00BC
    2bee:	87 ff       	sbrs	r24, 7
    2bf0:	fc cf       	rjmp	.-8      	; 0x2bea <I2C_MSTR_start+0x24>
    2bf2:	80 91 b9 00 	lds	r24, 0x00B9
    2bf6:	88 7f       	andi	r24, 0xF8	; 248
    2bf8:	88 30       	cpi	r24, 0x08	; 8
    2bfa:	39 f0       	breq	.+14     	; 0x2c0a <I2C_MSTR_start+0x44>
    2bfc:	80 91 b9 00 	lds	r24, 0x00B9
    2c00:	88 7f       	andi	r24, 0xF8	; 248
    2c02:	80 31       	cpi	r24, 0x10	; 16
    2c04:	11 f0       	breq	.+4      	; 0x2c0a <I2C_MSTR_start+0x44>
    2c06:	81 e0       	ldi	r24, 0x01	; 1
    2c08:	08 95       	ret
    2c0a:	61 30       	cpi	r22, 0x01	; 1
    2c0c:	19 f4       	brne	.+6      	; 0x2c14 <I2C_MSTR_start+0x4e>
    2c0e:	99 0f       	add	r25, r25
    2c10:	91 60       	ori	r25, 0x01	; 1
    2c12:	03 c0       	rjmp	.+6      	; 0x2c1a <I2C_MSTR_start+0x54>
    2c14:	66 23       	and	r22, r22
    2c16:	19 f4       	brne	.+6      	; 0x2c1e <I2C_MSTR_start+0x58>
    2c18:	99 0f       	add	r25, r25
    2c1a:	90 93 bb 00 	sts	0x00BB, r25
    2c1e:	84 e8       	ldi	r24, 0x84	; 132
    2c20:	80 93 bc 00 	sts	0x00BC, r24
    2c24:	80 91 bc 00 	lds	r24, 0x00BC
    2c28:	87 ff       	sbrs	r24, 7
    2c2a:	fc cf       	rjmp	.-8      	; 0x2c24 <I2C_MSTR_start+0x5e>
    2c2c:	61 30       	cpi	r22, 0x01	; 1
    2c2e:	31 f4       	brne	.+12     	; 0x2c3c <I2C_MSTR_start+0x76>
    2c30:	80 91 b9 00 	lds	r24, 0x00B9
    2c34:	88 7f       	andi	r24, 0xF8	; 248
    2c36:	80 34       	cpi	r24, 0x40	; 64
    2c38:	41 f4       	brne	.+16     	; 0x2c4a <I2C_MSTR_start+0x84>
    2c3a:	09 c0       	rjmp	.+18     	; 0x2c4e <I2C_MSTR_start+0x88>
    2c3c:	66 23       	and	r22, r22
    2c3e:	39 f4       	brne	.+14     	; 0x2c4e <I2C_MSTR_start+0x88>
    2c40:	80 91 b9 00 	lds	r24, 0x00B9
    2c44:	88 7f       	andi	r24, 0xF8	; 248
    2c46:	88 31       	cpi	r24, 0x18	; 24
    2c48:	11 f0       	breq	.+4      	; 0x2c4e <I2C_MSTR_start+0x88>
    2c4a:	82 e0       	ldi	r24, 0x02	; 2
    2c4c:	08 95       	ret
    2c4e:	80 e0       	ldi	r24, 0x00	; 0
    2c50:	08 95       	ret

00002c52 <I2C_MSTR_stop>:
    2c52:	80 91 9d 04 	lds	r24, 0x049D
    2c56:	81 30       	cpi	r24, 0x01	; 1
    2c58:	11 f0       	breq	.+4      	; 0x2c5e <I2C_MSTR_stop+0xc>
    2c5a:	8a e0       	ldi	r24, 0x0A	; 10
    2c5c:	08 95       	ret
    2c5e:	80 91 9f 04 	lds	r24, 0x049F
    2c62:	81 30       	cpi	r24, 0x01	; 1
    2c64:	29 f4       	brne	.+10     	; 0x2c70 <I2C_MSTR_stop+0x1e>
    2c66:	85 e9       	ldi	r24, 0x95	; 149
    2c68:	80 93 bc 00 	sts	0x00BC, r24
    2c6c:	80 e0       	ldi	r24, 0x00	; 0
    2c6e:	08 95       	ret
    2c70:	84 e9       	ldi	r24, 0x94	; 148
    2c72:	80 93 bc 00 	sts	0x00BC, r24
    2c76:	80 e0       	ldi	r24, 0x00	; 0
    2c78:	08 95       	ret

00002c7a <I2C_open>:
    2c7a:	82 e1       	ldi	r24, 0x12	; 18
    2c7c:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    2c80:	88 23       	and	r24, r24
    2c82:	b1 f4       	brne	.+44     	; 0x2cb0 <I2C_open+0x36>
    2c84:	10 92 9c 04 	sts	0x049C, r1
    2c88:	10 92 9d 04 	sts	0x049D, r1
    2c8c:	10 92 9e 04 	sts	0x049E, r1
    2c90:	10 92 9f 04 	sts	0x049F, r1
    2c94:	10 92 a0 04 	sts	0x04A0, r1
    2c98:	0e 94 9f 1c 	call	0x393e	; 0x393e <__I2C_init>
    2c9c:	87 e1       	ldi	r24, 0x17	; 23
    2c9e:	60 e0       	ldi	r22, 0x00	; 0
    2ca0:	0e 94 5b 16 	call	0x2cb6	; 0x2cb6 <I2C_set_BRG>
    2ca4:	0e 94 95 1c 	call	0x392a	; 0x392a <I2C_enable>
    2ca8:	82 e1       	ldi	r24, 0x12	; 18
    2caa:	61 e0       	ldi	r22, 0x01	; 1
    2cac:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    2cb0:	82 e1       	ldi	r24, 0x12	; 18
    2cb2:	90 e0       	ldi	r25, 0x00	; 0
    2cb4:	08 95       	ret

00002cb6 <I2C_set_BRG>:
    2cb6:	63 70       	andi	r22, 0x03	; 3
    2cb8:	60 93 b9 00 	sts	0x00B9, r22
    2cbc:	80 93 b8 00 	sts	0x00B8, r24
    2cc0:	81 e0       	ldi	r24, 0x01	; 1
    2cc2:	80 93 9c 04 	sts	0x049C, r24
    2cc6:	08 95       	ret

00002cc8 <__ADC_init>:
    2cc8:	8f e1       	ldi	r24, 0x1F	; 31
    2cca:	80 93 7c 00 	sts	0x007C, r24
    2cce:	ea e7       	ldi	r30, 0x7A	; 122
    2cd0:	f0 e0       	ldi	r31, 0x00	; 0
    2cd2:	87 e0       	ldi	r24, 0x07	; 7
    2cd4:	80 83       	st	Z, r24
    2cd6:	80 81       	ld	r24, Z
    2cd8:	80 68       	ori	r24, 0x80	; 128
    2cda:	80 83       	st	Z, r24
    2cdc:	08 95       	ret

00002cde <CBOT_init>:
    2cde:	0e 94 e0 1b 	call	0x37c0	; 0x37c0 <SYS_init>
    2ce2:	0e 94 a1 19 	call	0x3342	; 0x3342 <ATMEGA_open>
    2ce6:	0e 94 d1 18 	call	0x31a2	; 0x31a2 <ISR_open>
    2cea:	0e 94 6c 1c 	call	0x38d8	; 0x38d8 <TMRSRVC_open>
    2cee:	0e 94 06 1a 	call	0x340c	; 0x340c <SPI_open>
    2cf2:	0e 94 e3 14 	call	0x29c6	; 0x29c6 <ATTINY_open>
    2cf6:	78 94       	sei
    2cf8:	08 95       	ret

00002cfa <CBOT_ISR_init>:
    2cfa:	00 00       	nop
    2cfc:	08 95       	ret

00002cfe <__vector_16>:
    2cfe:	1f 92       	push	r1
    2d00:	0f 92       	push	r0
    2d02:	0f b6       	in	r0, 0x3f	; 63
    2d04:	0f 92       	push	r0
    2d06:	11 24       	eor	r1, r1
    2d08:	2f 93       	push	r18
    2d0a:	3f 93       	push	r19
    2d0c:	4f 93       	push	r20
    2d0e:	5f 93       	push	r21
    2d10:	6f 93       	push	r22
    2d12:	7f 93       	push	r23
    2d14:	8f 93       	push	r24
    2d16:	9f 93       	push	r25
    2d18:	af 93       	push	r26
    2d1a:	bf 93       	push	r27
    2d1c:	ef 93       	push	r30
    2d1e:	ff 93       	push	r31
    2d20:	e0 91 fa 01 	lds	r30, 0x01FA
    2d24:	f0 91 fb 01 	lds	r31, 0x01FB
    2d28:	30 97       	sbiw	r30, 0x00	; 0
    2d2a:	09 f0       	breq	.+2      	; 0x2d2e <__vector_16+0x30>
    2d2c:	09 95       	icall
    2d2e:	ff 91       	pop	r31
    2d30:	ef 91       	pop	r30
    2d32:	bf 91       	pop	r27
    2d34:	af 91       	pop	r26
    2d36:	9f 91       	pop	r25
    2d38:	8f 91       	pop	r24
    2d3a:	7f 91       	pop	r23
    2d3c:	6f 91       	pop	r22
    2d3e:	5f 91       	pop	r21
    2d40:	4f 91       	pop	r20
    2d42:	3f 91       	pop	r19
    2d44:	2f 91       	pop	r18
    2d46:	0f 90       	pop	r0
    2d48:	0f be       	out	0x3f, r0	; 63
    2d4a:	0f 90       	pop	r0
    2d4c:	1f 90       	pop	r1
    2d4e:	18 95       	reti

00002d50 <__vector_17>:
    2d50:	1f 92       	push	r1
    2d52:	0f 92       	push	r0
    2d54:	0f b6       	in	r0, 0x3f	; 63
    2d56:	0f 92       	push	r0
    2d58:	11 24       	eor	r1, r1
    2d5a:	2f 93       	push	r18
    2d5c:	3f 93       	push	r19
    2d5e:	4f 93       	push	r20
    2d60:	5f 93       	push	r21
    2d62:	6f 93       	push	r22
    2d64:	7f 93       	push	r23
    2d66:	8f 93       	push	r24
    2d68:	9f 93       	push	r25
    2d6a:	af 93       	push	r26
    2d6c:	bf 93       	push	r27
    2d6e:	ef 93       	push	r30
    2d70:	ff 93       	push	r31
    2d72:	e0 91 fc 01 	lds	r30, 0x01FC
    2d76:	f0 91 fd 01 	lds	r31, 0x01FD
    2d7a:	30 97       	sbiw	r30, 0x00	; 0
    2d7c:	09 f0       	breq	.+2      	; 0x2d80 <__vector_17+0x30>
    2d7e:	09 95       	icall
    2d80:	ff 91       	pop	r31
    2d82:	ef 91       	pop	r30
    2d84:	bf 91       	pop	r27
    2d86:	af 91       	pop	r26
    2d88:	9f 91       	pop	r25
    2d8a:	8f 91       	pop	r24
    2d8c:	7f 91       	pop	r23
    2d8e:	6f 91       	pop	r22
    2d90:	5f 91       	pop	r21
    2d92:	4f 91       	pop	r20
    2d94:	3f 91       	pop	r19
    2d96:	2f 91       	pop	r18
    2d98:	0f 90       	pop	r0
    2d9a:	0f be       	out	0x3f, r0	; 63
    2d9c:	0f 90       	pop	r0
    2d9e:	1f 90       	pop	r1
    2da0:	18 95       	reti

00002da2 <__vector_18>:
    2da2:	1f 92       	push	r1
    2da4:	0f 92       	push	r0
    2da6:	0f b6       	in	r0, 0x3f	; 63
    2da8:	0f 92       	push	r0
    2daa:	11 24       	eor	r1, r1
    2dac:	2f 93       	push	r18
    2dae:	3f 93       	push	r19
    2db0:	4f 93       	push	r20
    2db2:	5f 93       	push	r21
    2db4:	6f 93       	push	r22
    2db6:	7f 93       	push	r23
    2db8:	8f 93       	push	r24
    2dba:	9f 93       	push	r25
    2dbc:	af 93       	push	r26
    2dbe:	bf 93       	push	r27
    2dc0:	ef 93       	push	r30
    2dc2:	ff 93       	push	r31
    2dc4:	e0 91 fe 01 	lds	r30, 0x01FE
    2dc8:	f0 91 ff 01 	lds	r31, 0x01FF
    2dcc:	30 97       	sbiw	r30, 0x00	; 0
    2dce:	09 f0       	breq	.+2      	; 0x2dd2 <__vector_18+0x30>
    2dd0:	09 95       	icall
    2dd2:	ff 91       	pop	r31
    2dd4:	ef 91       	pop	r30
    2dd6:	bf 91       	pop	r27
    2dd8:	af 91       	pop	r26
    2dda:	9f 91       	pop	r25
    2ddc:	8f 91       	pop	r24
    2dde:	7f 91       	pop	r23
    2de0:	6f 91       	pop	r22
    2de2:	5f 91       	pop	r21
    2de4:	4f 91       	pop	r20
    2de6:	3f 91       	pop	r19
    2de8:	2f 91       	pop	r18
    2dea:	0f 90       	pop	r0
    2dec:	0f be       	out	0x3f, r0	; 63
    2dee:	0f 90       	pop	r0
    2df0:	1f 90       	pop	r1
    2df2:	18 95       	reti

00002df4 <__vector_9>:
    2df4:	1f 92       	push	r1
    2df6:	0f 92       	push	r0
    2df8:	0f b6       	in	r0, 0x3f	; 63
    2dfa:	0f 92       	push	r0
    2dfc:	11 24       	eor	r1, r1
    2dfe:	2f 93       	push	r18
    2e00:	3f 93       	push	r19
    2e02:	4f 93       	push	r20
    2e04:	5f 93       	push	r21
    2e06:	6f 93       	push	r22
    2e08:	7f 93       	push	r23
    2e0a:	8f 93       	push	r24
    2e0c:	9f 93       	push	r25
    2e0e:	af 93       	push	r26
    2e10:	bf 93       	push	r27
    2e12:	ef 93       	push	r30
    2e14:	ff 93       	push	r31
    2e16:	e0 91 ec 01 	lds	r30, 0x01EC
    2e1a:	f0 91 ed 01 	lds	r31, 0x01ED
    2e1e:	30 97       	sbiw	r30, 0x00	; 0
    2e20:	09 f0       	breq	.+2      	; 0x2e24 <__vector_9+0x30>
    2e22:	09 95       	icall
    2e24:	ff 91       	pop	r31
    2e26:	ef 91       	pop	r30
    2e28:	bf 91       	pop	r27
    2e2a:	af 91       	pop	r26
    2e2c:	9f 91       	pop	r25
    2e2e:	8f 91       	pop	r24
    2e30:	7f 91       	pop	r23
    2e32:	6f 91       	pop	r22
    2e34:	5f 91       	pop	r21
    2e36:	4f 91       	pop	r20
    2e38:	3f 91       	pop	r19
    2e3a:	2f 91       	pop	r18
    2e3c:	0f 90       	pop	r0
    2e3e:	0f be       	out	0x3f, r0	; 63
    2e40:	0f 90       	pop	r0
    2e42:	1f 90       	pop	r1
    2e44:	18 95       	reti

00002e46 <__vector_10>:
    2e46:	1f 92       	push	r1
    2e48:	0f 92       	push	r0
    2e4a:	0f b6       	in	r0, 0x3f	; 63
    2e4c:	0f 92       	push	r0
    2e4e:	11 24       	eor	r1, r1
    2e50:	2f 93       	push	r18
    2e52:	3f 93       	push	r19
    2e54:	4f 93       	push	r20
    2e56:	5f 93       	push	r21
    2e58:	6f 93       	push	r22
    2e5a:	7f 93       	push	r23
    2e5c:	8f 93       	push	r24
    2e5e:	9f 93       	push	r25
    2e60:	af 93       	push	r26
    2e62:	bf 93       	push	r27
    2e64:	ef 93       	push	r30
    2e66:	ff 93       	push	r31
    2e68:	e0 91 ee 01 	lds	r30, 0x01EE
    2e6c:	f0 91 ef 01 	lds	r31, 0x01EF
    2e70:	30 97       	sbiw	r30, 0x00	; 0
    2e72:	09 f0       	breq	.+2      	; 0x2e76 <__vector_10+0x30>
    2e74:	09 95       	icall
    2e76:	ff 91       	pop	r31
    2e78:	ef 91       	pop	r30
    2e7a:	bf 91       	pop	r27
    2e7c:	af 91       	pop	r26
    2e7e:	9f 91       	pop	r25
    2e80:	8f 91       	pop	r24
    2e82:	7f 91       	pop	r23
    2e84:	6f 91       	pop	r22
    2e86:	5f 91       	pop	r21
    2e88:	4f 91       	pop	r20
    2e8a:	3f 91       	pop	r19
    2e8c:	2f 91       	pop	r18
    2e8e:	0f 90       	pop	r0
    2e90:	0f be       	out	0x3f, r0	; 63
    2e92:	0f 90       	pop	r0
    2e94:	1f 90       	pop	r1
    2e96:	18 95       	reti

00002e98 <__vector_11>:
    2e98:	1f 92       	push	r1
    2e9a:	0f 92       	push	r0
    2e9c:	0f b6       	in	r0, 0x3f	; 63
    2e9e:	0f 92       	push	r0
    2ea0:	11 24       	eor	r1, r1
    2ea2:	2f 93       	push	r18
    2ea4:	3f 93       	push	r19
    2ea6:	4f 93       	push	r20
    2ea8:	5f 93       	push	r21
    2eaa:	6f 93       	push	r22
    2eac:	7f 93       	push	r23
    2eae:	8f 93       	push	r24
    2eb0:	9f 93       	push	r25
    2eb2:	af 93       	push	r26
    2eb4:	bf 93       	push	r27
    2eb6:	ef 93       	push	r30
    2eb8:	ff 93       	push	r31
    2eba:	e0 91 f0 01 	lds	r30, 0x01F0
    2ebe:	f0 91 f1 01 	lds	r31, 0x01F1
    2ec2:	30 97       	sbiw	r30, 0x00	; 0
    2ec4:	09 f0       	breq	.+2      	; 0x2ec8 <__vector_11+0x30>
    2ec6:	09 95       	icall
    2ec8:	ff 91       	pop	r31
    2eca:	ef 91       	pop	r30
    2ecc:	bf 91       	pop	r27
    2ece:	af 91       	pop	r26
    2ed0:	9f 91       	pop	r25
    2ed2:	8f 91       	pop	r24
    2ed4:	7f 91       	pop	r23
    2ed6:	6f 91       	pop	r22
    2ed8:	5f 91       	pop	r21
    2eda:	4f 91       	pop	r20
    2edc:	3f 91       	pop	r19
    2ede:	2f 91       	pop	r18
    2ee0:	0f 90       	pop	r0
    2ee2:	0f be       	out	0x3f, r0	; 63
    2ee4:	0f 90       	pop	r0
    2ee6:	1f 90       	pop	r1
    2ee8:	18 95       	reti

00002eea <__vector_13>:
    2eea:	1f 92       	push	r1
    2eec:	0f 92       	push	r0
    2eee:	0f b6       	in	r0, 0x3f	; 63
    2ef0:	0f 92       	push	r0
    2ef2:	11 24       	eor	r1, r1
    2ef4:	2f 93       	push	r18
    2ef6:	3f 93       	push	r19
    2ef8:	4f 93       	push	r20
    2efa:	5f 93       	push	r21
    2efc:	6f 93       	push	r22
    2efe:	7f 93       	push	r23
    2f00:	8f 93       	push	r24
    2f02:	9f 93       	push	r25
    2f04:	af 93       	push	r26
    2f06:	bf 93       	push	r27
    2f08:	ef 93       	push	r30
    2f0a:	ff 93       	push	r31
    2f0c:	e0 91 f4 01 	lds	r30, 0x01F4
    2f10:	f0 91 f5 01 	lds	r31, 0x01F5
    2f14:	30 97       	sbiw	r30, 0x00	; 0
    2f16:	09 f0       	breq	.+2      	; 0x2f1a <__vector_13+0x30>
    2f18:	09 95       	icall
    2f1a:	ff 91       	pop	r31
    2f1c:	ef 91       	pop	r30
    2f1e:	bf 91       	pop	r27
    2f20:	af 91       	pop	r26
    2f22:	9f 91       	pop	r25
    2f24:	8f 91       	pop	r24
    2f26:	7f 91       	pop	r23
    2f28:	6f 91       	pop	r22
    2f2a:	5f 91       	pop	r21
    2f2c:	4f 91       	pop	r20
    2f2e:	3f 91       	pop	r19
    2f30:	2f 91       	pop	r18
    2f32:	0f 90       	pop	r0
    2f34:	0f be       	out	0x3f, r0	; 63
    2f36:	0f 90       	pop	r0
    2f38:	1f 90       	pop	r1
    2f3a:	18 95       	reti

00002f3c <__vector_14>:
    2f3c:	1f 92       	push	r1
    2f3e:	0f 92       	push	r0
    2f40:	0f b6       	in	r0, 0x3f	; 63
    2f42:	0f 92       	push	r0
    2f44:	11 24       	eor	r1, r1
    2f46:	2f 93       	push	r18
    2f48:	3f 93       	push	r19
    2f4a:	4f 93       	push	r20
    2f4c:	5f 93       	push	r21
    2f4e:	6f 93       	push	r22
    2f50:	7f 93       	push	r23
    2f52:	8f 93       	push	r24
    2f54:	9f 93       	push	r25
    2f56:	af 93       	push	r26
    2f58:	bf 93       	push	r27
    2f5a:	ef 93       	push	r30
    2f5c:	ff 93       	push	r31
    2f5e:	e0 91 f6 01 	lds	r30, 0x01F6
    2f62:	f0 91 f7 01 	lds	r31, 0x01F7
    2f66:	30 97       	sbiw	r30, 0x00	; 0
    2f68:	09 f0       	breq	.+2      	; 0x2f6c <__vector_14+0x30>
    2f6a:	09 95       	icall
    2f6c:	ff 91       	pop	r31
    2f6e:	ef 91       	pop	r30
    2f70:	bf 91       	pop	r27
    2f72:	af 91       	pop	r26
    2f74:	9f 91       	pop	r25
    2f76:	8f 91       	pop	r24
    2f78:	7f 91       	pop	r23
    2f7a:	6f 91       	pop	r22
    2f7c:	5f 91       	pop	r21
    2f7e:	4f 91       	pop	r20
    2f80:	3f 91       	pop	r19
    2f82:	2f 91       	pop	r18
    2f84:	0f 90       	pop	r0
    2f86:	0f be       	out	0x3f, r0	; 63
    2f88:	0f 90       	pop	r0
    2f8a:	1f 90       	pop	r1
    2f8c:	18 95       	reti

00002f8e <__vector_12>:
    2f8e:	1f 92       	push	r1
    2f90:	0f 92       	push	r0
    2f92:	0f b6       	in	r0, 0x3f	; 63
    2f94:	0f 92       	push	r0
    2f96:	11 24       	eor	r1, r1
    2f98:	2f 93       	push	r18
    2f9a:	3f 93       	push	r19
    2f9c:	4f 93       	push	r20
    2f9e:	5f 93       	push	r21
    2fa0:	6f 93       	push	r22
    2fa2:	7f 93       	push	r23
    2fa4:	8f 93       	push	r24
    2fa6:	9f 93       	push	r25
    2fa8:	af 93       	push	r26
    2faa:	bf 93       	push	r27
    2fac:	ef 93       	push	r30
    2fae:	ff 93       	push	r31
    2fb0:	e0 91 f2 01 	lds	r30, 0x01F2
    2fb4:	f0 91 f3 01 	lds	r31, 0x01F3
    2fb8:	30 97       	sbiw	r30, 0x00	; 0
    2fba:	09 f0       	breq	.+2      	; 0x2fbe <__vector_12+0x30>
    2fbc:	09 95       	icall
    2fbe:	ff 91       	pop	r31
    2fc0:	ef 91       	pop	r30
    2fc2:	bf 91       	pop	r27
    2fc4:	af 91       	pop	r26
    2fc6:	9f 91       	pop	r25
    2fc8:	8f 91       	pop	r24
    2fca:	7f 91       	pop	r23
    2fcc:	6f 91       	pop	r22
    2fce:	5f 91       	pop	r21
    2fd0:	4f 91       	pop	r20
    2fd2:	3f 91       	pop	r19
    2fd4:	2f 91       	pop	r18
    2fd6:	0f 90       	pop	r0
    2fd8:	0f be       	out	0x3f, r0	; 63
    2fda:	0f 90       	pop	r0
    2fdc:	1f 90       	pop	r1
    2fde:	18 95       	reti

00002fe0 <__vector_15>:
    2fe0:	1f 92       	push	r1
    2fe2:	0f 92       	push	r0
    2fe4:	0f b6       	in	r0, 0x3f	; 63
    2fe6:	0f 92       	push	r0
    2fe8:	11 24       	eor	r1, r1
    2fea:	2f 93       	push	r18
    2fec:	3f 93       	push	r19
    2fee:	4f 93       	push	r20
    2ff0:	5f 93       	push	r21
    2ff2:	6f 93       	push	r22
    2ff4:	7f 93       	push	r23
    2ff6:	8f 93       	push	r24
    2ff8:	9f 93       	push	r25
    2ffa:	af 93       	push	r26
    2ffc:	bf 93       	push	r27
    2ffe:	ef 93       	push	r30
    3000:	ff 93       	push	r31
    3002:	e0 91 f8 01 	lds	r30, 0x01F8
    3006:	f0 91 f9 01 	lds	r31, 0x01F9
    300a:	30 97       	sbiw	r30, 0x00	; 0
    300c:	09 f0       	breq	.+2      	; 0x3010 <__vector_15+0x30>
    300e:	09 95       	icall
    3010:	ff 91       	pop	r31
    3012:	ef 91       	pop	r30
    3014:	bf 91       	pop	r27
    3016:	af 91       	pop	r26
    3018:	9f 91       	pop	r25
    301a:	8f 91       	pop	r24
    301c:	7f 91       	pop	r23
    301e:	6f 91       	pop	r22
    3020:	5f 91       	pop	r21
    3022:	4f 91       	pop	r20
    3024:	3f 91       	pop	r19
    3026:	2f 91       	pop	r18
    3028:	0f 90       	pop	r0
    302a:	0f be       	out	0x3f, r0	; 63
    302c:	0f 90       	pop	r0
    302e:	1f 90       	pop	r1
    3030:	18 95       	reti

00003032 <__vector_4>:
    3032:	1f 92       	push	r1
    3034:	0f 92       	push	r0
    3036:	0f b6       	in	r0, 0x3f	; 63
    3038:	0f 92       	push	r0
    303a:	11 24       	eor	r1, r1
    303c:	2f 93       	push	r18
    303e:	3f 93       	push	r19
    3040:	4f 93       	push	r20
    3042:	5f 93       	push	r21
    3044:	6f 93       	push	r22
    3046:	7f 93       	push	r23
    3048:	8f 93       	push	r24
    304a:	9f 93       	push	r25
    304c:	af 93       	push	r26
    304e:	bf 93       	push	r27
    3050:	ef 93       	push	r30
    3052:	ff 93       	push	r31
    3054:	e0 91 e2 01 	lds	r30, 0x01E2
    3058:	f0 91 e3 01 	lds	r31, 0x01E3
    305c:	30 97       	sbiw	r30, 0x00	; 0
    305e:	09 f0       	breq	.+2      	; 0x3062 <__vector_4+0x30>
    3060:	09 95       	icall
    3062:	ff 91       	pop	r31
    3064:	ef 91       	pop	r30
    3066:	bf 91       	pop	r27
    3068:	af 91       	pop	r26
    306a:	9f 91       	pop	r25
    306c:	8f 91       	pop	r24
    306e:	7f 91       	pop	r23
    3070:	6f 91       	pop	r22
    3072:	5f 91       	pop	r21
    3074:	4f 91       	pop	r20
    3076:	3f 91       	pop	r19
    3078:	2f 91       	pop	r18
    307a:	0f 90       	pop	r0
    307c:	0f be       	out	0x3f, r0	; 63
    307e:	0f 90       	pop	r0
    3080:	1f 90       	pop	r1
    3082:	18 95       	reti

00003084 <__vector_5>:
    3084:	1f 92       	push	r1
    3086:	0f 92       	push	r0
    3088:	0f b6       	in	r0, 0x3f	; 63
    308a:	0f 92       	push	r0
    308c:	11 24       	eor	r1, r1
    308e:	2f 93       	push	r18
    3090:	3f 93       	push	r19
    3092:	4f 93       	push	r20
    3094:	5f 93       	push	r21
    3096:	6f 93       	push	r22
    3098:	7f 93       	push	r23
    309a:	8f 93       	push	r24
    309c:	9f 93       	push	r25
    309e:	af 93       	push	r26
    30a0:	bf 93       	push	r27
    30a2:	ef 93       	push	r30
    30a4:	ff 93       	push	r31
    30a6:	e0 91 e4 01 	lds	r30, 0x01E4
    30aa:	f0 91 e5 01 	lds	r31, 0x01E5
    30ae:	30 97       	sbiw	r30, 0x00	; 0
    30b0:	09 f0       	breq	.+2      	; 0x30b4 <__vector_5+0x30>
    30b2:	09 95       	icall
    30b4:	ff 91       	pop	r31
    30b6:	ef 91       	pop	r30
    30b8:	bf 91       	pop	r27
    30ba:	af 91       	pop	r26
    30bc:	9f 91       	pop	r25
    30be:	8f 91       	pop	r24
    30c0:	7f 91       	pop	r23
    30c2:	6f 91       	pop	r22
    30c4:	5f 91       	pop	r21
    30c6:	4f 91       	pop	r20
    30c8:	3f 91       	pop	r19
    30ca:	2f 91       	pop	r18
    30cc:	0f 90       	pop	r0
    30ce:	0f be       	out	0x3f, r0	; 63
    30d0:	0f 90       	pop	r0
    30d2:	1f 90       	pop	r1
    30d4:	18 95       	reti

000030d6 <__vector_6>:
    30d6:	1f 92       	push	r1
    30d8:	0f 92       	push	r0
    30da:	0f b6       	in	r0, 0x3f	; 63
    30dc:	0f 92       	push	r0
    30de:	11 24       	eor	r1, r1
    30e0:	2f 93       	push	r18
    30e2:	3f 93       	push	r19
    30e4:	4f 93       	push	r20
    30e6:	5f 93       	push	r21
    30e8:	6f 93       	push	r22
    30ea:	7f 93       	push	r23
    30ec:	8f 93       	push	r24
    30ee:	9f 93       	push	r25
    30f0:	af 93       	push	r26
    30f2:	bf 93       	push	r27
    30f4:	ef 93       	push	r30
    30f6:	ff 93       	push	r31
    30f8:	e0 91 e6 01 	lds	r30, 0x01E6
    30fc:	f0 91 e7 01 	lds	r31, 0x01E7
    3100:	30 97       	sbiw	r30, 0x00	; 0
    3102:	09 f0       	breq	.+2      	; 0x3106 <__vector_6+0x30>
    3104:	09 95       	icall
    3106:	ff 91       	pop	r31
    3108:	ef 91       	pop	r30
    310a:	bf 91       	pop	r27
    310c:	af 91       	pop	r26
    310e:	9f 91       	pop	r25
    3110:	8f 91       	pop	r24
    3112:	7f 91       	pop	r23
    3114:	6f 91       	pop	r22
    3116:	5f 91       	pop	r21
    3118:	4f 91       	pop	r20
    311a:	3f 91       	pop	r19
    311c:	2f 91       	pop	r18
    311e:	0f 90       	pop	r0
    3120:	0f be       	out	0x3f, r0	; 63
    3122:	0f 90       	pop	r0
    3124:	1f 90       	pop	r1
    3126:	18 95       	reti

00003128 <__vector_7>:
    3128:	1f 92       	push	r1
    312a:	0f 92       	push	r0
    312c:	0f b6       	in	r0, 0x3f	; 63
    312e:	0f 92       	push	r0
    3130:	11 24       	eor	r1, r1
    3132:	2f 93       	push	r18
    3134:	3f 93       	push	r19
    3136:	4f 93       	push	r20
    3138:	5f 93       	push	r21
    313a:	6f 93       	push	r22
    313c:	7f 93       	push	r23
    313e:	8f 93       	push	r24
    3140:	9f 93       	push	r25
    3142:	af 93       	push	r26
    3144:	bf 93       	push	r27
    3146:	ef 93       	push	r30
    3148:	ff 93       	push	r31
    314a:	e0 91 e8 01 	lds	r30, 0x01E8
    314e:	f0 91 e9 01 	lds	r31, 0x01E9
    3152:	30 97       	sbiw	r30, 0x00	; 0
    3154:	09 f0       	breq	.+2      	; 0x3158 <__vector_7+0x30>
    3156:	09 95       	icall
    3158:	ff 91       	pop	r31
    315a:	ef 91       	pop	r30
    315c:	bf 91       	pop	r27
    315e:	af 91       	pop	r26
    3160:	9f 91       	pop	r25
    3162:	8f 91       	pop	r24
    3164:	7f 91       	pop	r23
    3166:	6f 91       	pop	r22
    3168:	5f 91       	pop	r21
    316a:	4f 91       	pop	r20
    316c:	3f 91       	pop	r19
    316e:	2f 91       	pop	r18
    3170:	0f 90       	pop	r0
    3172:	0f be       	out	0x3f, r0	; 63
    3174:	0f 90       	pop	r0
    3176:	1f 90       	pop	r1
    3178:	18 95       	reti

0000317a <ISR_attach>:
    317a:	e8 2f       	mov	r30, r24
    317c:	80 32       	cpi	r24, 0x20	; 32
    317e:	68 f4       	brcc	.+26     	; 0x319a <ISR_attach+0x20>
    3180:	80 51       	subi	r24, 0x10	; 16
    3182:	83 30       	cpi	r24, 0x03	; 3
    3184:	50 f0       	brcs	.+20     	; 0x319a <ISR_attach+0x20>
    3186:	f0 e0       	ldi	r31, 0x00	; 0
    3188:	ee 0f       	add	r30, r30
    318a:	ff 1f       	adc	r31, r31
    318c:	e6 52       	subi	r30, 0x26	; 38
    318e:	fe 4f       	sbci	r31, 0xFE	; 254
    3190:	20 81       	ld	r18, Z
    3192:	31 81       	ldd	r19, Z+1	; 0x01
    3194:	71 83       	std	Z+1, r23	; 0x01
    3196:	60 83       	st	Z, r22
    3198:	02 c0       	rjmp	.+4      	; 0x319e <ISR_attach+0x24>
    319a:	20 e0       	ldi	r18, 0x00	; 0
    319c:	30 e0       	ldi	r19, 0x00	; 0
    319e:	c9 01       	movw	r24, r18
    31a0:	08 95       	ret

000031a2 <ISR_open>:
    31a2:	80 e1       	ldi	r24, 0x10	; 16
    31a4:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    31a8:	88 23       	and	r24, r24
    31aa:	61 f4       	brne	.+24     	; 0x31c4 <ISR_open+0x22>
    31ac:	ea ed       	ldi	r30, 0xDA	; 218
    31ae:	f1 e0       	ldi	r31, 0x01	; 1
    31b0:	11 92       	st	Z+, r1
    31b2:	11 92       	st	Z+, r1
    31b4:	82 e0       	ldi	r24, 0x02	; 2
    31b6:	ea 31       	cpi	r30, 0x1A	; 26
    31b8:	f8 07       	cpc	r31, r24
    31ba:	d1 f7       	brne	.-12     	; 0x31b0 <ISR_open+0xe>
    31bc:	80 e1       	ldi	r24, 0x10	; 16
    31be:	61 e0       	ldi	r22, 0x01	; 1
    31c0:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    31c4:	80 e1       	ldi	r24, 0x10	; 16
    31c6:	91 e0       	ldi	r25, 0x01	; 1
    31c8:	08 95       	ret

000031ca <__LCD_init>:
    31ca:	23 9a       	sbi	0x04, 3	; 4
    31cc:	08 95       	ret

000031ce <__LCD_putchar>:
    31ce:	ff 92       	push	r15
    31d0:	0f 93       	push	r16
    31d2:	1f 93       	push	r17
    31d4:	cf 93       	push	r28
    31d6:	df 93       	push	r29
    31d8:	f8 2e       	mov	r15, r24
    31da:	8a e0       	ldi	r24, 0x0A	; 10
    31dc:	f8 16       	cp	r15, r24
    31de:	b1 f0       	breq	.+44     	; 0x320c <__LCD_putchar+0x3e>
    31e0:	8f 15       	cp	r24, r15
    31e2:	48 f0       	brcs	.+18     	; 0x31f6 <__LCD_putchar+0x28>
    31e4:	e8 e0       	ldi	r30, 0x08	; 8
    31e6:	fe 16       	cp	r15, r30
    31e8:	b9 f1       	breq	.+110    	; 0x3258 <__LCD_putchar+0x8a>
    31ea:	ef 15       	cp	r30, r15
    31ec:	38 f1       	brcs	.+78     	; 0x323c <__LCD_putchar+0x6e>
    31ee:	f7 e0       	ldi	r31, 0x07	; 7
    31f0:	ff 16       	cp	r15, r31
    31f2:	51 f4       	brne	.+20     	; 0x3208 <__LCD_putchar+0x3a>
    31f4:	3b c0       	rjmp	.+118    	; 0x326c <__LCD_putchar+0x9e>
    31f6:	8d e0       	ldi	r24, 0x0D	; 13
    31f8:	f8 16       	cp	r15, r24
    31fa:	59 f0       	breq	.+22     	; 0x3212 <__LCD_putchar+0x44>
    31fc:	eb e1       	ldi	r30, 0x1B	; 27
    31fe:	fe 16       	cp	r15, r30
    3200:	89 f0       	breq	.+34     	; 0x3224 <__LCD_putchar+0x56>
    3202:	fc e0       	ldi	r31, 0x0C	; 12
    3204:	ff 16       	cp	r15, r31
    3206:	41 f0       	breq	.+16     	; 0x3218 <__LCD_putchar+0x4a>
    3208:	01 e0       	ldi	r16, 0x01	; 1
    320a:	41 c0       	rjmp	.+130    	; 0x328e <__LCD_putchar+0xc0>
    320c:	10 92 75 04 	sts	0x0475, r1
    3210:	03 c0       	rjmp	.+6      	; 0x3218 <__LCD_putchar+0x4a>
    3212:	10 92 75 04 	sts	0x0475, r1
    3216:	3a c0       	rjmp	.+116    	; 0x328c <__LCD_putchar+0xbe>
    3218:	80 91 76 04 	lds	r24, 0x0476
    321c:	81 50       	subi	r24, 0x01	; 1
    321e:	80 93 76 04 	sts	0x0476, r24
    3222:	34 c0       	rjmp	.+104    	; 0x328c <__LCD_putchar+0xbe>
    3224:	0e 94 97 0e 	call	0x1d2e	; 0x1d2e <LCD_clear>
    3228:	14 c0       	rjmp	.+40     	; 0x3252 <__LCD_putchar+0x84>
    322a:	80 e0       	ldi	r24, 0x00	; 0
    322c:	61 e0       	ldi	r22, 0x01	; 1
    322e:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    3232:	80 91 75 04 	lds	r24, 0x0475
    3236:	8f 5f       	subi	r24, 0xFF	; 255
    3238:	80 93 75 04 	sts	0x0475, r24
    323c:	80 91 75 04 	lds	r24, 0x0475
    3240:	87 ff       	sbrs	r24, 7
    3242:	f3 cf       	rjmp	.-26     	; 0x322a <__LCD_putchar+0x5c>
    3244:	10 92 75 04 	sts	0x0475, r1
    3248:	80 91 76 04 	lds	r24, 0x0476
    324c:	81 50       	subi	r24, 0x01	; 1
    324e:	80 93 76 04 	sts	0x0476, r24
    3252:	00 e0       	ldi	r16, 0x00	; 0
    3254:	11 e0       	ldi	r17, 0x01	; 1
    3256:	1c c0       	rjmp	.+56     	; 0x3290 <__LCD_putchar+0xc2>
    3258:	80 91 75 04 	lds	r24, 0x0475
    325c:	88 23       	and	r24, r24
    325e:	b1 f0       	breq	.+44     	; 0x328c <__LCD_putchar+0xbe>
    3260:	80 91 75 04 	lds	r24, 0x0475
    3264:	86 50       	subi	r24, 0x06	; 6
    3266:	80 93 75 04 	sts	0x0475, r24
    326a:	10 c0       	rjmp	.+32     	; 0x328c <__LCD_putchar+0xbe>
    326c:	81 e0       	ldi	r24, 0x01	; 1
    326e:	0e 94 a3 10 	call	0x2146	; 0x2146 <SPKR_open>
    3272:	64 ef       	ldi	r22, 0xF4	; 244
    3274:	71 e0       	ldi	r23, 0x01	; 1
    3276:	80 e0       	ldi	r24, 0x00	; 0
    3278:	90 e0       	ldi	r25, 0x00	; 0
    327a:	4d e7       	ldi	r20, 0x7D	; 125
    327c:	50 e0       	ldi	r21, 0x00	; 0
    327e:	24 e6       	ldi	r18, 0x64	; 100
    3280:	30 e0       	ldi	r19, 0x00	; 0
    3282:	0e 94 01 1b 	call	0x3602	; 0x3602 <SPKR_play_beep>
    3286:	81 e0       	ldi	r24, 0x01	; 1
    3288:	0e 94 cd 1a 	call	0x359a	; 0x359a <SPKR_close>
    328c:	00 e0       	ldi	r16, 0x00	; 0
    328e:	10 e0       	ldi	r17, 0x00	; 0
    3290:	80 91 76 04 	lds	r24, 0x0476
    3294:	60 91 75 04 	lds	r22, 0x0475
    3298:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <LCD_set_PGC_addr>
    329c:	00 23       	and	r16, r16
    329e:	51 f1       	breq	.+84     	; 0x32f4 <__LCD_putchar+0x126>
    32a0:	85 e0       	ldi	r24, 0x05	; 5
    32a2:	f8 9e       	mul	r15, r24
    32a4:	c0 01       	movw	r24, r0
    32a6:	11 24       	eor	r1, r1
    32a8:	ec 01       	movw	r28, r24
    32aa:	c3 55       	subi	r28, 0x53	; 83
    32ac:	df 4f       	sbci	r29, 0xFF	; 255
    32ae:	8c 01       	movw	r16, r24
    32b0:	0e 54       	subi	r16, 0x4E	; 78
    32b2:	1f 4f       	sbci	r17, 0xFF	; 255
    32b4:	fe 01       	movw	r30, r28
    32b6:	84 91       	lpm	r24, Z+
    32b8:	61 e0       	ldi	r22, 0x01	; 1
    32ba:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    32be:	21 96       	adiw	r28, 0x01	; 1
    32c0:	c0 17       	cp	r28, r16
    32c2:	d1 07       	cpc	r29, r17
    32c4:	b9 f7       	brne	.-18     	; 0x32b4 <__LCD_putchar+0xe6>
    32c6:	80 e0       	ldi	r24, 0x00	; 0
    32c8:	61 e0       	ldi	r22, 0x01	; 1
    32ca:	0e 94 76 0f 	call	0x1eec	; 0x1eec <LCD_write>
    32ce:	80 91 75 04 	lds	r24, 0x0475
    32d2:	8a 5f       	subi	r24, 0xFA	; 250
    32d4:	80 93 75 04 	sts	0x0475, r24
    32d8:	80 91 75 04 	lds	r24, 0x0475
    32dc:	90 e0       	ldi	r25, 0x00	; 0
    32de:	8c 37       	cpi	r24, 0x7C	; 124
    32e0:	91 05       	cpc	r25, r1
    32e2:	3c f0       	brlt	.+14     	; 0x32f2 <__LCD_putchar+0x124>
    32e4:	10 92 75 04 	sts	0x0475, r1
    32e8:	80 91 76 04 	lds	r24, 0x0476
    32ec:	81 50       	subi	r24, 0x01	; 1
    32ee:	80 93 76 04 	sts	0x0476, r24
    32f2:	11 e0       	ldi	r17, 0x01	; 1
    32f4:	80 91 76 04 	lds	r24, 0x0476
    32f8:	83 70       	andi	r24, 0x03	; 3
    32fa:	80 93 76 04 	sts	0x0476, r24
    32fe:	11 30       	cpi	r17, 0x01	; 1
    3300:	59 f4       	brne	.+22     	; 0x3318 <__LCD_putchar+0x14a>
    3302:	80 91 77 04 	lds	r24, 0x0477
    3306:	81 30       	cpi	r24, 0x01	; 1
    3308:	39 f4       	brne	.+14     	; 0x3318 <__LCD_putchar+0x14a>
    330a:	e0 91 78 04 	lds	r30, 0x0478
    330e:	f0 91 79 04 	lds	r31, 0x0479
    3312:	30 97       	sbiw	r30, 0x00	; 0
    3314:	09 f0       	breq	.+2      	; 0x3318 <__LCD_putchar+0x14a>
    3316:	09 95       	icall
    3318:	80 e0       	ldi	r24, 0x00	; 0
    331a:	90 e0       	ldi	r25, 0x00	; 0
    331c:	df 91       	pop	r29
    331e:	cf 91       	pop	r28
    3320:	1f 91       	pop	r17
    3322:	0f 91       	pop	r16
    3324:	ff 90       	pop	r15
    3326:	08 95       	ret

00003328 <__LED_clr_pattern>:
    3328:	85 fd       	sbrc	r24, 5
    332a:	5d 98       	cbi	0x0b, 5	; 11
    332c:	86 fd       	sbrc	r24, 6
    332e:	5e 98       	cbi	0x0b, 6	; 11
    3330:	08 95       	ret

00003332 <__LED_init>:
    3332:	55 9a       	sbi	0x0a, 5	; 10
    3334:	56 9a       	sbi	0x0a, 6	; 10
    3336:	08 95       	ret

00003338 <__LED_set_pattern>:
    3338:	85 fd       	sbrc	r24, 5
    333a:	5d 9a       	sbi	0x0b, 5	; 11
    333c:	86 fd       	sbrc	r24, 6
    333e:	5e 9a       	sbi	0x0b, 6	; 11
    3340:	08 95       	ret

00003342 <ATMEGA_open>:
    3342:	80 e0       	ldi	r24, 0x00	; 0
    3344:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    3348:	88 23       	and	r24, r24
    334a:	51 f4       	brne	.+20     	; 0x3360 <ATMEGA_open+0x1e>
    334c:	f8 94       	cli
    334e:	0e 94 b3 1c 	call	0x3966	; 0x3966 <__ATMEGA_init>
    3352:	81 e0       	ldi	r24, 0x01	; 1
    3354:	0e 94 b3 19 	call	0x3366	; 0x3366 <ATMEGA_set_clk_mode>
    3358:	80 e0       	ldi	r24, 0x00	; 0
    335a:	61 e0       	ldi	r22, 0x01	; 1
    335c:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    3360:	80 e0       	ldi	r24, 0x00	; 0
    3362:	91 e0       	ldi	r25, 0x01	; 1
    3364:	08 95       	ret

00003366 <ATMEGA_set_clk_mode>:
    3366:	81 30       	cpi	r24, 0x01	; 1
    3368:	49 f0       	breq	.+18     	; 0x337c <ATMEGA_set_clk_mode+0x16>
    336a:	f8 94       	cli
    336c:	81 30       	cpi	r24, 0x01	; 1
    336e:	20 f1       	brcs	.+72     	; 0x33b8 <ATMEGA_set_clk_mode+0x52>
    3370:	82 30       	cpi	r24, 0x02	; 2
    3372:	b1 f0       	breq	.+44     	; 0x33a0 <ATMEGA_set_clk_mode+0x3a>
    3374:	83 30       	cpi	r24, 0x03	; 3
    3376:	09 f0       	breq	.+2      	; 0x337a <ATMEGA_set_clk_mode+0x14>
    3378:	45 c0       	rjmp	.+138    	; 0x3404 <ATMEGA_set_clk_mode+0x9e>
    337a:	17 c0       	rjmp	.+46     	; 0x33aa <ATMEGA_set_clk_mode+0x44>
    337c:	2c 9a       	sbi	0x05, 4	; 5
    337e:	80 e8       	ldi	r24, 0x80	; 128
    3380:	80 93 61 00 	sts	0x0061, r24
    3384:	10 92 61 00 	sts	0x0061, r1
    3388:	80 e0       	ldi	r24, 0x00	; 0
    338a:	90 e0       	ldi	r25, 0x00	; 0
    338c:	00 00       	nop
    338e:	01 96       	adiw	r24, 0x01	; 1
    3390:	88 32       	cpi	r24, 0x28	; 40
    3392:	91 05       	cpc	r25, r1
    3394:	d9 f7       	brne	.-10     	; 0x338c <ATMEGA_set_clk_mode+0x26>
    3396:	10 92 68 00 	sts	0x0068, r1
    339a:	10 92 6b 00 	sts	0x006B, r1
    339e:	08 95       	ret
    33a0:	80 e8       	ldi	r24, 0x80	; 128
    33a2:	80 93 61 00 	sts	0x0061, r24
    33a6:	83 e0       	ldi	r24, 0x03	; 3
    33a8:	04 c0       	rjmp	.+8      	; 0x33b2 <ATMEGA_set_clk_mode+0x4c>
    33aa:	80 e8       	ldi	r24, 0x80	; 128
    33ac:	80 93 61 00 	sts	0x0061, r24
    33b0:	88 e0       	ldi	r24, 0x08	; 8
    33b2:	80 93 61 00 	sts	0x0061, r24
    33b6:	28 c0       	rjmp	.+80     	; 0x3408 <ATMEGA_set_clk_mode+0xa2>
    33b8:	80 e0       	ldi	r24, 0x00	; 0
    33ba:	90 e0       	ldi	r25, 0x00	; 0
    33bc:	00 00       	nop
    33be:	01 96       	adiw	r24, 0x01	; 1
    33c0:	2d e6       	ldi	r18, 0x6D	; 109
    33c2:	80 36       	cpi	r24, 0x60	; 96
    33c4:	92 07       	cpc	r25, r18
    33c6:	d1 f7       	brne	.-12     	; 0x33bc <ATMEGA_set_clk_mode+0x56>
    33c8:	2c 98       	cbi	0x05, 4	; 5
    33ca:	80 e0       	ldi	r24, 0x00	; 0
    33cc:	90 e0       	ldi	r25, 0x00	; 0
    33ce:	00 00       	nop
    33d0:	01 96       	adiw	r24, 0x01	; 1
    33d2:	2d e6       	ldi	r18, 0x6D	; 109
    33d4:	80 36       	cpi	r24, 0x60	; 96
    33d6:	92 07       	cpc	r25, r18
    33d8:	d1 f7       	brne	.-12     	; 0x33ce <ATMEGA_set_clk_mode+0x68>
    33da:	10 92 7a 00 	sts	0x007A, r1
    33de:	8f ef       	ldi	r24, 0xFF	; 255
    33e0:	80 93 64 00 	sts	0x0064, r24
    33e4:	80 91 68 00 	lds	r24, 0x0068
    33e8:	81 60       	ori	r24, 0x01	; 1
    33ea:	80 93 68 00 	sts	0x0068, r24
    33ee:	80 91 6b 00 	lds	r24, 0x006B
    33f2:	84 60       	ori	r24, 0x04	; 4
    33f4:	80 93 6b 00 	sts	0x006B, r24
    33f8:	78 94       	sei
    33fa:	83 b7       	in	r24, 0x33	; 51
    33fc:	81 60       	ori	r24, 0x01	; 1
    33fe:	83 bf       	out	0x33, r24	; 51
    3400:	88 95       	sleep
    3402:	08 95       	ret
    3404:	82 30       	cpi	r24, 0x02	; 2
    3406:	08 f0       	brcs	.+2      	; 0x340a <ATMEGA_set_clk_mode+0xa4>
    3408:	78 94       	sei
    340a:	08 95       	ret

0000340c <SPI_open>:
    340c:	0f 93       	push	r16
    340e:	1f 93       	push	r17
    3410:	0e 94 df 1c 	call	0x39be	; 0x39be <__SPI_init>
    3414:	80 e0       	ldi	r24, 0x00	; 0
    3416:	6e ec       	ldi	r22, 0xCE	; 206
    3418:	7c e1       	ldi	r23, 0x1C	; 28
    341a:	0e 94 51 1a 	call	0x34a2	; 0x34a2 <SPI_set_config_func>
    341e:	81 e0       	ldi	r24, 0x01	; 1
    3420:	66 ec       	ldi	r22, 0xC6	; 198
    3422:	7c e1       	ldi	r23, 0x1C	; 28
    3424:	0e 94 51 1a 	call	0x34a2	; 0x34a2 <SPI_set_config_func>
    3428:	82 e0       	ldi	r24, 0x02	; 2
    342a:	6e eb       	ldi	r22, 0xBE	; 190
    342c:	7c e1       	ldi	r23, 0x1C	; 28
    342e:	0e 94 51 1a 	call	0x34a2	; 0x34a2 <SPI_set_config_func>
    3432:	86 e0       	ldi	r24, 0x06	; 6
    3434:	66 ed       	ldi	r22, 0xD6	; 214
    3436:	7c e1       	ldi	r23, 0x1C	; 28
    3438:	0e 94 51 1a 	call	0x34a2	; 0x34a2 <SPI_set_config_func>
    343c:	06 eb       	ldi	r16, 0xB6	; 182
    343e:	1c e1       	ldi	r17, 0x1C	; 28
    3440:	83 e0       	ldi	r24, 0x03	; 3
    3442:	b8 01       	movw	r22, r16
    3444:	0e 94 51 1a 	call	0x34a2	; 0x34a2 <SPI_set_config_func>
    3448:	84 e0       	ldi	r24, 0x04	; 4
    344a:	b8 01       	movw	r22, r16
    344c:	0e 94 51 1a 	call	0x34a2	; 0x34a2 <SPI_set_config_func>
    3450:	85 e0       	ldi	r24, 0x05	; 5
    3452:	b8 01       	movw	r22, r16
    3454:	0e 94 51 1a 	call	0x34a2	; 0x34a2 <SPI_set_config_func>
    3458:	87 e0       	ldi	r24, 0x07	; 7
    345a:	b8 01       	movw	r22, r16
    345c:	0e 94 51 1a 	call	0x34a2	; 0x34a2 <SPI_set_config_func>
    3460:	82 e0       	ldi	r24, 0x02	; 2
    3462:	61 e0       	ldi	r22, 0x01	; 1
    3464:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    3468:	8f ef       	ldi	r24, 0xFF	; 255
    346a:	80 93 7a 04 	sts	0x047A, r24
    346e:	87 e0       	ldi	r24, 0x07	; 7
    3470:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <SPI_set_slave_addr>
    3474:	82 e0       	ldi	r24, 0x02	; 2
    3476:	91 e0       	ldi	r25, 0x01	; 1
    3478:	1f 91       	pop	r17
    347a:	0f 91       	pop	r16
    347c:	08 95       	ret

0000347e <SPI_receive>:
    347e:	1f 93       	push	r17
    3480:	16 2f       	mov	r17, r22
    3482:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <SPI_set_slave_addr>
    3486:	82 e0       	ldi	r24, 0x02	; 2
    3488:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    348c:	81 30       	cpi	r24, 0x01	; 1
    348e:	11 f0       	breq	.+4      	; 0x3494 <SPI_receive+0x16>
    3490:	80 e0       	ldi	r24, 0x00	; 0
    3492:	05 c0       	rjmp	.+10     	; 0x349e <SPI_receive+0x20>
    3494:	1e bd       	out	0x2e, r17	; 46
    3496:	0d b4       	in	r0, 0x2d	; 45
    3498:	07 fe       	sbrs	r0, 7
    349a:	fd cf       	rjmp	.-6      	; 0x3496 <SPI_receive+0x18>
    349c:	8e b5       	in	r24, 0x2e	; 46
    349e:	1f 91       	pop	r17
    34a0:	08 95       	ret

000034a2 <SPI_set_config_func>:
    34a2:	e8 2f       	mov	r30, r24
    34a4:	f0 e0       	ldi	r31, 0x00	; 0
    34a6:	ee 0f       	add	r30, r30
    34a8:	ff 1f       	adc	r31, r31
    34aa:	e6 5e       	subi	r30, 0xE6	; 230
    34ac:	fd 4f       	sbci	r31, 0xFD	; 253
    34ae:	71 83       	std	Z+1, r23	; 0x01
    34b0:	60 83       	st	Z, r22
    34b2:	08 95       	ret

000034b4 <__SPKR_TIMER1_COMPA_vect>:
    34b4:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <SPKR_clk>
    34b8:	08 95       	ret

000034ba <SPKR_clk>:
    34ba:	80 91 2c 02 	lds	r24, 0x022C
    34be:	90 91 2d 02 	lds	r25, 0x022D
    34c2:	a0 91 2e 02 	lds	r26, 0x022E
    34c6:	b0 91 2f 02 	lds	r27, 0x022F
    34ca:	20 91 30 02 	lds	r18, 0x0230
    34ce:	30 91 31 02 	lds	r19, 0x0231
    34d2:	40 91 32 02 	lds	r20, 0x0232
    34d6:	50 91 33 02 	lds	r21, 0x0233
    34da:	28 0f       	add	r18, r24
    34dc:	39 1f       	adc	r19, r25
    34de:	4a 1f       	adc	r20, r26
    34e0:	5b 1f       	adc	r21, r27
    34e2:	20 93 2c 02 	sts	0x022C, r18
    34e6:	30 93 2d 02 	sts	0x022D, r19
    34ea:	40 93 2e 02 	sts	0x022E, r20
    34ee:	50 93 2f 02 	sts	0x022F, r21
    34f2:	80 91 2c 02 	lds	r24, 0x022C
    34f6:	90 91 2d 02 	lds	r25, 0x022D
    34fa:	a0 91 2e 02 	lds	r26, 0x022E
    34fe:	b0 91 2f 02 	lds	r27, 0x022F
    3502:	88 51       	subi	r24, 0x18	; 24
    3504:	96 4f       	sbci	r25, 0xF6	; 246
    3506:	a0 40       	sbci	r26, 0x00	; 0
    3508:	b0 40       	sbci	r27, 0x00	; 0
    350a:	bc f0       	brlt	.+46     	; 0x353a <SPKR_clk+0x80>
    350c:	8b b1       	in	r24, 0x0b	; 11
    350e:	80 58       	subi	r24, 0x80	; 128
    3510:	8b b9       	out	0x0b, r24	; 11
    3512:	80 91 2c 02 	lds	r24, 0x022C
    3516:	90 91 2d 02 	lds	r25, 0x022D
    351a:	a0 91 2e 02 	lds	r26, 0x022E
    351e:	b0 91 2f 02 	lds	r27, 0x022F
    3522:	88 51       	subi	r24, 0x18	; 24
    3524:	96 4f       	sbci	r25, 0xF6	; 246
    3526:	a0 40       	sbci	r26, 0x00	; 0
    3528:	b0 40       	sbci	r27, 0x00	; 0
    352a:	80 93 2c 02 	sts	0x022C, r24
    352e:	90 93 2d 02 	sts	0x022D, r25
    3532:	a0 93 2e 02 	sts	0x022E, r26
    3536:	b0 93 2f 02 	sts	0x022F, r27
    353a:	08 95       	ret

0000353c <__SPKR_close_beep_mode>:
    353c:	8a e0       	ldi	r24, 0x0A	; 10
    353e:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    3542:	81 30       	cpi	r24, 0x01	; 1
    3544:	41 f4       	brne	.+16     	; 0x3556 <__SPKR_close_beep_mode+0x1a>
    3546:	0e 94 fd 1c 	call	0x39fa	; 0x39fa <__SPKR_close>
    354a:	10 92 2b 02 	sts	0x022B, r1
    354e:	8a e0       	ldi	r24, 0x0A	; 10
    3550:	60 e0       	ldi	r22, 0x00	; 0
    3552:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    3556:	08 95       	ret

00003558 <__SPKR_close_tone_mode>:
    3558:	89 e0       	ldi	r24, 0x09	; 9
    355a:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    355e:	81 30       	cpi	r24, 0x01	; 1
    3560:	d9 f4       	brne	.+54     	; 0x3598 <__SPKR_close_tone_mode+0x40>
    3562:	80 91 2a 02 	lds	r24, 0x022A
    3566:	88 23       	and	r24, r24
    3568:	11 f0       	breq	.+4      	; 0x356e <__SPKR_close_tone_mode+0x16>
    356a:	0e 94 4e 1b 	call	0x369c	; 0x369c <__SPKR_stop>
    356e:	82 e0       	ldi	r24, 0x02	; 2
    3570:	0e 94 fd 1c 	call	0x39fa	; 0x39fa <__SPKR_close>
    3574:	80 91 38 02 	lds	r24, 0x0238
    3578:	90 91 39 02 	lds	r25, 0x0239
    357c:	00 97       	sbiw	r24, 0x00	; 0
    357e:	31 f0       	breq	.+12     	; 0x358c <__SPKR_close_tone_mode+0x34>
    3580:	0e 94 bc 29 	call	0x5378	; 0x5378 <free>
    3584:	10 92 39 02 	sts	0x0239, r1
    3588:	10 92 38 02 	sts	0x0238, r1
    358c:	10 92 2a 02 	sts	0x022A, r1
    3590:	89 e0       	ldi	r24, 0x09	; 9
    3592:	60 e0       	ldi	r22, 0x00	; 0
    3594:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    3598:	08 95       	ret

0000359a <SPKR_close>:
    359a:	81 30       	cpi	r24, 0x01	; 1
    359c:	29 f0       	breq	.+10     	; 0x35a8 <SPKR_close+0xe>
    359e:	82 30       	cpi	r24, 0x02	; 2
    35a0:	29 f4       	brne	.+10     	; 0x35ac <SPKR_close+0x12>
    35a2:	0e 94 ac 1a 	call	0x3558	; 0x3558 <__SPKR_close_tone_mode>
    35a6:	08 95       	ret
    35a8:	0e 94 9e 1a 	call	0x353c	; 0x353c <__SPKR_close_beep_mode>
    35ac:	08 95       	ret

000035ae <__SPKR_init>:
    35ae:	98 2f       	mov	r25, r24
    35b0:	80 91 2a 02 	lds	r24, 0x022A
    35b4:	88 23       	and	r24, r24
    35b6:	31 f4       	brne	.+12     	; 0x35c4 <__SPKR_init+0x16>
    35b8:	80 91 2b 02 	lds	r24, 0x022B
    35bc:	88 23       	and	r24, r24
    35be:	11 f4       	brne	.+4      	; 0x35c4 <__SPKR_init+0x16>
    35c0:	57 9a       	sbi	0x0a, 7	; 10
    35c2:	5f 98       	cbi	0x0b, 7	; 11
    35c4:	80 91 2a 02 	lds	r24, 0x022A
    35c8:	88 23       	and	r24, r24
    35ca:	d1 f4       	brne	.+52     	; 0x3600 <__SPKR_init+0x52>
    35cc:	92 30       	cpi	r25, 0x02	; 2
    35ce:	c1 f4       	brne	.+48     	; 0x3600 <__SPKR_init+0x52>
    35d0:	10 92 80 00 	sts	0x0080, r1
    35d4:	10 92 81 00 	sts	0x0081, r1
    35d8:	80 91 81 00 	lds	r24, 0x0081
    35dc:	88 60       	ori	r24, 0x08	; 8
    35de:	80 93 81 00 	sts	0x0081, r24
    35e2:	80 91 81 00 	lds	r24, 0x0081
    35e6:	81 60       	ori	r24, 0x01	; 1
    35e8:	80 93 81 00 	sts	0x0081, r24
    35ec:	10 92 85 00 	sts	0x0085, r1
    35f0:	10 92 84 00 	sts	0x0084, r1
    35f4:	81 e0       	ldi	r24, 0x01	; 1
    35f6:	80 93 89 00 	sts	0x0089, r24
    35fa:	80 e9       	ldi	r24, 0x90	; 144
    35fc:	80 93 88 00 	sts	0x0088, r24
    3600:	08 95       	ret

00003602 <SPKR_play_beep>:
    3602:	8f 92       	push	r8
    3604:	9f 92       	push	r9
    3606:	af 92       	push	r10
    3608:	bf 92       	push	r11
    360a:	cf 92       	push	r12
    360c:	df 92       	push	r13
    360e:	ef 92       	push	r14
    3610:	ff 92       	push	r15
    3612:	0f 93       	push	r16
    3614:	1f 93       	push	r17
    3616:	cf 93       	push	r28
    3618:	df 93       	push	r29
    361a:	4b 01       	movw	r8, r22
    361c:	5c 01       	movw	r10, r24
    361e:	ea 01       	movw	r28, r20
    3620:	b9 01       	movw	r22, r18
    3622:	21 15       	cp	r18, r1
    3624:	31 05       	cpc	r19, r1
    3626:	39 f1       	breq	.+78     	; 0x3676 <SPKR_play_beep+0x74>
    3628:	9e 01       	movw	r18, r28
    362a:	44 27       	eor	r20, r20
    362c:	37 fd       	sbrc	r19, 7
    362e:	40 95       	com	r20
    3630:	54 2f       	mov	r21, r20
    3632:	65 36       	cpi	r22, 0x65	; 101
    3634:	71 05       	cpc	r23, r1
    3636:	10 f0       	brcs	.+4      	; 0x363c <SPKR_play_beep+0x3a>
    3638:	64 e6       	ldi	r22, 0x64	; 100
    363a:	70 e0       	ldi	r23, 0x00	; 0
    363c:	80 e0       	ldi	r24, 0x00	; 0
    363e:	90 e0       	ldi	r25, 0x00	; 0
    3640:	0e 94 70 28 	call	0x50e0	; 0x50e0 <__mulsi3>
    3644:	24 e6       	ldi	r18, 0x64	; 100
    3646:	30 e0       	ldi	r19, 0x00	; 0
    3648:	40 e0       	ldi	r20, 0x00	; 0
    364a:	50 e0       	ldi	r21, 0x00	; 0
    364c:	0e 94 a2 28 	call	0x5144	; 0x5144 <__udivmodsi4>
    3650:	79 01       	movw	r14, r18
    3652:	8a 01       	movw	r16, r20
    3654:	c5 01       	movw	r24, r10
    3656:	b4 01       	movw	r22, r8
    3658:	0e 94 e6 1c 	call	0x39cc	; 0x39cc <SPKR_beep>
    365c:	c7 01       	movw	r24, r14
    365e:	0e 94 32 15 	call	0x2a64	; 0x2a64 <TMRSRVC_delay>
    3662:	60 e0       	ldi	r22, 0x00	; 0
    3664:	70 e0       	ldi	r23, 0x00	; 0
    3666:	80 e0       	ldi	r24, 0x00	; 0
    3668:	90 e0       	ldi	r25, 0x00	; 0
    366a:	0e 94 e6 1c 	call	0x39cc	; 0x39cc <SPKR_beep>
    366e:	ce 01       	movw	r24, r28
    3670:	8e 19       	sub	r24, r14
    3672:	9f 09       	sbc	r25, r15
    3674:	04 c0       	rjmp	.+8      	; 0x367e <SPKR_play_beep+0x7c>
    3676:	41 15       	cp	r20, r1
    3678:	51 05       	cpc	r21, r1
    367a:	19 f0       	breq	.+6      	; 0x3682 <SPKR_play_beep+0x80>
    367c:	ca 01       	movw	r24, r20
    367e:	0e 94 32 15 	call	0x2a64	; 0x2a64 <TMRSRVC_delay>
    3682:	df 91       	pop	r29
    3684:	cf 91       	pop	r28
    3686:	1f 91       	pop	r17
    3688:	0f 91       	pop	r16
    368a:	ff 90       	pop	r15
    368c:	ef 90       	pop	r14
    368e:	df 90       	pop	r13
    3690:	cf 90       	pop	r12
    3692:	bf 90       	pop	r11
    3694:	af 90       	pop	r10
    3696:	9f 90       	pop	r9
    3698:	8f 90       	pop	r8
    369a:	08 95       	ret

0000369c <__SPKR_stop>:
    369c:	ef e6       	ldi	r30, 0x6F	; 111
    369e:	f0 e0       	ldi	r31, 0x00	; 0
    36a0:	80 81       	ld	r24, Z
    36a2:	8d 7f       	andi	r24, 0xFD	; 253
    36a4:	80 83       	st	Z, r24
    36a6:	08 95       	ret

000036a8 <STEPPER_go>:
    36a8:	98 2f       	mov	r25, r24
    36aa:	81 e0       	ldi	r24, 0x01	; 1
    36ac:	80 93 5f 04 	sts	0x045F, r24
    36b0:	91 30       	cpi	r25, 0x01	; 1
    36b2:	51 f0       	breq	.+20     	; 0x36c8 <STEPPER_go+0x20>
    36b4:	91 30       	cpi	r25, 0x01	; 1
    36b6:	18 f0       	brcs	.+6      	; 0x36be <STEPPER_go+0x16>
    36b8:	92 30       	cpi	r25, 0x02	; 2
    36ba:	41 f4       	brne	.+16     	; 0x36cc <STEPPER_go+0x24>
    36bc:	03 c0       	rjmp	.+6      	; 0x36c4 <STEPPER_go+0x1c>
    36be:	10 92 47 04 	sts	0x0447, r1
    36c2:	04 c0       	rjmp	.+8      	; 0x36cc <STEPPER_go+0x24>
    36c4:	10 92 47 04 	sts	0x0447, r1
    36c8:	10 92 48 04 	sts	0x0448, r1
    36cc:	10 92 5f 04 	sts	0x045F, r1
    36d0:	08 95       	ret

000036d2 <__STEPPER_init>:
    36d2:	3a 9a       	sbi	0x07, 2	; 7
    36d4:	3b 9a       	sbi	0x07, 3	; 7
    36d6:	3c 9a       	sbi	0x07, 4	; 7
    36d8:	3d 9a       	sbi	0x07, 5	; 7
    36da:	3e 9a       	sbi	0x07, 6	; 7
    36dc:	3f 9a       	sbi	0x07, 7	; 7
    36de:	88 b1       	in	r24, 0x08	; 8
    36e0:	83 70       	andi	r24, 0x03	; 3
    36e2:	88 b9       	out	0x08, r24	; 8
    36e4:	08 95       	ret

000036e6 <STEPPER_set_steps>:
    36e6:	98 2f       	mov	r25, r24
    36e8:	81 e0       	ldi	r24, 0x01	; 1
    36ea:	80 93 5f 04 	sts	0x045F, r24
    36ee:	91 30       	cpi	r25, 0x01	; 1
    36f0:	71 f0       	breq	.+28     	; 0x370e <STEPPER_set_steps+0x28>
    36f2:	91 30       	cpi	r25, 0x01	; 1
    36f4:	18 f0       	brcs	.+6      	; 0x36fc <STEPPER_set_steps+0x16>
    36f6:	92 30       	cpi	r25, 0x02	; 2
    36f8:	71 f4       	brne	.+28     	; 0x3716 <STEPPER_set_steps+0x30>
    36fa:	05 c0       	rjmp	.+10     	; 0x3706 <STEPPER_set_steps+0x20>
    36fc:	70 93 3c 04 	sts	0x043C, r23
    3700:	60 93 3b 04 	sts	0x043B, r22
    3704:	08 c0       	rjmp	.+16     	; 0x3716 <STEPPER_set_steps+0x30>
    3706:	70 93 3c 04 	sts	0x043C, r23
    370a:	60 93 3b 04 	sts	0x043B, r22
    370e:	70 93 3e 04 	sts	0x043E, r23
    3712:	60 93 3d 04 	sts	0x043D, r22
    3716:	10 92 5f 04 	sts	0x045F, r1
    371a:	08 95       	ret

0000371c <STEPPER_set_stop_mode>:
    371c:	98 2f       	mov	r25, r24
    371e:	81 e0       	ldi	r24, 0x01	; 1
    3720:	80 93 5f 04 	sts	0x045F, r24
    3724:	91 30       	cpi	r25, 0x01	; 1
    3726:	51 f0       	breq	.+20     	; 0x373c <STEPPER_set_stop_mode+0x20>
    3728:	91 30       	cpi	r25, 0x01	; 1
    372a:	18 f0       	brcs	.+6      	; 0x3732 <STEPPER_set_stop_mode+0x16>
    372c:	92 30       	cpi	r25, 0x02	; 2
    372e:	41 f4       	brne	.+16     	; 0x3740 <STEPPER_set_stop_mode+0x24>
    3730:	03 c0       	rjmp	.+6      	; 0x3738 <STEPPER_set_stop_mode+0x1c>
    3732:	60 93 49 04 	sts	0x0449, r22
    3736:	04 c0       	rjmp	.+8      	; 0x3740 <STEPPER_set_stop_mode+0x24>
    3738:	60 93 49 04 	sts	0x0449, r22
    373c:	60 93 4a 04 	sts	0x044A, r22
    3740:	10 92 5f 04 	sts	0x045F, r1
    3744:	08 95       	ret

00003746 <STEPPER_setup_decels>:
    3746:	0f 93       	push	r16
    3748:	1f 93       	push	r17
    374a:	cf 93       	push	r28
    374c:	df 93       	push	r29
    374e:	eb 01       	movw	r28, r22
    3750:	8a 01       	movw	r16, r20
    3752:	81 30       	cpi	r24, 0x01	; 1
    3754:	01 f1       	breq	.+64     	; 0x3796 <STEPPER_setup_decels+0x50>
    3756:	81 30       	cpi	r24, 0x01	; 1
    3758:	18 f0       	brcs	.+6      	; 0x3760 <STEPPER_setup_decels+0x1a>
    375a:	82 30       	cpi	r24, 0x02	; 2
    375c:	61 f5       	brne	.+88     	; 0x37b6 <STEPPER_setup_decels+0x70>
    375e:	0d c0       	rjmp	.+26     	; 0x377a <STEPPER_setup_decels+0x34>
    3760:	80 91 33 04 	lds	r24, 0x0433
    3764:	90 91 34 04 	lds	r25, 0x0434
    3768:	89 2b       	or	r24, r25
    376a:	11 f0       	breq	.+4      	; 0x3770 <STEPPER_setup_decels+0x2a>
    376c:	80 e0       	ldi	r24, 0x00	; 0
    376e:	1a c0       	rjmp	.+52     	; 0x37a4 <STEPPER_setup_decels+0x5e>
    3770:	10 92 40 04 	sts	0x0440, r1
    3774:	10 92 3f 04 	sts	0x043F, r1
    3778:	1e c0       	rjmp	.+60     	; 0x37b6 <STEPPER_setup_decels+0x70>
    377a:	80 91 33 04 	lds	r24, 0x0433
    377e:	90 91 34 04 	lds	r25, 0x0434
    3782:	89 2b       	or	r24, r25
    3784:	21 f0       	breq	.+8      	; 0x378e <STEPPER_setup_decels+0x48>
    3786:	80 e0       	ldi	r24, 0x00	; 0
    3788:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <STEPPER_set_decel_step_values>
    378c:	04 c0       	rjmp	.+8      	; 0x3796 <STEPPER_setup_decels+0x50>
    378e:	10 92 40 04 	sts	0x0440, r1
    3792:	10 92 3f 04 	sts	0x043F, r1
    3796:	80 91 35 04 	lds	r24, 0x0435
    379a:	90 91 36 04 	lds	r25, 0x0436
    379e:	89 2b       	or	r24, r25
    37a0:	31 f0       	breq	.+12     	; 0x37ae <STEPPER_setup_decels+0x68>
    37a2:	81 e0       	ldi	r24, 0x01	; 1
    37a4:	be 01       	movw	r22, r28
    37a6:	a8 01       	movw	r20, r16
    37a8:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <STEPPER_set_decel_step_values>
    37ac:	04 c0       	rjmp	.+8      	; 0x37b6 <STEPPER_setup_decels+0x70>
    37ae:	10 92 42 04 	sts	0x0442, r1
    37b2:	10 92 41 04 	sts	0x0441, r1
    37b6:	df 91       	pop	r29
    37b8:	cf 91       	pop	r28
    37ba:	1f 91       	pop	r17
    37bc:	0f 91       	pop	r16
    37be:	08 95       	ret

000037c0 <SYS_init>:
    37c0:	10 92 62 04 	sts	0x0462, r1
    37c4:	10 92 63 04 	sts	0x0463, r1
    37c8:	10 92 67 04 	sts	0x0467, r1
    37cc:	10 92 64 04 	sts	0x0464, r1
    37d0:	10 92 66 04 	sts	0x0466, r1
    37d4:	10 92 68 04 	sts	0x0468, r1
    37d8:	10 92 69 04 	sts	0x0469, r1
    37dc:	10 92 6a 04 	sts	0x046A, r1
    37e0:	10 92 6b 04 	sts	0x046B, r1
    37e4:	10 92 6c 04 	sts	0x046C, r1
    37e8:	10 92 6d 04 	sts	0x046D, r1
    37ec:	10 92 6e 04 	sts	0x046E, r1
    37f0:	10 92 6f 04 	sts	0x046F, r1
    37f4:	10 92 70 04 	sts	0x0470, r1
    37f8:	10 92 71 04 	sts	0x0471, r1
    37fc:	10 92 72 04 	sts	0x0472, r1
    3800:	10 92 73 04 	sts	0x0473, r1
    3804:	08 95       	ret

00003806 <TMRSRVC_insert>:
    3806:	cf 92       	push	r12
    3808:	df 92       	push	r13
    380a:	ef 92       	push	r14
    380c:	ff 92       	push	r15
    380e:	0f 93       	push	r16
    3810:	1f 93       	push	r17
    3812:	cf 93       	push	r28
    3814:	df 93       	push	r29
    3816:	ec 01       	movw	r28, r24
    3818:	80 91 99 04 	lds	r24, 0x0499
    381c:	88 23       	and	r24, r24
    381e:	39 f4       	brne	.+14     	; 0x382e <TMRSRVC_insert+0x28>
    3820:	d0 93 9b 04 	sts	0x049B, r29
    3824:	c0 93 9a 04 	sts	0x049A, r28
    3828:	0e 94 91 1c 	call	0x3922	; 0x3922 <TMRSRVC_start>
    382c:	47 c0       	rjmp	.+142    	; 0x38bc <TMRSRVC_insert+0xb6>
    382e:	c0 90 9a 04 	lds	r12, 0x049A
    3832:	d0 90 9b 04 	lds	r13, 0x049B
    3836:	00 e0       	ldi	r16, 0x00	; 0
    3838:	10 e0       	ldi	r17, 0x00	; 0
    383a:	ee 24       	eor	r14, r14
    383c:	ff 24       	eor	r15, r15
    383e:	37 c0       	rjmp	.+110    	; 0x38ae <TMRSRVC_insert+0xa8>
    3840:	a8 81       	ld	r26, Y
    3842:	b9 81       	ldd	r27, Y+1	; 0x01
    3844:	fd 01       	movw	r30, r26
    3846:	64 81       	ldd	r22, Z+4	; 0x04
    3848:	75 81       	ldd	r23, Z+5	; 0x05
    384a:	f6 01       	movw	r30, r12
    384c:	40 81       	ld	r20, Z
    384e:	51 81       	ldd	r21, Z+1	; 0x01
    3850:	fa 01       	movw	r30, r20
    3852:	84 81       	ldd	r24, Z+4	; 0x04
    3854:	95 81       	ldd	r25, Z+5	; 0x05
    3856:	9b 01       	movw	r18, r22
    3858:	28 1b       	sub	r18, r24
    385a:	39 0b       	sbc	r19, r25
    385c:	37 ff       	sbrs	r19, 7
    385e:	0f c0       	rjmp	.+30     	; 0x387e <TMRSRVC_insert+0x78>
    3860:	86 1b       	sub	r24, r22
    3862:	97 0b       	sbc	r25, r23
    3864:	95 83       	std	Z+5, r25	; 0x05
    3866:	84 83       	std	Z+4, r24	; 0x04
    3868:	db 82       	std	Y+3, r13	; 0x03
    386a:	ca 82       	std	Y+2, r12	; 0x02
    386c:	01 2b       	or	r16, r17
    386e:	29 f4       	brne	.+10     	; 0x387a <TMRSRVC_insert+0x74>
    3870:	d0 93 9b 04 	sts	0x049B, r29
    3874:	c0 93 9a 04 	sts	0x049A, r28
    3878:	21 c0       	rjmp	.+66     	; 0x38bc <TMRSRVC_insert+0xb6>
    387a:	f7 01       	movw	r30, r14
    387c:	0c c0       	rjmp	.+24     	; 0x3896 <TMRSRVC_insert+0x90>
    387e:	f6 01       	movw	r30, r12
    3880:	82 81       	ldd	r24, Z+2	; 0x02
    3882:	93 81       	ldd	r25, Z+3	; 0x03
    3884:	21 15       	cp	r18, r1
    3886:	31 05       	cpc	r19, r1
    3888:	49 f4       	brne	.+18     	; 0x389c <TMRSRVC_insert+0x96>
    388a:	fd 01       	movw	r30, r26
    388c:	15 82       	std	Z+5, r1	; 0x05
    388e:	14 82       	std	Z+4, r1	; 0x04
    3890:	9b 83       	std	Y+3, r25	; 0x03
    3892:	8a 83       	std	Y+2, r24	; 0x02
    3894:	f6 01       	movw	r30, r12
    3896:	d3 83       	std	Z+3, r29	; 0x03
    3898:	c2 83       	std	Z+2, r28	; 0x02
    389a:	10 c0       	rjmp	.+32     	; 0x38bc <TMRSRVC_insert+0xb6>
    389c:	fd 01       	movw	r30, r26
    389e:	35 83       	std	Z+5, r19	; 0x05
    38a0:	24 83       	std	Z+4, r18	; 0x04
    38a2:	00 97       	sbiw	r24, 0x00	; 0
    38a4:	b9 f3       	breq	.-18     	; 0x3894 <TMRSRVC_insert+0x8e>
    38a6:	0f 5f       	subi	r16, 0xFF	; 255
    38a8:	1f 4f       	sbci	r17, 0xFF	; 255
    38aa:	76 01       	movw	r14, r12
    38ac:	6c 01       	movw	r12, r24
    38ae:	80 91 99 04 	lds	r24, 0x0499
    38b2:	90 e0       	ldi	r25, 0x00	; 0
    38b4:	08 17       	cp	r16, r24
    38b6:	19 07       	cpc	r17, r25
    38b8:	18 f2       	brcs	.-122    	; 0x3840 <TMRSRVC_insert+0x3a>
    38ba:	ec cf       	rjmp	.-40     	; 0x3894 <TMRSRVC_insert+0x8e>
    38bc:	80 91 99 04 	lds	r24, 0x0499
    38c0:	8f 5f       	subi	r24, 0xFF	; 255
    38c2:	80 93 99 04 	sts	0x0499, r24
    38c6:	df 91       	pop	r29
    38c8:	cf 91       	pop	r28
    38ca:	1f 91       	pop	r17
    38cc:	0f 91       	pop	r16
    38ce:	ff 90       	pop	r15
    38d0:	ef 90       	pop	r14
    38d2:	df 90       	pop	r13
    38d4:	cf 90       	pop	r12
    38d6:	08 95       	ret

000038d8 <TMRSRVC_open>:
    38d8:	88 e0       	ldi	r24, 0x08	; 8
    38da:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    38de:	88 23       	and	r24, r24
    38e0:	b9 f4       	brne	.+46     	; 0x3910 <TMRSRVC_open+0x38>
    38e2:	10 92 99 04 	sts	0x0499, r1
    38e6:	10 92 9b 04 	sts	0x049B, r1
    38ea:	10 92 9a 04 	sts	0x049A, r1
    38ee:	10 92 3a 02 	sts	0x023A, r1
    38f2:	10 92 3b 02 	sts	0x023B, r1
    38f6:	80 e1       	ldi	r24, 0x10	; 16
    38f8:	66 e8       	ldi	r22, 0x86	; 134
    38fa:	7d e1       	ldi	r23, 0x1D	; 29
    38fc:	0e 94 a2 1c 	call	0x3944	; 0x3944 <__ISR_attach>
    3900:	0e 94 8d 1d 	call	0x3b1a	; 0x3b1a <__TMRSRVC_init>
    3904:	0e 94 8b 1c 	call	0x3916	; 0x3916 <__TMRSRVC_start>
    3908:	88 e0       	ldi	r24, 0x08	; 8
    390a:	61 e0       	ldi	r22, 0x01	; 1
    390c:	0e 94 1d 14 	call	0x283a	; 0x283a <SYS_set_state>
    3910:	88 e0       	ldi	r24, 0x08	; 8
    3912:	91 e0       	ldi	r25, 0x01	; 1
    3914:	08 95       	ret

00003916 <__TMRSRVC_start>:
    3916:	ee e6       	ldi	r30, 0x6E	; 110
    3918:	f0 e0       	ldi	r31, 0x00	; 0
    391a:	80 81       	ld	r24, Z
    391c:	82 60       	ori	r24, 0x02	; 2
    391e:	80 83       	st	Z, r24
    3920:	08 95       	ret

00003922 <TMRSRVC_start>:
    3922:	81 e0       	ldi	r24, 0x01	; 1
    3924:	80 93 3b 02 	sts	0x023B, r24
    3928:	08 95       	ret

0000392a <I2C_enable>:
    392a:	80 91 9c 04 	lds	r24, 0x049C
    392e:	81 30       	cpi	r24, 0x01	; 1
    3930:	29 f4       	brne	.+10     	; 0x393c <I2C_enable+0x12>
    3932:	80 91 bc 00 	lds	r24, 0x00BC
    3936:	84 60       	ori	r24, 0x04	; 4
    3938:	80 93 bc 00 	sts	0x00BC, r24
    393c:	08 95       	ret

0000393e <__I2C_init>:
    393e:	38 98       	cbi	0x07, 0	; 7
    3940:	39 98       	cbi	0x07, 1	; 7
    3942:	08 95       	ret

00003944 <__ISR_attach>:
    3944:	80 32       	cpi	r24, 0x20	; 32
    3946:	18 f0       	brcs	.+6      	; 0x394e <__ISR_attach+0xa>
    3948:	20 e0       	ldi	r18, 0x00	; 0
    394a:	30 e0       	ldi	r19, 0x00	; 0
    394c:	0a c0       	rjmp	.+20     	; 0x3962 <__ISR_attach+0x1e>
    394e:	e8 2f       	mov	r30, r24
    3950:	f0 e0       	ldi	r31, 0x00	; 0
    3952:	ee 0f       	add	r30, r30
    3954:	ff 1f       	adc	r31, r31
    3956:	e6 52       	subi	r30, 0x26	; 38
    3958:	fe 4f       	sbci	r31, 0xFE	; 254
    395a:	20 81       	ld	r18, Z
    395c:	31 81       	ldd	r19, Z+1	; 0x01
    395e:	71 83       	std	Z+1, r23	; 0x01
    3960:	60 83       	st	Z, r22
    3962:	c9 01       	movw	r24, r18
    3964:	08 95       	ret

00003966 <__ATMEGA_init>:
    3966:	24 9a       	sbi	0x04, 4	; 4
    3968:	2c 9a       	sbi	0x05, 4	; 5
    396a:	08 95       	ret

0000396c <SPI_default_config>:
    396c:	83 e5       	ldi	r24, 0x53	; 83
    396e:	8c bd       	out	0x2c, r24	; 44
    3970:	81 e0       	ldi	r24, 0x01	; 1
    3972:	8d bd       	out	0x2d, r24	; 45
    3974:	8d e0       	ldi	r24, 0x0D	; 13
    3976:	8a 95       	dec	r24
    3978:	f1 f7       	brne	.-4      	; 0x3976 <SPI_default_config+0xa>
    397a:	08 95       	ret

0000397c <SPI_ATtiny0_config>:
    397c:	83 e5       	ldi	r24, 0x53	; 83
    397e:	8c bd       	out	0x2c, r24	; 44
    3980:	1d bc       	out	0x2d, r1	; 45
    3982:	84 ef       	ldi	r24, 0xF4	; 244
    3984:	91 e0       	ldi	r25, 0x01	; 1
    3986:	01 97       	sbiw	r24, 0x01	; 1
    3988:	f1 f7       	brne	.-4      	; 0x3986 <SPI_ATtiny0_config+0xa>
    398a:	08 95       	ret

0000398c <SPI_PSXC_config>:
    398c:	8f e7       	ldi	r24, 0x7F	; 127
    398e:	8c bd       	out	0x2c, r24	; 44
    3990:	1d bc       	out	0x2d, r1	; 45
    3992:	84 ef       	ldi	r24, 0xF4	; 244
    3994:	91 e0       	ldi	r25, 0x01	; 1
    3996:	01 97       	sbiw	r24, 0x01	; 1
    3998:	f1 f7       	brne	.-4      	; 0x3996 <SPI_PSXC_config+0xa>
    399a:	08 95       	ret

0000399c <SPI_LCD_config>:
    399c:	83 e5       	ldi	r24, 0x53	; 83
    399e:	8c bd       	out	0x2c, r24	; 44
    39a0:	81 e0       	ldi	r24, 0x01	; 1
    39a2:	8d bd       	out	0x2d, r24	; 45
    39a4:	8d e0       	ldi	r24, 0x0D	; 13
    39a6:	8a 95       	dec	r24
    39a8:	f1 f7       	brne	.-4      	; 0x39a6 <SPI_LCD_config+0xa>
    39aa:	08 95       	ret

000039ac <SPI_FLASH_config>:
    39ac:	83 e5       	ldi	r24, 0x53	; 83
    39ae:	8c bd       	out	0x2c, r24	; 44
    39b0:	81 e0       	ldi	r24, 0x01	; 1
    39b2:	8d bd       	out	0x2d, r24	; 45
    39b4:	84 ef       	ldi	r24, 0xF4	; 244
    39b6:	91 e0       	ldi	r25, 0x01	; 1
    39b8:	01 97       	sbiw	r24, 0x01	; 1
    39ba:	f1 f7       	brne	.-4      	; 0x39b8 <SPI_FLASH_config+0xc>
    39bc:	08 95       	ret

000039be <__SPI_init>:
    39be:	25 9a       	sbi	0x04, 5	; 4
    39c0:	26 98       	cbi	0x04, 6	; 4
    39c2:	27 9a       	sbi	0x04, 7	; 4
    39c4:	20 9a       	sbi	0x04, 0	; 4
    39c6:	21 9a       	sbi	0x04, 1	; 4
    39c8:	22 9a       	sbi	0x04, 2	; 4
    39ca:	08 95       	ret

000039cc <SPKR_beep>:
    39cc:	9b 01       	movw	r18, r22
    39ce:	ac 01       	movw	r20, r24
    39d0:	80 91 2b 02 	lds	r24, 0x022B
    39d4:	88 23       	and	r24, r24
    39d6:	81 f0       	breq	.+32     	; 0x39f8 <SPKR_beep+0x2c>
    39d8:	da 01       	movw	r26, r20
    39da:	c9 01       	movw	r24, r18
    39dc:	88 0f       	add	r24, r24
    39de:	99 1f       	adc	r25, r25
    39e0:	aa 1f       	adc	r26, r26
    39e2:	bb 1f       	adc	r27, r27
    39e4:	90 93 37 02 	sts	0x0237, r25
    39e8:	80 93 36 02 	sts	0x0236, r24
    39ec:	21 15       	cp	r18, r1
    39ee:	31 05       	cpc	r19, r1
    39f0:	41 05       	cpc	r20, r1
    39f2:	51 05       	cpc	r21, r1
    39f4:	09 f4       	brne	.+2      	; 0x39f8 <SPKR_beep+0x2c>
    39f6:	5f 98       	cbi	0x0b, 7	; 11
    39f8:	08 95       	ret

000039fa <__SPKR_close>:
    39fa:	82 30       	cpi	r24, 0x02	; 2
    39fc:	29 f4       	brne	.+10     	; 0x3a08 <__SPKR_close+0xe>
    39fe:	80 91 81 00 	lds	r24, 0x0081
    3a02:	8e 7f       	andi	r24, 0xFE	; 254
    3a04:	80 93 81 00 	sts	0x0081, r24
    3a08:	80 91 2a 02 	lds	r24, 0x022A
    3a0c:	81 30       	cpi	r24, 0x01	; 1
    3a0e:	31 f4       	brne	.+12     	; 0x3a1c <__SPKR_close+0x22>
    3a10:	80 91 2b 02 	lds	r24, 0x022B
    3a14:	81 30       	cpi	r24, 0x01	; 1
    3a16:	11 f4       	brne	.+4      	; 0x3a1c <__SPKR_close+0x22>
    3a18:	00 00       	nop
    3a1a:	08 95       	ret
    3a1c:	80 91 2a 02 	lds	r24, 0x022A
    3a20:	81 30       	cpi	r24, 0x01	; 1
    3a22:	21 f0       	breq	.+8      	; 0x3a2c <__SPKR_close+0x32>
    3a24:	80 91 2b 02 	lds	r24, 0x022B
    3a28:	81 30       	cpi	r24, 0x01	; 1
    3a2a:	11 f4       	brne	.+4      	; 0x3a30 <__SPKR_close+0x36>
    3a2c:	5f 98       	cbi	0x0b, 7	; 11
    3a2e:	57 98       	cbi	0x0a, 7	; 10
    3a30:	08 95       	ret

00003a32 <STEPPER_set_decel_step_values>:
    3a32:	ef 92       	push	r14
    3a34:	ff 92       	push	r15
    3a36:	0f 93       	push	r16
    3a38:	1f 93       	push	r17
    3a3a:	cf 93       	push	r28
    3a3c:	df 93       	push	r29
    3a3e:	eb 01       	movw	r28, r22
    3a40:	88 23       	and	r24, r24
    3a42:	21 f0       	breq	.+8      	; 0x3a4c <STEPPER_set_decel_step_values+0x1a>
    3a44:	81 30       	cpi	r24, 0x01	; 1
    3a46:	09 f0       	breq	.+2      	; 0x3a4a <STEPPER_set_decel_step_values+0x18>
    3a48:	5a c0       	rjmp	.+180    	; 0x3afe <STEPPER_set_decel_step_values+0xcc>
    3a4a:	2d c0       	rjmp	.+90     	; 0x3aa6 <STEPPER_set_decel_step_values+0x74>
    3a4c:	9a 01       	movw	r18, r20
    3a4e:	40 e0       	ldi	r20, 0x00	; 0
    3a50:	50 e0       	ldi	r21, 0x00	; 0
    3a52:	ca 01       	movw	r24, r20
    3a54:	b9 01       	movw	r22, r18
    3a56:	0e 94 70 28 	call	0x50e0	; 0x50e0 <__mulsi3>
    3a5a:	20 91 33 04 	lds	r18, 0x0433
    3a5e:	30 91 34 04 	lds	r19, 0x0434
    3a62:	22 0f       	add	r18, r18
    3a64:	33 1f       	adc	r19, r19
    3a66:	40 e0       	ldi	r20, 0x00	; 0
    3a68:	50 e0       	ldi	r21, 0x00	; 0
    3a6a:	0e 94 a2 28 	call	0x5144	; 0x5144 <__udivmodsi4>
    3a6e:	79 01       	movw	r14, r18
    3a70:	8a 01       	movw	r16, r20
    3a72:	a8 01       	movw	r20, r16
    3a74:	97 01       	movw	r18, r14
    3a76:	22 0f       	add	r18, r18
    3a78:	33 1f       	adc	r19, r19
    3a7a:	44 1f       	adc	r20, r20
    3a7c:	55 1f       	adc	r21, r21
    3a7e:	ce 01       	movw	r24, r28
    3a80:	a0 e0       	ldi	r26, 0x00	; 0
    3a82:	b0 e0       	ldi	r27, 0x00	; 0
    3a84:	82 17       	cp	r24, r18
    3a86:	93 07       	cpc	r25, r19
    3a88:	a4 07       	cpc	r26, r20
    3a8a:	b5 07       	cpc	r27, r21
    3a8c:	28 f0       	brcs	.+10     	; 0x3a98 <STEPPER_set_decel_step_values+0x66>
    3a8e:	f0 92 40 04 	sts	0x0440, r15
    3a92:	e0 92 3f 04 	sts	0x043F, r14
    3a96:	33 c0       	rjmp	.+102    	; 0x3afe <STEPPER_set_decel_step_values+0xcc>
    3a98:	d6 95       	lsr	r29
    3a9a:	c7 95       	ror	r28
    3a9c:	d0 93 40 04 	sts	0x0440, r29
    3aa0:	c0 93 3f 04 	sts	0x043F, r28
    3aa4:	2c c0       	rjmp	.+88     	; 0x3afe <STEPPER_set_decel_step_values+0xcc>
    3aa6:	9a 01       	movw	r18, r20
    3aa8:	40 e0       	ldi	r20, 0x00	; 0
    3aaa:	50 e0       	ldi	r21, 0x00	; 0
    3aac:	ca 01       	movw	r24, r20
    3aae:	b9 01       	movw	r22, r18
    3ab0:	0e 94 70 28 	call	0x50e0	; 0x50e0 <__mulsi3>
    3ab4:	20 91 35 04 	lds	r18, 0x0435
    3ab8:	30 91 36 04 	lds	r19, 0x0436
    3abc:	22 0f       	add	r18, r18
    3abe:	33 1f       	adc	r19, r19
    3ac0:	40 e0       	ldi	r20, 0x00	; 0
    3ac2:	50 e0       	ldi	r21, 0x00	; 0
    3ac4:	0e 94 a2 28 	call	0x5144	; 0x5144 <__udivmodsi4>
    3ac8:	79 01       	movw	r14, r18
    3aca:	8a 01       	movw	r16, r20
    3acc:	a8 01       	movw	r20, r16
    3ace:	97 01       	movw	r18, r14
    3ad0:	22 0f       	add	r18, r18
    3ad2:	33 1f       	adc	r19, r19
    3ad4:	44 1f       	adc	r20, r20
    3ad6:	55 1f       	adc	r21, r21
    3ad8:	ce 01       	movw	r24, r28
    3ada:	a0 e0       	ldi	r26, 0x00	; 0
    3adc:	b0 e0       	ldi	r27, 0x00	; 0
    3ade:	82 17       	cp	r24, r18
    3ae0:	93 07       	cpc	r25, r19
    3ae2:	a4 07       	cpc	r26, r20
    3ae4:	b5 07       	cpc	r27, r21
    3ae6:	28 f0       	brcs	.+10     	; 0x3af2 <STEPPER_set_decel_step_values+0xc0>
    3ae8:	f0 92 42 04 	sts	0x0442, r15
    3aec:	e0 92 41 04 	sts	0x0441, r14
    3af0:	06 c0       	rjmp	.+12     	; 0x3afe <STEPPER_set_decel_step_values+0xcc>
    3af2:	d6 95       	lsr	r29
    3af4:	c7 95       	ror	r28
    3af6:	d0 93 42 04 	sts	0x0442, r29
    3afa:	c0 93 41 04 	sts	0x0441, r28
    3afe:	df 91       	pop	r29
    3b00:	cf 91       	pop	r28
    3b02:	1f 91       	pop	r17
    3b04:	0f 91       	pop	r16
    3b06:	ff 90       	pop	r15
    3b08:	ef 90       	pop	r14
    3b0a:	08 95       	ret

00003b0c <__TIMER0_COMPA_vect>:
    3b0c:	0e 94 96 1d 	call	0x3b2c	; 0x3b2c <TMRSRVC_tick>
    3b10:	0e 94 d6 1d 	call	0x3bac	; 0x3bac <STEPPER_clk>
    3b14:	0e 94 af 1d 	call	0x3b5e	; 0x3b5e <SPKR_beep_clk>
    3b18:	08 95       	ret

00003b1a <__TMRSRVC_init>:
    3b1a:	84 b5       	in	r24, 0x24	; 36
    3b1c:	82 60       	ori	r24, 0x02	; 2
    3b1e:	84 bd       	out	0x24, r24	; 36
    3b20:	85 b5       	in	r24, 0x25	; 37
    3b22:	84 60       	ori	r24, 0x04	; 4
    3b24:	85 bd       	out	0x25, r24	; 37
    3b26:	8e e4       	ldi	r24, 0x4E	; 78
    3b28:	87 bd       	out	0x27, r24	; 39
    3b2a:	08 95       	ret

00003b2c <TMRSRVC_tick>:
    3b2c:	88 e0       	ldi	r24, 0x08	; 8
    3b2e:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    3b32:	88 23       	and	r24, r24
    3b34:	11 f4       	brne	.+4      	; 0x3b3a <TMRSRVC_tick+0xe>
    3b36:	84 e0       	ldi	r24, 0x04	; 4
    3b38:	08 95       	ret
    3b3a:	80 91 3b 02 	lds	r24, 0x023B
    3b3e:	88 23       	and	r24, r24
    3b40:	11 f4       	brne	.+4      	; 0x3b46 <TMRSRVC_tick+0x1a>
    3b42:	83 e0       	ldi	r24, 0x03	; 3
    3b44:	08 95       	ret
    3b46:	80 91 3a 02 	lds	r24, 0x023A
    3b4a:	88 23       	and	r24, r24
    3b4c:	11 f0       	breq	.+4      	; 0x3b52 <TMRSRVC_tick+0x26>
    3b4e:	82 e0       	ldi	r24, 0x02	; 2
    3b50:	08 95       	ret
    3b52:	0e 94 48 20 	call	0x4090	; 0x4090 <TMRSRVC_process>
    3b56:	81 30       	cpi	r24, 0x01	; 1
    3b58:	e1 f3       	breq	.-8      	; 0x3b52 <TMRSRVC_tick+0x26>
    3b5a:	80 e0       	ldi	r24, 0x00	; 0
    3b5c:	08 95       	ret

00003b5e <SPKR_beep_clk>:
    3b5e:	80 91 2b 02 	lds	r24, 0x022B
    3b62:	81 30       	cpi	r24, 0x01	; 1
    3b64:	11 f5       	brne	.+68     	; 0x3baa <SPKR_beep_clk+0x4c>
    3b66:	80 91 34 02 	lds	r24, 0x0234
    3b6a:	90 91 35 02 	lds	r25, 0x0235
    3b6e:	20 91 36 02 	lds	r18, 0x0236
    3b72:	30 91 37 02 	lds	r19, 0x0237
    3b76:	28 0f       	add	r18, r24
    3b78:	39 1f       	adc	r19, r25
    3b7a:	30 93 35 02 	sts	0x0235, r19
    3b7e:	20 93 34 02 	sts	0x0234, r18
    3b82:	80 91 34 02 	lds	r24, 0x0234
    3b86:	90 91 35 02 	lds	r25, 0x0235
    3b8a:	88 5e       	subi	r24, 0xE8	; 232
    3b8c:	93 40       	sbci	r25, 0x03	; 3
    3b8e:	6c f0       	brlt	.+26     	; 0x3baa <SPKR_beep_clk+0x4c>
    3b90:	8b b1       	in	r24, 0x0b	; 11
    3b92:	80 58       	subi	r24, 0x80	; 128
    3b94:	8b b9       	out	0x0b, r24	; 11
    3b96:	80 91 34 02 	lds	r24, 0x0234
    3b9a:	90 91 35 02 	lds	r25, 0x0235
    3b9e:	88 5e       	subi	r24, 0xE8	; 232
    3ba0:	93 40       	sbci	r25, 0x03	; 3
    3ba2:	90 93 35 02 	sts	0x0235, r25
    3ba6:	80 93 34 02 	sts	0x0234, r24
    3baa:	08 95       	ret

00003bac <STEPPER_clk>:
    3bac:	87 e0       	ldi	r24, 0x07	; 7
    3bae:	0e 94 d5 13 	call	0x27aa	; 0x27aa <SYS_get_state>
    3bb2:	81 30       	cpi	r24, 0x01	; 1
    3bb4:	09 f0       	breq	.+2      	; 0x3bb8 <STEPPER_clk+0xc>
    3bb6:	aa c0       	rjmp	.+340    	; 0x3d0c <STEPPER_clk+0x160>
    3bb8:	80 91 33 04 	lds	r24, 0x0433
    3bbc:	90 91 34 04 	lds	r25, 0x0434
    3bc0:	89 2b       	or	r24, r25
    3bc2:	09 f1       	breq	.+66     	; 0x3c06 <STEPPER_clk+0x5a>
    3bc4:	80 91 57 04 	lds	r24, 0x0457
    3bc8:	90 91 58 04 	lds	r25, 0x0458
    3bcc:	20 91 33 04 	lds	r18, 0x0433
    3bd0:	30 91 34 04 	lds	r19, 0x0434
    3bd4:	82 0f       	add	r24, r18
    3bd6:	93 1f       	adc	r25, r19
    3bd8:	90 93 58 04 	sts	0x0458, r25
    3bdc:	80 93 57 04 	sts	0x0457, r24
    3be0:	80 91 57 04 	lds	r24, 0x0457
    3be4:	90 91 58 04 	lds	r25, 0x0458
    3be8:	88 5e       	subi	r24, 0xE8	; 232
    3bea:	93 40       	sbci	r25, 0x03	; 3
    3bec:	a4 f0       	brlt	.+40     	; 0x3c16 <STEPPER_clk+0x6a>
    3bee:	80 91 57 04 	lds	r24, 0x0457
    3bf2:	90 91 58 04 	lds	r25, 0x0458
    3bf6:	88 5e       	subi	r24, 0xE8	; 232
    3bf8:	93 40       	sbci	r25, 0x03	; 3
    3bfa:	90 93 58 04 	sts	0x0458, r25
    3bfe:	80 93 57 04 	sts	0x0457, r24
    3c02:	41 e0       	ldi	r20, 0x01	; 1
    3c04:	09 c0       	rjmp	.+18     	; 0x3c18 <STEPPER_clk+0x6c>
    3c06:	80 91 2b 04 	lds	r24, 0x042B
    3c0a:	90 91 2c 04 	lds	r25, 0x042C
    3c0e:	90 93 30 04 	sts	0x0430, r25
    3c12:	80 93 2f 04 	sts	0x042F, r24
    3c16:	40 e0       	ldi	r20, 0x00	; 0
    3c18:	80 91 35 04 	lds	r24, 0x0435
    3c1c:	90 91 36 04 	lds	r25, 0x0436
    3c20:	89 2b       	or	r24, r25
    3c22:	09 f1       	breq	.+66     	; 0x3c66 <STEPPER_clk+0xba>
    3c24:	80 91 59 04 	lds	r24, 0x0459
    3c28:	90 91 5a 04 	lds	r25, 0x045A
    3c2c:	20 91 35 04 	lds	r18, 0x0435
    3c30:	30 91 36 04 	lds	r19, 0x0436
    3c34:	82 0f       	add	r24, r18
    3c36:	93 1f       	adc	r25, r19
    3c38:	90 93 5a 04 	sts	0x045A, r25
    3c3c:	80 93 59 04 	sts	0x0459, r24
    3c40:	80 91 59 04 	lds	r24, 0x0459
    3c44:	90 91 5a 04 	lds	r25, 0x045A
    3c48:	88 5e       	subi	r24, 0xE8	; 232
    3c4a:	93 40       	sbci	r25, 0x03	; 3
    3c4c:	a4 f0       	brlt	.+40     	; 0x3c76 <STEPPER_clk+0xca>
    3c4e:	80 91 59 04 	lds	r24, 0x0459
    3c52:	90 91 5a 04 	lds	r25, 0x045A
    3c56:	88 5e       	subi	r24, 0xE8	; 232
    3c58:	93 40       	sbci	r25, 0x03	; 3
    3c5a:	90 93 5a 04 	sts	0x045A, r25
    3c5e:	80 93 59 04 	sts	0x0459, r24
    3c62:	61 e0       	ldi	r22, 0x01	; 1
    3c64:	09 c0       	rjmp	.+18     	; 0x3c78 <STEPPER_clk+0xcc>
    3c66:	80 91 2d 04 	lds	r24, 0x042D
    3c6a:	90 91 2e 04 	lds	r25, 0x042E
    3c6e:	90 93 32 04 	sts	0x0432, r25
    3c72:	80 93 31 04 	sts	0x0431, r24
    3c76:	60 e0       	ldi	r22, 0x00	; 0
    3c78:	84 2f       	mov	r24, r20
    3c7a:	0e 94 87 1e 	call	0x3d0e	; 0x3d0e <STEPPER_process_accel>
    3c7e:	80 91 53 04 	lds	r24, 0x0453
    3c82:	90 91 54 04 	lds	r25, 0x0454
    3c86:	20 91 2f 04 	lds	r18, 0x042F
    3c8a:	30 91 30 04 	lds	r19, 0x0430
    3c8e:	28 0f       	add	r18, r24
    3c90:	39 1f       	adc	r19, r25
    3c92:	30 93 54 04 	sts	0x0454, r19
    3c96:	20 93 53 04 	sts	0x0453, r18
    3c9a:	80 91 53 04 	lds	r24, 0x0453
    3c9e:	90 91 54 04 	lds	r25, 0x0454
    3ca2:	88 5e       	subi	r24, 0xE8	; 232
    3ca4:	93 40       	sbci	r25, 0x03	; 3
    3ca6:	14 f4       	brge	.+4      	; 0x3cac <STEPPER_clk+0x100>
    3ca8:	40 e0       	ldi	r20, 0x00	; 0
    3caa:	0b c0       	rjmp	.+22     	; 0x3cc2 <STEPPER_clk+0x116>
    3cac:	80 91 53 04 	lds	r24, 0x0453
    3cb0:	90 91 54 04 	lds	r25, 0x0454
    3cb4:	88 5e       	subi	r24, 0xE8	; 232
    3cb6:	93 40       	sbci	r25, 0x03	; 3
    3cb8:	90 93 54 04 	sts	0x0454, r25
    3cbc:	80 93 53 04 	sts	0x0453, r24
    3cc0:	41 e0       	ldi	r20, 0x01	; 1
    3cc2:	80 91 55 04 	lds	r24, 0x0455
    3cc6:	90 91 56 04 	lds	r25, 0x0456
    3cca:	20 91 31 04 	lds	r18, 0x0431
    3cce:	30 91 32 04 	lds	r19, 0x0432
    3cd2:	28 0f       	add	r18, r24
    3cd4:	39 1f       	adc	r19, r25
    3cd6:	30 93 56 04 	sts	0x0456, r19
    3cda:	20 93 55 04 	sts	0x0455, r18
    3cde:	80 91 55 04 	lds	r24, 0x0455
    3ce2:	90 91 56 04 	lds	r25, 0x0456
    3ce6:	88 5e       	subi	r24, 0xE8	; 232
    3ce8:	93 40       	sbci	r25, 0x03	; 3
    3cea:	14 f4       	brge	.+4      	; 0x3cf0 <STEPPER_clk+0x144>
    3cec:	60 e0       	ldi	r22, 0x00	; 0
    3cee:	0b c0       	rjmp	.+22     	; 0x3d06 <STEPPER_clk+0x15a>
    3cf0:	80 91 55 04 	lds	r24, 0x0455
    3cf4:	90 91 56 04 	lds	r25, 0x0456
    3cf8:	88 5e       	subi	r24, 0xE8	; 232
    3cfa:	93 40       	sbci	r25, 0x03	; 3
    3cfc:	90 93 56 04 	sts	0x0456, r25
    3d00:	80 93 55 04 	sts	0x0455, r24
    3d04:	61 e0       	ldi	r22, 0x01	; 1
    3d06:	84 2f       	mov	r24, r20
    3d08:	0e 94 cc 1e 	call	0x3d98	; 0x3d98 <STEPPER_process_run_mode>
    3d0c:	08 95       	ret

00003d0e <STEPPER_process_accel>:
    3d0e:	88 23       	and	r24, r24
    3d10:	f1 f0       	breq	.+60     	; 0x3d4e <STEPPER_process_accel+0x40>
    3d12:	20 91 2b 04 	lds	r18, 0x042B
    3d16:	30 91 2c 04 	lds	r19, 0x042C
    3d1a:	80 91 2f 04 	lds	r24, 0x042F
    3d1e:	90 91 30 04 	lds	r25, 0x0430
    3d22:	28 1b       	sub	r18, r24
    3d24:	39 0b       	sbc	r19, r25
    3d26:	12 16       	cp	r1, r18
    3d28:	13 06       	cpc	r1, r19
    3d2a:	34 f4       	brge	.+12     	; 0x3d38 <STEPPER_process_accel+0x2a>
    3d2c:	80 91 2f 04 	lds	r24, 0x042F
    3d30:	90 91 30 04 	lds	r25, 0x0430
    3d34:	01 96       	adiw	r24, 0x01	; 1
    3d36:	07 c0       	rjmp	.+14     	; 0x3d46 <STEPPER_process_accel+0x38>
    3d38:	23 2b       	or	r18, r19
    3d3a:	49 f0       	breq	.+18     	; 0x3d4e <STEPPER_process_accel+0x40>
    3d3c:	80 91 2f 04 	lds	r24, 0x042F
    3d40:	90 91 30 04 	lds	r25, 0x0430
    3d44:	01 97       	sbiw	r24, 0x01	; 1
    3d46:	90 93 30 04 	sts	0x0430, r25
    3d4a:	80 93 2f 04 	sts	0x042F, r24
    3d4e:	66 23       	and	r22, r22
    3d50:	11 f1       	breq	.+68     	; 0x3d96 <STEPPER_process_accel+0x88>
    3d52:	20 91 2d 04 	lds	r18, 0x042D
    3d56:	30 91 2e 04 	lds	r19, 0x042E
    3d5a:	80 91 31 04 	lds	r24, 0x0431
    3d5e:	90 91 32 04 	lds	r25, 0x0432
    3d62:	28 1b       	sub	r18, r24
    3d64:	39 0b       	sbc	r19, r25
    3d66:	12 16       	cp	r1, r18
    3d68:	13 06       	cpc	r1, r19
    3d6a:	54 f4       	brge	.+20     	; 0x3d80 <STEPPER_process_accel+0x72>
    3d6c:	80 91 31 04 	lds	r24, 0x0431
    3d70:	90 91 32 04 	lds	r25, 0x0432
    3d74:	01 96       	adiw	r24, 0x01	; 1
    3d76:	90 93 32 04 	sts	0x0432, r25
    3d7a:	80 93 31 04 	sts	0x0431, r24
    3d7e:	08 95       	ret
    3d80:	23 2b       	or	r18, r19
    3d82:	49 f0       	breq	.+18     	; 0x3d96 <STEPPER_process_accel+0x88>
    3d84:	80 91 31 04 	lds	r24, 0x0431
    3d88:	90 91 32 04 	lds	r25, 0x0432
    3d8c:	01 97       	sbiw	r24, 0x01	; 1
    3d8e:	90 93 32 04 	sts	0x0432, r25
    3d92:	80 93 31 04 	sts	0x0431, r24
    3d96:	08 95       	ret

00003d98 <STEPPER_process_run_mode>:
    3d98:	0f 93       	push	r16
    3d9a:	1f 93       	push	r17
    3d9c:	18 2f       	mov	r17, r24
    3d9e:	06 2f       	mov	r16, r22
    3da0:	80 91 5f 04 	lds	r24, 0x045F
    3da4:	88 23       	and	r24, r24
    3da6:	09 f0       	breq	.+2      	; 0x3daa <STEPPER_process_run_mode+0x12>
    3da8:	e7 c0       	rjmp	.+462    	; 0x3f78 <STEPPER_process_run_mode+0x1e0>
    3daa:	80 91 47 04 	lds	r24, 0x0447
    3dae:	88 23       	and	r24, r24
    3db0:	09 f0       	breq	.+2      	; 0x3db4 <STEPPER_process_run_mode+0x1c>
    3db2:	5a c0       	rjmp	.+180    	; 0x3e68 <STEPPER_process_run_mode+0xd0>
    3db4:	80 91 2f 04 	lds	r24, 0x042F
    3db8:	90 91 30 04 	lds	r25, 0x0430
    3dbc:	89 2b       	or	r24, r25
    3dbe:	e9 f4       	brne	.+58     	; 0x3dfa <STEPPER_process_run_mode+0x62>
    3dc0:	80 91 3c 02 	lds	r24, 0x023C
    3dc4:	83 7e       	andi	r24, 0xE3	; 227
    3dc6:	80 93 3c 02 	sts	0x023C, r24
    3dca:	10 92 50 04 	sts	0x0450, r1
    3dce:	80 91 5b 04 	lds	r24, 0x045B
    3dd2:	88 23       	and	r24, r24
    3dd4:	09 f4       	brne	.+2      	; 0x3dd8 <STEPPER_process_run_mode+0x40>
    3dd6:	5d c0       	rjmp	.+186    	; 0x3e92 <STEPPER_process_run_mode+0xfa>
    3dd8:	60 91 49 04 	lds	r22, 0x0449
    3ddc:	80 e0       	ldi	r24, 0x00	; 0
    3dde:	0e 94 23 20 	call	0x4046	; 0x4046 <STEPPER_stop>
    3de2:	e0 91 5d 04 	lds	r30, 0x045D
    3de6:	f0 91 5e 04 	lds	r31, 0x045E
    3dea:	30 97       	sbiw	r30, 0x00	; 0
    3dec:	09 f4       	brne	.+2      	; 0x3df0 <STEPPER_process_run_mode+0x58>
    3dee:	51 c0       	rjmp	.+162    	; 0x3e92 <STEPPER_process_run_mode+0xfa>
    3df0:	81 e0       	ldi	r24, 0x01	; 1
    3df2:	80 83       	st	Z, r24
    3df4:	10 92 5b 04 	sts	0x045B, r1
    3df8:	4c c0       	rjmp	.+152    	; 0x3e92 <STEPPER_process_run_mode+0xfa>
    3dfa:	80 91 29 04 	lds	r24, 0x0429
    3dfe:	81 30       	cpi	r24, 0x01	; 1
    3e00:	41 f4       	brne	.+16     	; 0x3e12 <STEPPER_process_run_mode+0x7a>
    3e02:	80 91 3b 04 	lds	r24, 0x043B
    3e06:	90 91 3c 04 	lds	r25, 0x043C
    3e0a:	01 97       	sbiw	r24, 0x01	; 1
    3e0c:	11 f4       	brne	.+4      	; 0x3e12 <STEPPER_process_run_mode+0x7a>
    3e0e:	11 e0       	ldi	r17, 0x01	; 1
    3e10:	02 c0       	rjmp	.+4      	; 0x3e16 <STEPPER_process_run_mode+0x7e>
    3e12:	11 23       	and	r17, r17
    3e14:	f1 f1       	breq	.+124    	; 0x3e92 <STEPPER_process_run_mode+0xfa>
    3e16:	e0 91 4e 04 	lds	r30, 0x044E
    3e1a:	f0 e0       	ldi	r31, 0x00	; 0
    3e1c:	e5 5b       	subi	r30, 0xB5	; 181
    3e1e:	fe 4f       	sbci	r31, 0xFE	; 254
    3e20:	90 91 3c 02 	lds	r25, 0x023C
    3e24:	93 7e       	andi	r25, 0xE3	; 227
    3e26:	80 81       	ld	r24, Z
    3e28:	89 2b       	or	r24, r25
    3e2a:	80 93 3c 02 	sts	0x023C, r24
    3e2e:	80 91 4c 04 	lds	r24, 0x044C
    3e32:	88 23       	and	r24, r24
    3e34:	21 f4       	brne	.+8      	; 0x3e3e <STEPPER_process_run_mode+0xa6>
    3e36:	80 91 4e 04 	lds	r24, 0x044E
    3e3a:	8f 5f       	subi	r24, 0xFF	; 255
    3e3c:	03 c0       	rjmp	.+6      	; 0x3e44 <STEPPER_process_run_mode+0xac>
    3e3e:	80 91 4e 04 	lds	r24, 0x044E
    3e42:	81 50       	subi	r24, 0x01	; 1
    3e44:	80 93 4e 04 	sts	0x044E, r24
    3e48:	80 91 4e 04 	lds	r24, 0x044E
    3e4c:	83 70       	andi	r24, 0x03	; 3
    3e4e:	80 93 4e 04 	sts	0x044E, r24
    3e52:	81 e0       	ldi	r24, 0x01	; 1
    3e54:	80 93 50 04 	sts	0x0450, r24
    3e58:	80 91 29 04 	lds	r24, 0x0429
    3e5c:	81 30       	cpi	r24, 0x01	; 1
    3e5e:	c9 f4       	brne	.+50     	; 0x3e92 <STEPPER_process_run_mode+0xfa>
    3e60:	80 e0       	ldi	r24, 0x00	; 0
    3e62:	0e 94 cf 1f 	call	0x3f9e	; 0x3f9e <STEPPER_process_step_mode>
    3e66:	15 c0       	rjmp	.+42     	; 0x3e92 <STEPPER_process_run_mode+0xfa>
    3e68:	90 91 3c 02 	lds	r25, 0x023C
    3e6c:	93 7e       	andi	r25, 0xE3	; 227
    3e6e:	90 93 3c 02 	sts	0x023C, r25
    3e72:	e0 91 4e 04 	lds	r30, 0x044E
    3e76:	f0 e0       	ldi	r31, 0x00	; 0
    3e78:	e5 5b       	subi	r30, 0xB5	; 181
    3e7a:	fe 4f       	sbci	r31, 0xFE	; 254
    3e7c:	80 81       	ld	r24, Z
    3e7e:	89 2b       	or	r24, r25
    3e80:	80 93 3c 02 	sts	0x023C, r24
    3e84:	82 e0       	ldi	r24, 0x02	; 2
    3e86:	80 93 50 04 	sts	0x0450, r24
    3e8a:	10 92 30 04 	sts	0x0430, r1
    3e8e:	10 92 2f 04 	sts	0x042F, r1
    3e92:	80 91 48 04 	lds	r24, 0x0448
    3e96:	88 23       	and	r24, r24
    3e98:	09 f0       	breq	.+2      	; 0x3e9c <STEPPER_process_run_mode+0x104>
    3e9a:	59 c0       	rjmp	.+178    	; 0x3f4e <STEPPER_process_run_mode+0x1b6>
    3e9c:	80 91 31 04 	lds	r24, 0x0431
    3ea0:	90 91 32 04 	lds	r25, 0x0432
    3ea4:	89 2b       	or	r24, r25
    3ea6:	e9 f4       	brne	.+58     	; 0x3ee2 <STEPPER_process_run_mode+0x14a>
    3ea8:	80 91 3c 02 	lds	r24, 0x023C
    3eac:	8f 71       	andi	r24, 0x1F	; 31
    3eae:	80 93 3c 02 	sts	0x023C, r24
    3eb2:	10 92 51 04 	sts	0x0451, r1
    3eb6:	80 91 5c 04 	lds	r24, 0x045C
    3eba:	88 23       	and	r24, r24
    3ebc:	09 f4       	brne	.+2      	; 0x3ec0 <STEPPER_process_run_mode+0x128>
    3ebe:	5c c0       	rjmp	.+184    	; 0x3f78 <STEPPER_process_run_mode+0x1e0>
    3ec0:	60 91 4a 04 	lds	r22, 0x044A
    3ec4:	81 e0       	ldi	r24, 0x01	; 1
    3ec6:	0e 94 23 20 	call	0x4046	; 0x4046 <STEPPER_stop>
    3eca:	e0 91 5d 04 	lds	r30, 0x045D
    3ece:	f0 91 5e 04 	lds	r31, 0x045E
    3ed2:	30 97       	sbiw	r30, 0x00	; 0
    3ed4:	09 f4       	brne	.+2      	; 0x3ed8 <STEPPER_process_run_mode+0x140>
    3ed6:	50 c0       	rjmp	.+160    	; 0x3f78 <STEPPER_process_run_mode+0x1e0>
    3ed8:	81 e0       	ldi	r24, 0x01	; 1
    3eda:	81 83       	std	Z+1, r24	; 0x01
    3edc:	10 92 5c 04 	sts	0x045C, r1
    3ee0:	4b c0       	rjmp	.+150    	; 0x3f78 <STEPPER_process_run_mode+0x1e0>
    3ee2:	80 91 2a 04 	lds	r24, 0x042A
    3ee6:	81 30       	cpi	r24, 0x01	; 1
    3ee8:	41 f4       	brne	.+16     	; 0x3efa <STEPPER_process_run_mode+0x162>
    3eea:	80 91 3d 04 	lds	r24, 0x043D
    3eee:	90 91 3e 04 	lds	r25, 0x043E
    3ef2:	01 97       	sbiw	r24, 0x01	; 1
    3ef4:	11 f4       	brne	.+4      	; 0x3efa <STEPPER_process_run_mode+0x162>
    3ef6:	01 e0       	ldi	r16, 0x01	; 1
    3ef8:	02 c0       	rjmp	.+4      	; 0x3efe <STEPPER_process_run_mode+0x166>
    3efa:	00 23       	and	r16, r16
    3efc:	e9 f1       	breq	.+122    	; 0x3f78 <STEPPER_process_run_mode+0x1e0>
    3efe:	e0 91 4f 04 	lds	r30, 0x044F
    3f02:	f0 e0       	ldi	r31, 0x00	; 0
    3f04:	e1 5b       	subi	r30, 0xB1	; 177
    3f06:	fe 4f       	sbci	r31, 0xFE	; 254
    3f08:	90 91 3c 02 	lds	r25, 0x023C
    3f0c:	9f 71       	andi	r25, 0x1F	; 31
    3f0e:	80 81       	ld	r24, Z
    3f10:	89 2b       	or	r24, r25
    3f12:	80 93 3c 02 	sts	0x023C, r24
    3f16:	80 91 4d 04 	lds	r24, 0x044D
    3f1a:	88 23       	and	r24, r24
    3f1c:	21 f4       	brne	.+8      	; 0x3f26 <STEPPER_process_run_mode+0x18e>
    3f1e:	80 91 4f 04 	lds	r24, 0x044F
    3f22:	8f 5f       	subi	r24, 0xFF	; 255
    3f24:	03 c0       	rjmp	.+6      	; 0x3f2c <STEPPER_process_run_mode+0x194>
    3f26:	80 91 4f 04 	lds	r24, 0x044F
    3f2a:	81 50       	subi	r24, 0x01	; 1
    3f2c:	80 93 4f 04 	sts	0x044F, r24
    3f30:	80 91 4f 04 	lds	r24, 0x044F
    3f34:	83 70       	andi	r24, 0x03	; 3
    3f36:	80 93 4f 04 	sts	0x044F, r24
    3f3a:	81 e0       	ldi	r24, 0x01	; 1
    3f3c:	80 93 51 04 	sts	0x0451, r24
    3f40:	80 91 2a 04 	lds	r24, 0x042A
    3f44:	81 30       	cpi	r24, 0x01	; 1
    3f46:	c1 f4       	brne	.+48     	; 0x3f78 <STEPPER_process_run_mode+0x1e0>
    3f48:	0e 94 cf 1f 	call	0x3f9e	; 0x3f9e <STEPPER_process_step_mode>
    3f4c:	15 c0       	rjmp	.+42     	; 0x3f78 <STEPPER_process_run_mode+0x1e0>
    3f4e:	90 91 3c 02 	lds	r25, 0x023C
    3f52:	9f 71       	andi	r25, 0x1F	; 31
    3f54:	90 93 3c 02 	sts	0x023C, r25
    3f58:	e0 91 4f 04 	lds	r30, 0x044F
    3f5c:	f0 e0       	ldi	r31, 0x00	; 0
    3f5e:	e1 5b       	subi	r30, 0xB1	; 177
    3f60:	fe 4f       	sbci	r31, 0xFE	; 254
    3f62:	80 81       	ld	r24, Z
    3f64:	89 2b       	or	r24, r25
    3f66:	80 93 3c 02 	sts	0x023C, r24
    3f6a:	82 e0       	ldi	r24, 0x02	; 2
    3f6c:	80 93 51 04 	sts	0x0451, r24
    3f70:	10 92 32 04 	sts	0x0432, r1
    3f74:	10 92 31 04 	sts	0x0431, r1
    3f78:	80 91 52 04 	lds	r24, 0x0452
    3f7c:	88 23       	and	r24, r24
    3f7e:	31 f4       	brne	.+12     	; 0x3f8c <STEPPER_process_run_mode+0x1f4>
    3f80:	8c e3       	ldi	r24, 0x3C	; 60
    3f82:	92 e0       	ldi	r25, 0x02	; 2
    3f84:	61 2f       	mov	r22, r17
    3f86:	40 2f       	mov	r20, r16
    3f88:	0e 94 b6 20 	call	0x416c	; 0x416c <STEPPER_process_pwm>
    3f8c:	88 b1       	in	r24, 0x08	; 8
    3f8e:	83 70       	andi	r24, 0x03	; 3
    3f90:	90 91 3c 02 	lds	r25, 0x023C
    3f94:	89 2b       	or	r24, r25
    3f96:	88 b9       	out	0x08, r24	; 8
    3f98:	1f 91       	pop	r17
    3f9a:	0f 91       	pop	r16
    3f9c:	08 95       	ret

00003f9e <STEPPER_process_step_mode>:
    3f9e:	88 23       	and	r24, r24
    3fa0:	21 f0       	breq	.+8      	; 0x3faa <STEPPER_process_step_mode+0xc>
    3fa2:	81 30       	cpi	r24, 0x01	; 1
    3fa4:	09 f0       	breq	.+2      	; 0x3fa8 <STEPPER_process_step_mode+0xa>
    3fa6:	4e c0       	rjmp	.+156    	; 0x4044 <STEPPER_process_step_mode+0xa6>
    3fa8:	27 c0       	rjmp	.+78     	; 0x3ff8 <STEPPER_process_step_mode+0x5a>
    3faa:	80 91 3b 04 	lds	r24, 0x043B
    3fae:	90 91 3c 04 	lds	r25, 0x043C
    3fb2:	89 2b       	or	r24, r25
    3fb4:	49 f0       	breq	.+18     	; 0x3fc8 <STEPPER_process_step_mode+0x2a>
    3fb6:	80 91 3b 04 	lds	r24, 0x043B
    3fba:	90 91 3c 04 	lds	r25, 0x043C
    3fbe:	01 97       	sbiw	r24, 0x01	; 1
    3fc0:	90 93 3c 04 	sts	0x043C, r25
    3fc4:	80 93 3b 04 	sts	0x043B, r24
    3fc8:	80 91 5b 04 	lds	r24, 0x045B
    3fcc:	88 23       	and	r24, r24
    3fce:	d1 f5       	brne	.+116    	; 0x4044 <STEPPER_process_step_mode+0xa6>
    3fd0:	20 91 3b 04 	lds	r18, 0x043B
    3fd4:	30 91 3c 04 	lds	r19, 0x043C
    3fd8:	80 91 3f 04 	lds	r24, 0x043F
    3fdc:	90 91 40 04 	lds	r25, 0x0440
    3fe0:	28 17       	cp	r18, r24
    3fe2:	39 07       	cpc	r19, r25
    3fe4:	79 f5       	brne	.+94     	; 0x4044 <STEPPER_process_step_mode+0xa6>
    3fe6:	80 e0       	ldi	r24, 0x00	; 0
    3fe8:	60 e0       	ldi	r22, 0x00	; 0
    3fea:	70 e0       	ldi	r23, 0x00	; 0
    3fec:	0e 94 d9 12 	call	0x25b2	; 0x25b2 <STEPPER_set_speed>
    3ff0:	81 e0       	ldi	r24, 0x01	; 1
    3ff2:	80 93 5b 04 	sts	0x045B, r24
    3ff6:	08 95       	ret
    3ff8:	80 91 3d 04 	lds	r24, 0x043D
    3ffc:	90 91 3e 04 	lds	r25, 0x043E
    4000:	89 2b       	or	r24, r25
    4002:	49 f0       	breq	.+18     	; 0x4016 <STEPPER_process_step_mode+0x78>
    4004:	80 91 3d 04 	lds	r24, 0x043D
    4008:	90 91 3e 04 	lds	r25, 0x043E
    400c:	01 97       	sbiw	r24, 0x01	; 1
    400e:	90 93 3e 04 	sts	0x043E, r25
    4012:	80 93 3d 04 	sts	0x043D, r24
    4016:	80 91 5c 04 	lds	r24, 0x045C
    401a:	88 23       	and	r24, r24
    401c:	99 f4       	brne	.+38     	; 0x4044 <STEPPER_process_step_mode+0xa6>
    401e:	20 91 3d 04 	lds	r18, 0x043D
    4022:	30 91 3e 04 	lds	r19, 0x043E
    4026:	80 91 41 04 	lds	r24, 0x0441
    402a:	90 91 42 04 	lds	r25, 0x0442
    402e:	28 17       	cp	r18, r24
    4030:	39 07       	cpc	r19, r25
    4032:	41 f4       	brne	.+16     	; 0x4044 <STEPPER_process_step_mode+0xa6>
    4034:	81 e0       	ldi	r24, 0x01	; 1
    4036:	60 e0       	ldi	r22, 0x00	; 0
    4038:	70 e0       	ldi	r23, 0x00	; 0
    403a:	0e 94 d9 12 	call	0x25b2	; 0x25b2 <STEPPER_set_speed>
    403e:	81 e0       	ldi	r24, 0x01	; 1
    4040:	80 93 5c 04 	sts	0x045C, r24
    4044:	08 95       	ret

00004046 <STEPPER_stop>:
    4046:	0f 93       	push	r16
    4048:	1f 93       	push	r17
    404a:	18 2f       	mov	r17, r24
    404c:	06 2f       	mov	r16, r22
    404e:	66 23       	and	r22, r22
    4050:	49 f4       	brne	.+18     	; 0x4064 <STEPPER_stop+0x1e>
    4052:	60 e0       	ldi	r22, 0x00	; 0
    4054:	70 e0       	ldi	r23, 0x00	; 0
    4056:	0e 94 d9 12 	call	0x25b2	; 0x25b2 <STEPPER_set_speed>
    405a:	81 2f       	mov	r24, r17
    405c:	60 e0       	ldi	r22, 0x00	; 0
    405e:	70 e0       	ldi	r23, 0x00	; 0
    4060:	0e 94 73 1b 	call	0x36e6	; 0x36e6 <STEPPER_set_steps>
    4064:	81 e0       	ldi	r24, 0x01	; 1
    4066:	80 93 5f 04 	sts	0x045F, r24
    406a:	11 30       	cpi	r17, 0x01	; 1
    406c:	51 f0       	breq	.+20     	; 0x4082 <STEPPER_stop+0x3c>
    406e:	11 30       	cpi	r17, 0x01	; 1
    4070:	18 f0       	brcs	.+6      	; 0x4078 <STEPPER_stop+0x32>
    4072:	12 30       	cpi	r17, 0x02	; 2
    4074:	41 f4       	brne	.+16     	; 0x4086 <STEPPER_stop+0x40>
    4076:	03 c0       	rjmp	.+6      	; 0x407e <STEPPER_stop+0x38>
    4078:	00 93 47 04 	sts	0x0447, r16
    407c:	04 c0       	rjmp	.+8      	; 0x4086 <STEPPER_stop+0x40>
    407e:	00 93 47 04 	sts	0x0447, r16
    4082:	00 93 48 04 	sts	0x0448, r16
    4086:	10 92 5f 04 	sts	0x045F, r1
    408a:	1f 91       	pop	r17
    408c:	0f 91       	pop	r16
    408e:	08 95       	ret

00004090 <TMRSRVC_process>:
    4090:	ff 92       	push	r15
    4092:	0f 93       	push	r16
    4094:	1f 93       	push	r17
    4096:	cf 93       	push	r28
    4098:	df 93       	push	r29
    409a:	80 91 99 04 	lds	r24, 0x0499
    409e:	88 23       	and	r24, r24
    40a0:	09 f4       	brne	.+2      	; 0x40a4 <TMRSRVC_process+0x14>
    40a2:	59 c0       	rjmp	.+178    	; 0x4156 <TMRSRVC_process+0xc6>
    40a4:	00 91 9a 04 	lds	r16, 0x049A
    40a8:	10 91 9b 04 	lds	r17, 0x049B
    40ac:	f8 01       	movw	r30, r16
    40ae:	c0 81       	ld	r28, Z
    40b0:	d1 81       	ldd	r29, Z+1	; 0x01
    40b2:	8c 81       	ldd	r24, Y+4	; 0x04
    40b4:	9d 81       	ldd	r25, Y+5	; 0x05
    40b6:	01 97       	sbiw	r24, 0x01	; 1
    40b8:	9d 83       	std	Y+5, r25	; 0x05
    40ba:	8c 83       	std	Y+4, r24	; 0x04
    40bc:	18 16       	cp	r1, r24
    40be:	19 06       	cpc	r1, r25
    40c0:	0c f4       	brge	.+2      	; 0x40c4 <TMRSRVC_process+0x34>
    40c2:	49 c0       	rjmp	.+146    	; 0x4156 <TMRSRVC_process+0xc6>
    40c4:	89 81       	ldd	r24, Y+1	; 0x01
    40c6:	80 ff       	sbrs	r24, 0
    40c8:	05 c0       	rjmp	.+10     	; 0x40d4 <TMRSRVC_process+0x44>
    40ca:	8e 81       	ldd	r24, Y+6	; 0x06
    40cc:	88 23       	and	r24, r24
    40ce:	11 f4       	brne	.+4      	; 0x40d4 <TMRSRVC_process+0x44>
    40d0:	81 e0       	ldi	r24, 0x01	; 1
    40d2:	8e 83       	std	Y+6, r24	; 0x06
    40d4:	89 81       	ldd	r24, Y+1	; 0x01
    40d6:	81 ff       	sbrs	r24, 1
    40d8:	03 c0       	rjmp	.+6      	; 0x40e0 <TMRSRVC_process+0x50>
    40da:	ef 81       	ldd	r30, Y+7	; 0x07
    40dc:	f8 85       	ldd	r31, Y+8	; 0x08
    40de:	09 95       	icall
    40e0:	80 91 99 04 	lds	r24, 0x0499
    40e4:	82 30       	cpi	r24, 0x02	; 2
    40e6:	a8 f0       	brcs	.+42     	; 0x4112 <TMRSRVC_process+0x82>
    40e8:	f8 01       	movw	r30, r16
    40ea:	82 81       	ldd	r24, Z+2	; 0x02
    40ec:	93 81       	ldd	r25, Z+3	; 0x03
    40ee:	90 93 9b 04 	sts	0x049B, r25
    40f2:	80 93 9a 04 	sts	0x049A, r24
    40f6:	13 82       	std	Z+3, r1	; 0x03
    40f8:	12 82       	std	Z+2, r1	; 0x02
    40fa:	e0 91 00 00 	lds	r30, 0x0000
    40fe:	f0 91 01 00 	lds	r31, 0x0001
    4102:	84 81       	ldd	r24, Z+4	; 0x04
    4104:	95 81       	ldd	r25, Z+5	; 0x05
    4106:	18 16       	cp	r1, r24
    4108:	19 06       	cpc	r1, r25
    410a:	3c f0       	brlt	.+14     	; 0x411a <TMRSRVC_process+0x8a>
    410c:	ff 24       	eor	r15, r15
    410e:	f3 94       	inc	r15
    4110:	05 c0       	rjmp	.+10     	; 0x411c <TMRSRVC_process+0x8c>
    4112:	10 92 9b 04 	sts	0x049B, r1
    4116:	10 92 9a 04 	sts	0x049A, r1
    411a:	ff 24       	eor	r15, r15
    411c:	80 91 99 04 	lds	r24, 0x0499
    4120:	81 50       	subi	r24, 0x01	; 1
    4122:	80 93 99 04 	sts	0x0499, r24
    4126:	80 91 99 04 	lds	r24, 0x0499
    412a:	88 23       	and	r24, r24
    412c:	11 f4       	brne	.+4      	; 0x4132 <TMRSRVC_process+0xa2>
    412e:	0e 94 b3 20 	call	0x4166	; 0x4166 <TMRSRVC_stop>
    4132:	89 81       	ldd	r24, Y+1	; 0x01
    4134:	82 ff       	sbrs	r24, 2
    4136:	08 c0       	rjmp	.+16     	; 0x4148 <TMRSRVC_process+0xb8>
    4138:	8a 81       	ldd	r24, Y+2	; 0x02
    413a:	9b 81       	ldd	r25, Y+3	; 0x03
    413c:	9d 83       	std	Y+5, r25	; 0x05
    413e:	8c 83       	std	Y+4, r24	; 0x04
    4140:	c8 01       	movw	r24, r16
    4142:	0e 94 03 1c 	call	0x3806	; 0x3806 <TMRSRVC_insert>
    4146:	08 c0       	rjmp	.+16     	; 0x4158 <TMRSRVC_process+0xc8>
    4148:	c8 01       	movw	r24, r16
    414a:	0e 94 bc 29 	call	0x5378	; 0x5378 <free>
    414e:	89 81       	ldd	r24, Y+1	; 0x01
    4150:	8f 7e       	andi	r24, 0xEF	; 239
    4152:	89 83       	std	Y+1, r24	; 0x01
    4154:	01 c0       	rjmp	.+2      	; 0x4158 <TMRSRVC_process+0xc8>
    4156:	ff 24       	eor	r15, r15
    4158:	8f 2d       	mov	r24, r15
    415a:	df 91       	pop	r29
    415c:	cf 91       	pop	r28
    415e:	1f 91       	pop	r17
    4160:	0f 91       	pop	r16
    4162:	ff 90       	pop	r15
    4164:	08 95       	ret

00004166 <TMRSRVC_stop>:
    4166:	10 92 3b 02 	sts	0x023B, r1
    416a:	08 95       	ret

0000416c <STEPPER_process_pwm>:
    416c:	fc 01       	movw	r30, r24
    416e:	80 91 50 04 	lds	r24, 0x0450
    4172:	82 30       	cpi	r24, 0x02	; 2
    4174:	69 f4       	brne	.+26     	; 0x4190 <STEPPER_process_pwm+0x24>
    4176:	80 91 40 02 	lds	r24, 0x0240
    417a:	91 e0       	ldi	r25, 0x01	; 1
    417c:	89 27       	eor	r24, r25
    417e:	80 93 40 02 	sts	0x0240, r24
    4182:	88 23       	and	r24, r24
    4184:	09 f0       	breq	.+2      	; 0x4188 <STEPPER_process_pwm+0x1c>
    4186:	3e c0       	rjmp	.+124    	; 0x4204 <STEPPER_process_pwm+0x98>
    4188:	80 81       	ld	r24, Z
    418a:	83 7e       	andi	r24, 0xE3	; 227
    418c:	80 83       	st	Z, r24
    418e:	3a c0       	rjmp	.+116    	; 0x4204 <STEPPER_process_pwm+0x98>
    4190:	80 91 2f 04 	lds	r24, 0x042F
    4194:	90 91 30 04 	lds	r25, 0x0430
    4198:	c3 97       	sbiw	r24, 0x33	; 51
    419a:	a4 f5       	brge	.+104    	; 0x4204 <STEPPER_process_pwm+0x98>
    419c:	66 23       	and	r22, r22
    419e:	d1 f0       	breq	.+52     	; 0x41d4 <STEPPER_process_pwm+0x68>
    41a0:	20 91 2f 04 	lds	r18, 0x042F
    41a4:	30 91 30 04 	lds	r19, 0x0430
    41a8:	80 e6       	ldi	r24, 0x60	; 96
    41aa:	90 e0       	ldi	r25, 0x00	; 0
    41ac:	bc 01       	movw	r22, r24
    41ae:	26 9f       	mul	r18, r22
    41b0:	c0 01       	movw	r24, r0
    41b2:	27 9f       	mul	r18, r23
    41b4:	90 0d       	add	r25, r0
    41b6:	36 9f       	mul	r19, r22
    41b8:	90 0d       	add	r25, r0
    41ba:	11 24       	eor	r1, r1
    41bc:	88 0f       	add	r24, r24
    41be:	89 2f       	mov	r24, r25
    41c0:	88 1f       	adc	r24, r24
    41c2:	99 0b       	sbc	r25, r25
    41c4:	90 93 44 04 	sts	0x0444, r25
    41c8:	80 93 43 04 	sts	0x0443, r24
    41cc:	81 e0       	ldi	r24, 0x01	; 1
    41ce:	80 93 3e 02 	sts	0x023E, r24
    41d2:	18 c0       	rjmp	.+48     	; 0x4204 <STEPPER_process_pwm+0x98>
    41d4:	80 91 3e 02 	lds	r24, 0x023E
    41d8:	88 23       	and	r24, r24
    41da:	a1 f0       	breq	.+40     	; 0x4204 <STEPPER_process_pwm+0x98>
    41dc:	80 91 43 04 	lds	r24, 0x0443
    41e0:	90 91 44 04 	lds	r25, 0x0444
    41e4:	01 97       	sbiw	r24, 0x01	; 1
    41e6:	90 93 44 04 	sts	0x0444, r25
    41ea:	80 93 43 04 	sts	0x0443, r24
    41ee:	80 91 43 04 	lds	r24, 0x0443
    41f2:	90 91 44 04 	lds	r25, 0x0444
    41f6:	89 2b       	or	r24, r25
    41f8:	29 f4       	brne	.+10     	; 0x4204 <STEPPER_process_pwm+0x98>
    41fa:	80 81       	ld	r24, Z
    41fc:	83 7e       	andi	r24, 0xE3	; 227
    41fe:	80 83       	st	Z, r24
    4200:	10 92 3e 02 	sts	0x023E, r1
    4204:	80 91 51 04 	lds	r24, 0x0451
    4208:	82 30       	cpi	r24, 0x02	; 2
    420a:	69 f4       	brne	.+26     	; 0x4226 <STEPPER_process_pwm+0xba>
    420c:	80 91 3f 02 	lds	r24, 0x023F
    4210:	91 e0       	ldi	r25, 0x01	; 1
    4212:	89 27       	eor	r24, r25
    4214:	80 93 3f 02 	sts	0x023F, r24
    4218:	88 23       	and	r24, r24
    421a:	09 f0       	breq	.+2      	; 0x421e <STEPPER_process_pwm+0xb2>
    421c:	3e c0       	rjmp	.+124    	; 0x429a <STEPPER_process_pwm+0x12e>
    421e:	80 81       	ld	r24, Z
    4220:	8f 71       	andi	r24, 0x1F	; 31
    4222:	80 83       	st	Z, r24
    4224:	08 95       	ret
    4226:	80 91 31 04 	lds	r24, 0x0431
    422a:	90 91 32 04 	lds	r25, 0x0432
    422e:	c3 97       	sbiw	r24, 0x33	; 51
    4230:	a4 f5       	brge	.+104    	; 0x429a <STEPPER_process_pwm+0x12e>
    4232:	44 23       	and	r20, r20
    4234:	d1 f0       	breq	.+52     	; 0x426a <STEPPER_process_pwm+0xfe>
    4236:	20 91 31 04 	lds	r18, 0x0431
    423a:	30 91 32 04 	lds	r19, 0x0432
    423e:	80 e6       	ldi	r24, 0x60	; 96
    4240:	90 e0       	ldi	r25, 0x00	; 0
    4242:	ac 01       	movw	r20, r24
    4244:	24 9f       	mul	r18, r20
    4246:	c0 01       	movw	r24, r0
    4248:	25 9f       	mul	r18, r21
    424a:	90 0d       	add	r25, r0
    424c:	34 9f       	mul	r19, r20
    424e:	90 0d       	add	r25, r0
    4250:	11 24       	eor	r1, r1
    4252:	88 0f       	add	r24, r24
    4254:	89 2f       	mov	r24, r25
    4256:	88 1f       	adc	r24, r24
    4258:	99 0b       	sbc	r25, r25
    425a:	90 93 46 04 	sts	0x0446, r25
    425e:	80 93 45 04 	sts	0x0445, r24
    4262:	81 e0       	ldi	r24, 0x01	; 1
    4264:	80 93 3d 02 	sts	0x023D, r24
    4268:	08 95       	ret
    426a:	80 91 3d 02 	lds	r24, 0x023D
    426e:	88 23       	and	r24, r24
    4270:	a1 f0       	breq	.+40     	; 0x429a <STEPPER_process_pwm+0x12e>
    4272:	80 91 45 04 	lds	r24, 0x0445
    4276:	90 91 46 04 	lds	r25, 0x0446
    427a:	01 97       	sbiw	r24, 0x01	; 1
    427c:	90 93 46 04 	sts	0x0446, r25
    4280:	80 93 45 04 	sts	0x0445, r24
    4284:	80 91 45 04 	lds	r24, 0x0445
    4288:	90 91 46 04 	lds	r25, 0x0446
    428c:	89 2b       	or	r24, r25
    428e:	29 f4       	brne	.+10     	; 0x429a <STEPPER_process_pwm+0x12e>
    4290:	80 81       	ld	r24, Z
    4292:	8f 71       	andi	r24, 0x1F	; 31
    4294:	80 83       	st	Z, r24
    4296:	10 92 3d 02 	sts	0x023D, r1
    429a:	08 95       	ret

0000429c <__subsf3>:
    429c:	50 58       	subi	r21, 0x80	; 128

0000429e <__addsf3>:
    429e:	bb 27       	eor	r27, r27
    42a0:	aa 27       	eor	r26, r26
    42a2:	0e d0       	rcall	.+28     	; 0x42c0 <__addsf3x>
    42a4:	75 c1       	rjmp	.+746    	; 0x4590 <__fp_round>
    42a6:	66 d1       	rcall	.+716    	; 0x4574 <__fp_pscA>
    42a8:	30 f0       	brcs	.+12     	; 0x42b6 <__addsf3+0x18>
    42aa:	6b d1       	rcall	.+726    	; 0x4582 <__fp_pscB>
    42ac:	20 f0       	brcs	.+8      	; 0x42b6 <__addsf3+0x18>
    42ae:	31 f4       	brne	.+12     	; 0x42bc <__addsf3+0x1e>
    42b0:	9f 3f       	cpi	r25, 0xFF	; 255
    42b2:	11 f4       	brne	.+4      	; 0x42b8 <__addsf3+0x1a>
    42b4:	1e f4       	brtc	.+6      	; 0x42bc <__addsf3+0x1e>
    42b6:	5b c1       	rjmp	.+694    	; 0x456e <__fp_nan>
    42b8:	0e f4       	brtc	.+2      	; 0x42bc <__addsf3+0x1e>
    42ba:	e0 95       	com	r30
    42bc:	e7 fb       	bst	r30, 7
    42be:	51 c1       	rjmp	.+674    	; 0x4562 <__fp_inf>

000042c0 <__addsf3x>:
    42c0:	e9 2f       	mov	r30, r25
    42c2:	77 d1       	rcall	.+750    	; 0x45b2 <__fp_split3>
    42c4:	80 f3       	brcs	.-32     	; 0x42a6 <__addsf3+0x8>
    42c6:	ba 17       	cp	r27, r26
    42c8:	62 07       	cpc	r22, r18
    42ca:	73 07       	cpc	r23, r19
    42cc:	84 07       	cpc	r24, r20
    42ce:	95 07       	cpc	r25, r21
    42d0:	18 f0       	brcs	.+6      	; 0x42d8 <__addsf3x+0x18>
    42d2:	71 f4       	brne	.+28     	; 0x42f0 <__addsf3x+0x30>
    42d4:	9e f5       	brtc	.+102    	; 0x433c <__addsf3x+0x7c>
    42d6:	8f c1       	rjmp	.+798    	; 0x45f6 <__fp_zero>
    42d8:	0e f4       	brtc	.+2      	; 0x42dc <__addsf3x+0x1c>
    42da:	e0 95       	com	r30
    42dc:	0b 2e       	mov	r0, r27
    42de:	ba 2f       	mov	r27, r26
    42e0:	a0 2d       	mov	r26, r0
    42e2:	0b 01       	movw	r0, r22
    42e4:	b9 01       	movw	r22, r18
    42e6:	90 01       	movw	r18, r0
    42e8:	0c 01       	movw	r0, r24
    42ea:	ca 01       	movw	r24, r20
    42ec:	a0 01       	movw	r20, r0
    42ee:	11 24       	eor	r1, r1
    42f0:	ff 27       	eor	r31, r31
    42f2:	59 1b       	sub	r21, r25
    42f4:	99 f0       	breq	.+38     	; 0x431c <__addsf3x+0x5c>
    42f6:	59 3f       	cpi	r21, 0xF9	; 249
    42f8:	50 f4       	brcc	.+20     	; 0x430e <__addsf3x+0x4e>
    42fa:	50 3e       	cpi	r21, 0xE0	; 224
    42fc:	68 f1       	brcs	.+90     	; 0x4358 <__addsf3x+0x98>
    42fe:	1a 16       	cp	r1, r26
    4300:	f0 40       	sbci	r31, 0x00	; 0
    4302:	a2 2f       	mov	r26, r18
    4304:	23 2f       	mov	r18, r19
    4306:	34 2f       	mov	r19, r20
    4308:	44 27       	eor	r20, r20
    430a:	58 5f       	subi	r21, 0xF8	; 248
    430c:	f3 cf       	rjmp	.-26     	; 0x42f4 <__addsf3x+0x34>
    430e:	46 95       	lsr	r20
    4310:	37 95       	ror	r19
    4312:	27 95       	ror	r18
    4314:	a7 95       	ror	r26
    4316:	f0 40       	sbci	r31, 0x00	; 0
    4318:	53 95       	inc	r21
    431a:	c9 f7       	brne	.-14     	; 0x430e <__addsf3x+0x4e>
    431c:	7e f4       	brtc	.+30     	; 0x433c <__addsf3x+0x7c>
    431e:	1f 16       	cp	r1, r31
    4320:	ba 0b       	sbc	r27, r26
    4322:	62 0b       	sbc	r22, r18
    4324:	73 0b       	sbc	r23, r19
    4326:	84 0b       	sbc	r24, r20
    4328:	ba f0       	brmi	.+46     	; 0x4358 <__addsf3x+0x98>
    432a:	91 50       	subi	r25, 0x01	; 1
    432c:	a1 f0       	breq	.+40     	; 0x4356 <__addsf3x+0x96>
    432e:	ff 0f       	add	r31, r31
    4330:	bb 1f       	adc	r27, r27
    4332:	66 1f       	adc	r22, r22
    4334:	77 1f       	adc	r23, r23
    4336:	88 1f       	adc	r24, r24
    4338:	c2 f7       	brpl	.-16     	; 0x432a <__addsf3x+0x6a>
    433a:	0e c0       	rjmp	.+28     	; 0x4358 <__addsf3x+0x98>
    433c:	ba 0f       	add	r27, r26
    433e:	62 1f       	adc	r22, r18
    4340:	73 1f       	adc	r23, r19
    4342:	84 1f       	adc	r24, r20
    4344:	48 f4       	brcc	.+18     	; 0x4358 <__addsf3x+0x98>
    4346:	87 95       	ror	r24
    4348:	77 95       	ror	r23
    434a:	67 95       	ror	r22
    434c:	b7 95       	ror	r27
    434e:	f7 95       	ror	r31
    4350:	9e 3f       	cpi	r25, 0xFE	; 254
    4352:	08 f0       	brcs	.+2      	; 0x4356 <__addsf3x+0x96>
    4354:	b3 cf       	rjmp	.-154    	; 0x42bc <__addsf3+0x1e>
    4356:	93 95       	inc	r25
    4358:	88 0f       	add	r24, r24
    435a:	08 f0       	brcs	.+2      	; 0x435e <__addsf3x+0x9e>
    435c:	99 27       	eor	r25, r25
    435e:	ee 0f       	add	r30, r30
    4360:	97 95       	ror	r25
    4362:	87 95       	ror	r24
    4364:	08 95       	ret

00004366 <__cmpsf2>:
    4366:	d9 d0       	rcall	.+434    	; 0x451a <__fp_cmp>
    4368:	08 f4       	brcc	.+2      	; 0x436c <__cmpsf2+0x6>
    436a:	81 e0       	ldi	r24, 0x01	; 1
    436c:	08 95       	ret

0000436e <__divsf3>:
    436e:	0c d0       	rcall	.+24     	; 0x4388 <__divsf3x>
    4370:	0f c1       	rjmp	.+542    	; 0x4590 <__fp_round>
    4372:	07 d1       	rcall	.+526    	; 0x4582 <__fp_pscB>
    4374:	40 f0       	brcs	.+16     	; 0x4386 <__divsf3+0x18>
    4376:	fe d0       	rcall	.+508    	; 0x4574 <__fp_pscA>
    4378:	30 f0       	brcs	.+12     	; 0x4386 <__divsf3+0x18>
    437a:	21 f4       	brne	.+8      	; 0x4384 <__divsf3+0x16>
    437c:	5f 3f       	cpi	r21, 0xFF	; 255
    437e:	19 f0       	breq	.+6      	; 0x4386 <__divsf3+0x18>
    4380:	f0 c0       	rjmp	.+480    	; 0x4562 <__fp_inf>
    4382:	51 11       	cpse	r21, r1
    4384:	39 c1       	rjmp	.+626    	; 0x45f8 <__fp_szero>
    4386:	f3 c0       	rjmp	.+486    	; 0x456e <__fp_nan>

00004388 <__divsf3x>:
    4388:	14 d1       	rcall	.+552    	; 0x45b2 <__fp_split3>
    438a:	98 f3       	brcs	.-26     	; 0x4372 <__divsf3+0x4>

0000438c <__divsf3_pse>:
    438c:	99 23       	and	r25, r25
    438e:	c9 f3       	breq	.-14     	; 0x4382 <__divsf3+0x14>
    4390:	55 23       	and	r21, r21
    4392:	b1 f3       	breq	.-20     	; 0x4380 <__divsf3+0x12>
    4394:	95 1b       	sub	r25, r21
    4396:	55 0b       	sbc	r21, r21
    4398:	bb 27       	eor	r27, r27
    439a:	aa 27       	eor	r26, r26
    439c:	62 17       	cp	r22, r18
    439e:	73 07       	cpc	r23, r19
    43a0:	84 07       	cpc	r24, r20
    43a2:	38 f0       	brcs	.+14     	; 0x43b2 <__divsf3_pse+0x26>
    43a4:	9f 5f       	subi	r25, 0xFF	; 255
    43a6:	5f 4f       	sbci	r21, 0xFF	; 255
    43a8:	22 0f       	add	r18, r18
    43aa:	33 1f       	adc	r19, r19
    43ac:	44 1f       	adc	r20, r20
    43ae:	aa 1f       	adc	r26, r26
    43b0:	a9 f3       	breq	.-22     	; 0x439c <__divsf3_pse+0x10>
    43b2:	33 d0       	rcall	.+102    	; 0x441a <__divsf3_pse+0x8e>
    43b4:	0e 2e       	mov	r0, r30
    43b6:	3a f0       	brmi	.+14     	; 0x43c6 <__divsf3_pse+0x3a>
    43b8:	e0 e8       	ldi	r30, 0x80	; 128
    43ba:	30 d0       	rcall	.+96     	; 0x441c <__divsf3_pse+0x90>
    43bc:	91 50       	subi	r25, 0x01	; 1
    43be:	50 40       	sbci	r21, 0x00	; 0
    43c0:	e6 95       	lsr	r30
    43c2:	00 1c       	adc	r0, r0
    43c4:	ca f7       	brpl	.-14     	; 0x43b8 <__divsf3_pse+0x2c>
    43c6:	29 d0       	rcall	.+82     	; 0x441a <__divsf3_pse+0x8e>
    43c8:	fe 2f       	mov	r31, r30
    43ca:	27 d0       	rcall	.+78     	; 0x441a <__divsf3_pse+0x8e>
    43cc:	66 0f       	add	r22, r22
    43ce:	77 1f       	adc	r23, r23
    43d0:	88 1f       	adc	r24, r24
    43d2:	bb 1f       	adc	r27, r27
    43d4:	26 17       	cp	r18, r22
    43d6:	37 07       	cpc	r19, r23
    43d8:	48 07       	cpc	r20, r24
    43da:	ab 07       	cpc	r26, r27
    43dc:	b0 e8       	ldi	r27, 0x80	; 128
    43de:	09 f0       	breq	.+2      	; 0x43e2 <__divsf3_pse+0x56>
    43e0:	bb 0b       	sbc	r27, r27
    43e2:	80 2d       	mov	r24, r0
    43e4:	bf 01       	movw	r22, r30
    43e6:	ff 27       	eor	r31, r31
    43e8:	93 58       	subi	r25, 0x83	; 131
    43ea:	5f 4f       	sbci	r21, 0xFF	; 255
    43ec:	2a f0       	brmi	.+10     	; 0x43f8 <__divsf3_pse+0x6c>
    43ee:	9e 3f       	cpi	r25, 0xFE	; 254
    43f0:	51 05       	cpc	r21, r1
    43f2:	68 f0       	brcs	.+26     	; 0x440e <__divsf3_pse+0x82>
    43f4:	b6 c0       	rjmp	.+364    	; 0x4562 <__fp_inf>
    43f6:	00 c1       	rjmp	.+512    	; 0x45f8 <__fp_szero>
    43f8:	5f 3f       	cpi	r21, 0xFF	; 255
    43fa:	ec f3       	brlt	.-6      	; 0x43f6 <__divsf3_pse+0x6a>
    43fc:	98 3e       	cpi	r25, 0xE8	; 232
    43fe:	dc f3       	brlt	.-10     	; 0x43f6 <__divsf3_pse+0x6a>
    4400:	86 95       	lsr	r24
    4402:	77 95       	ror	r23
    4404:	67 95       	ror	r22
    4406:	b7 95       	ror	r27
    4408:	f7 95       	ror	r31
    440a:	9f 5f       	subi	r25, 0xFF	; 255
    440c:	c9 f7       	brne	.-14     	; 0x4400 <__divsf3_pse+0x74>
    440e:	88 0f       	add	r24, r24
    4410:	91 1d       	adc	r25, r1
    4412:	96 95       	lsr	r25
    4414:	87 95       	ror	r24
    4416:	97 f9       	bld	r25, 7
    4418:	08 95       	ret
    441a:	e1 e0       	ldi	r30, 0x01	; 1
    441c:	66 0f       	add	r22, r22
    441e:	77 1f       	adc	r23, r23
    4420:	88 1f       	adc	r24, r24
    4422:	bb 1f       	adc	r27, r27
    4424:	62 17       	cp	r22, r18
    4426:	73 07       	cpc	r23, r19
    4428:	84 07       	cpc	r24, r20
    442a:	ba 07       	cpc	r27, r26
    442c:	20 f0       	brcs	.+8      	; 0x4436 <__divsf3_pse+0xaa>
    442e:	62 1b       	sub	r22, r18
    4430:	73 0b       	sbc	r23, r19
    4432:	84 0b       	sbc	r24, r20
    4434:	ba 0b       	sbc	r27, r26
    4436:	ee 1f       	adc	r30, r30
    4438:	88 f7       	brcc	.-30     	; 0x441c <__divsf3_pse+0x90>
    443a:	e0 95       	com	r30
    443c:	08 95       	ret

0000443e <__fixsfsi>:
    443e:	04 d0       	rcall	.+8      	; 0x4448 <__fixunssfsi>
    4440:	68 94       	set
    4442:	b1 11       	cpse	r27, r1
    4444:	d9 c0       	rjmp	.+434    	; 0x45f8 <__fp_szero>
    4446:	08 95       	ret

00004448 <__fixunssfsi>:
    4448:	bc d0       	rcall	.+376    	; 0x45c2 <__fp_splitA>
    444a:	88 f0       	brcs	.+34     	; 0x446e <__fixunssfsi+0x26>
    444c:	9f 57       	subi	r25, 0x7F	; 127
    444e:	90 f0       	brcs	.+36     	; 0x4474 <__fixunssfsi+0x2c>
    4450:	b9 2f       	mov	r27, r25
    4452:	99 27       	eor	r25, r25
    4454:	b7 51       	subi	r27, 0x17	; 23
    4456:	a0 f0       	brcs	.+40     	; 0x4480 <__fixunssfsi+0x38>
    4458:	d1 f0       	breq	.+52     	; 0x448e <__fixunssfsi+0x46>
    445a:	66 0f       	add	r22, r22
    445c:	77 1f       	adc	r23, r23
    445e:	88 1f       	adc	r24, r24
    4460:	99 1f       	adc	r25, r25
    4462:	1a f0       	brmi	.+6      	; 0x446a <__fixunssfsi+0x22>
    4464:	ba 95       	dec	r27
    4466:	c9 f7       	brne	.-14     	; 0x445a <__fixunssfsi+0x12>
    4468:	12 c0       	rjmp	.+36     	; 0x448e <__fixunssfsi+0x46>
    446a:	b1 30       	cpi	r27, 0x01	; 1
    446c:	81 f0       	breq	.+32     	; 0x448e <__fixunssfsi+0x46>
    446e:	c3 d0       	rcall	.+390    	; 0x45f6 <__fp_zero>
    4470:	b1 e0       	ldi	r27, 0x01	; 1
    4472:	08 95       	ret
    4474:	c0 c0       	rjmp	.+384    	; 0x45f6 <__fp_zero>
    4476:	67 2f       	mov	r22, r23
    4478:	78 2f       	mov	r23, r24
    447a:	88 27       	eor	r24, r24
    447c:	b8 5f       	subi	r27, 0xF8	; 248
    447e:	39 f0       	breq	.+14     	; 0x448e <__fixunssfsi+0x46>
    4480:	b9 3f       	cpi	r27, 0xF9	; 249
    4482:	cc f3       	brlt	.-14     	; 0x4476 <__fixunssfsi+0x2e>
    4484:	86 95       	lsr	r24
    4486:	77 95       	ror	r23
    4488:	67 95       	ror	r22
    448a:	b3 95       	inc	r27
    448c:	d9 f7       	brne	.-10     	; 0x4484 <__fixunssfsi+0x3c>
    448e:	3e f4       	brtc	.+14     	; 0x449e <__fixunssfsi+0x56>
    4490:	90 95       	com	r25
    4492:	80 95       	com	r24
    4494:	70 95       	com	r23
    4496:	61 95       	neg	r22
    4498:	7f 4f       	sbci	r23, 0xFF	; 255
    449a:	8f 4f       	sbci	r24, 0xFF	; 255
    449c:	9f 4f       	sbci	r25, 0xFF	; 255
    449e:	08 95       	ret

000044a0 <__floatunsisf>:
    44a0:	e8 94       	clt
    44a2:	09 c0       	rjmp	.+18     	; 0x44b6 <__floatsisf+0x12>

000044a4 <__floatsisf>:
    44a4:	97 fb       	bst	r25, 7
    44a6:	3e f4       	brtc	.+14     	; 0x44b6 <__floatsisf+0x12>
    44a8:	90 95       	com	r25
    44aa:	80 95       	com	r24
    44ac:	70 95       	com	r23
    44ae:	61 95       	neg	r22
    44b0:	7f 4f       	sbci	r23, 0xFF	; 255
    44b2:	8f 4f       	sbci	r24, 0xFF	; 255
    44b4:	9f 4f       	sbci	r25, 0xFF	; 255
    44b6:	99 23       	and	r25, r25
    44b8:	a9 f0       	breq	.+42     	; 0x44e4 <__floatsisf+0x40>
    44ba:	f9 2f       	mov	r31, r25
    44bc:	96 e9       	ldi	r25, 0x96	; 150
    44be:	bb 27       	eor	r27, r27
    44c0:	93 95       	inc	r25
    44c2:	f6 95       	lsr	r31
    44c4:	87 95       	ror	r24
    44c6:	77 95       	ror	r23
    44c8:	67 95       	ror	r22
    44ca:	b7 95       	ror	r27
    44cc:	f1 11       	cpse	r31, r1
    44ce:	f8 cf       	rjmp	.-16     	; 0x44c0 <__floatsisf+0x1c>
    44d0:	fa f4       	brpl	.+62     	; 0x4510 <__floatsisf+0x6c>
    44d2:	bb 0f       	add	r27, r27
    44d4:	11 f4       	brne	.+4      	; 0x44da <__floatsisf+0x36>
    44d6:	60 ff       	sbrs	r22, 0
    44d8:	1b c0       	rjmp	.+54     	; 0x4510 <__floatsisf+0x6c>
    44da:	6f 5f       	subi	r22, 0xFF	; 255
    44dc:	7f 4f       	sbci	r23, 0xFF	; 255
    44de:	8f 4f       	sbci	r24, 0xFF	; 255
    44e0:	9f 4f       	sbci	r25, 0xFF	; 255
    44e2:	16 c0       	rjmp	.+44     	; 0x4510 <__floatsisf+0x6c>
    44e4:	88 23       	and	r24, r24
    44e6:	11 f0       	breq	.+4      	; 0x44ec <__floatsisf+0x48>
    44e8:	96 e9       	ldi	r25, 0x96	; 150
    44ea:	11 c0       	rjmp	.+34     	; 0x450e <__floatsisf+0x6a>
    44ec:	77 23       	and	r23, r23
    44ee:	21 f0       	breq	.+8      	; 0x44f8 <__floatsisf+0x54>
    44f0:	9e e8       	ldi	r25, 0x8E	; 142
    44f2:	87 2f       	mov	r24, r23
    44f4:	76 2f       	mov	r23, r22
    44f6:	05 c0       	rjmp	.+10     	; 0x4502 <__floatsisf+0x5e>
    44f8:	66 23       	and	r22, r22
    44fa:	71 f0       	breq	.+28     	; 0x4518 <__floatsisf+0x74>
    44fc:	96 e8       	ldi	r25, 0x86	; 134
    44fe:	86 2f       	mov	r24, r22
    4500:	70 e0       	ldi	r23, 0x00	; 0
    4502:	60 e0       	ldi	r22, 0x00	; 0
    4504:	2a f0       	brmi	.+10     	; 0x4510 <__floatsisf+0x6c>
    4506:	9a 95       	dec	r25
    4508:	66 0f       	add	r22, r22
    450a:	77 1f       	adc	r23, r23
    450c:	88 1f       	adc	r24, r24
    450e:	da f7       	brpl	.-10     	; 0x4506 <__floatsisf+0x62>
    4510:	88 0f       	add	r24, r24
    4512:	96 95       	lsr	r25
    4514:	87 95       	ror	r24
    4516:	97 f9       	bld	r25, 7
    4518:	08 95       	ret

0000451a <__fp_cmp>:
    451a:	99 0f       	add	r25, r25
    451c:	00 08       	sbc	r0, r0
    451e:	55 0f       	add	r21, r21
    4520:	aa 0b       	sbc	r26, r26
    4522:	e0 e8       	ldi	r30, 0x80	; 128
    4524:	fe ef       	ldi	r31, 0xFE	; 254
    4526:	16 16       	cp	r1, r22
    4528:	17 06       	cpc	r1, r23
    452a:	e8 07       	cpc	r30, r24
    452c:	f9 07       	cpc	r31, r25
    452e:	c0 f0       	brcs	.+48     	; 0x4560 <__fp_cmp+0x46>
    4530:	12 16       	cp	r1, r18
    4532:	13 06       	cpc	r1, r19
    4534:	e4 07       	cpc	r30, r20
    4536:	f5 07       	cpc	r31, r21
    4538:	98 f0       	brcs	.+38     	; 0x4560 <__fp_cmp+0x46>
    453a:	62 1b       	sub	r22, r18
    453c:	73 0b       	sbc	r23, r19
    453e:	84 0b       	sbc	r24, r20
    4540:	95 0b       	sbc	r25, r21
    4542:	39 f4       	brne	.+14     	; 0x4552 <__fp_cmp+0x38>
    4544:	0a 26       	eor	r0, r26
    4546:	61 f0       	breq	.+24     	; 0x4560 <__fp_cmp+0x46>
    4548:	23 2b       	or	r18, r19
    454a:	24 2b       	or	r18, r20
    454c:	25 2b       	or	r18, r21
    454e:	21 f4       	brne	.+8      	; 0x4558 <__fp_cmp+0x3e>
    4550:	08 95       	ret
    4552:	0a 26       	eor	r0, r26
    4554:	09 f4       	brne	.+2      	; 0x4558 <__fp_cmp+0x3e>
    4556:	a1 40       	sbci	r26, 0x01	; 1
    4558:	a6 95       	lsr	r26
    455a:	8f ef       	ldi	r24, 0xFF	; 255
    455c:	81 1d       	adc	r24, r1
    455e:	81 1d       	adc	r24, r1
    4560:	08 95       	ret

00004562 <__fp_inf>:
    4562:	97 f9       	bld	r25, 7
    4564:	9f 67       	ori	r25, 0x7F	; 127
    4566:	80 e8       	ldi	r24, 0x80	; 128
    4568:	70 e0       	ldi	r23, 0x00	; 0
    456a:	60 e0       	ldi	r22, 0x00	; 0
    456c:	08 95       	ret

0000456e <__fp_nan>:
    456e:	9f ef       	ldi	r25, 0xFF	; 255
    4570:	80 ec       	ldi	r24, 0xC0	; 192
    4572:	08 95       	ret

00004574 <__fp_pscA>:
    4574:	00 24       	eor	r0, r0
    4576:	0a 94       	dec	r0
    4578:	16 16       	cp	r1, r22
    457a:	17 06       	cpc	r1, r23
    457c:	18 06       	cpc	r1, r24
    457e:	09 06       	cpc	r0, r25
    4580:	08 95       	ret

00004582 <__fp_pscB>:
    4582:	00 24       	eor	r0, r0
    4584:	0a 94       	dec	r0
    4586:	12 16       	cp	r1, r18
    4588:	13 06       	cpc	r1, r19
    458a:	14 06       	cpc	r1, r20
    458c:	05 06       	cpc	r0, r21
    458e:	08 95       	ret

00004590 <__fp_round>:
    4590:	09 2e       	mov	r0, r25
    4592:	03 94       	inc	r0
    4594:	00 0c       	add	r0, r0
    4596:	11 f4       	brne	.+4      	; 0x459c <__fp_round+0xc>
    4598:	88 23       	and	r24, r24
    459a:	52 f0       	brmi	.+20     	; 0x45b0 <__fp_round+0x20>
    459c:	bb 0f       	add	r27, r27
    459e:	40 f4       	brcc	.+16     	; 0x45b0 <__fp_round+0x20>
    45a0:	bf 2b       	or	r27, r31
    45a2:	11 f4       	brne	.+4      	; 0x45a8 <__fp_round+0x18>
    45a4:	60 ff       	sbrs	r22, 0
    45a6:	04 c0       	rjmp	.+8      	; 0x45b0 <__fp_round+0x20>
    45a8:	6f 5f       	subi	r22, 0xFF	; 255
    45aa:	7f 4f       	sbci	r23, 0xFF	; 255
    45ac:	8f 4f       	sbci	r24, 0xFF	; 255
    45ae:	9f 4f       	sbci	r25, 0xFF	; 255
    45b0:	08 95       	ret

000045b2 <__fp_split3>:
    45b2:	57 fd       	sbrc	r21, 7
    45b4:	90 58       	subi	r25, 0x80	; 128
    45b6:	44 0f       	add	r20, r20
    45b8:	55 1f       	adc	r21, r21
    45ba:	59 f0       	breq	.+22     	; 0x45d2 <__fp_splitA+0x10>
    45bc:	5f 3f       	cpi	r21, 0xFF	; 255
    45be:	71 f0       	breq	.+28     	; 0x45dc <__fp_splitA+0x1a>
    45c0:	47 95       	ror	r20

000045c2 <__fp_splitA>:
    45c2:	88 0f       	add	r24, r24
    45c4:	97 fb       	bst	r25, 7
    45c6:	99 1f       	adc	r25, r25
    45c8:	61 f0       	breq	.+24     	; 0x45e2 <__fp_splitA+0x20>
    45ca:	9f 3f       	cpi	r25, 0xFF	; 255
    45cc:	79 f0       	breq	.+30     	; 0x45ec <__fp_splitA+0x2a>
    45ce:	87 95       	ror	r24
    45d0:	08 95       	ret
    45d2:	12 16       	cp	r1, r18
    45d4:	13 06       	cpc	r1, r19
    45d6:	14 06       	cpc	r1, r20
    45d8:	55 1f       	adc	r21, r21
    45da:	f2 cf       	rjmp	.-28     	; 0x45c0 <__fp_split3+0xe>
    45dc:	46 95       	lsr	r20
    45de:	f1 df       	rcall	.-30     	; 0x45c2 <__fp_splitA>
    45e0:	08 c0       	rjmp	.+16     	; 0x45f2 <__fp_splitA+0x30>
    45e2:	16 16       	cp	r1, r22
    45e4:	17 06       	cpc	r1, r23
    45e6:	18 06       	cpc	r1, r24
    45e8:	99 1f       	adc	r25, r25
    45ea:	f1 cf       	rjmp	.-30     	; 0x45ce <__fp_splitA+0xc>
    45ec:	86 95       	lsr	r24
    45ee:	71 05       	cpc	r23, r1
    45f0:	61 05       	cpc	r22, r1
    45f2:	08 94       	sec
    45f4:	08 95       	ret

000045f6 <__fp_zero>:
    45f6:	e8 94       	clt

000045f8 <__fp_szero>:
    45f8:	bb 27       	eor	r27, r27
    45fa:	66 27       	eor	r22, r22
    45fc:	77 27       	eor	r23, r23
    45fe:	cb 01       	movw	r24, r22
    4600:	97 f9       	bld	r25, 7
    4602:	08 95       	ret

00004604 <__gesf2>:
    4604:	8a df       	rcall	.-236    	; 0x451a <__fp_cmp>
    4606:	08 f4       	brcc	.+2      	; 0x460a <__gesf2+0x6>
    4608:	8f ef       	ldi	r24, 0xFF	; 255
    460a:	08 95       	ret

0000460c <lrint>:
    460c:	da df       	rcall	.-76     	; 0x45c2 <__fp_splitA>
    460e:	a8 f1       	brcs	.+106    	; 0x467a <lrint+0x6e>
    4610:	9e 57       	subi	r25, 0x7E	; 126
    4612:	a8 f1       	brcs	.+106    	; 0x467e <lrint+0x72>
    4614:	98 51       	subi	r25, 0x18	; 24
    4616:	60 f0       	brcs	.+24     	; 0x4630 <lrint+0x24>
    4618:	39 f1       	breq	.+78     	; 0x4668 <lrint+0x5c>
    461a:	98 30       	cpi	r25, 0x08	; 8
    461c:	70 f5       	brcc	.+92     	; 0x467a <lrint+0x6e>
    461e:	09 2e       	mov	r0, r25
    4620:	99 27       	eor	r25, r25
    4622:	66 0f       	add	r22, r22
    4624:	77 1f       	adc	r23, r23
    4626:	88 1f       	adc	r24, r24
    4628:	99 1f       	adc	r25, r25
    462a:	0a 94       	dec	r0
    462c:	d1 f7       	brne	.-12     	; 0x4622 <lrint+0x16>
    462e:	1c c0       	rjmp	.+56     	; 0x4668 <lrint+0x5c>
    4630:	bb 27       	eor	r27, r27
    4632:	99 3f       	cpi	r25, 0xF9	; 249
    4634:	4c f4       	brge	.+18     	; 0x4648 <lrint+0x3c>
    4636:	b1 11       	cpse	r27, r1
    4638:	b1 e0       	ldi	r27, 0x01	; 1
    463a:	b6 2b       	or	r27, r22
    463c:	67 2f       	mov	r22, r23
    463e:	78 2f       	mov	r23, r24
    4640:	88 27       	eor	r24, r24
    4642:	98 5f       	subi	r25, 0xF8	; 248
    4644:	b1 f7       	brne	.-20     	; 0x4632 <lrint+0x26>
    4646:	08 c0       	rjmp	.+16     	; 0x4658 <lrint+0x4c>
    4648:	86 95       	lsr	r24
    464a:	77 95       	ror	r23
    464c:	67 95       	ror	r22
    464e:	b7 95       	ror	r27
    4650:	08 f4       	brcc	.+2      	; 0x4654 <lrint+0x48>
    4652:	b1 60       	ori	r27, 0x01	; 1
    4654:	93 95       	inc	r25
    4656:	c1 f7       	brne	.-16     	; 0x4648 <lrint+0x3c>
    4658:	bb 0f       	add	r27, r27
    465a:	30 f4       	brcc	.+12     	; 0x4668 <lrint+0x5c>
    465c:	11 f4       	brne	.+4      	; 0x4662 <lrint+0x56>
    465e:	60 ff       	sbrs	r22, 0
    4660:	03 c0       	rjmp	.+6      	; 0x4668 <lrint+0x5c>
    4662:	6f 5f       	subi	r22, 0xFF	; 255
    4664:	7f 4f       	sbci	r23, 0xFF	; 255
    4666:	8f 4f       	sbci	r24, 0xFF	; 255
    4668:	3e f4       	brtc	.+14     	; 0x4678 <lrint+0x6c>
    466a:	90 95       	com	r25
    466c:	80 95       	com	r24
    466e:	70 95       	com	r23
    4670:	61 95       	neg	r22
    4672:	7f 4f       	sbci	r23, 0xFF	; 255
    4674:	8f 4f       	sbci	r24, 0xFF	; 255
    4676:	9f 4f       	sbci	r25, 0xFF	; 255
    4678:	08 95       	ret
    467a:	68 94       	set
    467c:	bd cf       	rjmp	.-134    	; 0x45f8 <__fp_szero>
    467e:	bb cf       	rjmp	.-138    	; 0x45f6 <__fp_zero>

00004680 <__mulsf3>:
    4680:	0b d0       	rcall	.+22     	; 0x4698 <__mulsf3x>
    4682:	86 cf       	rjmp	.-244    	; 0x4590 <__fp_round>
    4684:	77 df       	rcall	.-274    	; 0x4574 <__fp_pscA>
    4686:	28 f0       	brcs	.+10     	; 0x4692 <__mulsf3+0x12>
    4688:	7c df       	rcall	.-264    	; 0x4582 <__fp_pscB>
    468a:	18 f0       	brcs	.+6      	; 0x4692 <__mulsf3+0x12>
    468c:	95 23       	and	r25, r21
    468e:	09 f0       	breq	.+2      	; 0x4692 <__mulsf3+0x12>
    4690:	68 cf       	rjmp	.-304    	; 0x4562 <__fp_inf>
    4692:	6d cf       	rjmp	.-294    	; 0x456e <__fp_nan>
    4694:	11 24       	eor	r1, r1
    4696:	b0 cf       	rjmp	.-160    	; 0x45f8 <__fp_szero>

00004698 <__mulsf3x>:
    4698:	8c df       	rcall	.-232    	; 0x45b2 <__fp_split3>
    469a:	a0 f3       	brcs	.-24     	; 0x4684 <__mulsf3+0x4>

0000469c <__mulsf3_pse>:
    469c:	95 9f       	mul	r25, r21
    469e:	d1 f3       	breq	.-12     	; 0x4694 <__mulsf3+0x14>
    46a0:	95 0f       	add	r25, r21
    46a2:	50 e0       	ldi	r21, 0x00	; 0
    46a4:	55 1f       	adc	r21, r21
    46a6:	62 9f       	mul	r22, r18
    46a8:	f0 01       	movw	r30, r0
    46aa:	72 9f       	mul	r23, r18
    46ac:	bb 27       	eor	r27, r27
    46ae:	f0 0d       	add	r31, r0
    46b0:	b1 1d       	adc	r27, r1
    46b2:	63 9f       	mul	r22, r19
    46b4:	aa 27       	eor	r26, r26
    46b6:	f0 0d       	add	r31, r0
    46b8:	b1 1d       	adc	r27, r1
    46ba:	aa 1f       	adc	r26, r26
    46bc:	64 9f       	mul	r22, r20
    46be:	66 27       	eor	r22, r22
    46c0:	b0 0d       	add	r27, r0
    46c2:	a1 1d       	adc	r26, r1
    46c4:	66 1f       	adc	r22, r22
    46c6:	82 9f       	mul	r24, r18
    46c8:	22 27       	eor	r18, r18
    46ca:	b0 0d       	add	r27, r0
    46cc:	a1 1d       	adc	r26, r1
    46ce:	62 1f       	adc	r22, r18
    46d0:	73 9f       	mul	r23, r19
    46d2:	b0 0d       	add	r27, r0
    46d4:	a1 1d       	adc	r26, r1
    46d6:	62 1f       	adc	r22, r18
    46d8:	83 9f       	mul	r24, r19
    46da:	a0 0d       	add	r26, r0
    46dc:	61 1d       	adc	r22, r1
    46de:	22 1f       	adc	r18, r18
    46e0:	74 9f       	mul	r23, r20
    46e2:	33 27       	eor	r19, r19
    46e4:	a0 0d       	add	r26, r0
    46e6:	61 1d       	adc	r22, r1
    46e8:	23 1f       	adc	r18, r19
    46ea:	84 9f       	mul	r24, r20
    46ec:	60 0d       	add	r22, r0
    46ee:	21 1d       	adc	r18, r1
    46f0:	82 2f       	mov	r24, r18
    46f2:	76 2f       	mov	r23, r22
    46f4:	6a 2f       	mov	r22, r26
    46f6:	11 24       	eor	r1, r1
    46f8:	9f 57       	subi	r25, 0x7F	; 127
    46fa:	50 40       	sbci	r21, 0x00	; 0
    46fc:	8a f0       	brmi	.+34     	; 0x4720 <__mulsf3_pse+0x84>
    46fe:	e1 f0       	breq	.+56     	; 0x4738 <__mulsf3_pse+0x9c>
    4700:	88 23       	and	r24, r24
    4702:	4a f0       	brmi	.+18     	; 0x4716 <__mulsf3_pse+0x7a>
    4704:	ee 0f       	add	r30, r30
    4706:	ff 1f       	adc	r31, r31
    4708:	bb 1f       	adc	r27, r27
    470a:	66 1f       	adc	r22, r22
    470c:	77 1f       	adc	r23, r23
    470e:	88 1f       	adc	r24, r24
    4710:	91 50       	subi	r25, 0x01	; 1
    4712:	50 40       	sbci	r21, 0x00	; 0
    4714:	a9 f7       	brne	.-22     	; 0x4700 <__mulsf3_pse+0x64>
    4716:	9e 3f       	cpi	r25, 0xFE	; 254
    4718:	51 05       	cpc	r21, r1
    471a:	70 f0       	brcs	.+28     	; 0x4738 <__mulsf3_pse+0x9c>
    471c:	22 cf       	rjmp	.-444    	; 0x4562 <__fp_inf>
    471e:	6c cf       	rjmp	.-296    	; 0x45f8 <__fp_szero>
    4720:	5f 3f       	cpi	r21, 0xFF	; 255
    4722:	ec f3       	brlt	.-6      	; 0x471e <__mulsf3_pse+0x82>
    4724:	98 3e       	cpi	r25, 0xE8	; 232
    4726:	dc f3       	brlt	.-10     	; 0x471e <__mulsf3_pse+0x82>
    4728:	86 95       	lsr	r24
    472a:	77 95       	ror	r23
    472c:	67 95       	ror	r22
    472e:	b7 95       	ror	r27
    4730:	f7 95       	ror	r31
    4732:	e7 95       	ror	r30
    4734:	9f 5f       	subi	r25, 0xFF	; 255
    4736:	c1 f7       	brne	.-16     	; 0x4728 <__mulsf3_pse+0x8c>
    4738:	fe 2b       	or	r31, r30
    473a:	88 0f       	add	r24, r24
    473c:	91 1d       	adc	r25, r1
    473e:	96 95       	lsr	r25
    4740:	87 95       	ror	r24
    4742:	97 f9       	bld	r25, 7
    4744:	08 95       	ret

00004746 <pow>:
    4746:	fa 01       	movw	r30, r20
    4748:	ee 0f       	add	r30, r30
    474a:	ff 1f       	adc	r31, r31
    474c:	30 96       	adiw	r30, 0x00	; 0
    474e:	21 05       	cpc	r18, r1
    4750:	31 05       	cpc	r19, r1
    4752:	99 f1       	breq	.+102    	; 0x47ba <pow+0x74>
    4754:	61 15       	cp	r22, r1
    4756:	71 05       	cpc	r23, r1
    4758:	61 f4       	brne	.+24     	; 0x4772 <pow+0x2c>
    475a:	80 38       	cpi	r24, 0x80	; 128
    475c:	bf e3       	ldi	r27, 0x3F	; 63
    475e:	9b 07       	cpc	r25, r27
    4760:	49 f1       	breq	.+82     	; 0x47b4 <pow+0x6e>
    4762:	68 94       	set
    4764:	90 38       	cpi	r25, 0x80	; 128
    4766:	81 05       	cpc	r24, r1
    4768:	61 f0       	breq	.+24     	; 0x4782 <pow+0x3c>
    476a:	80 38       	cpi	r24, 0x80	; 128
    476c:	bf ef       	ldi	r27, 0xFF	; 255
    476e:	9b 07       	cpc	r25, r27
    4770:	41 f0       	breq	.+16     	; 0x4782 <pow+0x3c>
    4772:	99 23       	and	r25, r25
    4774:	42 f5       	brpl	.+80     	; 0x47c6 <pow+0x80>
    4776:	ff 3f       	cpi	r31, 0xFF	; 255
    4778:	e1 05       	cpc	r30, r1
    477a:	31 05       	cpc	r19, r1
    477c:	21 05       	cpc	r18, r1
    477e:	11 f1       	breq	.+68     	; 0x47c4 <pow+0x7e>
    4780:	e8 94       	clt
    4782:	08 94       	sec
    4784:	e7 95       	ror	r30
    4786:	d9 01       	movw	r26, r18
    4788:	aa 23       	and	r26, r26
    478a:	29 f4       	brne	.+10     	; 0x4796 <pow+0x50>
    478c:	ab 2f       	mov	r26, r27
    478e:	be 2f       	mov	r27, r30
    4790:	f8 5f       	subi	r31, 0xF8	; 248
    4792:	d0 f3       	brcs	.-12     	; 0x4788 <pow+0x42>
    4794:	10 c0       	rjmp	.+32     	; 0x47b6 <pow+0x70>
    4796:	ff 5f       	subi	r31, 0xFF	; 255
    4798:	70 f4       	brcc	.+28     	; 0x47b6 <pow+0x70>
    479a:	a6 95       	lsr	r26
    479c:	e0 f7       	brcc	.-8      	; 0x4796 <pow+0x50>
    479e:	f7 39       	cpi	r31, 0x97	; 151
    47a0:	50 f0       	brcs	.+20     	; 0x47b6 <pow+0x70>
    47a2:	19 f0       	breq	.+6      	; 0x47aa <pow+0x64>
    47a4:	ff 3a       	cpi	r31, 0xAF	; 175
    47a6:	38 f4       	brcc	.+14     	; 0x47b6 <pow+0x70>
    47a8:	9f 77       	andi	r25, 0x7F	; 127
    47aa:	9f 93       	push	r25
    47ac:	0c d0       	rcall	.+24     	; 0x47c6 <pow+0x80>
    47ae:	0f 90       	pop	r0
    47b0:	07 fc       	sbrc	r0, 7
    47b2:	90 58       	subi	r25, 0x80	; 128
    47b4:	08 95       	ret
    47b6:	3e f0       	brts	.+14     	; 0x47c6 <pow+0x80>
    47b8:	da ce       	rjmp	.-588    	; 0x456e <__fp_nan>
    47ba:	60 e0       	ldi	r22, 0x00	; 0
    47bc:	70 e0       	ldi	r23, 0x00	; 0
    47be:	80 e8       	ldi	r24, 0x80	; 128
    47c0:	9f e3       	ldi	r25, 0x3F	; 63
    47c2:	08 95       	ret
    47c4:	4f e7       	ldi	r20, 0x7F	; 127
    47c6:	9f 77       	andi	r25, 0x7F	; 127
    47c8:	5f 93       	push	r21
    47ca:	4f 93       	push	r20
    47cc:	3f 93       	push	r19
    47ce:	2f 93       	push	r18
    47d0:	9e d0       	rcall	.+316    	; 0x490e <log>
    47d2:	2f 91       	pop	r18
    47d4:	3f 91       	pop	r19
    47d6:	4f 91       	pop	r20
    47d8:	5f 91       	pop	r21
    47da:	52 df       	rcall	.-348    	; 0x4680 <__mulsf3>
    47dc:	05 c0       	rjmp	.+10     	; 0x47e8 <exp>
    47de:	19 f4       	brne	.+6      	; 0x47e6 <pow+0xa0>
    47e0:	0e f0       	brts	.+2      	; 0x47e4 <pow+0x9e>
    47e2:	bf ce       	rjmp	.-642    	; 0x4562 <__fp_inf>
    47e4:	08 cf       	rjmp	.-496    	; 0x45f6 <__fp_zero>
    47e6:	c3 ce       	rjmp	.-634    	; 0x456e <__fp_nan>

000047e8 <exp>:
    47e8:	ec de       	rcall	.-552    	; 0x45c2 <__fp_splitA>
    47ea:	c8 f3       	brcs	.-14     	; 0x47de <pow+0x98>
    47ec:	96 38       	cpi	r25, 0x86	; 134
    47ee:	c0 f7       	brcc	.-16     	; 0x47e0 <pow+0x9a>
    47f0:	07 f8       	bld	r0, 7
    47f2:	0f 92       	push	r0
    47f4:	e8 94       	clt
    47f6:	2b e3       	ldi	r18, 0x3B	; 59
    47f8:	3a ea       	ldi	r19, 0xAA	; 170
    47fa:	48 eb       	ldi	r20, 0xB8	; 184
    47fc:	5f e7       	ldi	r21, 0x7F	; 127
    47fe:	4e df       	rcall	.-356    	; 0x469c <__mulsf3_pse>
    4800:	0f 92       	push	r0
    4802:	0f 92       	push	r0
    4804:	0f 92       	push	r0
    4806:	4d b7       	in	r20, 0x3d	; 61
    4808:	5e b7       	in	r21, 0x3e	; 62
    480a:	0f 92       	push	r0
    480c:	c0 d0       	rcall	.+384    	; 0x498e <modf>
    480e:	e8 ec       	ldi	r30, 0xC8	; 200
    4810:	f0 e0       	ldi	r31, 0x00	; 0
    4812:	16 d0       	rcall	.+44     	; 0x4840 <__fp_powser>
    4814:	4f 91       	pop	r20
    4816:	5f 91       	pop	r21
    4818:	ef 91       	pop	r30
    481a:	ff 91       	pop	r31
    481c:	e5 95       	asr	r30
    481e:	ee 1f       	adc	r30, r30
    4820:	ff 1f       	adc	r31, r31
    4822:	49 f0       	breq	.+18     	; 0x4836 <exp+0x4e>
    4824:	fe 57       	subi	r31, 0x7E	; 126
    4826:	e0 68       	ori	r30, 0x80	; 128
    4828:	44 27       	eor	r20, r20
    482a:	ee 0f       	add	r30, r30
    482c:	44 1f       	adc	r20, r20
    482e:	fa 95       	dec	r31
    4830:	e1 f7       	brne	.-8      	; 0x482a <exp+0x42>
    4832:	41 95       	neg	r20
    4834:	55 0b       	sbc	r21, r21
    4836:	32 d0       	rcall	.+100    	; 0x489c <ldexp>
    4838:	0f 90       	pop	r0
    483a:	07 fe       	sbrs	r0, 7
    483c:	26 c0       	rjmp	.+76     	; 0x488a <inverse>
    483e:	08 95       	ret

00004840 <__fp_powser>:
    4840:	df 93       	push	r29
    4842:	cf 93       	push	r28
    4844:	1f 93       	push	r17
    4846:	0f 93       	push	r16
    4848:	ff 92       	push	r15
    484a:	ef 92       	push	r14
    484c:	df 92       	push	r13
    484e:	7b 01       	movw	r14, r22
    4850:	8c 01       	movw	r16, r24
    4852:	68 94       	set
    4854:	05 c0       	rjmp	.+10     	; 0x4860 <__fp_powser+0x20>
    4856:	da 2e       	mov	r13, r26
    4858:	ef 01       	movw	r28, r30
    485a:	1e df       	rcall	.-452    	; 0x4698 <__mulsf3x>
    485c:	fe 01       	movw	r30, r28
    485e:	e8 94       	clt
    4860:	a5 91       	lpm	r26, Z+
    4862:	25 91       	lpm	r18, Z+
    4864:	35 91       	lpm	r19, Z+
    4866:	45 91       	lpm	r20, Z+
    4868:	55 91       	lpm	r21, Z+
    486a:	ae f3       	brts	.-22     	; 0x4856 <__fp_powser+0x16>
    486c:	ef 01       	movw	r28, r30
    486e:	28 dd       	rcall	.-1456   	; 0x42c0 <__addsf3x>
    4870:	fe 01       	movw	r30, r28
    4872:	97 01       	movw	r18, r14
    4874:	a8 01       	movw	r20, r16
    4876:	da 94       	dec	r13
    4878:	79 f7       	brne	.-34     	; 0x4858 <__fp_powser+0x18>
    487a:	df 90       	pop	r13
    487c:	ef 90       	pop	r14
    487e:	ff 90       	pop	r15
    4880:	0f 91       	pop	r16
    4882:	1f 91       	pop	r17
    4884:	cf 91       	pop	r28
    4886:	df 91       	pop	r29
    4888:	08 95       	ret

0000488a <inverse>:
    488a:	9b 01       	movw	r18, r22
    488c:	ac 01       	movw	r20, r24
    488e:	60 e0       	ldi	r22, 0x00	; 0
    4890:	70 e0       	ldi	r23, 0x00	; 0
    4892:	80 e8       	ldi	r24, 0x80	; 128
    4894:	9f e3       	ldi	r25, 0x3F	; 63
    4896:	6b cd       	rjmp	.-1322   	; 0x436e <__divsf3>
    4898:	64 ce       	rjmp	.-824    	; 0x4562 <__fp_inf>
    489a:	ac c0       	rjmp	.+344    	; 0x49f4 <__fp_mpack>

0000489c <ldexp>:
    489c:	92 de       	rcall	.-732    	; 0x45c2 <__fp_splitA>
    489e:	e8 f3       	brcs	.-6      	; 0x489a <inverse+0x10>
    48a0:	99 23       	and	r25, r25
    48a2:	d9 f3       	breq	.-10     	; 0x489a <inverse+0x10>
    48a4:	94 0f       	add	r25, r20
    48a6:	51 1d       	adc	r21, r1
    48a8:	bb f3       	brvs	.-18     	; 0x4898 <inverse+0xe>
    48aa:	91 50       	subi	r25, 0x01	; 1
    48ac:	50 40       	sbci	r21, 0x00	; 0
    48ae:	94 f0       	brlt	.+36     	; 0x48d4 <ldexp+0x38>
    48b0:	59 f0       	breq	.+22     	; 0x48c8 <ldexp+0x2c>
    48b2:	88 23       	and	r24, r24
    48b4:	32 f0       	brmi	.+12     	; 0x48c2 <ldexp+0x26>
    48b6:	66 0f       	add	r22, r22
    48b8:	77 1f       	adc	r23, r23
    48ba:	88 1f       	adc	r24, r24
    48bc:	91 50       	subi	r25, 0x01	; 1
    48be:	50 40       	sbci	r21, 0x00	; 0
    48c0:	c1 f7       	brne	.-16     	; 0x48b2 <ldexp+0x16>
    48c2:	9e 3f       	cpi	r25, 0xFE	; 254
    48c4:	51 05       	cpc	r21, r1
    48c6:	44 f7       	brge	.-48     	; 0x4898 <inverse+0xe>
    48c8:	88 0f       	add	r24, r24
    48ca:	91 1d       	adc	r25, r1
    48cc:	96 95       	lsr	r25
    48ce:	87 95       	ror	r24
    48d0:	97 f9       	bld	r25, 7
    48d2:	08 95       	ret
    48d4:	5f 3f       	cpi	r21, 0xFF	; 255
    48d6:	ac f0       	brlt	.+42     	; 0x4902 <ldexp+0x66>
    48d8:	98 3e       	cpi	r25, 0xE8	; 232
    48da:	9c f0       	brlt	.+38     	; 0x4902 <ldexp+0x66>
    48dc:	bb 27       	eor	r27, r27
    48de:	86 95       	lsr	r24
    48e0:	77 95       	ror	r23
    48e2:	67 95       	ror	r22
    48e4:	b7 95       	ror	r27
    48e6:	08 f4       	brcc	.+2      	; 0x48ea <ldexp+0x4e>
    48e8:	b1 60       	ori	r27, 0x01	; 1
    48ea:	93 95       	inc	r25
    48ec:	c1 f7       	brne	.-16     	; 0x48de <ldexp+0x42>
    48ee:	bb 0f       	add	r27, r27
    48f0:	58 f7       	brcc	.-42     	; 0x48c8 <ldexp+0x2c>
    48f2:	11 f4       	brne	.+4      	; 0x48f8 <ldexp+0x5c>
    48f4:	60 ff       	sbrs	r22, 0
    48f6:	e8 cf       	rjmp	.-48     	; 0x48c8 <ldexp+0x2c>
    48f8:	6f 5f       	subi	r22, 0xFF	; 255
    48fa:	7f 4f       	sbci	r23, 0xFF	; 255
    48fc:	8f 4f       	sbci	r24, 0xFF	; 255
    48fe:	9f 4f       	sbci	r25, 0xFF	; 255
    4900:	e3 cf       	rjmp	.-58     	; 0x48c8 <ldexp+0x2c>
    4902:	7a ce       	rjmp	.-780    	; 0x45f8 <__fp_szero>
    4904:	0e f0       	brts	.+2      	; 0x4908 <ldexp+0x6c>
    4906:	76 c0       	rjmp	.+236    	; 0x49f4 <__fp_mpack>
    4908:	32 ce       	rjmp	.-924    	; 0x456e <__fp_nan>
    490a:	68 94       	set
    490c:	2a ce       	rjmp	.-940    	; 0x4562 <__fp_inf>

0000490e <log>:
    490e:	59 de       	rcall	.-846    	; 0x45c2 <__fp_splitA>
    4910:	c8 f3       	brcs	.-14     	; 0x4904 <ldexp+0x68>
    4912:	99 23       	and	r25, r25
    4914:	d1 f3       	breq	.-12     	; 0x490a <ldexp+0x6e>
    4916:	c6 f3       	brts	.-16     	; 0x4908 <ldexp+0x6c>
    4918:	df 93       	push	r29
    491a:	cf 93       	push	r28
    491c:	1f 93       	push	r17
    491e:	0f 93       	push	r16
    4920:	ff 92       	push	r15
    4922:	c9 2f       	mov	r28, r25
    4924:	dd 27       	eor	r29, r29
    4926:	88 23       	and	r24, r24
    4928:	2a f0       	brmi	.+10     	; 0x4934 <log+0x26>
    492a:	21 97       	sbiw	r28, 0x01	; 1
    492c:	66 0f       	add	r22, r22
    492e:	77 1f       	adc	r23, r23
    4930:	88 1f       	adc	r24, r24
    4932:	da f7       	brpl	.-10     	; 0x492a <log+0x1c>
    4934:	20 e0       	ldi	r18, 0x00	; 0
    4936:	30 e0       	ldi	r19, 0x00	; 0
    4938:	40 e8       	ldi	r20, 0x80	; 128
    493a:	5f eb       	ldi	r21, 0xBF	; 191
    493c:	9f e3       	ldi	r25, 0x3F	; 63
    493e:	88 39       	cpi	r24, 0x98	; 152
    4940:	20 f0       	brcs	.+8      	; 0x494a <log+0x3c>
    4942:	80 3e       	cpi	r24, 0xE0	; 224
    4944:	30 f0       	brcs	.+12     	; 0x4952 <log+0x44>
    4946:	21 96       	adiw	r28, 0x01	; 1
    4948:	8f 77       	andi	r24, 0x7F	; 127
    494a:	a9 dc       	rcall	.-1710   	; 0x429e <__addsf3>
    494c:	e0 ef       	ldi	r30, 0xF0	; 240
    494e:	f0 e0       	ldi	r31, 0x00	; 0
    4950:	03 c0       	rjmp	.+6      	; 0x4958 <log+0x4a>
    4952:	a5 dc       	rcall	.-1718   	; 0x429e <__addsf3>
    4954:	ed e1       	ldi	r30, 0x1D	; 29
    4956:	f1 e0       	ldi	r31, 0x01	; 1
    4958:	73 df       	rcall	.-282    	; 0x4840 <__fp_powser>
    495a:	8b 01       	movw	r16, r22
    495c:	be 01       	movw	r22, r28
    495e:	ec 01       	movw	r28, r24
    4960:	fb 2e       	mov	r15, r27
    4962:	6f 57       	subi	r22, 0x7F	; 127
    4964:	71 09       	sbc	r23, r1
    4966:	75 95       	asr	r23
    4968:	77 1f       	adc	r23, r23
    496a:	88 0b       	sbc	r24, r24
    496c:	99 0b       	sbc	r25, r25
    496e:	9a dd       	rcall	.-1228   	; 0x44a4 <__floatsisf>
    4970:	28 e1       	ldi	r18, 0x18	; 24
    4972:	32 e7       	ldi	r19, 0x72	; 114
    4974:	41 e3       	ldi	r20, 0x31	; 49
    4976:	5f e3       	ldi	r21, 0x3F	; 63
    4978:	8f de       	rcall	.-738    	; 0x4698 <__mulsf3x>
    497a:	af 2d       	mov	r26, r15
    497c:	98 01       	movw	r18, r16
    497e:	ae 01       	movw	r20, r28
    4980:	ff 90       	pop	r15
    4982:	0f 91       	pop	r16
    4984:	1f 91       	pop	r17
    4986:	cf 91       	pop	r28
    4988:	df 91       	pop	r29
    498a:	9a dc       	rcall	.-1740   	; 0x42c0 <__addsf3x>
    498c:	01 ce       	rjmp	.-1022   	; 0x4590 <__fp_round>

0000498e <modf>:
    498e:	fa 01       	movw	r30, r20
    4990:	dc 01       	movw	r26, r24
    4992:	aa 0f       	add	r26, r26
    4994:	bb 1f       	adc	r27, r27
    4996:	9b 01       	movw	r18, r22
    4998:	ac 01       	movw	r20, r24
    499a:	bf 57       	subi	r27, 0x7F	; 127
    499c:	28 f4       	brcc	.+10     	; 0x49a8 <modf+0x1a>
    499e:	22 27       	eor	r18, r18
    49a0:	33 27       	eor	r19, r19
    49a2:	44 27       	eor	r20, r20
    49a4:	50 78       	andi	r21, 0x80	; 128
    49a6:	1f c0       	rjmp	.+62     	; 0x49e6 <modf+0x58>
    49a8:	b7 51       	subi	r27, 0x17	; 23
    49aa:	88 f4       	brcc	.+34     	; 0x49ce <modf+0x40>
    49ac:	ab 2f       	mov	r26, r27
    49ae:	00 24       	eor	r0, r0
    49b0:	46 95       	lsr	r20
    49b2:	37 95       	ror	r19
    49b4:	27 95       	ror	r18
    49b6:	01 1c       	adc	r0, r1
    49b8:	a3 95       	inc	r26
    49ba:	d2 f3       	brmi	.-12     	; 0x49b0 <modf+0x22>
    49bc:	00 20       	and	r0, r0
    49be:	69 f0       	breq	.+26     	; 0x49da <modf+0x4c>
    49c0:	22 0f       	add	r18, r18
    49c2:	33 1f       	adc	r19, r19
    49c4:	44 1f       	adc	r20, r20
    49c6:	b3 95       	inc	r27
    49c8:	da f3       	brmi	.-10     	; 0x49c0 <modf+0x32>
    49ca:	0d d0       	rcall	.+26     	; 0x49e6 <modf+0x58>
    49cc:	67 cc       	rjmp	.-1842   	; 0x429c <__subsf3>
    49ce:	61 30       	cpi	r22, 0x01	; 1
    49d0:	71 05       	cpc	r23, r1
    49d2:	a0 e8       	ldi	r26, 0x80	; 128
    49d4:	8a 07       	cpc	r24, r26
    49d6:	b9 46       	sbci	r27, 0x69	; 105
    49d8:	30 f4       	brcc	.+12     	; 0x49e6 <modf+0x58>
    49da:	9b 01       	movw	r18, r22
    49dc:	ac 01       	movw	r20, r24
    49de:	66 27       	eor	r22, r22
    49e0:	77 27       	eor	r23, r23
    49e2:	88 27       	eor	r24, r24
    49e4:	90 78       	andi	r25, 0x80	; 128
    49e6:	30 96       	adiw	r30, 0x00	; 0
    49e8:	21 f0       	breq	.+8      	; 0x49f2 <modf+0x64>
    49ea:	20 83       	st	Z, r18
    49ec:	31 83       	std	Z+1, r19	; 0x01
    49ee:	42 83       	std	Z+2, r20	; 0x02
    49f0:	53 83       	std	Z+3, r21	; 0x03
    49f2:	08 95       	ret

000049f4 <__fp_mpack>:
    49f4:	9f 3f       	cpi	r25, 0xFF	; 255
    49f6:	31 f0       	breq	.+12     	; 0x4a04 <__fp_mpack_finite+0xc>

000049f8 <__fp_mpack_finite>:
    49f8:	91 50       	subi	r25, 0x01	; 1
    49fa:	20 f4       	brcc	.+8      	; 0x4a04 <__fp_mpack_finite+0xc>
    49fc:	87 95       	ror	r24
    49fe:	77 95       	ror	r23
    4a00:	67 95       	ror	r22
    4a02:	b7 95       	ror	r27
    4a04:	88 0f       	add	r24, r24
    4a06:	91 1d       	adc	r25, r1
    4a08:	96 95       	lsr	r25
    4a0a:	87 95       	ror	r24
    4a0c:	97 f9       	bld	r25, 7
    4a0e:	08 95       	ret

00004a10 <vfprintf>:
    4a10:	a1 e1       	ldi	r26, 0x11	; 17
    4a12:	b0 e0       	ldi	r27, 0x00	; 0
    4a14:	ed e0       	ldi	r30, 0x0D	; 13
    4a16:	f5 e2       	ldi	r31, 0x25	; 37
    4a18:	b7 c3       	rjmp	.+1902   	; 0x5188 <__prologue_saves__>
    4a1a:	3c 01       	movw	r6, r24
    4a1c:	7f 87       	std	Y+15, r23	; 0x0f
    4a1e:	6e 87       	std	Y+14, r22	; 0x0e
    4a20:	6a 01       	movw	r12, r20
    4a22:	fc 01       	movw	r30, r24
    4a24:	17 82       	std	Z+7, r1	; 0x07
    4a26:	16 82       	std	Z+6, r1	; 0x06
    4a28:	83 81       	ldd	r24, Z+3	; 0x03
    4a2a:	81 fd       	sbrc	r24, 1
    4a2c:	03 c0       	rjmp	.+6      	; 0x4a34 <vfprintf+0x24>
    4a2e:	6f ef       	ldi	r22, 0xFF	; 255
    4a30:	7f ef       	ldi	r23, 0xFF	; 255
    4a32:	52 c3       	rjmp	.+1700   	; 0x50d8 <vfprintf+0x6c8>
    4a34:	9e 01       	movw	r18, r28
    4a36:	2f 5f       	subi	r18, 0xFF	; 255
    4a38:	3f 4f       	sbci	r19, 0xFF	; 255
    4a3a:	39 8b       	std	Y+17, r19	; 0x11
    4a3c:	28 8b       	std	Y+16, r18	; 0x10
    4a3e:	f3 01       	movw	r30, r6
    4a40:	23 81       	ldd	r18, Z+3	; 0x03
    4a42:	ee 85       	ldd	r30, Y+14	; 0x0e
    4a44:	ff 85       	ldd	r31, Y+15	; 0x0f
    4a46:	23 fd       	sbrc	r18, 3
    4a48:	85 91       	lpm	r24, Z+
    4a4a:	23 ff       	sbrs	r18, 3
    4a4c:	81 91       	ld	r24, Z+
    4a4e:	ff 87       	std	Y+15, r31	; 0x0f
    4a50:	ee 87       	std	Y+14, r30	; 0x0e
    4a52:	88 23       	and	r24, r24
    4a54:	09 f4       	brne	.+2      	; 0x4a58 <vfprintf+0x48>
    4a56:	3d c3       	rjmp	.+1658   	; 0x50d2 <vfprintf+0x6c2>
    4a58:	85 32       	cpi	r24, 0x25	; 37
    4a5a:	51 f4       	brne	.+20     	; 0x4a70 <vfprintf+0x60>
    4a5c:	ee 85       	ldd	r30, Y+14	; 0x0e
    4a5e:	ff 85       	ldd	r31, Y+15	; 0x0f
    4a60:	23 fd       	sbrc	r18, 3
    4a62:	85 91       	lpm	r24, Z+
    4a64:	23 ff       	sbrs	r18, 3
    4a66:	81 91       	ld	r24, Z+
    4a68:	ff 87       	std	Y+15, r31	; 0x0f
    4a6a:	ee 87       	std	Y+14, r30	; 0x0e
    4a6c:	85 32       	cpi	r24, 0x25	; 37
    4a6e:	21 f4       	brne	.+8      	; 0x4a78 <vfprintf+0x68>
    4a70:	90 e0       	ldi	r25, 0x00	; 0
    4a72:	b3 01       	movw	r22, r6
    4a74:	20 d6       	rcall	.+3136   	; 0x56b6 <fputc>
    4a76:	e3 cf       	rjmp	.-58     	; 0x4a3e <vfprintf+0x2e>
    4a78:	98 2f       	mov	r25, r24
    4a7a:	10 e0       	ldi	r17, 0x00	; 0
    4a7c:	88 24       	eor	r8, r8
    4a7e:	99 24       	eor	r9, r9
    4a80:	10 32       	cpi	r17, 0x20	; 32
    4a82:	b0 f4       	brcc	.+44     	; 0x4ab0 <vfprintf+0xa0>
    4a84:	9b 32       	cpi	r25, 0x2B	; 43
    4a86:	69 f0       	breq	.+26     	; 0x4aa2 <vfprintf+0x92>
    4a88:	9c 32       	cpi	r25, 0x2C	; 44
    4a8a:	28 f4       	brcc	.+10     	; 0x4a96 <vfprintf+0x86>
    4a8c:	90 32       	cpi	r25, 0x20	; 32
    4a8e:	51 f0       	breq	.+20     	; 0x4aa4 <vfprintf+0x94>
    4a90:	93 32       	cpi	r25, 0x23	; 35
    4a92:	71 f4       	brne	.+28     	; 0x4ab0 <vfprintf+0xa0>
    4a94:	0b c0       	rjmp	.+22     	; 0x4aac <vfprintf+0x9c>
    4a96:	9d 32       	cpi	r25, 0x2D	; 45
    4a98:	39 f0       	breq	.+14     	; 0x4aa8 <vfprintf+0x98>
    4a9a:	90 33       	cpi	r25, 0x30	; 48
    4a9c:	49 f4       	brne	.+18     	; 0x4ab0 <vfprintf+0xa0>
    4a9e:	11 60       	ori	r17, 0x01	; 1
    4aa0:	28 c0       	rjmp	.+80     	; 0x4af2 <vfprintf+0xe2>
    4aa2:	12 60       	ori	r17, 0x02	; 2
    4aa4:	14 60       	ori	r17, 0x04	; 4
    4aa6:	25 c0       	rjmp	.+74     	; 0x4af2 <vfprintf+0xe2>
    4aa8:	18 60       	ori	r17, 0x08	; 8
    4aaa:	23 c0       	rjmp	.+70     	; 0x4af2 <vfprintf+0xe2>
    4aac:	10 61       	ori	r17, 0x10	; 16
    4aae:	21 c0       	rjmp	.+66     	; 0x4af2 <vfprintf+0xe2>
    4ab0:	17 fd       	sbrc	r17, 7
    4ab2:	2a c0       	rjmp	.+84     	; 0x4b08 <vfprintf+0xf8>
    4ab4:	89 2f       	mov	r24, r25
    4ab6:	80 53       	subi	r24, 0x30	; 48
    4ab8:	8a 30       	cpi	r24, 0x0A	; 10
    4aba:	78 f4       	brcc	.+30     	; 0x4ada <vfprintf+0xca>
    4abc:	16 ff       	sbrs	r17, 6
    4abe:	06 c0       	rjmp	.+12     	; 0x4acc <vfprintf+0xbc>
    4ac0:	fa e0       	ldi	r31, 0x0A	; 10
    4ac2:	9f 9e       	mul	r9, r31
    4ac4:	90 2c       	mov	r9, r0
    4ac6:	11 24       	eor	r1, r1
    4ac8:	98 0e       	add	r9, r24
    4aca:	13 c0       	rjmp	.+38     	; 0x4af2 <vfprintf+0xe2>
    4acc:	3a e0       	ldi	r19, 0x0A	; 10
    4ace:	83 9e       	mul	r8, r19
    4ad0:	80 2c       	mov	r8, r0
    4ad2:	11 24       	eor	r1, r1
    4ad4:	88 0e       	add	r8, r24
    4ad6:	10 62       	ori	r17, 0x20	; 32
    4ad8:	0c c0       	rjmp	.+24     	; 0x4af2 <vfprintf+0xe2>
    4ada:	9e 32       	cpi	r25, 0x2E	; 46
    4adc:	21 f4       	brne	.+8      	; 0x4ae6 <vfprintf+0xd6>
    4ade:	16 fd       	sbrc	r17, 6
    4ae0:	f8 c2       	rjmp	.+1520   	; 0x50d2 <vfprintf+0x6c2>
    4ae2:	10 64       	ori	r17, 0x40	; 64
    4ae4:	06 c0       	rjmp	.+12     	; 0x4af2 <vfprintf+0xe2>
    4ae6:	9c 36       	cpi	r25, 0x6C	; 108
    4ae8:	11 f4       	brne	.+4      	; 0x4aee <vfprintf+0xde>
    4aea:	10 68       	ori	r17, 0x80	; 128
    4aec:	02 c0       	rjmp	.+4      	; 0x4af2 <vfprintf+0xe2>
    4aee:	98 36       	cpi	r25, 0x68	; 104
    4af0:	59 f4       	brne	.+22     	; 0x4b08 <vfprintf+0xf8>
    4af2:	ee 85       	ldd	r30, Y+14	; 0x0e
    4af4:	ff 85       	ldd	r31, Y+15	; 0x0f
    4af6:	23 fd       	sbrc	r18, 3
    4af8:	95 91       	lpm	r25, Z+
    4afa:	23 ff       	sbrs	r18, 3
    4afc:	91 91       	ld	r25, Z+
    4afe:	ff 87       	std	Y+15, r31	; 0x0f
    4b00:	ee 87       	std	Y+14, r30	; 0x0e
    4b02:	99 23       	and	r25, r25
    4b04:	09 f0       	breq	.+2      	; 0x4b08 <vfprintf+0xf8>
    4b06:	bc cf       	rjmp	.-136    	; 0x4a80 <vfprintf+0x70>
    4b08:	89 2f       	mov	r24, r25
    4b0a:	85 54       	subi	r24, 0x45	; 69
    4b0c:	83 30       	cpi	r24, 0x03	; 3
    4b0e:	20 f4       	brcc	.+8      	; 0x4b18 <vfprintf+0x108>
    4b10:	81 2f       	mov	r24, r17
    4b12:	80 61       	ori	r24, 0x10	; 16
    4b14:	90 5e       	subi	r25, 0xE0	; 224
    4b16:	07 c0       	rjmp	.+14     	; 0x4b26 <vfprintf+0x116>
    4b18:	89 2f       	mov	r24, r25
    4b1a:	85 56       	subi	r24, 0x65	; 101
    4b1c:	83 30       	cpi	r24, 0x03	; 3
    4b1e:	08 f0       	brcs	.+2      	; 0x4b22 <vfprintf+0x112>
    4b20:	8f c1       	rjmp	.+798    	; 0x4e40 <vfprintf+0x430>
    4b22:	81 2f       	mov	r24, r17
    4b24:	8f 7e       	andi	r24, 0xEF	; 239
    4b26:	86 fd       	sbrc	r24, 6
    4b28:	02 c0       	rjmp	.+4      	; 0x4b2e <vfprintf+0x11e>
    4b2a:	76 e0       	ldi	r23, 0x06	; 6
    4b2c:	97 2e       	mov	r9, r23
    4b2e:	6f e3       	ldi	r22, 0x3F	; 63
    4b30:	f6 2e       	mov	r15, r22
    4b32:	f8 22       	and	r15, r24
    4b34:	95 36       	cpi	r25, 0x65	; 101
    4b36:	19 f4       	brne	.+6      	; 0x4b3e <vfprintf+0x12e>
    4b38:	f0 e4       	ldi	r31, 0x40	; 64
    4b3a:	ff 2a       	or	r15, r31
    4b3c:	07 c0       	rjmp	.+14     	; 0x4b4c <vfprintf+0x13c>
    4b3e:	96 36       	cpi	r25, 0x66	; 102
    4b40:	19 f4       	brne	.+6      	; 0x4b48 <vfprintf+0x138>
    4b42:	20 e8       	ldi	r18, 0x80	; 128
    4b44:	f2 2a       	or	r15, r18
    4b46:	02 c0       	rjmp	.+4      	; 0x4b4c <vfprintf+0x13c>
    4b48:	91 10       	cpse	r9, r1
    4b4a:	9a 94       	dec	r9
    4b4c:	f7 fe       	sbrs	r15, 7
    4b4e:	0a c0       	rjmp	.+20     	; 0x4b64 <vfprintf+0x154>
    4b50:	3b e3       	ldi	r19, 0x3B	; 59
    4b52:	39 15       	cp	r19, r9
    4b54:	18 f4       	brcc	.+6      	; 0x4b5c <vfprintf+0x14c>
    4b56:	5c e3       	ldi	r21, 0x3C	; 60
    4b58:	b5 2e       	mov	r11, r21
    4b5a:	02 c0       	rjmp	.+4      	; 0x4b60 <vfprintf+0x150>
    4b5c:	b9 2c       	mov	r11, r9
    4b5e:	b3 94       	inc	r11
    4b60:	27 e0       	ldi	r18, 0x07	; 7
    4b62:	09 c0       	rjmp	.+18     	; 0x4b76 <vfprintf+0x166>
    4b64:	47 e0       	ldi	r20, 0x07	; 7
    4b66:	49 15       	cp	r20, r9
    4b68:	20 f4       	brcc	.+8      	; 0x4b72 <vfprintf+0x162>
    4b6a:	bb 24       	eor	r11, r11
    4b6c:	47 e0       	ldi	r20, 0x07	; 7
    4b6e:	94 2e       	mov	r9, r20
    4b70:	f7 cf       	rjmp	.-18     	; 0x4b60 <vfprintf+0x150>
    4b72:	29 2d       	mov	r18, r9
    4b74:	bb 24       	eor	r11, r11
    4b76:	c6 01       	movw	r24, r12
    4b78:	04 96       	adiw	r24, 0x04	; 4
    4b7a:	9d 87       	std	Y+13, r25	; 0x0d
    4b7c:	8c 87       	std	Y+12, r24	; 0x0c
    4b7e:	f6 01       	movw	r30, r12
    4b80:	60 81       	ld	r22, Z
    4b82:	71 81       	ldd	r23, Z+1	; 0x01
    4b84:	82 81       	ldd	r24, Z+2	; 0x02
    4b86:	93 81       	ldd	r25, Z+3	; 0x03
    4b88:	ae 01       	movw	r20, r28
    4b8a:	4f 5f       	subi	r20, 0xFF	; 255
    4b8c:	5f 4f       	sbci	r21, 0xFF	; 255
    4b8e:	0b 2d       	mov	r16, r11
    4b90:	a4 d4       	rcall	.+2376   	; 0x54da <__ftoa_engine>
    4b92:	6c 01       	movw	r12, r24
    4b94:	09 81       	ldd	r16, Y+1	; 0x01
    4b96:	20 2e       	mov	r2, r16
    4b98:	33 24       	eor	r3, r3
    4b9a:	00 ff       	sbrs	r16, 0
    4b9c:	04 c0       	rjmp	.+8      	; 0x4ba6 <vfprintf+0x196>
    4b9e:	03 fd       	sbrc	r16, 3
    4ba0:	02 c0       	rjmp	.+4      	; 0x4ba6 <vfprintf+0x196>
    4ba2:	1d e2       	ldi	r17, 0x2D	; 45
    4ba4:	09 c0       	rjmp	.+18     	; 0x4bb8 <vfprintf+0x1a8>
    4ba6:	f1 fe       	sbrs	r15, 1
    4ba8:	02 c0       	rjmp	.+4      	; 0x4bae <vfprintf+0x19e>
    4baa:	1b e2       	ldi	r17, 0x2B	; 43
    4bac:	05 c0       	rjmp	.+10     	; 0x4bb8 <vfprintf+0x1a8>
    4bae:	f2 fc       	sbrc	r15, 2
    4bb0:	02 c0       	rjmp	.+4      	; 0x4bb6 <vfprintf+0x1a6>
    4bb2:	10 e0       	ldi	r17, 0x00	; 0
    4bb4:	01 c0       	rjmp	.+2      	; 0x4bb8 <vfprintf+0x1a8>
    4bb6:	10 e2       	ldi	r17, 0x20	; 32
    4bb8:	c1 01       	movw	r24, r2
    4bba:	8c 70       	andi	r24, 0x0C	; 12
    4bbc:	90 70       	andi	r25, 0x00	; 0
    4bbe:	89 2b       	or	r24, r25
    4bc0:	a1 f1       	breq	.+104    	; 0x4c2a <vfprintf+0x21a>
    4bc2:	11 23       	and	r17, r17
    4bc4:	11 f4       	brne	.+4      	; 0x4bca <vfprintf+0x1ba>
    4bc6:	83 e0       	ldi	r24, 0x03	; 3
    4bc8:	01 c0       	rjmp	.+2      	; 0x4bcc <vfprintf+0x1bc>
    4bca:	84 e0       	ldi	r24, 0x04	; 4
    4bcc:	88 15       	cp	r24, r8
    4bce:	10 f0       	brcs	.+4      	; 0x4bd4 <vfprintf+0x1c4>
    4bd0:	88 24       	eor	r8, r8
    4bd2:	09 c0       	rjmp	.+18     	; 0x4be6 <vfprintf+0x1d6>
    4bd4:	88 1a       	sub	r8, r24
    4bd6:	f3 fc       	sbrc	r15, 3
    4bd8:	06 c0       	rjmp	.+12     	; 0x4be6 <vfprintf+0x1d6>
    4bda:	80 e2       	ldi	r24, 0x20	; 32
    4bdc:	90 e0       	ldi	r25, 0x00	; 0
    4bde:	b3 01       	movw	r22, r6
    4be0:	6a d5       	rcall	.+2772   	; 0x56b6 <fputc>
    4be2:	8a 94       	dec	r8
    4be4:	d1 f7       	brne	.-12     	; 0x4bda <vfprintf+0x1ca>
    4be6:	11 23       	and	r17, r17
    4be8:	21 f0       	breq	.+8      	; 0x4bf2 <vfprintf+0x1e2>
    4bea:	81 2f       	mov	r24, r17
    4bec:	90 e0       	ldi	r25, 0x00	; 0
    4bee:	b3 01       	movw	r22, r6
    4bf0:	62 d5       	rcall	.+2756   	; 0x56b6 <fputc>
    4bf2:	23 fe       	sbrs	r2, 3
    4bf4:	03 c0       	rjmp	.+6      	; 0x4bfc <vfprintf+0x1ec>
    4bf6:	0f e5       	ldi	r16, 0x5F	; 95
    4bf8:	15 e0       	ldi	r17, 0x05	; 5
    4bfa:	0d c0       	rjmp	.+26     	; 0x4c16 <vfprintf+0x206>
    4bfc:	03 e6       	ldi	r16, 0x63	; 99
    4bfe:	15 e0       	ldi	r17, 0x05	; 5
    4c00:	0a c0       	rjmp	.+20     	; 0x4c16 <vfprintf+0x206>
    4c02:	e1 14       	cp	r14, r1
    4c04:	f1 04       	cpc	r15, r1
    4c06:	09 f0       	breq	.+2      	; 0x4c0a <vfprintf+0x1fa>
    4c08:	80 52       	subi	r24, 0x20	; 32
    4c0a:	90 e0       	ldi	r25, 0x00	; 0
    4c0c:	b3 01       	movw	r22, r6
    4c0e:	53 d5       	rcall	.+2726   	; 0x56b6 <fputc>
    4c10:	0f 5f       	subi	r16, 0xFF	; 255
    4c12:	1f 4f       	sbci	r17, 0xFF	; 255
    4c14:	05 c0       	rjmp	.+10     	; 0x4c20 <vfprintf+0x210>
    4c16:	ef 2c       	mov	r14, r15
    4c18:	ff 24       	eor	r15, r15
    4c1a:	f0 e1       	ldi	r31, 0x10	; 16
    4c1c:	ef 22       	and	r14, r31
    4c1e:	ff 24       	eor	r15, r15
    4c20:	f8 01       	movw	r30, r16
    4c22:	84 91       	lpm	r24, Z+
    4c24:	88 23       	and	r24, r24
    4c26:	69 f7       	brne	.-38     	; 0x4c02 <vfprintf+0x1f2>
    4c28:	08 c1       	rjmp	.+528    	; 0x4e3a <vfprintf+0x42a>
    4c2a:	f7 fe       	sbrs	r15, 7
    4c2c:	12 c0       	rjmp	.+36     	; 0x4c52 <vfprintf+0x242>
    4c2e:	bc 0c       	add	r11, r12
    4c30:	24 fe       	sbrs	r2, 4
    4c32:	04 c0       	rjmp	.+8      	; 0x4c3c <vfprintf+0x22c>
    4c34:	8a 81       	ldd	r24, Y+2	; 0x02
    4c36:	81 33       	cpi	r24, 0x31	; 49
    4c38:	09 f4       	brne	.+2      	; 0x4c3c <vfprintf+0x22c>
    4c3a:	ba 94       	dec	r11
    4c3c:	1b 14       	cp	r1, r11
    4c3e:	1c f0       	brlt	.+6      	; 0x4c46 <vfprintf+0x236>
    4c40:	bb 24       	eor	r11, r11
    4c42:	b3 94       	inc	r11
    4c44:	2d c0       	rjmp	.+90     	; 0x4ca0 <vfprintf+0x290>
    4c46:	f8 e0       	ldi	r31, 0x08	; 8
    4c48:	fb 15       	cp	r31, r11
    4c4a:	50 f5       	brcc	.+84     	; 0x4ca0 <vfprintf+0x290>
    4c4c:	38 e0       	ldi	r19, 0x08	; 8
    4c4e:	b3 2e       	mov	r11, r19
    4c50:	27 c0       	rjmp	.+78     	; 0x4ca0 <vfprintf+0x290>
    4c52:	f6 fc       	sbrc	r15, 6
    4c54:	25 c0       	rjmp	.+74     	; 0x4ca0 <vfprintf+0x290>
    4c56:	89 2d       	mov	r24, r9
    4c58:	90 e0       	ldi	r25, 0x00	; 0
    4c5a:	8c 15       	cp	r24, r12
    4c5c:	9d 05       	cpc	r25, r13
    4c5e:	4c f0       	brlt	.+18     	; 0x4c72 <vfprintf+0x262>
    4c60:	2c ef       	ldi	r18, 0xFC	; 252
    4c62:	c2 16       	cp	r12, r18
    4c64:	2f ef       	ldi	r18, 0xFF	; 255
    4c66:	d2 06       	cpc	r13, r18
    4c68:	24 f0       	brlt	.+8      	; 0x4c72 <vfprintf+0x262>
    4c6a:	30 e8       	ldi	r19, 0x80	; 128
    4c6c:	f3 2a       	or	r15, r19
    4c6e:	01 c0       	rjmp	.+2      	; 0x4c72 <vfprintf+0x262>
    4c70:	9a 94       	dec	r9
    4c72:	99 20       	and	r9, r9
    4c74:	49 f0       	breq	.+18     	; 0x4c88 <vfprintf+0x278>
    4c76:	e2 e0       	ldi	r30, 0x02	; 2
    4c78:	f0 e0       	ldi	r31, 0x00	; 0
    4c7a:	ec 0f       	add	r30, r28
    4c7c:	fd 1f       	adc	r31, r29
    4c7e:	e9 0d       	add	r30, r9
    4c80:	f1 1d       	adc	r31, r1
    4c82:	80 81       	ld	r24, Z
    4c84:	80 33       	cpi	r24, 0x30	; 48
    4c86:	a1 f3       	breq	.-24     	; 0x4c70 <vfprintf+0x260>
    4c88:	f7 fe       	sbrs	r15, 7
    4c8a:	0a c0       	rjmp	.+20     	; 0x4ca0 <vfprintf+0x290>
    4c8c:	b9 2c       	mov	r11, r9
    4c8e:	b3 94       	inc	r11
    4c90:	89 2d       	mov	r24, r9
    4c92:	90 e0       	ldi	r25, 0x00	; 0
    4c94:	c8 16       	cp	r12, r24
    4c96:	d9 06       	cpc	r13, r25
    4c98:	14 f0       	brlt	.+4      	; 0x4c9e <vfprintf+0x28e>
    4c9a:	99 24       	eor	r9, r9
    4c9c:	01 c0       	rjmp	.+2      	; 0x4ca0 <vfprintf+0x290>
    4c9e:	9c 18       	sub	r9, r12
    4ca0:	f7 fc       	sbrc	r15, 7
    4ca2:	03 c0       	rjmp	.+6      	; 0x4caa <vfprintf+0x29a>
    4ca4:	25 e0       	ldi	r18, 0x05	; 5
    4ca6:	30 e0       	ldi	r19, 0x00	; 0
    4ca8:	09 c0       	rjmp	.+18     	; 0x4cbc <vfprintf+0x2ac>
    4caa:	1c 14       	cp	r1, r12
    4cac:	1d 04       	cpc	r1, r13
    4cae:	1c f0       	brlt	.+6      	; 0x4cb6 <vfprintf+0x2a6>
    4cb0:	21 e0       	ldi	r18, 0x01	; 1
    4cb2:	30 e0       	ldi	r19, 0x00	; 0
    4cb4:	03 c0       	rjmp	.+6      	; 0x4cbc <vfprintf+0x2ac>
    4cb6:	96 01       	movw	r18, r12
    4cb8:	2f 5f       	subi	r18, 0xFF	; 255
    4cba:	3f 4f       	sbci	r19, 0xFF	; 255
    4cbc:	11 23       	and	r17, r17
    4cbe:	11 f0       	breq	.+4      	; 0x4cc4 <vfprintf+0x2b4>
    4cc0:	2f 5f       	subi	r18, 0xFF	; 255
    4cc2:	3f 4f       	sbci	r19, 0xFF	; 255
    4cc4:	99 20       	and	r9, r9
    4cc6:	29 f0       	breq	.+10     	; 0x4cd2 <vfprintf+0x2c2>
    4cc8:	89 2d       	mov	r24, r9
    4cca:	90 e0       	ldi	r25, 0x00	; 0
    4ccc:	01 96       	adiw	r24, 0x01	; 1
    4cce:	28 0f       	add	r18, r24
    4cd0:	39 1f       	adc	r19, r25
    4cd2:	88 2d       	mov	r24, r8
    4cd4:	90 e0       	ldi	r25, 0x00	; 0
    4cd6:	28 17       	cp	r18, r24
    4cd8:	39 07       	cpc	r19, r25
    4cda:	14 f0       	brlt	.+4      	; 0x4ce0 <vfprintf+0x2d0>
    4cdc:	88 24       	eor	r8, r8
    4cde:	01 c0       	rjmp	.+2      	; 0x4ce2 <vfprintf+0x2d2>
    4ce0:	82 1a       	sub	r8, r18
    4ce2:	4f 2c       	mov	r4, r15
    4ce4:	55 24       	eor	r5, r5
    4ce6:	c2 01       	movw	r24, r4
    4ce8:	89 70       	andi	r24, 0x09	; 9
    4cea:	90 70       	andi	r25, 0x00	; 0
    4cec:	89 2b       	or	r24, r25
    4cee:	31 f0       	breq	.+12     	; 0x4cfc <vfprintf+0x2ec>
    4cf0:	07 c0       	rjmp	.+14     	; 0x4d00 <vfprintf+0x2f0>
    4cf2:	80 e2       	ldi	r24, 0x20	; 32
    4cf4:	90 e0       	ldi	r25, 0x00	; 0
    4cf6:	b3 01       	movw	r22, r6
    4cf8:	de d4       	rcall	.+2492   	; 0x56b6 <fputc>
    4cfa:	8a 94       	dec	r8
    4cfc:	88 20       	and	r8, r8
    4cfe:	c9 f7       	brne	.-14     	; 0x4cf2 <vfprintf+0x2e2>
    4d00:	11 23       	and	r17, r17
    4d02:	21 f0       	breq	.+8      	; 0x4d0c <vfprintf+0x2fc>
    4d04:	81 2f       	mov	r24, r17
    4d06:	90 e0       	ldi	r25, 0x00	; 0
    4d08:	b3 01       	movw	r22, r6
    4d0a:	d5 d4       	rcall	.+2474   	; 0x56b6 <fputc>
    4d0c:	43 fe       	sbrs	r4, 3
    4d0e:	06 c0       	rjmp	.+12     	; 0x4d1c <vfprintf+0x30c>
    4d10:	07 c0       	rjmp	.+14     	; 0x4d20 <vfprintf+0x310>
    4d12:	80 e3       	ldi	r24, 0x30	; 48
    4d14:	90 e0       	ldi	r25, 0x00	; 0
    4d16:	b3 01       	movw	r22, r6
    4d18:	ce d4       	rcall	.+2460   	; 0x56b6 <fputc>
    4d1a:	8a 94       	dec	r8
    4d1c:	88 20       	and	r8, r8
    4d1e:	c9 f7       	brne	.-14     	; 0x4d12 <vfprintf+0x302>
    4d20:	f7 fe       	sbrs	r15, 7
    4d22:	44 c0       	rjmp	.+136    	; 0x4dac <vfprintf+0x39c>
    4d24:	86 01       	movw	r16, r12
    4d26:	d7 fe       	sbrs	r13, 7
    4d28:	02 c0       	rjmp	.+4      	; 0x4d2e <vfprintf+0x31e>
    4d2a:	00 e0       	ldi	r16, 0x00	; 0
    4d2c:	10 e0       	ldi	r17, 0x00	; 0
    4d2e:	76 01       	movw	r14, r12
    4d30:	08 94       	sec
    4d32:	e1 1c       	adc	r14, r1
    4d34:	f1 1c       	adc	r15, r1
    4d36:	e0 1a       	sub	r14, r16
    4d38:	f1 0a       	sbc	r15, r17
    4d3a:	41 e0       	ldi	r20, 0x01	; 1
    4d3c:	50 e0       	ldi	r21, 0x00	; 0
    4d3e:	4c 0f       	add	r20, r28
    4d40:	5d 1f       	adc	r21, r29
    4d42:	e4 0e       	add	r14, r20
    4d44:	f5 1e       	adc	r15, r21
    4d46:	26 01       	movw	r4, r12
    4d48:	4b 18       	sub	r4, r11
    4d4a:	51 08       	sbc	r5, r1
    4d4c:	89 2d       	mov	r24, r9
    4d4e:	90 e0       	ldi	r25, 0x00	; 0
    4d50:	aa 24       	eor	r10, r10
    4d52:	bb 24       	eor	r11, r11
    4d54:	a8 1a       	sub	r10, r24
    4d56:	b9 0a       	sbc	r11, r25
    4d58:	5f ef       	ldi	r21, 0xFF	; 255
    4d5a:	0f 3f       	cpi	r16, 0xFF	; 255
    4d5c:	15 07       	cpc	r17, r21
    4d5e:	21 f4       	brne	.+8      	; 0x4d68 <vfprintf+0x358>
    4d60:	8e e2       	ldi	r24, 0x2E	; 46
    4d62:	90 e0       	ldi	r25, 0x00	; 0
    4d64:	b3 01       	movw	r22, r6
    4d66:	a7 d4       	rcall	.+2382   	; 0x56b6 <fputc>
    4d68:	c0 16       	cp	r12, r16
    4d6a:	d1 06       	cpc	r13, r17
    4d6c:	34 f0       	brlt	.+12     	; 0x4d7a <vfprintf+0x36a>
    4d6e:	40 16       	cp	r4, r16
    4d70:	51 06       	cpc	r5, r17
    4d72:	1c f4       	brge	.+6      	; 0x4d7a <vfprintf+0x36a>
    4d74:	f7 01       	movw	r30, r14
    4d76:	80 81       	ld	r24, Z
    4d78:	01 c0       	rjmp	.+2      	; 0x4d7c <vfprintf+0x36c>
    4d7a:	80 e3       	ldi	r24, 0x30	; 48
    4d7c:	01 50       	subi	r16, 0x01	; 1
    4d7e:	10 40       	sbci	r17, 0x00	; 0
    4d80:	08 94       	sec
    4d82:	e1 1c       	adc	r14, r1
    4d84:	f1 1c       	adc	r15, r1
    4d86:	0a 15       	cp	r16, r10
    4d88:	1b 05       	cpc	r17, r11
    4d8a:	24 f0       	brlt	.+8      	; 0x4d94 <vfprintf+0x384>
    4d8c:	90 e0       	ldi	r25, 0x00	; 0
    4d8e:	b3 01       	movw	r22, r6
    4d90:	92 d4       	rcall	.+2340   	; 0x56b6 <fputc>
    4d92:	e2 cf       	rjmp	.-60     	; 0x4d58 <vfprintf+0x348>
    4d94:	0c 15       	cp	r16, r12
    4d96:	1d 05       	cpc	r17, r13
    4d98:	39 f4       	brne	.+14     	; 0x4da8 <vfprintf+0x398>
    4d9a:	9a 81       	ldd	r25, Y+2	; 0x02
    4d9c:	96 33       	cpi	r25, 0x36	; 54
    4d9e:	18 f4       	brcc	.+6      	; 0x4da6 <vfprintf+0x396>
    4da0:	95 33       	cpi	r25, 0x35	; 53
    4da2:	11 f4       	brne	.+4      	; 0x4da8 <vfprintf+0x398>
    4da4:	24 fe       	sbrs	r2, 4
    4da6:	81 e3       	ldi	r24, 0x31	; 49
    4da8:	90 e0       	ldi	r25, 0x00	; 0
    4daa:	45 c0       	rjmp	.+138    	; 0x4e36 <vfprintf+0x426>
    4dac:	8a 81       	ldd	r24, Y+2	; 0x02
    4dae:	81 33       	cpi	r24, 0x31	; 49
    4db0:	09 f0       	breq	.+2      	; 0x4db4 <vfprintf+0x3a4>
    4db2:	0f 7e       	andi	r16, 0xEF	; 239
    4db4:	90 e0       	ldi	r25, 0x00	; 0
    4db6:	b3 01       	movw	r22, r6
    4db8:	7e d4       	rcall	.+2300   	; 0x56b6 <fputc>
    4dba:	99 20       	and	r9, r9
    4dbc:	91 f0       	breq	.+36     	; 0x4de2 <vfprintf+0x3d2>
    4dbe:	8e e2       	ldi	r24, 0x2E	; 46
    4dc0:	90 e0       	ldi	r25, 0x00	; 0
    4dc2:	b3 01       	movw	r22, r6
    4dc4:	78 d4       	rcall	.+2288   	; 0x56b6 <fputc>
    4dc6:	12 e0       	ldi	r17, 0x02	; 2
    4dc8:	e1 e0       	ldi	r30, 0x01	; 1
    4dca:	f0 e0       	ldi	r31, 0x00	; 0
    4dcc:	ec 0f       	add	r30, r28
    4dce:	fd 1f       	adc	r31, r29
    4dd0:	e1 0f       	add	r30, r17
    4dd2:	f1 1d       	adc	r31, r1
    4dd4:	1f 5f       	subi	r17, 0xFF	; 255
    4dd6:	80 81       	ld	r24, Z
    4dd8:	90 e0       	ldi	r25, 0x00	; 0
    4dda:	b3 01       	movw	r22, r6
    4ddc:	6c d4       	rcall	.+2264   	; 0x56b6 <fputc>
    4dde:	9a 94       	dec	r9
    4de0:	99 f7       	brne	.-26     	; 0x4dc8 <vfprintf+0x3b8>
    4de2:	44 fc       	sbrc	r4, 4
    4de4:	03 c0       	rjmp	.+6      	; 0x4dec <vfprintf+0x3dc>
    4de6:	85 e6       	ldi	r24, 0x65	; 101
    4de8:	90 e0       	ldi	r25, 0x00	; 0
    4dea:	02 c0       	rjmp	.+4      	; 0x4df0 <vfprintf+0x3e0>
    4dec:	85 e4       	ldi	r24, 0x45	; 69
    4dee:	90 e0       	ldi	r25, 0x00	; 0
    4df0:	b3 01       	movw	r22, r6
    4df2:	61 d4       	rcall	.+2242   	; 0x56b6 <fputc>
    4df4:	d7 fc       	sbrc	r13, 7
    4df6:	05 c0       	rjmp	.+10     	; 0x4e02 <vfprintf+0x3f2>
    4df8:	c1 14       	cp	r12, r1
    4dfa:	d1 04       	cpc	r13, r1
    4dfc:	41 f4       	brne	.+16     	; 0x4e0e <vfprintf+0x3fe>
    4dfe:	04 ff       	sbrs	r16, 4
    4e00:	06 c0       	rjmp	.+12     	; 0x4e0e <vfprintf+0x3fe>
    4e02:	d0 94       	com	r13
    4e04:	c1 94       	neg	r12
    4e06:	d1 08       	sbc	r13, r1
    4e08:	d3 94       	inc	r13
    4e0a:	8d e2       	ldi	r24, 0x2D	; 45
    4e0c:	01 c0       	rjmp	.+2      	; 0x4e10 <vfprintf+0x400>
    4e0e:	8b e2       	ldi	r24, 0x2B	; 43
    4e10:	90 e0       	ldi	r25, 0x00	; 0
    4e12:	b3 01       	movw	r22, r6
    4e14:	50 d4       	rcall	.+2208   	; 0x56b6 <fputc>
    4e16:	80 e3       	ldi	r24, 0x30	; 48
    4e18:	05 c0       	rjmp	.+10     	; 0x4e24 <vfprintf+0x414>
    4e1a:	8f 5f       	subi	r24, 0xFF	; 255
    4e1c:	26 ef       	ldi	r18, 0xF6	; 246
    4e1e:	3f ef       	ldi	r19, 0xFF	; 255
    4e20:	c2 0e       	add	r12, r18
    4e22:	d3 1e       	adc	r13, r19
    4e24:	3a e0       	ldi	r19, 0x0A	; 10
    4e26:	c3 16       	cp	r12, r19
    4e28:	d1 04       	cpc	r13, r1
    4e2a:	bc f7       	brge	.-18     	; 0x4e1a <vfprintf+0x40a>
    4e2c:	90 e0       	ldi	r25, 0x00	; 0
    4e2e:	b3 01       	movw	r22, r6
    4e30:	42 d4       	rcall	.+2180   	; 0x56b6 <fputc>
    4e32:	c6 01       	movw	r24, r12
    4e34:	c0 96       	adiw	r24, 0x30	; 48
    4e36:	b3 01       	movw	r22, r6
    4e38:	3e d4       	rcall	.+2172   	; 0x56b6 <fputc>
    4e3a:	cc 84       	ldd	r12, Y+12	; 0x0c
    4e3c:	dd 84       	ldd	r13, Y+13	; 0x0d
    4e3e:	46 c1       	rjmp	.+652    	; 0x50cc <vfprintf+0x6bc>
    4e40:	93 36       	cpi	r25, 0x63	; 99
    4e42:	31 f0       	breq	.+12     	; 0x4e50 <vfprintf+0x440>
    4e44:	93 37       	cpi	r25, 0x73	; 115
    4e46:	99 f0       	breq	.+38     	; 0x4e6e <vfprintf+0x45e>
    4e48:	93 35       	cpi	r25, 0x53	; 83
    4e4a:	09 f0       	breq	.+2      	; 0x4e4e <vfprintf+0x43e>
    4e4c:	55 c0       	rjmp	.+170    	; 0x4ef8 <vfprintf+0x4e8>
    4e4e:	22 c0       	rjmp	.+68     	; 0x4e94 <vfprintf+0x484>
    4e50:	f6 01       	movw	r30, r12
    4e52:	80 81       	ld	r24, Z
    4e54:	89 83       	std	Y+1, r24	; 0x01
    4e56:	5e 01       	movw	r10, r28
    4e58:	08 94       	sec
    4e5a:	a1 1c       	adc	r10, r1
    4e5c:	b1 1c       	adc	r11, r1
    4e5e:	22 e0       	ldi	r18, 0x02	; 2
    4e60:	30 e0       	ldi	r19, 0x00	; 0
    4e62:	c2 0e       	add	r12, r18
    4e64:	d3 1e       	adc	r13, r19
    4e66:	21 e0       	ldi	r18, 0x01	; 1
    4e68:	e2 2e       	mov	r14, r18
    4e6a:	f1 2c       	mov	r15, r1
    4e6c:	11 c0       	rjmp	.+34     	; 0x4e90 <vfprintf+0x480>
    4e6e:	f6 01       	movw	r30, r12
    4e70:	a0 80       	ld	r10, Z
    4e72:	b1 80       	ldd	r11, Z+1	; 0x01
    4e74:	16 fd       	sbrc	r17, 6
    4e76:	03 c0       	rjmp	.+6      	; 0x4e7e <vfprintf+0x46e>
    4e78:	6f ef       	ldi	r22, 0xFF	; 255
    4e7a:	7f ef       	ldi	r23, 0xFF	; 255
    4e7c:	02 c0       	rjmp	.+4      	; 0x4e82 <vfprintf+0x472>
    4e7e:	69 2d       	mov	r22, r9
    4e80:	70 e0       	ldi	r23, 0x00	; 0
    4e82:	22 e0       	ldi	r18, 0x02	; 2
    4e84:	30 e0       	ldi	r19, 0x00	; 0
    4e86:	c2 0e       	add	r12, r18
    4e88:	d3 1e       	adc	r13, r19
    4e8a:	c5 01       	movw	r24, r10
    4e8c:	09 d4       	rcall	.+2066   	; 0x56a0 <strnlen>
    4e8e:	7c 01       	movw	r14, r24
    4e90:	1f 77       	andi	r17, 0x7F	; 127
    4e92:	12 c0       	rjmp	.+36     	; 0x4eb8 <vfprintf+0x4a8>
    4e94:	f6 01       	movw	r30, r12
    4e96:	a0 80       	ld	r10, Z
    4e98:	b1 80       	ldd	r11, Z+1	; 0x01
    4e9a:	16 fd       	sbrc	r17, 6
    4e9c:	03 c0       	rjmp	.+6      	; 0x4ea4 <vfprintf+0x494>
    4e9e:	6f ef       	ldi	r22, 0xFF	; 255
    4ea0:	7f ef       	ldi	r23, 0xFF	; 255
    4ea2:	02 c0       	rjmp	.+4      	; 0x4ea8 <vfprintf+0x498>
    4ea4:	69 2d       	mov	r22, r9
    4ea6:	70 e0       	ldi	r23, 0x00	; 0
    4ea8:	22 e0       	ldi	r18, 0x02	; 2
    4eaa:	30 e0       	ldi	r19, 0x00	; 0
    4eac:	c2 0e       	add	r12, r18
    4eae:	d3 1e       	adc	r13, r19
    4eb0:	c5 01       	movw	r24, r10
    4eb2:	eb d3       	rcall	.+2006   	; 0x568a <strnlen_P>
    4eb4:	7c 01       	movw	r14, r24
    4eb6:	10 68       	ori	r17, 0x80	; 128
    4eb8:	13 ff       	sbrs	r17, 3
    4eba:	06 c0       	rjmp	.+12     	; 0x4ec8 <vfprintf+0x4b8>
    4ebc:	19 c0       	rjmp	.+50     	; 0x4ef0 <vfprintf+0x4e0>
    4ebe:	80 e2       	ldi	r24, 0x20	; 32
    4ec0:	90 e0       	ldi	r25, 0x00	; 0
    4ec2:	b3 01       	movw	r22, r6
    4ec4:	f8 d3       	rcall	.+2032   	; 0x56b6 <fputc>
    4ec6:	8a 94       	dec	r8
    4ec8:	88 2d       	mov	r24, r8
    4eca:	90 e0       	ldi	r25, 0x00	; 0
    4ecc:	e8 16       	cp	r14, r24
    4ece:	f9 06       	cpc	r15, r25
    4ed0:	b0 f3       	brcs	.-20     	; 0x4ebe <vfprintf+0x4ae>
    4ed2:	0e c0       	rjmp	.+28     	; 0x4ef0 <vfprintf+0x4e0>
    4ed4:	f5 01       	movw	r30, r10
    4ed6:	17 fd       	sbrc	r17, 7
    4ed8:	85 91       	lpm	r24, Z+
    4eda:	17 ff       	sbrs	r17, 7
    4edc:	81 91       	ld	r24, Z+
    4ede:	5f 01       	movw	r10, r30
    4ee0:	90 e0       	ldi	r25, 0x00	; 0
    4ee2:	b3 01       	movw	r22, r6
    4ee4:	e8 d3       	rcall	.+2000   	; 0x56b6 <fputc>
    4ee6:	81 10       	cpse	r8, r1
    4ee8:	8a 94       	dec	r8
    4eea:	08 94       	sec
    4eec:	e1 08       	sbc	r14, r1
    4eee:	f1 08       	sbc	r15, r1
    4ef0:	e1 14       	cp	r14, r1
    4ef2:	f1 04       	cpc	r15, r1
    4ef4:	79 f7       	brne	.-34     	; 0x4ed4 <vfprintf+0x4c4>
    4ef6:	ea c0       	rjmp	.+468    	; 0x50cc <vfprintf+0x6bc>
    4ef8:	94 36       	cpi	r25, 0x64	; 100
    4efa:	11 f0       	breq	.+4      	; 0x4f00 <vfprintf+0x4f0>
    4efc:	99 36       	cpi	r25, 0x69	; 105
    4efe:	81 f5       	brne	.+96     	; 0x4f60 <vfprintf+0x550>
    4f00:	17 ff       	sbrs	r17, 7
    4f02:	08 c0       	rjmp	.+16     	; 0x4f14 <vfprintf+0x504>
    4f04:	f6 01       	movw	r30, r12
    4f06:	20 81       	ld	r18, Z
    4f08:	31 81       	ldd	r19, Z+1	; 0x01
    4f0a:	42 81       	ldd	r20, Z+2	; 0x02
    4f0c:	53 81       	ldd	r21, Z+3	; 0x03
    4f0e:	84 e0       	ldi	r24, 0x04	; 4
    4f10:	90 e0       	ldi	r25, 0x00	; 0
    4f12:	0a c0       	rjmp	.+20     	; 0x4f28 <vfprintf+0x518>
    4f14:	f6 01       	movw	r30, r12
    4f16:	80 81       	ld	r24, Z
    4f18:	91 81       	ldd	r25, Z+1	; 0x01
    4f1a:	9c 01       	movw	r18, r24
    4f1c:	44 27       	eor	r20, r20
    4f1e:	37 fd       	sbrc	r19, 7
    4f20:	40 95       	com	r20
    4f22:	54 2f       	mov	r21, r20
    4f24:	82 e0       	ldi	r24, 0x02	; 2
    4f26:	90 e0       	ldi	r25, 0x00	; 0
    4f28:	c8 0e       	add	r12, r24
    4f2a:	d9 1e       	adc	r13, r25
    4f2c:	9f e6       	ldi	r25, 0x6F	; 111
    4f2e:	f9 2e       	mov	r15, r25
    4f30:	f1 22       	and	r15, r17
    4f32:	57 ff       	sbrs	r21, 7
    4f34:	09 c0       	rjmp	.+18     	; 0x4f48 <vfprintf+0x538>
    4f36:	50 95       	com	r21
    4f38:	40 95       	com	r20
    4f3a:	30 95       	com	r19
    4f3c:	21 95       	neg	r18
    4f3e:	3f 4f       	sbci	r19, 0xFF	; 255
    4f40:	4f 4f       	sbci	r20, 0xFF	; 255
    4f42:	5f 4f       	sbci	r21, 0xFF	; 255
    4f44:	90 e8       	ldi	r25, 0x80	; 128
    4f46:	f9 2a       	or	r15, r25
    4f48:	ca 01       	movw	r24, r20
    4f4a:	b9 01       	movw	r22, r18
    4f4c:	ae 01       	movw	r20, r28
    4f4e:	4f 5f       	subi	r20, 0xFF	; 255
    4f50:	5f 4f       	sbci	r21, 0xFF	; 255
    4f52:	2a e0       	ldi	r18, 0x0A	; 10
    4f54:	30 e0       	ldi	r19, 0x00	; 0
    4f56:	22 d4       	rcall	.+2116   	; 0x579c <__ultoa_invert>
    4f58:	e8 2e       	mov	r14, r24
    4f5a:	e8 89       	ldd	r30, Y+16	; 0x10
    4f5c:	ee 1a       	sub	r14, r30
    4f5e:	40 c0       	rjmp	.+128    	; 0x4fe0 <vfprintf+0x5d0>
    4f60:	95 37       	cpi	r25, 0x75	; 117
    4f62:	21 f4       	brne	.+8      	; 0x4f6c <vfprintf+0x55c>
    4f64:	1f 7e       	andi	r17, 0xEF	; 239
    4f66:	2a e0       	ldi	r18, 0x0A	; 10
    4f68:	30 e0       	ldi	r19, 0x00	; 0
    4f6a:	1c c0       	rjmp	.+56     	; 0x4fa4 <vfprintf+0x594>
    4f6c:	19 7f       	andi	r17, 0xF9	; 249
    4f6e:	9f 36       	cpi	r25, 0x6F	; 111
    4f70:	61 f0       	breq	.+24     	; 0x4f8a <vfprintf+0x57a>
    4f72:	90 37       	cpi	r25, 0x70	; 112
    4f74:	20 f4       	brcc	.+8      	; 0x4f7e <vfprintf+0x56e>
    4f76:	98 35       	cpi	r25, 0x58	; 88
    4f78:	09 f0       	breq	.+2      	; 0x4f7c <vfprintf+0x56c>
    4f7a:	ab c0       	rjmp	.+342    	; 0x50d2 <vfprintf+0x6c2>
    4f7c:	0f c0       	rjmp	.+30     	; 0x4f9c <vfprintf+0x58c>
    4f7e:	90 37       	cpi	r25, 0x70	; 112
    4f80:	39 f0       	breq	.+14     	; 0x4f90 <vfprintf+0x580>
    4f82:	98 37       	cpi	r25, 0x78	; 120
    4f84:	09 f0       	breq	.+2      	; 0x4f88 <vfprintf+0x578>
    4f86:	a5 c0       	rjmp	.+330    	; 0x50d2 <vfprintf+0x6c2>
    4f88:	04 c0       	rjmp	.+8      	; 0x4f92 <vfprintf+0x582>
    4f8a:	28 e0       	ldi	r18, 0x08	; 8
    4f8c:	30 e0       	ldi	r19, 0x00	; 0
    4f8e:	0a c0       	rjmp	.+20     	; 0x4fa4 <vfprintf+0x594>
    4f90:	10 61       	ori	r17, 0x10	; 16
    4f92:	14 fd       	sbrc	r17, 4
    4f94:	14 60       	ori	r17, 0x04	; 4
    4f96:	20 e1       	ldi	r18, 0x10	; 16
    4f98:	30 e0       	ldi	r19, 0x00	; 0
    4f9a:	04 c0       	rjmp	.+8      	; 0x4fa4 <vfprintf+0x594>
    4f9c:	14 fd       	sbrc	r17, 4
    4f9e:	16 60       	ori	r17, 0x06	; 6
    4fa0:	20 e1       	ldi	r18, 0x10	; 16
    4fa2:	32 e0       	ldi	r19, 0x02	; 2
    4fa4:	17 ff       	sbrs	r17, 7
    4fa6:	08 c0       	rjmp	.+16     	; 0x4fb8 <vfprintf+0x5a8>
    4fa8:	f6 01       	movw	r30, r12
    4faa:	60 81       	ld	r22, Z
    4fac:	71 81       	ldd	r23, Z+1	; 0x01
    4fae:	82 81       	ldd	r24, Z+2	; 0x02
    4fb0:	93 81       	ldd	r25, Z+3	; 0x03
    4fb2:	44 e0       	ldi	r20, 0x04	; 4
    4fb4:	50 e0       	ldi	r21, 0x00	; 0
    4fb6:	08 c0       	rjmp	.+16     	; 0x4fc8 <vfprintf+0x5b8>
    4fb8:	f6 01       	movw	r30, r12
    4fba:	80 81       	ld	r24, Z
    4fbc:	91 81       	ldd	r25, Z+1	; 0x01
    4fbe:	bc 01       	movw	r22, r24
    4fc0:	80 e0       	ldi	r24, 0x00	; 0
    4fc2:	90 e0       	ldi	r25, 0x00	; 0
    4fc4:	42 e0       	ldi	r20, 0x02	; 2
    4fc6:	50 e0       	ldi	r21, 0x00	; 0
    4fc8:	c4 0e       	add	r12, r20
    4fca:	d5 1e       	adc	r13, r21
    4fcc:	ae 01       	movw	r20, r28
    4fce:	4f 5f       	subi	r20, 0xFF	; 255
    4fd0:	5f 4f       	sbci	r21, 0xFF	; 255
    4fd2:	e4 d3       	rcall	.+1992   	; 0x579c <__ultoa_invert>
    4fd4:	e8 2e       	mov	r14, r24
    4fd6:	58 89       	ldd	r21, Y+16	; 0x10
    4fd8:	e5 1a       	sub	r14, r21
    4fda:	8f e7       	ldi	r24, 0x7F	; 127
    4fdc:	f8 2e       	mov	r15, r24
    4fde:	f1 22       	and	r15, r17
    4fe0:	f6 fe       	sbrs	r15, 6
    4fe2:	0b c0       	rjmp	.+22     	; 0x4ffa <vfprintf+0x5ea>
    4fe4:	8e ef       	ldi	r24, 0xFE	; 254
    4fe6:	f8 22       	and	r15, r24
    4fe8:	e9 14       	cp	r14, r9
    4fea:	38 f4       	brcc	.+14     	; 0x4ffa <vfprintf+0x5ea>
    4fec:	f4 fe       	sbrs	r15, 4
    4fee:	07 c0       	rjmp	.+14     	; 0x4ffe <vfprintf+0x5ee>
    4ff0:	f2 fc       	sbrc	r15, 2
    4ff2:	05 c0       	rjmp	.+10     	; 0x4ffe <vfprintf+0x5ee>
    4ff4:	9f ee       	ldi	r25, 0xEF	; 239
    4ff6:	f9 22       	and	r15, r25
    4ff8:	02 c0       	rjmp	.+4      	; 0x4ffe <vfprintf+0x5ee>
    4ffa:	1e 2d       	mov	r17, r14
    4ffc:	01 c0       	rjmp	.+2      	; 0x5000 <vfprintf+0x5f0>
    4ffe:	19 2d       	mov	r17, r9
    5000:	f4 fe       	sbrs	r15, 4
    5002:	0d c0       	rjmp	.+26     	; 0x501e <vfprintf+0x60e>
    5004:	fe 01       	movw	r30, r28
    5006:	ee 0d       	add	r30, r14
    5008:	f1 1d       	adc	r31, r1
    500a:	80 81       	ld	r24, Z
    500c:	80 33       	cpi	r24, 0x30	; 48
    500e:	19 f4       	brne	.+6      	; 0x5016 <vfprintf+0x606>
    5010:	e9 ee       	ldi	r30, 0xE9	; 233
    5012:	fe 22       	and	r15, r30
    5014:	08 c0       	rjmp	.+16     	; 0x5026 <vfprintf+0x616>
    5016:	1f 5f       	subi	r17, 0xFF	; 255
    5018:	f2 fe       	sbrs	r15, 2
    501a:	05 c0       	rjmp	.+10     	; 0x5026 <vfprintf+0x616>
    501c:	03 c0       	rjmp	.+6      	; 0x5024 <vfprintf+0x614>
    501e:	8f 2d       	mov	r24, r15
    5020:	86 78       	andi	r24, 0x86	; 134
    5022:	09 f0       	breq	.+2      	; 0x5026 <vfprintf+0x616>
    5024:	1f 5f       	subi	r17, 0xFF	; 255
    5026:	0f 2d       	mov	r16, r15
    5028:	f3 fc       	sbrc	r15, 3
    502a:	13 c0       	rjmp	.+38     	; 0x5052 <vfprintf+0x642>
    502c:	f0 fe       	sbrs	r15, 0
    502e:	0e c0       	rjmp	.+28     	; 0x504c <vfprintf+0x63c>
    5030:	18 15       	cp	r17, r8
    5032:	10 f0       	brcs	.+4      	; 0x5038 <vfprintf+0x628>
    5034:	9e 2c       	mov	r9, r14
    5036:	0a c0       	rjmp	.+20     	; 0x504c <vfprintf+0x63c>
    5038:	9e 2c       	mov	r9, r14
    503a:	98 0c       	add	r9, r8
    503c:	91 1a       	sub	r9, r17
    503e:	18 2d       	mov	r17, r8
    5040:	05 c0       	rjmp	.+10     	; 0x504c <vfprintf+0x63c>
    5042:	80 e2       	ldi	r24, 0x20	; 32
    5044:	90 e0       	ldi	r25, 0x00	; 0
    5046:	b3 01       	movw	r22, r6
    5048:	36 d3       	rcall	.+1644   	; 0x56b6 <fputc>
    504a:	1f 5f       	subi	r17, 0xFF	; 255
    504c:	18 15       	cp	r17, r8
    504e:	c8 f3       	brcs	.-14     	; 0x5042 <vfprintf+0x632>
    5050:	04 c0       	rjmp	.+8      	; 0x505a <vfprintf+0x64a>
    5052:	18 15       	cp	r17, r8
    5054:	10 f4       	brcc	.+4      	; 0x505a <vfprintf+0x64a>
    5056:	81 1a       	sub	r8, r17
    5058:	01 c0       	rjmp	.+2      	; 0x505c <vfprintf+0x64c>
    505a:	88 24       	eor	r8, r8
    505c:	04 ff       	sbrs	r16, 4
    505e:	0e c0       	rjmp	.+28     	; 0x507c <vfprintf+0x66c>
    5060:	80 e3       	ldi	r24, 0x30	; 48
    5062:	90 e0       	ldi	r25, 0x00	; 0
    5064:	b3 01       	movw	r22, r6
    5066:	27 d3       	rcall	.+1614   	; 0x56b6 <fputc>
    5068:	02 ff       	sbrs	r16, 2
    506a:	1b c0       	rjmp	.+54     	; 0x50a2 <vfprintf+0x692>
    506c:	01 fd       	sbrc	r16, 1
    506e:	03 c0       	rjmp	.+6      	; 0x5076 <vfprintf+0x666>
    5070:	88 e7       	ldi	r24, 0x78	; 120
    5072:	90 e0       	ldi	r25, 0x00	; 0
    5074:	0e c0       	rjmp	.+28     	; 0x5092 <vfprintf+0x682>
    5076:	88 e5       	ldi	r24, 0x58	; 88
    5078:	90 e0       	ldi	r25, 0x00	; 0
    507a:	0b c0       	rjmp	.+22     	; 0x5092 <vfprintf+0x682>
    507c:	80 2f       	mov	r24, r16
    507e:	86 78       	andi	r24, 0x86	; 134
    5080:	81 f0       	breq	.+32     	; 0x50a2 <vfprintf+0x692>
    5082:	01 ff       	sbrs	r16, 1
    5084:	02 c0       	rjmp	.+4      	; 0x508a <vfprintf+0x67a>
    5086:	8b e2       	ldi	r24, 0x2B	; 43
    5088:	01 c0       	rjmp	.+2      	; 0x508c <vfprintf+0x67c>
    508a:	80 e2       	ldi	r24, 0x20	; 32
    508c:	f7 fc       	sbrc	r15, 7
    508e:	8d e2       	ldi	r24, 0x2D	; 45
    5090:	90 e0       	ldi	r25, 0x00	; 0
    5092:	b3 01       	movw	r22, r6
    5094:	10 d3       	rcall	.+1568   	; 0x56b6 <fputc>
    5096:	05 c0       	rjmp	.+10     	; 0x50a2 <vfprintf+0x692>
    5098:	80 e3       	ldi	r24, 0x30	; 48
    509a:	90 e0       	ldi	r25, 0x00	; 0
    509c:	b3 01       	movw	r22, r6
    509e:	0b d3       	rcall	.+1558   	; 0x56b6 <fputc>
    50a0:	9a 94       	dec	r9
    50a2:	e9 14       	cp	r14, r9
    50a4:	c8 f3       	brcs	.-14     	; 0x5098 <vfprintf+0x688>
    50a6:	ea 94       	dec	r14
    50a8:	e1 e0       	ldi	r30, 0x01	; 1
    50aa:	f0 e0       	ldi	r31, 0x00	; 0
    50ac:	ec 0f       	add	r30, r28
    50ae:	fd 1f       	adc	r31, r29
    50b0:	ee 0d       	add	r30, r14
    50b2:	f1 1d       	adc	r31, r1
    50b4:	80 81       	ld	r24, Z
    50b6:	90 e0       	ldi	r25, 0x00	; 0
    50b8:	b3 01       	movw	r22, r6
    50ba:	fd d2       	rcall	.+1530   	; 0x56b6 <fputc>
    50bc:	ee 20       	and	r14, r14
    50be:	99 f7       	brne	.-26     	; 0x50a6 <vfprintf+0x696>
    50c0:	05 c0       	rjmp	.+10     	; 0x50cc <vfprintf+0x6bc>
    50c2:	80 e2       	ldi	r24, 0x20	; 32
    50c4:	90 e0       	ldi	r25, 0x00	; 0
    50c6:	b3 01       	movw	r22, r6
    50c8:	f6 d2       	rcall	.+1516   	; 0x56b6 <fputc>
    50ca:	8a 94       	dec	r8
    50cc:	88 20       	and	r8, r8
    50ce:	c9 f7       	brne	.-14     	; 0x50c2 <vfprintf+0x6b2>
    50d0:	b6 cc       	rjmp	.-1684   	; 0x4a3e <vfprintf+0x2e>
    50d2:	f3 01       	movw	r30, r6
    50d4:	66 81       	ldd	r22, Z+6	; 0x06
    50d6:	77 81       	ldd	r23, Z+7	; 0x07
    50d8:	cb 01       	movw	r24, r22
    50da:	61 96       	adiw	r28, 0x11	; 17
    50dc:	e2 e1       	ldi	r30, 0x12	; 18
    50de:	70 c0       	rjmp	.+224    	; 0x51c0 <__epilogue_restores__>

000050e0 <__mulsi3>:
    50e0:	62 9f       	mul	r22, r18
    50e2:	d0 01       	movw	r26, r0
    50e4:	73 9f       	mul	r23, r19
    50e6:	f0 01       	movw	r30, r0
    50e8:	82 9f       	mul	r24, r18
    50ea:	e0 0d       	add	r30, r0
    50ec:	f1 1d       	adc	r31, r1
    50ee:	64 9f       	mul	r22, r20
    50f0:	e0 0d       	add	r30, r0
    50f2:	f1 1d       	adc	r31, r1
    50f4:	92 9f       	mul	r25, r18
    50f6:	f0 0d       	add	r31, r0
    50f8:	83 9f       	mul	r24, r19
    50fa:	f0 0d       	add	r31, r0
    50fc:	74 9f       	mul	r23, r20
    50fe:	f0 0d       	add	r31, r0
    5100:	65 9f       	mul	r22, r21
    5102:	f0 0d       	add	r31, r0
    5104:	99 27       	eor	r25, r25
    5106:	72 9f       	mul	r23, r18
    5108:	b0 0d       	add	r27, r0
    510a:	e1 1d       	adc	r30, r1
    510c:	f9 1f       	adc	r31, r25
    510e:	63 9f       	mul	r22, r19
    5110:	b0 0d       	add	r27, r0
    5112:	e1 1d       	adc	r30, r1
    5114:	f9 1f       	adc	r31, r25
    5116:	bd 01       	movw	r22, r26
    5118:	cf 01       	movw	r24, r30
    511a:	11 24       	eor	r1, r1
    511c:	08 95       	ret

0000511e <__divmodhi4>:
    511e:	97 fb       	bst	r25, 7
    5120:	09 2e       	mov	r0, r25
    5122:	07 26       	eor	r0, r23
    5124:	0a d0       	rcall	.+20     	; 0x513a <__divmodhi4_neg1>
    5126:	77 fd       	sbrc	r23, 7
    5128:	04 d0       	rcall	.+8      	; 0x5132 <__divmodhi4_neg2>
    512a:	65 d0       	rcall	.+202    	; 0x51f6 <__udivmodhi4>
    512c:	06 d0       	rcall	.+12     	; 0x513a <__divmodhi4_neg1>
    512e:	00 20       	and	r0, r0
    5130:	1a f4       	brpl	.+6      	; 0x5138 <__divmodhi4_exit>

00005132 <__divmodhi4_neg2>:
    5132:	70 95       	com	r23
    5134:	61 95       	neg	r22
    5136:	7f 4f       	sbci	r23, 0xFF	; 255

00005138 <__divmodhi4_exit>:
    5138:	08 95       	ret

0000513a <__divmodhi4_neg1>:
    513a:	f6 f7       	brtc	.-4      	; 0x5138 <__divmodhi4_exit>
    513c:	90 95       	com	r25
    513e:	81 95       	neg	r24
    5140:	9f 4f       	sbci	r25, 0xFF	; 255
    5142:	08 95       	ret

00005144 <__udivmodsi4>:
    5144:	a1 e2       	ldi	r26, 0x21	; 33
    5146:	1a 2e       	mov	r1, r26
    5148:	aa 1b       	sub	r26, r26
    514a:	bb 1b       	sub	r27, r27
    514c:	fd 01       	movw	r30, r26
    514e:	0d c0       	rjmp	.+26     	; 0x516a <__udivmodsi4_ep>

00005150 <__udivmodsi4_loop>:
    5150:	aa 1f       	adc	r26, r26
    5152:	bb 1f       	adc	r27, r27
    5154:	ee 1f       	adc	r30, r30
    5156:	ff 1f       	adc	r31, r31
    5158:	a2 17       	cp	r26, r18
    515a:	b3 07       	cpc	r27, r19
    515c:	e4 07       	cpc	r30, r20
    515e:	f5 07       	cpc	r31, r21
    5160:	20 f0       	brcs	.+8      	; 0x516a <__udivmodsi4_ep>
    5162:	a2 1b       	sub	r26, r18
    5164:	b3 0b       	sbc	r27, r19
    5166:	e4 0b       	sbc	r30, r20
    5168:	f5 0b       	sbc	r31, r21

0000516a <__udivmodsi4_ep>:
    516a:	66 1f       	adc	r22, r22
    516c:	77 1f       	adc	r23, r23
    516e:	88 1f       	adc	r24, r24
    5170:	99 1f       	adc	r25, r25
    5172:	1a 94       	dec	r1
    5174:	69 f7       	brne	.-38     	; 0x5150 <__udivmodsi4_loop>
    5176:	60 95       	com	r22
    5178:	70 95       	com	r23
    517a:	80 95       	com	r24
    517c:	90 95       	com	r25
    517e:	9b 01       	movw	r18, r22
    5180:	ac 01       	movw	r20, r24
    5182:	bd 01       	movw	r22, r26
    5184:	cf 01       	movw	r24, r30
    5186:	08 95       	ret

00005188 <__prologue_saves__>:
    5188:	2f 92       	push	r2
    518a:	3f 92       	push	r3
    518c:	4f 92       	push	r4
    518e:	5f 92       	push	r5
    5190:	6f 92       	push	r6
    5192:	7f 92       	push	r7
    5194:	8f 92       	push	r8
    5196:	9f 92       	push	r9
    5198:	af 92       	push	r10
    519a:	bf 92       	push	r11
    519c:	cf 92       	push	r12
    519e:	df 92       	push	r13
    51a0:	ef 92       	push	r14
    51a2:	ff 92       	push	r15
    51a4:	0f 93       	push	r16
    51a6:	1f 93       	push	r17
    51a8:	cf 93       	push	r28
    51aa:	df 93       	push	r29
    51ac:	cd b7       	in	r28, 0x3d	; 61
    51ae:	de b7       	in	r29, 0x3e	; 62
    51b0:	ca 1b       	sub	r28, r26
    51b2:	db 0b       	sbc	r29, r27
    51b4:	0f b6       	in	r0, 0x3f	; 63
    51b6:	f8 94       	cli
    51b8:	de bf       	out	0x3e, r29	; 62
    51ba:	0f be       	out	0x3f, r0	; 63
    51bc:	cd bf       	out	0x3d, r28	; 61
    51be:	09 94       	ijmp

000051c0 <__epilogue_restores__>:
    51c0:	2a 88       	ldd	r2, Y+18	; 0x12
    51c2:	39 88       	ldd	r3, Y+17	; 0x11
    51c4:	48 88       	ldd	r4, Y+16	; 0x10
    51c6:	5f 84       	ldd	r5, Y+15	; 0x0f
    51c8:	6e 84       	ldd	r6, Y+14	; 0x0e
    51ca:	7d 84       	ldd	r7, Y+13	; 0x0d
    51cc:	8c 84       	ldd	r8, Y+12	; 0x0c
    51ce:	9b 84       	ldd	r9, Y+11	; 0x0b
    51d0:	aa 84       	ldd	r10, Y+10	; 0x0a
    51d2:	b9 84       	ldd	r11, Y+9	; 0x09
    51d4:	c8 84       	ldd	r12, Y+8	; 0x08
    51d6:	df 80       	ldd	r13, Y+7	; 0x07
    51d8:	ee 80       	ldd	r14, Y+6	; 0x06
    51da:	fd 80       	ldd	r15, Y+5	; 0x05
    51dc:	0c 81       	ldd	r16, Y+4	; 0x04
    51de:	1b 81       	ldd	r17, Y+3	; 0x03
    51e0:	aa 81       	ldd	r26, Y+2	; 0x02
    51e2:	b9 81       	ldd	r27, Y+1	; 0x01
    51e4:	ce 0f       	add	r28, r30
    51e6:	d1 1d       	adc	r29, r1
    51e8:	0f b6       	in	r0, 0x3f	; 63
    51ea:	f8 94       	cli
    51ec:	de bf       	out	0x3e, r29	; 62
    51ee:	0f be       	out	0x3f, r0	; 63
    51f0:	cd bf       	out	0x3d, r28	; 61
    51f2:	ed 01       	movw	r28, r26
    51f4:	08 95       	ret

000051f6 <__udivmodhi4>:
    51f6:	aa 1b       	sub	r26, r26
    51f8:	bb 1b       	sub	r27, r27
    51fa:	51 e1       	ldi	r21, 0x11	; 17
    51fc:	07 c0       	rjmp	.+14     	; 0x520c <__udivmodhi4_ep>

000051fe <__udivmodhi4_loop>:
    51fe:	aa 1f       	adc	r26, r26
    5200:	bb 1f       	adc	r27, r27
    5202:	a6 17       	cp	r26, r22
    5204:	b7 07       	cpc	r27, r23
    5206:	10 f0       	brcs	.+4      	; 0x520c <__udivmodhi4_ep>
    5208:	a6 1b       	sub	r26, r22
    520a:	b7 0b       	sbc	r27, r23

0000520c <__udivmodhi4_ep>:
    520c:	88 1f       	adc	r24, r24
    520e:	99 1f       	adc	r25, r25
    5210:	5a 95       	dec	r21
    5212:	a9 f7       	brne	.-22     	; 0x51fe <__udivmodhi4_loop>
    5214:	80 95       	com	r24
    5216:	90 95       	com	r25
    5218:	bc 01       	movw	r22, r24
    521a:	cd 01       	movw	r24, r26
    521c:	08 95       	ret

0000521e <malloc>:
    521e:	cf 93       	push	r28
    5220:	df 93       	push	r29
    5222:	bc 01       	movw	r22, r24
    5224:	82 30       	cpi	r24, 0x02	; 2
    5226:	91 05       	cpc	r25, r1
    5228:	10 f4       	brcc	.+4      	; 0x522e <malloc+0x10>
    522a:	62 e0       	ldi	r22, 0x02	; 2
    522c:	70 e0       	ldi	r23, 0x00	; 0
    522e:	a0 91 a3 04 	lds	r26, 0x04A3
    5232:	b0 91 a4 04 	lds	r27, 0x04A4
    5236:	ed 01       	movw	r28, r26
    5238:	e0 e0       	ldi	r30, 0x00	; 0
    523a:	f0 e0       	ldi	r31, 0x00	; 0
    523c:	40 e0       	ldi	r20, 0x00	; 0
    523e:	50 e0       	ldi	r21, 0x00	; 0
    5240:	21 c0       	rjmp	.+66     	; 0x5284 <malloc+0x66>
    5242:	88 81       	ld	r24, Y
    5244:	99 81       	ldd	r25, Y+1	; 0x01
    5246:	86 17       	cp	r24, r22
    5248:	97 07       	cpc	r25, r23
    524a:	69 f4       	brne	.+26     	; 0x5266 <malloc+0x48>
    524c:	8a 81       	ldd	r24, Y+2	; 0x02
    524e:	9b 81       	ldd	r25, Y+3	; 0x03
    5250:	30 97       	sbiw	r30, 0x00	; 0
    5252:	19 f0       	breq	.+6      	; 0x525a <malloc+0x3c>
    5254:	93 83       	std	Z+3, r25	; 0x03
    5256:	82 83       	std	Z+2, r24	; 0x02
    5258:	04 c0       	rjmp	.+8      	; 0x5262 <malloc+0x44>
    525a:	90 93 a4 04 	sts	0x04A4, r25
    525e:	80 93 a3 04 	sts	0x04A3, r24
    5262:	fe 01       	movw	r30, r28
    5264:	34 c0       	rjmp	.+104    	; 0x52ce <malloc+0xb0>
    5266:	68 17       	cp	r22, r24
    5268:	79 07       	cpc	r23, r25
    526a:	38 f4       	brcc	.+14     	; 0x527a <malloc+0x5c>
    526c:	41 15       	cp	r20, r1
    526e:	51 05       	cpc	r21, r1
    5270:	19 f0       	breq	.+6      	; 0x5278 <malloc+0x5a>
    5272:	84 17       	cp	r24, r20
    5274:	95 07       	cpc	r25, r21
    5276:	08 f4       	brcc	.+2      	; 0x527a <malloc+0x5c>
    5278:	ac 01       	movw	r20, r24
    527a:	fe 01       	movw	r30, r28
    527c:	8a 81       	ldd	r24, Y+2	; 0x02
    527e:	9b 81       	ldd	r25, Y+3	; 0x03
    5280:	9c 01       	movw	r18, r24
    5282:	e9 01       	movw	r28, r18
    5284:	20 97       	sbiw	r28, 0x00	; 0
    5286:	e9 f6       	brne	.-70     	; 0x5242 <malloc+0x24>
    5288:	41 15       	cp	r20, r1
    528a:	51 05       	cpc	r21, r1
    528c:	a9 f1       	breq	.+106    	; 0x52f8 <malloc+0xda>
    528e:	ca 01       	movw	r24, r20
    5290:	86 1b       	sub	r24, r22
    5292:	97 0b       	sbc	r25, r23
    5294:	04 97       	sbiw	r24, 0x04	; 4
    5296:	08 f4       	brcc	.+2      	; 0x529a <malloc+0x7c>
    5298:	ba 01       	movw	r22, r20
    529a:	e0 e0       	ldi	r30, 0x00	; 0
    529c:	f0 e0       	ldi	r31, 0x00	; 0
    529e:	2a c0       	rjmp	.+84     	; 0x52f4 <malloc+0xd6>
    52a0:	8d 91       	ld	r24, X+
    52a2:	9c 91       	ld	r25, X
    52a4:	11 97       	sbiw	r26, 0x01	; 1
    52a6:	84 17       	cp	r24, r20
    52a8:	95 07       	cpc	r25, r21
    52aa:	f9 f4       	brne	.+62     	; 0x52ea <malloc+0xcc>
    52ac:	64 17       	cp	r22, r20
    52ae:	75 07       	cpc	r23, r21
    52b0:	81 f4       	brne	.+32     	; 0x52d2 <malloc+0xb4>
    52b2:	12 96       	adiw	r26, 0x02	; 2
    52b4:	8d 91       	ld	r24, X+
    52b6:	9c 91       	ld	r25, X
    52b8:	13 97       	sbiw	r26, 0x03	; 3
    52ba:	30 97       	sbiw	r30, 0x00	; 0
    52bc:	19 f0       	breq	.+6      	; 0x52c4 <malloc+0xa6>
    52be:	93 83       	std	Z+3, r25	; 0x03
    52c0:	82 83       	std	Z+2, r24	; 0x02
    52c2:	04 c0       	rjmp	.+8      	; 0x52cc <malloc+0xae>
    52c4:	90 93 a4 04 	sts	0x04A4, r25
    52c8:	80 93 a3 04 	sts	0x04A3, r24
    52cc:	fd 01       	movw	r30, r26
    52ce:	32 96       	adiw	r30, 0x02	; 2
    52d0:	4f c0       	rjmp	.+158    	; 0x5370 <malloc+0x152>
    52d2:	ca 01       	movw	r24, r20
    52d4:	86 1b       	sub	r24, r22
    52d6:	97 0b       	sbc	r25, r23
    52d8:	fd 01       	movw	r30, r26
    52da:	e8 0f       	add	r30, r24
    52dc:	f9 1f       	adc	r31, r25
    52de:	61 93       	st	Z+, r22
    52e0:	71 93       	st	Z+, r23
    52e2:	02 97       	sbiw	r24, 0x02	; 2
    52e4:	8d 93       	st	X+, r24
    52e6:	9c 93       	st	X, r25
    52e8:	43 c0       	rjmp	.+134    	; 0x5370 <malloc+0x152>
    52ea:	fd 01       	movw	r30, r26
    52ec:	82 81       	ldd	r24, Z+2	; 0x02
    52ee:	93 81       	ldd	r25, Z+3	; 0x03
    52f0:	9c 01       	movw	r18, r24
    52f2:	d9 01       	movw	r26, r18
    52f4:	10 97       	sbiw	r26, 0x00	; 0
    52f6:	a1 f6       	brne	.-88     	; 0x52a0 <malloc+0x82>
    52f8:	80 91 a1 04 	lds	r24, 0x04A1
    52fc:	90 91 a2 04 	lds	r25, 0x04A2
    5300:	89 2b       	or	r24, r25
    5302:	41 f4       	brne	.+16     	; 0x5314 <malloc+0xf6>
    5304:	80 91 a1 01 	lds	r24, 0x01A1
    5308:	90 91 a2 01 	lds	r25, 0x01A2
    530c:	90 93 a2 04 	sts	0x04A2, r25
    5310:	80 93 a1 04 	sts	0x04A1, r24
    5314:	40 91 a3 01 	lds	r20, 0x01A3
    5318:	50 91 a4 01 	lds	r21, 0x01A4
    531c:	41 15       	cp	r20, r1
    531e:	51 05       	cpc	r21, r1
    5320:	41 f4       	brne	.+16     	; 0x5332 <malloc+0x114>
    5322:	4d b7       	in	r20, 0x3d	; 61
    5324:	5e b7       	in	r21, 0x3e	; 62
    5326:	80 91 9f 01 	lds	r24, 0x019F
    532a:	90 91 a0 01 	lds	r25, 0x01A0
    532e:	48 1b       	sub	r20, r24
    5330:	59 0b       	sbc	r21, r25
    5332:	20 91 a1 04 	lds	r18, 0x04A1
    5336:	30 91 a2 04 	lds	r19, 0x04A2
    533a:	24 17       	cp	r18, r20
    533c:	35 07       	cpc	r19, r21
    533e:	b0 f4       	brcc	.+44     	; 0x536c <malloc+0x14e>
    5340:	ca 01       	movw	r24, r20
    5342:	82 1b       	sub	r24, r18
    5344:	93 0b       	sbc	r25, r19
    5346:	86 17       	cp	r24, r22
    5348:	97 07       	cpc	r25, r23
    534a:	80 f0       	brcs	.+32     	; 0x536c <malloc+0x14e>
    534c:	ab 01       	movw	r20, r22
    534e:	4e 5f       	subi	r20, 0xFE	; 254
    5350:	5f 4f       	sbci	r21, 0xFF	; 255
    5352:	84 17       	cp	r24, r20
    5354:	95 07       	cpc	r25, r21
    5356:	50 f0       	brcs	.+20     	; 0x536c <malloc+0x14e>
    5358:	42 0f       	add	r20, r18
    535a:	53 1f       	adc	r21, r19
    535c:	50 93 a2 04 	sts	0x04A2, r21
    5360:	40 93 a1 04 	sts	0x04A1, r20
    5364:	f9 01       	movw	r30, r18
    5366:	61 93       	st	Z+, r22
    5368:	71 93       	st	Z+, r23
    536a:	02 c0       	rjmp	.+4      	; 0x5370 <malloc+0x152>
    536c:	e0 e0       	ldi	r30, 0x00	; 0
    536e:	f0 e0       	ldi	r31, 0x00	; 0
    5370:	cf 01       	movw	r24, r30
    5372:	df 91       	pop	r29
    5374:	cf 91       	pop	r28
    5376:	08 95       	ret

00005378 <free>:
    5378:	cf 93       	push	r28
    537a:	df 93       	push	r29
    537c:	00 97       	sbiw	r24, 0x00	; 0
    537e:	09 f4       	brne	.+2      	; 0x5382 <free+0xa>
    5380:	50 c0       	rjmp	.+160    	; 0x5422 <free+0xaa>
    5382:	ec 01       	movw	r28, r24
    5384:	22 97       	sbiw	r28, 0x02	; 2
    5386:	1b 82       	std	Y+3, r1	; 0x03
    5388:	1a 82       	std	Y+2, r1	; 0x02
    538a:	a0 91 a3 04 	lds	r26, 0x04A3
    538e:	b0 91 a4 04 	lds	r27, 0x04A4
    5392:	10 97       	sbiw	r26, 0x00	; 0
    5394:	09 f1       	breq	.+66     	; 0x53d8 <free+0x60>
    5396:	40 e0       	ldi	r20, 0x00	; 0
    5398:	50 e0       	ldi	r21, 0x00	; 0
    539a:	ac 17       	cp	r26, r28
    539c:	bd 07       	cpc	r27, r29
    539e:	08 f1       	brcs	.+66     	; 0x53e2 <free+0x6a>
    53a0:	bb 83       	std	Y+3, r27	; 0x03
    53a2:	aa 83       	std	Y+2, r26	; 0x02
    53a4:	fe 01       	movw	r30, r28
    53a6:	21 91       	ld	r18, Z+
    53a8:	31 91       	ld	r19, Z+
    53aa:	e2 0f       	add	r30, r18
    53ac:	f3 1f       	adc	r31, r19
    53ae:	ae 17       	cp	r26, r30
    53b0:	bf 07       	cpc	r27, r31
    53b2:	79 f4       	brne	.+30     	; 0x53d2 <free+0x5a>
    53b4:	8d 91       	ld	r24, X+
    53b6:	9c 91       	ld	r25, X
    53b8:	11 97       	sbiw	r26, 0x01	; 1
    53ba:	28 0f       	add	r18, r24
    53bc:	39 1f       	adc	r19, r25
    53be:	2e 5f       	subi	r18, 0xFE	; 254
    53c0:	3f 4f       	sbci	r19, 0xFF	; 255
    53c2:	39 83       	std	Y+1, r19	; 0x01
    53c4:	28 83       	st	Y, r18
    53c6:	12 96       	adiw	r26, 0x02	; 2
    53c8:	8d 91       	ld	r24, X+
    53ca:	9c 91       	ld	r25, X
    53cc:	13 97       	sbiw	r26, 0x03	; 3
    53ce:	9b 83       	std	Y+3, r25	; 0x03
    53d0:	8a 83       	std	Y+2, r24	; 0x02
    53d2:	41 15       	cp	r20, r1
    53d4:	51 05       	cpc	r21, r1
    53d6:	71 f4       	brne	.+28     	; 0x53f4 <free+0x7c>
    53d8:	d0 93 a4 04 	sts	0x04A4, r29
    53dc:	c0 93 a3 04 	sts	0x04A3, r28
    53e0:	20 c0       	rjmp	.+64     	; 0x5422 <free+0xaa>
    53e2:	12 96       	adiw	r26, 0x02	; 2
    53e4:	8d 91       	ld	r24, X+
    53e6:	9c 91       	ld	r25, X
    53e8:	13 97       	sbiw	r26, 0x03	; 3
    53ea:	ad 01       	movw	r20, r26
    53ec:	00 97       	sbiw	r24, 0x00	; 0
    53ee:	11 f0       	breq	.+4      	; 0x53f4 <free+0x7c>
    53f0:	dc 01       	movw	r26, r24
    53f2:	d3 cf       	rjmp	.-90     	; 0x539a <free+0x22>
    53f4:	fa 01       	movw	r30, r20
    53f6:	d3 83       	std	Z+3, r29	; 0x03
    53f8:	c2 83       	std	Z+2, r28	; 0x02
    53fa:	21 91       	ld	r18, Z+
    53fc:	31 91       	ld	r19, Z+
    53fe:	e2 0f       	add	r30, r18
    5400:	f3 1f       	adc	r31, r19
    5402:	ce 17       	cp	r28, r30
    5404:	df 07       	cpc	r29, r31
    5406:	69 f4       	brne	.+26     	; 0x5422 <free+0xaa>
    5408:	88 81       	ld	r24, Y
    540a:	99 81       	ldd	r25, Y+1	; 0x01
    540c:	28 0f       	add	r18, r24
    540e:	39 1f       	adc	r19, r25
    5410:	2e 5f       	subi	r18, 0xFE	; 254
    5412:	3f 4f       	sbci	r19, 0xFF	; 255
    5414:	fa 01       	movw	r30, r20
    5416:	31 83       	std	Z+1, r19	; 0x01
    5418:	20 83       	st	Z, r18
    541a:	8a 81       	ldd	r24, Y+2	; 0x02
    541c:	9b 81       	ldd	r25, Y+3	; 0x03
    541e:	93 83       	std	Z+3, r25	; 0x03
    5420:	82 83       	std	Z+2, r24	; 0x02
    5422:	df 91       	pop	r29
    5424:	cf 91       	pop	r28
    5426:	08 95       	ret

00005428 <do_rand>:
    5428:	a0 e0       	ldi	r26, 0x00	; 0
    542a:	b0 e0       	ldi	r27, 0x00	; 0
    542c:	e9 e1       	ldi	r30, 0x19	; 25
    542e:	fa e2       	ldi	r31, 0x2A	; 42
    5430:	b3 ce       	rjmp	.-666    	; 0x5198 <__prologue_saves__+0x10>
    5432:	ec 01       	movw	r28, r24
    5434:	a8 80       	ld	r10, Y
    5436:	b9 80       	ldd	r11, Y+1	; 0x01
    5438:	ca 80       	ldd	r12, Y+2	; 0x02
    543a:	db 80       	ldd	r13, Y+3	; 0x03
    543c:	a1 14       	cp	r10, r1
    543e:	b1 04       	cpc	r11, r1
    5440:	c1 04       	cpc	r12, r1
    5442:	d1 04       	cpc	r13, r1
    5444:	41 f4       	brne	.+16     	; 0x5456 <do_rand+0x2e>
    5446:	84 e2       	ldi	r24, 0x24	; 36
    5448:	a8 2e       	mov	r10, r24
    544a:	89 ed       	ldi	r24, 0xD9	; 217
    544c:	b8 2e       	mov	r11, r24
    544e:	8b e5       	ldi	r24, 0x5B	; 91
    5450:	c8 2e       	mov	r12, r24
    5452:	87 e0       	ldi	r24, 0x07	; 7
    5454:	d8 2e       	mov	r13, r24
    5456:	c6 01       	movw	r24, r12
    5458:	b5 01       	movw	r22, r10
    545a:	2d e1       	ldi	r18, 0x1D	; 29
    545c:	33 ef       	ldi	r19, 0xF3	; 243
    545e:	41 e0       	ldi	r20, 0x01	; 1
    5460:	50 e0       	ldi	r21, 0x00	; 0
    5462:	fa d1       	rcall	.+1012   	; 0x5858 <__divmodsi4>
    5464:	27 ea       	ldi	r18, 0xA7	; 167
    5466:	31 e4       	ldi	r19, 0x41	; 65
    5468:	40 e0       	ldi	r20, 0x00	; 0
    546a:	50 e0       	ldi	r21, 0x00	; 0
    546c:	39 de       	rcall	.-910    	; 0x50e0 <__mulsi3>
    546e:	7b 01       	movw	r14, r22
    5470:	8c 01       	movw	r16, r24
    5472:	c6 01       	movw	r24, r12
    5474:	b5 01       	movw	r22, r10
    5476:	2d e1       	ldi	r18, 0x1D	; 29
    5478:	33 ef       	ldi	r19, 0xF3	; 243
    547a:	41 e0       	ldi	r20, 0x01	; 1
    547c:	50 e0       	ldi	r21, 0x00	; 0
    547e:	ec d1       	rcall	.+984    	; 0x5858 <__divmodsi4>
    5480:	ca 01       	movw	r24, r20
    5482:	b9 01       	movw	r22, r18
    5484:	2c ee       	ldi	r18, 0xEC	; 236
    5486:	34 ef       	ldi	r19, 0xF4	; 244
    5488:	4f ef       	ldi	r20, 0xFF	; 255
    548a:	5f ef       	ldi	r21, 0xFF	; 255
    548c:	29 de       	rcall	.-942    	; 0x50e0 <__mulsi3>
    548e:	6e 0d       	add	r22, r14
    5490:	7f 1d       	adc	r23, r15
    5492:	80 1f       	adc	r24, r16
    5494:	91 1f       	adc	r25, r17
    5496:	97 ff       	sbrs	r25, 7
    5498:	04 c0       	rjmp	.+8      	; 0x54a2 <do_rand+0x7a>
    549a:	61 50       	subi	r22, 0x01	; 1
    549c:	70 40       	sbci	r23, 0x00	; 0
    549e:	80 40       	sbci	r24, 0x00	; 0
    54a0:	90 48       	sbci	r25, 0x80	; 128
    54a2:	68 83       	st	Y, r22
    54a4:	79 83       	std	Y+1, r23	; 0x01
    54a6:	8a 83       	std	Y+2, r24	; 0x02
    54a8:	9b 83       	std	Y+3, r25	; 0x03
    54aa:	9b 01       	movw	r18, r22
    54ac:	3f 77       	andi	r19, 0x7F	; 127
    54ae:	c9 01       	movw	r24, r18
    54b0:	cd b7       	in	r28, 0x3d	; 61
    54b2:	de b7       	in	r29, 0x3e	; 62
    54b4:	ea e0       	ldi	r30, 0x0A	; 10
    54b6:	8c ce       	rjmp	.-744    	; 0x51d0 <__epilogue_restores__+0x10>

000054b8 <rand_r>:
    54b8:	b7 df       	rcall	.-146    	; 0x5428 <do_rand>
    54ba:	08 95       	ret

000054bc <rand>:
    54bc:	85 ea       	ldi	r24, 0xA5	; 165
    54be:	91 e0       	ldi	r25, 0x01	; 1
    54c0:	b3 df       	rcall	.-154    	; 0x5428 <do_rand>
    54c2:	08 95       	ret

000054c4 <srand>:
    54c4:	a0 e0       	ldi	r26, 0x00	; 0
    54c6:	b0 e0       	ldi	r27, 0x00	; 0
    54c8:	80 93 a5 01 	sts	0x01A5, r24
    54cc:	90 93 a6 01 	sts	0x01A6, r25
    54d0:	a0 93 a7 01 	sts	0x01A7, r26
    54d4:	b0 93 a8 01 	sts	0x01A8, r27
    54d8:	08 95       	ret

000054da <__ftoa_engine>:
    54da:	28 30       	cpi	r18, 0x08	; 8
    54dc:	08 f0       	brcs	.+2      	; 0x54e0 <__ftoa_engine+0x6>
    54de:	27 e0       	ldi	r18, 0x07	; 7
    54e0:	33 27       	eor	r19, r19
    54e2:	da 01       	movw	r26, r20
    54e4:	99 0f       	add	r25, r25
    54e6:	31 1d       	adc	r19, r1
    54e8:	87 fd       	sbrc	r24, 7
    54ea:	91 60       	ori	r25, 0x01	; 1
    54ec:	00 96       	adiw	r24, 0x00	; 0
    54ee:	61 05       	cpc	r22, r1
    54f0:	71 05       	cpc	r23, r1
    54f2:	39 f4       	brne	.+14     	; 0x5502 <__ftoa_engine+0x28>
    54f4:	32 60       	ori	r19, 0x02	; 2
    54f6:	2e 5f       	subi	r18, 0xFE	; 254
    54f8:	3d 93       	st	X+, r19
    54fa:	30 e3       	ldi	r19, 0x30	; 48
    54fc:	2a 95       	dec	r18
    54fe:	e1 f7       	brne	.-8      	; 0x54f8 <__ftoa_engine+0x1e>
    5500:	08 95       	ret
    5502:	9f 3f       	cpi	r25, 0xFF	; 255
    5504:	30 f0       	brcs	.+12     	; 0x5512 <__ftoa_engine+0x38>
    5506:	80 38       	cpi	r24, 0x80	; 128
    5508:	71 05       	cpc	r23, r1
    550a:	61 05       	cpc	r22, r1
    550c:	09 f0       	breq	.+2      	; 0x5510 <__ftoa_engine+0x36>
    550e:	3c 5f       	subi	r19, 0xFC	; 252
    5510:	3c 5f       	subi	r19, 0xFC	; 252
    5512:	3d 93       	st	X+, r19
    5514:	91 30       	cpi	r25, 0x01	; 1
    5516:	08 f0       	brcs	.+2      	; 0x551a <__ftoa_engine+0x40>
    5518:	80 68       	ori	r24, 0x80	; 128
    551a:	91 1d       	adc	r25, r1
    551c:	df 93       	push	r29
    551e:	cf 93       	push	r28
    5520:	1f 93       	push	r17
    5522:	0f 93       	push	r16
    5524:	ff 92       	push	r15
    5526:	ef 92       	push	r14
    5528:	19 2f       	mov	r17, r25
    552a:	98 7f       	andi	r25, 0xF8	; 248
    552c:	96 95       	lsr	r25
    552e:	e9 2f       	mov	r30, r25
    5530:	96 95       	lsr	r25
    5532:	96 95       	lsr	r25
    5534:	e9 0f       	add	r30, r25
    5536:	ff 27       	eor	r31, r31
    5538:	ef 53       	subi	r30, 0x3F	; 63
    553a:	fa 4f       	sbci	r31, 0xFA	; 250
    553c:	99 27       	eor	r25, r25
    553e:	33 27       	eor	r19, r19
    5540:	ee 24       	eor	r14, r14
    5542:	ff 24       	eor	r15, r15
    5544:	a7 01       	movw	r20, r14
    5546:	e7 01       	movw	r28, r14
    5548:	05 90       	lpm	r0, Z+
    554a:	08 94       	sec
    554c:	07 94       	ror	r0
    554e:	28 f4       	brcc	.+10     	; 0x555a <__ftoa_engine+0x80>
    5550:	36 0f       	add	r19, r22
    5552:	e7 1e       	adc	r14, r23
    5554:	f8 1e       	adc	r15, r24
    5556:	49 1f       	adc	r20, r25
    5558:	51 1d       	adc	r21, r1
    555a:	66 0f       	add	r22, r22
    555c:	77 1f       	adc	r23, r23
    555e:	88 1f       	adc	r24, r24
    5560:	99 1f       	adc	r25, r25
    5562:	06 94       	lsr	r0
    5564:	a1 f7       	brne	.-24     	; 0x554e <__ftoa_engine+0x74>
    5566:	05 90       	lpm	r0, Z+
    5568:	07 94       	ror	r0
    556a:	28 f4       	brcc	.+10     	; 0x5576 <__ftoa_engine+0x9c>
    556c:	e7 0e       	add	r14, r23
    556e:	f8 1e       	adc	r15, r24
    5570:	49 1f       	adc	r20, r25
    5572:	56 1f       	adc	r21, r22
    5574:	c1 1d       	adc	r28, r1
    5576:	77 0f       	add	r23, r23
    5578:	88 1f       	adc	r24, r24
    557a:	99 1f       	adc	r25, r25
    557c:	66 1f       	adc	r22, r22
    557e:	06 94       	lsr	r0
    5580:	a1 f7       	brne	.-24     	; 0x556a <__ftoa_engine+0x90>
    5582:	05 90       	lpm	r0, Z+
    5584:	07 94       	ror	r0
    5586:	28 f4       	brcc	.+10     	; 0x5592 <__ftoa_engine+0xb8>
    5588:	f8 0e       	add	r15, r24
    558a:	49 1f       	adc	r20, r25
    558c:	56 1f       	adc	r21, r22
    558e:	c7 1f       	adc	r28, r23
    5590:	d1 1d       	adc	r29, r1
    5592:	88 0f       	add	r24, r24
    5594:	99 1f       	adc	r25, r25
    5596:	66 1f       	adc	r22, r22
    5598:	77 1f       	adc	r23, r23
    559a:	06 94       	lsr	r0
    559c:	a1 f7       	brne	.-24     	; 0x5586 <__ftoa_engine+0xac>
    559e:	05 90       	lpm	r0, Z+
    55a0:	07 94       	ror	r0
    55a2:	20 f4       	brcc	.+8      	; 0x55ac <__ftoa_engine+0xd2>
    55a4:	49 0f       	add	r20, r25
    55a6:	56 1f       	adc	r21, r22
    55a8:	c7 1f       	adc	r28, r23
    55aa:	d8 1f       	adc	r29, r24
    55ac:	99 0f       	add	r25, r25
    55ae:	66 1f       	adc	r22, r22
    55b0:	77 1f       	adc	r23, r23
    55b2:	88 1f       	adc	r24, r24
    55b4:	06 94       	lsr	r0
    55b6:	a9 f7       	brne	.-22     	; 0x55a2 <__ftoa_engine+0xc8>
    55b8:	84 91       	lpm	r24, Z+
    55ba:	10 95       	com	r17
    55bc:	17 70       	andi	r17, 0x07	; 7
    55be:	41 f0       	breq	.+16     	; 0x55d0 <__ftoa_engine+0xf6>
    55c0:	d6 95       	lsr	r29
    55c2:	c7 95       	ror	r28
    55c4:	57 95       	ror	r21
    55c6:	47 95       	ror	r20
    55c8:	f7 94       	ror	r15
    55ca:	e7 94       	ror	r14
    55cc:	1a 95       	dec	r17
    55ce:	c1 f7       	brne	.-16     	; 0x55c0 <__ftoa_engine+0xe6>
    55d0:	e7 e6       	ldi	r30, 0x67	; 103
    55d2:	f5 e0       	ldi	r31, 0x05	; 5
    55d4:	68 94       	set
    55d6:	15 90       	lpm	r1, Z+
    55d8:	15 91       	lpm	r17, Z+
    55da:	35 91       	lpm	r19, Z+
    55dc:	65 91       	lpm	r22, Z+
    55de:	95 91       	lpm	r25, Z+
    55e0:	05 90       	lpm	r0, Z+
    55e2:	7f e2       	ldi	r23, 0x2F	; 47
    55e4:	73 95       	inc	r23
    55e6:	e1 18       	sub	r14, r1
    55e8:	f1 0a       	sbc	r15, r17
    55ea:	43 0b       	sbc	r20, r19
    55ec:	56 0b       	sbc	r21, r22
    55ee:	c9 0b       	sbc	r28, r25
    55f0:	d0 09       	sbc	r29, r0
    55f2:	c0 f7       	brcc	.-16     	; 0x55e4 <__ftoa_engine+0x10a>
    55f4:	e1 0c       	add	r14, r1
    55f6:	f1 1e       	adc	r15, r17
    55f8:	43 1f       	adc	r20, r19
    55fa:	56 1f       	adc	r21, r22
    55fc:	c9 1f       	adc	r28, r25
    55fe:	d0 1d       	adc	r29, r0
    5600:	7e f4       	brtc	.+30     	; 0x5620 <__ftoa_engine+0x146>
    5602:	70 33       	cpi	r23, 0x30	; 48
    5604:	11 f4       	brne	.+4      	; 0x560a <__ftoa_engine+0x130>
    5606:	8a 95       	dec	r24
    5608:	e6 cf       	rjmp	.-52     	; 0x55d6 <__ftoa_engine+0xfc>
    560a:	e8 94       	clt
    560c:	01 50       	subi	r16, 0x01	; 1
    560e:	30 f0       	brcs	.+12     	; 0x561c <__ftoa_engine+0x142>
    5610:	08 0f       	add	r16, r24
    5612:	0a f4       	brpl	.+2      	; 0x5616 <__ftoa_engine+0x13c>
    5614:	00 27       	eor	r16, r16
    5616:	02 17       	cp	r16, r18
    5618:	08 f4       	brcc	.+2      	; 0x561c <__ftoa_engine+0x142>
    561a:	20 2f       	mov	r18, r16
    561c:	23 95       	inc	r18
    561e:	02 2f       	mov	r16, r18
    5620:	7a 33       	cpi	r23, 0x3A	; 58
    5622:	28 f0       	brcs	.+10     	; 0x562e <__ftoa_engine+0x154>
    5624:	79 e3       	ldi	r23, 0x39	; 57
    5626:	7d 93       	st	X+, r23
    5628:	2a 95       	dec	r18
    562a:	e9 f7       	brne	.-6      	; 0x5626 <__ftoa_engine+0x14c>
    562c:	10 c0       	rjmp	.+32     	; 0x564e <__ftoa_engine+0x174>
    562e:	7d 93       	st	X+, r23
    5630:	2a 95       	dec	r18
    5632:	89 f6       	brne	.-94     	; 0x55d6 <__ftoa_engine+0xfc>
    5634:	06 94       	lsr	r0
    5636:	97 95       	ror	r25
    5638:	67 95       	ror	r22
    563a:	37 95       	ror	r19
    563c:	17 95       	ror	r17
    563e:	17 94       	ror	r1
    5640:	e1 18       	sub	r14, r1
    5642:	f1 0a       	sbc	r15, r17
    5644:	43 0b       	sbc	r20, r19
    5646:	56 0b       	sbc	r21, r22
    5648:	c9 0b       	sbc	r28, r25
    564a:	d0 09       	sbc	r29, r0
    564c:	98 f0       	brcs	.+38     	; 0x5674 <__ftoa_engine+0x19a>
    564e:	23 95       	inc	r18
    5650:	7e 91       	ld	r23, -X
    5652:	73 95       	inc	r23
    5654:	7a 33       	cpi	r23, 0x3A	; 58
    5656:	08 f0       	brcs	.+2      	; 0x565a <__ftoa_engine+0x180>
    5658:	70 e3       	ldi	r23, 0x30	; 48
    565a:	7c 93       	st	X, r23
    565c:	20 13       	cpse	r18, r16
    565e:	b8 f7       	brcc	.-18     	; 0x564e <__ftoa_engine+0x174>
    5660:	7e 91       	ld	r23, -X
    5662:	70 61       	ori	r23, 0x10	; 16
    5664:	7d 93       	st	X+, r23
    5666:	30 f0       	brcs	.+12     	; 0x5674 <__ftoa_engine+0x19a>
    5668:	83 95       	inc	r24
    566a:	71 e3       	ldi	r23, 0x31	; 49
    566c:	7d 93       	st	X+, r23
    566e:	70 e3       	ldi	r23, 0x30	; 48
    5670:	2a 95       	dec	r18
    5672:	e1 f7       	brne	.-8      	; 0x566c <__ftoa_engine+0x192>
    5674:	11 24       	eor	r1, r1
    5676:	ef 90       	pop	r14
    5678:	ff 90       	pop	r15
    567a:	0f 91       	pop	r16
    567c:	1f 91       	pop	r17
    567e:	cf 91       	pop	r28
    5680:	df 91       	pop	r29
    5682:	99 27       	eor	r25, r25
    5684:	87 fd       	sbrc	r24, 7
    5686:	90 95       	com	r25
    5688:	08 95       	ret

0000568a <strnlen_P>:
    568a:	fc 01       	movw	r30, r24
    568c:	05 90       	lpm	r0, Z+
    568e:	61 50       	subi	r22, 0x01	; 1
    5690:	70 40       	sbci	r23, 0x00	; 0
    5692:	01 10       	cpse	r0, r1
    5694:	d8 f7       	brcc	.-10     	; 0x568c <strnlen_P+0x2>
    5696:	80 95       	com	r24
    5698:	90 95       	com	r25
    569a:	8e 0f       	add	r24, r30
    569c:	9f 1f       	adc	r25, r31
    569e:	08 95       	ret

000056a0 <strnlen>:
    56a0:	fc 01       	movw	r30, r24
    56a2:	61 50       	subi	r22, 0x01	; 1
    56a4:	70 40       	sbci	r23, 0x00	; 0
    56a6:	01 90       	ld	r0, Z+
    56a8:	01 10       	cpse	r0, r1
    56aa:	d8 f7       	brcc	.-10     	; 0x56a2 <strnlen+0x2>
    56ac:	80 95       	com	r24
    56ae:	90 95       	com	r25
    56b0:	8e 0f       	add	r24, r30
    56b2:	9f 1f       	adc	r25, r31
    56b4:	08 95       	ret

000056b6 <fputc>:
    56b6:	0f 93       	push	r16
    56b8:	1f 93       	push	r17
    56ba:	cf 93       	push	r28
    56bc:	df 93       	push	r29
    56be:	8c 01       	movw	r16, r24
    56c0:	eb 01       	movw	r28, r22
    56c2:	8b 81       	ldd	r24, Y+3	; 0x03
    56c4:	81 ff       	sbrs	r24, 1
    56c6:	1b c0       	rjmp	.+54     	; 0x56fe <fputc+0x48>
    56c8:	82 ff       	sbrs	r24, 2
    56ca:	0d c0       	rjmp	.+26     	; 0x56e6 <fputc+0x30>
    56cc:	2e 81       	ldd	r18, Y+6	; 0x06
    56ce:	3f 81       	ldd	r19, Y+7	; 0x07
    56d0:	8c 81       	ldd	r24, Y+4	; 0x04
    56d2:	9d 81       	ldd	r25, Y+5	; 0x05
    56d4:	28 17       	cp	r18, r24
    56d6:	39 07       	cpc	r19, r25
    56d8:	64 f4       	brge	.+24     	; 0x56f2 <fputc+0x3c>
    56da:	e8 81       	ld	r30, Y
    56dc:	f9 81       	ldd	r31, Y+1	; 0x01
    56de:	01 93       	st	Z+, r16
    56e0:	f9 83       	std	Y+1, r31	; 0x01
    56e2:	e8 83       	st	Y, r30
    56e4:	06 c0       	rjmp	.+12     	; 0x56f2 <fputc+0x3c>
    56e6:	e8 85       	ldd	r30, Y+8	; 0x08
    56e8:	f9 85       	ldd	r31, Y+9	; 0x09
    56ea:	80 2f       	mov	r24, r16
    56ec:	09 95       	icall
    56ee:	89 2b       	or	r24, r25
    56f0:	31 f4       	brne	.+12     	; 0x56fe <fputc+0x48>
    56f2:	8e 81       	ldd	r24, Y+6	; 0x06
    56f4:	9f 81       	ldd	r25, Y+7	; 0x07
    56f6:	01 96       	adiw	r24, 0x01	; 1
    56f8:	9f 83       	std	Y+7, r25	; 0x07
    56fa:	8e 83       	std	Y+6, r24	; 0x06
    56fc:	02 c0       	rjmp	.+4      	; 0x5702 <fputc+0x4c>
    56fe:	0f ef       	ldi	r16, 0xFF	; 255
    5700:	1f ef       	ldi	r17, 0xFF	; 255
    5702:	c8 01       	movw	r24, r16
    5704:	df 91       	pop	r29
    5706:	cf 91       	pop	r28
    5708:	1f 91       	pop	r17
    570a:	0f 91       	pop	r16
    570c:	08 95       	ret

0000570e <printf>:
    570e:	a0 e0       	ldi	r26, 0x00	; 0
    5710:	b0 e0       	ldi	r27, 0x00	; 0
    5712:	ec e8       	ldi	r30, 0x8C	; 140
    5714:	fb e2       	ldi	r31, 0x2B	; 43
    5716:	48 cd       	rjmp	.-1392   	; 0x51a8 <__prologue_saves__+0x20>
    5718:	fe 01       	movw	r30, r28
    571a:	35 96       	adiw	r30, 0x05	; 5
    571c:	61 91       	ld	r22, Z+
    571e:	71 91       	ld	r23, Z+
    5720:	80 91 a7 04 	lds	r24, 0x04A7
    5724:	90 91 a8 04 	lds	r25, 0x04A8
    5728:	af 01       	movw	r20, r30
    572a:	72 d9       	rcall	.-3356   	; 0x4a10 <vfprintf>
    572c:	20 96       	adiw	r28, 0x00	; 0
    572e:	e2 e0       	ldi	r30, 0x02	; 2
    5730:	57 cd       	rjmp	.-1362   	; 0x51e0 <__epilogue_restores__+0x20>

00005732 <puts>:
    5732:	0f 93       	push	r16
    5734:	1f 93       	push	r17
    5736:	cf 93       	push	r28
    5738:	df 93       	push	r29
    573a:	8c 01       	movw	r16, r24
    573c:	e0 91 a7 04 	lds	r30, 0x04A7
    5740:	f0 91 a8 04 	lds	r31, 0x04A8
    5744:	83 81       	ldd	r24, Z+3	; 0x03
    5746:	81 ff       	sbrs	r24, 1
    5748:	21 c0       	rjmp	.+66     	; 0x578c <puts+0x5a>
    574a:	c0 e0       	ldi	r28, 0x00	; 0
    574c:	d0 e0       	ldi	r29, 0x00	; 0
    574e:	0d c0       	rjmp	.+26     	; 0x576a <puts+0x38>
    5750:	e0 91 a7 04 	lds	r30, 0x04A7
    5754:	f0 91 a8 04 	lds	r31, 0x04A8
    5758:	20 85       	ldd	r18, Z+8	; 0x08
    575a:	31 85       	ldd	r19, Z+9	; 0x09
    575c:	bf 01       	movw	r22, r30
    575e:	f9 01       	movw	r30, r18
    5760:	09 95       	icall
    5762:	89 2b       	or	r24, r25
    5764:	11 f0       	breq	.+4      	; 0x576a <puts+0x38>
    5766:	cf ef       	ldi	r28, 0xFF	; 255
    5768:	df ef       	ldi	r29, 0xFF	; 255
    576a:	f8 01       	movw	r30, r16
    576c:	81 91       	ld	r24, Z+
    576e:	8f 01       	movw	r16, r30
    5770:	88 23       	and	r24, r24
    5772:	71 f7       	brne	.-36     	; 0x5750 <puts+0x1e>
    5774:	e0 91 a7 04 	lds	r30, 0x04A7
    5778:	f0 91 a8 04 	lds	r31, 0x04A8
    577c:	20 85       	ldd	r18, Z+8	; 0x08
    577e:	31 85       	ldd	r19, Z+9	; 0x09
    5780:	8a e0       	ldi	r24, 0x0A	; 10
    5782:	bf 01       	movw	r22, r30
    5784:	f9 01       	movw	r30, r18
    5786:	09 95       	icall
    5788:	89 2b       	or	r24, r25
    578a:	11 f0       	breq	.+4      	; 0x5790 <puts+0x5e>
    578c:	cf ef       	ldi	r28, 0xFF	; 255
    578e:	df ef       	ldi	r29, 0xFF	; 255
    5790:	ce 01       	movw	r24, r28
    5792:	df 91       	pop	r29
    5794:	cf 91       	pop	r28
    5796:	1f 91       	pop	r17
    5798:	0f 91       	pop	r16
    579a:	08 95       	ret

0000579c <__ultoa_invert>:
    579c:	fa 01       	movw	r30, r20
    579e:	aa 27       	eor	r26, r26
    57a0:	28 30       	cpi	r18, 0x08	; 8
    57a2:	51 f1       	breq	.+84     	; 0x57f8 <__ultoa_invert+0x5c>
    57a4:	20 31       	cpi	r18, 0x10	; 16
    57a6:	81 f1       	breq	.+96     	; 0x5808 <__ultoa_invert+0x6c>
    57a8:	e8 94       	clt
    57aa:	6f 93       	push	r22
    57ac:	6e 7f       	andi	r22, 0xFE	; 254
    57ae:	6e 5f       	subi	r22, 0xFE	; 254
    57b0:	7f 4f       	sbci	r23, 0xFF	; 255
    57b2:	8f 4f       	sbci	r24, 0xFF	; 255
    57b4:	9f 4f       	sbci	r25, 0xFF	; 255
    57b6:	af 4f       	sbci	r26, 0xFF	; 255
    57b8:	b1 e0       	ldi	r27, 0x01	; 1
    57ba:	3e d0       	rcall	.+124    	; 0x5838 <__ultoa_invert+0x9c>
    57bc:	b4 e0       	ldi	r27, 0x04	; 4
    57be:	3c d0       	rcall	.+120    	; 0x5838 <__ultoa_invert+0x9c>
    57c0:	67 0f       	add	r22, r23
    57c2:	78 1f       	adc	r23, r24
    57c4:	89 1f       	adc	r24, r25
    57c6:	9a 1f       	adc	r25, r26
    57c8:	a1 1d       	adc	r26, r1
    57ca:	68 0f       	add	r22, r24
    57cc:	79 1f       	adc	r23, r25
    57ce:	8a 1f       	adc	r24, r26
    57d0:	91 1d       	adc	r25, r1
    57d2:	a1 1d       	adc	r26, r1
    57d4:	6a 0f       	add	r22, r26
    57d6:	71 1d       	adc	r23, r1
    57d8:	81 1d       	adc	r24, r1
    57da:	91 1d       	adc	r25, r1
    57dc:	a1 1d       	adc	r26, r1
    57de:	20 d0       	rcall	.+64     	; 0x5820 <__ultoa_invert+0x84>
    57e0:	09 f4       	brne	.+2      	; 0x57e4 <__ultoa_invert+0x48>
    57e2:	68 94       	set
    57e4:	3f 91       	pop	r19
    57e6:	2a e0       	ldi	r18, 0x0A	; 10
    57e8:	26 9f       	mul	r18, r22
    57ea:	11 24       	eor	r1, r1
    57ec:	30 19       	sub	r19, r0
    57ee:	30 5d       	subi	r19, 0xD0	; 208
    57f0:	31 93       	st	Z+, r19
    57f2:	de f6       	brtc	.-74     	; 0x57aa <__ultoa_invert+0xe>
    57f4:	cf 01       	movw	r24, r30
    57f6:	08 95       	ret
    57f8:	46 2f       	mov	r20, r22
    57fa:	47 70       	andi	r20, 0x07	; 7
    57fc:	40 5d       	subi	r20, 0xD0	; 208
    57fe:	41 93       	st	Z+, r20
    5800:	b3 e0       	ldi	r27, 0x03	; 3
    5802:	0f d0       	rcall	.+30     	; 0x5822 <__ultoa_invert+0x86>
    5804:	c9 f7       	brne	.-14     	; 0x57f8 <__ultoa_invert+0x5c>
    5806:	f6 cf       	rjmp	.-20     	; 0x57f4 <__ultoa_invert+0x58>
    5808:	46 2f       	mov	r20, r22
    580a:	4f 70       	andi	r20, 0x0F	; 15
    580c:	40 5d       	subi	r20, 0xD0	; 208
    580e:	4a 33       	cpi	r20, 0x3A	; 58
    5810:	18 f0       	brcs	.+6      	; 0x5818 <__ultoa_invert+0x7c>
    5812:	49 5d       	subi	r20, 0xD9	; 217
    5814:	31 fd       	sbrc	r19, 1
    5816:	40 52       	subi	r20, 0x20	; 32
    5818:	41 93       	st	Z+, r20
    581a:	02 d0       	rcall	.+4      	; 0x5820 <__ultoa_invert+0x84>
    581c:	a9 f7       	brne	.-22     	; 0x5808 <__ultoa_invert+0x6c>
    581e:	ea cf       	rjmp	.-44     	; 0x57f4 <__ultoa_invert+0x58>
    5820:	b4 e0       	ldi	r27, 0x04	; 4
    5822:	a6 95       	lsr	r26
    5824:	97 95       	ror	r25
    5826:	87 95       	ror	r24
    5828:	77 95       	ror	r23
    582a:	67 95       	ror	r22
    582c:	ba 95       	dec	r27
    582e:	c9 f7       	brne	.-14     	; 0x5822 <__ultoa_invert+0x86>
    5830:	00 97       	sbiw	r24, 0x00	; 0
    5832:	61 05       	cpc	r22, r1
    5834:	71 05       	cpc	r23, r1
    5836:	08 95       	ret
    5838:	9b 01       	movw	r18, r22
    583a:	ac 01       	movw	r20, r24
    583c:	0a 2e       	mov	r0, r26
    583e:	06 94       	lsr	r0
    5840:	57 95       	ror	r21
    5842:	47 95       	ror	r20
    5844:	37 95       	ror	r19
    5846:	27 95       	ror	r18
    5848:	ba 95       	dec	r27
    584a:	c9 f7       	brne	.-14     	; 0x583e <__ultoa_invert+0xa2>
    584c:	62 0f       	add	r22, r18
    584e:	73 1f       	adc	r23, r19
    5850:	84 1f       	adc	r24, r20
    5852:	95 1f       	adc	r25, r21
    5854:	a0 1d       	adc	r26, r0
    5856:	08 95       	ret

00005858 <__divmodsi4>:
    5858:	97 fb       	bst	r25, 7
    585a:	09 2e       	mov	r0, r25
    585c:	05 26       	eor	r0, r21
    585e:	0e d0       	rcall	.+28     	; 0x587c <__divmodsi4_neg1>
    5860:	57 fd       	sbrc	r21, 7
    5862:	04 d0       	rcall	.+8      	; 0x586c <__divmodsi4_neg2>
    5864:	6f dc       	rcall	.-1826   	; 0x5144 <__udivmodsi4>
    5866:	0a d0       	rcall	.+20     	; 0x587c <__divmodsi4_neg1>
    5868:	00 1c       	adc	r0, r0
    586a:	38 f4       	brcc	.+14     	; 0x587a <__divmodsi4_exit>

0000586c <__divmodsi4_neg2>:
    586c:	50 95       	com	r21
    586e:	40 95       	com	r20
    5870:	30 95       	com	r19
    5872:	21 95       	neg	r18
    5874:	3f 4f       	sbci	r19, 0xFF	; 255
    5876:	4f 4f       	sbci	r20, 0xFF	; 255
    5878:	5f 4f       	sbci	r21, 0xFF	; 255

0000587a <__divmodsi4_exit>:
    587a:	08 95       	ret

0000587c <__divmodsi4_neg1>:
    587c:	f6 f7       	brtc	.-4      	; 0x587a <__divmodsi4_exit>
    587e:	90 95       	com	r25
    5880:	80 95       	com	r24
    5882:	70 95       	com	r23
    5884:	61 95       	neg	r22
    5886:	7f 4f       	sbci	r23, 0xFF	; 255
    5888:	8f 4f       	sbci	r24, 0xFF	; 255
    588a:	9f 4f       	sbci	r25, 0xFF	; 255
    588c:	08 95       	ret

0000588e <_exit>:
    588e:	f8 94       	cli

00005890 <__stop_program>:
    5890:	ff cf       	rjmp	.-2      	; 0x5890 <__stop_program>
