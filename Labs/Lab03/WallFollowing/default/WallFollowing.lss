
WallFollowing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000102  00800100  000054cc  00005560  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000054cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002f7  00800202  00800202  00005662  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  00005662  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000287  00000000  00000000  000056a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e60  00000000  00000000  00005929  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002bd  00000000  00000000  00006789  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ba0  00000000  00000000  00006a46  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c0  00000000  00000000  000075e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000009c8  00000000  00000000  000077a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000095d  00000000  00000000  00008170  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 31 03 	jmp	0x662	; 0x662 <__ctors_end>
       4:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       8:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      10:	0c 94 05 16 	jmp	0x2c0a	; 0x2c0a <__vector_4>
      14:	0c 94 2e 16 	jmp	0x2c5c	; 0x2c5c <__vector_5>
      18:	0c 94 57 16 	jmp	0x2cae	; 0x2cae <__vector_6>
      1c:	0c 94 80 16 	jmp	0x2d00	; 0x2d00 <__vector_7>
      20:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      24:	0c 94 e6 14 	jmp	0x29cc	; 0x29cc <__vector_9>
      28:	0c 94 0f 15 	jmp	0x2a1e	; 0x2a1e <__vector_10>
      2c:	0c 94 38 15 	jmp	0x2a70	; 0x2a70 <__vector_11>
      30:	0c 94 b3 15 	jmp	0x2b66	; 0x2b66 <__vector_12>
      34:	0c 94 61 15 	jmp	0x2ac2	; 0x2ac2 <__vector_13>
      38:	0c 94 8a 15 	jmp	0x2b14	; 0x2b14 <__vector_14>
      3c:	0c 94 dc 15 	jmp	0x2bb8	; 0x2bb8 <__vector_15>
      40:	0c 94 6b 14 	jmp	0x28d6	; 0x28d6 <__vector_16>
      44:	0c 94 94 14 	jmp	0x2928	; 0x2928 <__vector_17>
      48:	0c 94 bd 14 	jmp	0x297a	; 0x297a <__vector_18>
      4c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      50:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      54:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      58:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      5c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      60:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      64:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      68:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      6c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      70:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      74:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      78:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      7c:	01 12       	cpse	r0, r17
      7e:	04 12       	cpse	r0, r20
      80:	07 12       	cpse	r0, r23
      82:	0a 12       	cpse	r0, r26
      84:	13 12       	cpse	r1, r19
      86:	0d 12       	cpse	r0, r29
      88:	10 12       	cpse	r1, r16
      8a:	16 12       	cpse	r1, r22
      8c:	19 12       	cpse	r1, r25
      8e:	1c 12       	cpse	r1, r28
      90:	1f 12       	cpse	r1, r31
      92:	22 12       	cpse	r2, r18
      94:	25 12       	cpse	r2, r21
      96:	28 12       	cpse	r2, r24
      98:	2b 12       	cpse	r2, r27
      9a:	2e 12       	cpse	r2, r30
      9c:	31 12       	cpse	r3, r17
      9e:	34 12       	cpse	r3, r20
      a0:	37 12       	cpse	r3, r23
      a2:	48 12       	cpse	r4, r24
      a4:	4b 12       	cpse	r4, r27
      a6:	4e 12       	cpse	r4, r30
      a8:	51 12       	cpse	r5, r17
      aa:	5a 12       	cpse	r5, r26
      ac:	54 12       	cpse	r5, r20
      ae:	57 12       	cpse	r5, r23
      b0:	5d 12       	cpse	r5, r29
      b2:	60 12       	cpse	r6, r16
      b4:	63 12       	cpse	r6, r19
      b6:	66 12       	cpse	r6, r22
      b8:	69 12       	cpse	r6, r25
      ba:	6c 12       	cpse	r6, r28
      bc:	6f 12       	cpse	r6, r31
      be:	72 12       	cpse	r7, r18
      c0:	75 12       	cpse	r7, r21
      c2:	78 12       	cpse	r7, r24
      c4:	7b 12       	cpse	r7, r27
      c6:	7e 12       	cpse	r7, r30
      c8:	07 63       	ori	r16, 0x37	; 55
      ca:	42 36       	cpi	r20, 0x62	; 98
      cc:	b7 9b       	sbis	0x16, 7	; 22
      ce:	d8 a7       	std	Y+40, r29	; 0x28
      d0:	1a 39       	cpi	r17, 0x9A	; 154
      d2:	68 56       	subi	r22, 0x68	; 104
      d4:	18 ae       	std	Y+56, r1	; 0x38
      d6:	ba ab       	std	Y+50, r27	; 0x32
      d8:	55 8c       	ldd	r5, Z+29	; 0x1d
      da:	1d 3c       	cpi	r17, 0xCD	; 205
      dc:	b7 cc       	rjmp	.-1682   	; 0xfffffa4c <__eeprom_end+0xff7efa4c>
      de:	57 63       	ori	r21, 0x37	; 55
      e0:	bd 6d       	ori	r27, 0xDD	; 221
      e2:	ed fd       	.word	0xfded	; ????
      e4:	75 3e       	cpi	r23, 0xE5	; 229
      e6:	f6 17       	cp	r31, r22
      e8:	72 31       	cpi	r23, 0x12	; 18
      ea:	bf 00       	.word	0x00bf	; ????
      ec:	00 00       	nop
      ee:	80 3f       	cpi	r24, 0xF0	; 240
      f0:	08 00       	.word	0x0008	; ????
      f2:	00 00       	nop
      f4:	be 92       	st	-X, r11
      f6:	24 49       	sbci	r18, 0x94	; 148
      f8:	12 3e       	cpi	r17, 0xE2	; 226
      fa:	ab aa       	std	Y+51, r10	; 0x33
      fc:	aa 2a       	or	r10, r26
      fe:	be cd       	rjmp	.-1156   	; 0xfffffc7c <__eeprom_end+0xff7efc7c>
     100:	cc cc       	rjmp	.-1640   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     102:	4c 3e       	cpi	r20, 0xEC	; 236
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	be ab       	std	Y+54, r27	; 0x36
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	aa 3e       	cpi	r26, 0xEA	; 234
     10e:	00 00       	nop
     110:	00 00       	nop
     112:	bf 00       	.word	0x00bf	; ????
     114:	00 00       	nop
     116:	80 3f       	cpi	r24, 0xF0	; 240
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	00 08       	sbc	r0, r0
     11e:	41 78       	andi	r20, 0x81	; 129
     120:	d3 bb       	out	0x13, r29	; 19
     122:	43 87       	std	Z+11, r20	; 0x0b
     124:	d1 13       	cpse	r29, r17
     126:	3d 19       	sub	r19, r13
     128:	0e 3c       	cpi	r16, 0xCE	; 206
     12a:	c3 bd       	out	0x23, r28	; 35
     12c:	42 82       	std	Z+2, r4	; 0x02
     12e:	ad 2b       	or	r26, r29
     130:	3e 68       	ori	r19, 0x8E	; 142
     132:	ec 82       	std	Y+4, r14	; 0x04
     134:	76 be       	out	0x36, r7	; 54
     136:	d9 8f       	std	Y+25, r29	; 0x19
     138:	e1 a9       	ldd	r30, Z+49	; 0x31
     13a:	3e 4c       	sbci	r19, 0xCE	; 206
     13c:	80 ef       	ldi	r24, 0xF0	; 240
     13e:	ff be       	out	0x3f, r15	; 63
     140:	01 c4       	rjmp	.+2050   	; 0x944 <check_threshhold+0x14>
     142:	ff 7f       	andi	r31, 0xFF	; 255
     144:	3f 00       	.word	0x003f	; ????
     146:	00 00       	nop
	...

0000014a <char_bitmap>:
     14a:	16 05 01 00 00 00 00 00 00 00 fa 00 00 00 e0 00     ................
     15a:	e0 00 28 fe 28 fe 28 24 54 fe 54 48 c4 c8 10 26     ..(.(.($T.TH...&
     16a:	46 6c 92 aa 44 a0 00 a0 c0 00 00 00 38 44 82 00     Fl..D.......8D..
     17a:	00 82 44 38 00 28 10 7c 10 28 10 10 7c 10 10 00     ..D8.(.|.(..|...
     18a:	0a 0c 00 00 10 10 10 10 10 00 06 06 00 00 04 08     ................
     19a:	10 20 40 7c 8a 92 a2 7c 00 42 fe 02 00 42 86 8a     . @|...|.B...B..
     1aa:	92 62 84 82 a2 d2 8c 18 28 48 fe 08 e4 a2 a2 a2     .b......(H......
     1ba:	9c 3c 52 92 92 0c 80 8e 90 a0 c0 6c 92 92 92 6c     .<R........l...l
     1ca:	60 92 92 94 78 00 6c 6c 00 00 00 6a 6c 00 00 10     `...x.ll...jl...
     1da:	28 44 82 00 28 28 28 28 28 00 82 44 28 10 40 80     (D..(((((..D(.@.
     1ea:	8a 90 60 4c 92 9e 82 7c 7e 88 88 88 7e fe 92 92     ..`L...|~...~...
     1fa:	92 6c 7c 82 82 82 44 fe 82 82 44 38 fe 92 92 92     .l|...D...D8....
     20a:	82 fe 90 90 90 80 7c 82 92 92 5e fe 10 10 10 fe     ......|...^.....
     21a:	00 82 fe 82 00 04 02 82 fc 80 fe 10 28 44 82 fe     ............(D..
     22a:	02 02 02 02 fe 40 30 40 fe fe 20 10 08 fe 7c 82     .....@0@.. ...|.
     23a:	82 82 7c fe 90 90 90 60 7c 82 8a 84 7a fe 90 98     ..|....`|...z...
     24a:	94 62 62 92 92 92 8c 80 80 fe 80 80 fc 02 02 02     .bb.............
     25a:	fc f8 04 02 04 f8 fc 02 1c 02 fc c6 28 10 28 c6     ............(.(.
     26a:	e0 10 0e 10 e0 86 8a 92 a2 c2 00 fe 82 82 00 40     ...............@
     27a:	20 10 08 04 00 82 82 fe 00 20 40 80 40 20 02 02      ........ @.@ ..
     28a:	02 02 02 00 80 40 20 00 04 2a 2a 2a 1e fe 12 22     .....@ ..***..."
     29a:	22 1c 1c 22 22 22 04 1c 22 22 12 fe 1c 2a 2a 2a     ".."""..""...***
     2aa:	18 10 7e 90 80 40 30 4a 4a 4a 7c fe 10 20 20 1e     ..~..@0JJJ|..  .
     2ba:	00 22 be 02 00 04 02 22 bc 00 fe 08 14 22 00 00     ."....."....."..
     2ca:	82 fe 02 00 3e 20 18 20 1e 3e 10 20 20 1e 1c 22     ....> . .>.  .."
     2da:	22 22 1c 3e 28 28 28 10 10 28 28 18 3e 3e 10 20     "".>(((..((.>>. 
     2ea:	20 10 12 2a 2a 2a 04 20 fc 22 02 04 3c 02 02 04      ..***. ."..<...
     2fa:	3e 38 04 02 04 38 3c 02 0c 02 3c 22 14 08 14 22     >8...8<...<"..."
     30a:	30 0a 0a 0a 3c 22 26 2a 32 22 00 10 6c 82 00 00     0...<"&*2"..l...
     31a:	00 fe 00 00 00 82 6c 10 00 08 10 10 08 10 00 00     ......l.........
     32a:	00 00 00 7f 81 81 81 7f 7f 83 83 83 7f 7f 87 87     ................
     33a:	87 7f 7f 8f 8f 8f 7f 7f 9f 9f 9f 7f 7f bf bf bf     ................
     34a:	7f 7f ff ff ff 7f 20 40 ff 40 20 62 15 17 15 65     ...... @.@ b...e
     35a:	00 fb fb 00 00                                      .....

0000035f <CEENBoT_Inc_logo_bitmap>:
     35f:	00 00 00 00 00 c0 ff 03 00 e0 ff 07 00 f0 ff 0f     ................
     36f:	00 f8 ff 1f 00 78 00 1e 00 78 00 1e 00 78 00 1e     .....x...x...x..
     37f:	00 78 00 1e 00 78 00 1e 00 78 00 1e 00 78 00 1e     .x...x...x...x..
     38f:	00 78 00 1e 00 78 00 1e 00 00 00 00 00 00 00 00     .x...x..........
     39f:	00 80 ff 03 00 e0 ff 07 00 f0 ff 0f 00 f8 ff 1f     ................
     3af:	00 f8 3c 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     ..<..x<..x<..x<.
     3bf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     3cf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     3df:	00 00 00 00 00 e0 ff 03 00 f0 ff 07 00 f8 ff 0f     ................
     3ef:	00 f8 ff 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .....x<..x<..x<.
     3ff:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     40f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     41f:	00 00 00 00 00 f8 ff 03 00 f8 ff 0f 00 f8 ff 1f     ................
     42f:	00 f8 ff 1f 00 00 00 1e 00 00 00 1e 00 00 80 1f     ................
     43f:	00 00 f0 1f 00 00 ff 0f 00 e0 ff 07 00 f0 ff 00     ................
     44f:	00 f8 0f 00 00 f8 00 00 00 78 00 00 00 78 00 00     .........x...x..
     45f:	00 f8 ff 1f 00 f8 ff 1f 00 f0 ff 1f 00 e0 ff 1f     ................
	...
     477:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     487:	00 78 00 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x...x<..x<..x<.
     497:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 f8 7e 1f     .x<..x<..x<...~.
     4a7:	00 f8 ff 1f 00 f0 ff 0f 00 e0 e7 03 00 00 00 00     ................
     4b7:	00 00 00 38 00 ee ff 6c 00 2a 80 45 00 3a 00 47     ...8...l.*.E.:.G
     4c7:	fc 03 ff 6c fc 83 ff 39 00 de ff 0b 7c d0 81 0b     ...l...9....|...
     4d7:	fc d0 81 0b c0 d0 81 0b fc d0 81 0b 7c de ff 0b     ............|...
     4e7:	00 82 ff 39 70 02 ff 6c f8 3a 00 47 dc 2a 80 45     ...9p..l.:.G.*.E
     4f7:	cc ee ff 6c cc 00 00 38 00 00 00 00 0c 00 00 1e     ...l...8........
     507:	0c 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     517:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     527:	00 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     537:	00 00 00 5e 00 00 00 40 00 00 00 7c 00 00 00 40     ...^...@...|...@
     547:	00 00 00 40 00 00 00 7c 00 00 00 30 00 00 00 10     ...@...|...0....
     557:	00 00 00 30 00 00 00 7c                             ...0...|

0000055f <__c.1790>:
     55f:	6e 61 6e 00                                         nan.

00000563 <__c.1788>:
     563:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     573:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     583:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     593:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     5a3:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     5b3:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     5c3:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     5d3:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     5e3:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     5f3:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     603:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     613:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     623:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     633:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     643:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     653:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

00000662 <__ctors_end>:
     662:	11 24       	eor	r1, r1
     664:	1f be       	out	0x3f, r1	; 63
     666:	cf ef       	ldi	r28, 0xFF	; 255
     668:	d8 e0       	ldi	r29, 0x08	; 8
     66a:	de bf       	out	0x3e, r29	; 62
     66c:	cd bf       	out	0x3d, r28	; 61

0000066e <__do_copy_data>:
     66e:	12 e0       	ldi	r17, 0x02	; 2
     670:	a0 e0       	ldi	r26, 0x00	; 0
     672:	b1 e0       	ldi	r27, 0x01	; 1
     674:	ec ec       	ldi	r30, 0xCC	; 204
     676:	f4 e5       	ldi	r31, 0x54	; 84
     678:	02 c0       	rjmp	.+4      	; 0x67e <.do_copy_data_start>

0000067a <.do_copy_data_loop>:
     67a:	05 90       	lpm	r0, Z+
     67c:	0d 92       	st	X+, r0

0000067e <.do_copy_data_start>:
     67e:	a2 30       	cpi	r26, 0x02	; 2
     680:	b1 07       	cpc	r27, r17
     682:	d9 f7       	brne	.-10     	; 0x67a <.do_copy_data_loop>

00000684 <__do_clear_bss>:
     684:	14 e0       	ldi	r17, 0x04	; 4
     686:	a2 e0       	ldi	r26, 0x02	; 2
     688:	b2 e0       	ldi	r27, 0x02	; 2
     68a:	01 c0       	rjmp	.+2      	; 0x68e <.do_clear_bss_start>

0000068c <.do_clear_bss_loop>:
     68c:	1d 92       	st	X+, r1

0000068e <.do_clear_bss_start>:
     68e:	a9 3f       	cpi	r26, 0xF9	; 249
     690:	b1 07       	cpc	r27, r17
     692:	e1 f7       	brne	.-8      	; 0x68c <.do_clear_bss_loop>
     694:	0e 94 ab 0c 	call	0x1956	; 0x1956 <main>
     698:	0c 94 64 2a 	jmp	0x54c8	; 0x54c8 <_exit>

0000069c <__bad_interrupt>:
     69c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006a0 <prefilter>:
* Input Variables:	char reset
* Output Return:	void
* Overview:			This appies a prefilter to the IR data
********************************************************************/
void prefilter(char reset)
{	
     6a0:	6f 92       	push	r6
     6a2:	7f 92       	push	r7
     6a4:	8f 92       	push	r8
     6a6:	9f 92       	push	r9
     6a8:	af 92       	push	r10
     6aa:	bf 92       	push	r11
     6ac:	cf 92       	push	r12
     6ae:	df 92       	push	r13
     6b0:	ef 92       	push	r14
     6b2:	ff 92       	push	r15
     6b4:	0f 93       	push	r16
     6b6:	1f 93       	push	r17
     6b8:	cf 93       	push	r28
     6ba:	df 93       	push	r29
	int i;
	if(reset)
     6bc:	88 23       	and	r24, r24
     6be:	49 f4       	brne	.+18     	; 0x6d2 <prefilter+0x32>
     6c0:	e1 e0       	ldi	r30, 0x01	; 1
     6c2:	f3 e0       	ldi	r31, 0x03	; 3
     6c4:	4d e6       	ldi	r20, 0x6D	; 109
     6c6:	54 e0       	ldi	r21, 0x04	; 4
     6c8:	23 ef       	ldi	r18, 0xF3	; 243
     6ca:	33 e0       	ldi	r19, 0x03	; 3
     6cc:	c9 e7       	ldi	r28, 0x79	; 121
     6ce:	d3 e0       	ldi	r29, 0x03	; 3
     6d0:	43 c0       	rjmp	.+134    	; 0x758 <prefilter+0xb8>
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     6d2:	60 90 0a 02 	lds	r6, 0x020A
     6d6:	70 90 0b 02 	lds	r7, 0x020B
     6da:	80 90 0c 02 	lds	r8, 0x020C
     6de:	90 90 0d 02 	lds	r9, 0x020D
			rtIR_old[i] = rtIR;
     6e2:	a0 90 0e 02 	lds	r10, 0x020E
     6e6:	b0 90 0f 02 	lds	r11, 0x020F
     6ea:	c0 90 10 02 	lds	r12, 0x0210
     6ee:	d0 90 11 02 	lds	r13, 0x0211
			ftIR_old[i] = ftIR;
     6f2:	e0 90 12 02 	lds	r14, 0x0212
     6f6:	f0 90 13 02 	lds	r15, 0x0213
     6fa:	00 91 14 02 	lds	r16, 0x0214
     6fe:	10 91 15 02 	lds	r17, 0x0215
			bkIR_old[i] = bkIR;
     702:	20 91 16 02 	lds	r18, 0x0216
     706:	30 91 17 02 	lds	r19, 0x0217
     70a:	40 91 18 02 	lds	r20, 0x0218
     70e:	50 91 19 02 	lds	r21, 0x0219
     712:	80 e0       	ldi	r24, 0x00	; 0
     714:	90 e0       	ldi	r25, 0x00	; 0
	int i;
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     716:	fc 01       	movw	r30, r24
     718:	ef 56       	subi	r30, 0x6F	; 111
     71a:	fd 4f       	sbci	r31, 0xFD	; 253
     71c:	60 82       	st	Z, r6
     71e:	71 82       	std	Z+1, r7	; 0x01
     720:	82 82       	std	Z+2, r8	; 0x02
     722:	93 82       	std	Z+3, r9	; 0x03
			rtIR_old[i] = rtIR;
     724:	fc 01       	movw	r30, r24
     726:	e3 50       	subi	r30, 0x03	; 3
     728:	fc 4f       	sbci	r31, 0xFC	; 252
     72a:	a0 82       	st	Z, r10
     72c:	b1 82       	std	Z+1, r11	; 0x01
     72e:	c2 82       	std	Z+2, r12	; 0x02
     730:	d3 82       	std	Z+3, r13	; 0x03
			ftIR_old[i] = ftIR;
     732:	fc 01       	movw	r30, r24
     734:	ed 57       	subi	r30, 0x7D	; 125
     736:	fc 4f       	sbci	r31, 0xFC	; 252
     738:	e0 82       	st	Z, r14
     73a:	f1 82       	std	Z+1, r15	; 0x01
     73c:	02 83       	std	Z+2, r16	; 0x02
     73e:	13 83       	std	Z+3, r17	; 0x03
			bkIR_old[i] = bkIR;
     740:	fc 01       	movw	r30, r24
     742:	e7 5f       	subi	r30, 0xF7	; 247
     744:	fc 4f       	sbci	r31, 0xFC	; 252
     746:	20 83       	st	Z, r18
     748:	31 83       	std	Z+1, r19	; 0x01
     74a:	42 83       	std	Z+2, r20	; 0x02
     74c:	53 83       	std	Z+3, r21	; 0x03
     74e:	04 96       	adiw	r24, 0x04	; 4
void prefilter(char reset)
{	
	int i;
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
     750:	88 37       	cpi	r24, 0x78	; 120
     752:	91 05       	cpc	r25, r1
     754:	01 f7       	brne	.-64     	; 0x716 <prefilter+0x76>
     756:	b4 cf       	rjmp	.-152    	; 0x6c0 <prefilter+0x20>
	float bkIR_new = 0;
	
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
	{
		j = i - 1;
		ltIR_old[i] = ltIR_old[j];
     758:	80 81       	ld	r24, Z
     75a:	91 81       	ldd	r25, Z+1	; 0x01
     75c:	a2 81       	ldd	r26, Z+2	; 0x02
     75e:	b3 81       	ldd	r27, Z+3	; 0x03
     760:	84 83       	std	Z+4, r24	; 0x04
     762:	95 83       	std	Z+5, r25	; 0x05
     764:	a6 83       	std	Z+6, r26	; 0x06
     766:	b7 83       	std	Z+7, r27	; 0x07
		rtIR_old[i] = rtIR_old[j];
     768:	da 01       	movw	r26, r20
     76a:	ed 90       	ld	r14, X+
     76c:	fd 90       	ld	r15, X+
     76e:	0d 91       	ld	r16, X+
     770:	1c 91       	ld	r17, X
     772:	13 97       	sbiw	r26, 0x03	; 3
     774:	14 96       	adiw	r26, 0x04	; 4
     776:	ed 92       	st	X+, r14
     778:	fd 92       	st	X+, r15
     77a:	0d 93       	st	X+, r16
     77c:	1c 93       	st	X, r17
     77e:	17 97       	sbiw	r26, 0x07	; 7
		ftIR_old[i] = ftIR_old[j];
     780:	d9 01       	movw	r26, r18
     782:	ed 90       	ld	r14, X+
     784:	fd 90       	ld	r15, X+
     786:	0d 91       	ld	r16, X+
     788:	1c 91       	ld	r17, X
     78a:	13 97       	sbiw	r26, 0x03	; 3
     78c:	14 96       	adiw	r26, 0x04	; 4
     78e:	ed 92       	st	X+, r14
     790:	fd 92       	st	X+, r15
     792:	0d 93       	st	X+, r16
     794:	1c 93       	st	X, r17
     796:	17 97       	sbiw	r26, 0x07	; 7
		bkIR_old[i] = bkIR_old[j];
     798:	88 81       	ld	r24, Y
     79a:	99 81       	ldd	r25, Y+1	; 0x01
     79c:	aa 81       	ldd	r26, Y+2	; 0x02
     79e:	bb 81       	ldd	r27, Y+3	; 0x03
     7a0:	8c 83       	std	Y+4, r24	; 0x04
     7a2:	9d 83       	std	Y+5, r25	; 0x05
     7a4:	ae 83       	std	Y+6, r26	; 0x06
     7a6:	bf 83       	std	Y+7, r27	; 0x07
     7a8:	34 97       	sbiw	r30, 0x04	; 4
     7aa:	44 50       	subi	r20, 0x04	; 4
     7ac:	50 40       	sbci	r21, 0x00	; 0
     7ae:	24 50       	subi	r18, 0x04	; 4
     7b0:	30 40       	sbci	r19, 0x00	; 0
     7b2:	24 97       	sbiw	r28, 0x04	; 4
	float ltIR_new = 0;
	float rtIR_new = 0;
	float ftIR_new = 0;
	float bkIR_new = 0;
	
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
     7b4:	b2 e0       	ldi	r27, 0x02	; 2
     7b6:	e9 38       	cpi	r30, 0x89	; 137
     7b8:	fb 07       	cpc	r31, r27
     7ba:	71 f6       	brne	.-100    	; 0x758 <prefilter+0xb8>
		rtIR_new += rtIR_old[i];
		ftIR_new += ftIR_old[i];
		bkIR_new += bkIR_old[i];
	}
	
	ltIR_old[0] = ltIR;
     7bc:	80 91 0a 02 	lds	r24, 0x020A
     7c0:	90 91 0b 02 	lds	r25, 0x020B
     7c4:	a0 91 0c 02 	lds	r26, 0x020C
     7c8:	b0 91 0d 02 	lds	r27, 0x020D
     7cc:	80 87       	std	Z+8, r24	; 0x08
     7ce:	91 87       	std	Z+9, r25	; 0x09
     7d0:	a2 87       	std	Z+10, r26	; 0x0a
     7d2:	b3 87       	std	Z+11, r27	; 0x0b
	rtIR_old[0] = rtIR;
     7d4:	80 91 0e 02 	lds	r24, 0x020E
     7d8:	90 91 0f 02 	lds	r25, 0x020F
     7dc:	a0 91 10 02 	lds	r26, 0x0210
     7e0:	b0 91 11 02 	lds	r27, 0x0211
     7e4:	80 93 fd 03 	sts	0x03FD, r24
     7e8:	90 93 fe 03 	sts	0x03FE, r25
     7ec:	a0 93 ff 03 	sts	0x03FF, r26
     7f0:	b0 93 00 04 	sts	0x0400, r27
	ftIR_old[0] = ftIR;
     7f4:	80 91 12 02 	lds	r24, 0x0212
     7f8:	90 91 13 02 	lds	r25, 0x0213
     7fc:	a0 91 14 02 	lds	r26, 0x0214
     800:	b0 91 15 02 	lds	r27, 0x0215
     804:	80 93 83 03 	sts	0x0383, r24
     808:	90 93 84 03 	sts	0x0384, r25
     80c:	a0 93 85 03 	sts	0x0385, r26
     810:	b0 93 86 03 	sts	0x0386, r27
	bkIR_old[0] = bkIR;
     814:	80 91 16 02 	lds	r24, 0x0216
     818:	90 91 17 02 	lds	r25, 0x0217
     81c:	a0 91 18 02 	lds	r26, 0x0218
     820:	b0 91 19 02 	lds	r27, 0x0219
     824:	80 93 09 03 	sts	0x0309, r24
     828:	90 93 0a 03 	sts	0x030A, r25
     82c:	a0 93 0b 03 	sts	0x030B, r26
     830:	b0 93 0c 03 	sts	0x030C, r27
	
	// ltIR = ltIR_new/PREFILTER_SIZE;
	// rtIR = rtIR_new/PREFILTER_SIZE;
	// ftIR = ftIR_new/PREFILTER_SIZE;
	// bkIR = bkIR_new/PREFILTER_SIZE;
}
     834:	df 91       	pop	r29
     836:	cf 91       	pop	r28
     838:	1f 91       	pop	r17
     83a:	0f 91       	pop	r16
     83c:	ff 90       	pop	r15
     83e:	ef 90       	pop	r14
     840:	df 90       	pop	r13
     842:	cf 90       	pop	r12
     844:	bf 90       	pop	r11
     846:	af 90       	pop	r10
     848:	9f 90       	pop	r9
     84a:	8f 90       	pop	r8
     84c:	7f 90       	pop	r7
     84e:	6f 90       	pop	r6
     850:	08 95       	ret

00000852 <pidController>:
* Input Variables:	float error, char reset
* Output Return:	float
* Overview:			This computes the control effort
********************************************************************/
float pidController(float error, char reset )
{	
     852:	6f 92       	push	r6
     854:	7f 92       	push	r7
     856:	8f 92       	push	r8
     858:	9f 92       	push	r9
     85a:	af 92       	push	r10
     85c:	bf 92       	push	r11
     85e:	cf 92       	push	r12
     860:	df 92       	push	r13
     862:	ef 92       	push	r14
     864:	ff 92       	push	r15
     866:	0f 93       	push	r16
     868:	1f 93       	push	r17
     86a:	3b 01       	movw	r6, r22
     86c:	4c 01       	movw	r8, r24
	if(reset){
     86e:	44 23       	and	r20, r20
     870:	61 f0       	breq	.+24     	; 0x88a <pidController+0x38>
		Ierror = 0;
     872:	80 e0       	ldi	r24, 0x00	; 0
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	a0 e0       	ldi	r26, 0x00	; 0
     878:	b0 e0       	ldi	r27, 0x00	; 0
     87a:	80 93 02 02 	sts	0x0202, r24
     87e:	90 93 03 02 	sts	0x0203, r25
     882:	a0 93 04 02 	sts	0x0204, r26
     886:	b0 93 05 02 	sts	0x0205, r27
	}
	Ierror += error;
     88a:	c4 01       	movw	r24, r8
     88c:	b3 01       	movw	r22, r6
     88e:	20 91 02 02 	lds	r18, 0x0202
     892:	30 91 03 02 	lds	r19, 0x0203
     896:	40 91 04 02 	lds	r20, 0x0204
     89a:	50 91 05 02 	lds	r21, 0x0205
     89e:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <__addsf3>
     8a2:	5b 01       	movw	r10, r22
     8a4:	6c 01       	movw	r12, r24
     8a6:	60 93 02 02 	sts	0x0202, r22
     8aa:	70 93 03 02 	sts	0x0203, r23
     8ae:	80 93 04 02 	sts	0x0204, r24
     8b2:	90 93 05 02 	sts	0x0205, r25
     8b6:	c4 01       	movw	r24, r8
     8b8:	b3 01       	movw	r22, r6
     8ba:	a4 01       	movw	r20, r8
     8bc:	93 01       	movw	r18, r6
     8be:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <__addsf3>
     8c2:	7b 01       	movw	r14, r22
     8c4:	8c 01       	movw	r16, r24
     8c6:	c4 01       	movw	r24, r8
     8c8:	b3 01       	movw	r22, r6
     8ca:	20 91 06 02 	lds	r18, 0x0206
     8ce:	30 91 07 02 	lds	r19, 0x0207
     8d2:	40 91 08 02 	lds	r20, 0x0208
     8d6:	50 91 09 02 	lds	r21, 0x0209
     8da:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <__subsf3>
     8de:	20 e0       	ldi	r18, 0x00	; 0
     8e0:	30 e0       	ldi	r19, 0x00	; 0
     8e2:	40 ea       	ldi	r20, 0xA0	; 160
     8e4:	50 e4       	ldi	r21, 0x40	; 64
     8e6:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__mulsf3>
     8ea:	9b 01       	movw	r18, r22
     8ec:	ac 01       	movw	r20, r24
     8ee:	c8 01       	movw	r24, r16
     8f0:	b7 01       	movw	r22, r14
     8f2:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <__addsf3>
     8f6:	7b 01       	movw	r14, r22
     8f8:	8c 01       	movw	r16, r24
     8fa:	c6 01       	movw	r24, r12
     8fc:	b5 01       	movw	r22, r10
     8fe:	2f e6       	ldi	r18, 0x6F	; 111
     900:	32 e1       	ldi	r19, 0x12	; 18
     902:	43 e8       	ldi	r20, 0x83	; 131
     904:	5a e3       	ldi	r21, 0x3A	; 58
     906:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__mulsf3>
     90a:	9b 01       	movw	r18, r22
     90c:	ac 01       	movw	r20, r24
     90e:	c8 01       	movw	r24, r16
     910:	b7 01       	movw	r22, r14
     912:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <__addsf3>
	
	float effort = (KP*error) + (KD*(error-error_old)) + (KI*Ierror);
	
	return effort;	
}
     916:	1f 91       	pop	r17
     918:	0f 91       	pop	r16
     91a:	ff 90       	pop	r15
     91c:	ef 90       	pop	r14
     91e:	df 90       	pop	r13
     920:	cf 90       	pop	r12
     922:	bf 90       	pop	r11
     924:	af 90       	pop	r10
     926:	9f 90       	pop	r9
     928:	8f 90       	pop	r8
     92a:	7f 90       	pop	r7
     92c:	6f 90       	pop	r6
     92e:	08 95       	ret

00000930 <check_threshhold>:
* Output Return:	char
* Overview:			This check the IR values to thresholds
********************************************************************/

char check_threshhold(float F, float B, float L, float R)
{
     930:	2f 92       	push	r2
     932:	6f 92       	push	r6
     934:	7f 92       	push	r7
     936:	8f 92       	push	r8
     938:	9f 92       	push	r9
     93a:	af 92       	push	r10
     93c:	bf 92       	push	r11
     93e:	cf 92       	push	r12
     940:	df 92       	push	r13
     942:	ef 92       	push	r14
     944:	ff 92       	push	r15
     946:	0f 93       	push	r16
     948:	1f 93       	push	r17
     94a:	df 93       	push	r29
     94c:	cf 93       	push	r28
     94e:	00 d0       	rcall	.+0      	; 0x950 <check_threshhold+0x20>
     950:	00 d0       	rcall	.+0      	; 0x952 <check_threshhold+0x22>
     952:	cd b7       	in	r28, 0x3d	; 61
     954:	de b7       	in	r29, 0x3e	; 62
     956:	69 83       	std	Y+1, r22	; 0x01
     958:	7a 83       	std	Y+2, r23	; 0x02
     95a:	8b 83       	std	Y+3, r24	; 0x03
     95c:	9c 83       	std	Y+4, r25	; 0x04
	char check = 0;
	check += 0b00000001*(ftIR < F);
     95e:	60 90 12 02 	lds	r6, 0x0212
     962:	70 90 13 02 	lds	r7, 0x0213
     966:	80 90 14 02 	lds	r8, 0x0214
     96a:	90 90 15 02 	lds	r9, 0x0215
	check += 0b00000010*(bkIR < B);
     96e:	60 91 16 02 	lds	r22, 0x0216
     972:	70 91 17 02 	lds	r23, 0x0217
     976:	80 91 18 02 	lds	r24, 0x0218
     97a:	90 91 19 02 	lds	r25, 0x0219
     97e:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     982:	28 2e       	mov	r2, r24
     984:	22 1c       	adc	r2, r2
     986:	22 24       	eor	r2, r2
     988:	22 1c       	adc	r2, r2
     98a:	22 0c       	add	r2, r2
	check += 0b00000100*(ltIR < L);
     98c:	60 91 0a 02 	lds	r22, 0x020A
     990:	70 91 0b 02 	lds	r23, 0x020B
     994:	80 91 0c 02 	lds	r24, 0x020C
     998:	90 91 0d 02 	lds	r25, 0x020D
     99c:	a8 01       	movw	r20, r16
     99e:	97 01       	movw	r18, r14
     9a0:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     9a4:	08 2f       	mov	r16, r24
     9a6:	00 1f       	adc	r16, r16
     9a8:	00 27       	eor	r16, r16
     9aa:	00 1f       	adc	r16, r16
     9ac:	00 0f       	add	r16, r16
     9ae:	00 0f       	add	r16, r16
	check += 0b00001000*(rtIR < R);
     9b0:	60 91 0e 02 	lds	r22, 0x020E
     9b4:	70 91 0f 02 	lds	r23, 0x020F
     9b8:	80 91 10 02 	lds	r24, 0x0210
     9bc:	90 91 11 02 	lds	r25, 0x0211
     9c0:	a6 01       	movw	r20, r12
     9c2:	95 01       	movw	r18, r10
     9c4:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     9c8:	18 2f       	mov	r17, r24
     9ca:	11 1f       	adc	r17, r17
     9cc:	11 27       	eor	r17, r17
     9ce:	11 1f       	adc	r17, r17
     9d0:	11 0f       	add	r17, r17
     9d2:	11 0f       	add	r17, r17
     9d4:	11 0f       	add	r17, r17

char check_threshhold(float F, float B, float L, float R)
{
	char check = 0;
	check += 0b00000001*(ftIR < F);
	check += 0b00000010*(bkIR < B);
     9d6:	ff 24       	eor	r15, r15
     9d8:	c4 01       	movw	r24, r8
     9da:	b3 01       	movw	r22, r6
     9dc:	29 81       	ldd	r18, Y+1	; 0x01
     9de:	3a 81       	ldd	r19, Y+2	; 0x02
     9e0:	4b 81       	ldd	r20, Y+3	; 0x03
     9e2:	5c 81       	ldd	r21, Y+4	; 0x04
     9e4:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     9e8:	88 23       	and	r24, r24
     9ea:	14 f4       	brge	.+4      	; 0x9f0 <check_threshhold+0xc0>
     9ec:	ff 24       	eor	r15, r15
     9ee:	f3 94       	inc	r15
     9f0:	2f 0c       	add	r2, r15
	check += 0b00000100*(ltIR < L);
     9f2:	20 0e       	add	r2, r16
	check += 0b00001000*(rtIR < R);
	return check;	
}
     9f4:	82 2d       	mov	r24, r2
     9f6:	81 0f       	add	r24, r17
     9f8:	0f 90       	pop	r0
     9fa:	0f 90       	pop	r0
     9fc:	0f 90       	pop	r0
     9fe:	0f 90       	pop	r0
     a00:	cf 91       	pop	r28
     a02:	df 91       	pop	r29
     a04:	1f 91       	pop	r17
     a06:	0f 91       	pop	r16
     a08:	ff 90       	pop	r15
     a0a:	ef 90       	pop	r14
     a0c:	df 90       	pop	r13
     a0e:	cf 90       	pop	r12
     a10:	bf 90       	pop	r11
     a12:	af 90       	pop	r10
     a14:	9f 90       	pop	r9
     a16:	8f 90       	pop	r8
     a18:	7f 90       	pop	r7
     a1a:	6f 90       	pop	r6
     a1c:	2f 90       	pop	r2
     a1e:	08 95       	ret

00000a20 <move_arc_stwt>:
		// bool stepper_FWD = arcLength >= 0;
		// STEPPER_move_stwt( STEPPER_BOTH, 
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk, // Left
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk); // Right
	// }
}
     a20:	08 95       	ret

00000a22 <checkIR>:
* Overview:			Use a comment block like this before functions
********************************************************************/
void checkIR( void )
{
	// Update all IR values
	ftIR = getFrontIR();
     a22:	0e 94 3a 0b 	call	0x1674	; 0x1674 <getFrontIR>
     a26:	60 93 12 02 	sts	0x0212, r22
     a2a:	70 93 13 02 	sts	0x0213, r23
     a2e:	80 93 14 02 	sts	0x0214, r24
     a32:	90 93 15 02 	sts	0x0215, r25
	bkIR = getBackIR();
     a36:	0e 94 17 0b 	call	0x162e	; 0x162e <getBackIR>
     a3a:	60 93 16 02 	sts	0x0216, r22
     a3e:	70 93 17 02 	sts	0x0217, r23
     a42:	80 93 18 02 	sts	0x0218, r24
     a46:	90 93 19 02 	sts	0x0219, r25
	ltIR = getLeftIR();
     a4a:	0e 94 80 0b 	call	0x1700	; 0x1700 <getLeftIR>
     a4e:	60 93 0a 02 	sts	0x020A, r22
     a52:	70 93 0b 02 	sts	0x020B, r23
     a56:	80 93 0c 02 	sts	0x020C, r24
     a5a:	90 93 0d 02 	sts	0x020D, r25
	rtIR = getRightIR();
     a5e:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <getRightIR>
     a62:	60 93 0e 02 	sts	0x020E, r22
     a66:	70 93 0f 02 	sts	0x020F, r23
     a6a:	80 93 10 02 	sts	0x0210, r24
     a6e:	90 93 11 02 	sts	0x0211, r25
}
     a72:	08 95       	ret

00000a74 <moveAway>:
* Input Variables:	none
* Output Return:	char
* Overview:			Use a comment block like this before functions
********************************************************************/
char moveAway ( void )
{	
     a74:	2f 92       	push	r2
     a76:	3f 92       	push	r3
     a78:	4f 92       	push	r4
     a7a:	5f 92       	push	r5
     a7c:	6f 92       	push	r6
     a7e:	7f 92       	push	r7
     a80:	8f 92       	push	r8
     a82:	9f 92       	push	r9
     a84:	af 92       	push	r10
     a86:	bf 92       	push	r11
     a88:	cf 92       	push	r12
     a8a:	df 92       	push	r13
     a8c:	ef 92       	push	r14
     a8e:	ff 92       	push	r15
     a90:	0f 93       	push	r16
     a92:	1f 93       	push	r17
     a94:	df 93       	push	r29
     a96:	cf 93       	push	r28
     a98:	00 d0       	rcall	.+0      	; 0xa9a <moveAway+0x26>
     a9a:	00 d0       	rcall	.+0      	; 0xa9c <moveAway+0x28>
     a9c:	cd b7       	in	r28, 0x3d	; 61
     a9e:	de b7       	in	r29, 0x3e	; 62
	char shyRobot = 0;
	
	float moveY = ftIR - bkIR;
     aa0:	60 90 12 02 	lds	r6, 0x0212
     aa4:	70 90 13 02 	lds	r7, 0x0213
     aa8:	80 90 14 02 	lds	r8, 0x0214
     aac:	90 90 15 02 	lds	r9, 0x0215
     ab0:	a0 90 16 02 	lds	r10, 0x0216
     ab4:	b0 90 17 02 	lds	r11, 0x0217
     ab8:	c0 90 18 02 	lds	r12, 0x0218
     abc:	d0 90 19 02 	lds	r13, 0x0219
	float moveX = rtIR - ltIR;
     ac0:	e0 90 0e 02 	lds	r14, 0x020E
     ac4:	f0 90 0f 02 	lds	r15, 0x020F
     ac8:	00 91 10 02 	lds	r16, 0x0210
     acc:	10 91 11 02 	lds	r17, 0x0211
     ad0:	20 90 0a 02 	lds	r2, 0x020A
     ad4:	30 90 0b 02 	lds	r3, 0x020B
     ad8:	40 90 0c 02 	lds	r4, 0x020C
     adc:	50 90 0d 02 	lds	r5, 0x020D
     ae0:	c8 01       	movw	r24, r16
     ae2:	b7 01       	movw	r22, r14
     ae4:	a2 01       	movw	r20, r4
     ae6:	91 01       	movw	r18, r2
     ae8:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <__subsf3>
     aec:	69 83       	std	Y+1, r22	; 0x01
     aee:	7a 83       	std	Y+2, r23	; 0x02
     af0:	8b 83       	std	Y+3, r24	; 0x03
     af2:	9c 83       	std	Y+4, r25	; 0x04
	
	
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
     af4:	c4 01       	movw	r24, r8
     af6:	b3 01       	movw	r22, r6
     af8:	20 e0       	ldi	r18, 0x00	; 0
     afa:	30 e0       	ldi	r19, 0x00	; 0
     afc:	40 e8       	ldi	r20, 0x80	; 128
     afe:	5f e3       	ldi	r21, 0x3F	; 63
     b00:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     b04:	87 fd       	sbrc	r24, 7
     b06:	0b c0       	rjmp	.+22     	; 0xb1e <moveAway+0xaa>
     b08:	c6 01       	movw	r24, r12
     b0a:	b5 01       	movw	r22, r10
     b0c:	20 e0       	ldi	r18, 0x00	; 0
     b0e:	30 e0       	ldi	r19, 0x00	; 0
     b10:	40 e8       	ldi	r20, 0x80	; 128
     b12:	5f e3       	ldi	r21, 0x3F	; 63
     b14:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     b18:	88 23       	and	r24, r24
     b1a:	0c f0       	brlt	.+2      	; 0xb1e <moveAway+0xaa>
     b1c:	76 c0       	rjmp	.+236    	; 0xc0a <moveAway+0x196>
********************************************************************/
char moveAway ( void )
{	
	char shyRobot = 0;
	
	float moveY = ftIR - bkIR;
     b1e:	c4 01       	movw	r24, r8
     b20:	b3 01       	movw	r22, r6
     b22:	a6 01       	movw	r20, r12
     b24:	95 01       	movw	r18, r10
     b26:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <__subsf3>
     b2a:	7b 01       	movw	r14, r22
     b2c:	8c 01       	movw	r16, r24
	float moveX = rtIR - ltIR;
	
	
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
	{
			BOOL moveForward = ~(moveY <= 0);
     b2e:	dd 24       	eor	r13, r13
     b30:	20 e0       	ldi	r18, 0x00	; 0
     b32:	30 e0       	ldi	r19, 0x00	; 0
     b34:	40 e0       	ldi	r20, 0x00	; 0
     b36:	50 e0       	ldi	r21, 0x00	; 0
     b38:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     b3c:	18 16       	cp	r1, r24
     b3e:	14 f0       	brlt	.+4      	; 0xb44 <moveAway+0xd0>
     b40:	dd 24       	eor	r13, r13
     b42:	d3 94       	inc	r13
     b44:	7d 2c       	mov	r7, r13
     b46:	70 94       	com	r7
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
     b48:	c8 01       	movw	r24, r16
     b4a:	b7 01       	movw	r22, r14
     b4c:	0e 94 3c 20 	call	0x4078	; 0x4078 <__fixsfsi>
     b50:	9b 01       	movw	r18, r22
     b52:	77 ff       	sbrs	r23, 7
     b54:	03 c0       	rjmp	.+6      	; 0xb5c <moveAway+0xe8>
     b56:	30 95       	com	r19
     b58:	21 95       	neg	r18
     b5a:	3f 4f       	sbci	r19, 0xFF	; 255
     b5c:	b9 01       	movw	r22, r18
     b5e:	88 27       	eor	r24, r24
     b60:	77 fd       	sbrc	r23, 7
     b62:	80 95       	com	r24
     b64:	98 2f       	mov	r25, r24
     b66:	0e 94 6f 20 	call	0x40de	; 0x40de <__floatsisf>
     b6a:	6b 01       	movw	r12, r22
     b6c:	7c 01       	movw	r14, r24
     b6e:	8d b7       	in	r24, 0x3d	; 61
     b70:	9e b7       	in	r25, 0x3e	; 62
     b72:	09 97       	sbiw	r24, 0x09	; 9
     b74:	0f b6       	in	r0, 0x3f	; 63
     b76:	f8 94       	cli
     b78:	9e bf       	out	0x3e, r25	; 62
     b7a:	0f be       	out	0x3f, r0	; 63
     b7c:	8d bf       	out	0x3d, r24	; 61
     b7e:	0d b7       	in	r16, 0x3d	; 61
     b80:	1e b7       	in	r17, 0x3e	; 62
     b82:	0f 5f       	subi	r16, 0xFF	; 255
     b84:	1f 4f       	sbci	r17, 0xFF	; 255
     b86:	c7 01       	movw	r24, r14
     b88:	b6 01       	movw	r22, r12
     b8a:	29 81       	ldd	r18, Y+1	; 0x01
     b8c:	3a 81       	ldd	r19, Y+2	; 0x02
     b8e:	4b 81       	ldd	r20, Y+3	; 0x03
     b90:	5c 81       	ldd	r21, Y+4	; 0x04
     b92:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <__addsf3>
     b96:	0e 94 41 20 	call	0x4082	; 0x4082 <__fixunssfsi>
     b9a:	4b 01       	movw	r8, r22
     b9c:	5c 01       	movw	r10, r24
     b9e:	82 e3       	ldi	r24, 0x32	; 50
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	f8 01       	movw	r30, r16
     ba4:	91 83       	std	Z+1, r25	; 0x01
     ba6:	80 83       	st	Z, r24
     ba8:	c7 01       	movw	r24, r14
     baa:	b6 01       	movw	r22, r12
     bac:	29 81       	ldd	r18, Y+1	; 0x01
     bae:	3a 81       	ldd	r19, Y+2	; 0x02
     bb0:	4b 81       	ldd	r20, Y+3	; 0x03
     bb2:	5c 81       	ldd	r21, Y+4	; 0x04
     bb4:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <__subsf3>
     bb8:	0e 94 41 20 	call	0x4082	; 0x4082 <__fixunssfsi>
     bbc:	f8 01       	movw	r30, r16
     bbe:	73 83       	std	Z+3, r23	; 0x03
     bc0:	62 83       	std	Z+2, r22	; 0x02
     bc2:	82 ec       	ldi	r24, 0xC2	; 194
     bc4:	91 e0       	ldi	r25, 0x01	; 1
     bc6:	95 83       	std	Z+5, r25	; 0x05
     bc8:	84 83       	std	Z+4, r24	; 0x04
     bca:	16 82       	std	Z+6, r1	; 0x06
     bcc:	10 86       	std	Z+8, r1	; 0x08
     bce:	17 82       	std	Z+7, r1	; 0x07
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	62 e0       	ldi	r22, 0x02	; 2
     bd4:	47 2d       	mov	r20, r7
     bd6:	22 e3       	ldi	r18, 0x32	; 50
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	84 01       	movw	r16, r8
     bdc:	52 ec       	ldi	r21, 0xC2	; 194
     bde:	e5 2e       	mov	r14, r21
     be0:	51 e0       	ldi	r21, 0x01	; 1
     be2:	f5 2e       	mov	r15, r21
     be4:	cc 24       	eor	r12, r12
     be6:	aa 24       	eor	r10, r10
     be8:	bb 24       	eor	r11, r11
     bea:	87 2c       	mov	r8, r7
     bec:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <STEPPER_move>
			moveForward, 50, abs(moveY)+moveX, 450, STEPPER_BRK_OFF, // Left
			moveForward, 50, abs(moveY)-moveX, 450, STEPPER_BRK_OFF ); // Right
			
			LCD_clear();
     bf0:	8d b7       	in	r24, 0x3d	; 61
     bf2:	9e b7       	in	r25, 0x3e	; 62
     bf4:	09 96       	adiw	r24, 0x09	; 9
     bf6:	0f b6       	in	r0, 0x3f	; 63
     bf8:	f8 94       	cli
     bfa:	9e bf       	out	0x3e, r25	; 62
     bfc:	0f be       	out	0x3f, r0	; 63
     bfe:	8d bf       	out	0x3d, r24	; 61
     c00:	0e 94 b4 0c 	call	0x1968	; 0x1968 <LCD_clear>
			LCD_printf("moveAwayF\n\n\n\n");
     c04:	80 e0       	ldi	r24, 0x00	; 0
     c06:	91 e0       	ldi	r25, 0x01	; 1
     c08:	78 c0       	rjmp	.+240    	; 0xcfa <moveAway+0x286>
			
			shyRobot = 1;
	}
	else if ((rtIR < IR_OBST_R_THRESH)|(ltIR < IR_OBST_L_THRESH))
     c0a:	c8 01       	movw	r24, r16
     c0c:	b7 01       	movw	r22, r14
     c0e:	20 e0       	ldi	r18, 0x00	; 0
     c10:	30 e0       	ldi	r19, 0x00	; 0
     c12:	40 e8       	ldi	r20, 0x80	; 128
     c14:	5f e3       	ldi	r21, 0x3F	; 63
     c16:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     c1a:	87 fd       	sbrc	r24, 7
     c1c:	0c c0       	rjmp	.+24     	; 0xc36 <moveAway+0x1c2>
     c1e:	c2 01       	movw	r24, r4
     c20:	b1 01       	movw	r22, r2
     c22:	20 e0       	ldi	r18, 0x00	; 0
     c24:	30 e0       	ldi	r19, 0x00	; 0
     c26:	40 e8       	ldi	r20, 0x80	; 128
     c28:	5f e3       	ldi	r21, 0x3F	; 63
     c2a:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     c2e:	87 fd       	sbrc	r24, 7
     c30:	02 c0       	rjmp	.+4      	; 0xc36 <moveAway+0x1c2>
     c32:	80 e0       	ldi	r24, 0x00	; 0
     c34:	65 c0       	rjmp	.+202    	; 0xd00 <moveAway+0x28c>
	{
			BOOL moveForwardR = ~(moveX <= 0);
			BOOL moveForwardL = ~(moveX > 0);
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
     c36:	69 81       	ldd	r22, Y+1	; 0x01
     c38:	7a 81       	ldd	r23, Y+2	; 0x02
     c3a:	8b 81       	ldd	r24, Y+3	; 0x03
     c3c:	9c 81       	ldd	r25, Y+4	; 0x04
     c3e:	0e 94 3c 20 	call	0x4078	; 0x4078 <__fixsfsi>
     c42:	8b 01       	movw	r16, r22
     c44:	77 ff       	sbrs	r23, 7
     c46:	03 c0       	rjmp	.+6      	; 0xc4e <moveAway+0x1da>
     c48:	10 95       	com	r17
     c4a:	01 95       	neg	r16
     c4c:	1f 4f       	sbci	r17, 0xFF	; 255
     c4e:	ed b7       	in	r30, 0x3d	; 61
     c50:	fe b7       	in	r31, 0x3e	; 62
     c52:	39 97       	sbiw	r30, 0x09	; 9
     c54:	0f b6       	in	r0, 0x3f	; 63
     c56:	f8 94       	cli
     c58:	fe bf       	out	0x3e, r31	; 62
     c5a:	0f be       	out	0x3f, r0	; 63
     c5c:	ed bf       	out	0x3d, r30	; 61
     c5e:	ad b6       	in	r10, 0x3d	; 61
     c60:	be b6       	in	r11, 0x3e	; 62
     c62:	08 94       	sec
     c64:	a1 1c       	adc	r10, r1
     c66:	b1 1c       	adc	r11, r1
     c68:	ff 24       	eor	r15, r15
     c6a:	69 81       	ldd	r22, Y+1	; 0x01
     c6c:	7a 81       	ldd	r23, Y+2	; 0x02
     c6e:	8b 81       	ldd	r24, Y+3	; 0x03
     c70:	9c 81       	ldd	r25, Y+4	; 0x04
     c72:	20 e0       	ldi	r18, 0x00	; 0
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	40 e0       	ldi	r20, 0x00	; 0
     c78:	50 e0       	ldi	r21, 0x00	; 0
     c7a:	0e 94 1f 21 	call	0x423e	; 0x423e <__gesf2>
     c7e:	18 16       	cp	r1, r24
     c80:	14 f4       	brge	.+4      	; 0xc86 <moveAway+0x212>
     c82:	ff 24       	eor	r15, r15
     c84:	f3 94       	inc	r15
     c86:	f0 94       	com	r15
     c88:	dd 24       	eor	r13, r13
     c8a:	69 81       	ldd	r22, Y+1	; 0x01
     c8c:	7a 81       	ldd	r23, Y+2	; 0x02
     c8e:	8b 81       	ldd	r24, Y+3	; 0x03
     c90:	9c 81       	ldd	r25, Y+4	; 0x04
     c92:	20 e0       	ldi	r18, 0x00	; 0
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	40 e0       	ldi	r20, 0x00	; 0
     c98:	50 e0       	ldi	r21, 0x00	; 0
     c9a:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     c9e:	18 16       	cp	r1, r24
     ca0:	14 f0       	brlt	.+4      	; 0xca6 <moveAway+0x232>
     ca2:	dd 24       	eor	r13, r13
     ca4:	d3 94       	inc	r13
     ca6:	d0 94       	com	r13
     ca8:	88 ec       	ldi	r24, 0xC8	; 200
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	f5 01       	movw	r30, r10
     cae:	91 83       	std	Z+1, r25	; 0x01
     cb0:	80 83       	st	Z, r24
     cb2:	13 83       	std	Z+3, r17	; 0x03
     cb4:	02 83       	std	Z+2, r16	; 0x02
     cb6:	82 ec       	ldi	r24, 0xC2	; 194
     cb8:	91 e0       	ldi	r25, 0x01	; 1
     cba:	95 83       	std	Z+5, r25	; 0x05
     cbc:	84 83       	std	Z+4, r24	; 0x04
     cbe:	16 82       	std	Z+6, r1	; 0x06
     cc0:	10 86       	std	Z+8, r1	; 0x08
     cc2:	17 82       	std	Z+7, r1	; 0x07
     cc4:	81 e0       	ldi	r24, 0x01	; 1
     cc6:	62 e0       	ldi	r22, 0x02	; 2
     cc8:	4f 2d       	mov	r20, r15
     cca:	28 ec       	ldi	r18, 0xC8	; 200
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	92 ec       	ldi	r25, 0xC2	; 194
     cd0:	e9 2e       	mov	r14, r25
     cd2:	91 e0       	ldi	r25, 0x01	; 1
     cd4:	f9 2e       	mov	r15, r25
     cd6:	cc 24       	eor	r12, r12
     cd8:	aa 24       	eor	r10, r10
     cda:	bb 24       	eor	r11, r11
     cdc:	8d 2c       	mov	r8, r13
     cde:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <STEPPER_move>
			moveForwardL, 200, abs(moveX), 450, STEPPER_BRK_OFF, // Left
			moveForwardR, 200, abs(moveX), 450, STEPPER_BRK_OFF ); // Right
			
			LCD_clear();
     ce2:	8d b7       	in	r24, 0x3d	; 61
     ce4:	9e b7       	in	r25, 0x3e	; 62
     ce6:	09 96       	adiw	r24, 0x09	; 9
     ce8:	0f b6       	in	r0, 0x3f	; 63
     cea:	f8 94       	cli
     cec:	9e bf       	out	0x3e, r25	; 62
     cee:	0f be       	out	0x3f, r0	; 63
     cf0:	8d bf       	out	0x3d, r24	; 61
     cf2:	0e 94 b4 0c 	call	0x1968	; 0x1968 <LCD_clear>
			LCD_printf("moveAwayS\n\n\n\n");
     cf6:	8d e0       	ldi	r24, 0x0D	; 13
     cf8:	91 e0       	ldi	r25, 0x01	; 1
     cfa:	0e 94 b6 29 	call	0x536c	; 0x536c <puts>
     cfe:	81 e0       	ldi	r24, 0x01	; 1
			
			shyRobot = 1;
	}
	
	return shyRobot;
}
     d00:	0f 90       	pop	r0
     d02:	0f 90       	pop	r0
     d04:	0f 90       	pop	r0
     d06:	0f 90       	pop	r0
     d08:	cf 91       	pop	r28
     d0a:	df 91       	pop	r29
     d0c:	1f 91       	pop	r17
     d0e:	0f 91       	pop	r16
     d10:	ff 90       	pop	r15
     d12:	ef 90       	pop	r14
     d14:	df 90       	pop	r13
     d16:	cf 90       	pop	r12
     d18:	bf 90       	pop	r11
     d1a:	af 90       	pop	r10
     d1c:	9f 90       	pop	r9
     d1e:	8f 90       	pop	r8
     d20:	7f 90       	pop	r7
     d22:	6f 90       	pop	r6
     d24:	5f 90       	pop	r5
     d26:	4f 90       	pop	r4
     d28:	3f 90       	pop	r3
     d2a:	2f 90       	pop	r2
     d2c:	08 95       	ret

00000d2e <moveWander>:
* Input Variables:	none
* Output Return:	none
* Overview:			Use a comment block like this before functions
********************************************************************/
char moveWander ( void )
{
     d2e:	2f 92       	push	r2
     d30:	3f 92       	push	r3
     d32:	4f 92       	push	r4
     d34:	5f 92       	push	r5
     d36:	6f 92       	push	r6
     d38:	7f 92       	push	r7
     d3a:	8f 92       	push	r8
     d3c:	af 92       	push	r10
     d3e:	bf 92       	push	r11
     d40:	cf 92       	push	r12
     d42:	df 92       	push	r13
     d44:	ef 92       	push	r14
     d46:	ff 92       	push	r15
     d48:	0f 93       	push	r16
     d4a:	1f 93       	push	r17
     d4c:	df 93       	push	r29
     d4e:	cf 93       	push	r28
     d50:	00 d0       	rcall	.+0      	; 0xd52 <moveWander+0x24>
     d52:	00 d0       	rcall	.+0      	; 0xd54 <moveWander+0x26>
     d54:	cd b7       	in	r28, 0x3d	; 61
     d56:	de b7       	in	r29, 0x3e	; 62
	// Check moveAway() (shy kid) program
	char isShy = moveAway();
     d58:	0e 94 3a 05 	call	0xa74	; 0xa74 <moveAway>
     d5c:	c8 2e       	mov	r12, r24
	char isWander = 0;
	
	// Check to see if robot sees a wall. If YES go track the wall else randomly WANDER.
	if (isShy)
     d5e:	88 23       	and	r24, r24
     d60:	09 f0       	breq	.+2      	; 0xd64 <moveWander+0x36>
     d62:	17 c1       	rjmp	.+558    	; 0xf92 <moveWander+0x264>
	{
		return isShy;
	}
	
	// char irBool = check_threshhold(IR_WALL_F_THRESH,IR_WALL_B_THRESH,IR_WALL_L_THRESH,IR_WALL_R_THRESH);
	if ((ftIR < IR_WALL_F_THRESH)|(bkIR < IR_WALL_B_THRESH)|(rtIR < IR_WALL_R_THRESH)|(ltIR < IR_WALL_L_THRESH))
     d64:	ee 24       	eor	r14, r14
     d66:	ff 24       	eor	r15, r15
     d68:	60 91 0a 02 	lds	r22, 0x020A
     d6c:	70 91 0b 02 	lds	r23, 0x020B
     d70:	80 91 0c 02 	lds	r24, 0x020C
     d74:	90 91 0d 02 	lds	r25, 0x020D
     d78:	20 e0       	ldi	r18, 0x00	; 0
     d7a:	30 e0       	ldi	r19, 0x00	; 0
     d7c:	40 ea       	ldi	r20, 0xA0	; 160
     d7e:	51 e4       	ldi	r21, 0x41	; 65
     d80:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     d84:	88 23       	and	r24, r24
     d86:	1c f4       	brge	.+6      	; 0xd8e <moveWander+0x60>
     d88:	f1 e0       	ldi	r31, 0x01	; 1
     d8a:	ef 2e       	mov	r14, r31
     d8c:	f1 2c       	mov	r15, r1
     d8e:	00 e0       	ldi	r16, 0x00	; 0
     d90:	10 e0       	ldi	r17, 0x00	; 0
     d92:	60 91 0e 02 	lds	r22, 0x020E
     d96:	70 91 0f 02 	lds	r23, 0x020F
     d9a:	80 91 10 02 	lds	r24, 0x0210
     d9e:	90 91 11 02 	lds	r25, 0x0211
     da2:	20 e0       	ldi	r18, 0x00	; 0
     da4:	30 e0       	ldi	r19, 0x00	; 0
     da6:	40 ea       	ldi	r20, 0xA0	; 160
     da8:	51 e4       	ldi	r21, 0x41	; 65
     daa:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     dae:	88 23       	and	r24, r24
     db0:	14 f4       	brge	.+4      	; 0xdb6 <moveWander+0x88>
     db2:	01 e0       	ldi	r16, 0x01	; 1
     db4:	10 e0       	ldi	r17, 0x00	; 0
     db6:	0e 29       	or	r16, r14
     db8:	1f 29       	or	r17, r15
     dba:	ff 24       	eor	r15, r15
     dbc:	60 91 12 02 	lds	r22, 0x0212
     dc0:	70 91 13 02 	lds	r23, 0x0213
     dc4:	80 91 14 02 	lds	r24, 0x0214
     dc8:	90 91 15 02 	lds	r25, 0x0215
     dcc:	20 e0       	ldi	r18, 0x00	; 0
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	40 ea       	ldi	r20, 0xA0	; 160
     dd2:	51 e4       	ldi	r21, 0x41	; 65
     dd4:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     dd8:	88 23       	and	r24, r24
     dda:	14 f4       	brge	.+4      	; 0xde0 <moveWander+0xb2>
     ddc:	ff 24       	eor	r15, r15
     dde:	f3 94       	inc	r15
     de0:	ee 24       	eor	r14, r14
     de2:	60 91 16 02 	lds	r22, 0x0216
     de6:	70 91 17 02 	lds	r23, 0x0217
     dea:	80 91 18 02 	lds	r24, 0x0218
     dee:	90 91 19 02 	lds	r25, 0x0219
     df2:	20 e0       	ldi	r18, 0x00	; 0
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	48 ec       	ldi	r20, 0xC8	; 200
     df8:	51 e4       	ldi	r21, 0x41	; 65
     dfa:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
     dfe:	88 23       	and	r24, r24
     e00:	14 f4       	brge	.+4      	; 0xe06 <moveWander+0xd8>
     e02:	ee 24       	eor	r14, r14
     e04:	e3 94       	inc	r14
     e06:	fe 28       	or	r15, r14
     e08:	8f 2d       	mov	r24, r15
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	08 2b       	or	r16, r24
     e0e:	19 2b       	or	r17, r25
     e10:	01 2b       	or	r16, r17
     e12:	09 f0       	breq	.+2      	; 0xe16 <moveWander+0xe8>
     e14:	be c0       	rjmp	.+380    	; 0xf92 <moveWander+0x264>
	{	
		return isWander = 0;
	}
	else
	{
		STEPPER_STEPS curr_steps = STEPPER_get_nSteps();
     e16:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <STEPPER_get_nSteps>
     e1a:	9b 01       	movw	r18, r22
     e1c:	ac 01       	movw	r20, r24
		
		// reset Ierror if we are now wandering
		Ierror = 0;
     e1e:	80 e0       	ldi	r24, 0x00	; 0
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	a0 e0       	ldi	r26, 0x00	; 0
     e24:	b0 e0       	ldi	r27, 0x00	; 0
     e26:	80 93 02 02 	sts	0x0202, r24
     e2a:	90 93 03 02 	sts	0x0203, r25
     e2e:	a0 93 04 02 	sts	0x0204, r26
     e32:	b0 93 05 02 	sts	0x0205, r27
		
		// IF moveAway() returns zero (NOT shy) and my motion is complete do random motion
		if ((curr_steps.left == 0)&(curr_steps.right == 0))
     e36:	23 2b       	or	r18, r19
     e38:	11 f4       	brne	.+4      	; 0xe3e <moveWander+0x110>
     e3a:	45 2b       	or	r20, r21
     e3c:	19 f0       	breq	.+6      	; 0xe44 <moveWander+0x116>
     e3e:	cc 24       	eor	r12, r12
     e40:	c3 94       	inc	r12
     e42:	a7 c0       	rjmp	.+334    	; 0xf92 <moveWander+0x264>
		{
			// create random values for wheel position and wheel speed
			int moveRand = rand()%400+400;
     e44:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <rand>
     e48:	60 e9       	ldi	r22, 0x90	; 144
     e4a:	71 e0       	ldi	r23, 0x01	; 1
     e4c:	0e 94 ac 26 	call	0x4d58	; 0x4d58 <__divmodhi4>
     e50:	e0 e9       	ldi	r30, 0x90	; 144
     e52:	2e 2e       	mov	r2, r30
     e54:	e1 e0       	ldi	r30, 0x01	; 1
     e56:	3e 2e       	mov	r3, r30
     e58:	28 0e       	add	r2, r24
     e5a:	39 1e       	adc	r3, r25
			float turnRandR = rand()%200+200;
     e5c:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <rand>
     e60:	68 ec       	ldi	r22, 0xC8	; 200
     e62:	70 e0       	ldi	r23, 0x00	; 0
     e64:	0e 94 ac 26 	call	0x4d58	; 0x4d58 <__divmodhi4>
     e68:	88 53       	subi	r24, 0x38	; 56
     e6a:	9f 4f       	sbci	r25, 0xFF	; 255
     e6c:	aa 27       	eor	r26, r26
     e6e:	97 fd       	sbrc	r25, 7
     e70:	a0 95       	com	r26
     e72:	ba 2f       	mov	r27, r26
     e74:	bc 01       	movw	r22, r24
     e76:	cd 01       	movw	r24, r26
     e78:	0e 94 6f 20 	call	0x40de	; 0x40de <__floatsisf>
     e7c:	69 83       	std	Y+1, r22	; 0x01
     e7e:	7a 83       	std	Y+2, r23	; 0x02
     e80:	8b 83       	std	Y+3, r24	; 0x03
     e82:	9c 83       	std	Y+4, r25	; 0x04
			float turnRandL = rand()%200+200;
     e84:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <rand>
     e88:	68 ec       	ldi	r22, 0xC8	; 200
     e8a:	70 e0       	ldi	r23, 0x00	; 0
     e8c:	0e 94 ac 26 	call	0x4d58	; 0x4d58 <__divmodhi4>
     e90:	88 53       	subi	r24, 0x38	; 56
     e92:	9f 4f       	sbci	r25, 0xFF	; 255
     e94:	aa 27       	eor	r26, r26
     e96:	97 fd       	sbrc	r25, 7
     e98:	a0 95       	com	r26
     e9a:	ba 2f       	mov	r27, r26
     e9c:	bc 01       	movw	r22, r24
     e9e:	cd 01       	movw	r24, r26
     ea0:	0e 94 6f 20 	call	0x40de	; 0x40de <__floatsisf>
     ea4:	2b 01       	movw	r4, r22
     ea6:	3c 01       	movw	r6, r24
			
			BOOL direction = ~((rand()%10)>7);
     ea8:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <rand>
     eac:	20 e0       	ldi	r18, 0x00	; 0
     eae:	6a e0       	ldi	r22, 0x0A	; 10
     eb0:	70 e0       	ldi	r23, 0x00	; 0
     eb2:	0e 94 ac 26 	call	0x4d58	; 0x4d58 <__divmodhi4>
     eb6:	08 97       	sbiw	r24, 0x08	; 8
     eb8:	0c f0       	brlt	.+2      	; 0xebc <moveWander+0x18e>
     eba:	21 e0       	ldi	r18, 0x01	; 1
     ebc:	82 2e       	mov	r8, r18
     ebe:	80 94       	com	r8
					
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
     ec0:	8d b7       	in	r24, 0x3d	; 61
     ec2:	9e b7       	in	r25, 0x3e	; 62
     ec4:	09 97       	sbiw	r24, 0x09	; 9
     ec6:	0f b6       	in	r0, 0x3f	; 63
     ec8:	f8 94       	cli
     eca:	9e bf       	out	0x3e, r25	; 62
     ecc:	0f be       	out	0x3f, r0	; 63
     ece:	8d bf       	out	0x3d, r24	; 61
     ed0:	0d b7       	in	r16, 0x3d	; 61
     ed2:	1e b7       	in	r17, 0x3e	; 62
     ed4:	0f 5f       	subi	r16, 0xFF	; 255
     ed6:	1f 4f       	sbci	r17, 0xFF	; 255
     ed8:	c3 01       	movw	r24, r6
     eda:	b2 01       	movw	r22, r4
     edc:	0e 94 41 20 	call	0x4082	; 0x4082 <__fixunssfsi>
     ee0:	6b 01       	movw	r12, r22
     ee2:	7c 01       	movw	r14, r24
     ee4:	d8 01       	movw	r26, r16
     ee6:	2c 92       	st	X, r2
     ee8:	11 96       	adiw	r26, 0x01	; 1
     eea:	3c 92       	st	X, r3
     eec:	69 81       	ldd	r22, Y+1	; 0x01
     eee:	7a 81       	ldd	r23, Y+2	; 0x02
     ef0:	8b 81       	ldd	r24, Y+3	; 0x03
     ef2:	9c 81       	ldd	r25, Y+4	; 0x04
     ef4:	0e 94 41 20 	call	0x4082	; 0x4082 <__fixunssfsi>
     ef8:	f8 01       	movw	r30, r16
     efa:	73 83       	std	Z+3, r23	; 0x03
     efc:	62 83       	std	Z+2, r22	; 0x02
     efe:	82 ec       	ldi	r24, 0xC2	; 194
     f00:	91 e0       	ldi	r25, 0x01	; 1
     f02:	95 83       	std	Z+5, r25	; 0x05
     f04:	84 83       	std	Z+4, r24	; 0x04
     f06:	16 82       	std	Z+6, r1	; 0x06
     f08:	10 86       	std	Z+8, r1	; 0x08
     f0a:	17 82       	std	Z+7, r1	; 0x07
     f0c:	81 e0       	ldi	r24, 0x01	; 1
     f0e:	62 e0       	ldi	r22, 0x02	; 2
     f10:	48 2d       	mov	r20, r8
     f12:	91 01       	movw	r18, r2
     f14:	86 01       	movw	r16, r12
     f16:	72 ec       	ldi	r23, 0xC2	; 194
     f18:	e7 2e       	mov	r14, r23
     f1a:	71 e0       	ldi	r23, 0x01	; 1
     f1c:	f7 2e       	mov	r15, r23
     f1e:	cc 24       	eor	r12, r12
     f20:	aa 24       	eor	r10, r10
     f22:	bb 24       	eor	r11, r11
     f24:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <STEPPER_move>
			direction, moveRand, turnRandL, 450, STEPPER_BRK_OFF, // Left
			direction, moveRand, turnRandR, 450, STEPPER_BRK_OFF ); // Right
			
			LCD_clear();
     f28:	8d b7       	in	r24, 0x3d	; 61
     f2a:	9e b7       	in	r25, 0x3e	; 62
     f2c:	09 96       	adiw	r24, 0x09	; 9
     f2e:	0f b6       	in	r0, 0x3f	; 63
     f30:	f8 94       	cli
     f32:	9e bf       	out	0x3e, r25	; 62
     f34:	0f be       	out	0x3f, r0	; 63
     f36:	8d bf       	out	0x3d, r24	; 61
     f38:	0e 94 b4 0c 	call	0x1968	; 0x1968 <LCD_clear>
			LCD_printf("moveWander\nmoveRand: %3d\nturnRandR: %3d\nturnRandL: %3d\n",moveRand,turnRandR,turnRandL);
     f3c:	ad b7       	in	r26, 0x3d	; 61
     f3e:	be b7       	in	r27, 0x3e	; 62
     f40:	1c 97       	sbiw	r26, 0x0c	; 12
     f42:	0f b6       	in	r0, 0x3f	; 63
     f44:	f8 94       	cli
     f46:	be bf       	out	0x3e, r27	; 62
     f48:	0f be       	out	0x3f, r0	; 63
     f4a:	ad bf       	out	0x3d, r26	; 61
     f4c:	ed b7       	in	r30, 0x3d	; 61
     f4e:	fe b7       	in	r31, 0x3e	; 62
     f50:	31 96       	adiw	r30, 0x01	; 1
     f52:	8a e1       	ldi	r24, 0x1A	; 26
     f54:	91 e0       	ldi	r25, 0x01	; 1
     f56:	12 96       	adiw	r26, 0x02	; 2
     f58:	9c 93       	st	X, r25
     f5a:	8e 93       	st	-X, r24
     f5c:	11 97       	sbiw	r26, 0x01	; 1
     f5e:	33 82       	std	Z+3, r3	; 0x03
     f60:	22 82       	std	Z+2, r2	; 0x02
     f62:	89 81       	ldd	r24, Y+1	; 0x01
     f64:	9a 81       	ldd	r25, Y+2	; 0x02
     f66:	ab 81       	ldd	r26, Y+3	; 0x03
     f68:	bc 81       	ldd	r27, Y+4	; 0x04
     f6a:	84 83       	std	Z+4, r24	; 0x04
     f6c:	95 83       	std	Z+5, r25	; 0x05
     f6e:	a6 83       	std	Z+6, r26	; 0x06
     f70:	b7 83       	std	Z+7, r27	; 0x07
     f72:	40 86       	std	Z+8, r4	; 0x08
     f74:	51 86       	std	Z+9, r5	; 0x09
     f76:	62 86       	std	Z+10, r6	; 0x0a
     f78:	73 86       	std	Z+11, r7	; 0x0b
     f7a:	0e 94 a4 29 	call	0x5348	; 0x5348 <printf>
     f7e:	cc 24       	eor	r12, r12
     f80:	c3 94       	inc	r12
     f82:	ad b7       	in	r26, 0x3d	; 61
     f84:	be b7       	in	r27, 0x3e	; 62
     f86:	1c 96       	adiw	r26, 0x0c	; 12
     f88:	0f b6       	in	r0, 0x3f	; 63
     f8a:	f8 94       	cli
     f8c:	be bf       	out	0x3e, r27	; 62
     f8e:	0f be       	out	0x3f, r0	; 63
     f90:	ad bf       	out	0x3d, r26	; 61
			
		}
		isWander = 1;
	}
	return isWander;
}
     f92:	8c 2d       	mov	r24, r12
     f94:	0f 90       	pop	r0
     f96:	0f 90       	pop	r0
     f98:	0f 90       	pop	r0
     f9a:	0f 90       	pop	r0
     f9c:	cf 91       	pop	r28
     f9e:	df 91       	pop	r29
     fa0:	1f 91       	pop	r17
     fa2:	0f 91       	pop	r16
     fa4:	ff 90       	pop	r15
     fa6:	ef 90       	pop	r14
     fa8:	df 90       	pop	r13
     faa:	cf 90       	pop	r12
     fac:	bf 90       	pop	r11
     fae:	af 90       	pop	r10
     fb0:	8f 90       	pop	r8
     fb2:	7f 90       	pop	r7
     fb4:	6f 90       	pop	r6
     fb6:	5f 90       	pop	r5
     fb8:	4f 90       	pop	r4
     fba:	3f 90       	pop	r3
     fbc:	2f 90       	pop	r2
     fbe:	08 95       	ret

00000fc0 <moveWall>:
* Input Variables:	void
* Output Return:	char
* Overview:			This moves the robot in any arc length
********************************************************************/
char moveWall( void )
{	
     fc0:	2f 92       	push	r2
     fc2:	3f 92       	push	r3
     fc4:	4f 92       	push	r4
     fc6:	5f 92       	push	r5
     fc8:	6f 92       	push	r6
     fca:	7f 92       	push	r7
     fcc:	8f 92       	push	r8
     fce:	9f 92       	push	r9
     fd0:	af 92       	push	r10
     fd2:	bf 92       	push	r11
     fd4:	cf 92       	push	r12
     fd6:	df 92       	push	r13
     fd8:	ef 92       	push	r14
     fda:	ff 92       	push	r15
     fdc:	0f 93       	push	r16
     fde:	1f 93       	push	r17
     fe0:	df 93       	push	r29
     fe2:	cf 93       	push	r28
     fe4:	00 d0       	rcall	.+0      	; 0xfe6 <moveWall+0x26>
     fe6:	00 d0       	rcall	.+0      	; 0xfe8 <moveWall+0x28>
     fe8:	0f 92       	push	r0
     fea:	cd b7       	in	r28, 0x3d	; 61
     fec:	de b7       	in	r29, 0x3e	; 62
	// if((ltIR_old[PREFILTER_SIZE-1] > (IR_WALL_L_THRESH))|(rtIR_old[PREFILTER_SIZE-1] > (IR_WALL_R_THRESH))){
		char isWander = moveWander();
     fee:	0e 94 97 06 	call	0xd2e	; 0xd2e <moveWander>
		if(isWander){
     ff2:	88 23       	and	r24, r24
     ff4:	09 f0       	breq	.+2      	; 0xff8 <moveWall+0x38>
     ff6:	5d c1       	rjmp	.+698    	; 0x12b2 <moveWall+0x2f2>
		}
	// }
	
	BOOL isLEFT;
	
	if(rtIR>IR_WALL_R_THRESH){
     ff8:	60 91 0e 02 	lds	r22, 0x020E
     ffc:	70 91 0f 02 	lds	r23, 0x020F
    1000:	80 91 10 02 	lds	r24, 0x0210
    1004:	90 91 11 02 	lds	r25, 0x0211
    1008:	20 e0       	ldi	r18, 0x00	; 0
    100a:	30 e0       	ldi	r19, 0x00	; 0
    100c:	40 ea       	ldi	r20, 0xA0	; 160
    100e:	51 e4       	ldi	r21, 0x41	; 65
    1010:	0e 94 1f 21 	call	0x423e	; 0x423e <__gesf2>
    1014:	18 16       	cp	r1, r24
    1016:	64 f4       	brge	.+24     	; 0x1030 <moveWall+0x70>
		rtIR = IR_WALL_R_THRESH-15;
    1018:	80 e0       	ldi	r24, 0x00	; 0
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	a0 ea       	ldi	r26, 0xA0	; 160
    101e:	b0 e4       	ldi	r27, 0x40	; 64
    1020:	80 93 0e 02 	sts	0x020E, r24
    1024:	90 93 0f 02 	sts	0x020F, r25
    1028:	a0 93 10 02 	sts	0x0210, r26
    102c:	b0 93 11 02 	sts	0x0211, r27
		isLEFT = 0;
	}
	if(ltIR>IR_WALL_L_THRESH){
    1030:	60 91 0a 02 	lds	r22, 0x020A
    1034:	70 91 0b 02 	lds	r23, 0x020B
    1038:	80 91 0c 02 	lds	r24, 0x020C
    103c:	90 91 0d 02 	lds	r25, 0x020D
    1040:	20 e0       	ldi	r18, 0x00	; 0
    1042:	30 e0       	ldi	r19, 0x00	; 0
    1044:	40 ea       	ldi	r20, 0xA0	; 160
    1046:	51 e4       	ldi	r21, 0x41	; 65
    1048:	0e 94 1f 21 	call	0x423e	; 0x423e <__gesf2>
    104c:	18 16       	cp	r1, r24
    104e:	14 f0       	brlt	.+4      	; 0x1054 <moveWall+0x94>
    1050:	cc 24       	eor	r12, r12
    1052:	0e c0       	rjmp	.+28     	; 0x1070 <moveWall+0xb0>
		ltIR = IR_WALL_L_THRESH-15;
    1054:	80 e0       	ldi	r24, 0x00	; 0
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	a0 ea       	ldi	r26, 0xA0	; 160
    105a:	b0 e4       	ldi	r27, 0x40	; 64
    105c:	80 93 0a 02 	sts	0x020A, r24
    1060:	90 93 0b 02 	sts	0x020B, r25
    1064:	a0 93 0c 02 	sts	0x020C, r26
    1068:	b0 93 0d 02 	sts	0x020D, r27
    106c:	cc 24       	eor	r12, r12
    106e:	c3 94       	inc	r12
		isLEFT = 1;
	}
	
	float error;
	if(bkIR < IR_WALL_B_THRESH)
    1070:	e0 90 16 02 	lds	r14, 0x0216
    1074:	f0 90 17 02 	lds	r15, 0x0217
    1078:	00 91 18 02 	lds	r16, 0x0218
    107c:	10 91 19 02 	lds	r17, 0x0219
    1080:	c8 01       	movw	r24, r16
    1082:	b7 01       	movw	r22, r14
    1084:	20 e0       	ldi	r18, 0x00	; 0
    1086:	30 e0       	ldi	r19, 0x00	; 0
    1088:	48 ec       	ldi	r20, 0xC8	; 200
    108a:	51 e4       	ldi	r21, 0x41	; 65
    108c:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
    1090:	88 23       	and	r24, r24
    1092:	84 f5       	brge	.+96     	; 0x10f4 <moveWall+0x134>
	{
		if (isLEFT)
    1094:	cc 20       	and	r12, r12
    1096:	89 f0       	breq	.+34     	; 0x10ba <moveWall+0xfa>
		{
			error = rtIR - (ltIR + bkIR*bkIR);
    1098:	c8 01       	movw	r24, r16
    109a:	b7 01       	movw	r22, r14
    109c:	a8 01       	movw	r20, r16
    109e:	97 01       	movw	r18, r14
    10a0:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__mulsf3>
    10a4:	20 91 0a 02 	lds	r18, 0x020A
    10a8:	30 91 0b 02 	lds	r19, 0x020B
    10ac:	40 91 0c 02 	lds	r20, 0x020C
    10b0:	50 91 0d 02 	lds	r21, 0x020D
    10b4:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <__addsf3>
    10b8:	12 c0       	rjmp	.+36     	; 0x10de <moveWall+0x11e>
		}
		else 
		{
		//IR_B_KICK
			error = rtIR - (ltIR - bkIR*bkIR);
    10ba:	c8 01       	movw	r24, r16
    10bc:	b7 01       	movw	r22, r14
    10be:	a8 01       	movw	r20, r16
    10c0:	97 01       	movw	r18, r14
    10c2:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__mulsf3>
    10c6:	9b 01       	movw	r18, r22
    10c8:	ac 01       	movw	r20, r24
    10ca:	60 91 0a 02 	lds	r22, 0x020A
    10ce:	70 91 0b 02 	lds	r23, 0x020B
    10d2:	80 91 0c 02 	lds	r24, 0x020C
    10d6:	90 91 0d 02 	lds	r25, 0x020D
    10da:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <__subsf3>
    10de:	9b 01       	movw	r18, r22
    10e0:	ac 01       	movw	r20, r24
    10e2:	60 91 0e 02 	lds	r22, 0x020E
    10e6:	70 91 0f 02 	lds	r23, 0x020F
    10ea:	80 91 10 02 	lds	r24, 0x0210
    10ee:	90 91 11 02 	lds	r25, 0x0211
    10f2:	10 c0       	rjmp	.+32     	; 0x1114 <moveWall+0x154>
		}
	}
	else 
	{
		error = rtIR - ltIR;
    10f4:	60 91 0e 02 	lds	r22, 0x020E
    10f8:	70 91 0f 02 	lds	r23, 0x020F
    10fc:	80 91 10 02 	lds	r24, 0x0210
    1100:	90 91 11 02 	lds	r25, 0x0211
    1104:	20 91 0a 02 	lds	r18, 0x020A
    1108:	30 91 0b 02 	lds	r19, 0x020B
    110c:	40 91 0c 02 	lds	r20, 0x020C
    1110:	50 91 0d 02 	lds	r21, 0x020D
    1114:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <__subsf3>
    1118:	6d 83       	std	Y+5, r22	; 0x05
    111a:	97 2e       	mov	r9, r23
    111c:	1c 01       	movw	r2, r24
	}

	
	float effort = pidController(error, 0);
    111e:	2d 81       	ldd	r18, Y+5	; 0x05
    1120:	37 2f       	mov	r19, r23
    1122:	b9 01       	movw	r22, r18
    1124:	40 e0       	ldi	r20, 0x00	; 0
    1126:	0e 94 29 04 	call	0x852	; 0x852 <pidController>
    112a:	2b 01       	movw	r4, r22
    112c:	3c 01       	movw	r6, r24
	if((abs(effort) > MAX_EFFORT)&(effort!=0)){
    112e:	0e 94 3c 20 	call	0x4078	; 0x4078 <__fixsfsi>
    1132:	8b 01       	movw	r16, r22
    1134:	77 ff       	sbrs	r23, 7
    1136:	03 c0       	rjmp	.+6      	; 0x113e <moveWall+0x17e>
    1138:	10 95       	com	r17
    113a:	01 95       	neg	r16
    113c:	1f 4f       	sbci	r17, 0xFF	; 255
    113e:	05 36       	cpi	r16, 0x65	; 101
    1140:	11 05       	cpc	r17, r1
    1142:	fc f0       	brlt	.+62     	; 0x1182 <moveWall+0x1c2>
    1144:	c3 01       	movw	r24, r6
    1146:	b2 01       	movw	r22, r4
    1148:	20 e0       	ldi	r18, 0x00	; 0
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	40 e0       	ldi	r20, 0x00	; 0
    114e:	50 e0       	ldi	r21, 0x00	; 0
    1150:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <__cmpsf2>
    1154:	88 23       	and	r24, r24
    1156:	a9 f0       	breq	.+42     	; 0x1182 <moveWall+0x1c2>
		effort = MAX_EFFORT*(effort/abs(effort));
    1158:	b8 01       	movw	r22, r16
    115a:	88 27       	eor	r24, r24
    115c:	77 fd       	sbrc	r23, 7
    115e:	80 95       	com	r24
    1160:	98 2f       	mov	r25, r24
    1162:	0e 94 6f 20 	call	0x40de	; 0x40de <__floatsisf>
    1166:	9b 01       	movw	r18, r22
    1168:	ac 01       	movw	r20, r24
    116a:	c3 01       	movw	r24, r6
    116c:	b2 01       	movw	r22, r4
    116e:	0e 94 d4 1f 	call	0x3fa8	; 0x3fa8 <__divsf3>
    1172:	20 e0       	ldi	r18, 0x00	; 0
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	48 ec       	ldi	r20, 0xC8	; 200
    1178:	52 e4       	ldi	r21, 0x42	; 66
    117a:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__mulsf3>
    117e:	2b 01       	movw	r4, r22
    1180:	3c 01       	movw	r6, r24
	}
	
	float stepper_speed_L = MAX_SPEED/2 + (MAX_SPEED/2)*(effort/MAX_EFFORT);
    1182:	c3 01       	movw	r24, r6
    1184:	b2 01       	movw	r22, r4
    1186:	20 e0       	ldi	r18, 0x00	; 0
    1188:	30 e0       	ldi	r19, 0x00	; 0
    118a:	48 ec       	ldi	r20, 0xC8	; 200
    118c:	52 e4       	ldi	r21, 0x42	; 66
    118e:	0e 94 d4 1f 	call	0x3fa8	; 0x3fa8 <__divsf3>
    1192:	6b 01       	movw	r12, r22
    1194:	7c 01       	movw	r14, r24
	float stepper_speed_R = MAX_SPEED/2 - (MAX_SPEED/2)*(effort/MAX_EFFORT);
	
	// Move with wall
	STEPPER_move_stnb( STEPPER_BOTH, 
    1196:	8d b7       	in	r24, 0x3d	; 61
    1198:	9e b7       	in	r25, 0x3e	; 62
    119a:	09 97       	sbiw	r24, 0x09	; 9
    119c:	0f b6       	in	r0, 0x3f	; 63
    119e:	f8 94       	cli
    11a0:	9e bf       	out	0x3e, r25	; 62
    11a2:	0f be       	out	0x3f, r0	; 63
    11a4:	8d bf       	out	0x3d, r24	; 61
    11a6:	0d b7       	in	r16, 0x3d	; 61
    11a8:	1e b7       	in	r17, 0x3e	; 62
    11aa:	0f 5f       	subi	r16, 0xFF	; 255
    11ac:	1f 4f       	sbci	r17, 0xFF	; 255
    11ae:	c7 01       	movw	r24, r14
    11b0:	b6 01       	movw	r22, r12
    11b2:	20 e0       	ldi	r18, 0x00	; 0
    11b4:	30 e0       	ldi	r19, 0x00	; 0
    11b6:	48 ec       	ldi	r20, 0xC8	; 200
    11b8:	52 e4       	ldi	r21, 0x42	; 66
    11ba:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__mulsf3>
    11be:	20 e0       	ldi	r18, 0x00	; 0
    11c0:	30 e0       	ldi	r19, 0x00	; 0
    11c2:	48 ec       	ldi	r20, 0xC8	; 200
    11c4:	52 e4       	ldi	r21, 0x42	; 66
    11c6:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <__addsf3>
    11ca:	0e 94 41 20 	call	0x4082	; 0x4082 <__fixunssfsi>
    11ce:	69 83       	std	Y+1, r22	; 0x01
    11d0:	7a 83       	std	Y+2, r23	; 0x02
    11d2:	8b 83       	std	Y+3, r24	; 0x03
    11d4:	9c 83       	std	Y+4, r25	; 0x04
    11d6:	82 e3       	ldi	r24, 0x32	; 50
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	d8 01       	movw	r26, r16
    11dc:	8d 93       	st	X+, r24
    11de:	9c 93       	st	X, r25
    11e0:	c7 01       	movw	r24, r14
    11e2:	b6 01       	movw	r22, r12
    11e4:	20 e0       	ldi	r18, 0x00	; 0
    11e6:	30 e0       	ldi	r19, 0x00	; 0
    11e8:	48 ec       	ldi	r20, 0xC8	; 200
    11ea:	52 ec       	ldi	r21, 0xC2	; 194
    11ec:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__mulsf3>
    11f0:	20 e0       	ldi	r18, 0x00	; 0
    11f2:	30 e0       	ldi	r19, 0x00	; 0
    11f4:	48 ec       	ldi	r20, 0xC8	; 200
    11f6:	52 e4       	ldi	r21, 0x42	; 66
    11f8:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <__addsf3>
    11fc:	0e 94 41 20 	call	0x4082	; 0x4082 <__fixunssfsi>
    1200:	f8 01       	movw	r30, r16
    1202:	73 83       	std	Z+3, r23	; 0x03
    1204:	62 83       	std	Z+2, r22	; 0x02
    1206:	82 ec       	ldi	r24, 0xC2	; 194
    1208:	91 e0       	ldi	r25, 0x01	; 1
    120a:	95 83       	std	Z+5, r25	; 0x05
    120c:	84 83       	std	Z+4, r24	; 0x04
    120e:	16 82       	std	Z+6, r1	; 0x06
    1210:	10 86       	std	Z+8, r1	; 0x08
    1212:	17 82       	std	Z+7, r1	; 0x07
    1214:	81 e0       	ldi	r24, 0x01	; 1
    1216:	62 e0       	ldi	r22, 0x02	; 2
    1218:	41 e0       	ldi	r20, 0x01	; 1
    121a:	22 e3       	ldi	r18, 0x32	; 50
    121c:	30 e0       	ldi	r19, 0x00	; 0
    121e:	09 81       	ldd	r16, Y+1	; 0x01
    1220:	1a 81       	ldd	r17, Y+2	; 0x02
    1222:	a2 ec       	ldi	r26, 0xC2	; 194
    1224:	ea 2e       	mov	r14, r26
    1226:	a1 e0       	ldi	r26, 0x01	; 1
    1228:	fa 2e       	mov	r15, r26
    122a:	cc 24       	eor	r12, r12
    122c:	aa 24       	eor	r10, r10
    122e:	bb 24       	eor	r11, r11
    1230:	88 24       	eor	r8, r8
    1232:	83 94       	inc	r8
    1234:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <STEPPER_move>
	STEPPER_REV, 50, stepper_speed_L, 450, STEPPER_BRK_OFF, // Left
	STEPPER_REV, 50, stepper_speed_R, 450, STEPPER_BRK_OFF ); // Right
	
	LCD_clear();
    1238:	8d b7       	in	r24, 0x3d	; 61
    123a:	9e b7       	in	r25, 0x3e	; 62
    123c:	09 96       	adiw	r24, 0x09	; 9
    123e:	0f b6       	in	r0, 0x3f	; 63
    1240:	f8 94       	cli
    1242:	9e bf       	out	0x3e, r25	; 62
    1244:	0f be       	out	0x3f, r0	; 63
    1246:	8d bf       	out	0x3d, r24	; 61
    1248:	0e 94 b4 0c 	call	0x1968	; 0x1968 <LCD_clear>
	LCD_printf("bkIR: %3.2f\nmoveWall\nError: %3f\nEffort: %3f\n", bkIR, error, effort);
    124c:	ad b7       	in	r26, 0x3d	; 61
    124e:	be b7       	in	r27, 0x3e	; 62
    1250:	1e 97       	sbiw	r26, 0x0e	; 14
    1252:	0f b6       	in	r0, 0x3f	; 63
    1254:	f8 94       	cli
    1256:	be bf       	out	0x3e, r27	; 62
    1258:	0f be       	out	0x3f, r0	; 63
    125a:	ad bf       	out	0x3d, r26	; 61
    125c:	ed b7       	in	r30, 0x3d	; 61
    125e:	fe b7       	in	r31, 0x3e	; 62
    1260:	31 96       	adiw	r30, 0x01	; 1
    1262:	82 e5       	ldi	r24, 0x52	; 82
    1264:	91 e0       	ldi	r25, 0x01	; 1
    1266:	12 96       	adiw	r26, 0x02	; 2
    1268:	9c 93       	st	X, r25
    126a:	8e 93       	st	-X, r24
    126c:	11 97       	sbiw	r26, 0x01	; 1
    126e:	80 91 16 02 	lds	r24, 0x0216
    1272:	90 91 17 02 	lds	r25, 0x0217
    1276:	a0 91 18 02 	lds	r26, 0x0218
    127a:	b0 91 19 02 	lds	r27, 0x0219
    127e:	82 83       	std	Z+2, r24	; 0x02
    1280:	93 83       	std	Z+3, r25	; 0x03
    1282:	a4 83       	std	Z+4, r26	; 0x04
    1284:	b5 83       	std	Z+5, r27	; 0x05
    1286:	2d 81       	ldd	r18, Y+5	; 0x05
    1288:	39 2d       	mov	r19, r9
    128a:	c9 01       	movw	r24, r18
    128c:	d1 01       	movw	r26, r2
    128e:	86 83       	std	Z+6, r24	; 0x06
    1290:	97 83       	std	Z+7, r25	; 0x07
    1292:	a0 87       	std	Z+8, r26	; 0x08
    1294:	b1 87       	std	Z+9, r27	; 0x09
    1296:	42 86       	std	Z+10, r4	; 0x0a
    1298:	53 86       	std	Z+11, r5	; 0x0b
    129a:	64 86       	std	Z+12, r6	; 0x0c
    129c:	75 86       	std	Z+13, r7	; 0x0d
    129e:	0e 94 a4 29 	call	0x5348	; 0x5348 <printf>
    12a2:	ed b7       	in	r30, 0x3d	; 61
    12a4:	fe b7       	in	r31, 0x3e	; 62
    12a6:	3e 96       	adiw	r30, 0x0e	; 14
    12a8:	0f b6       	in	r0, 0x3f	; 63
    12aa:	f8 94       	cli
    12ac:	fe bf       	out	0x3e, r31	; 62
    12ae:	0f be       	out	0x3f, r0	; 63
    12b0:	ed bf       	out	0x3d, r30	; 61
	
}
    12b2:	0f 90       	pop	r0
    12b4:	0f 90       	pop	r0
    12b6:	0f 90       	pop	r0
    12b8:	0f 90       	pop	r0
    12ba:	0f 90       	pop	r0
    12bc:	cf 91       	pop	r28
    12be:	df 91       	pop	r29
    12c0:	1f 91       	pop	r17
    12c2:	0f 91       	pop	r16
    12c4:	ff 90       	pop	r15
    12c6:	ef 90       	pop	r14
    12c8:	df 90       	pop	r13
    12ca:	cf 90       	pop	r12
    12cc:	bf 90       	pop	r11
    12ce:	af 90       	pop	r10
    12d0:	9f 90       	pop	r9
    12d2:	8f 90       	pop	r8
    12d4:	7f 90       	pop	r7
    12d6:	6f 90       	pop	r6
    12d8:	5f 90       	pop	r5
    12da:	4f 90       	pop	r4
    12dc:	3f 90       	pop	r3
    12de:	2f 90       	pop	r2
    12e0:	08 95       	ret

000012e2 <CBOT_main>:
void CBOT_main( void )
{
	// Initialize variables
	int btnValue=0;//value of button pushed

	ATopstat = ATTINY_open();//open the tiny microcontroller
    12e2:	0e 94 cf 12 	call	0x259e	; 0x259e <ATTINY_open>
    12e6:	90 93 76 04 	sts	0x0476, r25
    12ea:	80 93 75 04 	sts	0x0475, r24
	LEopstat = LED_open(); //open the LED module
    12ee:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <LED_open>
    12f2:	90 93 fc 03 	sts	0x03FC, r25
    12f6:	80 93 fb 03 	sts	0x03FB, r24
	LCopstat = LCD_open(); //open the LCD module
    12fa:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <LCD_open>
    12fe:	90 93 82 03 	sts	0x0382, r25
    1302:	80 93 81 03 	sts	0x0381, r24
	STEPPER_open(); // Open STEPPER module for use
    1306:	0e 94 3c 10 	call	0x2078	; 0x2078 <STEPPER_open>
	SPKR_open(SPKR_BEEP_MODE);//open the speaker in beep mode
    130a:	81 e0       	ldi	r24, 0x01	; 1
    130c:	0e 94 c0 0e 	call	0x1d80	; 0x1d80 <SPKR_open>
	
	LED_open();
    1310:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <LED_open>
	I2C_open();
    1314:	0e 94 29 14 	call	0x2852	; 0x2852 <I2C_open>
	ADC_open();//open the ADC module
    1318:	0e 94 3e 0c 	call	0x187c	; 0x187c <ADC_open>
 	ADC_set_VREF( ADC_VREF_AVCC );// Set the Voltage Reference first so VREF=5V.
    131c:	81 e0       	ldi	r24, 0x01	; 1
    131e:	0e 94 a0 0c 	call	0x1940	; 0x1940 <ADC_set_VREF>


	checkIR();
    1322:	0e 94 11 05 	call	0xa22	; 0xa22 <checkIR>
	prefilter(1);
    1326:	81 e0       	ldi	r24, 0x01	; 1
    1328:	0e 94 50 03 	call	0x6a0	; 0x6a0 <prefilter>

	// Infinite loop
	while (1)
    {
		checkIR();
    132c:	0e 94 11 05 	call	0xa22	; 0xa22 <checkIR>
		// prefilter(0);
		moveWall();
    1330:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <moveWall>
    1334:	fb cf       	rjmp	.-10     	; 0x132c <CBOT_main+0x4a>

00001336 <get_ambient_temp>:
* Output Return:	I2C_STATUS
* Overview:			Reads the ambient temperature
********************************************************************/

I2C_STATUS get_ambient_temp( unsigned char *ambient_temp )
{
    1336:	1f 93       	push	r17
    1338:	cf 93       	push	r28
    133a:	df 93       	push	r29
    133c:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    133e:	88 e6       	ldi	r24, 0x68	; 104
    1340:	60 e0       	ldi	r22, 0x00	; 0
    1342:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    1346:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
    1348:	88 23       	and	r24, r24
    134a:	a1 f4       	brne	.+40     	; 0x1374 <get_ambient_temp+0x3e>
	{

		// Send the register value (being 1).  This is
		// the register that contains the ambient temperature.
		i2c_stat = I2C_MSTR_send( __TPA81_AMBIENT );
    134c:	81 e0       	ldi	r24, 0x01	; 1
    134e:	0e 94 a9 13 	call	0x2752	; 0x2752 <I2C_MSTR_send>
    1352:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
    1354:	88 23       	and	r24, r24
    1356:	71 f4       	brne	.+28     	; 0x1374 <get_ambient_temp+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    1358:	88 e6       	ldi	r24, 0x68	; 104
    135a:	61 e0       	ldi	r22, 0x01	; 1
    135c:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    1360:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
    1362:	88 23       	and	r24, r24
    1364:	39 f4       	brne	.+14     	; 0x1374 <get_ambient_temp+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( ambient_temp, FALSE );
    1366:	ce 01       	movw	r24, r28
    1368:	60 e0       	ldi	r22, 0x00	; 0
    136a:	0e 94 7d 13 	call	0x26fa	; 0x26fa <I2C_MSTR_get>
    136e:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
    1370:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*ambient_temp = 0;
    1372:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
    1374:	0e 94 15 14 	call	0x282a	; 0x282a <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_ambient_temp()
    1378:	81 2f       	mov	r24, r17
    137a:	df 91       	pop	r29
    137c:	cf 91       	pop	r28
    137e:	1f 91       	pop	r17
    1380:	08 95       	ret

00001382 <read_pixel_8>:
	return i2c_stat;
}

// get pixel eight
I2C_STATUS read_pixel_8( unsigned char *pixel_8)
{
    1382:	1f 93       	push	r17
    1384:	cf 93       	push	r28
    1386:	df 93       	push	r29
    1388:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    138a:	88 e6       	ldi	r24, 0x68	; 104
    138c:	60 e0       	ldi	r22, 0x00	; 0
    138e:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    1392:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    1394:	88 23       	and	r24, r24
    1396:	a1 f4       	brne	.+40     	; 0x13c0 <read_pixel_8+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX8 );
    1398:	89 e0       	ldi	r24, 0x09	; 9
    139a:	0e 94 a9 13 	call	0x2752	; 0x2752 <I2C_MSTR_send>
    139e:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    13a0:	88 23       	and	r24, r24
    13a2:	71 f4       	brne	.+28     	; 0x13c0 <read_pixel_8+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    13a4:	88 e6       	ldi	r24, 0x68	; 104
    13a6:	61 e0       	ldi	r22, 0x01	; 1
    13a8:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    13ac:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    13ae:	88 23       	and	r24, r24
    13b0:	39 f4       	brne	.+14     	; 0x13c0 <read_pixel_8+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_8, FALSE );
    13b2:	ce 01       	movw	r24, r28
    13b4:	60 e0       	ldi	r22, 0x00	; 0
    13b6:	0e 94 7d 13 	call	0x26fa	; 0x26fa <I2C_MSTR_get>
    13ba:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    13bc:	81 11       	cpse	r24, r1
					*pixel_8 = 0;
    13be:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    13c0:	0e 94 15 14 	call	0x282a	; 0x282a <I2C_MSTR_stop>
	return i2c_stat;
}
    13c4:	81 2f       	mov	r24, r17
    13c6:	df 91       	pop	r29
    13c8:	cf 91       	pop	r28
    13ca:	1f 91       	pop	r17
    13cc:	08 95       	ret

000013ce <read_pixel_7>:
	return i2c_stat;
}

// get pixel seven
I2C_STATUS read_pixel_7( unsigned char *pixel_7)
{
    13ce:	1f 93       	push	r17
    13d0:	cf 93       	push	r28
    13d2:	df 93       	push	r29
    13d4:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    13d6:	88 e6       	ldi	r24, 0x68	; 104
    13d8:	60 e0       	ldi	r22, 0x00	; 0
    13da:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    13de:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    13e0:	88 23       	and	r24, r24
    13e2:	a1 f4       	brne	.+40     	; 0x140c <read_pixel_7+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX7 );
    13e4:	88 e0       	ldi	r24, 0x08	; 8
    13e6:	0e 94 a9 13 	call	0x2752	; 0x2752 <I2C_MSTR_send>
    13ea:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    13ec:	88 23       	and	r24, r24
    13ee:	71 f4       	brne	.+28     	; 0x140c <read_pixel_7+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    13f0:	88 e6       	ldi	r24, 0x68	; 104
    13f2:	61 e0       	ldi	r22, 0x01	; 1
    13f4:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    13f8:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    13fa:	88 23       	and	r24, r24
    13fc:	39 f4       	brne	.+14     	; 0x140c <read_pixel_7+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_7, FALSE );
    13fe:	ce 01       	movw	r24, r28
    1400:	60 e0       	ldi	r22, 0x00	; 0
    1402:	0e 94 7d 13 	call	0x26fa	; 0x26fa <I2C_MSTR_get>
    1406:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    1408:	81 11       	cpse	r24, r1
					*pixel_7 = 0;
    140a:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    140c:	0e 94 15 14 	call	0x282a	; 0x282a <I2C_MSTR_stop>
	return i2c_stat;
}
    1410:	81 2f       	mov	r24, r17
    1412:	df 91       	pop	r29
    1414:	cf 91       	pop	r28
    1416:	1f 91       	pop	r17
    1418:	08 95       	ret

0000141a <read_pixel_6>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel six
I2C_STATUS read_pixel_6( unsigned char *pixel_6)
{
    141a:	1f 93       	push	r17
    141c:	cf 93       	push	r28
    141e:	df 93       	push	r29
    1420:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    1422:	88 e6       	ldi	r24, 0x68	; 104
    1424:	60 e0       	ldi	r22, 0x00	; 0
    1426:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    142a:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    142c:	88 23       	and	r24, r24
    142e:	a1 f4       	brne	.+40     	; 0x1458 <read_pixel_6+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX6 );
    1430:	87 e0       	ldi	r24, 0x07	; 7
    1432:	0e 94 a9 13 	call	0x2752	; 0x2752 <I2C_MSTR_send>
    1436:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    1438:	88 23       	and	r24, r24
    143a:	71 f4       	brne	.+28     	; 0x1458 <read_pixel_6+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    143c:	88 e6       	ldi	r24, 0x68	; 104
    143e:	61 e0       	ldi	r22, 0x01	; 1
    1440:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    1444:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    1446:	88 23       	and	r24, r24
    1448:	39 f4       	brne	.+14     	; 0x1458 <read_pixel_6+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_6, FALSE );
    144a:	ce 01       	movw	r24, r28
    144c:	60 e0       	ldi	r22, 0x00	; 0
    144e:	0e 94 7d 13 	call	0x26fa	; 0x26fa <I2C_MSTR_get>
    1452:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    1454:	81 11       	cpse	r24, r1
					*pixel_6 = 0;
    1456:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    1458:	0e 94 15 14 	call	0x282a	; 0x282a <I2C_MSTR_stop>
	return i2c_stat;
}
    145c:	81 2f       	mov	r24, r17
    145e:	df 91       	pop	r29
    1460:	cf 91       	pop	r28
    1462:	1f 91       	pop	r17
    1464:	08 95       	ret

00001466 <read_pixel_5>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel five
I2C_STATUS read_pixel_5( unsigned char *pixel_5)
{
    1466:	1f 93       	push	r17
    1468:	cf 93       	push	r28
    146a:	df 93       	push	r29
    146c:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    146e:	88 e6       	ldi	r24, 0x68	; 104
    1470:	60 e0       	ldi	r22, 0x00	; 0
    1472:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    1476:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    1478:	88 23       	and	r24, r24
    147a:	a1 f4       	brne	.+40     	; 0x14a4 <read_pixel_5+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX5 );
    147c:	86 e0       	ldi	r24, 0x06	; 6
    147e:	0e 94 a9 13 	call	0x2752	; 0x2752 <I2C_MSTR_send>
    1482:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    1484:	88 23       	and	r24, r24
    1486:	71 f4       	brne	.+28     	; 0x14a4 <read_pixel_5+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    1488:	88 e6       	ldi	r24, 0x68	; 104
    148a:	61 e0       	ldi	r22, 0x01	; 1
    148c:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    1490:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    1492:	88 23       	and	r24, r24
    1494:	39 f4       	brne	.+14     	; 0x14a4 <read_pixel_5+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_5, FALSE );
    1496:	ce 01       	movw	r24, r28
    1498:	60 e0       	ldi	r22, 0x00	; 0
    149a:	0e 94 7d 13 	call	0x26fa	; 0x26fa <I2C_MSTR_get>
    149e:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    14a0:	81 11       	cpse	r24, r1
					*pixel_5 = 0;
    14a2:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    14a4:	0e 94 15 14 	call	0x282a	; 0x282a <I2C_MSTR_stop>
	return i2c_stat;
}
    14a8:	81 2f       	mov	r24, r17
    14aa:	df 91       	pop	r29
    14ac:	cf 91       	pop	r28
    14ae:	1f 91       	pop	r17
    14b0:	08 95       	ret

000014b2 <read_pixel_4>:
	return i2c_stat;
}

// get pixel four
I2C_STATUS read_pixel_4( unsigned char *pixel_4)
{
    14b2:	1f 93       	push	r17
    14b4:	cf 93       	push	r28
    14b6:	df 93       	push	r29
    14b8:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    14ba:	88 e6       	ldi	r24, 0x68	; 104
    14bc:	60 e0       	ldi	r22, 0x00	; 0
    14be:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    14c2:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    14c4:	88 23       	and	r24, r24
    14c6:	a1 f4       	brne	.+40     	; 0x14f0 <read_pixel_4+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX4 );
    14c8:	85 e0       	ldi	r24, 0x05	; 5
    14ca:	0e 94 a9 13 	call	0x2752	; 0x2752 <I2C_MSTR_send>
    14ce:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    14d0:	88 23       	and	r24, r24
    14d2:	71 f4       	brne	.+28     	; 0x14f0 <read_pixel_4+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    14d4:	88 e6       	ldi	r24, 0x68	; 104
    14d6:	61 e0       	ldi	r22, 0x01	; 1
    14d8:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    14dc:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    14de:	88 23       	and	r24, r24
    14e0:	39 f4       	brne	.+14     	; 0x14f0 <read_pixel_4+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_4, FALSE );
    14e2:	ce 01       	movw	r24, r28
    14e4:	60 e0       	ldi	r22, 0x00	; 0
    14e6:	0e 94 7d 13 	call	0x26fa	; 0x26fa <I2C_MSTR_get>
    14ea:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    14ec:	81 11       	cpse	r24, r1
					*pixel_4 = 0;
    14ee:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    14f0:	0e 94 15 14 	call	0x282a	; 0x282a <I2C_MSTR_stop>
	return i2c_stat;
}
    14f4:	81 2f       	mov	r24, r17
    14f6:	df 91       	pop	r29
    14f8:	cf 91       	pop	r28
    14fa:	1f 91       	pop	r17
    14fc:	08 95       	ret

000014fe <read_pixel_3>:
	return i2c_stat;
}

// get pixel three
I2C_STATUS read_pixel_3( unsigned char *pixel_3)
{
    14fe:	1f 93       	push	r17
    1500:	cf 93       	push	r28
    1502:	df 93       	push	r29
    1504:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    1506:	88 e6       	ldi	r24, 0x68	; 104
    1508:	60 e0       	ldi	r22, 0x00	; 0
    150a:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    150e:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    1510:	88 23       	and	r24, r24
    1512:	a1 f4       	brne	.+40     	; 0x153c <read_pixel_3+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX3 );
    1514:	84 e0       	ldi	r24, 0x04	; 4
    1516:	0e 94 a9 13 	call	0x2752	; 0x2752 <I2C_MSTR_send>
    151a:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    151c:	88 23       	and	r24, r24
    151e:	71 f4       	brne	.+28     	; 0x153c <read_pixel_3+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    1520:	88 e6       	ldi	r24, 0x68	; 104
    1522:	61 e0       	ldi	r22, 0x01	; 1
    1524:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    1528:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    152a:	88 23       	and	r24, r24
    152c:	39 f4       	brne	.+14     	; 0x153c <read_pixel_3+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_3, FALSE );
    152e:	ce 01       	movw	r24, r28
    1530:	60 e0       	ldi	r22, 0x00	; 0
    1532:	0e 94 7d 13 	call	0x26fa	; 0x26fa <I2C_MSTR_get>
    1536:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    1538:	81 11       	cpse	r24, r1
					*pixel_3 = 0;
    153a:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    153c:	0e 94 15 14 	call	0x282a	; 0x282a <I2C_MSTR_stop>
	return i2c_stat;
}
    1540:	81 2f       	mov	r24, r17
    1542:	df 91       	pop	r29
    1544:	cf 91       	pop	r28
    1546:	1f 91       	pop	r17
    1548:	08 95       	ret

0000154a <read_pixel_2>:
}


// get pixel two
I2C_STATUS read_pixel_2( unsigned char *pixel_2)
{
    154a:	1f 93       	push	r17
    154c:	cf 93       	push	r28
    154e:	df 93       	push	r29
    1550:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    1552:	88 e6       	ldi	r24, 0x68	; 104
    1554:	60 e0       	ldi	r22, 0x00	; 0
    1556:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    155a:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    155c:	88 23       	and	r24, r24
    155e:	a1 f4       	brne	.+40     	; 0x1588 <read_pixel_2+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX2 );
    1560:	83 e0       	ldi	r24, 0x03	; 3
    1562:	0e 94 a9 13 	call	0x2752	; 0x2752 <I2C_MSTR_send>
    1566:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    1568:	88 23       	and	r24, r24
    156a:	71 f4       	brne	.+28     	; 0x1588 <read_pixel_2+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    156c:	88 e6       	ldi	r24, 0x68	; 104
    156e:	61 e0       	ldi	r22, 0x01	; 1
    1570:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    1574:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    1576:	88 23       	and	r24, r24
    1578:	39 f4       	brne	.+14     	; 0x1588 <read_pixel_2+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_2, FALSE );
    157a:	ce 01       	movw	r24, r28
    157c:	60 e0       	ldi	r22, 0x00	; 0
    157e:	0e 94 7d 13 	call	0x26fa	; 0x26fa <I2C_MSTR_get>
    1582:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    1584:	81 11       	cpse	r24, r1
					*pixel_2 = 0;
    1586:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    1588:	0e 94 15 14 	call	0x282a	; 0x282a <I2C_MSTR_stop>
	return i2c_stat;
}
    158c:	81 2f       	mov	r24, r17
    158e:	df 91       	pop	r29
    1590:	cf 91       	pop	r28
    1592:	1f 91       	pop	r17
    1594:	08 95       	ret

00001596 <read_pixel_1>:
* Output Return:	I2C_STATUS
* Overview:			These are several pixel read values for each of the pixels
********************************************************************/
// get pixel one
I2C_STATUS read_pixel_1( unsigned char *pixel_1)
{
    1596:	1f 93       	push	r17
    1598:	cf 93       	push	r28
    159a:	df 93       	push	r29
    159c:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    159e:	88 e6       	ldi	r24, 0x68	; 104
    15a0:	60 e0       	ldi	r22, 0x00	; 0
    15a2:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    15a6:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    15a8:	88 23       	and	r24, r24
    15aa:	a1 f4       	brne	.+40     	; 0x15d4 <read_pixel_1+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX1 );
    15ac:	82 e0       	ldi	r24, 0x02	; 2
    15ae:	0e 94 a9 13 	call	0x2752	; 0x2752 <I2C_MSTR_send>
    15b2:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    15b4:	88 23       	and	r24, r24
    15b6:	71 f4       	brne	.+28     	; 0x15d4 <read_pixel_1+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    15b8:	88 e6       	ldi	r24, 0x68	; 104
    15ba:	61 e0       	ldi	r22, 0x01	; 1
    15bc:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    15c0:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    15c2:	88 23       	and	r24, r24
    15c4:	39 f4       	brne	.+14     	; 0x15d4 <read_pixel_1+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_1, FALSE );
    15c6:	ce 01       	movw	r24, r28
    15c8:	60 e0       	ldi	r22, 0x00	; 0
    15ca:	0e 94 7d 13 	call	0x26fa	; 0x26fa <I2C_MSTR_get>
    15ce:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    15d0:	81 11       	cpse	r24, r1
					*pixel_1 = 0;
    15d2:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    15d4:	0e 94 15 14 	call	0x282a	; 0x282a <I2C_MSTR_stop>
	return i2c_stat;
}
    15d8:	81 2f       	mov	r24, r17
    15da:	df 91       	pop	r29
    15dc:	cf 91       	pop	r28
    15de:	1f 91       	pop	r17
    15e0:	08 95       	ret

000015e2 <get_revision>:
* Input Variables:	unsigned char revision
* Output Return:	I2C_STATUS
* Overview:			
********************************************************************/
I2C_STATUS get_revision( unsigned char *revision )
{
    15e2:	1f 93       	push	r17
    15e4:	cf 93       	push	r28
    15e6:	df 93       	push	r29
    15e8:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    15ea:	88 e6       	ldi	r24, 0x68	; 104
    15ec:	60 e0       	ldi	r22, 0x00	; 0
    15ee:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    15f2:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
    15f4:	88 23       	and	r24, r24
    15f6:	a1 f4       	brne	.+40     	; 0x1620 <get_revision+0x3e>
	{

		// Send the register value (being 0).  This is
		// the register that contains the software revision.
		i2c_stat = I2C_MSTR_send( __TPA81_REVISION );
    15f8:	80 e0       	ldi	r24, 0x00	; 0
    15fa:	0e 94 a9 13 	call	0x2752	; 0x2752 <I2C_MSTR_send>
    15fe:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
    1600:	88 23       	and	r24, r24
    1602:	71 f4       	brne	.+28     	; 0x1620 <get_revision+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    1604:	88 e6       	ldi	r24, 0x68	; 104
    1606:	61 e0       	ldi	r22, 0x01	; 1
    1608:	0e 94 cf 13 	call	0x279e	; 0x279e <I2C_MSTR_start>
    160c:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
    160e:	88 23       	and	r24, r24
    1610:	39 f4       	brne	.+14     	; 0x1620 <get_revision+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( revision, FALSE );
    1612:	ce 01       	movw	r24, r28
    1614:	60 e0       	ldi	r22, 0x00	; 0
    1616:	0e 94 7d 13 	call	0x26fa	; 0x26fa <I2C_MSTR_get>
    161a:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
    161c:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*revision = 0;
    161e:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
    1620:	0e 94 15 14 	call	0x282a	; 0x282a <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_revision()
    1624:	81 2f       	mov	r24, r17
    1626:	df 91       	pop	r29
    1628:	cf 91       	pop	r28
    162a:	1f 91       	pop	r17
    162c:	08 95       	ret

0000162e <getBackIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
    162e:	81 e0       	ldi	r24, 0x01	; 1
    1630:	0e 94 a0 0c 	call	0x1940	; 0x1940 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel(IRBACK_CHAN);
    1634:	85 e0       	ldi	r24, 0x05	; 5
    1636:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    163a:	0e 94 4c 0c 	call	0x1898	; 0x1898 <ADC_sample>
    163e:	a0 e0       	ldi	r26, 0x00	; 0
    1640:	b0 e0       	ldi	r27, 0x00	; 0
    1642:	bc 01       	movw	r22, r24
    1644:	cd 01       	movw	r24, r26
    1646:	0e 94 6d 20 	call	0x40da	; 0x40da <__floatunsisf>
    164a:	20 e0       	ldi	r18, 0x00	; 0
    164c:	30 e0       	ldi	r19, 0x00	; 0
    164e:	40 ea       	ldi	r20, 0xA0	; 160
    1650:	50 e4       	ldi	r21, 0x40	; 64
    1652:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <__addsf3>
    1656:	9b 01       	movw	r18, r22
    1658:	ac 01       	movw	r20, r24
    165a:	60 e0       	ldi	r22, 0x00	; 0
    165c:	70 e2       	ldi	r23, 0x20	; 32
    165e:	86 e3       	ldi	r24, 0x36	; 54
    1660:	95 e4       	ldi	r25, 0x45	; 69
    1662:	0e 94 d4 1f 	call	0x3fa8	; 0x3fa8 <__divsf3>
    1666:	20 e0       	ldi	r18, 0x00	; 0
    1668:	30 e0       	ldi	r19, 0x00	; 0
    166a:	40 e8       	ldi	r20, 0x80	; 128
    166c:	5f e3       	ldi	r21, 0x3F	; 63
    166e:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
    1672:	08 95       	ret

00001674 <getFrontIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
    1674:	81 e0       	ldi	r24, 0x01	; 1
    1676:	0e 94 a0 0c 	call	0x1940	; 0x1940 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel(IRFRONT_CHAN);
    167a:	87 e0       	ldi	r24, 0x07	; 7
    167c:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    1680:	0e 94 4c 0c 	call	0x1898	; 0x1898 <ADC_sample>
    1684:	a0 e0       	ldi	r26, 0x00	; 0
    1686:	b0 e0       	ldi	r27, 0x00	; 0
    1688:	bc 01       	movw	r22, r24
    168a:	cd 01       	movw	r24, r26
    168c:	0e 94 6d 20 	call	0x40da	; 0x40da <__floatunsisf>
    1690:	20 e0       	ldi	r18, 0x00	; 0
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	40 ea       	ldi	r20, 0xA0	; 160
    1696:	50 e4       	ldi	r21, 0x40	; 64
    1698:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <__addsf3>
    169c:	9b 01       	movw	r18, r22
    169e:	ac 01       	movw	r20, r24
    16a0:	60 e0       	ldi	r22, 0x00	; 0
    16a2:	70 e2       	ldi	r23, 0x20	; 32
    16a4:	86 e3       	ldi	r24, 0x36	; 54
    16a6:	95 e4       	ldi	r25, 0x45	; 69
    16a8:	0e 94 d4 1f 	call	0x3fa8	; 0x3fa8 <__divsf3>
    16ac:	20 e0       	ldi	r18, 0x00	; 0
    16ae:	30 e0       	ldi	r19, 0x00	; 0
    16b0:	40 e8       	ldi	r20, 0x80	; 128
    16b2:	5f e3       	ldi	r21, 0x3F	; 63
    16b4:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
    16b8:	08 95       	ret

000016ba <getRightIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
    16ba:	81 e0       	ldi	r24, 0x01	; 1
    16bc:	0e 94 a0 0c 	call	0x1940	; 0x1940 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
    16c0:	83 e0       	ldi	r24, 0x03	; 3
    16c2:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    16c6:	0e 94 4c 0c 	call	0x1898	; 0x1898 <ADC_sample>
    16ca:	a0 e0       	ldi	r26, 0x00	; 0
    16cc:	b0 e0       	ldi	r27, 0x00	; 0
    16ce:	bc 01       	movw	r22, r24
    16d0:	cd 01       	movw	r24, r26
    16d2:	0e 94 6d 20 	call	0x40da	; 0x40da <__floatunsisf>
    16d6:	20 e0       	ldi	r18, 0x00	; 0
    16d8:	30 e0       	ldi	r19, 0x00	; 0
    16da:	40 ea       	ldi	r20, 0xA0	; 160
    16dc:	50 e4       	ldi	r21, 0x40	; 64
    16de:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <__addsf3>
    16e2:	9b 01       	movw	r18, r22
    16e4:	ac 01       	movw	r20, r24
    16e6:	60 e0       	ldi	r22, 0x00	; 0
    16e8:	70 e2       	ldi	r23, 0x20	; 32
    16ea:	86 e3       	ldi	r24, 0x36	; 54
    16ec:	95 e4       	ldi	r25, 0x45	; 69
    16ee:	0e 94 d4 1f 	call	0x3fa8	; 0x3fa8 <__divsf3>
    16f2:	20 e0       	ldi	r18, 0x00	; 0
    16f4:	30 e0       	ldi	r19, 0x00	; 0
    16f6:	40 e8       	ldi	r20, 0x80	; 128
    16f8:	5f e3       	ldi	r21, 0x3F	; 63
    16fa:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
    16fe:	08 95       	ret

00001700 <getLeftIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
 	ADC_set_VREF( ADC_VREF_AVCC );
    1700:	81 e0       	ldi	r24, 0x01	; 1
    1702:	0e 94 a0 0c 	call	0x1940	; 0x1940 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
    1706:	84 e0       	ldi	r24, 0x04	; 4
    1708:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    170c:	0e 94 4c 0c 	call	0x1898	; 0x1898 <ADC_sample>
    1710:	a0 e0       	ldi	r26, 0x00	; 0
    1712:	b0 e0       	ldi	r27, 0x00	; 0
    1714:	bc 01       	movw	r22, r24
    1716:	cd 01       	movw	r24, r26
    1718:	0e 94 6d 20 	call	0x40da	; 0x40da <__floatunsisf>
    171c:	20 e0       	ldi	r18, 0x00	; 0
    171e:	30 e0       	ldi	r19, 0x00	; 0
    1720:	40 ea       	ldi	r20, 0xA0	; 160
    1722:	50 e4       	ldi	r21, 0x40	; 64
    1724:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <__addsf3>
    1728:	9b 01       	movw	r18, r22
    172a:	ac 01       	movw	r20, r24
    172c:	60 e0       	ldi	r22, 0x00	; 0
    172e:	70 e2       	ldi	r23, 0x20	; 32
    1730:	86 e3       	ldi	r24, 0x36	; 54
    1732:	95 e4       	ldi	r25, 0x45	; 69
    1734:	0e 94 d4 1f 	call	0x3fa8	; 0x3fa8 <__divsf3>
    1738:	20 e0       	ldi	r18, 0x00	; 0
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	40 e8       	ldi	r20, 0x80	; 128
    173e:	5f e3       	ldi	r21, 0x3F	; 63
    1740:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
    1744:	08 95       	ret

00001746 <getRightLight>:
********************************************************************/
float getRightLight( void )
{
	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
    1746:	81 e0       	ldi	r24, 0x01	; 1
    1748:	0e 94 a0 0c 	call	0x1940	; 0x1940 <ADC_set_VREF>
	ADC_set_channel( RIGHT_LIGHT_CHAN );
    174c:	85 e0       	ldi	r24, 0x05	; 5
    174e:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <ADC_set_channel>
	adcsample = ADC_sample();
    1752:	0e 94 4c 0c 	call	0x1898	; 0x1898 <ADC_sample>
    1756:	a0 e0       	ldi	r26, 0x00	; 0
    1758:	b0 e0       	ldi	r27, 0x00	; 0
    175a:	bc 01       	movw	r22, r24
    175c:	cd 01       	movw	r24, r26
    175e:	0e 94 6d 20 	call	0x40da	; 0x40da <__floatunsisf>
    1762:	20 e0       	ldi	r18, 0x00	; 0
    1764:	30 e0       	ldi	r19, 0x00	; 0
    1766:	40 ea       	ldi	r20, 0xA0	; 160
    1768:	5b e3       	ldi	r21, 0x3B	; 59
    176a:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * ( 5.0 / 1024 );
	//LCD_printf( "right: %f\n",voltage);
	return voltage;
}
    176e:	08 95       	ret

00001770 <getLeftLight>:
float getLeftLight( void )
{

	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
    1770:	81 e0       	ldi	r24, 0x01	; 1
    1772:	0e 94 a0 0c 	call	0x1940	; 0x1940 <ADC_set_VREF>
	ADC_set_channel( LEFT_LIGHT_CHAN );
    1776:	86 e0       	ldi	r24, 0x06	; 6
    1778:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <ADC_set_channel>
	adcsample = ADC_sample();
    177c:	0e 94 4c 0c 	call	0x1898	; 0x1898 <ADC_sample>
    1780:	a0 e0       	ldi	r26, 0x00	; 0
    1782:	b0 e0       	ldi	r27, 0x00	; 0
    1784:	bc 01       	movw	r22, r24
    1786:	cd 01       	movw	r24, r26
    1788:	0e 94 6d 20 	call	0x40da	; 0x40da <__floatunsisf>
    178c:	20 e0       	ldi	r18, 0x00	; 0
    178e:	30 e0       	ldi	r19, 0x00	; 0
    1790:	40 ea       	ldi	r20, 0xA0	; 160
    1792:	5b e3       	ldi	r21, 0x3B	; 59
    1794:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * (5.0/ 1024.0 );
	//LCD_printf( "voltage: %f\n",voltage);
	return voltage;
}
    1798:	08 95       	ret

0000179a <WaitButton>:
* Input Variables:	none
* Output Return:	int
* Overview:			Use a comment block like this before functions
********************************************************************/
int WaitButton( void ) 
{
    179a:	ff 92       	push	r15
    179c:	0f 93       	push	r16
    179e:	1f 93       	push	r17
    17a0:	cf 93       	push	r28
    17a2:	df 93       	push	r29
    BOOL btnState1, btnState2, btnState3;//local variables - button states
	//int rtnValue=0;//return the button value
	int rtnValue=0;

	LCD_clear();
    17a4:	0e 94 b4 0c 	call	0x1968	; 0x1968 <LCD_clear>

	if((ATopstat.state=SUBSYS_OPEN))
    17a8:	81 e0       	ldi	r24, 0x01	; 1
    17aa:	80 93 76 04 	sts	0x0476, r24
	{
       		// Get switch states.
		btnState1 = ATTINY_get_SW_state( ATTINY_SW3 );
    17ae:	80 e0       	ldi	r24, 0x00	; 0
    17b0:	0e 94 81 12 	call	0x2502	; 0x2502 <ATTINY_get_SW_state>
    17b4:	18 2f       	mov	r17, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
    17b6:	81 e0       	ldi	r24, 0x01	; 1
    17b8:	0e 94 81 12 	call	0x2502	; 0x2502 <ATTINY_get_SW_state>
    17bc:	08 2f       	mov	r16, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
    17be:	82 e0       	ldi	r24, 0x02	; 2
    17c0:	0e 94 81 12 	call	0x2502	; 0x2502 <ATTINY_get_SW_state>
    17c4:	f8 2e       	mov	r15, r24
		//LCD_printf("btnStates: %d %d %d \n", btnState1, btnState2, btnState3);

		if( btnState1 == TRUE ) 
    17c6:	11 30       	cpi	r17, 0x01	; 1
    17c8:	19 f0       	breq	.+6      	; 0x17d0 <WaitButton+0x36>
    17ca:	c0 e0       	ldi	r28, 0x00	; 0
    17cc:	d0 e0       	ldi	r29, 0x00	; 0
    17ce:	17 c0       	rjmp	.+46     	; 0x17fe <WaitButton+0x64>
		{
			LCD_printf( "SW1: Pushed\n");
    17d0:	8f e7       	ldi	r24, 0x7F	; 127
    17d2:	91 e0       	ldi	r25, 0x01	; 1
    17d4:	0e 94 b6 29 	call	0x536c	; 0x536c <puts>
			TMRSRVC_delay(1000);//wait 1 s
    17d8:	88 ee       	ldi	r24, 0xE8	; 232
    17da:	93 e0       	ldi	r25, 0x03	; 3
    17dc:	0e 94 1e 13 	call	0x263c	; 0x263c <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b00100000 );//turn the red LED on
    17e0:	80 e2       	ldi	r24, 0x20	; 32
    17e2:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
    17e6:	80 ed       	ldi	r24, 0xD0	; 208
    17e8:	97 e0       	ldi	r25, 0x07	; 7
    17ea:	0e 94 1e 13 	call	0x263c	; 0x263c <TMRSRVC_delay>
               		LED_clr_pattern( 0b01000000 );//turn the green LED off
    17ee:	80 e4       	ldi	r24, 0x40	; 64
    17f0:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
    17f4:	80 e2       	ldi	r24, 0x20	; 32
    17f6:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <LED_clr_pattern>
    17fa:	c1 e0       	ldi	r28, 0x01	; 1
    17fc:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=1;
			}//end if button 1 state open

		if( btnState2 == TRUE ) 
    17fe:	01 30       	cpi	r16, 0x01	; 1
    1800:	b9 f4       	brne	.+46     	; 0x1830 <WaitButton+0x96>
		{
			LCD_printf( "SW2: Pushed\n");
    1802:	8b e8       	ldi	r24, 0x8B	; 139
    1804:	91 e0       	ldi	r25, 0x01	; 1
    1806:	0e 94 b6 29 	call	0x536c	; 0x536c <puts>
			TMRSRVC_delay(1000);//wait 1 s
    180a:	88 ee       	ldi	r24, 0xE8	; 232
    180c:	93 e0       	ldi	r25, 0x03	; 3
    180e:	0e 94 1e 13 	call	0x263c	; 0x263c <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
    1812:	80 e4       	ldi	r24, 0x40	; 64
    1814:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
    1818:	80 ed       	ldi	r24, 0xD0	; 208
    181a:	97 e0       	ldi	r25, 0x07	; 7
    181c:	0e 94 1e 13 	call	0x263c	; 0x263c <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
    1820:	80 e4       	ldi	r24, 0x40	; 64
    1822:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
    1826:	80 e2       	ldi	r24, 0x20	; 32
    1828:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <LED_clr_pattern>
    182c:	c2 e0       	ldi	r28, 0x02	; 2
    182e:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=2;
		}//end if btn 2 open

		if ( btnState3 == TRUE ) 
    1830:	81 e0       	ldi	r24, 0x01	; 1
    1832:	f8 16       	cp	r15, r24
    1834:	d1 f4       	brne	.+52     	; 0x186a <WaitButton+0xd0>
		{
			LCD_printf( "SW3: Pushed\n");
    1836:	87 e9       	ldi	r24, 0x97	; 151
    1838:	91 e0       	ldi	r25, 0x01	; 1
    183a:	0e 94 b6 29 	call	0x536c	; 0x536c <puts>
			TMRSRVC_delay(1000);//wait 1 s
    183e:	88 ee       	ldi	r24, 0xE8	; 232
    1840:	93 e0       	ldi	r25, 0x03	; 3
    1842:	0e 94 1e 13 	call	0x263c	; 0x263c <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
    1846:	80 e4       	ldi	r24, 0x40	; 64
    1848:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <LED_set_pattern>
                	LED_set_pattern( 0b00100000 );//turn the red LED on
    184c:	80 e2       	ldi	r24, 0x20	; 32
    184e:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
    1852:	80 ed       	ldi	r24, 0xD0	; 208
    1854:	97 e0       	ldi	r25, 0x07	; 7
    1856:	0e 94 1e 13 	call	0x263c	; 0x263c <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
    185a:	80 e4       	ldi	r24, 0x40	; 64
    185c:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
    1860:	80 e2       	ldi	r24, 0x20	; 32
    1862:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <LED_clr_pattern>
    1866:	c3 e0       	ldi	r28, 0x03	; 3
    1868:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=3;
		}//end if btn 3 open
            	LCD_clear();
    186a:	0e 94 b4 0c 	call	0x1968	; 0x1968 <LCD_clear>
		return rtnValue;
	}//end AT while

}//end the WaitButton() function
    186e:	ce 01       	movw	r24, r28
    1870:	df 91       	pop	r29
    1872:	cf 91       	pop	r28
    1874:	1f 91       	pop	r17
    1876:	0f 91       	pop	r16
    1878:	ff 90       	pop	r15
    187a:	08 95       	ret

0000187c <ADC_open>:
    187c:	8f e0       	ldi	r24, 0x0F	; 15
    187e:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    1882:	88 23       	and	r24, r24
    1884:	31 f4       	brne	.+12     	; 0x1892 <ADC_open+0x16>
    1886:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__ADC_init>
    188a:	8f e0       	ldi	r24, 0x0F	; 15
    188c:	61 e0       	ldi	r22, 0x01	; 1
    188e:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    1892:	8f e0       	ldi	r24, 0x0F	; 15
    1894:	91 e0       	ldi	r25, 0x01	; 1
    1896:	08 95       	ret

00001898 <ADC_sample>:
    1898:	8f e0       	ldi	r24, 0x0F	; 15
    189a:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    189e:	81 30       	cpi	r24, 0x01	; 1
    18a0:	19 f0       	breq	.+6      	; 0x18a8 <ADC_sample+0x10>
    18a2:	20 e0       	ldi	r18, 0x00	; 0
    18a4:	30 e0       	ldi	r19, 0x00	; 0
    18a6:	13 c0       	rjmp	.+38     	; 0x18ce <ADC_sample+0x36>
    18a8:	80 91 7a 00 	lds	r24, 0x007A
    18ac:	80 64       	ori	r24, 0x40	; 64
    18ae:	80 93 7a 00 	sts	0x007A, r24
    18b2:	80 91 7a 00 	lds	r24, 0x007A
    18b6:	86 fd       	sbrc	r24, 6
    18b8:	fc cf       	rjmp	.-8      	; 0x18b2 <ADC_sample+0x1a>
    18ba:	30 91 78 00 	lds	r19, 0x0078
    18be:	20 91 79 00 	lds	r18, 0x0079
    18c2:	92 2f       	mov	r25, r18
    18c4:	80 e0       	ldi	r24, 0x00	; 0
    18c6:	23 2f       	mov	r18, r19
    18c8:	30 e0       	ldi	r19, 0x00	; 0
    18ca:	28 2b       	or	r18, r24
    18cc:	39 2b       	or	r19, r25
    18ce:	c9 01       	movw	r24, r18
    18d0:	08 95       	ret

000018d2 <ADC_set_channel>:
    18d2:	58 2f       	mov	r21, r24
    18d4:	80 91 a3 01 	lds	r24, 0x01A3
    18d8:	88 30       	cpi	r24, 0x08	; 8
    18da:	d8 f4       	brcc	.+54     	; 0x1912 <ADC_set_channel+0x40>
    18dc:	40 91 7e 00 	lds	r20, 0x007E
    18e0:	21 e0       	ldi	r18, 0x01	; 1
    18e2:	30 e0       	ldi	r19, 0x00	; 0
    18e4:	b9 01       	movw	r22, r18
    18e6:	02 c0       	rjmp	.+4      	; 0x18ec <ADC_set_channel+0x1a>
    18e8:	66 0f       	add	r22, r22
    18ea:	77 1f       	adc	r23, r23
    18ec:	8a 95       	dec	r24
    18ee:	e2 f7       	brpl	.-8      	; 0x18e8 <ADC_set_channel+0x16>
    18f0:	cb 01       	movw	r24, r22
    18f2:	80 95       	com	r24
    18f4:	84 23       	and	r24, r20
    18f6:	80 93 7e 00 	sts	0x007E, r24
    18fa:	80 91 7e 00 	lds	r24, 0x007E
    18fe:	05 2e       	mov	r0, r21
    1900:	02 c0       	rjmp	.+4      	; 0x1906 <ADC_set_channel+0x34>
    1902:	22 0f       	add	r18, r18
    1904:	33 1f       	adc	r19, r19
    1906:	0a 94       	dec	r0
    1908:	e2 f7       	brpl	.-8      	; 0x1902 <ADC_set_channel+0x30>
    190a:	82 2b       	or	r24, r18
    190c:	80 93 7e 00 	sts	0x007E, r24
    1910:	0d c0       	rjmp	.+26     	; 0x192c <ADC_set_channel+0x5a>
    1912:	20 91 7e 00 	lds	r18, 0x007E
    1916:	81 e0       	ldi	r24, 0x01	; 1
    1918:	90 e0       	ldi	r25, 0x00	; 0
    191a:	05 2e       	mov	r0, r21
    191c:	02 c0       	rjmp	.+4      	; 0x1922 <ADC_set_channel+0x50>
    191e:	88 0f       	add	r24, r24
    1920:	99 1f       	adc	r25, r25
    1922:	0a 94       	dec	r0
    1924:	e2 f7       	brpl	.-8      	; 0x191e <ADC_set_channel+0x4c>
    1926:	28 2b       	or	r18, r24
    1928:	20 93 7e 00 	sts	0x007E, r18
    192c:	50 93 a3 01 	sts	0x01A3, r21
    1930:	80 91 7c 00 	lds	r24, 0x007C
    1934:	5f 71       	andi	r21, 0x1F	; 31
    1936:	80 7e       	andi	r24, 0xE0	; 224
    1938:	85 2b       	or	r24, r21
    193a:	80 93 7c 00 	sts	0x007C, r24
    193e:	08 95       	ret

00001940 <ADC_set_VREF>:
    1940:	ec e7       	ldi	r30, 0x7C	; 124
    1942:	f0 e0       	ldi	r31, 0x00	; 0
    1944:	90 81       	ld	r25, Z
    1946:	82 95       	swap	r24
    1948:	88 0f       	add	r24, r24
    194a:	88 0f       	add	r24, r24
    194c:	80 7c       	andi	r24, 0xC0	; 192
    194e:	9f 73       	andi	r25, 0x3F	; 63
    1950:	98 2b       	or	r25, r24
    1952:	90 83       	st	Z, r25
    1954:	08 95       	ret

00001956 <main>:
    1956:	0e 94 69 14 	call	0x28d2	; 0x28d2 <CBOT_ISR_init>
    195a:	0e 94 5b 14 	call	0x28b6	; 0x28b6 <CBOT_init>
    195e:	0e 94 71 09 	call	0x12e2	; 0x12e2 <CBOT_main>
    1962:	80 e0       	ldi	r24, 0x00	; 0
    1964:	90 e0       	ldi	r25, 0x00	; 0
    1966:	08 95       	ret

00001968 <LCD_clear>:
    1968:	0f 93       	push	r16
    196a:	1f 93       	push	r17
    196c:	80 e4       	ldi	r24, 0x40	; 64
    196e:	60 e0       	ldi	r22, 0x00	; 0
    1970:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1974:	00 e0       	ldi	r16, 0x00	; 0
    1976:	80 2f       	mov	r24, r16
    1978:	60 e0       	ldi	r22, 0x00	; 0
    197a:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <LCD_set_PGC_addr>
    197e:	10 e0       	ldi	r17, 0x00	; 0
    1980:	80 e0       	ldi	r24, 0x00	; 0
    1982:	61 e0       	ldi	r22, 0x01	; 1
    1984:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1988:	1f 5f       	subi	r17, 0xFF	; 255
    198a:	10 38       	cpi	r17, 0x80	; 128
    198c:	c9 f7       	brne	.-14     	; 0x1980 <LCD_clear+0x18>
    198e:	0f 5f       	subi	r16, 0xFF	; 255
    1990:	04 30       	cpi	r16, 0x04	; 4
    1992:	89 f7       	brne	.-30     	; 0x1976 <LCD_clear+0xe>
    1994:	83 e0       	ldi	r24, 0x03	; 3
    1996:	60 e0       	ldi	r22, 0x00	; 0
    1998:	0e 94 73 0d 	call	0x1ae6	; 0x1ae6 <LCD_set_next_PGC>
    199c:	1f 91       	pop	r17
    199e:	0f 91       	pop	r16
    19a0:	08 95       	ret

000019a2 <LCD_open>:
    19a2:	0f 93       	push	r16
    19a4:	1f 93       	push	r17
    19a6:	82 e0       	ldi	r24, 0x02	; 2
    19a8:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    19ac:	88 23       	and	r24, r24
    19ae:	11 f4       	brne	.+4      	; 0x19b4 <LCD_open+0x12>
    19b0:	82 e0       	ldi	r24, 0x02	; 2
    19b2:	06 c0       	rjmp	.+12     	; 0x19c0 <LCD_open+0x1e>
    19b4:	81 e0       	ldi	r24, 0x01	; 1
    19b6:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    19ba:	88 23       	and	r24, r24
    19bc:	19 f4       	brne	.+6      	; 0x19c4 <LCD_open+0x22>
    19be:	81 e0       	ldi	r24, 0x01	; 1
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	6d c0       	rjmp	.+218    	; 0x1a9e <LCD_open+0xfc>
    19c4:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__LCD_init>
    19c8:	85 e0       	ldi	r24, 0x05	; 5
    19ca:	61 e0       	ldi	r22, 0x01	; 1
    19cc:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    19d0:	8e ea       	ldi	r24, 0xAE	; 174
    19d2:	60 e0       	ldi	r22, 0x00	; 0
    19d4:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    19d8:	82 ea       	ldi	r24, 0xA2	; 162
    19da:	60 e0       	ldi	r22, 0x00	; 0
    19dc:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    19e0:	80 ea       	ldi	r24, 0xA0	; 160
    19e2:	60 e0       	ldi	r22, 0x00	; 0
    19e4:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    19e8:	00 e5       	ldi	r16, 0x50	; 80
    19ea:	13 ec       	ldi	r17, 0xC3	; 195
    19ec:	c8 01       	movw	r24, r16
    19ee:	01 97       	sbiw	r24, 0x01	; 1
    19f0:	f1 f7       	brne	.-4      	; 0x19ee <LCD_open+0x4c>
    19f2:	80 ec       	ldi	r24, 0xC0	; 192
    19f4:	60 e0       	ldi	r22, 0x00	; 0
    19f6:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    19fa:	8f e2       	ldi	r24, 0x2F	; 47
    19fc:	60 e0       	ldi	r22, 0x00	; 0
    19fe:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1a02:	81 e8       	ldi	r24, 0x81	; 129
    1a04:	60 e0       	ldi	r22, 0x00	; 0
    1a06:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1a0a:	86 e1       	ldi	r24, 0x16	; 22
    1a0c:	60 e0       	ldi	r22, 0x00	; 0
    1a0e:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1a12:	82 e2       	ldi	r24, 0x22	; 34
    1a14:	60 e0       	ldi	r22, 0x00	; 0
    1a16:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1a1a:	c8 01       	movw	r24, r16
    1a1c:	01 97       	sbiw	r24, 0x01	; 1
    1a1e:	f1 f7       	brne	.-4      	; 0x1a1c <LCD_open+0x7a>
    1a20:	8f ea       	ldi	r24, 0xAF	; 175
    1a22:	60 e0       	ldi	r22, 0x00	; 0
    1a24:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1a28:	86 ea       	ldi	r24, 0xA6	; 166
    1a2a:	60 e0       	ldi	r22, 0x00	; 0
    1a2c:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1a30:	85 ea       	ldi	r24, 0xA5	; 165
    1a32:	60 e0       	ldi	r22, 0x00	; 0
    1a34:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1a38:	80 e0       	ldi	r24, 0x00	; 0
    1a3a:	90 e0       	ldi	r25, 0x00	; 0
    1a3c:	28 e8       	ldi	r18, 0x88	; 136
    1a3e:	33 e1       	ldi	r19, 0x13	; 19
    1a40:	f9 01       	movw	r30, r18
    1a42:	31 97       	sbiw	r30, 0x01	; 1
    1a44:	f1 f7       	brne	.-4      	; 0x1a42 <LCD_open+0xa0>
    1a46:	01 96       	adiw	r24, 0x01	; 1
    1a48:	43 e0       	ldi	r20, 0x03	; 3
    1a4a:	88 3e       	cpi	r24, 0xE8	; 232
    1a4c:	94 07       	cpc	r25, r20
    1a4e:	c1 f7       	brne	.-16     	; 0x1a40 <LCD_open+0x9e>
    1a50:	83 eb       	ldi	r24, 0xB3	; 179
    1a52:	60 e0       	ldi	r22, 0x00	; 0
    1a54:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1a58:	80 e4       	ldi	r24, 0x40	; 64
    1a5a:	60 e0       	ldi	r22, 0x00	; 0
    1a5c:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1a60:	83 e0       	ldi	r24, 0x03	; 3
    1a62:	60 e0       	ldi	r22, 0x00	; 0
    1a64:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <LCD_set_PGC_addr>
    1a68:	83 e0       	ldi	r24, 0x03	; 3
    1a6a:	60 e0       	ldi	r22, 0x00	; 0
    1a6c:	0e 94 73 0d 	call	0x1ae6	; 0x1ae6 <LCD_set_next_PGC>
    1a70:	10 92 c5 04 	sts	0x04C5, r1
    1a74:	10 92 c7 04 	sts	0x04C7, r1
    1a78:	10 92 c6 04 	sts	0x04C6, r1
    1a7c:	82 eb       	ldi	r24, 0xB2	; 178
    1a7e:	91 e0       	ldi	r25, 0x01	; 1
    1a80:	90 93 f6 04 	sts	0x04F6, r25
    1a84:	80 93 f5 04 	sts	0x04F5, r24
    1a88:	88 e1       	ldi	r24, 0x18	; 24
    1a8a:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <LCD_set_backlight>
    1a8e:	0e 94 b4 0c 	call	0x1968	; 0x1968 <LCD_clear>
    1a92:	84 ea       	ldi	r24, 0xA4	; 164
    1a94:	60 e0       	ldi	r22, 0x00	; 0
    1a96:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1a9a:	85 e0       	ldi	r24, 0x05	; 5
    1a9c:	91 e0       	ldi	r25, 0x01	; 1
    1a9e:	1f 91       	pop	r17
    1aa0:	0f 91       	pop	r16
    1aa2:	08 95       	ret

00001aa4 <LCD_set_backlight>:
    1aa4:	1f 93       	push	r17
    1aa6:	18 2f       	mov	r17, r24
    1aa8:	85 e0       	ldi	r24, 0x05	; 5
    1aaa:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    1aae:	81 30       	cpi	r24, 0x01	; 1
    1ab0:	c1 f4       	brne	.+48     	; 0x1ae2 <LCD_set_backlight+0x3e>
    1ab2:	87 e0       	ldi	r24, 0x07	; 7
    1ab4:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <SPI_set_slave_addr>
    1ab8:	82 e0       	ldi	r24, 0x02	; 2
    1aba:	6a e0       	ldi	r22, 0x0A	; 10
    1abc:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <SPI_transmit>
    1ac0:	82 e0       	ldi	r24, 0x02	; 2
    1ac2:	61 eb       	ldi	r22, 0xB1	; 177
    1ac4:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <SPI_transmit>
    1ac8:	61 2f       	mov	r22, r17
    1aca:	11 32       	cpi	r17, 0x21	; 33
    1acc:	08 f0       	brcs	.+2      	; 0x1ad0 <LCD_set_backlight+0x2c>
    1ace:	60 e2       	ldi	r22, 0x20	; 32
    1ad0:	82 e0       	ldi	r24, 0x02	; 2
    1ad2:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <SPI_transmit>
    1ad6:	89 ee       	ldi	r24, 0xE9	; 233
    1ad8:	8a 95       	dec	r24
    1ada:	f1 f7       	brne	.-4      	; 0x1ad8 <LCD_set_backlight+0x34>
    1adc:	87 e0       	ldi	r24, 0x07	; 7
    1ade:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <SPI_set_slave_addr>
    1ae2:	1f 91       	pop	r17
    1ae4:	08 95       	ret

00001ae6 <LCD_set_next_PGC>:
    1ae6:	83 70       	andi	r24, 0x03	; 3
    1ae8:	6f 77       	andi	r22, 0x7F	; 127
    1aea:	60 93 c3 04 	sts	0x04C3, r22
    1aee:	80 93 c4 04 	sts	0x04C4, r24
    1af2:	08 95       	ret

00001af4 <LCD_set_PGC_addr>:
    1af4:	0f 93       	push	r16
    1af6:	1f 93       	push	r17
    1af8:	06 2f       	mov	r16, r22
    1afa:	16 2f       	mov	r17, r22
    1afc:	1f 77       	andi	r17, 0x7F	; 127
    1afe:	83 70       	andi	r24, 0x03	; 3
    1b00:	80 6b       	ori	r24, 0xB0	; 176
    1b02:	60 e0       	ldi	r22, 0x00	; 0
    1b04:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1b08:	12 95       	swap	r17
    1b0a:	1f 70       	andi	r17, 0x0F	; 15
    1b0c:	81 2f       	mov	r24, r17
    1b0e:	80 61       	ori	r24, 0x10	; 16
    1b10:	60 e0       	ldi	r22, 0x00	; 0
    1b12:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1b16:	80 2f       	mov	r24, r16
    1b18:	8f 70       	andi	r24, 0x0F	; 15
    1b1a:	60 e0       	ldi	r22, 0x00	; 0
    1b1c:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    1b20:	1f 91       	pop	r17
    1b22:	0f 91       	pop	r16
    1b24:	08 95       	ret

00001b26 <LCD_write>:
    1b26:	0f 93       	push	r16
    1b28:	1f 93       	push	r17
    1b2a:	08 2f       	mov	r16, r24
    1b2c:	16 2f       	mov	r17, r22
    1b2e:	85 e0       	ldi	r24, 0x05	; 5
    1b30:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    1b34:	81 30       	cpi	r24, 0x01	; 1
    1b36:	79 f4       	brne	.+30     	; 0x1b56 <LCD_write+0x30>
    1b38:	11 23       	and	r17, r17
    1b3a:	19 f0       	breq	.+6      	; 0x1b42 <LCD_write+0x1c>
    1b3c:	11 30       	cpi	r17, 0x01	; 1
    1b3e:	21 f4       	brne	.+8      	; 0x1b48 <LCD_write+0x22>
    1b40:	02 c0       	rjmp	.+4      	; 0x1b46 <LCD_write+0x20>
    1b42:	2b 98       	cbi	0x05, 3	; 5
    1b44:	01 c0       	rjmp	.+2      	; 0x1b48 <LCD_write+0x22>
    1b46:	2b 9a       	sbi	0x05, 3	; 5
    1b48:	86 e0       	ldi	r24, 0x06	; 6
    1b4a:	8a 95       	dec	r24
    1b4c:	f1 f7       	brne	.-4      	; 0x1b4a <LCD_write+0x24>
    1b4e:	80 e0       	ldi	r24, 0x00	; 0
    1b50:	60 2f       	mov	r22, r16
    1b52:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <SPI_transmit>
    1b56:	1f 91       	pop	r17
    1b58:	0f 91       	pop	r16
    1b5a:	08 95       	ret

00001b5c <LED_clr_pattern>:
    1b5c:	1f 93       	push	r17
    1b5e:	18 2f       	mov	r17, r24
    1b60:	86 e0       	ldi	r24, 0x06	; 6
    1b62:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    1b66:	81 30       	cpi	r24, 0x01	; 1
    1b68:	19 f4       	brne	.+6      	; 0x1b70 <LED_clr_pattern+0x14>
    1b6a:	81 2f       	mov	r24, r17
    1b6c:	0e 94 80 17 	call	0x2f00	; 0x2f00 <__LED_clr_pattern>
    1b70:	1f 91       	pop	r17
    1b72:	08 95       	ret

00001b74 <LED_open>:
    1b74:	0e 94 85 17 	call	0x2f0a	; 0x2f0a <__LED_init>
    1b78:	86 e0       	ldi	r24, 0x06	; 6
    1b7a:	61 e0       	ldi	r22, 0x01	; 1
    1b7c:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    1b80:	86 e0       	ldi	r24, 0x06	; 6
    1b82:	91 e0       	ldi	r25, 0x01	; 1
    1b84:	08 95       	ret

00001b86 <LED_set_pattern>:
    1b86:	1f 93       	push	r17
    1b88:	18 2f       	mov	r17, r24
    1b8a:	86 e0       	ldi	r24, 0x06	; 6
    1b8c:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    1b90:	81 30       	cpi	r24, 0x01	; 1
    1b92:	19 f4       	brne	.+6      	; 0x1b9a <LED_set_pattern+0x14>
    1b94:	81 2f       	mov	r24, r17
    1b96:	0e 94 88 17 	call	0x2f10	; 0x2f10 <__LED_set_pattern>
    1b9a:	1f 91       	pop	r17
    1b9c:	08 95       	ret

00001b9e <SPI_set_slave_addr>:
    1b9e:	1f 93       	push	r17
    1ba0:	18 2f       	mov	r17, r24
    1ba2:	82 e0       	ldi	r24, 0x02	; 2
    1ba4:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    1ba8:	81 30       	cpi	r24, 0x01	; 1
    1baa:	09 f0       	breq	.+2      	; 0x1bae <SPI_set_slave_addr+0x10>
    1bac:	47 c0       	rjmp	.+142    	; 0x1c3c <SPI_set_slave_addr+0x9e>
    1bae:	91 2f       	mov	r25, r17
    1bb0:	97 70       	andi	r25, 0x07	; 7
    1bb2:	80 91 c8 04 	lds	r24, 0x04C8
    1bb6:	98 17       	cp	r25, r24
    1bb8:	09 f4       	brne	.+2      	; 0x1bbc <SPI_set_slave_addr+0x1e>
    1bba:	40 c0       	rjmp	.+128    	; 0x1c3c <SPI_set_slave_addr+0x9e>
    1bbc:	90 93 c8 04 	sts	0x04C8, r25
    1bc0:	85 b1       	in	r24, 0x05	; 5
    1bc2:	88 7f       	andi	r24, 0xF8	; 248
    1bc4:	89 2b       	or	r24, r25
    1bc6:	85 b9       	out	0x05, r24	; 5
    1bc8:	93 30       	cpi	r25, 0x03	; 3
    1bca:	11 f1       	breq	.+68     	; 0x1c10 <SPI_set_slave_addr+0x72>
    1bcc:	94 30       	cpi	r25, 0x04	; 4
    1bce:	28 f4       	brcc	.+10     	; 0x1bda <SPI_set_slave_addr+0x3c>
    1bd0:	91 30       	cpi	r25, 0x01	; 1
    1bd2:	51 f0       	breq	.+20     	; 0x1be8 <SPI_set_slave_addr+0x4a>
    1bd4:	92 30       	cpi	r25, 0x02	; 2
    1bd6:	90 f4       	brcc	.+36     	; 0x1bfc <SPI_set_slave_addr+0x5e>
    1bd8:	0c c0       	rjmp	.+24     	; 0x1bf2 <SPI_set_slave_addr+0x54>
    1bda:	95 30       	cpi	r25, 0x05	; 5
    1bdc:	19 f1       	breq	.+70     	; 0x1c24 <SPI_set_slave_addr+0x86>
    1bde:	95 30       	cpi	r25, 0x05	; 5
    1be0:	e0 f0       	brcs	.+56     	; 0x1c1a <SPI_set_slave_addr+0x7c>
    1be2:	96 30       	cpi	r25, 0x06	; 6
    1be4:	21 f5       	brne	.+72     	; 0x1c2e <SPI_set_slave_addr+0x90>
    1be6:	0f c0       	rjmp	.+30     	; 0x1c06 <SPI_set_slave_addr+0x68>
    1be8:	e0 91 6c 02 	lds	r30, 0x026C
    1bec:	f0 91 6d 02 	lds	r31, 0x026D
    1bf0:	22 c0       	rjmp	.+68     	; 0x1c36 <SPI_set_slave_addr+0x98>
    1bf2:	e0 91 6a 02 	lds	r30, 0x026A
    1bf6:	f0 91 6b 02 	lds	r31, 0x026B
    1bfa:	1d c0       	rjmp	.+58     	; 0x1c36 <SPI_set_slave_addr+0x98>
    1bfc:	e0 91 6e 02 	lds	r30, 0x026E
    1c00:	f0 91 6f 02 	lds	r31, 0x026F
    1c04:	18 c0       	rjmp	.+48     	; 0x1c36 <SPI_set_slave_addr+0x98>
    1c06:	e0 91 76 02 	lds	r30, 0x0276
    1c0a:	f0 91 77 02 	lds	r31, 0x0277
    1c0e:	13 c0       	rjmp	.+38     	; 0x1c36 <SPI_set_slave_addr+0x98>
    1c10:	e0 91 70 02 	lds	r30, 0x0270
    1c14:	f0 91 71 02 	lds	r31, 0x0271
    1c18:	0e c0       	rjmp	.+28     	; 0x1c36 <SPI_set_slave_addr+0x98>
    1c1a:	e0 91 72 02 	lds	r30, 0x0272
    1c1e:	f0 91 73 02 	lds	r31, 0x0273
    1c22:	09 c0       	rjmp	.+18     	; 0x1c36 <SPI_set_slave_addr+0x98>
    1c24:	e0 91 74 02 	lds	r30, 0x0274
    1c28:	f0 91 75 02 	lds	r31, 0x0275
    1c2c:	04 c0       	rjmp	.+8      	; 0x1c36 <SPI_set_slave_addr+0x98>
    1c2e:	e0 91 78 02 	lds	r30, 0x0278
    1c32:	f0 91 79 02 	lds	r31, 0x0279
    1c36:	30 97       	sbiw	r30, 0x00	; 0
    1c38:	09 f0       	breq	.+2      	; 0x1c3c <SPI_set_slave_addr+0x9e>
    1c3a:	09 95       	icall
    1c3c:	1f 91       	pop	r17
    1c3e:	08 95       	ret

00001c40 <SPI_transmit>:
    1c40:	1f 93       	push	r17
    1c42:	16 2f       	mov	r17, r22
    1c44:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <SPI_set_slave_addr>
    1c48:	82 e0       	ldi	r24, 0x02	; 2
    1c4a:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    1c4e:	81 30       	cpi	r24, 0x01	; 1
    1c50:	21 f4       	brne	.+8      	; 0x1c5a <SPI_transmit+0x1a>
    1c52:	1e bd       	out	0x2e, r17	; 46
    1c54:	0d b4       	in	r0, 0x2d	; 45
    1c56:	07 fe       	sbrs	r0, 7
    1c58:	fd cf       	rjmp	.-6      	; 0x1c54 <SPI_transmit+0x14>
    1c5a:	1f 91       	pop	r17
    1c5c:	08 95       	ret

00001c5e <__SPKR_set_up_freq_LUT>:
    1c5e:	0f 93       	push	r16
    1c60:	1f 93       	push	r17
    1c62:	cf 93       	push	r28
    1c64:	df 93       	push	r29
    1c66:	80 e2       	ldi	r24, 0x20	; 32
    1c68:	91 e0       	ldi	r25, 0x01	; 1
    1c6a:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <malloc>
    1c6e:	9c 01       	movw	r18, r24
    1c70:	90 93 89 02 	sts	0x0289, r25
    1c74:	80 93 88 02 	sts	0x0288, r24
    1c78:	89 2b       	or	r24, r25
    1c7a:	11 f4       	brne	.+4      	; 0x1c80 <__SPKR_set_up_freq_LUT+0x22>
    1c7c:	80 e0       	ldi	r24, 0x00	; 0
    1c7e:	39 c0       	rjmp	.+114    	; 0x1cf2 <__SPKR_set_up_freq_LUT+0x94>
    1c80:	89 01       	movw	r16, r18
    1c82:	c0 e0       	ldi	r28, 0x00	; 0
    1c84:	d0 e0       	ldi	r29, 0x00	; 0
    1c86:	be 01       	movw	r22, r28
    1c88:	80 e0       	ldi	r24, 0x00	; 0
    1c8a:	90 e0       	ldi	r25, 0x00	; 0
    1c8c:	0e 94 6d 20 	call	0x40da	; 0x40da <__floatunsisf>
    1c90:	20 e0       	ldi	r18, 0x00	; 0
    1c92:	30 e0       	ldi	r19, 0x00	; 0
    1c94:	40 ea       	ldi	r20, 0xA0	; 160
    1c96:	51 e4       	ldi	r21, 0x41	; 65
    1c98:	0e 94 d4 1f 	call	0x3fa8	; 0x3fa8 <__divsf3>
    1c9c:	27 ef       	ldi	r18, 0xF7	; 247
    1c9e:	35 e7       	ldi	r19, 0x75	; 117
    1ca0:	40 e0       	ldi	r20, 0x00	; 0
    1ca2:	5f e3       	ldi	r21, 0x3F	; 63
    1ca4:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__mulsf3>
    1ca8:	9b 01       	movw	r18, r22
    1caa:	ac 01       	movw	r20, r24
    1cac:	60 e0       	ldi	r22, 0x00	; 0
    1cae:	70 e0       	ldi	r23, 0x00	; 0
    1cb0:	80 e2       	ldi	r24, 0x20	; 32
    1cb2:	91 e4       	ldi	r25, 0x41	; 65
    1cb4:	0e 94 c0 21 	call	0x4380	; 0x4380 <pow>
    1cb8:	9b 01       	movw	r18, r22
    1cba:	ac 01       	movw	r20, r24
    1cbc:	ca 01       	movw	r24, r20
    1cbe:	b9 01       	movw	r22, r18
    1cc0:	2d ec       	ldi	r18, 0xCD	; 205
    1cc2:	3c ec       	ldi	r19, 0xCC	; 204
    1cc4:	42 e8       	ldi	r20, 0x82	; 130
    1cc6:	51 e4       	ldi	r21, 0x41	; 65
    1cc8:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__mulsf3>
    1ccc:	0e 94 23 21 	call	0x4246	; 0x4246 <lrint>
    1cd0:	2a e0       	ldi	r18, 0x0A	; 10
    1cd2:	30 e0       	ldi	r19, 0x00	; 0
    1cd4:	40 e0       	ldi	r20, 0x00	; 0
    1cd6:	50 e0       	ldi	r21, 0x00	; 0
    1cd8:	0e 94 8d 26 	call	0x4d1a	; 0x4d1a <__mulsi3>
    1cdc:	f8 01       	movw	r30, r16
    1cde:	61 93       	st	Z+, r22
    1ce0:	71 93       	st	Z+, r23
    1ce2:	81 93       	st	Z+, r24
    1ce4:	91 93       	st	Z+, r25
    1ce6:	8f 01       	movw	r16, r30
    1ce8:	21 96       	adiw	r28, 0x01	; 1
    1cea:	c8 34       	cpi	r28, 0x48	; 72
    1cec:	d1 05       	cpc	r29, r1
    1cee:	59 f6       	brne	.-106    	; 0x1c86 <__SPKR_set_up_freq_LUT+0x28>
    1cf0:	81 e0       	ldi	r24, 0x01	; 1
    1cf2:	df 91       	pop	r29
    1cf4:	cf 91       	pop	r28
    1cf6:	1f 91       	pop	r17
    1cf8:	0f 91       	pop	r16
    1cfa:	08 95       	ret

00001cfc <__SPKR_open_beep_mode>:
    1cfc:	8a e0       	ldi	r24, 0x0A	; 10
    1cfe:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    1d02:	88 23       	and	r24, r24
    1d04:	71 f4       	brne	.+28     	; 0x1d22 <__SPKR_open_beep_mode+0x26>
    1d06:	10 92 85 02 	sts	0x0285, r1
    1d0a:	10 92 84 02 	sts	0x0284, r1
    1d0e:	81 e0       	ldi	r24, 0x01	; 1
    1d10:	0e 94 b1 18 	call	0x3162	; 0x3162 <__SPKR_init>
    1d14:	81 e0       	ldi	r24, 0x01	; 1
    1d16:	80 93 7b 02 	sts	0x027B, r24
    1d1a:	8a e0       	ldi	r24, 0x0A	; 10
    1d1c:	61 e0       	ldi	r22, 0x01	; 1
    1d1e:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    1d22:	8a e0       	ldi	r24, 0x0A	; 10
    1d24:	91 e0       	ldi	r25, 0x01	; 1
    1d26:	08 95       	ret

00001d28 <__SPKR_open_tone_mode>:
    1d28:	1f 93       	push	r17
    1d2a:	8b e0       	ldi	r24, 0x0B	; 11
    1d2c:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    1d30:	88 23       	and	r24, r24
    1d32:	11 f0       	breq	.+4      	; 0x1d38 <__SPKR_open_tone_mode+0x10>
    1d34:	90 e0       	ldi	r25, 0x00	; 0
    1d36:	21 c0       	rjmp	.+66     	; 0x1d7a <__SPKR_open_tone_mode+0x52>
    1d38:	89 e0       	ldi	r24, 0x09	; 9
    1d3a:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    1d3e:	88 23       	and	r24, r24
    1d40:	d9 f4       	brne	.+54     	; 0x1d78 <__SPKR_open_tone_mode+0x50>
    1d42:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__SPKR_set_up_freq_LUT>
    1d46:	18 2f       	mov	r17, r24
    1d48:	81 30       	cpi	r24, 0x01	; 1
    1d4a:	b1 f4       	brne	.+44     	; 0x1d78 <__SPKR_open_tone_mode+0x50>
    1d4c:	10 92 7c 02 	sts	0x027C, r1
    1d50:	10 92 7d 02 	sts	0x027D, r1
    1d54:	10 92 7e 02 	sts	0x027E, r1
    1d58:	10 92 7f 02 	sts	0x027F, r1
    1d5c:	8d e0       	ldi	r24, 0x0D	; 13
    1d5e:	64 e3       	ldi	r22, 0x34	; 52
    1d60:	78 e1       	ldi	r23, 0x18	; 24
    1d62:	0e 94 a9 16 	call	0x2d52	; 0x2d52 <ISR_attach>
    1d66:	82 e0       	ldi	r24, 0x02	; 2
    1d68:	0e 94 b1 18 	call	0x3162	; 0x3162 <__SPKR_init>
    1d6c:	10 93 7a 02 	sts	0x027A, r17
    1d70:	89 e0       	ldi	r24, 0x09	; 9
    1d72:	61 e0       	ldi	r22, 0x01	; 1
    1d74:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    1d78:	91 e0       	ldi	r25, 0x01	; 1
    1d7a:	89 e0       	ldi	r24, 0x09	; 9
    1d7c:	1f 91       	pop	r17
    1d7e:	08 95       	ret

00001d80 <SPKR_open>:
    1d80:	81 30       	cpi	r24, 0x01	; 1
    1d82:	29 f0       	breq	.+10     	; 0x1d8e <SPKR_open+0xe>
    1d84:	82 30       	cpi	r24, 0x02	; 2
    1d86:	31 f0       	breq	.+12     	; 0x1d94 <SPKR_open+0x14>
    1d88:	90 e0       	ldi	r25, 0x00	; 0
    1d8a:	89 e0       	ldi	r24, 0x09	; 9
    1d8c:	08 95       	ret
    1d8e:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <__SPKR_open_beep_mode>
    1d92:	08 95       	ret
    1d94:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <__SPKR_open_tone_mode>
    1d98:	08 95       	ret

00001d9a <STEPPER_get_nSteps>:
    1d9a:	80 91 89 04 	lds	r24, 0x0489
    1d9e:	90 91 8a 04 	lds	r25, 0x048A
    1da2:	20 91 8b 04 	lds	r18, 0x048B
    1da6:	30 91 8c 04 	lds	r19, 0x048C
    1daa:	bc 01       	movw	r22, r24
    1dac:	c9 01       	movw	r24, r18
    1dae:	08 95       	ret

00001db0 <STEPPER_stepmode>:
    1db0:	2f 92       	push	r2
    1db2:	3f 92       	push	r3
    1db4:	4f 92       	push	r4
    1db6:	5f 92       	push	r5
    1db8:	6f 92       	push	r6
    1dba:	7f 92       	push	r7
    1dbc:	8f 92       	push	r8
    1dbe:	9f 92       	push	r9
    1dc0:	af 92       	push	r10
    1dc2:	bf 92       	push	r11
    1dc4:	cf 92       	push	r12
    1dc6:	df 92       	push	r13
    1dc8:	ef 92       	push	r14
    1dca:	ff 92       	push	r15
    1dcc:	0f 93       	push	r16
    1dce:	1f 93       	push	r17
    1dd0:	df 93       	push	r29
    1dd2:	cf 93       	push	r28
    1dd4:	cd b7       	in	r28, 0x3d	; 61
    1dd6:	de b7       	in	r29, 0x3e	; 62
    1dd8:	58 2e       	mov	r5, r24
    1dda:	96 2e       	mov	r9, r22
    1ddc:	44 2e       	mov	r4, r20
    1dde:	39 01       	movw	r6, r18
    1de0:	3c 2c       	mov	r3, r12
    1de2:	c9 8c       	ldd	r12, Y+25	; 0x19
    1de4:	da 8c       	ldd	r13, Y+26	; 0x1a
    1de6:	2b 8c       	ldd	r2, Y+27	; 0x1b
    1de8:	81 e0       	ldi	r24, 0x01	; 1
    1dea:	68 17       	cp	r22, r24
    1dec:	39 f1       	breq	.+78     	; 0x1e3c <STEPPER_stepmode+0x8c>
    1dee:	68 17       	cp	r22, r24
    1df0:	28 f0       	brcs	.+10     	; 0x1dfc <STEPPER_stepmode+0x4c>
    1df2:	92 e0       	ldi	r25, 0x02	; 2
    1df4:	69 17       	cp	r22, r25
    1df6:	09 f0       	breq	.+2      	; 0x1dfa <STEPPER_stepmode+0x4a>
    1df8:	85 c0       	rjmp	.+266    	; 0x1f04 <STEPPER_stepmode+0x154>
    1dfa:	49 c0       	rjmp	.+146    	; 0x1e8e <STEPPER_stepmode+0xde>
    1dfc:	80 e0       	ldi	r24, 0x00	; 0
    1dfe:	61 e0       	ldi	r22, 0x01	; 1
    1e00:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <STEPPER_set_mode>
    1e04:	80 e0       	ldi	r24, 0x00	; 0
    1e06:	b7 01       	movw	r22, r14
    1e08:	0e 94 aa 10 	call	0x2154	; 0x2154 <STEPPER_set_accel>
    1e0c:	80 e0       	ldi	r24, 0x00	; 0
    1e0e:	64 2d       	mov	r22, r4
    1e10:	a3 01       	movw	r20, r6
    1e12:	98 01       	movw	r18, r16
    1e14:	03 2d       	mov	r16, r3
    1e16:	ee 24       	eor	r14, r14
    1e18:	e3 94       	inc	r14
    1e1a:	ee ea       	ldi	r30, 0xAE	; 174
    1e1c:	ce 2e       	mov	r12, r30
    1e1e:	e4 e0       	ldi	r30, 0x04	; 4
    1e20:	de 2e       	mov	r13, r30
    1e22:	0e 94 18 11 	call	0x2230	; 0x2230 <STEPPER_step>
    1e26:	55 20       	and	r5, r5
    1e28:	09 f0       	breq	.+2      	; 0x1e2c <STEPPER_stepmode+0x7c>
    1e2a:	6c c0       	rjmp	.+216    	; 0x1f04 <STEPPER_stepmode+0x154>
    1e2c:	00 d0       	rcall	.+0      	; 0x1e2e <STEPPER_stepmode+0x7e>
    1e2e:	0f 92       	push	r0
    1e30:	ed b7       	in	r30, 0x3d	; 61
    1e32:	fe b7       	in	r31, 0x3e	; 62
    1e34:	11 82       	std	Z+1, r1	; 0x01
    1e36:	b3 82       	std	Z+3, r11	; 0x03
    1e38:	a2 82       	std	Z+2, r10	; 0x02
    1e3a:	23 c0       	rjmp	.+70     	; 0x1e82 <STEPPER_stepmode+0xd2>
    1e3c:	81 e0       	ldi	r24, 0x01	; 1
    1e3e:	61 e0       	ldi	r22, 0x01	; 1
    1e40:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <STEPPER_set_mode>
    1e44:	81 e0       	ldi	r24, 0x01	; 1
    1e46:	b6 01       	movw	r22, r12
    1e48:	0e 94 aa 10 	call	0x2154	; 0x2154 <STEPPER_set_accel>
    1e4c:	81 e0       	ldi	r24, 0x01	; 1
    1e4e:	68 2d       	mov	r22, r8
    1e50:	4d 89       	ldd	r20, Y+21	; 0x15
    1e52:	5e 89       	ldd	r21, Y+22	; 0x16
    1e54:	2f 89       	ldd	r18, Y+23	; 0x17
    1e56:	38 8d       	ldd	r19, Y+24	; 0x18
    1e58:	02 2d       	mov	r16, r2
    1e5a:	ee 24       	eor	r14, r14
    1e5c:	e3 94       	inc	r14
    1e5e:	7e ea       	ldi	r23, 0xAE	; 174
    1e60:	c7 2e       	mov	r12, r23
    1e62:	74 e0       	ldi	r23, 0x04	; 4
    1e64:	d7 2e       	mov	r13, r23
    1e66:	0e 94 18 11 	call	0x2230	; 0x2230 <STEPPER_step>
    1e6a:	55 20       	and	r5, r5
    1e6c:	09 f0       	breq	.+2      	; 0x1e70 <STEPPER_stepmode+0xc0>
    1e6e:	4a c0       	rjmp	.+148    	; 0x1f04 <STEPPER_stepmode+0x154>
    1e70:	00 d0       	rcall	.+0      	; 0x1e72 <STEPPER_stepmode+0xc2>
    1e72:	0f 92       	push	r0
    1e74:	ed b7       	in	r30, 0x3d	; 61
    1e76:	fe b7       	in	r31, 0x3e	; 62
    1e78:	91 82       	std	Z+1, r9	; 0x01
    1e7a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1e7c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1e7e:	93 83       	std	Z+3, r25	; 0x03
    1e80:	82 83       	std	Z+2, r24	; 0x02
    1e82:	0e 94 a4 11 	call	0x2348	; 0x2348 <STEPPER_wait_and_then>
    1e86:	0f 90       	pop	r0
    1e88:	0f 90       	pop	r0
    1e8a:	0f 90       	pop	r0
    1e8c:	3b c0       	rjmp	.+118    	; 0x1f04 <STEPPER_stepmode+0x154>
    1e8e:	82 e0       	ldi	r24, 0x02	; 2
    1e90:	61 e0       	ldi	r22, 0x01	; 1
    1e92:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <STEPPER_set_mode>
    1e96:	80 e0       	ldi	r24, 0x00	; 0
    1e98:	b7 01       	movw	r22, r14
    1e9a:	0e 94 aa 10 	call	0x2154	; 0x2154 <STEPPER_set_accel>
    1e9e:	81 e0       	ldi	r24, 0x01	; 1
    1ea0:	b6 01       	movw	r22, r12
    1ea2:	0e 94 aa 10 	call	0x2154	; 0x2154 <STEPPER_set_accel>
    1ea6:	80 e0       	ldi	r24, 0x00	; 0
    1ea8:	64 2d       	mov	r22, r4
    1eaa:	a3 01       	movw	r20, r6
    1eac:	98 01       	movw	r18, r16
    1eae:	03 2d       	mov	r16, r3
    1eb0:	ee 24       	eor	r14, r14
    1eb2:	e3 94       	inc	r14
    1eb4:	9e ea       	ldi	r25, 0xAE	; 174
    1eb6:	c9 2e       	mov	r12, r25
    1eb8:	94 e0       	ldi	r25, 0x04	; 4
    1eba:	d9 2e       	mov	r13, r25
    1ebc:	0e 94 18 11 	call	0x2230	; 0x2230 <STEPPER_step>
    1ec0:	81 e0       	ldi	r24, 0x01	; 1
    1ec2:	68 2d       	mov	r22, r8
    1ec4:	4d 89       	ldd	r20, Y+21	; 0x15
    1ec6:	5e 89       	ldd	r21, Y+22	; 0x16
    1ec8:	2f 89       	ldd	r18, Y+23	; 0x17
    1eca:	38 8d       	ldd	r19, Y+24	; 0x18
    1ecc:	02 2d       	mov	r16, r2
    1ece:	0e 94 18 11 	call	0x2230	; 0x2230 <STEPPER_step>
    1ed2:	55 20       	and	r5, r5
    1ed4:	b9 f4       	brne	.+46     	; 0x1f04 <STEPPER_stepmode+0x154>
    1ed6:	00 d0       	rcall	.+0      	; 0x1ed8 <STEPPER_stepmode+0x128>
    1ed8:	00 d0       	rcall	.+0      	; 0x1eda <STEPPER_stepmode+0x12a>
    1eda:	0f 92       	push	r0
    1edc:	ad b7       	in	r26, 0x3d	; 61
    1ede:	be b7       	in	r27, 0x3e	; 62
    1ee0:	11 96       	adiw	r26, 0x01	; 1
    1ee2:	ed b7       	in	r30, 0x3d	; 61
    1ee4:	fe b7       	in	r31, 0x3e	; 62
    1ee6:	91 82       	std	Z+1, r9	; 0x01
    1ee8:	fd 01       	movw	r30, r26
    1eea:	b2 82       	std	Z+2, r11	; 0x02
    1eec:	a1 82       	std	Z+1, r10	; 0x01
    1eee:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1ef0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1ef2:	94 83       	std	Z+4, r25	; 0x04
    1ef4:	83 83       	std	Z+3, r24	; 0x03
    1ef6:	0e 94 a4 11 	call	0x2348	; 0x2348 <STEPPER_wait_and_then>
    1efa:	0f 90       	pop	r0
    1efc:	0f 90       	pop	r0
    1efe:	0f 90       	pop	r0
    1f00:	0f 90       	pop	r0
    1f02:	0f 90       	pop	r0
    1f04:	cf 91       	pop	r28
    1f06:	df 91       	pop	r29
    1f08:	1f 91       	pop	r17
    1f0a:	0f 91       	pop	r16
    1f0c:	ff 90       	pop	r15
    1f0e:	ef 90       	pop	r14
    1f10:	df 90       	pop	r13
    1f12:	cf 90       	pop	r12
    1f14:	bf 90       	pop	r11
    1f16:	af 90       	pop	r10
    1f18:	9f 90       	pop	r9
    1f1a:	8f 90       	pop	r8
    1f1c:	7f 90       	pop	r7
    1f1e:	6f 90       	pop	r6
    1f20:	5f 90       	pop	r5
    1f22:	4f 90       	pop	r4
    1f24:	3f 90       	pop	r3
    1f26:	2f 90       	pop	r2
    1f28:	08 95       	ret

00001f2a <STEPPER_move>:
    1f2a:	6f 92       	push	r6
    1f2c:	7f 92       	push	r7
    1f2e:	8f 92       	push	r8
    1f30:	9f 92       	push	r9
    1f32:	af 92       	push	r10
    1f34:	bf 92       	push	r11
    1f36:	cf 92       	push	r12
    1f38:	df 92       	push	r13
    1f3a:	ef 92       	push	r14
    1f3c:	ff 92       	push	r15
    1f3e:	0f 93       	push	r16
    1f40:	1f 93       	push	r17
    1f42:	df 93       	push	r29
    1f44:	cf 93       	push	r28
    1f46:	cd b7       	in	r28, 0x3d	; 61
    1f48:	de b7       	in	r29, 0x3e	; 62
    1f4a:	94 2e       	mov	r9, r20
    1f4c:	7c 2d       	mov	r23, r12
    1f4e:	d5 01       	movw	r26, r10
    1f50:	49 89       	ldd	r20, Y+17	; 0x11
    1f52:	5a 89       	ldd	r21, Y+18	; 0x12
    1f54:	ab 88       	ldd	r10, Y+19	; 0x13
    1f56:	bc 88       	ldd	r11, Y+20	; 0x14
    1f58:	cd 88       	ldd	r12, Y+21	; 0x15
    1f5a:	de 88       	ldd	r13, Y+22	; 0x16
    1f5c:	9f 89       	ldd	r25, Y+23	; 0x17
    1f5e:	81 30       	cpi	r24, 0x01	; 1
    1f60:	09 f4       	brne	.+2      	; 0x1f64 <STEPPER_move+0x3a>
    1f62:	57 c0       	rjmp	.+174    	; 0x2012 <STEPPER_move+0xe8>
    1f64:	81 30       	cpi	r24, 0x01	; 1
    1f66:	b8 f1       	brcs	.+110    	; 0x1fd6 <STEPPER_move+0xac>
    1f68:	82 30       	cpi	r24, 0x02	; 2
    1f6a:	09 f0       	breq	.+2      	; 0x1f6e <STEPPER_move+0x44>
    1f6c:	76 c0       	rjmp	.+236    	; 0x205a <STEPPER_move+0x130>
    1f6e:	61 30       	cpi	r22, 0x01	; 1
    1f70:	91 f0       	breq	.+36     	; 0x1f96 <STEPPER_move+0x6c>
    1f72:	61 30       	cpi	r22, 0x01	; 1
    1f74:	20 f0       	brcs	.+8      	; 0x1f7e <STEPPER_move+0x54>
    1f76:	62 30       	cpi	r22, 0x02	; 2
    1f78:	09 f0       	breq	.+2      	; 0x1f7c <STEPPER_move+0x52>
    1f7a:	6f c0       	rjmp	.+222    	; 0x205a <STEPPER_move+0x130>
    1f7c:	15 c0       	rjmp	.+42     	; 0x1fa8 <STEPPER_move+0x7e>
    1f7e:	80 e0       	ldi	r24, 0x00	; 0
    1f80:	60 e0       	ldi	r22, 0x00	; 0
    1f82:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <STEPPER_set_mode>
    1f86:	80 e0       	ldi	r24, 0x00	; 0
    1f88:	b7 01       	movw	r22, r14
    1f8a:	0e 94 aa 10 	call	0x2154	; 0x2154 <STEPPER_set_accel>
    1f8e:	80 e0       	ldi	r24, 0x00	; 0
    1f90:	69 2d       	mov	r22, r9
    1f92:	a8 01       	movw	r20, r16
    1f94:	1d c0       	rjmp	.+58     	; 0x1fd0 <STEPPER_move+0xa6>
    1f96:	81 e0       	ldi	r24, 0x01	; 1
    1f98:	60 e0       	ldi	r22, 0x00	; 0
    1f9a:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <STEPPER_set_mode>
    1f9e:	81 e0       	ldi	r24, 0x01	; 1
    1fa0:	b6 01       	movw	r22, r12
    1fa2:	0e 94 aa 10 	call	0x2154	; 0x2154 <STEPPER_set_accel>
    1fa6:	11 c0       	rjmp	.+34     	; 0x1fca <STEPPER_move+0xa0>
    1fa8:	82 e0       	ldi	r24, 0x02	; 2
    1faa:	60 e0       	ldi	r22, 0x00	; 0
    1fac:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <STEPPER_set_mode>
    1fb0:	80 e0       	ldi	r24, 0x00	; 0
    1fb2:	b7 01       	movw	r22, r14
    1fb4:	0e 94 aa 10 	call	0x2154	; 0x2154 <STEPPER_set_accel>
    1fb8:	81 e0       	ldi	r24, 0x01	; 1
    1fba:	b6 01       	movw	r22, r12
    1fbc:	0e 94 aa 10 	call	0x2154	; 0x2154 <STEPPER_set_accel>
    1fc0:	80 e0       	ldi	r24, 0x00	; 0
    1fc2:	69 2d       	mov	r22, r9
    1fc4:	a8 01       	movw	r20, r16
    1fc6:	0e 94 93 10 	call	0x2126	; 0x2126 <STEPPER_run>
    1fca:	81 e0       	ldi	r24, 0x01	; 1
    1fcc:	68 2d       	mov	r22, r8
    1fce:	a5 01       	movw	r20, r10
    1fd0:	0e 94 93 10 	call	0x2126	; 0x2126 <STEPPER_run>
    1fd4:	42 c0       	rjmp	.+132    	; 0x205a <STEPPER_move+0x130>
    1fd6:	ed b7       	in	r30, 0x3d	; 61
    1fd8:	fe b7       	in	r31, 0x3e	; 62
    1fda:	39 97       	sbiw	r30, 0x09	; 9
    1fdc:	0f b6       	in	r0, 0x3f	; 63
    1fde:	f8 94       	cli
    1fe0:	fe bf       	out	0x3e, r31	; 62
    1fe2:	0f be       	out	0x3f, r0	; 63
    1fe4:	ed bf       	out	0x3d, r30	; 61
    1fe6:	6d b6       	in	r6, 0x3d	; 61
    1fe8:	7e b6       	in	r7, 0x3e	; 62
    1fea:	08 94       	sec
    1fec:	61 1c       	adc	r6, r1
    1fee:	71 1c       	adc	r7, r1
    1ff0:	52 83       	std	Z+2, r21	; 0x02
    1ff2:	41 83       	std	Z+1, r20	; 0x01
    1ff4:	f3 01       	movw	r30, r6
    1ff6:	b3 82       	std	Z+3, r11	; 0x03
    1ff8:	a2 82       	std	Z+2, r10	; 0x02
    1ffa:	d5 82       	std	Z+5, r13	; 0x05
    1ffc:	c4 82       	std	Z+4, r12	; 0x04
    1ffe:	96 83       	std	Z+6, r25	; 0x06
    2000:	88 8d       	ldd	r24, Y+24	; 0x18
    2002:	99 8d       	ldd	r25, Y+25	; 0x19
    2004:	90 87       	std	Z+8, r25	; 0x08
    2006:	87 83       	std	Z+7, r24	; 0x07
    2008:	80 e0       	ldi	r24, 0x00	; 0
    200a:	49 2d       	mov	r20, r9
    200c:	c7 2e       	mov	r12, r23
    200e:	5d 01       	movw	r10, r26
    2010:	1a c0       	rjmp	.+52     	; 0x2046 <STEPPER_move+0x11c>
    2012:	ed b7       	in	r30, 0x3d	; 61
    2014:	fe b7       	in	r31, 0x3e	; 62
    2016:	39 97       	sbiw	r30, 0x09	; 9
    2018:	0f b6       	in	r0, 0x3f	; 63
    201a:	f8 94       	cli
    201c:	fe bf       	out	0x3e, r31	; 62
    201e:	0f be       	out	0x3f, r0	; 63
    2020:	ed bf       	out	0x3d, r30	; 61
    2022:	ad b7       	in	r26, 0x3d	; 61
    2024:	be b7       	in	r27, 0x3e	; 62
    2026:	11 96       	adiw	r26, 0x01	; 1
    2028:	52 83       	std	Z+2, r21	; 0x02
    202a:	41 83       	std	Z+1, r20	; 0x01
    202c:	fd 01       	movw	r30, r26
    202e:	b3 82       	std	Z+3, r11	; 0x03
    2030:	a2 82       	std	Z+2, r10	; 0x02
    2032:	d5 82       	std	Z+5, r13	; 0x05
    2034:	c4 82       	std	Z+4, r12	; 0x04
    2036:	96 83       	std	Z+6, r25	; 0x06
    2038:	10 86       	std	Z+8, r1	; 0x08
    203a:	17 82       	std	Z+7, r1	; 0x07
    203c:	81 e0       	ldi	r24, 0x01	; 1
    203e:	49 2d       	mov	r20, r9
    2040:	c7 2e       	mov	r12, r23
    2042:	aa 24       	eor	r10, r10
    2044:	bb 24       	eor	r11, r11
    2046:	0e 94 d8 0e 	call	0x1db0	; 0x1db0 <STEPPER_stepmode>
    204a:	8d b7       	in	r24, 0x3d	; 61
    204c:	9e b7       	in	r25, 0x3e	; 62
    204e:	09 96       	adiw	r24, 0x09	; 9
    2050:	0f b6       	in	r0, 0x3f	; 63
    2052:	f8 94       	cli
    2054:	9e bf       	out	0x3e, r25	; 62
    2056:	0f be       	out	0x3f, r0	; 63
    2058:	8d bf       	out	0x3d, r24	; 61
    205a:	cf 91       	pop	r28
    205c:	df 91       	pop	r29
    205e:	1f 91       	pop	r17
    2060:	0f 91       	pop	r16
    2062:	ff 90       	pop	r15
    2064:	ef 90       	pop	r14
    2066:	df 90       	pop	r13
    2068:	cf 90       	pop	r12
    206a:	bf 90       	pop	r11
    206c:	af 90       	pop	r10
    206e:	9f 90       	pop	r9
    2070:	8f 90       	pop	r8
    2072:	7f 90       	pop	r7
    2074:	6f 90       	pop	r6
    2076:	08 95       	ret

00002078 <STEPPER_open>:
    2078:	0e 94 43 19 	call	0x3286	; 0x3286 <__STEPPER_init>
    207c:	81 e0       	ldi	r24, 0x01	; 1
    207e:	80 93 ad 04 	sts	0x04AD, r24
    2082:	e7 e7       	ldi	r30, 0x77	; 119
    2084:	f4 e0       	ldi	r31, 0x04	; 4
    2086:	11 92       	st	Z+, r1
    2088:	11 92       	st	Z+, r1
    208a:	11 82       	std	Z+1, r1	; 0x01
    208c:	10 82       	st	Z, r1
    208e:	32 96       	adiw	r30, 0x02	; 2
    2090:	11 82       	std	Z+1, r1	; 0x01
    2092:	10 82       	st	Z, r1
    2094:	32 96       	adiw	r30, 0x02	; 2
    2096:	11 82       	std	Z+1, r1	; 0x01
    2098:	10 82       	st	Z, r1
    209a:	32 96       	adiw	r30, 0x02	; 2
    209c:	11 82       	std	Z+1, r1	; 0x01
    209e:	10 82       	st	Z, r1
    20a0:	32 96       	adiw	r30, 0x02	; 2
    20a2:	11 82       	std	Z+1, r1	; 0x01
    20a4:	10 82       	st	Z, r1
    20a6:	32 96       	adiw	r30, 0x02	; 2
    20a8:	11 82       	std	Z+1, r1	; 0x01
    20aa:	10 82       	st	Z, r1
    20ac:	32 96       	adiw	r30, 0x02	; 2
    20ae:	11 82       	std	Z+1, r1	; 0x01
    20b0:	10 82       	st	Z, r1
    20b2:	32 96       	adiw	r30, 0x02	; 2
    20b4:	11 82       	std	Z+1, r1	; 0x01
    20b6:	10 82       	st	Z, r1
    20b8:	32 96       	adiw	r30, 0x02	; 2
    20ba:	11 82       	std	Z+1, r1	; 0x01
    20bc:	10 82       	st	Z, r1
    20be:	32 96       	adiw	r30, 0x02	; 2
    20c0:	11 82       	std	Z+1, r1	; 0x01
    20c2:	10 82       	st	Z, r1
    20c4:	32 96       	adiw	r30, 0x02	; 2
    20c6:	11 82       	std	Z+1, r1	; 0x01
    20c8:	10 82       	st	Z, r1
    20ca:	32 96       	adiw	r30, 0x02	; 2
    20cc:	11 82       	std	Z+1, r1	; 0x01
    20ce:	10 82       	st	Z, r1
    20d0:	36 96       	adiw	r30, 0x06	; 6
    20d2:	11 92       	st	Z+, r1
    20d4:	11 92       	st	Z+, r1
    20d6:	11 92       	st	Z+, r1
    20d8:	10 82       	st	Z, r1
    20da:	32 96       	adiw	r30, 0x02	; 2
    20dc:	11 92       	st	Z+, r1
    20de:	11 92       	st	Z+, r1
    20e0:	11 92       	st	Z+, r1
    20e2:	11 92       	st	Z+, r1
    20e4:	11 92       	st	Z+, r1
    20e6:	11 92       	st	Z+, r1
    20e8:	11 92       	st	Z+, r1
    20ea:	11 82       	std	Z+1, r1	; 0x01
    20ec:	10 82       	st	Z, r1
    20ee:	32 96       	adiw	r30, 0x02	; 2
    20f0:	11 82       	std	Z+1, r1	; 0x01
    20f2:	10 82       	st	Z, r1
    20f4:	32 96       	adiw	r30, 0x02	; 2
    20f6:	11 82       	std	Z+1, r1	; 0x01
    20f8:	10 82       	st	Z, r1
    20fa:	32 96       	adiw	r30, 0x02	; 2
    20fc:	11 82       	std	Z+1, r1	; 0x01
    20fe:	10 82       	st	Z, r1
    2100:	76 97       	sbiw	r30, 0x16	; 22
    2102:	11 82       	std	Z+1, r1	; 0x01
    2104:	10 82       	st	Z, r1
    2106:	32 96       	adiw	r30, 0x02	; 2
    2108:	11 82       	std	Z+1, r1	; 0x01
    210a:	10 82       	st	Z, r1
    210c:	10 92 ac 04 	sts	0x04AC, r1
    2110:	10 92 ab 04 	sts	0x04AB, r1
    2114:	10 92 ad 04 	sts	0x04AD, r1
    2118:	87 e0       	ldi	r24, 0x07	; 7
    211a:	61 e0       	ldi	r22, 0x01	; 1
    211c:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    2120:	87 e0       	ldi	r24, 0x07	; 7
    2122:	91 e0       	ldi	r25, 0x01	; 1
    2124:	08 95       	ret

00002126 <STEPPER_run>:
    2126:	ef 92       	push	r14
    2128:	ff 92       	push	r15
    212a:	0f 93       	push	r16
    212c:	1f 93       	push	r17
    212e:	18 2f       	mov	r17, r24
    2130:	06 2f       	mov	r16, r22
    2132:	7a 01       	movw	r14, r20
    2134:	60 e0       	ldi	r22, 0x00	; 0
    2136:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <STEPPER_set_mode>
    213a:	81 2f       	mov	r24, r17
    213c:	60 2f       	mov	r22, r16
    213e:	0e 94 cc 10 	call	0x2198	; 0x2198 <STEPPER_set_dir>
    2142:	81 2f       	mov	r24, r17
    2144:	b7 01       	movw	r22, r14
    2146:	0e 94 f6 10 	call	0x21ec	; 0x21ec <STEPPER_set_speed>
    214a:	1f 91       	pop	r17
    214c:	0f 91       	pop	r16
    214e:	ff 90       	pop	r15
    2150:	ef 90       	pop	r14
    2152:	08 95       	ret

00002154 <STEPPER_set_accel>:
    2154:	48 2f       	mov	r20, r24
    2156:	81 e0       	ldi	r24, 0x01	; 1
    2158:	80 93 ad 04 	sts	0x04AD, r24
    215c:	cb 01       	movw	r24, r22
    215e:	23 e0       	ldi	r18, 0x03	; 3
    2160:	69 3e       	cpi	r22, 0xE9	; 233
    2162:	72 07       	cpc	r23, r18
    2164:	10 f0       	brcs	.+4      	; 0x216a <STEPPER_set_accel+0x16>
    2166:	88 ee       	ldi	r24, 0xE8	; 232
    2168:	93 e0       	ldi	r25, 0x03	; 3
    216a:	41 30       	cpi	r20, 0x01	; 1
    216c:	71 f0       	breq	.+28     	; 0x218a <STEPPER_set_accel+0x36>
    216e:	41 30       	cpi	r20, 0x01	; 1
    2170:	18 f0       	brcs	.+6      	; 0x2178 <STEPPER_set_accel+0x24>
    2172:	42 30       	cpi	r20, 0x02	; 2
    2174:	71 f4       	brne	.+28     	; 0x2192 <STEPPER_set_accel+0x3e>
    2176:	05 c0       	rjmp	.+10     	; 0x2182 <STEPPER_set_accel+0x2e>
    2178:	90 93 82 04 	sts	0x0482, r25
    217c:	80 93 81 04 	sts	0x0481, r24
    2180:	08 c0       	rjmp	.+16     	; 0x2192 <STEPPER_set_accel+0x3e>
    2182:	90 93 82 04 	sts	0x0482, r25
    2186:	80 93 81 04 	sts	0x0481, r24
    218a:	90 93 84 04 	sts	0x0484, r25
    218e:	80 93 83 04 	sts	0x0483, r24
    2192:	10 92 ad 04 	sts	0x04AD, r1
    2196:	08 95       	ret

00002198 <STEPPER_set_dir>:
    2198:	98 2f       	mov	r25, r24
    219a:	81 e0       	ldi	r24, 0x01	; 1
    219c:	80 93 ad 04 	sts	0x04AD, r24
    21a0:	91 30       	cpi	r25, 0x01	; 1
    21a2:	51 f0       	breq	.+20     	; 0x21b8 <STEPPER_set_dir+0x20>
    21a4:	91 30       	cpi	r25, 0x01	; 1
    21a6:	18 f0       	brcs	.+6      	; 0x21ae <STEPPER_set_dir+0x16>
    21a8:	92 30       	cpi	r25, 0x02	; 2
    21aa:	41 f4       	brne	.+16     	; 0x21bc <STEPPER_set_dir+0x24>
    21ac:	03 c0       	rjmp	.+6      	; 0x21b4 <STEPPER_set_dir+0x1c>
    21ae:	60 93 9a 04 	sts	0x049A, r22
    21b2:	04 c0       	rjmp	.+8      	; 0x21bc <STEPPER_set_dir+0x24>
    21b4:	60 93 9a 04 	sts	0x049A, r22
    21b8:	60 93 9b 04 	sts	0x049B, r22
    21bc:	10 92 ad 04 	sts	0x04AD, r1
    21c0:	08 95       	ret

000021c2 <STEPPER_set_mode>:
    21c2:	98 2f       	mov	r25, r24
    21c4:	81 e0       	ldi	r24, 0x01	; 1
    21c6:	80 93 ad 04 	sts	0x04AD, r24
    21ca:	91 30       	cpi	r25, 0x01	; 1
    21cc:	51 f0       	breq	.+20     	; 0x21e2 <STEPPER_set_mode+0x20>
    21ce:	91 30       	cpi	r25, 0x01	; 1
    21d0:	18 f0       	brcs	.+6      	; 0x21d8 <STEPPER_set_mode+0x16>
    21d2:	92 30       	cpi	r25, 0x02	; 2
    21d4:	41 f4       	brne	.+16     	; 0x21e6 <STEPPER_set_mode+0x24>
    21d6:	03 c0       	rjmp	.+6      	; 0x21de <STEPPER_set_mode+0x1c>
    21d8:	60 93 77 04 	sts	0x0477, r22
    21dc:	04 c0       	rjmp	.+8      	; 0x21e6 <STEPPER_set_mode+0x24>
    21de:	60 93 77 04 	sts	0x0477, r22
    21e2:	60 93 78 04 	sts	0x0478, r22
    21e6:	10 92 ad 04 	sts	0x04AD, r1
    21ea:	08 95       	ret

000021ec <STEPPER_set_speed>:
    21ec:	48 2f       	mov	r20, r24
    21ee:	81 e0       	ldi	r24, 0x01	; 1
    21f0:	80 93 ad 04 	sts	0x04AD, r24
    21f4:	cb 01       	movw	r24, r22
    21f6:	21 e0       	ldi	r18, 0x01	; 1
    21f8:	61 39       	cpi	r22, 0x91	; 145
    21fa:	72 07       	cpc	r23, r18
    21fc:	10 f0       	brcs	.+4      	; 0x2202 <STEPPER_set_speed+0x16>
    21fe:	80 e9       	ldi	r24, 0x90	; 144
    2200:	91 e0       	ldi	r25, 0x01	; 1
    2202:	41 30       	cpi	r20, 0x01	; 1
    2204:	71 f0       	breq	.+28     	; 0x2222 <STEPPER_set_speed+0x36>
    2206:	41 30       	cpi	r20, 0x01	; 1
    2208:	18 f0       	brcs	.+6      	; 0x2210 <STEPPER_set_speed+0x24>
    220a:	42 30       	cpi	r20, 0x02	; 2
    220c:	71 f4       	brne	.+28     	; 0x222a <STEPPER_set_speed+0x3e>
    220e:	05 c0       	rjmp	.+10     	; 0x221a <STEPPER_set_speed+0x2e>
    2210:	90 93 7a 04 	sts	0x047A, r25
    2214:	80 93 79 04 	sts	0x0479, r24
    2218:	08 c0       	rjmp	.+16     	; 0x222a <STEPPER_set_speed+0x3e>
    221a:	90 93 7a 04 	sts	0x047A, r25
    221e:	80 93 79 04 	sts	0x0479, r24
    2222:	90 93 7c 04 	sts	0x047C, r25
    2226:	80 93 7b 04 	sts	0x047B, r24
    222a:	10 92 ad 04 	sts	0x04AD, r1
    222e:	08 95       	ret

00002230 <STEPPER_step>:
    2230:	8f 92       	push	r8
    2232:	9f 92       	push	r9
    2234:	af 92       	push	r10
    2236:	bf 92       	push	r11
    2238:	cf 92       	push	r12
    223a:	df 92       	push	r13
    223c:	ef 92       	push	r14
    223e:	ff 92       	push	r15
    2240:	0f 93       	push	r16
    2242:	1f 93       	push	r17
    2244:	cf 93       	push	r28
    2246:	df 93       	push	r29
    2248:	18 2f       	mov	r17, r24
    224a:	f6 2e       	mov	r15, r22
    224c:	5a 01       	movw	r10, r20
    224e:	49 01       	movw	r8, r18
    2250:	e6 01       	movw	r28, r12
    2252:	61 e0       	ldi	r22, 0x01	; 1
    2254:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <STEPPER_set_mode>
    2258:	81 2f       	mov	r24, r17
    225a:	b5 01       	movw	r22, r10
    225c:	a4 01       	movw	r20, r8
    225e:	0e 94 7d 19 	call	0x32fa	; 0x32fa <STEPPER_setup_decels>
    2262:	81 2f       	mov	r24, r17
    2264:	6f 2d       	mov	r22, r15
    2266:	0e 94 cc 10 	call	0x2198	; 0x2198 <STEPPER_set_dir>
    226a:	81 2f       	mov	r24, r17
    226c:	60 2f       	mov	r22, r16
    226e:	0e 94 68 19 	call	0x32d0	; 0x32d0 <STEPPER_set_stop_mode>
    2272:	81 2f       	mov	r24, r17
    2274:	b5 01       	movw	r22, r10
    2276:	0e 94 4d 19 	call	0x329a	; 0x329a <STEPPER_set_steps>
    227a:	c1 14       	cp	r12, r1
    227c:	d1 04       	cpc	r13, r1
    227e:	99 f0       	breq	.+38     	; 0x22a6 <STEPPER_step+0x76>
    2280:	11 30       	cpi	r17, 0x01	; 1
    2282:	49 f0       	breq	.+18     	; 0x2296 <STEPPER_step+0x66>
    2284:	11 30       	cpi	r17, 0x01	; 1
    2286:	18 f0       	brcs	.+6      	; 0x228e <STEPPER_step+0x5e>
    2288:	12 30       	cpi	r17, 0x02	; 2
    228a:	69 f4       	brne	.+26     	; 0x22a6 <STEPPER_step+0x76>
    228c:	06 c0       	rjmp	.+12     	; 0x229a <STEPPER_step+0x6a>
    228e:	18 82       	st	Y, r1
    2290:	10 92 a9 04 	sts	0x04A9, r1
    2294:	08 c0       	rjmp	.+16     	; 0x22a6 <STEPPER_step+0x76>
    2296:	19 82       	std	Y+1, r1	; 0x01
    2298:	04 c0       	rjmp	.+8      	; 0x22a2 <STEPPER_step+0x72>
    229a:	18 82       	st	Y, r1
    229c:	19 82       	std	Y+1, r1	; 0x01
    229e:	10 92 a9 04 	sts	0x04A9, r1
    22a2:	10 92 aa 04 	sts	0x04AA, r1
    22a6:	d0 93 ac 04 	sts	0x04AC, r29
    22aa:	c0 93 ab 04 	sts	0x04AB, r28
    22ae:	ee 20       	and	r14, r14
    22b0:	b9 f5       	brne	.+110    	; 0x2320 <STEPPER_step+0xf0>
    22b2:	8a e1       	ldi	r24, 0x1A	; 26
    22b4:	92 e0       	ldi	r25, 0x02	; 2
    22b6:	90 93 ac 04 	sts	0x04AC, r25
    22ba:	80 93 ab 04 	sts	0x04AB, r24
    22be:	81 2f       	mov	r24, r17
    22c0:	b4 01       	movw	r22, r8
    22c2:	0e 94 f6 10 	call	0x21ec	; 0x21ec <STEPPER_set_speed>
    22c6:	81 2f       	mov	r24, r17
    22c8:	0e 94 2e 19 	call	0x325c	; 0x325c <STEPPER_go>
    22cc:	11 30       	cpi	r17, 0x01	; 1
    22ce:	71 f0       	breq	.+28     	; 0x22ec <STEPPER_step+0xbc>
    22d0:	11 30       	cpi	r17, 0x01	; 1
    22d2:	18 f0       	brcs	.+6      	; 0x22da <STEPPER_step+0xaa>
    22d4:	12 30       	cpi	r17, 0x02	; 2
    22d6:	59 f5       	brne	.+86     	; 0x232e <STEPPER_step+0xfe>
    22d8:	12 c0       	rjmp	.+36     	; 0x22fe <STEPPER_step+0xce>
    22da:	10 92 1a 02 	sts	0x021A, r1
    22de:	10 92 a9 04 	sts	0x04A9, r1
    22e2:	80 91 1a 02 	lds	r24, 0x021A
    22e6:	88 23       	and	r24, r24
    22e8:	e1 f3       	breq	.-8      	; 0x22e2 <STEPPER_step+0xb2>
    22ea:	21 c0       	rjmp	.+66     	; 0x232e <STEPPER_step+0xfe>
    22ec:	10 92 1b 02 	sts	0x021B, r1
    22f0:	10 92 aa 04 	sts	0x04AA, r1
    22f4:	80 91 1b 02 	lds	r24, 0x021B
    22f8:	88 23       	and	r24, r24
    22fa:	e1 f3       	breq	.-8      	; 0x22f4 <STEPPER_step+0xc4>
    22fc:	18 c0       	rjmp	.+48     	; 0x232e <STEPPER_step+0xfe>
    22fe:	10 92 1a 02 	sts	0x021A, r1
    2302:	10 92 1b 02 	sts	0x021B, r1
    2306:	10 92 a9 04 	sts	0x04A9, r1
    230a:	10 92 aa 04 	sts	0x04AA, r1
    230e:	80 91 1a 02 	lds	r24, 0x021A
    2312:	88 23       	and	r24, r24
    2314:	e1 f3       	breq	.-8      	; 0x230e <STEPPER_step+0xde>
    2316:	80 91 1b 02 	lds	r24, 0x021B
    231a:	88 23       	and	r24, r24
    231c:	c1 f3       	breq	.-16     	; 0x230e <STEPPER_step+0xde>
    231e:	07 c0       	rjmp	.+14     	; 0x232e <STEPPER_step+0xfe>
    2320:	81 2f       	mov	r24, r17
    2322:	b4 01       	movw	r22, r8
    2324:	0e 94 f6 10 	call	0x21ec	; 0x21ec <STEPPER_set_speed>
    2328:	81 2f       	mov	r24, r17
    232a:	0e 94 2e 19 	call	0x325c	; 0x325c <STEPPER_go>
    232e:	df 91       	pop	r29
    2330:	cf 91       	pop	r28
    2332:	1f 91       	pop	r17
    2334:	0f 91       	pop	r16
    2336:	ff 90       	pop	r15
    2338:	ef 90       	pop	r14
    233a:	df 90       	pop	r13
    233c:	cf 90       	pop	r12
    233e:	bf 90       	pop	r11
    2340:	af 90       	pop	r10
    2342:	9f 90       	pop	r9
    2344:	8f 90       	pop	r8
    2346:	08 95       	ret

00002348 <STEPPER_wait_and_then>:
    2348:	cf 92       	push	r12
    234a:	df 92       	push	r13
    234c:	ef 92       	push	r14
    234e:	ff 92       	push	r15
    2350:	0f 93       	push	r16
    2352:	1f 93       	push	r17
    2354:	df 93       	push	r29
    2356:	cf 93       	push	r28
    2358:	cd b7       	in	r28, 0x3d	; 61
    235a:	de b7       	in	r29, 0x3e	; 62
    235c:	8b 85       	ldd	r24, Y+11	; 0x0b
    235e:	81 30       	cpi	r24, 0x01	; 1
    2360:	61 f0       	breq	.+24     	; 0x237a <STEPPER_wait_and_then+0x32>
    2362:	81 30       	cpi	r24, 0x01	; 1
    2364:	18 f0       	brcs	.+6      	; 0x236c <STEPPER_wait_and_then+0x24>
    2366:	82 30       	cpi	r24, 0x02	; 2
    2368:	a1 f5       	brne	.+104    	; 0x23d2 <STEPPER_wait_and_then+0x8a>
    236a:	11 c0       	rjmp	.+34     	; 0x238e <STEPPER_wait_and_then+0x46>
    236c:	ec 85       	ldd	r30, Y+12	; 0x0c
    236e:	fd 85       	ldd	r31, Y+13	; 0x0d
    2370:	80 91 ae 04 	lds	r24, 0x04AE
    2374:	88 23       	and	r24, r24
    2376:	e1 f3       	breq	.-8      	; 0x2370 <STEPPER_wait_and_then+0x28>
    2378:	06 c0       	rjmp	.+12     	; 0x2386 <STEPPER_wait_and_then+0x3e>
    237a:	ec 85       	ldd	r30, Y+12	; 0x0c
    237c:	fd 85       	ldd	r31, Y+13	; 0x0d
    237e:	80 91 af 04 	lds	r24, 0x04AF
    2382:	88 23       	and	r24, r24
    2384:	e1 f3       	breq	.-8      	; 0x237e <STEPPER_wait_and_then+0x36>
    2386:	30 97       	sbiw	r30, 0x00	; 0
    2388:	21 f1       	breq	.+72     	; 0x23d2 <STEPPER_wait_and_then+0x8a>
    238a:	09 95       	icall
    238c:	22 c0       	rjmp	.+68     	; 0x23d2 <STEPPER_wait_and_then+0x8a>
    238e:	cc 84       	ldd	r12, Y+12	; 0x0c
    2390:	dd 84       	ldd	r13, Y+13	; 0x0d
    2392:	ee 84       	ldd	r14, Y+14	; 0x0e
    2394:	ff 84       	ldd	r15, Y+15	; 0x0f
    2396:	00 e0       	ldi	r16, 0x00	; 0
    2398:	10 e0       	ldi	r17, 0x00	; 0
    239a:	00 23       	and	r16, r16
    239c:	51 f4       	brne	.+20     	; 0x23b2 <STEPPER_wait_and_then+0x6a>
    239e:	80 91 ae 04 	lds	r24, 0x04AE
    23a2:	88 23       	and	r24, r24
    23a4:	31 f0       	breq	.+12     	; 0x23b2 <STEPPER_wait_and_then+0x6a>
    23a6:	c1 14       	cp	r12, r1
    23a8:	d1 04       	cpc	r13, r1
    23aa:	11 f0       	breq	.+4      	; 0x23b0 <STEPPER_wait_and_then+0x68>
    23ac:	f6 01       	movw	r30, r12
    23ae:	09 95       	icall
    23b0:	01 e0       	ldi	r16, 0x01	; 1
    23b2:	11 23       	and	r17, r17
    23b4:	51 f4       	brne	.+20     	; 0x23ca <STEPPER_wait_and_then+0x82>
    23b6:	80 91 af 04 	lds	r24, 0x04AF
    23ba:	88 23       	and	r24, r24
    23bc:	31 f0       	breq	.+12     	; 0x23ca <STEPPER_wait_and_then+0x82>
    23be:	e1 14       	cp	r14, r1
    23c0:	f1 04       	cpc	r15, r1
    23c2:	11 f0       	breq	.+4      	; 0x23c8 <STEPPER_wait_and_then+0x80>
    23c4:	f7 01       	movw	r30, r14
    23c6:	09 95       	icall
    23c8:	11 e0       	ldi	r17, 0x01	; 1
    23ca:	00 23       	and	r16, r16
    23cc:	31 f3       	breq	.-52     	; 0x239a <STEPPER_wait_and_then+0x52>
    23ce:	11 23       	and	r17, r17
    23d0:	21 f3       	breq	.-56     	; 0x239a <STEPPER_wait_and_then+0x52>
    23d2:	cf 91       	pop	r28
    23d4:	df 91       	pop	r29
    23d6:	1f 91       	pop	r17
    23d8:	0f 91       	pop	r16
    23da:	ff 90       	pop	r15
    23dc:	ef 90       	pop	r14
    23de:	df 90       	pop	r13
    23e0:	cf 90       	pop	r12
    23e2:	08 95       	ret

000023e4 <SYS_get_state>:
    23e4:	e8 2f       	mov	r30, r24
    23e6:	f0 e0       	ldi	r31, 0x00	; 0
    23e8:	e3 31       	cpi	r30, 0x13	; 19
    23ea:	f1 05       	cpc	r31, r1
    23ec:	40 f4       	brcc	.+16     	; 0x23fe <SYS_get_state+0x1a>
    23ee:	e2 5c       	subi	r30, 0xC2	; 194
    23f0:	ff 4f       	sbci	r31, 0xFF	; 255
    23f2:	ee 0f       	add	r30, r30
    23f4:	ff 1f       	adc	r31, r31
    23f6:	05 90       	lpm	r0, Z+
    23f8:	f4 91       	lpm	r31, Z+
    23fa:	e0 2d       	mov	r30, r0
    23fc:	09 94       	ijmp
    23fe:	80 e0       	ldi	r24, 0x00	; 0
    2400:	08 95       	ret
    2402:	80 91 b0 04 	lds	r24, 0x04B0
    2406:	08 95       	ret
    2408:	80 91 b1 04 	lds	r24, 0x04B1
    240c:	08 95       	ret
    240e:	80 91 b2 04 	lds	r24, 0x04B2
    2412:	08 95       	ret
    2414:	80 91 b3 04 	lds	r24, 0x04B3
    2418:	08 95       	ret
    241a:	80 91 b4 04 	lds	r24, 0x04B4
    241e:	08 95       	ret
    2420:	80 91 b6 04 	lds	r24, 0x04B6
    2424:	08 95       	ret
    2426:	80 91 b5 04 	lds	r24, 0x04B5
    242a:	08 95       	ret
    242c:	80 91 b7 04 	lds	r24, 0x04B7
    2430:	08 95       	ret
    2432:	80 91 b8 04 	lds	r24, 0x04B8
    2436:	08 95       	ret
    2438:	80 91 b9 04 	lds	r24, 0x04B9
    243c:	08 95       	ret
    243e:	80 91 ba 04 	lds	r24, 0x04BA
    2442:	08 95       	ret
    2444:	80 91 bb 04 	lds	r24, 0x04BB
    2448:	08 95       	ret
    244a:	80 91 bc 04 	lds	r24, 0x04BC
    244e:	08 95       	ret
    2450:	80 91 bd 04 	lds	r24, 0x04BD
    2454:	08 95       	ret
    2456:	80 91 be 04 	lds	r24, 0x04BE
    245a:	08 95       	ret
    245c:	80 91 bf 04 	lds	r24, 0x04BF
    2460:	08 95       	ret
    2462:	80 91 c0 04 	lds	r24, 0x04C0
    2466:	08 95       	ret
    2468:	80 91 c1 04 	lds	r24, 0x04C1
    246c:	08 95       	ret
    246e:	80 91 c2 04 	lds	r24, 0x04C2
    2472:	08 95       	ret

00002474 <SYS_set_state>:
    2474:	e8 2f       	mov	r30, r24
    2476:	f0 e0       	ldi	r31, 0x00	; 0
    2478:	e3 31       	cpi	r30, 0x13	; 19
    247a:	f1 05       	cpc	r31, r1
    247c:	08 f0       	brcs	.+2      	; 0x2480 <SYS_set_state+0xc>
    247e:	40 c0       	rjmp	.+128    	; 0x2500 <SYS_set_state+0x8c>
    2480:	ef 5a       	subi	r30, 0xAF	; 175
    2482:	ff 4f       	sbci	r31, 0xFF	; 255
    2484:	ee 0f       	add	r30, r30
    2486:	ff 1f       	adc	r31, r31
    2488:	05 90       	lpm	r0, Z+
    248a:	f4 91       	lpm	r31, Z+
    248c:	e0 2d       	mov	r30, r0
    248e:	09 94       	ijmp
    2490:	60 93 b0 04 	sts	0x04B0, r22
    2494:	08 95       	ret
    2496:	60 93 b1 04 	sts	0x04B1, r22
    249a:	08 95       	ret
    249c:	60 93 b2 04 	sts	0x04B2, r22
    24a0:	08 95       	ret
    24a2:	60 93 b3 04 	sts	0x04B3, r22
    24a6:	08 95       	ret
    24a8:	60 93 b4 04 	sts	0x04B4, r22
    24ac:	08 95       	ret
    24ae:	60 93 b6 04 	sts	0x04B6, r22
    24b2:	08 95       	ret
    24b4:	60 93 b5 04 	sts	0x04B5, r22
    24b8:	08 95       	ret
    24ba:	60 93 b7 04 	sts	0x04B7, r22
    24be:	08 95       	ret
    24c0:	60 93 b8 04 	sts	0x04B8, r22
    24c4:	08 95       	ret
    24c6:	60 93 b9 04 	sts	0x04B9, r22
    24ca:	08 95       	ret
    24cc:	60 93 ba 04 	sts	0x04BA, r22
    24d0:	08 95       	ret
    24d2:	60 93 bb 04 	sts	0x04BB, r22
    24d6:	08 95       	ret
    24d8:	60 93 bc 04 	sts	0x04BC, r22
    24dc:	08 95       	ret
    24de:	60 93 bd 04 	sts	0x04BD, r22
    24e2:	08 95       	ret
    24e4:	60 93 be 04 	sts	0x04BE, r22
    24e8:	08 95       	ret
    24ea:	60 93 bf 04 	sts	0x04BF, r22
    24ee:	08 95       	ret
    24f0:	60 93 c0 04 	sts	0x04C0, r22
    24f4:	08 95       	ret
    24f6:	60 93 c1 04 	sts	0x04C1, r22
    24fa:	08 95       	ret
    24fc:	60 93 c0 04 	sts	0x04C0, r22
    2500:	08 95       	ret

00002502 <ATTINY_get_SW_state>:
    2502:	1f 93       	push	r17
    2504:	cf 93       	push	r28
    2506:	df 93       	push	r29
    2508:	18 2f       	mov	r17, r24
    250a:	80 91 1d 02 	lds	r24, 0x021D
    250e:	88 23       	and	r24, r24
    2510:	41 f0       	breq	.+16     	; 0x2522 <ATTINY_get_SW_state+0x20>
    2512:	80 91 27 02 	lds	r24, 0x0227
    2516:	88 23       	and	r24, r24
    2518:	99 f0       	breq	.+38     	; 0x2540 <ATTINY_get_SW_state+0x3e>
    251a:	10 92 1d 02 	sts	0x021D, r1
    251e:	10 92 27 02 	sts	0x0227, r1
    2522:	0e 94 dd 19 	call	0x33ba	; 0x33ba <ATTINY_get_sensors>
    2526:	80 93 1c 02 	sts	0x021C, r24
    252a:	81 e2       	ldi	r24, 0x21	; 33
    252c:	92 e0       	ldi	r25, 0x02	; 2
    252e:	61 e0       	ldi	r22, 0x01	; 1
    2530:	40 e0       	ldi	r20, 0x00	; 0
    2532:	22 e3       	ldi	r18, 0x32	; 50
    2534:	30 e0       	ldi	r19, 0x00	; 0
    2536:	0e 94 3f 13 	call	0x267e	; 0x267e <TMRSRVC_new>
    253a:	81 e0       	ldi	r24, 0x01	; 1
    253c:	80 93 1d 02 	sts	0x021D, r24
    2540:	90 91 1c 02 	lds	r25, 0x021C
    2544:	a1 2f       	mov	r26, r17
    2546:	b0 e0       	ldi	r27, 0x00	; 0
    2548:	ed 01       	movw	r28, r26
    254a:	c4 55       	subi	r28, 0x54	; 84
    254c:	de 4f       	sbci	r29, 0xFE	; 254
    254e:	88 81       	ld	r24, Y
    2550:	88 23       	and	r24, r24
    2552:	69 f0       	breq	.+26     	; 0x256e <ATTINY_get_SW_state+0x6c>
    2554:	fd 01       	movw	r30, r26
    2556:	e1 55       	subi	r30, 0x51	; 81
    2558:	fe 4f       	sbci	r31, 0xFE	; 254
    255a:	80 81       	ld	r24, Z
    255c:	98 23       	and	r25, r24
    255e:	c1 f0       	breq	.+48     	; 0x2590 <ATTINY_get_SW_state+0x8e>
    2560:	fd 01       	movw	r30, r26
    2562:	e2 5e       	subi	r30, 0xE2	; 226
    2564:	fd 4f       	sbci	r31, 0xFD	; 253
    2566:	81 e0       	ldi	r24, 0x01	; 1
    2568:	80 83       	st	Z, r24
    256a:	18 82       	st	Y, r1
    256c:	11 c0       	rjmp	.+34     	; 0x2590 <ATTINY_get_SW_state+0x8e>
    256e:	fd 01       	movw	r30, r26
    2570:	e2 5e       	subi	r30, 0xE2	; 226
    2572:	fd 4f       	sbci	r31, 0xFD	; 253
    2574:	80 81       	ld	r24, Z
    2576:	81 11       	cpse	r24, r1
    2578:	10 82       	st	Z, r1
    257a:	fd 01       	movw	r30, r26
    257c:	e1 55       	subi	r30, 0x51	; 81
    257e:	fe 4f       	sbci	r31, 0xFE	; 254
    2580:	80 81       	ld	r24, Z
    2582:	98 23       	and	r25, r24
    2584:	29 f4       	brne	.+10     	; 0x2590 <ATTINY_get_SW_state+0x8e>
    2586:	fd 01       	movw	r30, r26
    2588:	e4 55       	subi	r30, 0x54	; 84
    258a:	fe 4f       	sbci	r31, 0xFE	; 254
    258c:	81 e0       	ldi	r24, 0x01	; 1
    258e:	80 83       	st	Z, r24
    2590:	a2 5e       	subi	r26, 0xE2	; 226
    2592:	bd 4f       	sbci	r27, 0xFD	; 253
    2594:	8c 91       	ld	r24, X
    2596:	df 91       	pop	r29
    2598:	cf 91       	pop	r28
    259a:	1f 91       	pop	r17
    259c:	08 95       	ret

0000259e <ATTINY_open>:
    259e:	82 e0       	ldi	r24, 0x02	; 2
    25a0:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    25a4:	88 23       	and	r24, r24
    25a6:	19 f4       	brne	.+6      	; 0x25ae <ATTINY_open+0x10>
    25a8:	90 e0       	ldi	r25, 0x00	; 0
    25aa:	82 e0       	ldi	r24, 0x02	; 2
    25ac:	08 95       	ret
    25ae:	10 92 de 04 	sts	0x04DE, r1
    25b2:	10 92 dd 04 	sts	0x04DD, r1
    25b6:	10 92 e0 04 	sts	0x04E0, r1
    25ba:	10 92 df 04 	sts	0x04DF, r1
    25be:	10 92 e2 04 	sts	0x04E2, r1
    25c2:	10 92 e1 04 	sts	0x04E1, r1
    25c6:	10 92 e4 04 	sts	0x04E4, r1
    25ca:	10 92 e3 04 	sts	0x04E3, r1
    25ce:	10 92 e6 04 	sts	0x04E6, r1
    25d2:	10 92 e5 04 	sts	0x04E5, r1
    25d6:	80 e9       	ldi	r24, 0x90	; 144
    25d8:	91 e0       	ldi	r25, 0x01	; 1
    25da:	90 93 ca 04 	sts	0x04CA, r25
    25de:	80 93 c9 04 	sts	0x04C9, r24
    25e2:	90 93 cc 04 	sts	0x04CC, r25
    25e6:	80 93 cb 04 	sts	0x04CB, r24
    25ea:	90 93 ce 04 	sts	0x04CE, r25
    25ee:	80 93 cd 04 	sts	0x04CD, r24
    25f2:	90 93 d0 04 	sts	0x04D0, r25
    25f6:	80 93 cf 04 	sts	0x04CF, r24
    25fa:	90 93 d2 04 	sts	0x04D2, r25
    25fe:	80 93 d1 04 	sts	0x04D1, r24
    2602:	84 e3       	ldi	r24, 0x34	; 52
    2604:	98 e0       	ldi	r25, 0x08	; 8
    2606:	90 93 d4 04 	sts	0x04D4, r25
    260a:	80 93 d3 04 	sts	0x04D3, r24
    260e:	90 93 d6 04 	sts	0x04D6, r25
    2612:	80 93 d5 04 	sts	0x04D5, r24
    2616:	90 93 d8 04 	sts	0x04D8, r25
    261a:	80 93 d7 04 	sts	0x04D7, r24
    261e:	90 93 da 04 	sts	0x04DA, r25
    2622:	80 93 d9 04 	sts	0x04D9, r24
    2626:	90 93 dc 04 	sts	0x04DC, r25
    262a:	80 93 db 04 	sts	0x04DB, r24
    262e:	81 e0       	ldi	r24, 0x01	; 1
    2630:	61 e0       	ldi	r22, 0x01	; 1
    2632:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    2636:	91 e0       	ldi	r25, 0x01	; 1
    2638:	81 e0       	ldi	r24, 0x01	; 1
    263a:	08 95       	ret

0000263c <TMRSRVC_delay>:
    263c:	df 93       	push	r29
    263e:	cf 93       	push	r28
    2640:	cd b7       	in	r28, 0x3d	; 61
    2642:	de b7       	in	r29, 0x3e	; 62
    2644:	29 97       	sbiw	r28, 0x09	; 9
    2646:	0f b6       	in	r0, 0x3f	; 63
    2648:	f8 94       	cli
    264a:	de bf       	out	0x3e, r29	; 62
    264c:	0f be       	out	0x3f, r0	; 63
    264e:	cd bf       	out	0x3d, r28	; 61
    2650:	9c 01       	movw	r18, r24
    2652:	ce 01       	movw	r24, r28
    2654:	01 96       	adiw	r24, 0x01	; 1
    2656:	61 e0       	ldi	r22, 0x01	; 1
    2658:	40 e0       	ldi	r20, 0x00	; 0
    265a:	0e 94 3f 13 	call	0x267e	; 0x267e <TMRSRVC_new>
    265e:	98 2f       	mov	r25, r24
    2660:	88 23       	and	r24, r24
    2662:	19 f4       	brne	.+6      	; 0x266a <TMRSRVC_delay+0x2e>
    2664:	8f 81       	ldd	r24, Y+7	; 0x07
    2666:	88 23       	and	r24, r24
    2668:	e9 f3       	breq	.-6      	; 0x2664 <TMRSRVC_delay+0x28>
    266a:	89 2f       	mov	r24, r25
    266c:	29 96       	adiw	r28, 0x09	; 9
    266e:	0f b6       	in	r0, 0x3f	; 63
    2670:	f8 94       	cli
    2672:	de bf       	out	0x3e, r29	; 62
    2674:	0f be       	out	0x3f, r0	; 63
    2676:	cd bf       	out	0x3d, r28	; 61
    2678:	cf 91       	pop	r28
    267a:	df 91       	pop	r29
    267c:	08 95       	ret

0000267e <TMRSRVC_new>:
    267e:	ef 92       	push	r14
    2680:	ff 92       	push	r15
    2682:	0f 93       	push	r16
    2684:	1f 93       	push	r17
    2686:	cf 93       	push	r28
    2688:	df 93       	push	r29
    268a:	ec 01       	movw	r28, r24
    268c:	f6 2e       	mov	r15, r22
    268e:	e4 2e       	mov	r14, r20
    2690:	89 01       	movw	r16, r18
    2692:	88 e0       	ldi	r24, 0x08	; 8
    2694:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    2698:	81 30       	cpi	r24, 0x01	; 1
    269a:	11 f0       	breq	.+4      	; 0x26a0 <TMRSRVC_new+0x22>
    269c:	81 e0       	ldi	r24, 0x01	; 1
    269e:	26 c0       	rjmp	.+76     	; 0x26ec <TMRSRVC_new+0x6e>
    26a0:	84 e0       	ldi	r24, 0x04	; 4
    26a2:	90 e0       	ldi	r25, 0x00	; 0
    26a4:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <malloc>
    26a8:	fc 01       	movw	r30, r24
    26aa:	00 97       	sbiw	r24, 0x00	; 0
    26ac:	11 f4       	brne	.+4      	; 0x26b2 <TMRSRVC_new+0x34>
    26ae:	82 e0       	ldi	r24, 0x02	; 2
    26b0:	1d c0       	rjmp	.+58     	; 0x26ec <TMRSRVC_new+0x6e>
    26b2:	f9 82       	std	Y+1, r15	; 0x01
    26b4:	f0 fc       	sbrc	r15, 0
    26b6:	1e 82       	std	Y+6, r1	; 0x06
    26b8:	81 e0       	ldi	r24, 0x01	; 1
    26ba:	e8 16       	cp	r14, r24
    26bc:	19 f4       	brne	.+6      	; 0x26c4 <TMRSRVC_new+0x46>
    26be:	89 81       	ldd	r24, Y+1	; 0x01
    26c0:	84 60       	ori	r24, 0x04	; 4
    26c2:	89 83       	std	Y+1, r24	; 0x01
    26c4:	89 81       	ldd	r24, Y+1	; 0x01
    26c6:	88 60       	ori	r24, 0x08	; 8
    26c8:	89 83       	std	Y+1, r24	; 0x01
    26ca:	1b 83       	std	Y+3, r17	; 0x03
    26cc:	0a 83       	std	Y+2, r16	; 0x02
    26ce:	1d 83       	std	Y+5, r17	; 0x05
    26d0:	0c 83       	std	Y+4, r16	; 0x04
    26d2:	d1 83       	std	Z+1, r29	; 0x01
    26d4:	c0 83       	st	Z, r28
    26d6:	13 82       	std	Z+3, r1	; 0x03
    26d8:	12 82       	std	Z+2, r1	; 0x02
    26da:	81 e0       	ldi	r24, 0x01	; 1
    26dc:	80 93 8a 02 	sts	0x028A, r24
    26e0:	cf 01       	movw	r24, r30
    26e2:	0e 94 0e 1a 	call	0x341c	; 0x341c <TMRSRVC_insert>
    26e6:	10 92 8a 02 	sts	0x028A, r1
    26ea:	80 e0       	ldi	r24, 0x00	; 0
    26ec:	df 91       	pop	r29
    26ee:	cf 91       	pop	r28
    26f0:	1f 91       	pop	r17
    26f2:	0f 91       	pop	r16
    26f4:	ff 90       	pop	r15
    26f6:	ef 90       	pop	r14
    26f8:	08 95       	ret

000026fa <I2C_MSTR_get>:
    26fa:	fc 01       	movw	r30, r24
    26fc:	80 91 ea 04 	lds	r24, 0x04EA
    2700:	81 30       	cpi	r24, 0x01	; 1
    2702:	11 f0       	breq	.+4      	; 0x2708 <I2C_MSTR_get+0xe>
    2704:	85 e0       	ldi	r24, 0x05	; 5
    2706:	08 95       	ret
    2708:	80 91 eb 04 	lds	r24, 0x04EB
    270c:	81 30       	cpi	r24, 0x01	; 1
    270e:	11 f0       	breq	.+4      	; 0x2714 <I2C_MSTR_get+0x1a>
    2710:	8a e0       	ldi	r24, 0x0A	; 10
    2712:	08 95       	ret
    2714:	61 30       	cpi	r22, 0x01	; 1
    2716:	11 f4       	brne	.+4      	; 0x271c <I2C_MSTR_get+0x22>
    2718:	84 ec       	ldi	r24, 0xC4	; 196
    271a:	01 c0       	rjmp	.+2      	; 0x271e <I2C_MSTR_get+0x24>
    271c:	84 e8       	ldi	r24, 0x84	; 132
    271e:	80 93 bc 00 	sts	0x00BC, r24
    2722:	80 91 bc 00 	lds	r24, 0x00BC
    2726:	87 ff       	sbrs	r24, 7
    2728:	fc cf       	rjmp	.-8      	; 0x2722 <I2C_MSTR_get+0x28>
    272a:	61 30       	cpi	r22, 0x01	; 1
    272c:	31 f4       	brne	.+12     	; 0x273a <I2C_MSTR_get+0x40>
    272e:	80 91 b9 00 	lds	r24, 0x00B9
    2732:	88 7f       	andi	r24, 0xF8	; 248
    2734:	80 35       	cpi	r24, 0x50	; 80
    2736:	59 f4       	brne	.+22     	; 0x274e <I2C_MSTR_get+0x54>
    2738:	05 c0       	rjmp	.+10     	; 0x2744 <I2C_MSTR_get+0x4a>
    273a:	80 91 b9 00 	lds	r24, 0x00B9
    273e:	88 7f       	andi	r24, 0xF8	; 248
    2740:	88 35       	cpi	r24, 0x58	; 88
    2742:	29 f4       	brne	.+10     	; 0x274e <I2C_MSTR_get+0x54>
    2744:	80 91 bb 00 	lds	r24, 0x00BB
    2748:	80 83       	st	Z, r24
    274a:	80 e0       	ldi	r24, 0x00	; 0
    274c:	08 95       	ret
    274e:	82 e0       	ldi	r24, 0x02	; 2
    2750:	08 95       	ret

00002752 <I2C_MSTR_send>:
    2752:	98 2f       	mov	r25, r24
    2754:	80 91 ea 04 	lds	r24, 0x04EA
    2758:	81 30       	cpi	r24, 0x01	; 1
    275a:	11 f0       	breq	.+4      	; 0x2760 <I2C_MSTR_send+0xe>
    275c:	85 e0       	ldi	r24, 0x05	; 5
    275e:	08 95       	ret
    2760:	80 91 eb 04 	lds	r24, 0x04EB
    2764:	81 30       	cpi	r24, 0x01	; 1
    2766:	11 f0       	breq	.+4      	; 0x276c <I2C_MSTR_send+0x1a>
    2768:	8a e0       	ldi	r24, 0x0A	; 10
    276a:	08 95       	ret
    276c:	90 93 bb 00 	sts	0x00BB, r25
    2770:	84 e8       	ldi	r24, 0x84	; 132
    2772:	80 93 bc 00 	sts	0x00BC, r24
    2776:	80 91 bc 00 	lds	r24, 0x00BC
    277a:	87 ff       	sbrs	r24, 7
    277c:	fc cf       	rjmp	.-8      	; 0x2776 <I2C_MSTR_send+0x24>
    277e:	80 91 b9 00 	lds	r24, 0x00B9
    2782:	90 e0       	ldi	r25, 0x00	; 0
    2784:	88 7f       	andi	r24, 0xF8	; 248
    2786:	90 70       	andi	r25, 0x00	; 0
    2788:	88 32       	cpi	r24, 0x28	; 40
    278a:	91 05       	cpc	r25, r1
    278c:	21 f0       	breq	.+8      	; 0x2796 <I2C_MSTR_send+0x44>
    278e:	c0 97       	sbiw	r24, 0x30	; 48
    2790:	21 f4       	brne	.+8      	; 0x279a <I2C_MSTR_send+0x48>
    2792:	83 e0       	ldi	r24, 0x03	; 3
    2794:	08 95       	ret
    2796:	80 e0       	ldi	r24, 0x00	; 0
    2798:	08 95       	ret
    279a:	8c e0       	ldi	r24, 0x0C	; 12
    279c:	08 95       	ret

0000279e <I2C_MSTR_start>:
    279e:	98 2f       	mov	r25, r24
    27a0:	20 91 ea 04 	lds	r18, 0x04EA
    27a4:	21 30       	cpi	r18, 0x01	; 1
    27a6:	11 f0       	breq	.+4      	; 0x27ac <I2C_MSTR_start+0xe>
    27a8:	85 e0       	ldi	r24, 0x05	; 5
    27aa:	08 95       	ret
    27ac:	80 91 ec 04 	lds	r24, 0x04EC
    27b0:	81 30       	cpi	r24, 0x01	; 1
    27b2:	11 f4       	brne	.+4      	; 0x27b8 <I2C_MSTR_start+0x1a>
    27b4:	89 e0       	ldi	r24, 0x09	; 9
    27b6:	08 95       	ret
    27b8:	20 93 eb 04 	sts	0x04EB, r18
    27bc:	84 ea       	ldi	r24, 0xA4	; 164
    27be:	80 93 bc 00 	sts	0x00BC, r24
    27c2:	80 91 bc 00 	lds	r24, 0x00BC
    27c6:	87 ff       	sbrs	r24, 7
    27c8:	fc cf       	rjmp	.-8      	; 0x27c2 <I2C_MSTR_start+0x24>
    27ca:	80 91 b9 00 	lds	r24, 0x00B9
    27ce:	88 7f       	andi	r24, 0xF8	; 248
    27d0:	88 30       	cpi	r24, 0x08	; 8
    27d2:	39 f0       	breq	.+14     	; 0x27e2 <I2C_MSTR_start+0x44>
    27d4:	80 91 b9 00 	lds	r24, 0x00B9
    27d8:	88 7f       	andi	r24, 0xF8	; 248
    27da:	80 31       	cpi	r24, 0x10	; 16
    27dc:	11 f0       	breq	.+4      	; 0x27e2 <I2C_MSTR_start+0x44>
    27de:	81 e0       	ldi	r24, 0x01	; 1
    27e0:	08 95       	ret
    27e2:	61 30       	cpi	r22, 0x01	; 1
    27e4:	19 f4       	brne	.+6      	; 0x27ec <I2C_MSTR_start+0x4e>
    27e6:	99 0f       	add	r25, r25
    27e8:	91 60       	ori	r25, 0x01	; 1
    27ea:	03 c0       	rjmp	.+6      	; 0x27f2 <I2C_MSTR_start+0x54>
    27ec:	66 23       	and	r22, r22
    27ee:	19 f4       	brne	.+6      	; 0x27f6 <I2C_MSTR_start+0x58>
    27f0:	99 0f       	add	r25, r25
    27f2:	90 93 bb 00 	sts	0x00BB, r25
    27f6:	84 e8       	ldi	r24, 0x84	; 132
    27f8:	80 93 bc 00 	sts	0x00BC, r24
    27fc:	80 91 bc 00 	lds	r24, 0x00BC
    2800:	87 ff       	sbrs	r24, 7
    2802:	fc cf       	rjmp	.-8      	; 0x27fc <I2C_MSTR_start+0x5e>
    2804:	61 30       	cpi	r22, 0x01	; 1
    2806:	31 f4       	brne	.+12     	; 0x2814 <I2C_MSTR_start+0x76>
    2808:	80 91 b9 00 	lds	r24, 0x00B9
    280c:	88 7f       	andi	r24, 0xF8	; 248
    280e:	80 34       	cpi	r24, 0x40	; 64
    2810:	41 f4       	brne	.+16     	; 0x2822 <I2C_MSTR_start+0x84>
    2812:	09 c0       	rjmp	.+18     	; 0x2826 <I2C_MSTR_start+0x88>
    2814:	66 23       	and	r22, r22
    2816:	39 f4       	brne	.+14     	; 0x2826 <I2C_MSTR_start+0x88>
    2818:	80 91 b9 00 	lds	r24, 0x00B9
    281c:	88 7f       	andi	r24, 0xF8	; 248
    281e:	88 31       	cpi	r24, 0x18	; 24
    2820:	11 f0       	breq	.+4      	; 0x2826 <I2C_MSTR_start+0x88>
    2822:	82 e0       	ldi	r24, 0x02	; 2
    2824:	08 95       	ret
    2826:	80 e0       	ldi	r24, 0x00	; 0
    2828:	08 95       	ret

0000282a <I2C_MSTR_stop>:
    282a:	80 91 eb 04 	lds	r24, 0x04EB
    282e:	81 30       	cpi	r24, 0x01	; 1
    2830:	11 f0       	breq	.+4      	; 0x2836 <I2C_MSTR_stop+0xc>
    2832:	8a e0       	ldi	r24, 0x0A	; 10
    2834:	08 95       	ret
    2836:	80 91 ed 04 	lds	r24, 0x04ED
    283a:	81 30       	cpi	r24, 0x01	; 1
    283c:	29 f4       	brne	.+10     	; 0x2848 <I2C_MSTR_stop+0x1e>
    283e:	85 e9       	ldi	r24, 0x95	; 149
    2840:	80 93 bc 00 	sts	0x00BC, r24
    2844:	80 e0       	ldi	r24, 0x00	; 0
    2846:	08 95       	ret
    2848:	84 e9       	ldi	r24, 0x94	; 148
    284a:	80 93 bc 00 	sts	0x00BC, r24
    284e:	80 e0       	ldi	r24, 0x00	; 0
    2850:	08 95       	ret

00002852 <I2C_open>:
    2852:	82 e1       	ldi	r24, 0x12	; 18
    2854:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    2858:	88 23       	and	r24, r24
    285a:	b1 f4       	brne	.+44     	; 0x2888 <I2C_open+0x36>
    285c:	10 92 ea 04 	sts	0x04EA, r1
    2860:	10 92 eb 04 	sts	0x04EB, r1
    2864:	10 92 ec 04 	sts	0x04EC, r1
    2868:	10 92 ed 04 	sts	0x04ED, r1
    286c:	10 92 ee 04 	sts	0x04EE, r1
    2870:	0e 94 aa 1a 	call	0x3554	; 0x3554 <__I2C_init>
    2874:	87 e1       	ldi	r24, 0x17	; 23
    2876:	60 e0       	ldi	r22, 0x00	; 0
    2878:	0e 94 47 14 	call	0x288e	; 0x288e <I2C_set_BRG>
    287c:	0e 94 a0 1a 	call	0x3540	; 0x3540 <I2C_enable>
    2880:	82 e1       	ldi	r24, 0x12	; 18
    2882:	61 e0       	ldi	r22, 0x01	; 1
    2884:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    2888:	82 e1       	ldi	r24, 0x12	; 18
    288a:	90 e0       	ldi	r25, 0x00	; 0
    288c:	08 95       	ret

0000288e <I2C_set_BRG>:
    288e:	63 70       	andi	r22, 0x03	; 3
    2890:	60 93 b9 00 	sts	0x00B9, r22
    2894:	80 93 b8 00 	sts	0x00B8, r24
    2898:	81 e0       	ldi	r24, 0x01	; 1
    289a:	80 93 ea 04 	sts	0x04EA, r24
    289e:	08 95       	ret

000028a0 <__ADC_init>:
    28a0:	8f e1       	ldi	r24, 0x1F	; 31
    28a2:	80 93 7c 00 	sts	0x007C, r24
    28a6:	ea e7       	ldi	r30, 0x7A	; 122
    28a8:	f0 e0       	ldi	r31, 0x00	; 0
    28aa:	87 e0       	ldi	r24, 0x07	; 7
    28ac:	80 83       	st	Z, r24
    28ae:	80 81       	ld	r24, Z
    28b0:	80 68       	ori	r24, 0x80	; 128
    28b2:	80 83       	st	Z, r24
    28b4:	08 95       	ret

000028b6 <CBOT_init>:
    28b6:	0e 94 ba 19 	call	0x3374	; 0x3374 <SYS_init>
    28ba:	0e 94 8d 17 	call	0x2f1a	; 0x2f1a <ATMEGA_open>
    28be:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <ISR_open>
    28c2:	0e 94 77 1a 	call	0x34ee	; 0x34ee <TMRSRVC_open>
    28c6:	0e 94 f2 17 	call	0x2fe4	; 0x2fe4 <SPI_open>
    28ca:	0e 94 cf 12 	call	0x259e	; 0x259e <ATTINY_open>
    28ce:	78 94       	sei
    28d0:	08 95       	ret

000028d2 <CBOT_ISR_init>:
    28d2:	00 00       	nop
    28d4:	08 95       	ret

000028d6 <__vector_16>:
    28d6:	1f 92       	push	r1
    28d8:	0f 92       	push	r0
    28da:	0f b6       	in	r0, 0x3f	; 63
    28dc:	0f 92       	push	r0
    28de:	11 24       	eor	r1, r1
    28e0:	2f 93       	push	r18
    28e2:	3f 93       	push	r19
    28e4:	4f 93       	push	r20
    28e6:	5f 93       	push	r21
    28e8:	6f 93       	push	r22
    28ea:	7f 93       	push	r23
    28ec:	8f 93       	push	r24
    28ee:	9f 93       	push	r25
    28f0:	af 93       	push	r26
    28f2:	bf 93       	push	r27
    28f4:	ef 93       	push	r30
    28f6:	ff 93       	push	r31
    28f8:	e0 91 4a 02 	lds	r30, 0x024A
    28fc:	f0 91 4b 02 	lds	r31, 0x024B
    2900:	30 97       	sbiw	r30, 0x00	; 0
    2902:	09 f0       	breq	.+2      	; 0x2906 <__vector_16+0x30>
    2904:	09 95       	icall
    2906:	ff 91       	pop	r31
    2908:	ef 91       	pop	r30
    290a:	bf 91       	pop	r27
    290c:	af 91       	pop	r26
    290e:	9f 91       	pop	r25
    2910:	8f 91       	pop	r24
    2912:	7f 91       	pop	r23
    2914:	6f 91       	pop	r22
    2916:	5f 91       	pop	r21
    2918:	4f 91       	pop	r20
    291a:	3f 91       	pop	r19
    291c:	2f 91       	pop	r18
    291e:	0f 90       	pop	r0
    2920:	0f be       	out	0x3f, r0	; 63
    2922:	0f 90       	pop	r0
    2924:	1f 90       	pop	r1
    2926:	18 95       	reti

00002928 <__vector_17>:
    2928:	1f 92       	push	r1
    292a:	0f 92       	push	r0
    292c:	0f b6       	in	r0, 0x3f	; 63
    292e:	0f 92       	push	r0
    2930:	11 24       	eor	r1, r1
    2932:	2f 93       	push	r18
    2934:	3f 93       	push	r19
    2936:	4f 93       	push	r20
    2938:	5f 93       	push	r21
    293a:	6f 93       	push	r22
    293c:	7f 93       	push	r23
    293e:	8f 93       	push	r24
    2940:	9f 93       	push	r25
    2942:	af 93       	push	r26
    2944:	bf 93       	push	r27
    2946:	ef 93       	push	r30
    2948:	ff 93       	push	r31
    294a:	e0 91 4c 02 	lds	r30, 0x024C
    294e:	f0 91 4d 02 	lds	r31, 0x024D
    2952:	30 97       	sbiw	r30, 0x00	; 0
    2954:	09 f0       	breq	.+2      	; 0x2958 <__vector_17+0x30>
    2956:	09 95       	icall
    2958:	ff 91       	pop	r31
    295a:	ef 91       	pop	r30
    295c:	bf 91       	pop	r27
    295e:	af 91       	pop	r26
    2960:	9f 91       	pop	r25
    2962:	8f 91       	pop	r24
    2964:	7f 91       	pop	r23
    2966:	6f 91       	pop	r22
    2968:	5f 91       	pop	r21
    296a:	4f 91       	pop	r20
    296c:	3f 91       	pop	r19
    296e:	2f 91       	pop	r18
    2970:	0f 90       	pop	r0
    2972:	0f be       	out	0x3f, r0	; 63
    2974:	0f 90       	pop	r0
    2976:	1f 90       	pop	r1
    2978:	18 95       	reti

0000297a <__vector_18>:
    297a:	1f 92       	push	r1
    297c:	0f 92       	push	r0
    297e:	0f b6       	in	r0, 0x3f	; 63
    2980:	0f 92       	push	r0
    2982:	11 24       	eor	r1, r1
    2984:	2f 93       	push	r18
    2986:	3f 93       	push	r19
    2988:	4f 93       	push	r20
    298a:	5f 93       	push	r21
    298c:	6f 93       	push	r22
    298e:	7f 93       	push	r23
    2990:	8f 93       	push	r24
    2992:	9f 93       	push	r25
    2994:	af 93       	push	r26
    2996:	bf 93       	push	r27
    2998:	ef 93       	push	r30
    299a:	ff 93       	push	r31
    299c:	e0 91 4e 02 	lds	r30, 0x024E
    29a0:	f0 91 4f 02 	lds	r31, 0x024F
    29a4:	30 97       	sbiw	r30, 0x00	; 0
    29a6:	09 f0       	breq	.+2      	; 0x29aa <__vector_18+0x30>
    29a8:	09 95       	icall
    29aa:	ff 91       	pop	r31
    29ac:	ef 91       	pop	r30
    29ae:	bf 91       	pop	r27
    29b0:	af 91       	pop	r26
    29b2:	9f 91       	pop	r25
    29b4:	8f 91       	pop	r24
    29b6:	7f 91       	pop	r23
    29b8:	6f 91       	pop	r22
    29ba:	5f 91       	pop	r21
    29bc:	4f 91       	pop	r20
    29be:	3f 91       	pop	r19
    29c0:	2f 91       	pop	r18
    29c2:	0f 90       	pop	r0
    29c4:	0f be       	out	0x3f, r0	; 63
    29c6:	0f 90       	pop	r0
    29c8:	1f 90       	pop	r1
    29ca:	18 95       	reti

000029cc <__vector_9>:
    29cc:	1f 92       	push	r1
    29ce:	0f 92       	push	r0
    29d0:	0f b6       	in	r0, 0x3f	; 63
    29d2:	0f 92       	push	r0
    29d4:	11 24       	eor	r1, r1
    29d6:	2f 93       	push	r18
    29d8:	3f 93       	push	r19
    29da:	4f 93       	push	r20
    29dc:	5f 93       	push	r21
    29de:	6f 93       	push	r22
    29e0:	7f 93       	push	r23
    29e2:	8f 93       	push	r24
    29e4:	9f 93       	push	r25
    29e6:	af 93       	push	r26
    29e8:	bf 93       	push	r27
    29ea:	ef 93       	push	r30
    29ec:	ff 93       	push	r31
    29ee:	e0 91 3c 02 	lds	r30, 0x023C
    29f2:	f0 91 3d 02 	lds	r31, 0x023D
    29f6:	30 97       	sbiw	r30, 0x00	; 0
    29f8:	09 f0       	breq	.+2      	; 0x29fc <__vector_9+0x30>
    29fa:	09 95       	icall
    29fc:	ff 91       	pop	r31
    29fe:	ef 91       	pop	r30
    2a00:	bf 91       	pop	r27
    2a02:	af 91       	pop	r26
    2a04:	9f 91       	pop	r25
    2a06:	8f 91       	pop	r24
    2a08:	7f 91       	pop	r23
    2a0a:	6f 91       	pop	r22
    2a0c:	5f 91       	pop	r21
    2a0e:	4f 91       	pop	r20
    2a10:	3f 91       	pop	r19
    2a12:	2f 91       	pop	r18
    2a14:	0f 90       	pop	r0
    2a16:	0f be       	out	0x3f, r0	; 63
    2a18:	0f 90       	pop	r0
    2a1a:	1f 90       	pop	r1
    2a1c:	18 95       	reti

00002a1e <__vector_10>:
    2a1e:	1f 92       	push	r1
    2a20:	0f 92       	push	r0
    2a22:	0f b6       	in	r0, 0x3f	; 63
    2a24:	0f 92       	push	r0
    2a26:	11 24       	eor	r1, r1
    2a28:	2f 93       	push	r18
    2a2a:	3f 93       	push	r19
    2a2c:	4f 93       	push	r20
    2a2e:	5f 93       	push	r21
    2a30:	6f 93       	push	r22
    2a32:	7f 93       	push	r23
    2a34:	8f 93       	push	r24
    2a36:	9f 93       	push	r25
    2a38:	af 93       	push	r26
    2a3a:	bf 93       	push	r27
    2a3c:	ef 93       	push	r30
    2a3e:	ff 93       	push	r31
    2a40:	e0 91 3e 02 	lds	r30, 0x023E
    2a44:	f0 91 3f 02 	lds	r31, 0x023F
    2a48:	30 97       	sbiw	r30, 0x00	; 0
    2a4a:	09 f0       	breq	.+2      	; 0x2a4e <__vector_10+0x30>
    2a4c:	09 95       	icall
    2a4e:	ff 91       	pop	r31
    2a50:	ef 91       	pop	r30
    2a52:	bf 91       	pop	r27
    2a54:	af 91       	pop	r26
    2a56:	9f 91       	pop	r25
    2a58:	8f 91       	pop	r24
    2a5a:	7f 91       	pop	r23
    2a5c:	6f 91       	pop	r22
    2a5e:	5f 91       	pop	r21
    2a60:	4f 91       	pop	r20
    2a62:	3f 91       	pop	r19
    2a64:	2f 91       	pop	r18
    2a66:	0f 90       	pop	r0
    2a68:	0f be       	out	0x3f, r0	; 63
    2a6a:	0f 90       	pop	r0
    2a6c:	1f 90       	pop	r1
    2a6e:	18 95       	reti

00002a70 <__vector_11>:
    2a70:	1f 92       	push	r1
    2a72:	0f 92       	push	r0
    2a74:	0f b6       	in	r0, 0x3f	; 63
    2a76:	0f 92       	push	r0
    2a78:	11 24       	eor	r1, r1
    2a7a:	2f 93       	push	r18
    2a7c:	3f 93       	push	r19
    2a7e:	4f 93       	push	r20
    2a80:	5f 93       	push	r21
    2a82:	6f 93       	push	r22
    2a84:	7f 93       	push	r23
    2a86:	8f 93       	push	r24
    2a88:	9f 93       	push	r25
    2a8a:	af 93       	push	r26
    2a8c:	bf 93       	push	r27
    2a8e:	ef 93       	push	r30
    2a90:	ff 93       	push	r31
    2a92:	e0 91 40 02 	lds	r30, 0x0240
    2a96:	f0 91 41 02 	lds	r31, 0x0241
    2a9a:	30 97       	sbiw	r30, 0x00	; 0
    2a9c:	09 f0       	breq	.+2      	; 0x2aa0 <__vector_11+0x30>
    2a9e:	09 95       	icall
    2aa0:	ff 91       	pop	r31
    2aa2:	ef 91       	pop	r30
    2aa4:	bf 91       	pop	r27
    2aa6:	af 91       	pop	r26
    2aa8:	9f 91       	pop	r25
    2aaa:	8f 91       	pop	r24
    2aac:	7f 91       	pop	r23
    2aae:	6f 91       	pop	r22
    2ab0:	5f 91       	pop	r21
    2ab2:	4f 91       	pop	r20
    2ab4:	3f 91       	pop	r19
    2ab6:	2f 91       	pop	r18
    2ab8:	0f 90       	pop	r0
    2aba:	0f be       	out	0x3f, r0	; 63
    2abc:	0f 90       	pop	r0
    2abe:	1f 90       	pop	r1
    2ac0:	18 95       	reti

00002ac2 <__vector_13>:
    2ac2:	1f 92       	push	r1
    2ac4:	0f 92       	push	r0
    2ac6:	0f b6       	in	r0, 0x3f	; 63
    2ac8:	0f 92       	push	r0
    2aca:	11 24       	eor	r1, r1
    2acc:	2f 93       	push	r18
    2ace:	3f 93       	push	r19
    2ad0:	4f 93       	push	r20
    2ad2:	5f 93       	push	r21
    2ad4:	6f 93       	push	r22
    2ad6:	7f 93       	push	r23
    2ad8:	8f 93       	push	r24
    2ada:	9f 93       	push	r25
    2adc:	af 93       	push	r26
    2ade:	bf 93       	push	r27
    2ae0:	ef 93       	push	r30
    2ae2:	ff 93       	push	r31
    2ae4:	e0 91 44 02 	lds	r30, 0x0244
    2ae8:	f0 91 45 02 	lds	r31, 0x0245
    2aec:	30 97       	sbiw	r30, 0x00	; 0
    2aee:	09 f0       	breq	.+2      	; 0x2af2 <__vector_13+0x30>
    2af0:	09 95       	icall
    2af2:	ff 91       	pop	r31
    2af4:	ef 91       	pop	r30
    2af6:	bf 91       	pop	r27
    2af8:	af 91       	pop	r26
    2afa:	9f 91       	pop	r25
    2afc:	8f 91       	pop	r24
    2afe:	7f 91       	pop	r23
    2b00:	6f 91       	pop	r22
    2b02:	5f 91       	pop	r21
    2b04:	4f 91       	pop	r20
    2b06:	3f 91       	pop	r19
    2b08:	2f 91       	pop	r18
    2b0a:	0f 90       	pop	r0
    2b0c:	0f be       	out	0x3f, r0	; 63
    2b0e:	0f 90       	pop	r0
    2b10:	1f 90       	pop	r1
    2b12:	18 95       	reti

00002b14 <__vector_14>:
    2b14:	1f 92       	push	r1
    2b16:	0f 92       	push	r0
    2b18:	0f b6       	in	r0, 0x3f	; 63
    2b1a:	0f 92       	push	r0
    2b1c:	11 24       	eor	r1, r1
    2b1e:	2f 93       	push	r18
    2b20:	3f 93       	push	r19
    2b22:	4f 93       	push	r20
    2b24:	5f 93       	push	r21
    2b26:	6f 93       	push	r22
    2b28:	7f 93       	push	r23
    2b2a:	8f 93       	push	r24
    2b2c:	9f 93       	push	r25
    2b2e:	af 93       	push	r26
    2b30:	bf 93       	push	r27
    2b32:	ef 93       	push	r30
    2b34:	ff 93       	push	r31
    2b36:	e0 91 46 02 	lds	r30, 0x0246
    2b3a:	f0 91 47 02 	lds	r31, 0x0247
    2b3e:	30 97       	sbiw	r30, 0x00	; 0
    2b40:	09 f0       	breq	.+2      	; 0x2b44 <__vector_14+0x30>
    2b42:	09 95       	icall
    2b44:	ff 91       	pop	r31
    2b46:	ef 91       	pop	r30
    2b48:	bf 91       	pop	r27
    2b4a:	af 91       	pop	r26
    2b4c:	9f 91       	pop	r25
    2b4e:	8f 91       	pop	r24
    2b50:	7f 91       	pop	r23
    2b52:	6f 91       	pop	r22
    2b54:	5f 91       	pop	r21
    2b56:	4f 91       	pop	r20
    2b58:	3f 91       	pop	r19
    2b5a:	2f 91       	pop	r18
    2b5c:	0f 90       	pop	r0
    2b5e:	0f be       	out	0x3f, r0	; 63
    2b60:	0f 90       	pop	r0
    2b62:	1f 90       	pop	r1
    2b64:	18 95       	reti

00002b66 <__vector_12>:
    2b66:	1f 92       	push	r1
    2b68:	0f 92       	push	r0
    2b6a:	0f b6       	in	r0, 0x3f	; 63
    2b6c:	0f 92       	push	r0
    2b6e:	11 24       	eor	r1, r1
    2b70:	2f 93       	push	r18
    2b72:	3f 93       	push	r19
    2b74:	4f 93       	push	r20
    2b76:	5f 93       	push	r21
    2b78:	6f 93       	push	r22
    2b7a:	7f 93       	push	r23
    2b7c:	8f 93       	push	r24
    2b7e:	9f 93       	push	r25
    2b80:	af 93       	push	r26
    2b82:	bf 93       	push	r27
    2b84:	ef 93       	push	r30
    2b86:	ff 93       	push	r31
    2b88:	e0 91 42 02 	lds	r30, 0x0242
    2b8c:	f0 91 43 02 	lds	r31, 0x0243
    2b90:	30 97       	sbiw	r30, 0x00	; 0
    2b92:	09 f0       	breq	.+2      	; 0x2b96 <__vector_12+0x30>
    2b94:	09 95       	icall
    2b96:	ff 91       	pop	r31
    2b98:	ef 91       	pop	r30
    2b9a:	bf 91       	pop	r27
    2b9c:	af 91       	pop	r26
    2b9e:	9f 91       	pop	r25
    2ba0:	8f 91       	pop	r24
    2ba2:	7f 91       	pop	r23
    2ba4:	6f 91       	pop	r22
    2ba6:	5f 91       	pop	r21
    2ba8:	4f 91       	pop	r20
    2baa:	3f 91       	pop	r19
    2bac:	2f 91       	pop	r18
    2bae:	0f 90       	pop	r0
    2bb0:	0f be       	out	0x3f, r0	; 63
    2bb2:	0f 90       	pop	r0
    2bb4:	1f 90       	pop	r1
    2bb6:	18 95       	reti

00002bb8 <__vector_15>:
    2bb8:	1f 92       	push	r1
    2bba:	0f 92       	push	r0
    2bbc:	0f b6       	in	r0, 0x3f	; 63
    2bbe:	0f 92       	push	r0
    2bc0:	11 24       	eor	r1, r1
    2bc2:	2f 93       	push	r18
    2bc4:	3f 93       	push	r19
    2bc6:	4f 93       	push	r20
    2bc8:	5f 93       	push	r21
    2bca:	6f 93       	push	r22
    2bcc:	7f 93       	push	r23
    2bce:	8f 93       	push	r24
    2bd0:	9f 93       	push	r25
    2bd2:	af 93       	push	r26
    2bd4:	bf 93       	push	r27
    2bd6:	ef 93       	push	r30
    2bd8:	ff 93       	push	r31
    2bda:	e0 91 48 02 	lds	r30, 0x0248
    2bde:	f0 91 49 02 	lds	r31, 0x0249
    2be2:	30 97       	sbiw	r30, 0x00	; 0
    2be4:	09 f0       	breq	.+2      	; 0x2be8 <__vector_15+0x30>
    2be6:	09 95       	icall
    2be8:	ff 91       	pop	r31
    2bea:	ef 91       	pop	r30
    2bec:	bf 91       	pop	r27
    2bee:	af 91       	pop	r26
    2bf0:	9f 91       	pop	r25
    2bf2:	8f 91       	pop	r24
    2bf4:	7f 91       	pop	r23
    2bf6:	6f 91       	pop	r22
    2bf8:	5f 91       	pop	r21
    2bfa:	4f 91       	pop	r20
    2bfc:	3f 91       	pop	r19
    2bfe:	2f 91       	pop	r18
    2c00:	0f 90       	pop	r0
    2c02:	0f be       	out	0x3f, r0	; 63
    2c04:	0f 90       	pop	r0
    2c06:	1f 90       	pop	r1
    2c08:	18 95       	reti

00002c0a <__vector_4>:
    2c0a:	1f 92       	push	r1
    2c0c:	0f 92       	push	r0
    2c0e:	0f b6       	in	r0, 0x3f	; 63
    2c10:	0f 92       	push	r0
    2c12:	11 24       	eor	r1, r1
    2c14:	2f 93       	push	r18
    2c16:	3f 93       	push	r19
    2c18:	4f 93       	push	r20
    2c1a:	5f 93       	push	r21
    2c1c:	6f 93       	push	r22
    2c1e:	7f 93       	push	r23
    2c20:	8f 93       	push	r24
    2c22:	9f 93       	push	r25
    2c24:	af 93       	push	r26
    2c26:	bf 93       	push	r27
    2c28:	ef 93       	push	r30
    2c2a:	ff 93       	push	r31
    2c2c:	e0 91 32 02 	lds	r30, 0x0232
    2c30:	f0 91 33 02 	lds	r31, 0x0233
    2c34:	30 97       	sbiw	r30, 0x00	; 0
    2c36:	09 f0       	breq	.+2      	; 0x2c3a <__vector_4+0x30>
    2c38:	09 95       	icall
    2c3a:	ff 91       	pop	r31
    2c3c:	ef 91       	pop	r30
    2c3e:	bf 91       	pop	r27
    2c40:	af 91       	pop	r26
    2c42:	9f 91       	pop	r25
    2c44:	8f 91       	pop	r24
    2c46:	7f 91       	pop	r23
    2c48:	6f 91       	pop	r22
    2c4a:	5f 91       	pop	r21
    2c4c:	4f 91       	pop	r20
    2c4e:	3f 91       	pop	r19
    2c50:	2f 91       	pop	r18
    2c52:	0f 90       	pop	r0
    2c54:	0f be       	out	0x3f, r0	; 63
    2c56:	0f 90       	pop	r0
    2c58:	1f 90       	pop	r1
    2c5a:	18 95       	reti

00002c5c <__vector_5>:
    2c5c:	1f 92       	push	r1
    2c5e:	0f 92       	push	r0
    2c60:	0f b6       	in	r0, 0x3f	; 63
    2c62:	0f 92       	push	r0
    2c64:	11 24       	eor	r1, r1
    2c66:	2f 93       	push	r18
    2c68:	3f 93       	push	r19
    2c6a:	4f 93       	push	r20
    2c6c:	5f 93       	push	r21
    2c6e:	6f 93       	push	r22
    2c70:	7f 93       	push	r23
    2c72:	8f 93       	push	r24
    2c74:	9f 93       	push	r25
    2c76:	af 93       	push	r26
    2c78:	bf 93       	push	r27
    2c7a:	ef 93       	push	r30
    2c7c:	ff 93       	push	r31
    2c7e:	e0 91 34 02 	lds	r30, 0x0234
    2c82:	f0 91 35 02 	lds	r31, 0x0235
    2c86:	30 97       	sbiw	r30, 0x00	; 0
    2c88:	09 f0       	breq	.+2      	; 0x2c8c <__vector_5+0x30>
    2c8a:	09 95       	icall
    2c8c:	ff 91       	pop	r31
    2c8e:	ef 91       	pop	r30
    2c90:	bf 91       	pop	r27
    2c92:	af 91       	pop	r26
    2c94:	9f 91       	pop	r25
    2c96:	8f 91       	pop	r24
    2c98:	7f 91       	pop	r23
    2c9a:	6f 91       	pop	r22
    2c9c:	5f 91       	pop	r21
    2c9e:	4f 91       	pop	r20
    2ca0:	3f 91       	pop	r19
    2ca2:	2f 91       	pop	r18
    2ca4:	0f 90       	pop	r0
    2ca6:	0f be       	out	0x3f, r0	; 63
    2ca8:	0f 90       	pop	r0
    2caa:	1f 90       	pop	r1
    2cac:	18 95       	reti

00002cae <__vector_6>:
    2cae:	1f 92       	push	r1
    2cb0:	0f 92       	push	r0
    2cb2:	0f b6       	in	r0, 0x3f	; 63
    2cb4:	0f 92       	push	r0
    2cb6:	11 24       	eor	r1, r1
    2cb8:	2f 93       	push	r18
    2cba:	3f 93       	push	r19
    2cbc:	4f 93       	push	r20
    2cbe:	5f 93       	push	r21
    2cc0:	6f 93       	push	r22
    2cc2:	7f 93       	push	r23
    2cc4:	8f 93       	push	r24
    2cc6:	9f 93       	push	r25
    2cc8:	af 93       	push	r26
    2cca:	bf 93       	push	r27
    2ccc:	ef 93       	push	r30
    2cce:	ff 93       	push	r31
    2cd0:	e0 91 36 02 	lds	r30, 0x0236
    2cd4:	f0 91 37 02 	lds	r31, 0x0237
    2cd8:	30 97       	sbiw	r30, 0x00	; 0
    2cda:	09 f0       	breq	.+2      	; 0x2cde <__vector_6+0x30>
    2cdc:	09 95       	icall
    2cde:	ff 91       	pop	r31
    2ce0:	ef 91       	pop	r30
    2ce2:	bf 91       	pop	r27
    2ce4:	af 91       	pop	r26
    2ce6:	9f 91       	pop	r25
    2ce8:	8f 91       	pop	r24
    2cea:	7f 91       	pop	r23
    2cec:	6f 91       	pop	r22
    2cee:	5f 91       	pop	r21
    2cf0:	4f 91       	pop	r20
    2cf2:	3f 91       	pop	r19
    2cf4:	2f 91       	pop	r18
    2cf6:	0f 90       	pop	r0
    2cf8:	0f be       	out	0x3f, r0	; 63
    2cfa:	0f 90       	pop	r0
    2cfc:	1f 90       	pop	r1
    2cfe:	18 95       	reti

00002d00 <__vector_7>:
    2d00:	1f 92       	push	r1
    2d02:	0f 92       	push	r0
    2d04:	0f b6       	in	r0, 0x3f	; 63
    2d06:	0f 92       	push	r0
    2d08:	11 24       	eor	r1, r1
    2d0a:	2f 93       	push	r18
    2d0c:	3f 93       	push	r19
    2d0e:	4f 93       	push	r20
    2d10:	5f 93       	push	r21
    2d12:	6f 93       	push	r22
    2d14:	7f 93       	push	r23
    2d16:	8f 93       	push	r24
    2d18:	9f 93       	push	r25
    2d1a:	af 93       	push	r26
    2d1c:	bf 93       	push	r27
    2d1e:	ef 93       	push	r30
    2d20:	ff 93       	push	r31
    2d22:	e0 91 38 02 	lds	r30, 0x0238
    2d26:	f0 91 39 02 	lds	r31, 0x0239
    2d2a:	30 97       	sbiw	r30, 0x00	; 0
    2d2c:	09 f0       	breq	.+2      	; 0x2d30 <__vector_7+0x30>
    2d2e:	09 95       	icall
    2d30:	ff 91       	pop	r31
    2d32:	ef 91       	pop	r30
    2d34:	bf 91       	pop	r27
    2d36:	af 91       	pop	r26
    2d38:	9f 91       	pop	r25
    2d3a:	8f 91       	pop	r24
    2d3c:	7f 91       	pop	r23
    2d3e:	6f 91       	pop	r22
    2d40:	5f 91       	pop	r21
    2d42:	4f 91       	pop	r20
    2d44:	3f 91       	pop	r19
    2d46:	2f 91       	pop	r18
    2d48:	0f 90       	pop	r0
    2d4a:	0f be       	out	0x3f, r0	; 63
    2d4c:	0f 90       	pop	r0
    2d4e:	1f 90       	pop	r1
    2d50:	18 95       	reti

00002d52 <ISR_attach>:
    2d52:	e8 2f       	mov	r30, r24
    2d54:	80 32       	cpi	r24, 0x20	; 32
    2d56:	68 f4       	brcc	.+26     	; 0x2d72 <ISR_attach+0x20>
    2d58:	80 51       	subi	r24, 0x10	; 16
    2d5a:	83 30       	cpi	r24, 0x03	; 3
    2d5c:	50 f0       	brcs	.+20     	; 0x2d72 <ISR_attach+0x20>
    2d5e:	f0 e0       	ldi	r31, 0x00	; 0
    2d60:	ee 0f       	add	r30, r30
    2d62:	ff 1f       	adc	r31, r31
    2d64:	e6 5d       	subi	r30, 0xD6	; 214
    2d66:	fd 4f       	sbci	r31, 0xFD	; 253
    2d68:	20 81       	ld	r18, Z
    2d6a:	31 81       	ldd	r19, Z+1	; 0x01
    2d6c:	71 83       	std	Z+1, r23	; 0x01
    2d6e:	60 83       	st	Z, r22
    2d70:	02 c0       	rjmp	.+4      	; 0x2d76 <ISR_attach+0x24>
    2d72:	20 e0       	ldi	r18, 0x00	; 0
    2d74:	30 e0       	ldi	r19, 0x00	; 0
    2d76:	c9 01       	movw	r24, r18
    2d78:	08 95       	ret

00002d7a <ISR_open>:
    2d7a:	80 e1       	ldi	r24, 0x10	; 16
    2d7c:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    2d80:	88 23       	and	r24, r24
    2d82:	61 f4       	brne	.+24     	; 0x2d9c <ISR_open+0x22>
    2d84:	ea e2       	ldi	r30, 0x2A	; 42
    2d86:	f2 e0       	ldi	r31, 0x02	; 2
    2d88:	11 92       	st	Z+, r1
    2d8a:	11 92       	st	Z+, r1
    2d8c:	82 e0       	ldi	r24, 0x02	; 2
    2d8e:	ea 36       	cpi	r30, 0x6A	; 106
    2d90:	f8 07       	cpc	r31, r24
    2d92:	d1 f7       	brne	.-12     	; 0x2d88 <ISR_open+0xe>
    2d94:	80 e1       	ldi	r24, 0x10	; 16
    2d96:	61 e0       	ldi	r22, 0x01	; 1
    2d98:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    2d9c:	80 e1       	ldi	r24, 0x10	; 16
    2d9e:	91 e0       	ldi	r25, 0x01	; 1
    2da0:	08 95       	ret

00002da2 <__LCD_init>:
    2da2:	23 9a       	sbi	0x04, 3	; 4
    2da4:	08 95       	ret

00002da6 <__LCD_putchar>:
    2da6:	ff 92       	push	r15
    2da8:	0f 93       	push	r16
    2daa:	1f 93       	push	r17
    2dac:	cf 93       	push	r28
    2dae:	df 93       	push	r29
    2db0:	f8 2e       	mov	r15, r24
    2db2:	8a e0       	ldi	r24, 0x0A	; 10
    2db4:	f8 16       	cp	r15, r24
    2db6:	b1 f0       	breq	.+44     	; 0x2de4 <__LCD_putchar+0x3e>
    2db8:	8f 15       	cp	r24, r15
    2dba:	48 f0       	brcs	.+18     	; 0x2dce <__LCD_putchar+0x28>
    2dbc:	e8 e0       	ldi	r30, 0x08	; 8
    2dbe:	fe 16       	cp	r15, r30
    2dc0:	b9 f1       	breq	.+110    	; 0x2e30 <__LCD_putchar+0x8a>
    2dc2:	ef 15       	cp	r30, r15
    2dc4:	38 f1       	brcs	.+78     	; 0x2e14 <__LCD_putchar+0x6e>
    2dc6:	f7 e0       	ldi	r31, 0x07	; 7
    2dc8:	ff 16       	cp	r15, r31
    2dca:	51 f4       	brne	.+20     	; 0x2de0 <__LCD_putchar+0x3a>
    2dcc:	3b c0       	rjmp	.+118    	; 0x2e44 <__LCD_putchar+0x9e>
    2dce:	8d e0       	ldi	r24, 0x0D	; 13
    2dd0:	f8 16       	cp	r15, r24
    2dd2:	59 f0       	breq	.+22     	; 0x2dea <__LCD_putchar+0x44>
    2dd4:	eb e1       	ldi	r30, 0x1B	; 27
    2dd6:	fe 16       	cp	r15, r30
    2dd8:	89 f0       	breq	.+34     	; 0x2dfc <__LCD_putchar+0x56>
    2dda:	fc e0       	ldi	r31, 0x0C	; 12
    2ddc:	ff 16       	cp	r15, r31
    2dde:	41 f0       	breq	.+16     	; 0x2df0 <__LCD_putchar+0x4a>
    2de0:	01 e0       	ldi	r16, 0x01	; 1
    2de2:	41 c0       	rjmp	.+130    	; 0x2e66 <__LCD_putchar+0xc0>
    2de4:	10 92 c3 04 	sts	0x04C3, r1
    2de8:	03 c0       	rjmp	.+6      	; 0x2df0 <__LCD_putchar+0x4a>
    2dea:	10 92 c3 04 	sts	0x04C3, r1
    2dee:	3a c0       	rjmp	.+116    	; 0x2e64 <__LCD_putchar+0xbe>
    2df0:	80 91 c4 04 	lds	r24, 0x04C4
    2df4:	81 50       	subi	r24, 0x01	; 1
    2df6:	80 93 c4 04 	sts	0x04C4, r24
    2dfa:	34 c0       	rjmp	.+104    	; 0x2e64 <__LCD_putchar+0xbe>
    2dfc:	0e 94 b4 0c 	call	0x1968	; 0x1968 <LCD_clear>
    2e00:	14 c0       	rjmp	.+40     	; 0x2e2a <__LCD_putchar+0x84>
    2e02:	80 e0       	ldi	r24, 0x00	; 0
    2e04:	61 e0       	ldi	r22, 0x01	; 1
    2e06:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    2e0a:	80 91 c3 04 	lds	r24, 0x04C3
    2e0e:	8f 5f       	subi	r24, 0xFF	; 255
    2e10:	80 93 c3 04 	sts	0x04C3, r24
    2e14:	80 91 c3 04 	lds	r24, 0x04C3
    2e18:	87 ff       	sbrs	r24, 7
    2e1a:	f3 cf       	rjmp	.-26     	; 0x2e02 <__LCD_putchar+0x5c>
    2e1c:	10 92 c3 04 	sts	0x04C3, r1
    2e20:	80 91 c4 04 	lds	r24, 0x04C4
    2e24:	81 50       	subi	r24, 0x01	; 1
    2e26:	80 93 c4 04 	sts	0x04C4, r24
    2e2a:	00 e0       	ldi	r16, 0x00	; 0
    2e2c:	11 e0       	ldi	r17, 0x01	; 1
    2e2e:	1c c0       	rjmp	.+56     	; 0x2e68 <__LCD_putchar+0xc2>
    2e30:	80 91 c3 04 	lds	r24, 0x04C3
    2e34:	88 23       	and	r24, r24
    2e36:	b1 f0       	breq	.+44     	; 0x2e64 <__LCD_putchar+0xbe>
    2e38:	80 91 c3 04 	lds	r24, 0x04C3
    2e3c:	86 50       	subi	r24, 0x06	; 6
    2e3e:	80 93 c3 04 	sts	0x04C3, r24
    2e42:	10 c0       	rjmp	.+32     	; 0x2e64 <__LCD_putchar+0xbe>
    2e44:	81 e0       	ldi	r24, 0x01	; 1
    2e46:	0e 94 c0 0e 	call	0x1d80	; 0x1d80 <SPKR_open>
    2e4a:	64 ef       	ldi	r22, 0xF4	; 244
    2e4c:	71 e0       	ldi	r23, 0x01	; 1
    2e4e:	80 e0       	ldi	r24, 0x00	; 0
    2e50:	90 e0       	ldi	r25, 0x00	; 0
    2e52:	4d e7       	ldi	r20, 0x7D	; 125
    2e54:	50 e0       	ldi	r21, 0x00	; 0
    2e56:	24 e6       	ldi	r18, 0x64	; 100
    2e58:	30 e0       	ldi	r19, 0x00	; 0
    2e5a:	0e 94 db 18 	call	0x31b6	; 0x31b6 <SPKR_play_beep>
    2e5e:	81 e0       	ldi	r24, 0x01	; 1
    2e60:	0e 94 a7 18 	call	0x314e	; 0x314e <SPKR_close>
    2e64:	00 e0       	ldi	r16, 0x00	; 0
    2e66:	10 e0       	ldi	r17, 0x00	; 0
    2e68:	80 91 c4 04 	lds	r24, 0x04C4
    2e6c:	60 91 c3 04 	lds	r22, 0x04C3
    2e70:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <LCD_set_PGC_addr>
    2e74:	00 23       	and	r16, r16
    2e76:	51 f1       	breq	.+84     	; 0x2ecc <__LCD_putchar+0x126>
    2e78:	85 e0       	ldi	r24, 0x05	; 5
    2e7a:	f8 9e       	mul	r15, r24
    2e7c:	c0 01       	movw	r24, r0
    2e7e:	11 24       	eor	r1, r1
    2e80:	ec 01       	movw	r28, r24
    2e82:	c3 55       	subi	r28, 0x53	; 83
    2e84:	df 4f       	sbci	r29, 0xFF	; 255
    2e86:	8c 01       	movw	r16, r24
    2e88:	0e 54       	subi	r16, 0x4E	; 78
    2e8a:	1f 4f       	sbci	r17, 0xFF	; 255
    2e8c:	fe 01       	movw	r30, r28
    2e8e:	84 91       	lpm	r24, Z+
    2e90:	61 e0       	ldi	r22, 0x01	; 1
    2e92:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    2e96:	21 96       	adiw	r28, 0x01	; 1
    2e98:	c0 17       	cp	r28, r16
    2e9a:	d1 07       	cpc	r29, r17
    2e9c:	b9 f7       	brne	.-18     	; 0x2e8c <__LCD_putchar+0xe6>
    2e9e:	80 e0       	ldi	r24, 0x00	; 0
    2ea0:	61 e0       	ldi	r22, 0x01	; 1
    2ea2:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <LCD_write>
    2ea6:	80 91 c3 04 	lds	r24, 0x04C3
    2eaa:	8a 5f       	subi	r24, 0xFA	; 250
    2eac:	80 93 c3 04 	sts	0x04C3, r24
    2eb0:	80 91 c3 04 	lds	r24, 0x04C3
    2eb4:	90 e0       	ldi	r25, 0x00	; 0
    2eb6:	8c 37       	cpi	r24, 0x7C	; 124
    2eb8:	91 05       	cpc	r25, r1
    2eba:	3c f0       	brlt	.+14     	; 0x2eca <__LCD_putchar+0x124>
    2ebc:	10 92 c3 04 	sts	0x04C3, r1
    2ec0:	80 91 c4 04 	lds	r24, 0x04C4
    2ec4:	81 50       	subi	r24, 0x01	; 1
    2ec6:	80 93 c4 04 	sts	0x04C4, r24
    2eca:	11 e0       	ldi	r17, 0x01	; 1
    2ecc:	80 91 c4 04 	lds	r24, 0x04C4
    2ed0:	83 70       	andi	r24, 0x03	; 3
    2ed2:	80 93 c4 04 	sts	0x04C4, r24
    2ed6:	11 30       	cpi	r17, 0x01	; 1
    2ed8:	59 f4       	brne	.+22     	; 0x2ef0 <__LCD_putchar+0x14a>
    2eda:	80 91 c5 04 	lds	r24, 0x04C5
    2ede:	81 30       	cpi	r24, 0x01	; 1
    2ee0:	39 f4       	brne	.+14     	; 0x2ef0 <__LCD_putchar+0x14a>
    2ee2:	e0 91 c6 04 	lds	r30, 0x04C6
    2ee6:	f0 91 c7 04 	lds	r31, 0x04C7
    2eea:	30 97       	sbiw	r30, 0x00	; 0
    2eec:	09 f0       	breq	.+2      	; 0x2ef0 <__LCD_putchar+0x14a>
    2eee:	09 95       	icall
    2ef0:	80 e0       	ldi	r24, 0x00	; 0
    2ef2:	90 e0       	ldi	r25, 0x00	; 0
    2ef4:	df 91       	pop	r29
    2ef6:	cf 91       	pop	r28
    2ef8:	1f 91       	pop	r17
    2efa:	0f 91       	pop	r16
    2efc:	ff 90       	pop	r15
    2efe:	08 95       	ret

00002f00 <__LED_clr_pattern>:
    2f00:	85 fd       	sbrc	r24, 5
    2f02:	5d 98       	cbi	0x0b, 5	; 11
    2f04:	86 fd       	sbrc	r24, 6
    2f06:	5e 98       	cbi	0x0b, 6	; 11
    2f08:	08 95       	ret

00002f0a <__LED_init>:
    2f0a:	55 9a       	sbi	0x0a, 5	; 10
    2f0c:	56 9a       	sbi	0x0a, 6	; 10
    2f0e:	08 95       	ret

00002f10 <__LED_set_pattern>:
    2f10:	85 fd       	sbrc	r24, 5
    2f12:	5d 9a       	sbi	0x0b, 5	; 11
    2f14:	86 fd       	sbrc	r24, 6
    2f16:	5e 9a       	sbi	0x0b, 6	; 11
    2f18:	08 95       	ret

00002f1a <ATMEGA_open>:
    2f1a:	80 e0       	ldi	r24, 0x00	; 0
    2f1c:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    2f20:	88 23       	and	r24, r24
    2f22:	51 f4       	brne	.+20     	; 0x2f38 <ATMEGA_open+0x1e>
    2f24:	f8 94       	cli
    2f26:	0e 94 be 1a 	call	0x357c	; 0x357c <__ATMEGA_init>
    2f2a:	81 e0       	ldi	r24, 0x01	; 1
    2f2c:	0e 94 9f 17 	call	0x2f3e	; 0x2f3e <ATMEGA_set_clk_mode>
    2f30:	80 e0       	ldi	r24, 0x00	; 0
    2f32:	61 e0       	ldi	r22, 0x01	; 1
    2f34:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    2f38:	80 e0       	ldi	r24, 0x00	; 0
    2f3a:	91 e0       	ldi	r25, 0x01	; 1
    2f3c:	08 95       	ret

00002f3e <ATMEGA_set_clk_mode>:
    2f3e:	81 30       	cpi	r24, 0x01	; 1
    2f40:	49 f0       	breq	.+18     	; 0x2f54 <ATMEGA_set_clk_mode+0x16>
    2f42:	f8 94       	cli
    2f44:	81 30       	cpi	r24, 0x01	; 1
    2f46:	20 f1       	brcs	.+72     	; 0x2f90 <ATMEGA_set_clk_mode+0x52>
    2f48:	82 30       	cpi	r24, 0x02	; 2
    2f4a:	b1 f0       	breq	.+44     	; 0x2f78 <ATMEGA_set_clk_mode+0x3a>
    2f4c:	83 30       	cpi	r24, 0x03	; 3
    2f4e:	09 f0       	breq	.+2      	; 0x2f52 <ATMEGA_set_clk_mode+0x14>
    2f50:	45 c0       	rjmp	.+138    	; 0x2fdc <ATMEGA_set_clk_mode+0x9e>
    2f52:	17 c0       	rjmp	.+46     	; 0x2f82 <ATMEGA_set_clk_mode+0x44>
    2f54:	2c 9a       	sbi	0x05, 4	; 5
    2f56:	80 e8       	ldi	r24, 0x80	; 128
    2f58:	80 93 61 00 	sts	0x0061, r24
    2f5c:	10 92 61 00 	sts	0x0061, r1
    2f60:	80 e0       	ldi	r24, 0x00	; 0
    2f62:	90 e0       	ldi	r25, 0x00	; 0
    2f64:	00 00       	nop
    2f66:	01 96       	adiw	r24, 0x01	; 1
    2f68:	88 32       	cpi	r24, 0x28	; 40
    2f6a:	91 05       	cpc	r25, r1
    2f6c:	d9 f7       	brne	.-10     	; 0x2f64 <ATMEGA_set_clk_mode+0x26>
    2f6e:	10 92 68 00 	sts	0x0068, r1
    2f72:	10 92 6b 00 	sts	0x006B, r1
    2f76:	08 95       	ret
    2f78:	80 e8       	ldi	r24, 0x80	; 128
    2f7a:	80 93 61 00 	sts	0x0061, r24
    2f7e:	83 e0       	ldi	r24, 0x03	; 3
    2f80:	04 c0       	rjmp	.+8      	; 0x2f8a <ATMEGA_set_clk_mode+0x4c>
    2f82:	80 e8       	ldi	r24, 0x80	; 128
    2f84:	80 93 61 00 	sts	0x0061, r24
    2f88:	88 e0       	ldi	r24, 0x08	; 8
    2f8a:	80 93 61 00 	sts	0x0061, r24
    2f8e:	28 c0       	rjmp	.+80     	; 0x2fe0 <ATMEGA_set_clk_mode+0xa2>
    2f90:	80 e0       	ldi	r24, 0x00	; 0
    2f92:	90 e0       	ldi	r25, 0x00	; 0
    2f94:	00 00       	nop
    2f96:	01 96       	adiw	r24, 0x01	; 1
    2f98:	2d e6       	ldi	r18, 0x6D	; 109
    2f9a:	80 36       	cpi	r24, 0x60	; 96
    2f9c:	92 07       	cpc	r25, r18
    2f9e:	d1 f7       	brne	.-12     	; 0x2f94 <ATMEGA_set_clk_mode+0x56>
    2fa0:	2c 98       	cbi	0x05, 4	; 5
    2fa2:	80 e0       	ldi	r24, 0x00	; 0
    2fa4:	90 e0       	ldi	r25, 0x00	; 0
    2fa6:	00 00       	nop
    2fa8:	01 96       	adiw	r24, 0x01	; 1
    2faa:	2d e6       	ldi	r18, 0x6D	; 109
    2fac:	80 36       	cpi	r24, 0x60	; 96
    2fae:	92 07       	cpc	r25, r18
    2fb0:	d1 f7       	brne	.-12     	; 0x2fa6 <ATMEGA_set_clk_mode+0x68>
    2fb2:	10 92 7a 00 	sts	0x007A, r1
    2fb6:	8f ef       	ldi	r24, 0xFF	; 255
    2fb8:	80 93 64 00 	sts	0x0064, r24
    2fbc:	80 91 68 00 	lds	r24, 0x0068
    2fc0:	81 60       	ori	r24, 0x01	; 1
    2fc2:	80 93 68 00 	sts	0x0068, r24
    2fc6:	80 91 6b 00 	lds	r24, 0x006B
    2fca:	84 60       	ori	r24, 0x04	; 4
    2fcc:	80 93 6b 00 	sts	0x006B, r24
    2fd0:	78 94       	sei
    2fd2:	83 b7       	in	r24, 0x33	; 51
    2fd4:	81 60       	ori	r24, 0x01	; 1
    2fd6:	83 bf       	out	0x33, r24	; 51
    2fd8:	88 95       	sleep
    2fda:	08 95       	ret
    2fdc:	82 30       	cpi	r24, 0x02	; 2
    2fde:	08 f0       	brcs	.+2      	; 0x2fe2 <ATMEGA_set_clk_mode+0xa4>
    2fe0:	78 94       	sei
    2fe2:	08 95       	ret

00002fe4 <SPI_open>:
    2fe4:	0f 93       	push	r16
    2fe6:	1f 93       	push	r17
    2fe8:	0e 94 ea 1a 	call	0x35d4	; 0x35d4 <__SPI_init>
    2fec:	80 e0       	ldi	r24, 0x00	; 0
    2fee:	69 ed       	ldi	r22, 0xD9	; 217
    2ff0:	7a e1       	ldi	r23, 0x1A	; 26
    2ff2:	0e 94 2b 18 	call	0x3056	; 0x3056 <SPI_set_config_func>
    2ff6:	81 e0       	ldi	r24, 0x01	; 1
    2ff8:	61 ed       	ldi	r22, 0xD1	; 209
    2ffa:	7a e1       	ldi	r23, 0x1A	; 26
    2ffc:	0e 94 2b 18 	call	0x3056	; 0x3056 <SPI_set_config_func>
    3000:	82 e0       	ldi	r24, 0x02	; 2
    3002:	69 ec       	ldi	r22, 0xC9	; 201
    3004:	7a e1       	ldi	r23, 0x1A	; 26
    3006:	0e 94 2b 18 	call	0x3056	; 0x3056 <SPI_set_config_func>
    300a:	86 e0       	ldi	r24, 0x06	; 6
    300c:	61 ee       	ldi	r22, 0xE1	; 225
    300e:	7a e1       	ldi	r23, 0x1A	; 26
    3010:	0e 94 2b 18 	call	0x3056	; 0x3056 <SPI_set_config_func>
    3014:	01 ec       	ldi	r16, 0xC1	; 193
    3016:	1a e1       	ldi	r17, 0x1A	; 26
    3018:	83 e0       	ldi	r24, 0x03	; 3
    301a:	b8 01       	movw	r22, r16
    301c:	0e 94 2b 18 	call	0x3056	; 0x3056 <SPI_set_config_func>
    3020:	84 e0       	ldi	r24, 0x04	; 4
    3022:	b8 01       	movw	r22, r16
    3024:	0e 94 2b 18 	call	0x3056	; 0x3056 <SPI_set_config_func>
    3028:	85 e0       	ldi	r24, 0x05	; 5
    302a:	b8 01       	movw	r22, r16
    302c:	0e 94 2b 18 	call	0x3056	; 0x3056 <SPI_set_config_func>
    3030:	87 e0       	ldi	r24, 0x07	; 7
    3032:	b8 01       	movw	r22, r16
    3034:	0e 94 2b 18 	call	0x3056	; 0x3056 <SPI_set_config_func>
    3038:	82 e0       	ldi	r24, 0x02	; 2
    303a:	61 e0       	ldi	r22, 0x01	; 1
    303c:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    3040:	8f ef       	ldi	r24, 0xFF	; 255
    3042:	80 93 c8 04 	sts	0x04C8, r24
    3046:	87 e0       	ldi	r24, 0x07	; 7
    3048:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <SPI_set_slave_addr>
    304c:	82 e0       	ldi	r24, 0x02	; 2
    304e:	91 e0       	ldi	r25, 0x01	; 1
    3050:	1f 91       	pop	r17
    3052:	0f 91       	pop	r16
    3054:	08 95       	ret

00003056 <SPI_set_config_func>:
    3056:	e8 2f       	mov	r30, r24
    3058:	f0 e0       	ldi	r31, 0x00	; 0
    305a:	ee 0f       	add	r30, r30
    305c:	ff 1f       	adc	r31, r31
    305e:	e6 59       	subi	r30, 0x96	; 150
    3060:	fd 4f       	sbci	r31, 0xFD	; 253
    3062:	71 83       	std	Z+1, r23	; 0x01
    3064:	60 83       	st	Z, r22
    3066:	08 95       	ret

00003068 <__SPKR_TIMER1_COMPA_vect>:
    3068:	0e 94 37 18 	call	0x306e	; 0x306e <SPKR_clk>
    306c:	08 95       	ret

0000306e <SPKR_clk>:
    306e:	80 91 7c 02 	lds	r24, 0x027C
    3072:	90 91 7d 02 	lds	r25, 0x027D
    3076:	a0 91 7e 02 	lds	r26, 0x027E
    307a:	b0 91 7f 02 	lds	r27, 0x027F
    307e:	20 91 80 02 	lds	r18, 0x0280
    3082:	30 91 81 02 	lds	r19, 0x0281
    3086:	40 91 82 02 	lds	r20, 0x0282
    308a:	50 91 83 02 	lds	r21, 0x0283
    308e:	28 0f       	add	r18, r24
    3090:	39 1f       	adc	r19, r25
    3092:	4a 1f       	adc	r20, r26
    3094:	5b 1f       	adc	r21, r27
    3096:	20 93 7c 02 	sts	0x027C, r18
    309a:	30 93 7d 02 	sts	0x027D, r19
    309e:	40 93 7e 02 	sts	0x027E, r20
    30a2:	50 93 7f 02 	sts	0x027F, r21
    30a6:	80 91 7c 02 	lds	r24, 0x027C
    30aa:	90 91 7d 02 	lds	r25, 0x027D
    30ae:	a0 91 7e 02 	lds	r26, 0x027E
    30b2:	b0 91 7f 02 	lds	r27, 0x027F
    30b6:	88 51       	subi	r24, 0x18	; 24
    30b8:	96 4f       	sbci	r25, 0xF6	; 246
    30ba:	a0 40       	sbci	r26, 0x00	; 0
    30bc:	b0 40       	sbci	r27, 0x00	; 0
    30be:	bc f0       	brlt	.+46     	; 0x30ee <SPKR_clk+0x80>
    30c0:	8b b1       	in	r24, 0x0b	; 11
    30c2:	80 58       	subi	r24, 0x80	; 128
    30c4:	8b b9       	out	0x0b, r24	; 11
    30c6:	80 91 7c 02 	lds	r24, 0x027C
    30ca:	90 91 7d 02 	lds	r25, 0x027D
    30ce:	a0 91 7e 02 	lds	r26, 0x027E
    30d2:	b0 91 7f 02 	lds	r27, 0x027F
    30d6:	88 51       	subi	r24, 0x18	; 24
    30d8:	96 4f       	sbci	r25, 0xF6	; 246
    30da:	a0 40       	sbci	r26, 0x00	; 0
    30dc:	b0 40       	sbci	r27, 0x00	; 0
    30de:	80 93 7c 02 	sts	0x027C, r24
    30e2:	90 93 7d 02 	sts	0x027D, r25
    30e6:	a0 93 7e 02 	sts	0x027E, r26
    30ea:	b0 93 7f 02 	sts	0x027F, r27
    30ee:	08 95       	ret

000030f0 <__SPKR_close_beep_mode>:
    30f0:	8a e0       	ldi	r24, 0x0A	; 10
    30f2:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    30f6:	81 30       	cpi	r24, 0x01	; 1
    30f8:	41 f4       	brne	.+16     	; 0x310a <__SPKR_close_beep_mode+0x1a>
    30fa:	0e 94 1a 1b 	call	0x3634	; 0x3634 <__SPKR_close>
    30fe:	10 92 7b 02 	sts	0x027B, r1
    3102:	8a e0       	ldi	r24, 0x0A	; 10
    3104:	60 e0       	ldi	r22, 0x00	; 0
    3106:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    310a:	08 95       	ret

0000310c <__SPKR_close_tone_mode>:
    310c:	89 e0       	ldi	r24, 0x09	; 9
    310e:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    3112:	81 30       	cpi	r24, 0x01	; 1
    3114:	d9 f4       	brne	.+54     	; 0x314c <__SPKR_close_tone_mode+0x40>
    3116:	80 91 7a 02 	lds	r24, 0x027A
    311a:	88 23       	and	r24, r24
    311c:	11 f0       	breq	.+4      	; 0x3122 <__SPKR_close_tone_mode+0x16>
    311e:	0e 94 28 19 	call	0x3250	; 0x3250 <__SPKR_stop>
    3122:	82 e0       	ldi	r24, 0x02	; 2
    3124:	0e 94 1a 1b 	call	0x3634	; 0x3634 <__SPKR_close>
    3128:	80 91 88 02 	lds	r24, 0x0288
    312c:	90 91 89 02 	lds	r25, 0x0289
    3130:	00 97       	sbiw	r24, 0x00	; 0
    3132:	31 f0       	breq	.+12     	; 0x3140 <__SPKR_close_tone_mode+0x34>
    3134:	0e 94 d9 27 	call	0x4fb2	; 0x4fb2 <free>
    3138:	10 92 89 02 	sts	0x0289, r1
    313c:	10 92 88 02 	sts	0x0288, r1
    3140:	10 92 7a 02 	sts	0x027A, r1
    3144:	89 e0       	ldi	r24, 0x09	; 9
    3146:	60 e0       	ldi	r22, 0x00	; 0
    3148:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    314c:	08 95       	ret

0000314e <SPKR_close>:
    314e:	81 30       	cpi	r24, 0x01	; 1
    3150:	29 f0       	breq	.+10     	; 0x315c <SPKR_close+0xe>
    3152:	82 30       	cpi	r24, 0x02	; 2
    3154:	29 f4       	brne	.+10     	; 0x3160 <SPKR_close+0x12>
    3156:	0e 94 86 18 	call	0x310c	; 0x310c <__SPKR_close_tone_mode>
    315a:	08 95       	ret
    315c:	0e 94 78 18 	call	0x30f0	; 0x30f0 <__SPKR_close_beep_mode>
    3160:	08 95       	ret

00003162 <__SPKR_init>:
    3162:	98 2f       	mov	r25, r24
    3164:	80 91 7a 02 	lds	r24, 0x027A
    3168:	88 23       	and	r24, r24
    316a:	31 f4       	brne	.+12     	; 0x3178 <__SPKR_init+0x16>
    316c:	80 91 7b 02 	lds	r24, 0x027B
    3170:	88 23       	and	r24, r24
    3172:	11 f4       	brne	.+4      	; 0x3178 <__SPKR_init+0x16>
    3174:	57 9a       	sbi	0x0a, 7	; 10
    3176:	5f 98       	cbi	0x0b, 7	; 11
    3178:	80 91 7a 02 	lds	r24, 0x027A
    317c:	88 23       	and	r24, r24
    317e:	d1 f4       	brne	.+52     	; 0x31b4 <__SPKR_init+0x52>
    3180:	92 30       	cpi	r25, 0x02	; 2
    3182:	c1 f4       	brne	.+48     	; 0x31b4 <__SPKR_init+0x52>
    3184:	10 92 80 00 	sts	0x0080, r1
    3188:	10 92 81 00 	sts	0x0081, r1
    318c:	80 91 81 00 	lds	r24, 0x0081
    3190:	88 60       	ori	r24, 0x08	; 8
    3192:	80 93 81 00 	sts	0x0081, r24
    3196:	80 91 81 00 	lds	r24, 0x0081
    319a:	81 60       	ori	r24, 0x01	; 1
    319c:	80 93 81 00 	sts	0x0081, r24
    31a0:	10 92 85 00 	sts	0x0085, r1
    31a4:	10 92 84 00 	sts	0x0084, r1
    31a8:	81 e0       	ldi	r24, 0x01	; 1
    31aa:	80 93 89 00 	sts	0x0089, r24
    31ae:	80 e9       	ldi	r24, 0x90	; 144
    31b0:	80 93 88 00 	sts	0x0088, r24
    31b4:	08 95       	ret

000031b6 <SPKR_play_beep>:
    31b6:	8f 92       	push	r8
    31b8:	9f 92       	push	r9
    31ba:	af 92       	push	r10
    31bc:	bf 92       	push	r11
    31be:	cf 92       	push	r12
    31c0:	df 92       	push	r13
    31c2:	ef 92       	push	r14
    31c4:	ff 92       	push	r15
    31c6:	0f 93       	push	r16
    31c8:	1f 93       	push	r17
    31ca:	cf 93       	push	r28
    31cc:	df 93       	push	r29
    31ce:	4b 01       	movw	r8, r22
    31d0:	5c 01       	movw	r10, r24
    31d2:	ea 01       	movw	r28, r20
    31d4:	b9 01       	movw	r22, r18
    31d6:	21 15       	cp	r18, r1
    31d8:	31 05       	cpc	r19, r1
    31da:	39 f1       	breq	.+78     	; 0x322a <SPKR_play_beep+0x74>
    31dc:	9e 01       	movw	r18, r28
    31de:	44 27       	eor	r20, r20
    31e0:	37 fd       	sbrc	r19, 7
    31e2:	40 95       	com	r20
    31e4:	54 2f       	mov	r21, r20
    31e6:	65 36       	cpi	r22, 0x65	; 101
    31e8:	71 05       	cpc	r23, r1
    31ea:	10 f0       	brcs	.+4      	; 0x31f0 <SPKR_play_beep+0x3a>
    31ec:	64 e6       	ldi	r22, 0x64	; 100
    31ee:	70 e0       	ldi	r23, 0x00	; 0
    31f0:	80 e0       	ldi	r24, 0x00	; 0
    31f2:	90 e0       	ldi	r25, 0x00	; 0
    31f4:	0e 94 8d 26 	call	0x4d1a	; 0x4d1a <__mulsi3>
    31f8:	24 e6       	ldi	r18, 0x64	; 100
    31fa:	30 e0       	ldi	r19, 0x00	; 0
    31fc:	40 e0       	ldi	r20, 0x00	; 0
    31fe:	50 e0       	ldi	r21, 0x00	; 0
    3200:	0e 94 bf 26 	call	0x4d7e	; 0x4d7e <__udivmodsi4>
    3204:	79 01       	movw	r14, r18
    3206:	8a 01       	movw	r16, r20
    3208:	c5 01       	movw	r24, r10
    320a:	b4 01       	movw	r22, r8
    320c:	0e 94 03 1b 	call	0x3606	; 0x3606 <SPKR_beep>
    3210:	c7 01       	movw	r24, r14
    3212:	0e 94 1e 13 	call	0x263c	; 0x263c <TMRSRVC_delay>
    3216:	60 e0       	ldi	r22, 0x00	; 0
    3218:	70 e0       	ldi	r23, 0x00	; 0
    321a:	80 e0       	ldi	r24, 0x00	; 0
    321c:	90 e0       	ldi	r25, 0x00	; 0
    321e:	0e 94 03 1b 	call	0x3606	; 0x3606 <SPKR_beep>
    3222:	ce 01       	movw	r24, r28
    3224:	8e 19       	sub	r24, r14
    3226:	9f 09       	sbc	r25, r15
    3228:	04 c0       	rjmp	.+8      	; 0x3232 <SPKR_play_beep+0x7c>
    322a:	41 15       	cp	r20, r1
    322c:	51 05       	cpc	r21, r1
    322e:	19 f0       	breq	.+6      	; 0x3236 <SPKR_play_beep+0x80>
    3230:	ca 01       	movw	r24, r20
    3232:	0e 94 1e 13 	call	0x263c	; 0x263c <TMRSRVC_delay>
    3236:	df 91       	pop	r29
    3238:	cf 91       	pop	r28
    323a:	1f 91       	pop	r17
    323c:	0f 91       	pop	r16
    323e:	ff 90       	pop	r15
    3240:	ef 90       	pop	r14
    3242:	df 90       	pop	r13
    3244:	cf 90       	pop	r12
    3246:	bf 90       	pop	r11
    3248:	af 90       	pop	r10
    324a:	9f 90       	pop	r9
    324c:	8f 90       	pop	r8
    324e:	08 95       	ret

00003250 <__SPKR_stop>:
    3250:	ef e6       	ldi	r30, 0x6F	; 111
    3252:	f0 e0       	ldi	r31, 0x00	; 0
    3254:	80 81       	ld	r24, Z
    3256:	8d 7f       	andi	r24, 0xFD	; 253
    3258:	80 83       	st	Z, r24
    325a:	08 95       	ret

0000325c <STEPPER_go>:
    325c:	98 2f       	mov	r25, r24
    325e:	81 e0       	ldi	r24, 0x01	; 1
    3260:	80 93 ad 04 	sts	0x04AD, r24
    3264:	91 30       	cpi	r25, 0x01	; 1
    3266:	51 f0       	breq	.+20     	; 0x327c <STEPPER_go+0x20>
    3268:	91 30       	cpi	r25, 0x01	; 1
    326a:	18 f0       	brcs	.+6      	; 0x3272 <STEPPER_go+0x16>
    326c:	92 30       	cpi	r25, 0x02	; 2
    326e:	41 f4       	brne	.+16     	; 0x3280 <STEPPER_go+0x24>
    3270:	03 c0       	rjmp	.+6      	; 0x3278 <STEPPER_go+0x1c>
    3272:	10 92 95 04 	sts	0x0495, r1
    3276:	04 c0       	rjmp	.+8      	; 0x3280 <STEPPER_go+0x24>
    3278:	10 92 95 04 	sts	0x0495, r1
    327c:	10 92 96 04 	sts	0x0496, r1
    3280:	10 92 ad 04 	sts	0x04AD, r1
    3284:	08 95       	ret

00003286 <__STEPPER_init>:
    3286:	3a 9a       	sbi	0x07, 2	; 7
    3288:	3b 9a       	sbi	0x07, 3	; 7
    328a:	3c 9a       	sbi	0x07, 4	; 7
    328c:	3d 9a       	sbi	0x07, 5	; 7
    328e:	3e 9a       	sbi	0x07, 6	; 7
    3290:	3f 9a       	sbi	0x07, 7	; 7
    3292:	88 b1       	in	r24, 0x08	; 8
    3294:	83 70       	andi	r24, 0x03	; 3
    3296:	88 b9       	out	0x08, r24	; 8
    3298:	08 95       	ret

0000329a <STEPPER_set_steps>:
    329a:	98 2f       	mov	r25, r24
    329c:	81 e0       	ldi	r24, 0x01	; 1
    329e:	80 93 ad 04 	sts	0x04AD, r24
    32a2:	91 30       	cpi	r25, 0x01	; 1
    32a4:	71 f0       	breq	.+28     	; 0x32c2 <STEPPER_set_steps+0x28>
    32a6:	91 30       	cpi	r25, 0x01	; 1
    32a8:	18 f0       	brcs	.+6      	; 0x32b0 <STEPPER_set_steps+0x16>
    32aa:	92 30       	cpi	r25, 0x02	; 2
    32ac:	71 f4       	brne	.+28     	; 0x32ca <STEPPER_set_steps+0x30>
    32ae:	05 c0       	rjmp	.+10     	; 0x32ba <STEPPER_set_steps+0x20>
    32b0:	70 93 8a 04 	sts	0x048A, r23
    32b4:	60 93 89 04 	sts	0x0489, r22
    32b8:	08 c0       	rjmp	.+16     	; 0x32ca <STEPPER_set_steps+0x30>
    32ba:	70 93 8a 04 	sts	0x048A, r23
    32be:	60 93 89 04 	sts	0x0489, r22
    32c2:	70 93 8c 04 	sts	0x048C, r23
    32c6:	60 93 8b 04 	sts	0x048B, r22
    32ca:	10 92 ad 04 	sts	0x04AD, r1
    32ce:	08 95       	ret

000032d0 <STEPPER_set_stop_mode>:
    32d0:	98 2f       	mov	r25, r24
    32d2:	81 e0       	ldi	r24, 0x01	; 1
    32d4:	80 93 ad 04 	sts	0x04AD, r24
    32d8:	91 30       	cpi	r25, 0x01	; 1
    32da:	51 f0       	breq	.+20     	; 0x32f0 <STEPPER_set_stop_mode+0x20>
    32dc:	91 30       	cpi	r25, 0x01	; 1
    32de:	18 f0       	brcs	.+6      	; 0x32e6 <STEPPER_set_stop_mode+0x16>
    32e0:	92 30       	cpi	r25, 0x02	; 2
    32e2:	41 f4       	brne	.+16     	; 0x32f4 <STEPPER_set_stop_mode+0x24>
    32e4:	03 c0       	rjmp	.+6      	; 0x32ec <STEPPER_set_stop_mode+0x1c>
    32e6:	60 93 97 04 	sts	0x0497, r22
    32ea:	04 c0       	rjmp	.+8      	; 0x32f4 <STEPPER_set_stop_mode+0x24>
    32ec:	60 93 97 04 	sts	0x0497, r22
    32f0:	60 93 98 04 	sts	0x0498, r22
    32f4:	10 92 ad 04 	sts	0x04AD, r1
    32f8:	08 95       	ret

000032fa <STEPPER_setup_decels>:
    32fa:	0f 93       	push	r16
    32fc:	1f 93       	push	r17
    32fe:	cf 93       	push	r28
    3300:	df 93       	push	r29
    3302:	eb 01       	movw	r28, r22
    3304:	8a 01       	movw	r16, r20
    3306:	81 30       	cpi	r24, 0x01	; 1
    3308:	01 f1       	breq	.+64     	; 0x334a <STEPPER_setup_decels+0x50>
    330a:	81 30       	cpi	r24, 0x01	; 1
    330c:	18 f0       	brcs	.+6      	; 0x3314 <STEPPER_setup_decels+0x1a>
    330e:	82 30       	cpi	r24, 0x02	; 2
    3310:	61 f5       	brne	.+88     	; 0x336a <STEPPER_setup_decels+0x70>
    3312:	0d c0       	rjmp	.+26     	; 0x332e <STEPPER_setup_decels+0x34>
    3314:	80 91 81 04 	lds	r24, 0x0481
    3318:	90 91 82 04 	lds	r25, 0x0482
    331c:	89 2b       	or	r24, r25
    331e:	11 f0       	breq	.+4      	; 0x3324 <STEPPER_setup_decels+0x2a>
    3320:	80 e0       	ldi	r24, 0x00	; 0
    3322:	1a c0       	rjmp	.+52     	; 0x3358 <STEPPER_setup_decels+0x5e>
    3324:	10 92 8e 04 	sts	0x048E, r1
    3328:	10 92 8d 04 	sts	0x048D, r1
    332c:	1e c0       	rjmp	.+60     	; 0x336a <STEPPER_setup_decels+0x70>
    332e:	80 91 81 04 	lds	r24, 0x0481
    3332:	90 91 82 04 	lds	r25, 0x0482
    3336:	89 2b       	or	r24, r25
    3338:	21 f0       	breq	.+8      	; 0x3342 <STEPPER_setup_decels+0x48>
    333a:	80 e0       	ldi	r24, 0x00	; 0
    333c:	0e 94 36 1b 	call	0x366c	; 0x366c <STEPPER_set_decel_step_values>
    3340:	04 c0       	rjmp	.+8      	; 0x334a <STEPPER_setup_decels+0x50>
    3342:	10 92 8e 04 	sts	0x048E, r1
    3346:	10 92 8d 04 	sts	0x048D, r1
    334a:	80 91 83 04 	lds	r24, 0x0483
    334e:	90 91 84 04 	lds	r25, 0x0484
    3352:	89 2b       	or	r24, r25
    3354:	31 f0       	breq	.+12     	; 0x3362 <STEPPER_setup_decels+0x68>
    3356:	81 e0       	ldi	r24, 0x01	; 1
    3358:	be 01       	movw	r22, r28
    335a:	a8 01       	movw	r20, r16
    335c:	0e 94 36 1b 	call	0x366c	; 0x366c <STEPPER_set_decel_step_values>
    3360:	04 c0       	rjmp	.+8      	; 0x336a <STEPPER_setup_decels+0x70>
    3362:	10 92 90 04 	sts	0x0490, r1
    3366:	10 92 8f 04 	sts	0x048F, r1
    336a:	df 91       	pop	r29
    336c:	cf 91       	pop	r28
    336e:	1f 91       	pop	r17
    3370:	0f 91       	pop	r16
    3372:	08 95       	ret

00003374 <SYS_init>:
    3374:	10 92 b0 04 	sts	0x04B0, r1
    3378:	10 92 b1 04 	sts	0x04B1, r1
    337c:	10 92 b5 04 	sts	0x04B5, r1
    3380:	10 92 b2 04 	sts	0x04B2, r1
    3384:	10 92 b4 04 	sts	0x04B4, r1
    3388:	10 92 b6 04 	sts	0x04B6, r1
    338c:	10 92 b7 04 	sts	0x04B7, r1
    3390:	10 92 b8 04 	sts	0x04B8, r1
    3394:	10 92 b9 04 	sts	0x04B9, r1
    3398:	10 92 ba 04 	sts	0x04BA, r1
    339c:	10 92 bb 04 	sts	0x04BB, r1
    33a0:	10 92 bc 04 	sts	0x04BC, r1
    33a4:	10 92 bd 04 	sts	0x04BD, r1
    33a8:	10 92 be 04 	sts	0x04BE, r1
    33ac:	10 92 bf 04 	sts	0x04BF, r1
    33b0:	10 92 c0 04 	sts	0x04C0, r1
    33b4:	10 92 c1 04 	sts	0x04C1, r1
    33b8:	08 95       	ret

000033ba <ATTINY_get_sensors>:
    33ba:	0f 93       	push	r16
    33bc:	1f 93       	push	r17
    33be:	81 e0       	ldi	r24, 0x01	; 1
    33c0:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    33c4:	81 30       	cpi	r24, 0x01	; 1
    33c6:	11 f0       	breq	.+4      	; 0x33cc <ATTINY_get_sensors+0x12>
    33c8:	00 e0       	ldi	r16, 0x00	; 0
    33ca:	24 c0       	rjmp	.+72     	; 0x3414 <ATTINY_get_sensors+0x5a>
    33cc:	87 e0       	ldi	r24, 0x07	; 7
    33ce:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <SPI_set_slave_addr>
    33d2:	82 e0       	ldi	r24, 0x02	; 2
    33d4:	6a e0       	ldi	r22, 0x0A	; 10
    33d6:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <SPI_transmit>
    33da:	82 e0       	ldi	r24, 0x02	; 2
    33dc:	62 eb       	ldi	r22, 0xB2	; 178
    33de:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <SPI_transmit>
    33e2:	18 ec       	ldi	r17, 0xC8	; 200
    33e4:	81 2f       	mov	r24, r17
    33e6:	8a 95       	dec	r24
    33e8:	f1 f7       	brne	.-4      	; 0x33e6 <ATTINY_get_sensors+0x2c>
    33ea:	82 e0       	ldi	r24, 0x02	; 2
    33ec:	60 e0       	ldi	r22, 0x00	; 0
    33ee:	0e 94 f1 1a 	call	0x35e2	; 0x35e2 <SPI_receive>
    33f2:	08 2f       	mov	r16, r24
    33f4:	81 2f       	mov	r24, r17
    33f6:	8a 95       	dec	r24
    33f8:	f1 f7       	brne	.-4      	; 0x33f6 <ATTINY_get_sensors+0x3c>
    33fa:	82 e0       	ldi	r24, 0x02	; 2
    33fc:	60 e0       	ldi	r22, 0x00	; 0
    33fe:	0e 94 f1 1a 	call	0x35e2	; 0x35e2 <SPI_receive>
    3402:	1a 95       	dec	r17
    3404:	f1 f7       	brne	.-4      	; 0x3402 <ATTINY_get_sensors+0x48>
    3406:	87 e0       	ldi	r24, 0x07	; 7
    3408:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <SPI_set_slave_addr>
    340c:	88 e8       	ldi	r24, 0x88	; 136
    340e:	93 e1       	ldi	r25, 0x13	; 19
    3410:	01 97       	sbiw	r24, 0x01	; 1
    3412:	f1 f7       	brne	.-4      	; 0x3410 <ATTINY_get_sensors+0x56>
    3414:	80 2f       	mov	r24, r16
    3416:	1f 91       	pop	r17
    3418:	0f 91       	pop	r16
    341a:	08 95       	ret

0000341c <TMRSRVC_insert>:
    341c:	cf 92       	push	r12
    341e:	df 92       	push	r13
    3420:	ef 92       	push	r14
    3422:	ff 92       	push	r15
    3424:	0f 93       	push	r16
    3426:	1f 93       	push	r17
    3428:	cf 93       	push	r28
    342a:	df 93       	push	r29
    342c:	ec 01       	movw	r28, r24
    342e:	80 91 e7 04 	lds	r24, 0x04E7
    3432:	88 23       	and	r24, r24
    3434:	39 f4       	brne	.+14     	; 0x3444 <TMRSRVC_insert+0x28>
    3436:	d0 93 e9 04 	sts	0x04E9, r29
    343a:	c0 93 e8 04 	sts	0x04E8, r28
    343e:	0e 94 9c 1a 	call	0x3538	; 0x3538 <TMRSRVC_start>
    3442:	47 c0       	rjmp	.+142    	; 0x34d2 <TMRSRVC_insert+0xb6>
    3444:	c0 90 e8 04 	lds	r12, 0x04E8
    3448:	d0 90 e9 04 	lds	r13, 0x04E9
    344c:	00 e0       	ldi	r16, 0x00	; 0
    344e:	10 e0       	ldi	r17, 0x00	; 0
    3450:	ee 24       	eor	r14, r14
    3452:	ff 24       	eor	r15, r15
    3454:	37 c0       	rjmp	.+110    	; 0x34c4 <TMRSRVC_insert+0xa8>
    3456:	a8 81       	ld	r26, Y
    3458:	b9 81       	ldd	r27, Y+1	; 0x01
    345a:	fd 01       	movw	r30, r26
    345c:	64 81       	ldd	r22, Z+4	; 0x04
    345e:	75 81       	ldd	r23, Z+5	; 0x05
    3460:	f6 01       	movw	r30, r12
    3462:	40 81       	ld	r20, Z
    3464:	51 81       	ldd	r21, Z+1	; 0x01
    3466:	fa 01       	movw	r30, r20
    3468:	84 81       	ldd	r24, Z+4	; 0x04
    346a:	95 81       	ldd	r25, Z+5	; 0x05
    346c:	9b 01       	movw	r18, r22
    346e:	28 1b       	sub	r18, r24
    3470:	39 0b       	sbc	r19, r25
    3472:	37 ff       	sbrs	r19, 7
    3474:	0f c0       	rjmp	.+30     	; 0x3494 <TMRSRVC_insert+0x78>
    3476:	86 1b       	sub	r24, r22
    3478:	97 0b       	sbc	r25, r23
    347a:	95 83       	std	Z+5, r25	; 0x05
    347c:	84 83       	std	Z+4, r24	; 0x04
    347e:	db 82       	std	Y+3, r13	; 0x03
    3480:	ca 82       	std	Y+2, r12	; 0x02
    3482:	01 2b       	or	r16, r17
    3484:	29 f4       	brne	.+10     	; 0x3490 <TMRSRVC_insert+0x74>
    3486:	d0 93 e9 04 	sts	0x04E9, r29
    348a:	c0 93 e8 04 	sts	0x04E8, r28
    348e:	21 c0       	rjmp	.+66     	; 0x34d2 <TMRSRVC_insert+0xb6>
    3490:	f7 01       	movw	r30, r14
    3492:	0c c0       	rjmp	.+24     	; 0x34ac <TMRSRVC_insert+0x90>
    3494:	f6 01       	movw	r30, r12
    3496:	82 81       	ldd	r24, Z+2	; 0x02
    3498:	93 81       	ldd	r25, Z+3	; 0x03
    349a:	21 15       	cp	r18, r1
    349c:	31 05       	cpc	r19, r1
    349e:	49 f4       	brne	.+18     	; 0x34b2 <TMRSRVC_insert+0x96>
    34a0:	fd 01       	movw	r30, r26
    34a2:	15 82       	std	Z+5, r1	; 0x05
    34a4:	14 82       	std	Z+4, r1	; 0x04
    34a6:	9b 83       	std	Y+3, r25	; 0x03
    34a8:	8a 83       	std	Y+2, r24	; 0x02
    34aa:	f6 01       	movw	r30, r12
    34ac:	d3 83       	std	Z+3, r29	; 0x03
    34ae:	c2 83       	std	Z+2, r28	; 0x02
    34b0:	10 c0       	rjmp	.+32     	; 0x34d2 <TMRSRVC_insert+0xb6>
    34b2:	fd 01       	movw	r30, r26
    34b4:	35 83       	std	Z+5, r19	; 0x05
    34b6:	24 83       	std	Z+4, r18	; 0x04
    34b8:	00 97       	sbiw	r24, 0x00	; 0
    34ba:	b9 f3       	breq	.-18     	; 0x34aa <TMRSRVC_insert+0x8e>
    34bc:	0f 5f       	subi	r16, 0xFF	; 255
    34be:	1f 4f       	sbci	r17, 0xFF	; 255
    34c0:	76 01       	movw	r14, r12
    34c2:	6c 01       	movw	r12, r24
    34c4:	80 91 e7 04 	lds	r24, 0x04E7
    34c8:	90 e0       	ldi	r25, 0x00	; 0
    34ca:	08 17       	cp	r16, r24
    34cc:	19 07       	cpc	r17, r25
    34ce:	18 f2       	brcs	.-122    	; 0x3456 <TMRSRVC_insert+0x3a>
    34d0:	ec cf       	rjmp	.-40     	; 0x34aa <TMRSRVC_insert+0x8e>
    34d2:	80 91 e7 04 	lds	r24, 0x04E7
    34d6:	8f 5f       	subi	r24, 0xFF	; 255
    34d8:	80 93 e7 04 	sts	0x04E7, r24
    34dc:	df 91       	pop	r29
    34de:	cf 91       	pop	r28
    34e0:	1f 91       	pop	r17
    34e2:	0f 91       	pop	r16
    34e4:	ff 90       	pop	r15
    34e6:	ef 90       	pop	r14
    34e8:	df 90       	pop	r13
    34ea:	cf 90       	pop	r12
    34ec:	08 95       	ret

000034ee <TMRSRVC_open>:
    34ee:	88 e0       	ldi	r24, 0x08	; 8
    34f0:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    34f4:	88 23       	and	r24, r24
    34f6:	b9 f4       	brne	.+46     	; 0x3526 <TMRSRVC_open+0x38>
    34f8:	10 92 e7 04 	sts	0x04E7, r1
    34fc:	10 92 e9 04 	sts	0x04E9, r1
    3500:	10 92 e8 04 	sts	0x04E8, r1
    3504:	10 92 8a 02 	sts	0x028A, r1
    3508:	10 92 8b 02 	sts	0x028B, r1
    350c:	80 e1       	ldi	r24, 0x10	; 16
    350e:	63 ea       	ldi	r22, 0xA3	; 163
    3510:	7b e1       	ldi	r23, 0x1B	; 27
    3512:	0e 94 ad 1a 	call	0x355a	; 0x355a <__ISR_attach>
    3516:	0e 94 aa 1b 	call	0x3754	; 0x3754 <__TMRSRVC_init>
    351a:	0e 94 96 1a 	call	0x352c	; 0x352c <__TMRSRVC_start>
    351e:	88 e0       	ldi	r24, 0x08	; 8
    3520:	61 e0       	ldi	r22, 0x01	; 1
    3522:	0e 94 3a 12 	call	0x2474	; 0x2474 <SYS_set_state>
    3526:	88 e0       	ldi	r24, 0x08	; 8
    3528:	91 e0       	ldi	r25, 0x01	; 1
    352a:	08 95       	ret

0000352c <__TMRSRVC_start>:
    352c:	ee e6       	ldi	r30, 0x6E	; 110
    352e:	f0 e0       	ldi	r31, 0x00	; 0
    3530:	80 81       	ld	r24, Z
    3532:	82 60       	ori	r24, 0x02	; 2
    3534:	80 83       	st	Z, r24
    3536:	08 95       	ret

00003538 <TMRSRVC_start>:
    3538:	81 e0       	ldi	r24, 0x01	; 1
    353a:	80 93 8b 02 	sts	0x028B, r24
    353e:	08 95       	ret

00003540 <I2C_enable>:
    3540:	80 91 ea 04 	lds	r24, 0x04EA
    3544:	81 30       	cpi	r24, 0x01	; 1
    3546:	29 f4       	brne	.+10     	; 0x3552 <I2C_enable+0x12>
    3548:	80 91 bc 00 	lds	r24, 0x00BC
    354c:	84 60       	ori	r24, 0x04	; 4
    354e:	80 93 bc 00 	sts	0x00BC, r24
    3552:	08 95       	ret

00003554 <__I2C_init>:
    3554:	38 98       	cbi	0x07, 0	; 7
    3556:	39 98       	cbi	0x07, 1	; 7
    3558:	08 95       	ret

0000355a <__ISR_attach>:
    355a:	80 32       	cpi	r24, 0x20	; 32
    355c:	18 f0       	brcs	.+6      	; 0x3564 <__ISR_attach+0xa>
    355e:	20 e0       	ldi	r18, 0x00	; 0
    3560:	30 e0       	ldi	r19, 0x00	; 0
    3562:	0a c0       	rjmp	.+20     	; 0x3578 <__ISR_attach+0x1e>
    3564:	e8 2f       	mov	r30, r24
    3566:	f0 e0       	ldi	r31, 0x00	; 0
    3568:	ee 0f       	add	r30, r30
    356a:	ff 1f       	adc	r31, r31
    356c:	e6 5d       	subi	r30, 0xD6	; 214
    356e:	fd 4f       	sbci	r31, 0xFD	; 253
    3570:	20 81       	ld	r18, Z
    3572:	31 81       	ldd	r19, Z+1	; 0x01
    3574:	71 83       	std	Z+1, r23	; 0x01
    3576:	60 83       	st	Z, r22
    3578:	c9 01       	movw	r24, r18
    357a:	08 95       	ret

0000357c <__ATMEGA_init>:
    357c:	24 9a       	sbi	0x04, 4	; 4
    357e:	2c 9a       	sbi	0x05, 4	; 5
    3580:	08 95       	ret

00003582 <SPI_default_config>:
    3582:	83 e5       	ldi	r24, 0x53	; 83
    3584:	8c bd       	out	0x2c, r24	; 44
    3586:	81 e0       	ldi	r24, 0x01	; 1
    3588:	8d bd       	out	0x2d, r24	; 45
    358a:	8d e0       	ldi	r24, 0x0D	; 13
    358c:	8a 95       	dec	r24
    358e:	f1 f7       	brne	.-4      	; 0x358c <SPI_default_config+0xa>
    3590:	08 95       	ret

00003592 <SPI_ATtiny0_config>:
    3592:	83 e5       	ldi	r24, 0x53	; 83
    3594:	8c bd       	out	0x2c, r24	; 44
    3596:	1d bc       	out	0x2d, r1	; 45
    3598:	84 ef       	ldi	r24, 0xF4	; 244
    359a:	91 e0       	ldi	r25, 0x01	; 1
    359c:	01 97       	sbiw	r24, 0x01	; 1
    359e:	f1 f7       	brne	.-4      	; 0x359c <SPI_ATtiny0_config+0xa>
    35a0:	08 95       	ret

000035a2 <SPI_PSXC_config>:
    35a2:	8f e7       	ldi	r24, 0x7F	; 127
    35a4:	8c bd       	out	0x2c, r24	; 44
    35a6:	1d bc       	out	0x2d, r1	; 45
    35a8:	84 ef       	ldi	r24, 0xF4	; 244
    35aa:	91 e0       	ldi	r25, 0x01	; 1
    35ac:	01 97       	sbiw	r24, 0x01	; 1
    35ae:	f1 f7       	brne	.-4      	; 0x35ac <SPI_PSXC_config+0xa>
    35b0:	08 95       	ret

000035b2 <SPI_LCD_config>:
    35b2:	83 e5       	ldi	r24, 0x53	; 83
    35b4:	8c bd       	out	0x2c, r24	; 44
    35b6:	81 e0       	ldi	r24, 0x01	; 1
    35b8:	8d bd       	out	0x2d, r24	; 45
    35ba:	8d e0       	ldi	r24, 0x0D	; 13
    35bc:	8a 95       	dec	r24
    35be:	f1 f7       	brne	.-4      	; 0x35bc <SPI_LCD_config+0xa>
    35c0:	08 95       	ret

000035c2 <SPI_FLASH_config>:
    35c2:	83 e5       	ldi	r24, 0x53	; 83
    35c4:	8c bd       	out	0x2c, r24	; 44
    35c6:	81 e0       	ldi	r24, 0x01	; 1
    35c8:	8d bd       	out	0x2d, r24	; 45
    35ca:	84 ef       	ldi	r24, 0xF4	; 244
    35cc:	91 e0       	ldi	r25, 0x01	; 1
    35ce:	01 97       	sbiw	r24, 0x01	; 1
    35d0:	f1 f7       	brne	.-4      	; 0x35ce <SPI_FLASH_config+0xc>
    35d2:	08 95       	ret

000035d4 <__SPI_init>:
    35d4:	25 9a       	sbi	0x04, 5	; 4
    35d6:	26 98       	cbi	0x04, 6	; 4
    35d8:	27 9a       	sbi	0x04, 7	; 4
    35da:	20 9a       	sbi	0x04, 0	; 4
    35dc:	21 9a       	sbi	0x04, 1	; 4
    35de:	22 9a       	sbi	0x04, 2	; 4
    35e0:	08 95       	ret

000035e2 <SPI_receive>:
    35e2:	1f 93       	push	r17
    35e4:	16 2f       	mov	r17, r22
    35e6:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <SPI_set_slave_addr>
    35ea:	82 e0       	ldi	r24, 0x02	; 2
    35ec:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    35f0:	81 30       	cpi	r24, 0x01	; 1
    35f2:	11 f0       	breq	.+4      	; 0x35f8 <SPI_receive+0x16>
    35f4:	80 e0       	ldi	r24, 0x00	; 0
    35f6:	05 c0       	rjmp	.+10     	; 0x3602 <SPI_receive+0x20>
    35f8:	1e bd       	out	0x2e, r17	; 46
    35fa:	0d b4       	in	r0, 0x2d	; 45
    35fc:	07 fe       	sbrs	r0, 7
    35fe:	fd cf       	rjmp	.-6      	; 0x35fa <SPI_receive+0x18>
    3600:	8e b5       	in	r24, 0x2e	; 46
    3602:	1f 91       	pop	r17
    3604:	08 95       	ret

00003606 <SPKR_beep>:
    3606:	9b 01       	movw	r18, r22
    3608:	ac 01       	movw	r20, r24
    360a:	80 91 7b 02 	lds	r24, 0x027B
    360e:	88 23       	and	r24, r24
    3610:	81 f0       	breq	.+32     	; 0x3632 <SPKR_beep+0x2c>
    3612:	da 01       	movw	r26, r20
    3614:	c9 01       	movw	r24, r18
    3616:	88 0f       	add	r24, r24
    3618:	99 1f       	adc	r25, r25
    361a:	aa 1f       	adc	r26, r26
    361c:	bb 1f       	adc	r27, r27
    361e:	90 93 87 02 	sts	0x0287, r25
    3622:	80 93 86 02 	sts	0x0286, r24
    3626:	21 15       	cp	r18, r1
    3628:	31 05       	cpc	r19, r1
    362a:	41 05       	cpc	r20, r1
    362c:	51 05       	cpc	r21, r1
    362e:	09 f4       	brne	.+2      	; 0x3632 <SPKR_beep+0x2c>
    3630:	5f 98       	cbi	0x0b, 7	; 11
    3632:	08 95       	ret

00003634 <__SPKR_close>:
    3634:	82 30       	cpi	r24, 0x02	; 2
    3636:	29 f4       	brne	.+10     	; 0x3642 <__SPKR_close+0xe>
    3638:	80 91 81 00 	lds	r24, 0x0081
    363c:	8e 7f       	andi	r24, 0xFE	; 254
    363e:	80 93 81 00 	sts	0x0081, r24
    3642:	80 91 7a 02 	lds	r24, 0x027A
    3646:	81 30       	cpi	r24, 0x01	; 1
    3648:	31 f4       	brne	.+12     	; 0x3656 <__SPKR_close+0x22>
    364a:	80 91 7b 02 	lds	r24, 0x027B
    364e:	81 30       	cpi	r24, 0x01	; 1
    3650:	11 f4       	brne	.+4      	; 0x3656 <__SPKR_close+0x22>
    3652:	00 00       	nop
    3654:	08 95       	ret
    3656:	80 91 7a 02 	lds	r24, 0x027A
    365a:	81 30       	cpi	r24, 0x01	; 1
    365c:	21 f0       	breq	.+8      	; 0x3666 <__SPKR_close+0x32>
    365e:	80 91 7b 02 	lds	r24, 0x027B
    3662:	81 30       	cpi	r24, 0x01	; 1
    3664:	11 f4       	brne	.+4      	; 0x366a <__SPKR_close+0x36>
    3666:	5f 98       	cbi	0x0b, 7	; 11
    3668:	57 98       	cbi	0x0a, 7	; 10
    366a:	08 95       	ret

0000366c <STEPPER_set_decel_step_values>:
    366c:	ef 92       	push	r14
    366e:	ff 92       	push	r15
    3670:	0f 93       	push	r16
    3672:	1f 93       	push	r17
    3674:	cf 93       	push	r28
    3676:	df 93       	push	r29
    3678:	eb 01       	movw	r28, r22
    367a:	88 23       	and	r24, r24
    367c:	21 f0       	breq	.+8      	; 0x3686 <STEPPER_set_decel_step_values+0x1a>
    367e:	81 30       	cpi	r24, 0x01	; 1
    3680:	09 f0       	breq	.+2      	; 0x3684 <STEPPER_set_decel_step_values+0x18>
    3682:	5a c0       	rjmp	.+180    	; 0x3738 <STEPPER_set_decel_step_values+0xcc>
    3684:	2d c0       	rjmp	.+90     	; 0x36e0 <STEPPER_set_decel_step_values+0x74>
    3686:	9a 01       	movw	r18, r20
    3688:	40 e0       	ldi	r20, 0x00	; 0
    368a:	50 e0       	ldi	r21, 0x00	; 0
    368c:	ca 01       	movw	r24, r20
    368e:	b9 01       	movw	r22, r18
    3690:	0e 94 8d 26 	call	0x4d1a	; 0x4d1a <__mulsi3>
    3694:	20 91 81 04 	lds	r18, 0x0481
    3698:	30 91 82 04 	lds	r19, 0x0482
    369c:	22 0f       	add	r18, r18
    369e:	33 1f       	adc	r19, r19
    36a0:	40 e0       	ldi	r20, 0x00	; 0
    36a2:	50 e0       	ldi	r21, 0x00	; 0
    36a4:	0e 94 bf 26 	call	0x4d7e	; 0x4d7e <__udivmodsi4>
    36a8:	79 01       	movw	r14, r18
    36aa:	8a 01       	movw	r16, r20
    36ac:	a8 01       	movw	r20, r16
    36ae:	97 01       	movw	r18, r14
    36b0:	22 0f       	add	r18, r18
    36b2:	33 1f       	adc	r19, r19
    36b4:	44 1f       	adc	r20, r20
    36b6:	55 1f       	adc	r21, r21
    36b8:	ce 01       	movw	r24, r28
    36ba:	a0 e0       	ldi	r26, 0x00	; 0
    36bc:	b0 e0       	ldi	r27, 0x00	; 0
    36be:	82 17       	cp	r24, r18
    36c0:	93 07       	cpc	r25, r19
    36c2:	a4 07       	cpc	r26, r20
    36c4:	b5 07       	cpc	r27, r21
    36c6:	28 f0       	brcs	.+10     	; 0x36d2 <STEPPER_set_decel_step_values+0x66>
    36c8:	f0 92 8e 04 	sts	0x048E, r15
    36cc:	e0 92 8d 04 	sts	0x048D, r14
    36d0:	33 c0       	rjmp	.+102    	; 0x3738 <STEPPER_set_decel_step_values+0xcc>
    36d2:	d6 95       	lsr	r29
    36d4:	c7 95       	ror	r28
    36d6:	d0 93 8e 04 	sts	0x048E, r29
    36da:	c0 93 8d 04 	sts	0x048D, r28
    36de:	2c c0       	rjmp	.+88     	; 0x3738 <STEPPER_set_decel_step_values+0xcc>
    36e0:	9a 01       	movw	r18, r20
    36e2:	40 e0       	ldi	r20, 0x00	; 0
    36e4:	50 e0       	ldi	r21, 0x00	; 0
    36e6:	ca 01       	movw	r24, r20
    36e8:	b9 01       	movw	r22, r18
    36ea:	0e 94 8d 26 	call	0x4d1a	; 0x4d1a <__mulsi3>
    36ee:	20 91 83 04 	lds	r18, 0x0483
    36f2:	30 91 84 04 	lds	r19, 0x0484
    36f6:	22 0f       	add	r18, r18
    36f8:	33 1f       	adc	r19, r19
    36fa:	40 e0       	ldi	r20, 0x00	; 0
    36fc:	50 e0       	ldi	r21, 0x00	; 0
    36fe:	0e 94 bf 26 	call	0x4d7e	; 0x4d7e <__udivmodsi4>
    3702:	79 01       	movw	r14, r18
    3704:	8a 01       	movw	r16, r20
    3706:	a8 01       	movw	r20, r16
    3708:	97 01       	movw	r18, r14
    370a:	22 0f       	add	r18, r18
    370c:	33 1f       	adc	r19, r19
    370e:	44 1f       	adc	r20, r20
    3710:	55 1f       	adc	r21, r21
    3712:	ce 01       	movw	r24, r28
    3714:	a0 e0       	ldi	r26, 0x00	; 0
    3716:	b0 e0       	ldi	r27, 0x00	; 0
    3718:	82 17       	cp	r24, r18
    371a:	93 07       	cpc	r25, r19
    371c:	a4 07       	cpc	r26, r20
    371e:	b5 07       	cpc	r27, r21
    3720:	28 f0       	brcs	.+10     	; 0x372c <STEPPER_set_decel_step_values+0xc0>
    3722:	f0 92 90 04 	sts	0x0490, r15
    3726:	e0 92 8f 04 	sts	0x048F, r14
    372a:	06 c0       	rjmp	.+12     	; 0x3738 <STEPPER_set_decel_step_values+0xcc>
    372c:	d6 95       	lsr	r29
    372e:	c7 95       	ror	r28
    3730:	d0 93 90 04 	sts	0x0490, r29
    3734:	c0 93 8f 04 	sts	0x048F, r28
    3738:	df 91       	pop	r29
    373a:	cf 91       	pop	r28
    373c:	1f 91       	pop	r17
    373e:	0f 91       	pop	r16
    3740:	ff 90       	pop	r15
    3742:	ef 90       	pop	r14
    3744:	08 95       	ret

00003746 <__TIMER0_COMPA_vect>:
    3746:	0e 94 b3 1b 	call	0x3766	; 0x3766 <TMRSRVC_tick>
    374a:	0e 94 f3 1b 	call	0x37e6	; 0x37e6 <STEPPER_clk>
    374e:	0e 94 cc 1b 	call	0x3798	; 0x3798 <SPKR_beep_clk>
    3752:	08 95       	ret

00003754 <__TMRSRVC_init>:
    3754:	84 b5       	in	r24, 0x24	; 36
    3756:	82 60       	ori	r24, 0x02	; 2
    3758:	84 bd       	out	0x24, r24	; 36
    375a:	85 b5       	in	r24, 0x25	; 37
    375c:	84 60       	ori	r24, 0x04	; 4
    375e:	85 bd       	out	0x25, r24	; 37
    3760:	8e e4       	ldi	r24, 0x4E	; 78
    3762:	87 bd       	out	0x27, r24	; 39
    3764:	08 95       	ret

00003766 <TMRSRVC_tick>:
    3766:	88 e0       	ldi	r24, 0x08	; 8
    3768:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    376c:	88 23       	and	r24, r24
    376e:	11 f4       	brne	.+4      	; 0x3774 <TMRSRVC_tick+0xe>
    3770:	84 e0       	ldi	r24, 0x04	; 4
    3772:	08 95       	ret
    3774:	80 91 8b 02 	lds	r24, 0x028B
    3778:	88 23       	and	r24, r24
    377a:	11 f4       	brne	.+4      	; 0x3780 <TMRSRVC_tick+0x1a>
    377c:	83 e0       	ldi	r24, 0x03	; 3
    377e:	08 95       	ret
    3780:	80 91 8a 02 	lds	r24, 0x028A
    3784:	88 23       	and	r24, r24
    3786:	11 f0       	breq	.+4      	; 0x378c <TMRSRVC_tick+0x26>
    3788:	82 e0       	ldi	r24, 0x02	; 2
    378a:	08 95       	ret
    378c:	0e 94 65 1e 	call	0x3cca	; 0x3cca <TMRSRVC_process>
    3790:	81 30       	cpi	r24, 0x01	; 1
    3792:	e1 f3       	breq	.-8      	; 0x378c <TMRSRVC_tick+0x26>
    3794:	80 e0       	ldi	r24, 0x00	; 0
    3796:	08 95       	ret

00003798 <SPKR_beep_clk>:
    3798:	80 91 7b 02 	lds	r24, 0x027B
    379c:	81 30       	cpi	r24, 0x01	; 1
    379e:	11 f5       	brne	.+68     	; 0x37e4 <SPKR_beep_clk+0x4c>
    37a0:	80 91 84 02 	lds	r24, 0x0284
    37a4:	90 91 85 02 	lds	r25, 0x0285
    37a8:	20 91 86 02 	lds	r18, 0x0286
    37ac:	30 91 87 02 	lds	r19, 0x0287
    37b0:	28 0f       	add	r18, r24
    37b2:	39 1f       	adc	r19, r25
    37b4:	30 93 85 02 	sts	0x0285, r19
    37b8:	20 93 84 02 	sts	0x0284, r18
    37bc:	80 91 84 02 	lds	r24, 0x0284
    37c0:	90 91 85 02 	lds	r25, 0x0285
    37c4:	88 5e       	subi	r24, 0xE8	; 232
    37c6:	93 40       	sbci	r25, 0x03	; 3
    37c8:	6c f0       	brlt	.+26     	; 0x37e4 <SPKR_beep_clk+0x4c>
    37ca:	8b b1       	in	r24, 0x0b	; 11
    37cc:	80 58       	subi	r24, 0x80	; 128
    37ce:	8b b9       	out	0x0b, r24	; 11
    37d0:	80 91 84 02 	lds	r24, 0x0284
    37d4:	90 91 85 02 	lds	r25, 0x0285
    37d8:	88 5e       	subi	r24, 0xE8	; 232
    37da:	93 40       	sbci	r25, 0x03	; 3
    37dc:	90 93 85 02 	sts	0x0285, r25
    37e0:	80 93 84 02 	sts	0x0284, r24
    37e4:	08 95       	ret

000037e6 <STEPPER_clk>:
    37e6:	87 e0       	ldi	r24, 0x07	; 7
    37e8:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <SYS_get_state>
    37ec:	81 30       	cpi	r24, 0x01	; 1
    37ee:	09 f0       	breq	.+2      	; 0x37f2 <STEPPER_clk+0xc>
    37f0:	aa c0       	rjmp	.+340    	; 0x3946 <STEPPER_clk+0x160>
    37f2:	80 91 81 04 	lds	r24, 0x0481
    37f6:	90 91 82 04 	lds	r25, 0x0482
    37fa:	89 2b       	or	r24, r25
    37fc:	09 f1       	breq	.+66     	; 0x3840 <STEPPER_clk+0x5a>
    37fe:	80 91 a5 04 	lds	r24, 0x04A5
    3802:	90 91 a6 04 	lds	r25, 0x04A6
    3806:	20 91 81 04 	lds	r18, 0x0481
    380a:	30 91 82 04 	lds	r19, 0x0482
    380e:	82 0f       	add	r24, r18
    3810:	93 1f       	adc	r25, r19
    3812:	90 93 a6 04 	sts	0x04A6, r25
    3816:	80 93 a5 04 	sts	0x04A5, r24
    381a:	80 91 a5 04 	lds	r24, 0x04A5
    381e:	90 91 a6 04 	lds	r25, 0x04A6
    3822:	88 5e       	subi	r24, 0xE8	; 232
    3824:	93 40       	sbci	r25, 0x03	; 3
    3826:	a4 f0       	brlt	.+40     	; 0x3850 <STEPPER_clk+0x6a>
    3828:	80 91 a5 04 	lds	r24, 0x04A5
    382c:	90 91 a6 04 	lds	r25, 0x04A6
    3830:	88 5e       	subi	r24, 0xE8	; 232
    3832:	93 40       	sbci	r25, 0x03	; 3
    3834:	90 93 a6 04 	sts	0x04A6, r25
    3838:	80 93 a5 04 	sts	0x04A5, r24
    383c:	41 e0       	ldi	r20, 0x01	; 1
    383e:	09 c0       	rjmp	.+18     	; 0x3852 <STEPPER_clk+0x6c>
    3840:	80 91 79 04 	lds	r24, 0x0479
    3844:	90 91 7a 04 	lds	r25, 0x047A
    3848:	90 93 7e 04 	sts	0x047E, r25
    384c:	80 93 7d 04 	sts	0x047D, r24
    3850:	40 e0       	ldi	r20, 0x00	; 0
    3852:	80 91 83 04 	lds	r24, 0x0483
    3856:	90 91 84 04 	lds	r25, 0x0484
    385a:	89 2b       	or	r24, r25
    385c:	09 f1       	breq	.+66     	; 0x38a0 <STEPPER_clk+0xba>
    385e:	80 91 a7 04 	lds	r24, 0x04A7
    3862:	90 91 a8 04 	lds	r25, 0x04A8
    3866:	20 91 83 04 	lds	r18, 0x0483
    386a:	30 91 84 04 	lds	r19, 0x0484
    386e:	82 0f       	add	r24, r18
    3870:	93 1f       	adc	r25, r19
    3872:	90 93 a8 04 	sts	0x04A8, r25
    3876:	80 93 a7 04 	sts	0x04A7, r24
    387a:	80 91 a7 04 	lds	r24, 0x04A7
    387e:	90 91 a8 04 	lds	r25, 0x04A8
    3882:	88 5e       	subi	r24, 0xE8	; 232
    3884:	93 40       	sbci	r25, 0x03	; 3
    3886:	a4 f0       	brlt	.+40     	; 0x38b0 <STEPPER_clk+0xca>
    3888:	80 91 a7 04 	lds	r24, 0x04A7
    388c:	90 91 a8 04 	lds	r25, 0x04A8
    3890:	88 5e       	subi	r24, 0xE8	; 232
    3892:	93 40       	sbci	r25, 0x03	; 3
    3894:	90 93 a8 04 	sts	0x04A8, r25
    3898:	80 93 a7 04 	sts	0x04A7, r24
    389c:	61 e0       	ldi	r22, 0x01	; 1
    389e:	09 c0       	rjmp	.+18     	; 0x38b2 <STEPPER_clk+0xcc>
    38a0:	80 91 7b 04 	lds	r24, 0x047B
    38a4:	90 91 7c 04 	lds	r25, 0x047C
    38a8:	90 93 80 04 	sts	0x0480, r25
    38ac:	80 93 7f 04 	sts	0x047F, r24
    38b0:	60 e0       	ldi	r22, 0x00	; 0
    38b2:	84 2f       	mov	r24, r20
    38b4:	0e 94 a4 1c 	call	0x3948	; 0x3948 <STEPPER_process_accel>
    38b8:	80 91 a1 04 	lds	r24, 0x04A1
    38bc:	90 91 a2 04 	lds	r25, 0x04A2
    38c0:	20 91 7d 04 	lds	r18, 0x047D
    38c4:	30 91 7e 04 	lds	r19, 0x047E
    38c8:	28 0f       	add	r18, r24
    38ca:	39 1f       	adc	r19, r25
    38cc:	30 93 a2 04 	sts	0x04A2, r19
    38d0:	20 93 a1 04 	sts	0x04A1, r18
    38d4:	80 91 a1 04 	lds	r24, 0x04A1
    38d8:	90 91 a2 04 	lds	r25, 0x04A2
    38dc:	88 5e       	subi	r24, 0xE8	; 232
    38de:	93 40       	sbci	r25, 0x03	; 3
    38e0:	14 f4       	brge	.+4      	; 0x38e6 <STEPPER_clk+0x100>
    38e2:	40 e0       	ldi	r20, 0x00	; 0
    38e4:	0b c0       	rjmp	.+22     	; 0x38fc <STEPPER_clk+0x116>
    38e6:	80 91 a1 04 	lds	r24, 0x04A1
    38ea:	90 91 a2 04 	lds	r25, 0x04A2
    38ee:	88 5e       	subi	r24, 0xE8	; 232
    38f0:	93 40       	sbci	r25, 0x03	; 3
    38f2:	90 93 a2 04 	sts	0x04A2, r25
    38f6:	80 93 a1 04 	sts	0x04A1, r24
    38fa:	41 e0       	ldi	r20, 0x01	; 1
    38fc:	80 91 a3 04 	lds	r24, 0x04A3
    3900:	90 91 a4 04 	lds	r25, 0x04A4
    3904:	20 91 7f 04 	lds	r18, 0x047F
    3908:	30 91 80 04 	lds	r19, 0x0480
    390c:	28 0f       	add	r18, r24
    390e:	39 1f       	adc	r19, r25
    3910:	30 93 a4 04 	sts	0x04A4, r19
    3914:	20 93 a3 04 	sts	0x04A3, r18
    3918:	80 91 a3 04 	lds	r24, 0x04A3
    391c:	90 91 a4 04 	lds	r25, 0x04A4
    3920:	88 5e       	subi	r24, 0xE8	; 232
    3922:	93 40       	sbci	r25, 0x03	; 3
    3924:	14 f4       	brge	.+4      	; 0x392a <STEPPER_clk+0x144>
    3926:	60 e0       	ldi	r22, 0x00	; 0
    3928:	0b c0       	rjmp	.+22     	; 0x3940 <STEPPER_clk+0x15a>
    392a:	80 91 a3 04 	lds	r24, 0x04A3
    392e:	90 91 a4 04 	lds	r25, 0x04A4
    3932:	88 5e       	subi	r24, 0xE8	; 232
    3934:	93 40       	sbci	r25, 0x03	; 3
    3936:	90 93 a4 04 	sts	0x04A4, r25
    393a:	80 93 a3 04 	sts	0x04A3, r24
    393e:	61 e0       	ldi	r22, 0x01	; 1
    3940:	84 2f       	mov	r24, r20
    3942:	0e 94 e9 1c 	call	0x39d2	; 0x39d2 <STEPPER_process_run_mode>
    3946:	08 95       	ret

00003948 <STEPPER_process_accel>:
    3948:	88 23       	and	r24, r24
    394a:	f1 f0       	breq	.+60     	; 0x3988 <STEPPER_process_accel+0x40>
    394c:	20 91 79 04 	lds	r18, 0x0479
    3950:	30 91 7a 04 	lds	r19, 0x047A
    3954:	80 91 7d 04 	lds	r24, 0x047D
    3958:	90 91 7e 04 	lds	r25, 0x047E
    395c:	28 1b       	sub	r18, r24
    395e:	39 0b       	sbc	r19, r25
    3960:	12 16       	cp	r1, r18
    3962:	13 06       	cpc	r1, r19
    3964:	34 f4       	brge	.+12     	; 0x3972 <STEPPER_process_accel+0x2a>
    3966:	80 91 7d 04 	lds	r24, 0x047D
    396a:	90 91 7e 04 	lds	r25, 0x047E
    396e:	01 96       	adiw	r24, 0x01	; 1
    3970:	07 c0       	rjmp	.+14     	; 0x3980 <STEPPER_process_accel+0x38>
    3972:	23 2b       	or	r18, r19
    3974:	49 f0       	breq	.+18     	; 0x3988 <STEPPER_process_accel+0x40>
    3976:	80 91 7d 04 	lds	r24, 0x047D
    397a:	90 91 7e 04 	lds	r25, 0x047E
    397e:	01 97       	sbiw	r24, 0x01	; 1
    3980:	90 93 7e 04 	sts	0x047E, r25
    3984:	80 93 7d 04 	sts	0x047D, r24
    3988:	66 23       	and	r22, r22
    398a:	11 f1       	breq	.+68     	; 0x39d0 <STEPPER_process_accel+0x88>
    398c:	20 91 7b 04 	lds	r18, 0x047B
    3990:	30 91 7c 04 	lds	r19, 0x047C
    3994:	80 91 7f 04 	lds	r24, 0x047F
    3998:	90 91 80 04 	lds	r25, 0x0480
    399c:	28 1b       	sub	r18, r24
    399e:	39 0b       	sbc	r19, r25
    39a0:	12 16       	cp	r1, r18
    39a2:	13 06       	cpc	r1, r19
    39a4:	54 f4       	brge	.+20     	; 0x39ba <STEPPER_process_accel+0x72>
    39a6:	80 91 7f 04 	lds	r24, 0x047F
    39aa:	90 91 80 04 	lds	r25, 0x0480
    39ae:	01 96       	adiw	r24, 0x01	; 1
    39b0:	90 93 80 04 	sts	0x0480, r25
    39b4:	80 93 7f 04 	sts	0x047F, r24
    39b8:	08 95       	ret
    39ba:	23 2b       	or	r18, r19
    39bc:	49 f0       	breq	.+18     	; 0x39d0 <STEPPER_process_accel+0x88>
    39be:	80 91 7f 04 	lds	r24, 0x047F
    39c2:	90 91 80 04 	lds	r25, 0x0480
    39c6:	01 97       	sbiw	r24, 0x01	; 1
    39c8:	90 93 80 04 	sts	0x0480, r25
    39cc:	80 93 7f 04 	sts	0x047F, r24
    39d0:	08 95       	ret

000039d2 <STEPPER_process_run_mode>:
    39d2:	0f 93       	push	r16
    39d4:	1f 93       	push	r17
    39d6:	18 2f       	mov	r17, r24
    39d8:	06 2f       	mov	r16, r22
    39da:	80 91 ad 04 	lds	r24, 0x04AD
    39de:	88 23       	and	r24, r24
    39e0:	09 f0       	breq	.+2      	; 0x39e4 <STEPPER_process_run_mode+0x12>
    39e2:	e7 c0       	rjmp	.+462    	; 0x3bb2 <STEPPER_process_run_mode+0x1e0>
    39e4:	80 91 95 04 	lds	r24, 0x0495
    39e8:	88 23       	and	r24, r24
    39ea:	09 f0       	breq	.+2      	; 0x39ee <STEPPER_process_run_mode+0x1c>
    39ec:	5a c0       	rjmp	.+180    	; 0x3aa2 <STEPPER_process_run_mode+0xd0>
    39ee:	80 91 7d 04 	lds	r24, 0x047D
    39f2:	90 91 7e 04 	lds	r25, 0x047E
    39f6:	89 2b       	or	r24, r25
    39f8:	e9 f4       	brne	.+58     	; 0x3a34 <STEPPER_process_run_mode+0x62>
    39fa:	80 91 8c 02 	lds	r24, 0x028C
    39fe:	83 7e       	andi	r24, 0xE3	; 227
    3a00:	80 93 8c 02 	sts	0x028C, r24
    3a04:	10 92 9e 04 	sts	0x049E, r1
    3a08:	80 91 a9 04 	lds	r24, 0x04A9
    3a0c:	88 23       	and	r24, r24
    3a0e:	09 f4       	brne	.+2      	; 0x3a12 <STEPPER_process_run_mode+0x40>
    3a10:	5d c0       	rjmp	.+186    	; 0x3acc <STEPPER_process_run_mode+0xfa>
    3a12:	60 91 97 04 	lds	r22, 0x0497
    3a16:	80 e0       	ldi	r24, 0x00	; 0
    3a18:	0e 94 40 1e 	call	0x3c80	; 0x3c80 <STEPPER_stop>
    3a1c:	e0 91 ab 04 	lds	r30, 0x04AB
    3a20:	f0 91 ac 04 	lds	r31, 0x04AC
    3a24:	30 97       	sbiw	r30, 0x00	; 0
    3a26:	09 f4       	brne	.+2      	; 0x3a2a <STEPPER_process_run_mode+0x58>
    3a28:	51 c0       	rjmp	.+162    	; 0x3acc <STEPPER_process_run_mode+0xfa>
    3a2a:	81 e0       	ldi	r24, 0x01	; 1
    3a2c:	80 83       	st	Z, r24
    3a2e:	10 92 a9 04 	sts	0x04A9, r1
    3a32:	4c c0       	rjmp	.+152    	; 0x3acc <STEPPER_process_run_mode+0xfa>
    3a34:	80 91 77 04 	lds	r24, 0x0477
    3a38:	81 30       	cpi	r24, 0x01	; 1
    3a3a:	41 f4       	brne	.+16     	; 0x3a4c <STEPPER_process_run_mode+0x7a>
    3a3c:	80 91 89 04 	lds	r24, 0x0489
    3a40:	90 91 8a 04 	lds	r25, 0x048A
    3a44:	01 97       	sbiw	r24, 0x01	; 1
    3a46:	11 f4       	brne	.+4      	; 0x3a4c <STEPPER_process_run_mode+0x7a>
    3a48:	11 e0       	ldi	r17, 0x01	; 1
    3a4a:	02 c0       	rjmp	.+4      	; 0x3a50 <STEPPER_process_run_mode+0x7e>
    3a4c:	11 23       	and	r17, r17
    3a4e:	f1 f1       	breq	.+124    	; 0x3acc <STEPPER_process_run_mode+0xfa>
    3a50:	e0 91 9c 04 	lds	r30, 0x049C
    3a54:	f0 e0       	ldi	r31, 0x00	; 0
    3a56:	ec 55       	subi	r30, 0x5C	; 92
    3a58:	fe 4f       	sbci	r31, 0xFE	; 254
    3a5a:	90 91 8c 02 	lds	r25, 0x028C
    3a5e:	93 7e       	andi	r25, 0xE3	; 227
    3a60:	80 81       	ld	r24, Z
    3a62:	89 2b       	or	r24, r25
    3a64:	80 93 8c 02 	sts	0x028C, r24
    3a68:	80 91 9a 04 	lds	r24, 0x049A
    3a6c:	88 23       	and	r24, r24
    3a6e:	21 f4       	brne	.+8      	; 0x3a78 <STEPPER_process_run_mode+0xa6>
    3a70:	80 91 9c 04 	lds	r24, 0x049C
    3a74:	8f 5f       	subi	r24, 0xFF	; 255
    3a76:	03 c0       	rjmp	.+6      	; 0x3a7e <STEPPER_process_run_mode+0xac>
    3a78:	80 91 9c 04 	lds	r24, 0x049C
    3a7c:	81 50       	subi	r24, 0x01	; 1
    3a7e:	80 93 9c 04 	sts	0x049C, r24
    3a82:	80 91 9c 04 	lds	r24, 0x049C
    3a86:	83 70       	andi	r24, 0x03	; 3
    3a88:	80 93 9c 04 	sts	0x049C, r24
    3a8c:	81 e0       	ldi	r24, 0x01	; 1
    3a8e:	80 93 9e 04 	sts	0x049E, r24
    3a92:	80 91 77 04 	lds	r24, 0x0477
    3a96:	81 30       	cpi	r24, 0x01	; 1
    3a98:	c9 f4       	brne	.+50     	; 0x3acc <STEPPER_process_run_mode+0xfa>
    3a9a:	80 e0       	ldi	r24, 0x00	; 0
    3a9c:	0e 94 ec 1d 	call	0x3bd8	; 0x3bd8 <STEPPER_process_step_mode>
    3aa0:	15 c0       	rjmp	.+42     	; 0x3acc <STEPPER_process_run_mode+0xfa>
    3aa2:	90 91 8c 02 	lds	r25, 0x028C
    3aa6:	93 7e       	andi	r25, 0xE3	; 227
    3aa8:	90 93 8c 02 	sts	0x028C, r25
    3aac:	e0 91 9c 04 	lds	r30, 0x049C
    3ab0:	f0 e0       	ldi	r31, 0x00	; 0
    3ab2:	ec 55       	subi	r30, 0x5C	; 92
    3ab4:	fe 4f       	sbci	r31, 0xFE	; 254
    3ab6:	80 81       	ld	r24, Z
    3ab8:	89 2b       	or	r24, r25
    3aba:	80 93 8c 02 	sts	0x028C, r24
    3abe:	82 e0       	ldi	r24, 0x02	; 2
    3ac0:	80 93 9e 04 	sts	0x049E, r24
    3ac4:	10 92 7e 04 	sts	0x047E, r1
    3ac8:	10 92 7d 04 	sts	0x047D, r1
    3acc:	80 91 96 04 	lds	r24, 0x0496
    3ad0:	88 23       	and	r24, r24
    3ad2:	09 f0       	breq	.+2      	; 0x3ad6 <STEPPER_process_run_mode+0x104>
    3ad4:	59 c0       	rjmp	.+178    	; 0x3b88 <STEPPER_process_run_mode+0x1b6>
    3ad6:	80 91 7f 04 	lds	r24, 0x047F
    3ada:	90 91 80 04 	lds	r25, 0x0480
    3ade:	89 2b       	or	r24, r25
    3ae0:	e9 f4       	brne	.+58     	; 0x3b1c <STEPPER_process_run_mode+0x14a>
    3ae2:	80 91 8c 02 	lds	r24, 0x028C
    3ae6:	8f 71       	andi	r24, 0x1F	; 31
    3ae8:	80 93 8c 02 	sts	0x028C, r24
    3aec:	10 92 9f 04 	sts	0x049F, r1
    3af0:	80 91 aa 04 	lds	r24, 0x04AA
    3af4:	88 23       	and	r24, r24
    3af6:	09 f4       	brne	.+2      	; 0x3afa <STEPPER_process_run_mode+0x128>
    3af8:	5c c0       	rjmp	.+184    	; 0x3bb2 <STEPPER_process_run_mode+0x1e0>
    3afa:	60 91 98 04 	lds	r22, 0x0498
    3afe:	81 e0       	ldi	r24, 0x01	; 1
    3b00:	0e 94 40 1e 	call	0x3c80	; 0x3c80 <STEPPER_stop>
    3b04:	e0 91 ab 04 	lds	r30, 0x04AB
    3b08:	f0 91 ac 04 	lds	r31, 0x04AC
    3b0c:	30 97       	sbiw	r30, 0x00	; 0
    3b0e:	09 f4       	brne	.+2      	; 0x3b12 <STEPPER_process_run_mode+0x140>
    3b10:	50 c0       	rjmp	.+160    	; 0x3bb2 <STEPPER_process_run_mode+0x1e0>
    3b12:	81 e0       	ldi	r24, 0x01	; 1
    3b14:	81 83       	std	Z+1, r24	; 0x01
    3b16:	10 92 aa 04 	sts	0x04AA, r1
    3b1a:	4b c0       	rjmp	.+150    	; 0x3bb2 <STEPPER_process_run_mode+0x1e0>
    3b1c:	80 91 78 04 	lds	r24, 0x0478
    3b20:	81 30       	cpi	r24, 0x01	; 1
    3b22:	41 f4       	brne	.+16     	; 0x3b34 <STEPPER_process_run_mode+0x162>
    3b24:	80 91 8b 04 	lds	r24, 0x048B
    3b28:	90 91 8c 04 	lds	r25, 0x048C
    3b2c:	01 97       	sbiw	r24, 0x01	; 1
    3b2e:	11 f4       	brne	.+4      	; 0x3b34 <STEPPER_process_run_mode+0x162>
    3b30:	01 e0       	ldi	r16, 0x01	; 1
    3b32:	02 c0       	rjmp	.+4      	; 0x3b38 <STEPPER_process_run_mode+0x166>
    3b34:	00 23       	and	r16, r16
    3b36:	e9 f1       	breq	.+122    	; 0x3bb2 <STEPPER_process_run_mode+0x1e0>
    3b38:	e0 91 9d 04 	lds	r30, 0x049D
    3b3c:	f0 e0       	ldi	r31, 0x00	; 0
    3b3e:	e8 55       	subi	r30, 0x58	; 88
    3b40:	fe 4f       	sbci	r31, 0xFE	; 254
    3b42:	90 91 8c 02 	lds	r25, 0x028C
    3b46:	9f 71       	andi	r25, 0x1F	; 31
    3b48:	80 81       	ld	r24, Z
    3b4a:	89 2b       	or	r24, r25
    3b4c:	80 93 8c 02 	sts	0x028C, r24
    3b50:	80 91 9b 04 	lds	r24, 0x049B
    3b54:	88 23       	and	r24, r24
    3b56:	21 f4       	brne	.+8      	; 0x3b60 <STEPPER_process_run_mode+0x18e>
    3b58:	80 91 9d 04 	lds	r24, 0x049D
    3b5c:	8f 5f       	subi	r24, 0xFF	; 255
    3b5e:	03 c0       	rjmp	.+6      	; 0x3b66 <STEPPER_process_run_mode+0x194>
    3b60:	80 91 9d 04 	lds	r24, 0x049D
    3b64:	81 50       	subi	r24, 0x01	; 1
    3b66:	80 93 9d 04 	sts	0x049D, r24
    3b6a:	80 91 9d 04 	lds	r24, 0x049D
    3b6e:	83 70       	andi	r24, 0x03	; 3
    3b70:	80 93 9d 04 	sts	0x049D, r24
    3b74:	81 e0       	ldi	r24, 0x01	; 1
    3b76:	80 93 9f 04 	sts	0x049F, r24
    3b7a:	80 91 78 04 	lds	r24, 0x0478
    3b7e:	81 30       	cpi	r24, 0x01	; 1
    3b80:	c1 f4       	brne	.+48     	; 0x3bb2 <STEPPER_process_run_mode+0x1e0>
    3b82:	0e 94 ec 1d 	call	0x3bd8	; 0x3bd8 <STEPPER_process_step_mode>
    3b86:	15 c0       	rjmp	.+42     	; 0x3bb2 <STEPPER_process_run_mode+0x1e0>
    3b88:	90 91 8c 02 	lds	r25, 0x028C
    3b8c:	9f 71       	andi	r25, 0x1F	; 31
    3b8e:	90 93 8c 02 	sts	0x028C, r25
    3b92:	e0 91 9d 04 	lds	r30, 0x049D
    3b96:	f0 e0       	ldi	r31, 0x00	; 0
    3b98:	e8 55       	subi	r30, 0x58	; 88
    3b9a:	fe 4f       	sbci	r31, 0xFE	; 254
    3b9c:	80 81       	ld	r24, Z
    3b9e:	89 2b       	or	r24, r25
    3ba0:	80 93 8c 02 	sts	0x028C, r24
    3ba4:	82 e0       	ldi	r24, 0x02	; 2
    3ba6:	80 93 9f 04 	sts	0x049F, r24
    3baa:	10 92 80 04 	sts	0x0480, r1
    3bae:	10 92 7f 04 	sts	0x047F, r1
    3bb2:	80 91 a0 04 	lds	r24, 0x04A0
    3bb6:	88 23       	and	r24, r24
    3bb8:	31 f4       	brne	.+12     	; 0x3bc6 <STEPPER_process_run_mode+0x1f4>
    3bba:	8c e8       	ldi	r24, 0x8C	; 140
    3bbc:	92 e0       	ldi	r25, 0x02	; 2
    3bbe:	61 2f       	mov	r22, r17
    3bc0:	40 2f       	mov	r20, r16
    3bc2:	0e 94 d3 1e 	call	0x3da6	; 0x3da6 <STEPPER_process_pwm>
    3bc6:	88 b1       	in	r24, 0x08	; 8
    3bc8:	83 70       	andi	r24, 0x03	; 3
    3bca:	90 91 8c 02 	lds	r25, 0x028C
    3bce:	89 2b       	or	r24, r25
    3bd0:	88 b9       	out	0x08, r24	; 8
    3bd2:	1f 91       	pop	r17
    3bd4:	0f 91       	pop	r16
    3bd6:	08 95       	ret

00003bd8 <STEPPER_process_step_mode>:
    3bd8:	88 23       	and	r24, r24
    3bda:	21 f0       	breq	.+8      	; 0x3be4 <STEPPER_process_step_mode+0xc>
    3bdc:	81 30       	cpi	r24, 0x01	; 1
    3bde:	09 f0       	breq	.+2      	; 0x3be2 <STEPPER_process_step_mode+0xa>
    3be0:	4e c0       	rjmp	.+156    	; 0x3c7e <STEPPER_process_step_mode+0xa6>
    3be2:	27 c0       	rjmp	.+78     	; 0x3c32 <STEPPER_process_step_mode+0x5a>
    3be4:	80 91 89 04 	lds	r24, 0x0489
    3be8:	90 91 8a 04 	lds	r25, 0x048A
    3bec:	89 2b       	or	r24, r25
    3bee:	49 f0       	breq	.+18     	; 0x3c02 <STEPPER_process_step_mode+0x2a>
    3bf0:	80 91 89 04 	lds	r24, 0x0489
    3bf4:	90 91 8a 04 	lds	r25, 0x048A
    3bf8:	01 97       	sbiw	r24, 0x01	; 1
    3bfa:	90 93 8a 04 	sts	0x048A, r25
    3bfe:	80 93 89 04 	sts	0x0489, r24
    3c02:	80 91 a9 04 	lds	r24, 0x04A9
    3c06:	88 23       	and	r24, r24
    3c08:	d1 f5       	brne	.+116    	; 0x3c7e <STEPPER_process_step_mode+0xa6>
    3c0a:	20 91 89 04 	lds	r18, 0x0489
    3c0e:	30 91 8a 04 	lds	r19, 0x048A
    3c12:	80 91 8d 04 	lds	r24, 0x048D
    3c16:	90 91 8e 04 	lds	r25, 0x048E
    3c1a:	28 17       	cp	r18, r24
    3c1c:	39 07       	cpc	r19, r25
    3c1e:	79 f5       	brne	.+94     	; 0x3c7e <STEPPER_process_step_mode+0xa6>
    3c20:	80 e0       	ldi	r24, 0x00	; 0
    3c22:	60 e0       	ldi	r22, 0x00	; 0
    3c24:	70 e0       	ldi	r23, 0x00	; 0
    3c26:	0e 94 f6 10 	call	0x21ec	; 0x21ec <STEPPER_set_speed>
    3c2a:	81 e0       	ldi	r24, 0x01	; 1
    3c2c:	80 93 a9 04 	sts	0x04A9, r24
    3c30:	08 95       	ret
    3c32:	80 91 8b 04 	lds	r24, 0x048B
    3c36:	90 91 8c 04 	lds	r25, 0x048C
    3c3a:	89 2b       	or	r24, r25
    3c3c:	49 f0       	breq	.+18     	; 0x3c50 <STEPPER_process_step_mode+0x78>
    3c3e:	80 91 8b 04 	lds	r24, 0x048B
    3c42:	90 91 8c 04 	lds	r25, 0x048C
    3c46:	01 97       	sbiw	r24, 0x01	; 1
    3c48:	90 93 8c 04 	sts	0x048C, r25
    3c4c:	80 93 8b 04 	sts	0x048B, r24
    3c50:	80 91 aa 04 	lds	r24, 0x04AA
    3c54:	88 23       	and	r24, r24
    3c56:	99 f4       	brne	.+38     	; 0x3c7e <STEPPER_process_step_mode+0xa6>
    3c58:	20 91 8b 04 	lds	r18, 0x048B
    3c5c:	30 91 8c 04 	lds	r19, 0x048C
    3c60:	80 91 8f 04 	lds	r24, 0x048F
    3c64:	90 91 90 04 	lds	r25, 0x0490
    3c68:	28 17       	cp	r18, r24
    3c6a:	39 07       	cpc	r19, r25
    3c6c:	41 f4       	brne	.+16     	; 0x3c7e <STEPPER_process_step_mode+0xa6>
    3c6e:	81 e0       	ldi	r24, 0x01	; 1
    3c70:	60 e0       	ldi	r22, 0x00	; 0
    3c72:	70 e0       	ldi	r23, 0x00	; 0
    3c74:	0e 94 f6 10 	call	0x21ec	; 0x21ec <STEPPER_set_speed>
    3c78:	81 e0       	ldi	r24, 0x01	; 1
    3c7a:	80 93 aa 04 	sts	0x04AA, r24
    3c7e:	08 95       	ret

00003c80 <STEPPER_stop>:
    3c80:	0f 93       	push	r16
    3c82:	1f 93       	push	r17
    3c84:	18 2f       	mov	r17, r24
    3c86:	06 2f       	mov	r16, r22
    3c88:	66 23       	and	r22, r22
    3c8a:	49 f4       	brne	.+18     	; 0x3c9e <STEPPER_stop+0x1e>
    3c8c:	60 e0       	ldi	r22, 0x00	; 0
    3c8e:	70 e0       	ldi	r23, 0x00	; 0
    3c90:	0e 94 f6 10 	call	0x21ec	; 0x21ec <STEPPER_set_speed>
    3c94:	81 2f       	mov	r24, r17
    3c96:	60 e0       	ldi	r22, 0x00	; 0
    3c98:	70 e0       	ldi	r23, 0x00	; 0
    3c9a:	0e 94 4d 19 	call	0x329a	; 0x329a <STEPPER_set_steps>
    3c9e:	81 e0       	ldi	r24, 0x01	; 1
    3ca0:	80 93 ad 04 	sts	0x04AD, r24
    3ca4:	11 30       	cpi	r17, 0x01	; 1
    3ca6:	51 f0       	breq	.+20     	; 0x3cbc <STEPPER_stop+0x3c>
    3ca8:	11 30       	cpi	r17, 0x01	; 1
    3caa:	18 f0       	brcs	.+6      	; 0x3cb2 <STEPPER_stop+0x32>
    3cac:	12 30       	cpi	r17, 0x02	; 2
    3cae:	41 f4       	brne	.+16     	; 0x3cc0 <STEPPER_stop+0x40>
    3cb0:	03 c0       	rjmp	.+6      	; 0x3cb8 <STEPPER_stop+0x38>
    3cb2:	00 93 95 04 	sts	0x0495, r16
    3cb6:	04 c0       	rjmp	.+8      	; 0x3cc0 <STEPPER_stop+0x40>
    3cb8:	00 93 95 04 	sts	0x0495, r16
    3cbc:	00 93 96 04 	sts	0x0496, r16
    3cc0:	10 92 ad 04 	sts	0x04AD, r1
    3cc4:	1f 91       	pop	r17
    3cc6:	0f 91       	pop	r16
    3cc8:	08 95       	ret

00003cca <TMRSRVC_process>:
    3cca:	ff 92       	push	r15
    3ccc:	0f 93       	push	r16
    3cce:	1f 93       	push	r17
    3cd0:	cf 93       	push	r28
    3cd2:	df 93       	push	r29
    3cd4:	80 91 e7 04 	lds	r24, 0x04E7
    3cd8:	88 23       	and	r24, r24
    3cda:	09 f4       	brne	.+2      	; 0x3cde <TMRSRVC_process+0x14>
    3cdc:	59 c0       	rjmp	.+178    	; 0x3d90 <TMRSRVC_process+0xc6>
    3cde:	00 91 e8 04 	lds	r16, 0x04E8
    3ce2:	10 91 e9 04 	lds	r17, 0x04E9
    3ce6:	f8 01       	movw	r30, r16
    3ce8:	c0 81       	ld	r28, Z
    3cea:	d1 81       	ldd	r29, Z+1	; 0x01
    3cec:	8c 81       	ldd	r24, Y+4	; 0x04
    3cee:	9d 81       	ldd	r25, Y+5	; 0x05
    3cf0:	01 97       	sbiw	r24, 0x01	; 1
    3cf2:	9d 83       	std	Y+5, r25	; 0x05
    3cf4:	8c 83       	std	Y+4, r24	; 0x04
    3cf6:	18 16       	cp	r1, r24
    3cf8:	19 06       	cpc	r1, r25
    3cfa:	0c f4       	brge	.+2      	; 0x3cfe <TMRSRVC_process+0x34>
    3cfc:	49 c0       	rjmp	.+146    	; 0x3d90 <TMRSRVC_process+0xc6>
    3cfe:	89 81       	ldd	r24, Y+1	; 0x01
    3d00:	80 ff       	sbrs	r24, 0
    3d02:	05 c0       	rjmp	.+10     	; 0x3d0e <TMRSRVC_process+0x44>
    3d04:	8e 81       	ldd	r24, Y+6	; 0x06
    3d06:	88 23       	and	r24, r24
    3d08:	11 f4       	brne	.+4      	; 0x3d0e <TMRSRVC_process+0x44>
    3d0a:	81 e0       	ldi	r24, 0x01	; 1
    3d0c:	8e 83       	std	Y+6, r24	; 0x06
    3d0e:	89 81       	ldd	r24, Y+1	; 0x01
    3d10:	81 ff       	sbrs	r24, 1
    3d12:	03 c0       	rjmp	.+6      	; 0x3d1a <TMRSRVC_process+0x50>
    3d14:	ef 81       	ldd	r30, Y+7	; 0x07
    3d16:	f8 85       	ldd	r31, Y+8	; 0x08
    3d18:	09 95       	icall
    3d1a:	80 91 e7 04 	lds	r24, 0x04E7
    3d1e:	82 30       	cpi	r24, 0x02	; 2
    3d20:	a8 f0       	brcs	.+42     	; 0x3d4c <TMRSRVC_process+0x82>
    3d22:	f8 01       	movw	r30, r16
    3d24:	82 81       	ldd	r24, Z+2	; 0x02
    3d26:	93 81       	ldd	r25, Z+3	; 0x03
    3d28:	90 93 e9 04 	sts	0x04E9, r25
    3d2c:	80 93 e8 04 	sts	0x04E8, r24
    3d30:	13 82       	std	Z+3, r1	; 0x03
    3d32:	12 82       	std	Z+2, r1	; 0x02
    3d34:	e0 91 00 00 	lds	r30, 0x0000
    3d38:	f0 91 01 00 	lds	r31, 0x0001
    3d3c:	84 81       	ldd	r24, Z+4	; 0x04
    3d3e:	95 81       	ldd	r25, Z+5	; 0x05
    3d40:	18 16       	cp	r1, r24
    3d42:	19 06       	cpc	r1, r25
    3d44:	3c f0       	brlt	.+14     	; 0x3d54 <TMRSRVC_process+0x8a>
    3d46:	ff 24       	eor	r15, r15
    3d48:	f3 94       	inc	r15
    3d4a:	05 c0       	rjmp	.+10     	; 0x3d56 <TMRSRVC_process+0x8c>
    3d4c:	10 92 e9 04 	sts	0x04E9, r1
    3d50:	10 92 e8 04 	sts	0x04E8, r1
    3d54:	ff 24       	eor	r15, r15
    3d56:	80 91 e7 04 	lds	r24, 0x04E7
    3d5a:	81 50       	subi	r24, 0x01	; 1
    3d5c:	80 93 e7 04 	sts	0x04E7, r24
    3d60:	80 91 e7 04 	lds	r24, 0x04E7
    3d64:	88 23       	and	r24, r24
    3d66:	11 f4       	brne	.+4      	; 0x3d6c <TMRSRVC_process+0xa2>
    3d68:	0e 94 d0 1e 	call	0x3da0	; 0x3da0 <TMRSRVC_stop>
    3d6c:	89 81       	ldd	r24, Y+1	; 0x01
    3d6e:	82 ff       	sbrs	r24, 2
    3d70:	08 c0       	rjmp	.+16     	; 0x3d82 <TMRSRVC_process+0xb8>
    3d72:	8a 81       	ldd	r24, Y+2	; 0x02
    3d74:	9b 81       	ldd	r25, Y+3	; 0x03
    3d76:	9d 83       	std	Y+5, r25	; 0x05
    3d78:	8c 83       	std	Y+4, r24	; 0x04
    3d7a:	c8 01       	movw	r24, r16
    3d7c:	0e 94 0e 1a 	call	0x341c	; 0x341c <TMRSRVC_insert>
    3d80:	08 c0       	rjmp	.+16     	; 0x3d92 <TMRSRVC_process+0xc8>
    3d82:	c8 01       	movw	r24, r16
    3d84:	0e 94 d9 27 	call	0x4fb2	; 0x4fb2 <free>
    3d88:	89 81       	ldd	r24, Y+1	; 0x01
    3d8a:	8f 7e       	andi	r24, 0xEF	; 239
    3d8c:	89 83       	std	Y+1, r24	; 0x01
    3d8e:	01 c0       	rjmp	.+2      	; 0x3d92 <TMRSRVC_process+0xc8>
    3d90:	ff 24       	eor	r15, r15
    3d92:	8f 2d       	mov	r24, r15
    3d94:	df 91       	pop	r29
    3d96:	cf 91       	pop	r28
    3d98:	1f 91       	pop	r17
    3d9a:	0f 91       	pop	r16
    3d9c:	ff 90       	pop	r15
    3d9e:	08 95       	ret

00003da0 <TMRSRVC_stop>:
    3da0:	10 92 8b 02 	sts	0x028B, r1
    3da4:	08 95       	ret

00003da6 <STEPPER_process_pwm>:
    3da6:	fc 01       	movw	r30, r24
    3da8:	80 91 9e 04 	lds	r24, 0x049E
    3dac:	82 30       	cpi	r24, 0x02	; 2
    3dae:	69 f4       	brne	.+26     	; 0x3dca <STEPPER_process_pwm+0x24>
    3db0:	80 91 90 02 	lds	r24, 0x0290
    3db4:	91 e0       	ldi	r25, 0x01	; 1
    3db6:	89 27       	eor	r24, r25
    3db8:	80 93 90 02 	sts	0x0290, r24
    3dbc:	88 23       	and	r24, r24
    3dbe:	09 f0       	breq	.+2      	; 0x3dc2 <STEPPER_process_pwm+0x1c>
    3dc0:	3e c0       	rjmp	.+124    	; 0x3e3e <STEPPER_process_pwm+0x98>
    3dc2:	80 81       	ld	r24, Z
    3dc4:	83 7e       	andi	r24, 0xE3	; 227
    3dc6:	80 83       	st	Z, r24
    3dc8:	3a c0       	rjmp	.+116    	; 0x3e3e <STEPPER_process_pwm+0x98>
    3dca:	80 91 7d 04 	lds	r24, 0x047D
    3dce:	90 91 7e 04 	lds	r25, 0x047E
    3dd2:	c3 97       	sbiw	r24, 0x33	; 51
    3dd4:	a4 f5       	brge	.+104    	; 0x3e3e <STEPPER_process_pwm+0x98>
    3dd6:	66 23       	and	r22, r22
    3dd8:	d1 f0       	breq	.+52     	; 0x3e0e <STEPPER_process_pwm+0x68>
    3dda:	20 91 7d 04 	lds	r18, 0x047D
    3dde:	30 91 7e 04 	lds	r19, 0x047E
    3de2:	80 e6       	ldi	r24, 0x60	; 96
    3de4:	90 e0       	ldi	r25, 0x00	; 0
    3de6:	bc 01       	movw	r22, r24
    3de8:	26 9f       	mul	r18, r22
    3dea:	c0 01       	movw	r24, r0
    3dec:	27 9f       	mul	r18, r23
    3dee:	90 0d       	add	r25, r0
    3df0:	36 9f       	mul	r19, r22
    3df2:	90 0d       	add	r25, r0
    3df4:	11 24       	eor	r1, r1
    3df6:	88 0f       	add	r24, r24
    3df8:	89 2f       	mov	r24, r25
    3dfa:	88 1f       	adc	r24, r24
    3dfc:	99 0b       	sbc	r25, r25
    3dfe:	90 93 92 04 	sts	0x0492, r25
    3e02:	80 93 91 04 	sts	0x0491, r24
    3e06:	81 e0       	ldi	r24, 0x01	; 1
    3e08:	80 93 8e 02 	sts	0x028E, r24
    3e0c:	18 c0       	rjmp	.+48     	; 0x3e3e <STEPPER_process_pwm+0x98>
    3e0e:	80 91 8e 02 	lds	r24, 0x028E
    3e12:	88 23       	and	r24, r24
    3e14:	a1 f0       	breq	.+40     	; 0x3e3e <STEPPER_process_pwm+0x98>
    3e16:	80 91 91 04 	lds	r24, 0x0491
    3e1a:	90 91 92 04 	lds	r25, 0x0492
    3e1e:	01 97       	sbiw	r24, 0x01	; 1
    3e20:	90 93 92 04 	sts	0x0492, r25
    3e24:	80 93 91 04 	sts	0x0491, r24
    3e28:	80 91 91 04 	lds	r24, 0x0491
    3e2c:	90 91 92 04 	lds	r25, 0x0492
    3e30:	89 2b       	or	r24, r25
    3e32:	29 f4       	brne	.+10     	; 0x3e3e <STEPPER_process_pwm+0x98>
    3e34:	80 81       	ld	r24, Z
    3e36:	83 7e       	andi	r24, 0xE3	; 227
    3e38:	80 83       	st	Z, r24
    3e3a:	10 92 8e 02 	sts	0x028E, r1
    3e3e:	80 91 9f 04 	lds	r24, 0x049F
    3e42:	82 30       	cpi	r24, 0x02	; 2
    3e44:	69 f4       	brne	.+26     	; 0x3e60 <STEPPER_process_pwm+0xba>
    3e46:	80 91 8f 02 	lds	r24, 0x028F
    3e4a:	91 e0       	ldi	r25, 0x01	; 1
    3e4c:	89 27       	eor	r24, r25
    3e4e:	80 93 8f 02 	sts	0x028F, r24
    3e52:	88 23       	and	r24, r24
    3e54:	09 f0       	breq	.+2      	; 0x3e58 <STEPPER_process_pwm+0xb2>
    3e56:	3e c0       	rjmp	.+124    	; 0x3ed4 <STEPPER_process_pwm+0x12e>
    3e58:	80 81       	ld	r24, Z
    3e5a:	8f 71       	andi	r24, 0x1F	; 31
    3e5c:	80 83       	st	Z, r24
    3e5e:	08 95       	ret
    3e60:	80 91 7f 04 	lds	r24, 0x047F
    3e64:	90 91 80 04 	lds	r25, 0x0480
    3e68:	c3 97       	sbiw	r24, 0x33	; 51
    3e6a:	a4 f5       	brge	.+104    	; 0x3ed4 <STEPPER_process_pwm+0x12e>
    3e6c:	44 23       	and	r20, r20
    3e6e:	d1 f0       	breq	.+52     	; 0x3ea4 <STEPPER_process_pwm+0xfe>
    3e70:	20 91 7f 04 	lds	r18, 0x047F
    3e74:	30 91 80 04 	lds	r19, 0x0480
    3e78:	80 e6       	ldi	r24, 0x60	; 96
    3e7a:	90 e0       	ldi	r25, 0x00	; 0
    3e7c:	ac 01       	movw	r20, r24
    3e7e:	24 9f       	mul	r18, r20
    3e80:	c0 01       	movw	r24, r0
    3e82:	25 9f       	mul	r18, r21
    3e84:	90 0d       	add	r25, r0
    3e86:	34 9f       	mul	r19, r20
    3e88:	90 0d       	add	r25, r0
    3e8a:	11 24       	eor	r1, r1
    3e8c:	88 0f       	add	r24, r24
    3e8e:	89 2f       	mov	r24, r25
    3e90:	88 1f       	adc	r24, r24
    3e92:	99 0b       	sbc	r25, r25
    3e94:	90 93 94 04 	sts	0x0494, r25
    3e98:	80 93 93 04 	sts	0x0493, r24
    3e9c:	81 e0       	ldi	r24, 0x01	; 1
    3e9e:	80 93 8d 02 	sts	0x028D, r24
    3ea2:	08 95       	ret
    3ea4:	80 91 8d 02 	lds	r24, 0x028D
    3ea8:	88 23       	and	r24, r24
    3eaa:	a1 f0       	breq	.+40     	; 0x3ed4 <STEPPER_process_pwm+0x12e>
    3eac:	80 91 93 04 	lds	r24, 0x0493
    3eb0:	90 91 94 04 	lds	r25, 0x0494
    3eb4:	01 97       	sbiw	r24, 0x01	; 1
    3eb6:	90 93 94 04 	sts	0x0494, r25
    3eba:	80 93 93 04 	sts	0x0493, r24
    3ebe:	80 91 93 04 	lds	r24, 0x0493
    3ec2:	90 91 94 04 	lds	r25, 0x0494
    3ec6:	89 2b       	or	r24, r25
    3ec8:	29 f4       	brne	.+10     	; 0x3ed4 <STEPPER_process_pwm+0x12e>
    3eca:	80 81       	ld	r24, Z
    3ecc:	8f 71       	andi	r24, 0x1F	; 31
    3ece:	80 83       	st	Z, r24
    3ed0:	10 92 8d 02 	sts	0x028D, r1
    3ed4:	08 95       	ret

00003ed6 <__subsf3>:
    3ed6:	50 58       	subi	r21, 0x80	; 128

00003ed8 <__addsf3>:
    3ed8:	bb 27       	eor	r27, r27
    3eda:	aa 27       	eor	r26, r26
    3edc:	0e d0       	rcall	.+28     	; 0x3efa <__addsf3x>
    3ede:	75 c1       	rjmp	.+746    	; 0x41ca <__fp_round>
    3ee0:	66 d1       	rcall	.+716    	; 0x41ae <__fp_pscA>
    3ee2:	30 f0       	brcs	.+12     	; 0x3ef0 <__addsf3+0x18>
    3ee4:	6b d1       	rcall	.+726    	; 0x41bc <__fp_pscB>
    3ee6:	20 f0       	brcs	.+8      	; 0x3ef0 <__addsf3+0x18>
    3ee8:	31 f4       	brne	.+12     	; 0x3ef6 <__addsf3+0x1e>
    3eea:	9f 3f       	cpi	r25, 0xFF	; 255
    3eec:	11 f4       	brne	.+4      	; 0x3ef2 <__addsf3+0x1a>
    3eee:	1e f4       	brtc	.+6      	; 0x3ef6 <__addsf3+0x1e>
    3ef0:	5b c1       	rjmp	.+694    	; 0x41a8 <__fp_nan>
    3ef2:	0e f4       	brtc	.+2      	; 0x3ef6 <__addsf3+0x1e>
    3ef4:	e0 95       	com	r30
    3ef6:	e7 fb       	bst	r30, 7
    3ef8:	51 c1       	rjmp	.+674    	; 0x419c <__fp_inf>

00003efa <__addsf3x>:
    3efa:	e9 2f       	mov	r30, r25
    3efc:	77 d1       	rcall	.+750    	; 0x41ec <__fp_split3>
    3efe:	80 f3       	brcs	.-32     	; 0x3ee0 <__addsf3+0x8>
    3f00:	ba 17       	cp	r27, r26
    3f02:	62 07       	cpc	r22, r18
    3f04:	73 07       	cpc	r23, r19
    3f06:	84 07       	cpc	r24, r20
    3f08:	95 07       	cpc	r25, r21
    3f0a:	18 f0       	brcs	.+6      	; 0x3f12 <__addsf3x+0x18>
    3f0c:	71 f4       	brne	.+28     	; 0x3f2a <__addsf3x+0x30>
    3f0e:	9e f5       	brtc	.+102    	; 0x3f76 <__addsf3x+0x7c>
    3f10:	8f c1       	rjmp	.+798    	; 0x4230 <__fp_zero>
    3f12:	0e f4       	brtc	.+2      	; 0x3f16 <__addsf3x+0x1c>
    3f14:	e0 95       	com	r30
    3f16:	0b 2e       	mov	r0, r27
    3f18:	ba 2f       	mov	r27, r26
    3f1a:	a0 2d       	mov	r26, r0
    3f1c:	0b 01       	movw	r0, r22
    3f1e:	b9 01       	movw	r22, r18
    3f20:	90 01       	movw	r18, r0
    3f22:	0c 01       	movw	r0, r24
    3f24:	ca 01       	movw	r24, r20
    3f26:	a0 01       	movw	r20, r0
    3f28:	11 24       	eor	r1, r1
    3f2a:	ff 27       	eor	r31, r31
    3f2c:	59 1b       	sub	r21, r25
    3f2e:	99 f0       	breq	.+38     	; 0x3f56 <__addsf3x+0x5c>
    3f30:	59 3f       	cpi	r21, 0xF9	; 249
    3f32:	50 f4       	brcc	.+20     	; 0x3f48 <__addsf3x+0x4e>
    3f34:	50 3e       	cpi	r21, 0xE0	; 224
    3f36:	68 f1       	brcs	.+90     	; 0x3f92 <__addsf3x+0x98>
    3f38:	1a 16       	cp	r1, r26
    3f3a:	f0 40       	sbci	r31, 0x00	; 0
    3f3c:	a2 2f       	mov	r26, r18
    3f3e:	23 2f       	mov	r18, r19
    3f40:	34 2f       	mov	r19, r20
    3f42:	44 27       	eor	r20, r20
    3f44:	58 5f       	subi	r21, 0xF8	; 248
    3f46:	f3 cf       	rjmp	.-26     	; 0x3f2e <__addsf3x+0x34>
    3f48:	46 95       	lsr	r20
    3f4a:	37 95       	ror	r19
    3f4c:	27 95       	ror	r18
    3f4e:	a7 95       	ror	r26
    3f50:	f0 40       	sbci	r31, 0x00	; 0
    3f52:	53 95       	inc	r21
    3f54:	c9 f7       	brne	.-14     	; 0x3f48 <__addsf3x+0x4e>
    3f56:	7e f4       	brtc	.+30     	; 0x3f76 <__addsf3x+0x7c>
    3f58:	1f 16       	cp	r1, r31
    3f5a:	ba 0b       	sbc	r27, r26
    3f5c:	62 0b       	sbc	r22, r18
    3f5e:	73 0b       	sbc	r23, r19
    3f60:	84 0b       	sbc	r24, r20
    3f62:	ba f0       	brmi	.+46     	; 0x3f92 <__addsf3x+0x98>
    3f64:	91 50       	subi	r25, 0x01	; 1
    3f66:	a1 f0       	breq	.+40     	; 0x3f90 <__addsf3x+0x96>
    3f68:	ff 0f       	add	r31, r31
    3f6a:	bb 1f       	adc	r27, r27
    3f6c:	66 1f       	adc	r22, r22
    3f6e:	77 1f       	adc	r23, r23
    3f70:	88 1f       	adc	r24, r24
    3f72:	c2 f7       	brpl	.-16     	; 0x3f64 <__addsf3x+0x6a>
    3f74:	0e c0       	rjmp	.+28     	; 0x3f92 <__addsf3x+0x98>
    3f76:	ba 0f       	add	r27, r26
    3f78:	62 1f       	adc	r22, r18
    3f7a:	73 1f       	adc	r23, r19
    3f7c:	84 1f       	adc	r24, r20
    3f7e:	48 f4       	brcc	.+18     	; 0x3f92 <__addsf3x+0x98>
    3f80:	87 95       	ror	r24
    3f82:	77 95       	ror	r23
    3f84:	67 95       	ror	r22
    3f86:	b7 95       	ror	r27
    3f88:	f7 95       	ror	r31
    3f8a:	9e 3f       	cpi	r25, 0xFE	; 254
    3f8c:	08 f0       	brcs	.+2      	; 0x3f90 <__addsf3x+0x96>
    3f8e:	b3 cf       	rjmp	.-154    	; 0x3ef6 <__addsf3+0x1e>
    3f90:	93 95       	inc	r25
    3f92:	88 0f       	add	r24, r24
    3f94:	08 f0       	brcs	.+2      	; 0x3f98 <__addsf3x+0x9e>
    3f96:	99 27       	eor	r25, r25
    3f98:	ee 0f       	add	r30, r30
    3f9a:	97 95       	ror	r25
    3f9c:	87 95       	ror	r24
    3f9e:	08 95       	ret

00003fa0 <__cmpsf2>:
    3fa0:	d9 d0       	rcall	.+434    	; 0x4154 <__fp_cmp>
    3fa2:	08 f4       	brcc	.+2      	; 0x3fa6 <__cmpsf2+0x6>
    3fa4:	81 e0       	ldi	r24, 0x01	; 1
    3fa6:	08 95       	ret

00003fa8 <__divsf3>:
    3fa8:	0c d0       	rcall	.+24     	; 0x3fc2 <__divsf3x>
    3faa:	0f c1       	rjmp	.+542    	; 0x41ca <__fp_round>
    3fac:	07 d1       	rcall	.+526    	; 0x41bc <__fp_pscB>
    3fae:	40 f0       	brcs	.+16     	; 0x3fc0 <__divsf3+0x18>
    3fb0:	fe d0       	rcall	.+508    	; 0x41ae <__fp_pscA>
    3fb2:	30 f0       	brcs	.+12     	; 0x3fc0 <__divsf3+0x18>
    3fb4:	21 f4       	brne	.+8      	; 0x3fbe <__divsf3+0x16>
    3fb6:	5f 3f       	cpi	r21, 0xFF	; 255
    3fb8:	19 f0       	breq	.+6      	; 0x3fc0 <__divsf3+0x18>
    3fba:	f0 c0       	rjmp	.+480    	; 0x419c <__fp_inf>
    3fbc:	51 11       	cpse	r21, r1
    3fbe:	39 c1       	rjmp	.+626    	; 0x4232 <__fp_szero>
    3fc0:	f3 c0       	rjmp	.+486    	; 0x41a8 <__fp_nan>

00003fc2 <__divsf3x>:
    3fc2:	14 d1       	rcall	.+552    	; 0x41ec <__fp_split3>
    3fc4:	98 f3       	brcs	.-26     	; 0x3fac <__divsf3+0x4>

00003fc6 <__divsf3_pse>:
    3fc6:	99 23       	and	r25, r25
    3fc8:	c9 f3       	breq	.-14     	; 0x3fbc <__divsf3+0x14>
    3fca:	55 23       	and	r21, r21
    3fcc:	b1 f3       	breq	.-20     	; 0x3fba <__divsf3+0x12>
    3fce:	95 1b       	sub	r25, r21
    3fd0:	55 0b       	sbc	r21, r21
    3fd2:	bb 27       	eor	r27, r27
    3fd4:	aa 27       	eor	r26, r26
    3fd6:	62 17       	cp	r22, r18
    3fd8:	73 07       	cpc	r23, r19
    3fda:	84 07       	cpc	r24, r20
    3fdc:	38 f0       	brcs	.+14     	; 0x3fec <__divsf3_pse+0x26>
    3fde:	9f 5f       	subi	r25, 0xFF	; 255
    3fe0:	5f 4f       	sbci	r21, 0xFF	; 255
    3fe2:	22 0f       	add	r18, r18
    3fe4:	33 1f       	adc	r19, r19
    3fe6:	44 1f       	adc	r20, r20
    3fe8:	aa 1f       	adc	r26, r26
    3fea:	a9 f3       	breq	.-22     	; 0x3fd6 <__divsf3_pse+0x10>
    3fec:	33 d0       	rcall	.+102    	; 0x4054 <__divsf3_pse+0x8e>
    3fee:	0e 2e       	mov	r0, r30
    3ff0:	3a f0       	brmi	.+14     	; 0x4000 <__divsf3_pse+0x3a>
    3ff2:	e0 e8       	ldi	r30, 0x80	; 128
    3ff4:	30 d0       	rcall	.+96     	; 0x4056 <__divsf3_pse+0x90>
    3ff6:	91 50       	subi	r25, 0x01	; 1
    3ff8:	50 40       	sbci	r21, 0x00	; 0
    3ffa:	e6 95       	lsr	r30
    3ffc:	00 1c       	adc	r0, r0
    3ffe:	ca f7       	brpl	.-14     	; 0x3ff2 <__divsf3_pse+0x2c>
    4000:	29 d0       	rcall	.+82     	; 0x4054 <__divsf3_pse+0x8e>
    4002:	fe 2f       	mov	r31, r30
    4004:	27 d0       	rcall	.+78     	; 0x4054 <__divsf3_pse+0x8e>
    4006:	66 0f       	add	r22, r22
    4008:	77 1f       	adc	r23, r23
    400a:	88 1f       	adc	r24, r24
    400c:	bb 1f       	adc	r27, r27
    400e:	26 17       	cp	r18, r22
    4010:	37 07       	cpc	r19, r23
    4012:	48 07       	cpc	r20, r24
    4014:	ab 07       	cpc	r26, r27
    4016:	b0 e8       	ldi	r27, 0x80	; 128
    4018:	09 f0       	breq	.+2      	; 0x401c <__divsf3_pse+0x56>
    401a:	bb 0b       	sbc	r27, r27
    401c:	80 2d       	mov	r24, r0
    401e:	bf 01       	movw	r22, r30
    4020:	ff 27       	eor	r31, r31
    4022:	93 58       	subi	r25, 0x83	; 131
    4024:	5f 4f       	sbci	r21, 0xFF	; 255
    4026:	2a f0       	brmi	.+10     	; 0x4032 <__divsf3_pse+0x6c>
    4028:	9e 3f       	cpi	r25, 0xFE	; 254
    402a:	51 05       	cpc	r21, r1
    402c:	68 f0       	brcs	.+26     	; 0x4048 <__divsf3_pse+0x82>
    402e:	b6 c0       	rjmp	.+364    	; 0x419c <__fp_inf>
    4030:	00 c1       	rjmp	.+512    	; 0x4232 <__fp_szero>
    4032:	5f 3f       	cpi	r21, 0xFF	; 255
    4034:	ec f3       	brlt	.-6      	; 0x4030 <__divsf3_pse+0x6a>
    4036:	98 3e       	cpi	r25, 0xE8	; 232
    4038:	dc f3       	brlt	.-10     	; 0x4030 <__divsf3_pse+0x6a>
    403a:	86 95       	lsr	r24
    403c:	77 95       	ror	r23
    403e:	67 95       	ror	r22
    4040:	b7 95       	ror	r27
    4042:	f7 95       	ror	r31
    4044:	9f 5f       	subi	r25, 0xFF	; 255
    4046:	c9 f7       	brne	.-14     	; 0x403a <__divsf3_pse+0x74>
    4048:	88 0f       	add	r24, r24
    404a:	91 1d       	adc	r25, r1
    404c:	96 95       	lsr	r25
    404e:	87 95       	ror	r24
    4050:	97 f9       	bld	r25, 7
    4052:	08 95       	ret
    4054:	e1 e0       	ldi	r30, 0x01	; 1
    4056:	66 0f       	add	r22, r22
    4058:	77 1f       	adc	r23, r23
    405a:	88 1f       	adc	r24, r24
    405c:	bb 1f       	adc	r27, r27
    405e:	62 17       	cp	r22, r18
    4060:	73 07       	cpc	r23, r19
    4062:	84 07       	cpc	r24, r20
    4064:	ba 07       	cpc	r27, r26
    4066:	20 f0       	brcs	.+8      	; 0x4070 <__divsf3_pse+0xaa>
    4068:	62 1b       	sub	r22, r18
    406a:	73 0b       	sbc	r23, r19
    406c:	84 0b       	sbc	r24, r20
    406e:	ba 0b       	sbc	r27, r26
    4070:	ee 1f       	adc	r30, r30
    4072:	88 f7       	brcc	.-30     	; 0x4056 <__divsf3_pse+0x90>
    4074:	e0 95       	com	r30
    4076:	08 95       	ret

00004078 <__fixsfsi>:
    4078:	04 d0       	rcall	.+8      	; 0x4082 <__fixunssfsi>
    407a:	68 94       	set
    407c:	b1 11       	cpse	r27, r1
    407e:	d9 c0       	rjmp	.+434    	; 0x4232 <__fp_szero>
    4080:	08 95       	ret

00004082 <__fixunssfsi>:
    4082:	bc d0       	rcall	.+376    	; 0x41fc <__fp_splitA>
    4084:	88 f0       	brcs	.+34     	; 0x40a8 <__fixunssfsi+0x26>
    4086:	9f 57       	subi	r25, 0x7F	; 127
    4088:	90 f0       	brcs	.+36     	; 0x40ae <__fixunssfsi+0x2c>
    408a:	b9 2f       	mov	r27, r25
    408c:	99 27       	eor	r25, r25
    408e:	b7 51       	subi	r27, 0x17	; 23
    4090:	a0 f0       	brcs	.+40     	; 0x40ba <__fixunssfsi+0x38>
    4092:	d1 f0       	breq	.+52     	; 0x40c8 <__fixunssfsi+0x46>
    4094:	66 0f       	add	r22, r22
    4096:	77 1f       	adc	r23, r23
    4098:	88 1f       	adc	r24, r24
    409a:	99 1f       	adc	r25, r25
    409c:	1a f0       	brmi	.+6      	; 0x40a4 <__fixunssfsi+0x22>
    409e:	ba 95       	dec	r27
    40a0:	c9 f7       	brne	.-14     	; 0x4094 <__fixunssfsi+0x12>
    40a2:	12 c0       	rjmp	.+36     	; 0x40c8 <__fixunssfsi+0x46>
    40a4:	b1 30       	cpi	r27, 0x01	; 1
    40a6:	81 f0       	breq	.+32     	; 0x40c8 <__fixunssfsi+0x46>
    40a8:	c3 d0       	rcall	.+390    	; 0x4230 <__fp_zero>
    40aa:	b1 e0       	ldi	r27, 0x01	; 1
    40ac:	08 95       	ret
    40ae:	c0 c0       	rjmp	.+384    	; 0x4230 <__fp_zero>
    40b0:	67 2f       	mov	r22, r23
    40b2:	78 2f       	mov	r23, r24
    40b4:	88 27       	eor	r24, r24
    40b6:	b8 5f       	subi	r27, 0xF8	; 248
    40b8:	39 f0       	breq	.+14     	; 0x40c8 <__fixunssfsi+0x46>
    40ba:	b9 3f       	cpi	r27, 0xF9	; 249
    40bc:	cc f3       	brlt	.-14     	; 0x40b0 <__fixunssfsi+0x2e>
    40be:	86 95       	lsr	r24
    40c0:	77 95       	ror	r23
    40c2:	67 95       	ror	r22
    40c4:	b3 95       	inc	r27
    40c6:	d9 f7       	brne	.-10     	; 0x40be <__fixunssfsi+0x3c>
    40c8:	3e f4       	brtc	.+14     	; 0x40d8 <__fixunssfsi+0x56>
    40ca:	90 95       	com	r25
    40cc:	80 95       	com	r24
    40ce:	70 95       	com	r23
    40d0:	61 95       	neg	r22
    40d2:	7f 4f       	sbci	r23, 0xFF	; 255
    40d4:	8f 4f       	sbci	r24, 0xFF	; 255
    40d6:	9f 4f       	sbci	r25, 0xFF	; 255
    40d8:	08 95       	ret

000040da <__floatunsisf>:
    40da:	e8 94       	clt
    40dc:	09 c0       	rjmp	.+18     	; 0x40f0 <__floatsisf+0x12>

000040de <__floatsisf>:
    40de:	97 fb       	bst	r25, 7
    40e0:	3e f4       	brtc	.+14     	; 0x40f0 <__floatsisf+0x12>
    40e2:	90 95       	com	r25
    40e4:	80 95       	com	r24
    40e6:	70 95       	com	r23
    40e8:	61 95       	neg	r22
    40ea:	7f 4f       	sbci	r23, 0xFF	; 255
    40ec:	8f 4f       	sbci	r24, 0xFF	; 255
    40ee:	9f 4f       	sbci	r25, 0xFF	; 255
    40f0:	99 23       	and	r25, r25
    40f2:	a9 f0       	breq	.+42     	; 0x411e <__floatsisf+0x40>
    40f4:	f9 2f       	mov	r31, r25
    40f6:	96 e9       	ldi	r25, 0x96	; 150
    40f8:	bb 27       	eor	r27, r27
    40fa:	93 95       	inc	r25
    40fc:	f6 95       	lsr	r31
    40fe:	87 95       	ror	r24
    4100:	77 95       	ror	r23
    4102:	67 95       	ror	r22
    4104:	b7 95       	ror	r27
    4106:	f1 11       	cpse	r31, r1
    4108:	f8 cf       	rjmp	.-16     	; 0x40fa <__floatsisf+0x1c>
    410a:	fa f4       	brpl	.+62     	; 0x414a <__floatsisf+0x6c>
    410c:	bb 0f       	add	r27, r27
    410e:	11 f4       	brne	.+4      	; 0x4114 <__floatsisf+0x36>
    4110:	60 ff       	sbrs	r22, 0
    4112:	1b c0       	rjmp	.+54     	; 0x414a <__floatsisf+0x6c>
    4114:	6f 5f       	subi	r22, 0xFF	; 255
    4116:	7f 4f       	sbci	r23, 0xFF	; 255
    4118:	8f 4f       	sbci	r24, 0xFF	; 255
    411a:	9f 4f       	sbci	r25, 0xFF	; 255
    411c:	16 c0       	rjmp	.+44     	; 0x414a <__floatsisf+0x6c>
    411e:	88 23       	and	r24, r24
    4120:	11 f0       	breq	.+4      	; 0x4126 <__floatsisf+0x48>
    4122:	96 e9       	ldi	r25, 0x96	; 150
    4124:	11 c0       	rjmp	.+34     	; 0x4148 <__floatsisf+0x6a>
    4126:	77 23       	and	r23, r23
    4128:	21 f0       	breq	.+8      	; 0x4132 <__floatsisf+0x54>
    412a:	9e e8       	ldi	r25, 0x8E	; 142
    412c:	87 2f       	mov	r24, r23
    412e:	76 2f       	mov	r23, r22
    4130:	05 c0       	rjmp	.+10     	; 0x413c <__floatsisf+0x5e>
    4132:	66 23       	and	r22, r22
    4134:	71 f0       	breq	.+28     	; 0x4152 <__floatsisf+0x74>
    4136:	96 e8       	ldi	r25, 0x86	; 134
    4138:	86 2f       	mov	r24, r22
    413a:	70 e0       	ldi	r23, 0x00	; 0
    413c:	60 e0       	ldi	r22, 0x00	; 0
    413e:	2a f0       	brmi	.+10     	; 0x414a <__floatsisf+0x6c>
    4140:	9a 95       	dec	r25
    4142:	66 0f       	add	r22, r22
    4144:	77 1f       	adc	r23, r23
    4146:	88 1f       	adc	r24, r24
    4148:	da f7       	brpl	.-10     	; 0x4140 <__floatsisf+0x62>
    414a:	88 0f       	add	r24, r24
    414c:	96 95       	lsr	r25
    414e:	87 95       	ror	r24
    4150:	97 f9       	bld	r25, 7
    4152:	08 95       	ret

00004154 <__fp_cmp>:
    4154:	99 0f       	add	r25, r25
    4156:	00 08       	sbc	r0, r0
    4158:	55 0f       	add	r21, r21
    415a:	aa 0b       	sbc	r26, r26
    415c:	e0 e8       	ldi	r30, 0x80	; 128
    415e:	fe ef       	ldi	r31, 0xFE	; 254
    4160:	16 16       	cp	r1, r22
    4162:	17 06       	cpc	r1, r23
    4164:	e8 07       	cpc	r30, r24
    4166:	f9 07       	cpc	r31, r25
    4168:	c0 f0       	brcs	.+48     	; 0x419a <__fp_cmp+0x46>
    416a:	12 16       	cp	r1, r18
    416c:	13 06       	cpc	r1, r19
    416e:	e4 07       	cpc	r30, r20
    4170:	f5 07       	cpc	r31, r21
    4172:	98 f0       	brcs	.+38     	; 0x419a <__fp_cmp+0x46>
    4174:	62 1b       	sub	r22, r18
    4176:	73 0b       	sbc	r23, r19
    4178:	84 0b       	sbc	r24, r20
    417a:	95 0b       	sbc	r25, r21
    417c:	39 f4       	brne	.+14     	; 0x418c <__fp_cmp+0x38>
    417e:	0a 26       	eor	r0, r26
    4180:	61 f0       	breq	.+24     	; 0x419a <__fp_cmp+0x46>
    4182:	23 2b       	or	r18, r19
    4184:	24 2b       	or	r18, r20
    4186:	25 2b       	or	r18, r21
    4188:	21 f4       	brne	.+8      	; 0x4192 <__fp_cmp+0x3e>
    418a:	08 95       	ret
    418c:	0a 26       	eor	r0, r26
    418e:	09 f4       	brne	.+2      	; 0x4192 <__fp_cmp+0x3e>
    4190:	a1 40       	sbci	r26, 0x01	; 1
    4192:	a6 95       	lsr	r26
    4194:	8f ef       	ldi	r24, 0xFF	; 255
    4196:	81 1d       	adc	r24, r1
    4198:	81 1d       	adc	r24, r1
    419a:	08 95       	ret

0000419c <__fp_inf>:
    419c:	97 f9       	bld	r25, 7
    419e:	9f 67       	ori	r25, 0x7F	; 127
    41a0:	80 e8       	ldi	r24, 0x80	; 128
    41a2:	70 e0       	ldi	r23, 0x00	; 0
    41a4:	60 e0       	ldi	r22, 0x00	; 0
    41a6:	08 95       	ret

000041a8 <__fp_nan>:
    41a8:	9f ef       	ldi	r25, 0xFF	; 255
    41aa:	80 ec       	ldi	r24, 0xC0	; 192
    41ac:	08 95       	ret

000041ae <__fp_pscA>:
    41ae:	00 24       	eor	r0, r0
    41b0:	0a 94       	dec	r0
    41b2:	16 16       	cp	r1, r22
    41b4:	17 06       	cpc	r1, r23
    41b6:	18 06       	cpc	r1, r24
    41b8:	09 06       	cpc	r0, r25
    41ba:	08 95       	ret

000041bc <__fp_pscB>:
    41bc:	00 24       	eor	r0, r0
    41be:	0a 94       	dec	r0
    41c0:	12 16       	cp	r1, r18
    41c2:	13 06       	cpc	r1, r19
    41c4:	14 06       	cpc	r1, r20
    41c6:	05 06       	cpc	r0, r21
    41c8:	08 95       	ret

000041ca <__fp_round>:
    41ca:	09 2e       	mov	r0, r25
    41cc:	03 94       	inc	r0
    41ce:	00 0c       	add	r0, r0
    41d0:	11 f4       	brne	.+4      	; 0x41d6 <__fp_round+0xc>
    41d2:	88 23       	and	r24, r24
    41d4:	52 f0       	brmi	.+20     	; 0x41ea <__fp_round+0x20>
    41d6:	bb 0f       	add	r27, r27
    41d8:	40 f4       	brcc	.+16     	; 0x41ea <__fp_round+0x20>
    41da:	bf 2b       	or	r27, r31
    41dc:	11 f4       	brne	.+4      	; 0x41e2 <__fp_round+0x18>
    41de:	60 ff       	sbrs	r22, 0
    41e0:	04 c0       	rjmp	.+8      	; 0x41ea <__fp_round+0x20>
    41e2:	6f 5f       	subi	r22, 0xFF	; 255
    41e4:	7f 4f       	sbci	r23, 0xFF	; 255
    41e6:	8f 4f       	sbci	r24, 0xFF	; 255
    41e8:	9f 4f       	sbci	r25, 0xFF	; 255
    41ea:	08 95       	ret

000041ec <__fp_split3>:
    41ec:	57 fd       	sbrc	r21, 7
    41ee:	90 58       	subi	r25, 0x80	; 128
    41f0:	44 0f       	add	r20, r20
    41f2:	55 1f       	adc	r21, r21
    41f4:	59 f0       	breq	.+22     	; 0x420c <__fp_splitA+0x10>
    41f6:	5f 3f       	cpi	r21, 0xFF	; 255
    41f8:	71 f0       	breq	.+28     	; 0x4216 <__fp_splitA+0x1a>
    41fa:	47 95       	ror	r20

000041fc <__fp_splitA>:
    41fc:	88 0f       	add	r24, r24
    41fe:	97 fb       	bst	r25, 7
    4200:	99 1f       	adc	r25, r25
    4202:	61 f0       	breq	.+24     	; 0x421c <__fp_splitA+0x20>
    4204:	9f 3f       	cpi	r25, 0xFF	; 255
    4206:	79 f0       	breq	.+30     	; 0x4226 <__fp_splitA+0x2a>
    4208:	87 95       	ror	r24
    420a:	08 95       	ret
    420c:	12 16       	cp	r1, r18
    420e:	13 06       	cpc	r1, r19
    4210:	14 06       	cpc	r1, r20
    4212:	55 1f       	adc	r21, r21
    4214:	f2 cf       	rjmp	.-28     	; 0x41fa <__fp_split3+0xe>
    4216:	46 95       	lsr	r20
    4218:	f1 df       	rcall	.-30     	; 0x41fc <__fp_splitA>
    421a:	08 c0       	rjmp	.+16     	; 0x422c <__fp_splitA+0x30>
    421c:	16 16       	cp	r1, r22
    421e:	17 06       	cpc	r1, r23
    4220:	18 06       	cpc	r1, r24
    4222:	99 1f       	adc	r25, r25
    4224:	f1 cf       	rjmp	.-30     	; 0x4208 <__fp_splitA+0xc>
    4226:	86 95       	lsr	r24
    4228:	71 05       	cpc	r23, r1
    422a:	61 05       	cpc	r22, r1
    422c:	08 94       	sec
    422e:	08 95       	ret

00004230 <__fp_zero>:
    4230:	e8 94       	clt

00004232 <__fp_szero>:
    4232:	bb 27       	eor	r27, r27
    4234:	66 27       	eor	r22, r22
    4236:	77 27       	eor	r23, r23
    4238:	cb 01       	movw	r24, r22
    423a:	97 f9       	bld	r25, 7
    423c:	08 95       	ret

0000423e <__gesf2>:
    423e:	8a df       	rcall	.-236    	; 0x4154 <__fp_cmp>
    4240:	08 f4       	brcc	.+2      	; 0x4244 <__gesf2+0x6>
    4242:	8f ef       	ldi	r24, 0xFF	; 255
    4244:	08 95       	ret

00004246 <lrint>:
    4246:	da df       	rcall	.-76     	; 0x41fc <__fp_splitA>
    4248:	a8 f1       	brcs	.+106    	; 0x42b4 <lrint+0x6e>
    424a:	9e 57       	subi	r25, 0x7E	; 126
    424c:	a8 f1       	brcs	.+106    	; 0x42b8 <lrint+0x72>
    424e:	98 51       	subi	r25, 0x18	; 24
    4250:	60 f0       	brcs	.+24     	; 0x426a <lrint+0x24>
    4252:	39 f1       	breq	.+78     	; 0x42a2 <lrint+0x5c>
    4254:	98 30       	cpi	r25, 0x08	; 8
    4256:	70 f5       	brcc	.+92     	; 0x42b4 <lrint+0x6e>
    4258:	09 2e       	mov	r0, r25
    425a:	99 27       	eor	r25, r25
    425c:	66 0f       	add	r22, r22
    425e:	77 1f       	adc	r23, r23
    4260:	88 1f       	adc	r24, r24
    4262:	99 1f       	adc	r25, r25
    4264:	0a 94       	dec	r0
    4266:	d1 f7       	brne	.-12     	; 0x425c <lrint+0x16>
    4268:	1c c0       	rjmp	.+56     	; 0x42a2 <lrint+0x5c>
    426a:	bb 27       	eor	r27, r27
    426c:	99 3f       	cpi	r25, 0xF9	; 249
    426e:	4c f4       	brge	.+18     	; 0x4282 <lrint+0x3c>
    4270:	b1 11       	cpse	r27, r1
    4272:	b1 e0       	ldi	r27, 0x01	; 1
    4274:	b6 2b       	or	r27, r22
    4276:	67 2f       	mov	r22, r23
    4278:	78 2f       	mov	r23, r24
    427a:	88 27       	eor	r24, r24
    427c:	98 5f       	subi	r25, 0xF8	; 248
    427e:	b1 f7       	brne	.-20     	; 0x426c <lrint+0x26>
    4280:	08 c0       	rjmp	.+16     	; 0x4292 <lrint+0x4c>
    4282:	86 95       	lsr	r24
    4284:	77 95       	ror	r23
    4286:	67 95       	ror	r22
    4288:	b7 95       	ror	r27
    428a:	08 f4       	brcc	.+2      	; 0x428e <lrint+0x48>
    428c:	b1 60       	ori	r27, 0x01	; 1
    428e:	93 95       	inc	r25
    4290:	c1 f7       	brne	.-16     	; 0x4282 <lrint+0x3c>
    4292:	bb 0f       	add	r27, r27
    4294:	30 f4       	brcc	.+12     	; 0x42a2 <lrint+0x5c>
    4296:	11 f4       	brne	.+4      	; 0x429c <lrint+0x56>
    4298:	60 ff       	sbrs	r22, 0
    429a:	03 c0       	rjmp	.+6      	; 0x42a2 <lrint+0x5c>
    429c:	6f 5f       	subi	r22, 0xFF	; 255
    429e:	7f 4f       	sbci	r23, 0xFF	; 255
    42a0:	8f 4f       	sbci	r24, 0xFF	; 255
    42a2:	3e f4       	brtc	.+14     	; 0x42b2 <lrint+0x6c>
    42a4:	90 95       	com	r25
    42a6:	80 95       	com	r24
    42a8:	70 95       	com	r23
    42aa:	61 95       	neg	r22
    42ac:	7f 4f       	sbci	r23, 0xFF	; 255
    42ae:	8f 4f       	sbci	r24, 0xFF	; 255
    42b0:	9f 4f       	sbci	r25, 0xFF	; 255
    42b2:	08 95       	ret
    42b4:	68 94       	set
    42b6:	bd cf       	rjmp	.-134    	; 0x4232 <__fp_szero>
    42b8:	bb cf       	rjmp	.-138    	; 0x4230 <__fp_zero>

000042ba <__mulsf3>:
    42ba:	0b d0       	rcall	.+22     	; 0x42d2 <__mulsf3x>
    42bc:	86 cf       	rjmp	.-244    	; 0x41ca <__fp_round>
    42be:	77 df       	rcall	.-274    	; 0x41ae <__fp_pscA>
    42c0:	28 f0       	brcs	.+10     	; 0x42cc <__mulsf3+0x12>
    42c2:	7c df       	rcall	.-264    	; 0x41bc <__fp_pscB>
    42c4:	18 f0       	brcs	.+6      	; 0x42cc <__mulsf3+0x12>
    42c6:	95 23       	and	r25, r21
    42c8:	09 f0       	breq	.+2      	; 0x42cc <__mulsf3+0x12>
    42ca:	68 cf       	rjmp	.-304    	; 0x419c <__fp_inf>
    42cc:	6d cf       	rjmp	.-294    	; 0x41a8 <__fp_nan>
    42ce:	11 24       	eor	r1, r1
    42d0:	b0 cf       	rjmp	.-160    	; 0x4232 <__fp_szero>

000042d2 <__mulsf3x>:
    42d2:	8c df       	rcall	.-232    	; 0x41ec <__fp_split3>
    42d4:	a0 f3       	brcs	.-24     	; 0x42be <__mulsf3+0x4>

000042d6 <__mulsf3_pse>:
    42d6:	95 9f       	mul	r25, r21
    42d8:	d1 f3       	breq	.-12     	; 0x42ce <__mulsf3+0x14>
    42da:	95 0f       	add	r25, r21
    42dc:	50 e0       	ldi	r21, 0x00	; 0
    42de:	55 1f       	adc	r21, r21
    42e0:	62 9f       	mul	r22, r18
    42e2:	f0 01       	movw	r30, r0
    42e4:	72 9f       	mul	r23, r18
    42e6:	bb 27       	eor	r27, r27
    42e8:	f0 0d       	add	r31, r0
    42ea:	b1 1d       	adc	r27, r1
    42ec:	63 9f       	mul	r22, r19
    42ee:	aa 27       	eor	r26, r26
    42f0:	f0 0d       	add	r31, r0
    42f2:	b1 1d       	adc	r27, r1
    42f4:	aa 1f       	adc	r26, r26
    42f6:	64 9f       	mul	r22, r20
    42f8:	66 27       	eor	r22, r22
    42fa:	b0 0d       	add	r27, r0
    42fc:	a1 1d       	adc	r26, r1
    42fe:	66 1f       	adc	r22, r22
    4300:	82 9f       	mul	r24, r18
    4302:	22 27       	eor	r18, r18
    4304:	b0 0d       	add	r27, r0
    4306:	a1 1d       	adc	r26, r1
    4308:	62 1f       	adc	r22, r18
    430a:	73 9f       	mul	r23, r19
    430c:	b0 0d       	add	r27, r0
    430e:	a1 1d       	adc	r26, r1
    4310:	62 1f       	adc	r22, r18
    4312:	83 9f       	mul	r24, r19
    4314:	a0 0d       	add	r26, r0
    4316:	61 1d       	adc	r22, r1
    4318:	22 1f       	adc	r18, r18
    431a:	74 9f       	mul	r23, r20
    431c:	33 27       	eor	r19, r19
    431e:	a0 0d       	add	r26, r0
    4320:	61 1d       	adc	r22, r1
    4322:	23 1f       	adc	r18, r19
    4324:	84 9f       	mul	r24, r20
    4326:	60 0d       	add	r22, r0
    4328:	21 1d       	adc	r18, r1
    432a:	82 2f       	mov	r24, r18
    432c:	76 2f       	mov	r23, r22
    432e:	6a 2f       	mov	r22, r26
    4330:	11 24       	eor	r1, r1
    4332:	9f 57       	subi	r25, 0x7F	; 127
    4334:	50 40       	sbci	r21, 0x00	; 0
    4336:	8a f0       	brmi	.+34     	; 0x435a <__mulsf3_pse+0x84>
    4338:	e1 f0       	breq	.+56     	; 0x4372 <__mulsf3_pse+0x9c>
    433a:	88 23       	and	r24, r24
    433c:	4a f0       	brmi	.+18     	; 0x4350 <__mulsf3_pse+0x7a>
    433e:	ee 0f       	add	r30, r30
    4340:	ff 1f       	adc	r31, r31
    4342:	bb 1f       	adc	r27, r27
    4344:	66 1f       	adc	r22, r22
    4346:	77 1f       	adc	r23, r23
    4348:	88 1f       	adc	r24, r24
    434a:	91 50       	subi	r25, 0x01	; 1
    434c:	50 40       	sbci	r21, 0x00	; 0
    434e:	a9 f7       	brne	.-22     	; 0x433a <__mulsf3_pse+0x64>
    4350:	9e 3f       	cpi	r25, 0xFE	; 254
    4352:	51 05       	cpc	r21, r1
    4354:	70 f0       	brcs	.+28     	; 0x4372 <__mulsf3_pse+0x9c>
    4356:	22 cf       	rjmp	.-444    	; 0x419c <__fp_inf>
    4358:	6c cf       	rjmp	.-296    	; 0x4232 <__fp_szero>
    435a:	5f 3f       	cpi	r21, 0xFF	; 255
    435c:	ec f3       	brlt	.-6      	; 0x4358 <__mulsf3_pse+0x82>
    435e:	98 3e       	cpi	r25, 0xE8	; 232
    4360:	dc f3       	brlt	.-10     	; 0x4358 <__mulsf3_pse+0x82>
    4362:	86 95       	lsr	r24
    4364:	77 95       	ror	r23
    4366:	67 95       	ror	r22
    4368:	b7 95       	ror	r27
    436a:	f7 95       	ror	r31
    436c:	e7 95       	ror	r30
    436e:	9f 5f       	subi	r25, 0xFF	; 255
    4370:	c1 f7       	brne	.-16     	; 0x4362 <__mulsf3_pse+0x8c>
    4372:	fe 2b       	or	r31, r30
    4374:	88 0f       	add	r24, r24
    4376:	91 1d       	adc	r25, r1
    4378:	96 95       	lsr	r25
    437a:	87 95       	ror	r24
    437c:	97 f9       	bld	r25, 7
    437e:	08 95       	ret

00004380 <pow>:
    4380:	fa 01       	movw	r30, r20
    4382:	ee 0f       	add	r30, r30
    4384:	ff 1f       	adc	r31, r31
    4386:	30 96       	adiw	r30, 0x00	; 0
    4388:	21 05       	cpc	r18, r1
    438a:	31 05       	cpc	r19, r1
    438c:	99 f1       	breq	.+102    	; 0x43f4 <pow+0x74>
    438e:	61 15       	cp	r22, r1
    4390:	71 05       	cpc	r23, r1
    4392:	61 f4       	brne	.+24     	; 0x43ac <pow+0x2c>
    4394:	80 38       	cpi	r24, 0x80	; 128
    4396:	bf e3       	ldi	r27, 0x3F	; 63
    4398:	9b 07       	cpc	r25, r27
    439a:	49 f1       	breq	.+82     	; 0x43ee <pow+0x6e>
    439c:	68 94       	set
    439e:	90 38       	cpi	r25, 0x80	; 128
    43a0:	81 05       	cpc	r24, r1
    43a2:	61 f0       	breq	.+24     	; 0x43bc <pow+0x3c>
    43a4:	80 38       	cpi	r24, 0x80	; 128
    43a6:	bf ef       	ldi	r27, 0xFF	; 255
    43a8:	9b 07       	cpc	r25, r27
    43aa:	41 f0       	breq	.+16     	; 0x43bc <pow+0x3c>
    43ac:	99 23       	and	r25, r25
    43ae:	42 f5       	brpl	.+80     	; 0x4400 <pow+0x80>
    43b0:	ff 3f       	cpi	r31, 0xFF	; 255
    43b2:	e1 05       	cpc	r30, r1
    43b4:	31 05       	cpc	r19, r1
    43b6:	21 05       	cpc	r18, r1
    43b8:	11 f1       	breq	.+68     	; 0x43fe <pow+0x7e>
    43ba:	e8 94       	clt
    43bc:	08 94       	sec
    43be:	e7 95       	ror	r30
    43c0:	d9 01       	movw	r26, r18
    43c2:	aa 23       	and	r26, r26
    43c4:	29 f4       	brne	.+10     	; 0x43d0 <pow+0x50>
    43c6:	ab 2f       	mov	r26, r27
    43c8:	be 2f       	mov	r27, r30
    43ca:	f8 5f       	subi	r31, 0xF8	; 248
    43cc:	d0 f3       	brcs	.-12     	; 0x43c2 <pow+0x42>
    43ce:	10 c0       	rjmp	.+32     	; 0x43f0 <pow+0x70>
    43d0:	ff 5f       	subi	r31, 0xFF	; 255
    43d2:	70 f4       	brcc	.+28     	; 0x43f0 <pow+0x70>
    43d4:	a6 95       	lsr	r26
    43d6:	e0 f7       	brcc	.-8      	; 0x43d0 <pow+0x50>
    43d8:	f7 39       	cpi	r31, 0x97	; 151
    43da:	50 f0       	brcs	.+20     	; 0x43f0 <pow+0x70>
    43dc:	19 f0       	breq	.+6      	; 0x43e4 <pow+0x64>
    43de:	ff 3a       	cpi	r31, 0xAF	; 175
    43e0:	38 f4       	brcc	.+14     	; 0x43f0 <pow+0x70>
    43e2:	9f 77       	andi	r25, 0x7F	; 127
    43e4:	9f 93       	push	r25
    43e6:	0c d0       	rcall	.+24     	; 0x4400 <pow+0x80>
    43e8:	0f 90       	pop	r0
    43ea:	07 fc       	sbrc	r0, 7
    43ec:	90 58       	subi	r25, 0x80	; 128
    43ee:	08 95       	ret
    43f0:	3e f0       	brts	.+14     	; 0x4400 <pow+0x80>
    43f2:	da ce       	rjmp	.-588    	; 0x41a8 <__fp_nan>
    43f4:	60 e0       	ldi	r22, 0x00	; 0
    43f6:	70 e0       	ldi	r23, 0x00	; 0
    43f8:	80 e8       	ldi	r24, 0x80	; 128
    43fa:	9f e3       	ldi	r25, 0x3F	; 63
    43fc:	08 95       	ret
    43fe:	4f e7       	ldi	r20, 0x7F	; 127
    4400:	9f 77       	andi	r25, 0x7F	; 127
    4402:	5f 93       	push	r21
    4404:	4f 93       	push	r20
    4406:	3f 93       	push	r19
    4408:	2f 93       	push	r18
    440a:	9e d0       	rcall	.+316    	; 0x4548 <log>
    440c:	2f 91       	pop	r18
    440e:	3f 91       	pop	r19
    4410:	4f 91       	pop	r20
    4412:	5f 91       	pop	r21
    4414:	52 df       	rcall	.-348    	; 0x42ba <__mulsf3>
    4416:	05 c0       	rjmp	.+10     	; 0x4422 <exp>
    4418:	19 f4       	brne	.+6      	; 0x4420 <pow+0xa0>
    441a:	0e f0       	brts	.+2      	; 0x441e <pow+0x9e>
    441c:	bf ce       	rjmp	.-642    	; 0x419c <__fp_inf>
    441e:	08 cf       	rjmp	.-496    	; 0x4230 <__fp_zero>
    4420:	c3 ce       	rjmp	.-634    	; 0x41a8 <__fp_nan>

00004422 <exp>:
    4422:	ec de       	rcall	.-552    	; 0x41fc <__fp_splitA>
    4424:	c8 f3       	brcs	.-14     	; 0x4418 <pow+0x98>
    4426:	96 38       	cpi	r25, 0x86	; 134
    4428:	c0 f7       	brcc	.-16     	; 0x441a <pow+0x9a>
    442a:	07 f8       	bld	r0, 7
    442c:	0f 92       	push	r0
    442e:	e8 94       	clt
    4430:	2b e3       	ldi	r18, 0x3B	; 59
    4432:	3a ea       	ldi	r19, 0xAA	; 170
    4434:	48 eb       	ldi	r20, 0xB8	; 184
    4436:	5f e7       	ldi	r21, 0x7F	; 127
    4438:	4e df       	rcall	.-356    	; 0x42d6 <__mulsf3_pse>
    443a:	0f 92       	push	r0
    443c:	0f 92       	push	r0
    443e:	0f 92       	push	r0
    4440:	4d b7       	in	r20, 0x3d	; 61
    4442:	5e b7       	in	r21, 0x3e	; 62
    4444:	0f 92       	push	r0
    4446:	c0 d0       	rcall	.+384    	; 0x45c8 <modf>
    4448:	e8 ec       	ldi	r30, 0xC8	; 200
    444a:	f0 e0       	ldi	r31, 0x00	; 0
    444c:	16 d0       	rcall	.+44     	; 0x447a <__fp_powser>
    444e:	4f 91       	pop	r20
    4450:	5f 91       	pop	r21
    4452:	ef 91       	pop	r30
    4454:	ff 91       	pop	r31
    4456:	e5 95       	asr	r30
    4458:	ee 1f       	adc	r30, r30
    445a:	ff 1f       	adc	r31, r31
    445c:	49 f0       	breq	.+18     	; 0x4470 <exp+0x4e>
    445e:	fe 57       	subi	r31, 0x7E	; 126
    4460:	e0 68       	ori	r30, 0x80	; 128
    4462:	44 27       	eor	r20, r20
    4464:	ee 0f       	add	r30, r30
    4466:	44 1f       	adc	r20, r20
    4468:	fa 95       	dec	r31
    446a:	e1 f7       	brne	.-8      	; 0x4464 <exp+0x42>
    446c:	41 95       	neg	r20
    446e:	55 0b       	sbc	r21, r21
    4470:	32 d0       	rcall	.+100    	; 0x44d6 <ldexp>
    4472:	0f 90       	pop	r0
    4474:	07 fe       	sbrs	r0, 7
    4476:	26 c0       	rjmp	.+76     	; 0x44c4 <inverse>
    4478:	08 95       	ret

0000447a <__fp_powser>:
    447a:	df 93       	push	r29
    447c:	cf 93       	push	r28
    447e:	1f 93       	push	r17
    4480:	0f 93       	push	r16
    4482:	ff 92       	push	r15
    4484:	ef 92       	push	r14
    4486:	df 92       	push	r13
    4488:	7b 01       	movw	r14, r22
    448a:	8c 01       	movw	r16, r24
    448c:	68 94       	set
    448e:	05 c0       	rjmp	.+10     	; 0x449a <__fp_powser+0x20>
    4490:	da 2e       	mov	r13, r26
    4492:	ef 01       	movw	r28, r30
    4494:	1e df       	rcall	.-452    	; 0x42d2 <__mulsf3x>
    4496:	fe 01       	movw	r30, r28
    4498:	e8 94       	clt
    449a:	a5 91       	lpm	r26, Z+
    449c:	25 91       	lpm	r18, Z+
    449e:	35 91       	lpm	r19, Z+
    44a0:	45 91       	lpm	r20, Z+
    44a2:	55 91       	lpm	r21, Z+
    44a4:	ae f3       	brts	.-22     	; 0x4490 <__fp_powser+0x16>
    44a6:	ef 01       	movw	r28, r30
    44a8:	28 dd       	rcall	.-1456   	; 0x3efa <__addsf3x>
    44aa:	fe 01       	movw	r30, r28
    44ac:	97 01       	movw	r18, r14
    44ae:	a8 01       	movw	r20, r16
    44b0:	da 94       	dec	r13
    44b2:	79 f7       	brne	.-34     	; 0x4492 <__fp_powser+0x18>
    44b4:	df 90       	pop	r13
    44b6:	ef 90       	pop	r14
    44b8:	ff 90       	pop	r15
    44ba:	0f 91       	pop	r16
    44bc:	1f 91       	pop	r17
    44be:	cf 91       	pop	r28
    44c0:	df 91       	pop	r29
    44c2:	08 95       	ret

000044c4 <inverse>:
    44c4:	9b 01       	movw	r18, r22
    44c6:	ac 01       	movw	r20, r24
    44c8:	60 e0       	ldi	r22, 0x00	; 0
    44ca:	70 e0       	ldi	r23, 0x00	; 0
    44cc:	80 e8       	ldi	r24, 0x80	; 128
    44ce:	9f e3       	ldi	r25, 0x3F	; 63
    44d0:	6b cd       	rjmp	.-1322   	; 0x3fa8 <__divsf3>
    44d2:	64 ce       	rjmp	.-824    	; 0x419c <__fp_inf>
    44d4:	ac c0       	rjmp	.+344    	; 0x462e <__fp_mpack>

000044d6 <ldexp>:
    44d6:	92 de       	rcall	.-732    	; 0x41fc <__fp_splitA>
    44d8:	e8 f3       	brcs	.-6      	; 0x44d4 <inverse+0x10>
    44da:	99 23       	and	r25, r25
    44dc:	d9 f3       	breq	.-10     	; 0x44d4 <inverse+0x10>
    44de:	94 0f       	add	r25, r20
    44e0:	51 1d       	adc	r21, r1
    44e2:	bb f3       	brvs	.-18     	; 0x44d2 <inverse+0xe>
    44e4:	91 50       	subi	r25, 0x01	; 1
    44e6:	50 40       	sbci	r21, 0x00	; 0
    44e8:	94 f0       	brlt	.+36     	; 0x450e <ldexp+0x38>
    44ea:	59 f0       	breq	.+22     	; 0x4502 <ldexp+0x2c>
    44ec:	88 23       	and	r24, r24
    44ee:	32 f0       	brmi	.+12     	; 0x44fc <ldexp+0x26>
    44f0:	66 0f       	add	r22, r22
    44f2:	77 1f       	adc	r23, r23
    44f4:	88 1f       	adc	r24, r24
    44f6:	91 50       	subi	r25, 0x01	; 1
    44f8:	50 40       	sbci	r21, 0x00	; 0
    44fa:	c1 f7       	brne	.-16     	; 0x44ec <ldexp+0x16>
    44fc:	9e 3f       	cpi	r25, 0xFE	; 254
    44fe:	51 05       	cpc	r21, r1
    4500:	44 f7       	brge	.-48     	; 0x44d2 <inverse+0xe>
    4502:	88 0f       	add	r24, r24
    4504:	91 1d       	adc	r25, r1
    4506:	96 95       	lsr	r25
    4508:	87 95       	ror	r24
    450a:	97 f9       	bld	r25, 7
    450c:	08 95       	ret
    450e:	5f 3f       	cpi	r21, 0xFF	; 255
    4510:	ac f0       	brlt	.+42     	; 0x453c <ldexp+0x66>
    4512:	98 3e       	cpi	r25, 0xE8	; 232
    4514:	9c f0       	brlt	.+38     	; 0x453c <ldexp+0x66>
    4516:	bb 27       	eor	r27, r27
    4518:	86 95       	lsr	r24
    451a:	77 95       	ror	r23
    451c:	67 95       	ror	r22
    451e:	b7 95       	ror	r27
    4520:	08 f4       	brcc	.+2      	; 0x4524 <ldexp+0x4e>
    4522:	b1 60       	ori	r27, 0x01	; 1
    4524:	93 95       	inc	r25
    4526:	c1 f7       	brne	.-16     	; 0x4518 <ldexp+0x42>
    4528:	bb 0f       	add	r27, r27
    452a:	58 f7       	brcc	.-42     	; 0x4502 <ldexp+0x2c>
    452c:	11 f4       	brne	.+4      	; 0x4532 <ldexp+0x5c>
    452e:	60 ff       	sbrs	r22, 0
    4530:	e8 cf       	rjmp	.-48     	; 0x4502 <ldexp+0x2c>
    4532:	6f 5f       	subi	r22, 0xFF	; 255
    4534:	7f 4f       	sbci	r23, 0xFF	; 255
    4536:	8f 4f       	sbci	r24, 0xFF	; 255
    4538:	9f 4f       	sbci	r25, 0xFF	; 255
    453a:	e3 cf       	rjmp	.-58     	; 0x4502 <ldexp+0x2c>
    453c:	7a ce       	rjmp	.-780    	; 0x4232 <__fp_szero>
    453e:	0e f0       	brts	.+2      	; 0x4542 <ldexp+0x6c>
    4540:	76 c0       	rjmp	.+236    	; 0x462e <__fp_mpack>
    4542:	32 ce       	rjmp	.-924    	; 0x41a8 <__fp_nan>
    4544:	68 94       	set
    4546:	2a ce       	rjmp	.-940    	; 0x419c <__fp_inf>

00004548 <log>:
    4548:	59 de       	rcall	.-846    	; 0x41fc <__fp_splitA>
    454a:	c8 f3       	brcs	.-14     	; 0x453e <ldexp+0x68>
    454c:	99 23       	and	r25, r25
    454e:	d1 f3       	breq	.-12     	; 0x4544 <ldexp+0x6e>
    4550:	c6 f3       	brts	.-16     	; 0x4542 <ldexp+0x6c>
    4552:	df 93       	push	r29
    4554:	cf 93       	push	r28
    4556:	1f 93       	push	r17
    4558:	0f 93       	push	r16
    455a:	ff 92       	push	r15
    455c:	c9 2f       	mov	r28, r25
    455e:	dd 27       	eor	r29, r29
    4560:	88 23       	and	r24, r24
    4562:	2a f0       	brmi	.+10     	; 0x456e <log+0x26>
    4564:	21 97       	sbiw	r28, 0x01	; 1
    4566:	66 0f       	add	r22, r22
    4568:	77 1f       	adc	r23, r23
    456a:	88 1f       	adc	r24, r24
    456c:	da f7       	brpl	.-10     	; 0x4564 <log+0x1c>
    456e:	20 e0       	ldi	r18, 0x00	; 0
    4570:	30 e0       	ldi	r19, 0x00	; 0
    4572:	40 e8       	ldi	r20, 0x80	; 128
    4574:	5f eb       	ldi	r21, 0xBF	; 191
    4576:	9f e3       	ldi	r25, 0x3F	; 63
    4578:	88 39       	cpi	r24, 0x98	; 152
    457a:	20 f0       	brcs	.+8      	; 0x4584 <log+0x3c>
    457c:	80 3e       	cpi	r24, 0xE0	; 224
    457e:	30 f0       	brcs	.+12     	; 0x458c <log+0x44>
    4580:	21 96       	adiw	r28, 0x01	; 1
    4582:	8f 77       	andi	r24, 0x7F	; 127
    4584:	a9 dc       	rcall	.-1710   	; 0x3ed8 <__addsf3>
    4586:	e0 ef       	ldi	r30, 0xF0	; 240
    4588:	f0 e0       	ldi	r31, 0x00	; 0
    458a:	03 c0       	rjmp	.+6      	; 0x4592 <log+0x4a>
    458c:	a5 dc       	rcall	.-1718   	; 0x3ed8 <__addsf3>
    458e:	ed e1       	ldi	r30, 0x1D	; 29
    4590:	f1 e0       	ldi	r31, 0x01	; 1
    4592:	73 df       	rcall	.-282    	; 0x447a <__fp_powser>
    4594:	8b 01       	movw	r16, r22
    4596:	be 01       	movw	r22, r28
    4598:	ec 01       	movw	r28, r24
    459a:	fb 2e       	mov	r15, r27
    459c:	6f 57       	subi	r22, 0x7F	; 127
    459e:	71 09       	sbc	r23, r1
    45a0:	75 95       	asr	r23
    45a2:	77 1f       	adc	r23, r23
    45a4:	88 0b       	sbc	r24, r24
    45a6:	99 0b       	sbc	r25, r25
    45a8:	9a dd       	rcall	.-1228   	; 0x40de <__floatsisf>
    45aa:	28 e1       	ldi	r18, 0x18	; 24
    45ac:	32 e7       	ldi	r19, 0x72	; 114
    45ae:	41 e3       	ldi	r20, 0x31	; 49
    45b0:	5f e3       	ldi	r21, 0x3F	; 63
    45b2:	8f de       	rcall	.-738    	; 0x42d2 <__mulsf3x>
    45b4:	af 2d       	mov	r26, r15
    45b6:	98 01       	movw	r18, r16
    45b8:	ae 01       	movw	r20, r28
    45ba:	ff 90       	pop	r15
    45bc:	0f 91       	pop	r16
    45be:	1f 91       	pop	r17
    45c0:	cf 91       	pop	r28
    45c2:	df 91       	pop	r29
    45c4:	9a dc       	rcall	.-1740   	; 0x3efa <__addsf3x>
    45c6:	01 ce       	rjmp	.-1022   	; 0x41ca <__fp_round>

000045c8 <modf>:
    45c8:	fa 01       	movw	r30, r20
    45ca:	dc 01       	movw	r26, r24
    45cc:	aa 0f       	add	r26, r26
    45ce:	bb 1f       	adc	r27, r27
    45d0:	9b 01       	movw	r18, r22
    45d2:	ac 01       	movw	r20, r24
    45d4:	bf 57       	subi	r27, 0x7F	; 127
    45d6:	28 f4       	brcc	.+10     	; 0x45e2 <modf+0x1a>
    45d8:	22 27       	eor	r18, r18
    45da:	33 27       	eor	r19, r19
    45dc:	44 27       	eor	r20, r20
    45de:	50 78       	andi	r21, 0x80	; 128
    45e0:	1f c0       	rjmp	.+62     	; 0x4620 <modf+0x58>
    45e2:	b7 51       	subi	r27, 0x17	; 23
    45e4:	88 f4       	brcc	.+34     	; 0x4608 <modf+0x40>
    45e6:	ab 2f       	mov	r26, r27
    45e8:	00 24       	eor	r0, r0
    45ea:	46 95       	lsr	r20
    45ec:	37 95       	ror	r19
    45ee:	27 95       	ror	r18
    45f0:	01 1c       	adc	r0, r1
    45f2:	a3 95       	inc	r26
    45f4:	d2 f3       	brmi	.-12     	; 0x45ea <modf+0x22>
    45f6:	00 20       	and	r0, r0
    45f8:	69 f0       	breq	.+26     	; 0x4614 <modf+0x4c>
    45fa:	22 0f       	add	r18, r18
    45fc:	33 1f       	adc	r19, r19
    45fe:	44 1f       	adc	r20, r20
    4600:	b3 95       	inc	r27
    4602:	da f3       	brmi	.-10     	; 0x45fa <modf+0x32>
    4604:	0d d0       	rcall	.+26     	; 0x4620 <modf+0x58>
    4606:	67 cc       	rjmp	.-1842   	; 0x3ed6 <__subsf3>
    4608:	61 30       	cpi	r22, 0x01	; 1
    460a:	71 05       	cpc	r23, r1
    460c:	a0 e8       	ldi	r26, 0x80	; 128
    460e:	8a 07       	cpc	r24, r26
    4610:	b9 46       	sbci	r27, 0x69	; 105
    4612:	30 f4       	brcc	.+12     	; 0x4620 <modf+0x58>
    4614:	9b 01       	movw	r18, r22
    4616:	ac 01       	movw	r20, r24
    4618:	66 27       	eor	r22, r22
    461a:	77 27       	eor	r23, r23
    461c:	88 27       	eor	r24, r24
    461e:	90 78       	andi	r25, 0x80	; 128
    4620:	30 96       	adiw	r30, 0x00	; 0
    4622:	21 f0       	breq	.+8      	; 0x462c <modf+0x64>
    4624:	20 83       	st	Z, r18
    4626:	31 83       	std	Z+1, r19	; 0x01
    4628:	42 83       	std	Z+2, r20	; 0x02
    462a:	53 83       	std	Z+3, r21	; 0x03
    462c:	08 95       	ret

0000462e <__fp_mpack>:
    462e:	9f 3f       	cpi	r25, 0xFF	; 255
    4630:	31 f0       	breq	.+12     	; 0x463e <__fp_mpack_finite+0xc>

00004632 <__fp_mpack_finite>:
    4632:	91 50       	subi	r25, 0x01	; 1
    4634:	20 f4       	brcc	.+8      	; 0x463e <__fp_mpack_finite+0xc>
    4636:	87 95       	ror	r24
    4638:	77 95       	ror	r23
    463a:	67 95       	ror	r22
    463c:	b7 95       	ror	r27
    463e:	88 0f       	add	r24, r24
    4640:	91 1d       	adc	r25, r1
    4642:	96 95       	lsr	r25
    4644:	87 95       	ror	r24
    4646:	97 f9       	bld	r25, 7
    4648:	08 95       	ret

0000464a <vfprintf>:
    464a:	a1 e1       	ldi	r26, 0x11	; 17
    464c:	b0 e0       	ldi	r27, 0x00	; 0
    464e:	ea e2       	ldi	r30, 0x2A	; 42
    4650:	f3 e2       	ldi	r31, 0x23	; 35
    4652:	b7 c3       	rjmp	.+1902   	; 0x4dc2 <__prologue_saves__>
    4654:	3c 01       	movw	r6, r24
    4656:	7f 87       	std	Y+15, r23	; 0x0f
    4658:	6e 87       	std	Y+14, r22	; 0x0e
    465a:	6a 01       	movw	r12, r20
    465c:	fc 01       	movw	r30, r24
    465e:	17 82       	std	Z+7, r1	; 0x07
    4660:	16 82       	std	Z+6, r1	; 0x06
    4662:	83 81       	ldd	r24, Z+3	; 0x03
    4664:	81 fd       	sbrc	r24, 1
    4666:	03 c0       	rjmp	.+6      	; 0x466e <vfprintf+0x24>
    4668:	6f ef       	ldi	r22, 0xFF	; 255
    466a:	7f ef       	ldi	r23, 0xFF	; 255
    466c:	52 c3       	rjmp	.+1700   	; 0x4d12 <vfprintf+0x6c8>
    466e:	9e 01       	movw	r18, r28
    4670:	2f 5f       	subi	r18, 0xFF	; 255
    4672:	3f 4f       	sbci	r19, 0xFF	; 255
    4674:	39 8b       	std	Y+17, r19	; 0x11
    4676:	28 8b       	std	Y+16, r18	; 0x10
    4678:	f3 01       	movw	r30, r6
    467a:	23 81       	ldd	r18, Z+3	; 0x03
    467c:	ee 85       	ldd	r30, Y+14	; 0x0e
    467e:	ff 85       	ldd	r31, Y+15	; 0x0f
    4680:	23 fd       	sbrc	r18, 3
    4682:	85 91       	lpm	r24, Z+
    4684:	23 ff       	sbrs	r18, 3
    4686:	81 91       	ld	r24, Z+
    4688:	ff 87       	std	Y+15, r31	; 0x0f
    468a:	ee 87       	std	Y+14, r30	; 0x0e
    468c:	88 23       	and	r24, r24
    468e:	09 f4       	brne	.+2      	; 0x4692 <vfprintf+0x48>
    4690:	3d c3       	rjmp	.+1658   	; 0x4d0c <vfprintf+0x6c2>
    4692:	85 32       	cpi	r24, 0x25	; 37
    4694:	51 f4       	brne	.+20     	; 0x46aa <vfprintf+0x60>
    4696:	ee 85       	ldd	r30, Y+14	; 0x0e
    4698:	ff 85       	ldd	r31, Y+15	; 0x0f
    469a:	23 fd       	sbrc	r18, 3
    469c:	85 91       	lpm	r24, Z+
    469e:	23 ff       	sbrs	r18, 3
    46a0:	81 91       	ld	r24, Z+
    46a2:	ff 87       	std	Y+15, r31	; 0x0f
    46a4:	ee 87       	std	Y+14, r30	; 0x0e
    46a6:	85 32       	cpi	r24, 0x25	; 37
    46a8:	21 f4       	brne	.+8      	; 0x46b2 <vfprintf+0x68>
    46aa:	90 e0       	ldi	r25, 0x00	; 0
    46ac:	b3 01       	movw	r22, r6
    46ae:	20 d6       	rcall	.+3136   	; 0x52f0 <fputc>
    46b0:	e3 cf       	rjmp	.-58     	; 0x4678 <vfprintf+0x2e>
    46b2:	98 2f       	mov	r25, r24
    46b4:	10 e0       	ldi	r17, 0x00	; 0
    46b6:	88 24       	eor	r8, r8
    46b8:	99 24       	eor	r9, r9
    46ba:	10 32       	cpi	r17, 0x20	; 32
    46bc:	b0 f4       	brcc	.+44     	; 0x46ea <vfprintf+0xa0>
    46be:	9b 32       	cpi	r25, 0x2B	; 43
    46c0:	69 f0       	breq	.+26     	; 0x46dc <vfprintf+0x92>
    46c2:	9c 32       	cpi	r25, 0x2C	; 44
    46c4:	28 f4       	brcc	.+10     	; 0x46d0 <vfprintf+0x86>
    46c6:	90 32       	cpi	r25, 0x20	; 32
    46c8:	51 f0       	breq	.+20     	; 0x46de <vfprintf+0x94>
    46ca:	93 32       	cpi	r25, 0x23	; 35
    46cc:	71 f4       	brne	.+28     	; 0x46ea <vfprintf+0xa0>
    46ce:	0b c0       	rjmp	.+22     	; 0x46e6 <vfprintf+0x9c>
    46d0:	9d 32       	cpi	r25, 0x2D	; 45
    46d2:	39 f0       	breq	.+14     	; 0x46e2 <vfprintf+0x98>
    46d4:	90 33       	cpi	r25, 0x30	; 48
    46d6:	49 f4       	brne	.+18     	; 0x46ea <vfprintf+0xa0>
    46d8:	11 60       	ori	r17, 0x01	; 1
    46da:	28 c0       	rjmp	.+80     	; 0x472c <vfprintf+0xe2>
    46dc:	12 60       	ori	r17, 0x02	; 2
    46de:	14 60       	ori	r17, 0x04	; 4
    46e0:	25 c0       	rjmp	.+74     	; 0x472c <vfprintf+0xe2>
    46e2:	18 60       	ori	r17, 0x08	; 8
    46e4:	23 c0       	rjmp	.+70     	; 0x472c <vfprintf+0xe2>
    46e6:	10 61       	ori	r17, 0x10	; 16
    46e8:	21 c0       	rjmp	.+66     	; 0x472c <vfprintf+0xe2>
    46ea:	17 fd       	sbrc	r17, 7
    46ec:	2a c0       	rjmp	.+84     	; 0x4742 <vfprintf+0xf8>
    46ee:	89 2f       	mov	r24, r25
    46f0:	80 53       	subi	r24, 0x30	; 48
    46f2:	8a 30       	cpi	r24, 0x0A	; 10
    46f4:	78 f4       	brcc	.+30     	; 0x4714 <vfprintf+0xca>
    46f6:	16 ff       	sbrs	r17, 6
    46f8:	06 c0       	rjmp	.+12     	; 0x4706 <vfprintf+0xbc>
    46fa:	fa e0       	ldi	r31, 0x0A	; 10
    46fc:	9f 9e       	mul	r9, r31
    46fe:	90 2c       	mov	r9, r0
    4700:	11 24       	eor	r1, r1
    4702:	98 0e       	add	r9, r24
    4704:	13 c0       	rjmp	.+38     	; 0x472c <vfprintf+0xe2>
    4706:	3a e0       	ldi	r19, 0x0A	; 10
    4708:	83 9e       	mul	r8, r19
    470a:	80 2c       	mov	r8, r0
    470c:	11 24       	eor	r1, r1
    470e:	88 0e       	add	r8, r24
    4710:	10 62       	ori	r17, 0x20	; 32
    4712:	0c c0       	rjmp	.+24     	; 0x472c <vfprintf+0xe2>
    4714:	9e 32       	cpi	r25, 0x2E	; 46
    4716:	21 f4       	brne	.+8      	; 0x4720 <vfprintf+0xd6>
    4718:	16 fd       	sbrc	r17, 6
    471a:	f8 c2       	rjmp	.+1520   	; 0x4d0c <vfprintf+0x6c2>
    471c:	10 64       	ori	r17, 0x40	; 64
    471e:	06 c0       	rjmp	.+12     	; 0x472c <vfprintf+0xe2>
    4720:	9c 36       	cpi	r25, 0x6C	; 108
    4722:	11 f4       	brne	.+4      	; 0x4728 <vfprintf+0xde>
    4724:	10 68       	ori	r17, 0x80	; 128
    4726:	02 c0       	rjmp	.+4      	; 0x472c <vfprintf+0xe2>
    4728:	98 36       	cpi	r25, 0x68	; 104
    472a:	59 f4       	brne	.+22     	; 0x4742 <vfprintf+0xf8>
    472c:	ee 85       	ldd	r30, Y+14	; 0x0e
    472e:	ff 85       	ldd	r31, Y+15	; 0x0f
    4730:	23 fd       	sbrc	r18, 3
    4732:	95 91       	lpm	r25, Z+
    4734:	23 ff       	sbrs	r18, 3
    4736:	91 91       	ld	r25, Z+
    4738:	ff 87       	std	Y+15, r31	; 0x0f
    473a:	ee 87       	std	Y+14, r30	; 0x0e
    473c:	99 23       	and	r25, r25
    473e:	09 f0       	breq	.+2      	; 0x4742 <vfprintf+0xf8>
    4740:	bc cf       	rjmp	.-136    	; 0x46ba <vfprintf+0x70>
    4742:	89 2f       	mov	r24, r25
    4744:	85 54       	subi	r24, 0x45	; 69
    4746:	83 30       	cpi	r24, 0x03	; 3
    4748:	20 f4       	brcc	.+8      	; 0x4752 <vfprintf+0x108>
    474a:	81 2f       	mov	r24, r17
    474c:	80 61       	ori	r24, 0x10	; 16
    474e:	90 5e       	subi	r25, 0xE0	; 224
    4750:	07 c0       	rjmp	.+14     	; 0x4760 <vfprintf+0x116>
    4752:	89 2f       	mov	r24, r25
    4754:	85 56       	subi	r24, 0x65	; 101
    4756:	83 30       	cpi	r24, 0x03	; 3
    4758:	08 f0       	brcs	.+2      	; 0x475c <vfprintf+0x112>
    475a:	8f c1       	rjmp	.+798    	; 0x4a7a <vfprintf+0x430>
    475c:	81 2f       	mov	r24, r17
    475e:	8f 7e       	andi	r24, 0xEF	; 239
    4760:	86 fd       	sbrc	r24, 6
    4762:	02 c0       	rjmp	.+4      	; 0x4768 <vfprintf+0x11e>
    4764:	76 e0       	ldi	r23, 0x06	; 6
    4766:	97 2e       	mov	r9, r23
    4768:	6f e3       	ldi	r22, 0x3F	; 63
    476a:	f6 2e       	mov	r15, r22
    476c:	f8 22       	and	r15, r24
    476e:	95 36       	cpi	r25, 0x65	; 101
    4770:	19 f4       	brne	.+6      	; 0x4778 <vfprintf+0x12e>
    4772:	f0 e4       	ldi	r31, 0x40	; 64
    4774:	ff 2a       	or	r15, r31
    4776:	07 c0       	rjmp	.+14     	; 0x4786 <vfprintf+0x13c>
    4778:	96 36       	cpi	r25, 0x66	; 102
    477a:	19 f4       	brne	.+6      	; 0x4782 <vfprintf+0x138>
    477c:	20 e8       	ldi	r18, 0x80	; 128
    477e:	f2 2a       	or	r15, r18
    4780:	02 c0       	rjmp	.+4      	; 0x4786 <vfprintf+0x13c>
    4782:	91 10       	cpse	r9, r1
    4784:	9a 94       	dec	r9
    4786:	f7 fe       	sbrs	r15, 7
    4788:	0a c0       	rjmp	.+20     	; 0x479e <vfprintf+0x154>
    478a:	3b e3       	ldi	r19, 0x3B	; 59
    478c:	39 15       	cp	r19, r9
    478e:	18 f4       	brcc	.+6      	; 0x4796 <vfprintf+0x14c>
    4790:	5c e3       	ldi	r21, 0x3C	; 60
    4792:	b5 2e       	mov	r11, r21
    4794:	02 c0       	rjmp	.+4      	; 0x479a <vfprintf+0x150>
    4796:	b9 2c       	mov	r11, r9
    4798:	b3 94       	inc	r11
    479a:	27 e0       	ldi	r18, 0x07	; 7
    479c:	09 c0       	rjmp	.+18     	; 0x47b0 <vfprintf+0x166>
    479e:	47 e0       	ldi	r20, 0x07	; 7
    47a0:	49 15       	cp	r20, r9
    47a2:	20 f4       	brcc	.+8      	; 0x47ac <vfprintf+0x162>
    47a4:	bb 24       	eor	r11, r11
    47a6:	47 e0       	ldi	r20, 0x07	; 7
    47a8:	94 2e       	mov	r9, r20
    47aa:	f7 cf       	rjmp	.-18     	; 0x479a <vfprintf+0x150>
    47ac:	29 2d       	mov	r18, r9
    47ae:	bb 24       	eor	r11, r11
    47b0:	c6 01       	movw	r24, r12
    47b2:	04 96       	adiw	r24, 0x04	; 4
    47b4:	9d 87       	std	Y+13, r25	; 0x0d
    47b6:	8c 87       	std	Y+12, r24	; 0x0c
    47b8:	f6 01       	movw	r30, r12
    47ba:	60 81       	ld	r22, Z
    47bc:	71 81       	ldd	r23, Z+1	; 0x01
    47be:	82 81       	ldd	r24, Z+2	; 0x02
    47c0:	93 81       	ldd	r25, Z+3	; 0x03
    47c2:	ae 01       	movw	r20, r28
    47c4:	4f 5f       	subi	r20, 0xFF	; 255
    47c6:	5f 4f       	sbci	r21, 0xFF	; 255
    47c8:	0b 2d       	mov	r16, r11
    47ca:	a4 d4       	rcall	.+2376   	; 0x5114 <__ftoa_engine>
    47cc:	6c 01       	movw	r12, r24
    47ce:	09 81       	ldd	r16, Y+1	; 0x01
    47d0:	20 2e       	mov	r2, r16
    47d2:	33 24       	eor	r3, r3
    47d4:	00 ff       	sbrs	r16, 0
    47d6:	04 c0       	rjmp	.+8      	; 0x47e0 <vfprintf+0x196>
    47d8:	03 fd       	sbrc	r16, 3
    47da:	02 c0       	rjmp	.+4      	; 0x47e0 <vfprintf+0x196>
    47dc:	1d e2       	ldi	r17, 0x2D	; 45
    47de:	09 c0       	rjmp	.+18     	; 0x47f2 <vfprintf+0x1a8>
    47e0:	f1 fe       	sbrs	r15, 1
    47e2:	02 c0       	rjmp	.+4      	; 0x47e8 <vfprintf+0x19e>
    47e4:	1b e2       	ldi	r17, 0x2B	; 43
    47e6:	05 c0       	rjmp	.+10     	; 0x47f2 <vfprintf+0x1a8>
    47e8:	f2 fc       	sbrc	r15, 2
    47ea:	02 c0       	rjmp	.+4      	; 0x47f0 <vfprintf+0x1a6>
    47ec:	10 e0       	ldi	r17, 0x00	; 0
    47ee:	01 c0       	rjmp	.+2      	; 0x47f2 <vfprintf+0x1a8>
    47f0:	10 e2       	ldi	r17, 0x20	; 32
    47f2:	c1 01       	movw	r24, r2
    47f4:	8c 70       	andi	r24, 0x0C	; 12
    47f6:	90 70       	andi	r25, 0x00	; 0
    47f8:	89 2b       	or	r24, r25
    47fa:	a1 f1       	breq	.+104    	; 0x4864 <vfprintf+0x21a>
    47fc:	11 23       	and	r17, r17
    47fe:	11 f4       	brne	.+4      	; 0x4804 <vfprintf+0x1ba>
    4800:	83 e0       	ldi	r24, 0x03	; 3
    4802:	01 c0       	rjmp	.+2      	; 0x4806 <vfprintf+0x1bc>
    4804:	84 e0       	ldi	r24, 0x04	; 4
    4806:	88 15       	cp	r24, r8
    4808:	10 f0       	brcs	.+4      	; 0x480e <vfprintf+0x1c4>
    480a:	88 24       	eor	r8, r8
    480c:	09 c0       	rjmp	.+18     	; 0x4820 <vfprintf+0x1d6>
    480e:	88 1a       	sub	r8, r24
    4810:	f3 fc       	sbrc	r15, 3
    4812:	06 c0       	rjmp	.+12     	; 0x4820 <vfprintf+0x1d6>
    4814:	80 e2       	ldi	r24, 0x20	; 32
    4816:	90 e0       	ldi	r25, 0x00	; 0
    4818:	b3 01       	movw	r22, r6
    481a:	6a d5       	rcall	.+2772   	; 0x52f0 <fputc>
    481c:	8a 94       	dec	r8
    481e:	d1 f7       	brne	.-12     	; 0x4814 <vfprintf+0x1ca>
    4820:	11 23       	and	r17, r17
    4822:	21 f0       	breq	.+8      	; 0x482c <vfprintf+0x1e2>
    4824:	81 2f       	mov	r24, r17
    4826:	90 e0       	ldi	r25, 0x00	; 0
    4828:	b3 01       	movw	r22, r6
    482a:	62 d5       	rcall	.+2756   	; 0x52f0 <fputc>
    482c:	23 fe       	sbrs	r2, 3
    482e:	03 c0       	rjmp	.+6      	; 0x4836 <vfprintf+0x1ec>
    4830:	0f e5       	ldi	r16, 0x5F	; 95
    4832:	15 e0       	ldi	r17, 0x05	; 5
    4834:	0d c0       	rjmp	.+26     	; 0x4850 <vfprintf+0x206>
    4836:	03 e6       	ldi	r16, 0x63	; 99
    4838:	15 e0       	ldi	r17, 0x05	; 5
    483a:	0a c0       	rjmp	.+20     	; 0x4850 <vfprintf+0x206>
    483c:	e1 14       	cp	r14, r1
    483e:	f1 04       	cpc	r15, r1
    4840:	09 f0       	breq	.+2      	; 0x4844 <vfprintf+0x1fa>
    4842:	80 52       	subi	r24, 0x20	; 32
    4844:	90 e0       	ldi	r25, 0x00	; 0
    4846:	b3 01       	movw	r22, r6
    4848:	53 d5       	rcall	.+2726   	; 0x52f0 <fputc>
    484a:	0f 5f       	subi	r16, 0xFF	; 255
    484c:	1f 4f       	sbci	r17, 0xFF	; 255
    484e:	05 c0       	rjmp	.+10     	; 0x485a <vfprintf+0x210>
    4850:	ef 2c       	mov	r14, r15
    4852:	ff 24       	eor	r15, r15
    4854:	f0 e1       	ldi	r31, 0x10	; 16
    4856:	ef 22       	and	r14, r31
    4858:	ff 24       	eor	r15, r15
    485a:	f8 01       	movw	r30, r16
    485c:	84 91       	lpm	r24, Z+
    485e:	88 23       	and	r24, r24
    4860:	69 f7       	brne	.-38     	; 0x483c <vfprintf+0x1f2>
    4862:	08 c1       	rjmp	.+528    	; 0x4a74 <vfprintf+0x42a>
    4864:	f7 fe       	sbrs	r15, 7
    4866:	12 c0       	rjmp	.+36     	; 0x488c <vfprintf+0x242>
    4868:	bc 0c       	add	r11, r12
    486a:	24 fe       	sbrs	r2, 4
    486c:	04 c0       	rjmp	.+8      	; 0x4876 <vfprintf+0x22c>
    486e:	8a 81       	ldd	r24, Y+2	; 0x02
    4870:	81 33       	cpi	r24, 0x31	; 49
    4872:	09 f4       	brne	.+2      	; 0x4876 <vfprintf+0x22c>
    4874:	ba 94       	dec	r11
    4876:	1b 14       	cp	r1, r11
    4878:	1c f0       	brlt	.+6      	; 0x4880 <vfprintf+0x236>
    487a:	bb 24       	eor	r11, r11
    487c:	b3 94       	inc	r11
    487e:	2d c0       	rjmp	.+90     	; 0x48da <vfprintf+0x290>
    4880:	f8 e0       	ldi	r31, 0x08	; 8
    4882:	fb 15       	cp	r31, r11
    4884:	50 f5       	brcc	.+84     	; 0x48da <vfprintf+0x290>
    4886:	38 e0       	ldi	r19, 0x08	; 8
    4888:	b3 2e       	mov	r11, r19
    488a:	27 c0       	rjmp	.+78     	; 0x48da <vfprintf+0x290>
    488c:	f6 fc       	sbrc	r15, 6
    488e:	25 c0       	rjmp	.+74     	; 0x48da <vfprintf+0x290>
    4890:	89 2d       	mov	r24, r9
    4892:	90 e0       	ldi	r25, 0x00	; 0
    4894:	8c 15       	cp	r24, r12
    4896:	9d 05       	cpc	r25, r13
    4898:	4c f0       	brlt	.+18     	; 0x48ac <vfprintf+0x262>
    489a:	2c ef       	ldi	r18, 0xFC	; 252
    489c:	c2 16       	cp	r12, r18
    489e:	2f ef       	ldi	r18, 0xFF	; 255
    48a0:	d2 06       	cpc	r13, r18
    48a2:	24 f0       	brlt	.+8      	; 0x48ac <vfprintf+0x262>
    48a4:	30 e8       	ldi	r19, 0x80	; 128
    48a6:	f3 2a       	or	r15, r19
    48a8:	01 c0       	rjmp	.+2      	; 0x48ac <vfprintf+0x262>
    48aa:	9a 94       	dec	r9
    48ac:	99 20       	and	r9, r9
    48ae:	49 f0       	breq	.+18     	; 0x48c2 <vfprintf+0x278>
    48b0:	e2 e0       	ldi	r30, 0x02	; 2
    48b2:	f0 e0       	ldi	r31, 0x00	; 0
    48b4:	ec 0f       	add	r30, r28
    48b6:	fd 1f       	adc	r31, r29
    48b8:	e9 0d       	add	r30, r9
    48ba:	f1 1d       	adc	r31, r1
    48bc:	80 81       	ld	r24, Z
    48be:	80 33       	cpi	r24, 0x30	; 48
    48c0:	a1 f3       	breq	.-24     	; 0x48aa <vfprintf+0x260>
    48c2:	f7 fe       	sbrs	r15, 7
    48c4:	0a c0       	rjmp	.+20     	; 0x48da <vfprintf+0x290>
    48c6:	b9 2c       	mov	r11, r9
    48c8:	b3 94       	inc	r11
    48ca:	89 2d       	mov	r24, r9
    48cc:	90 e0       	ldi	r25, 0x00	; 0
    48ce:	c8 16       	cp	r12, r24
    48d0:	d9 06       	cpc	r13, r25
    48d2:	14 f0       	brlt	.+4      	; 0x48d8 <vfprintf+0x28e>
    48d4:	99 24       	eor	r9, r9
    48d6:	01 c0       	rjmp	.+2      	; 0x48da <vfprintf+0x290>
    48d8:	9c 18       	sub	r9, r12
    48da:	f7 fc       	sbrc	r15, 7
    48dc:	03 c0       	rjmp	.+6      	; 0x48e4 <vfprintf+0x29a>
    48de:	25 e0       	ldi	r18, 0x05	; 5
    48e0:	30 e0       	ldi	r19, 0x00	; 0
    48e2:	09 c0       	rjmp	.+18     	; 0x48f6 <vfprintf+0x2ac>
    48e4:	1c 14       	cp	r1, r12
    48e6:	1d 04       	cpc	r1, r13
    48e8:	1c f0       	brlt	.+6      	; 0x48f0 <vfprintf+0x2a6>
    48ea:	21 e0       	ldi	r18, 0x01	; 1
    48ec:	30 e0       	ldi	r19, 0x00	; 0
    48ee:	03 c0       	rjmp	.+6      	; 0x48f6 <vfprintf+0x2ac>
    48f0:	96 01       	movw	r18, r12
    48f2:	2f 5f       	subi	r18, 0xFF	; 255
    48f4:	3f 4f       	sbci	r19, 0xFF	; 255
    48f6:	11 23       	and	r17, r17
    48f8:	11 f0       	breq	.+4      	; 0x48fe <vfprintf+0x2b4>
    48fa:	2f 5f       	subi	r18, 0xFF	; 255
    48fc:	3f 4f       	sbci	r19, 0xFF	; 255
    48fe:	99 20       	and	r9, r9
    4900:	29 f0       	breq	.+10     	; 0x490c <vfprintf+0x2c2>
    4902:	89 2d       	mov	r24, r9
    4904:	90 e0       	ldi	r25, 0x00	; 0
    4906:	01 96       	adiw	r24, 0x01	; 1
    4908:	28 0f       	add	r18, r24
    490a:	39 1f       	adc	r19, r25
    490c:	88 2d       	mov	r24, r8
    490e:	90 e0       	ldi	r25, 0x00	; 0
    4910:	28 17       	cp	r18, r24
    4912:	39 07       	cpc	r19, r25
    4914:	14 f0       	brlt	.+4      	; 0x491a <vfprintf+0x2d0>
    4916:	88 24       	eor	r8, r8
    4918:	01 c0       	rjmp	.+2      	; 0x491c <vfprintf+0x2d2>
    491a:	82 1a       	sub	r8, r18
    491c:	4f 2c       	mov	r4, r15
    491e:	55 24       	eor	r5, r5
    4920:	c2 01       	movw	r24, r4
    4922:	89 70       	andi	r24, 0x09	; 9
    4924:	90 70       	andi	r25, 0x00	; 0
    4926:	89 2b       	or	r24, r25
    4928:	31 f0       	breq	.+12     	; 0x4936 <vfprintf+0x2ec>
    492a:	07 c0       	rjmp	.+14     	; 0x493a <vfprintf+0x2f0>
    492c:	80 e2       	ldi	r24, 0x20	; 32
    492e:	90 e0       	ldi	r25, 0x00	; 0
    4930:	b3 01       	movw	r22, r6
    4932:	de d4       	rcall	.+2492   	; 0x52f0 <fputc>
    4934:	8a 94       	dec	r8
    4936:	88 20       	and	r8, r8
    4938:	c9 f7       	brne	.-14     	; 0x492c <vfprintf+0x2e2>
    493a:	11 23       	and	r17, r17
    493c:	21 f0       	breq	.+8      	; 0x4946 <vfprintf+0x2fc>
    493e:	81 2f       	mov	r24, r17
    4940:	90 e0       	ldi	r25, 0x00	; 0
    4942:	b3 01       	movw	r22, r6
    4944:	d5 d4       	rcall	.+2474   	; 0x52f0 <fputc>
    4946:	43 fe       	sbrs	r4, 3
    4948:	06 c0       	rjmp	.+12     	; 0x4956 <vfprintf+0x30c>
    494a:	07 c0       	rjmp	.+14     	; 0x495a <vfprintf+0x310>
    494c:	80 e3       	ldi	r24, 0x30	; 48
    494e:	90 e0       	ldi	r25, 0x00	; 0
    4950:	b3 01       	movw	r22, r6
    4952:	ce d4       	rcall	.+2460   	; 0x52f0 <fputc>
    4954:	8a 94       	dec	r8
    4956:	88 20       	and	r8, r8
    4958:	c9 f7       	brne	.-14     	; 0x494c <vfprintf+0x302>
    495a:	f7 fe       	sbrs	r15, 7
    495c:	44 c0       	rjmp	.+136    	; 0x49e6 <vfprintf+0x39c>
    495e:	86 01       	movw	r16, r12
    4960:	d7 fe       	sbrs	r13, 7
    4962:	02 c0       	rjmp	.+4      	; 0x4968 <vfprintf+0x31e>
    4964:	00 e0       	ldi	r16, 0x00	; 0
    4966:	10 e0       	ldi	r17, 0x00	; 0
    4968:	76 01       	movw	r14, r12
    496a:	08 94       	sec
    496c:	e1 1c       	adc	r14, r1
    496e:	f1 1c       	adc	r15, r1
    4970:	e0 1a       	sub	r14, r16
    4972:	f1 0a       	sbc	r15, r17
    4974:	41 e0       	ldi	r20, 0x01	; 1
    4976:	50 e0       	ldi	r21, 0x00	; 0
    4978:	4c 0f       	add	r20, r28
    497a:	5d 1f       	adc	r21, r29
    497c:	e4 0e       	add	r14, r20
    497e:	f5 1e       	adc	r15, r21
    4980:	26 01       	movw	r4, r12
    4982:	4b 18       	sub	r4, r11
    4984:	51 08       	sbc	r5, r1
    4986:	89 2d       	mov	r24, r9
    4988:	90 e0       	ldi	r25, 0x00	; 0
    498a:	aa 24       	eor	r10, r10
    498c:	bb 24       	eor	r11, r11
    498e:	a8 1a       	sub	r10, r24
    4990:	b9 0a       	sbc	r11, r25
    4992:	5f ef       	ldi	r21, 0xFF	; 255
    4994:	0f 3f       	cpi	r16, 0xFF	; 255
    4996:	15 07       	cpc	r17, r21
    4998:	21 f4       	brne	.+8      	; 0x49a2 <vfprintf+0x358>
    499a:	8e e2       	ldi	r24, 0x2E	; 46
    499c:	90 e0       	ldi	r25, 0x00	; 0
    499e:	b3 01       	movw	r22, r6
    49a0:	a7 d4       	rcall	.+2382   	; 0x52f0 <fputc>
    49a2:	c0 16       	cp	r12, r16
    49a4:	d1 06       	cpc	r13, r17
    49a6:	34 f0       	brlt	.+12     	; 0x49b4 <vfprintf+0x36a>
    49a8:	40 16       	cp	r4, r16
    49aa:	51 06       	cpc	r5, r17
    49ac:	1c f4       	brge	.+6      	; 0x49b4 <vfprintf+0x36a>
    49ae:	f7 01       	movw	r30, r14
    49b0:	80 81       	ld	r24, Z
    49b2:	01 c0       	rjmp	.+2      	; 0x49b6 <vfprintf+0x36c>
    49b4:	80 e3       	ldi	r24, 0x30	; 48
    49b6:	01 50       	subi	r16, 0x01	; 1
    49b8:	10 40       	sbci	r17, 0x00	; 0
    49ba:	08 94       	sec
    49bc:	e1 1c       	adc	r14, r1
    49be:	f1 1c       	adc	r15, r1
    49c0:	0a 15       	cp	r16, r10
    49c2:	1b 05       	cpc	r17, r11
    49c4:	24 f0       	brlt	.+8      	; 0x49ce <vfprintf+0x384>
    49c6:	90 e0       	ldi	r25, 0x00	; 0
    49c8:	b3 01       	movw	r22, r6
    49ca:	92 d4       	rcall	.+2340   	; 0x52f0 <fputc>
    49cc:	e2 cf       	rjmp	.-60     	; 0x4992 <vfprintf+0x348>
    49ce:	0c 15       	cp	r16, r12
    49d0:	1d 05       	cpc	r17, r13
    49d2:	39 f4       	brne	.+14     	; 0x49e2 <vfprintf+0x398>
    49d4:	9a 81       	ldd	r25, Y+2	; 0x02
    49d6:	96 33       	cpi	r25, 0x36	; 54
    49d8:	18 f4       	brcc	.+6      	; 0x49e0 <vfprintf+0x396>
    49da:	95 33       	cpi	r25, 0x35	; 53
    49dc:	11 f4       	brne	.+4      	; 0x49e2 <vfprintf+0x398>
    49de:	24 fe       	sbrs	r2, 4
    49e0:	81 e3       	ldi	r24, 0x31	; 49
    49e2:	90 e0       	ldi	r25, 0x00	; 0
    49e4:	45 c0       	rjmp	.+138    	; 0x4a70 <vfprintf+0x426>
    49e6:	8a 81       	ldd	r24, Y+2	; 0x02
    49e8:	81 33       	cpi	r24, 0x31	; 49
    49ea:	09 f0       	breq	.+2      	; 0x49ee <vfprintf+0x3a4>
    49ec:	0f 7e       	andi	r16, 0xEF	; 239
    49ee:	90 e0       	ldi	r25, 0x00	; 0
    49f0:	b3 01       	movw	r22, r6
    49f2:	7e d4       	rcall	.+2300   	; 0x52f0 <fputc>
    49f4:	99 20       	and	r9, r9
    49f6:	91 f0       	breq	.+36     	; 0x4a1c <vfprintf+0x3d2>
    49f8:	8e e2       	ldi	r24, 0x2E	; 46
    49fa:	90 e0       	ldi	r25, 0x00	; 0
    49fc:	b3 01       	movw	r22, r6
    49fe:	78 d4       	rcall	.+2288   	; 0x52f0 <fputc>
    4a00:	12 e0       	ldi	r17, 0x02	; 2
    4a02:	e1 e0       	ldi	r30, 0x01	; 1
    4a04:	f0 e0       	ldi	r31, 0x00	; 0
    4a06:	ec 0f       	add	r30, r28
    4a08:	fd 1f       	adc	r31, r29
    4a0a:	e1 0f       	add	r30, r17
    4a0c:	f1 1d       	adc	r31, r1
    4a0e:	1f 5f       	subi	r17, 0xFF	; 255
    4a10:	80 81       	ld	r24, Z
    4a12:	90 e0       	ldi	r25, 0x00	; 0
    4a14:	b3 01       	movw	r22, r6
    4a16:	6c d4       	rcall	.+2264   	; 0x52f0 <fputc>
    4a18:	9a 94       	dec	r9
    4a1a:	99 f7       	brne	.-26     	; 0x4a02 <vfprintf+0x3b8>
    4a1c:	44 fc       	sbrc	r4, 4
    4a1e:	03 c0       	rjmp	.+6      	; 0x4a26 <vfprintf+0x3dc>
    4a20:	85 e6       	ldi	r24, 0x65	; 101
    4a22:	90 e0       	ldi	r25, 0x00	; 0
    4a24:	02 c0       	rjmp	.+4      	; 0x4a2a <vfprintf+0x3e0>
    4a26:	85 e4       	ldi	r24, 0x45	; 69
    4a28:	90 e0       	ldi	r25, 0x00	; 0
    4a2a:	b3 01       	movw	r22, r6
    4a2c:	61 d4       	rcall	.+2242   	; 0x52f0 <fputc>
    4a2e:	d7 fc       	sbrc	r13, 7
    4a30:	05 c0       	rjmp	.+10     	; 0x4a3c <vfprintf+0x3f2>
    4a32:	c1 14       	cp	r12, r1
    4a34:	d1 04       	cpc	r13, r1
    4a36:	41 f4       	brne	.+16     	; 0x4a48 <vfprintf+0x3fe>
    4a38:	04 ff       	sbrs	r16, 4
    4a3a:	06 c0       	rjmp	.+12     	; 0x4a48 <vfprintf+0x3fe>
    4a3c:	d0 94       	com	r13
    4a3e:	c1 94       	neg	r12
    4a40:	d1 08       	sbc	r13, r1
    4a42:	d3 94       	inc	r13
    4a44:	8d e2       	ldi	r24, 0x2D	; 45
    4a46:	01 c0       	rjmp	.+2      	; 0x4a4a <vfprintf+0x400>
    4a48:	8b e2       	ldi	r24, 0x2B	; 43
    4a4a:	90 e0       	ldi	r25, 0x00	; 0
    4a4c:	b3 01       	movw	r22, r6
    4a4e:	50 d4       	rcall	.+2208   	; 0x52f0 <fputc>
    4a50:	80 e3       	ldi	r24, 0x30	; 48
    4a52:	05 c0       	rjmp	.+10     	; 0x4a5e <vfprintf+0x414>
    4a54:	8f 5f       	subi	r24, 0xFF	; 255
    4a56:	26 ef       	ldi	r18, 0xF6	; 246
    4a58:	3f ef       	ldi	r19, 0xFF	; 255
    4a5a:	c2 0e       	add	r12, r18
    4a5c:	d3 1e       	adc	r13, r19
    4a5e:	3a e0       	ldi	r19, 0x0A	; 10
    4a60:	c3 16       	cp	r12, r19
    4a62:	d1 04       	cpc	r13, r1
    4a64:	bc f7       	brge	.-18     	; 0x4a54 <vfprintf+0x40a>
    4a66:	90 e0       	ldi	r25, 0x00	; 0
    4a68:	b3 01       	movw	r22, r6
    4a6a:	42 d4       	rcall	.+2180   	; 0x52f0 <fputc>
    4a6c:	c6 01       	movw	r24, r12
    4a6e:	c0 96       	adiw	r24, 0x30	; 48
    4a70:	b3 01       	movw	r22, r6
    4a72:	3e d4       	rcall	.+2172   	; 0x52f0 <fputc>
    4a74:	cc 84       	ldd	r12, Y+12	; 0x0c
    4a76:	dd 84       	ldd	r13, Y+13	; 0x0d
    4a78:	46 c1       	rjmp	.+652    	; 0x4d06 <vfprintf+0x6bc>
    4a7a:	93 36       	cpi	r25, 0x63	; 99
    4a7c:	31 f0       	breq	.+12     	; 0x4a8a <vfprintf+0x440>
    4a7e:	93 37       	cpi	r25, 0x73	; 115
    4a80:	99 f0       	breq	.+38     	; 0x4aa8 <vfprintf+0x45e>
    4a82:	93 35       	cpi	r25, 0x53	; 83
    4a84:	09 f0       	breq	.+2      	; 0x4a88 <vfprintf+0x43e>
    4a86:	55 c0       	rjmp	.+170    	; 0x4b32 <vfprintf+0x4e8>
    4a88:	22 c0       	rjmp	.+68     	; 0x4ace <vfprintf+0x484>
    4a8a:	f6 01       	movw	r30, r12
    4a8c:	80 81       	ld	r24, Z
    4a8e:	89 83       	std	Y+1, r24	; 0x01
    4a90:	5e 01       	movw	r10, r28
    4a92:	08 94       	sec
    4a94:	a1 1c       	adc	r10, r1
    4a96:	b1 1c       	adc	r11, r1
    4a98:	22 e0       	ldi	r18, 0x02	; 2
    4a9a:	30 e0       	ldi	r19, 0x00	; 0
    4a9c:	c2 0e       	add	r12, r18
    4a9e:	d3 1e       	adc	r13, r19
    4aa0:	21 e0       	ldi	r18, 0x01	; 1
    4aa2:	e2 2e       	mov	r14, r18
    4aa4:	f1 2c       	mov	r15, r1
    4aa6:	11 c0       	rjmp	.+34     	; 0x4aca <vfprintf+0x480>
    4aa8:	f6 01       	movw	r30, r12
    4aaa:	a0 80       	ld	r10, Z
    4aac:	b1 80       	ldd	r11, Z+1	; 0x01
    4aae:	16 fd       	sbrc	r17, 6
    4ab0:	03 c0       	rjmp	.+6      	; 0x4ab8 <vfprintf+0x46e>
    4ab2:	6f ef       	ldi	r22, 0xFF	; 255
    4ab4:	7f ef       	ldi	r23, 0xFF	; 255
    4ab6:	02 c0       	rjmp	.+4      	; 0x4abc <vfprintf+0x472>
    4ab8:	69 2d       	mov	r22, r9
    4aba:	70 e0       	ldi	r23, 0x00	; 0
    4abc:	22 e0       	ldi	r18, 0x02	; 2
    4abe:	30 e0       	ldi	r19, 0x00	; 0
    4ac0:	c2 0e       	add	r12, r18
    4ac2:	d3 1e       	adc	r13, r19
    4ac4:	c5 01       	movw	r24, r10
    4ac6:	09 d4       	rcall	.+2066   	; 0x52da <strnlen>
    4ac8:	7c 01       	movw	r14, r24
    4aca:	1f 77       	andi	r17, 0x7F	; 127
    4acc:	12 c0       	rjmp	.+36     	; 0x4af2 <vfprintf+0x4a8>
    4ace:	f6 01       	movw	r30, r12
    4ad0:	a0 80       	ld	r10, Z
    4ad2:	b1 80       	ldd	r11, Z+1	; 0x01
    4ad4:	16 fd       	sbrc	r17, 6
    4ad6:	03 c0       	rjmp	.+6      	; 0x4ade <vfprintf+0x494>
    4ad8:	6f ef       	ldi	r22, 0xFF	; 255
    4ada:	7f ef       	ldi	r23, 0xFF	; 255
    4adc:	02 c0       	rjmp	.+4      	; 0x4ae2 <vfprintf+0x498>
    4ade:	69 2d       	mov	r22, r9
    4ae0:	70 e0       	ldi	r23, 0x00	; 0
    4ae2:	22 e0       	ldi	r18, 0x02	; 2
    4ae4:	30 e0       	ldi	r19, 0x00	; 0
    4ae6:	c2 0e       	add	r12, r18
    4ae8:	d3 1e       	adc	r13, r19
    4aea:	c5 01       	movw	r24, r10
    4aec:	eb d3       	rcall	.+2006   	; 0x52c4 <strnlen_P>
    4aee:	7c 01       	movw	r14, r24
    4af0:	10 68       	ori	r17, 0x80	; 128
    4af2:	13 ff       	sbrs	r17, 3
    4af4:	06 c0       	rjmp	.+12     	; 0x4b02 <vfprintf+0x4b8>
    4af6:	19 c0       	rjmp	.+50     	; 0x4b2a <vfprintf+0x4e0>
    4af8:	80 e2       	ldi	r24, 0x20	; 32
    4afa:	90 e0       	ldi	r25, 0x00	; 0
    4afc:	b3 01       	movw	r22, r6
    4afe:	f8 d3       	rcall	.+2032   	; 0x52f0 <fputc>
    4b00:	8a 94       	dec	r8
    4b02:	88 2d       	mov	r24, r8
    4b04:	90 e0       	ldi	r25, 0x00	; 0
    4b06:	e8 16       	cp	r14, r24
    4b08:	f9 06       	cpc	r15, r25
    4b0a:	b0 f3       	brcs	.-20     	; 0x4af8 <vfprintf+0x4ae>
    4b0c:	0e c0       	rjmp	.+28     	; 0x4b2a <vfprintf+0x4e0>
    4b0e:	f5 01       	movw	r30, r10
    4b10:	17 fd       	sbrc	r17, 7
    4b12:	85 91       	lpm	r24, Z+
    4b14:	17 ff       	sbrs	r17, 7
    4b16:	81 91       	ld	r24, Z+
    4b18:	5f 01       	movw	r10, r30
    4b1a:	90 e0       	ldi	r25, 0x00	; 0
    4b1c:	b3 01       	movw	r22, r6
    4b1e:	e8 d3       	rcall	.+2000   	; 0x52f0 <fputc>
    4b20:	81 10       	cpse	r8, r1
    4b22:	8a 94       	dec	r8
    4b24:	08 94       	sec
    4b26:	e1 08       	sbc	r14, r1
    4b28:	f1 08       	sbc	r15, r1
    4b2a:	e1 14       	cp	r14, r1
    4b2c:	f1 04       	cpc	r15, r1
    4b2e:	79 f7       	brne	.-34     	; 0x4b0e <vfprintf+0x4c4>
    4b30:	ea c0       	rjmp	.+468    	; 0x4d06 <vfprintf+0x6bc>
    4b32:	94 36       	cpi	r25, 0x64	; 100
    4b34:	11 f0       	breq	.+4      	; 0x4b3a <vfprintf+0x4f0>
    4b36:	99 36       	cpi	r25, 0x69	; 105
    4b38:	81 f5       	brne	.+96     	; 0x4b9a <vfprintf+0x550>
    4b3a:	17 ff       	sbrs	r17, 7
    4b3c:	08 c0       	rjmp	.+16     	; 0x4b4e <vfprintf+0x504>
    4b3e:	f6 01       	movw	r30, r12
    4b40:	20 81       	ld	r18, Z
    4b42:	31 81       	ldd	r19, Z+1	; 0x01
    4b44:	42 81       	ldd	r20, Z+2	; 0x02
    4b46:	53 81       	ldd	r21, Z+3	; 0x03
    4b48:	84 e0       	ldi	r24, 0x04	; 4
    4b4a:	90 e0       	ldi	r25, 0x00	; 0
    4b4c:	0a c0       	rjmp	.+20     	; 0x4b62 <vfprintf+0x518>
    4b4e:	f6 01       	movw	r30, r12
    4b50:	80 81       	ld	r24, Z
    4b52:	91 81       	ldd	r25, Z+1	; 0x01
    4b54:	9c 01       	movw	r18, r24
    4b56:	44 27       	eor	r20, r20
    4b58:	37 fd       	sbrc	r19, 7
    4b5a:	40 95       	com	r20
    4b5c:	54 2f       	mov	r21, r20
    4b5e:	82 e0       	ldi	r24, 0x02	; 2
    4b60:	90 e0       	ldi	r25, 0x00	; 0
    4b62:	c8 0e       	add	r12, r24
    4b64:	d9 1e       	adc	r13, r25
    4b66:	9f e6       	ldi	r25, 0x6F	; 111
    4b68:	f9 2e       	mov	r15, r25
    4b6a:	f1 22       	and	r15, r17
    4b6c:	57 ff       	sbrs	r21, 7
    4b6e:	09 c0       	rjmp	.+18     	; 0x4b82 <vfprintf+0x538>
    4b70:	50 95       	com	r21
    4b72:	40 95       	com	r20
    4b74:	30 95       	com	r19
    4b76:	21 95       	neg	r18
    4b78:	3f 4f       	sbci	r19, 0xFF	; 255
    4b7a:	4f 4f       	sbci	r20, 0xFF	; 255
    4b7c:	5f 4f       	sbci	r21, 0xFF	; 255
    4b7e:	90 e8       	ldi	r25, 0x80	; 128
    4b80:	f9 2a       	or	r15, r25
    4b82:	ca 01       	movw	r24, r20
    4b84:	b9 01       	movw	r22, r18
    4b86:	ae 01       	movw	r20, r28
    4b88:	4f 5f       	subi	r20, 0xFF	; 255
    4b8a:	5f 4f       	sbci	r21, 0xFF	; 255
    4b8c:	2a e0       	ldi	r18, 0x0A	; 10
    4b8e:	30 e0       	ldi	r19, 0x00	; 0
    4b90:	22 d4       	rcall	.+2116   	; 0x53d6 <__ultoa_invert>
    4b92:	e8 2e       	mov	r14, r24
    4b94:	e8 89       	ldd	r30, Y+16	; 0x10
    4b96:	ee 1a       	sub	r14, r30
    4b98:	40 c0       	rjmp	.+128    	; 0x4c1a <vfprintf+0x5d0>
    4b9a:	95 37       	cpi	r25, 0x75	; 117
    4b9c:	21 f4       	brne	.+8      	; 0x4ba6 <vfprintf+0x55c>
    4b9e:	1f 7e       	andi	r17, 0xEF	; 239
    4ba0:	2a e0       	ldi	r18, 0x0A	; 10
    4ba2:	30 e0       	ldi	r19, 0x00	; 0
    4ba4:	1c c0       	rjmp	.+56     	; 0x4bde <vfprintf+0x594>
    4ba6:	19 7f       	andi	r17, 0xF9	; 249
    4ba8:	9f 36       	cpi	r25, 0x6F	; 111
    4baa:	61 f0       	breq	.+24     	; 0x4bc4 <vfprintf+0x57a>
    4bac:	90 37       	cpi	r25, 0x70	; 112
    4bae:	20 f4       	brcc	.+8      	; 0x4bb8 <vfprintf+0x56e>
    4bb0:	98 35       	cpi	r25, 0x58	; 88
    4bb2:	09 f0       	breq	.+2      	; 0x4bb6 <vfprintf+0x56c>
    4bb4:	ab c0       	rjmp	.+342    	; 0x4d0c <vfprintf+0x6c2>
    4bb6:	0f c0       	rjmp	.+30     	; 0x4bd6 <vfprintf+0x58c>
    4bb8:	90 37       	cpi	r25, 0x70	; 112
    4bba:	39 f0       	breq	.+14     	; 0x4bca <vfprintf+0x580>
    4bbc:	98 37       	cpi	r25, 0x78	; 120
    4bbe:	09 f0       	breq	.+2      	; 0x4bc2 <vfprintf+0x578>
    4bc0:	a5 c0       	rjmp	.+330    	; 0x4d0c <vfprintf+0x6c2>
    4bc2:	04 c0       	rjmp	.+8      	; 0x4bcc <vfprintf+0x582>
    4bc4:	28 e0       	ldi	r18, 0x08	; 8
    4bc6:	30 e0       	ldi	r19, 0x00	; 0
    4bc8:	0a c0       	rjmp	.+20     	; 0x4bde <vfprintf+0x594>
    4bca:	10 61       	ori	r17, 0x10	; 16
    4bcc:	14 fd       	sbrc	r17, 4
    4bce:	14 60       	ori	r17, 0x04	; 4
    4bd0:	20 e1       	ldi	r18, 0x10	; 16
    4bd2:	30 e0       	ldi	r19, 0x00	; 0
    4bd4:	04 c0       	rjmp	.+8      	; 0x4bde <vfprintf+0x594>
    4bd6:	14 fd       	sbrc	r17, 4
    4bd8:	16 60       	ori	r17, 0x06	; 6
    4bda:	20 e1       	ldi	r18, 0x10	; 16
    4bdc:	32 e0       	ldi	r19, 0x02	; 2
    4bde:	17 ff       	sbrs	r17, 7
    4be0:	08 c0       	rjmp	.+16     	; 0x4bf2 <vfprintf+0x5a8>
    4be2:	f6 01       	movw	r30, r12
    4be4:	60 81       	ld	r22, Z
    4be6:	71 81       	ldd	r23, Z+1	; 0x01
    4be8:	82 81       	ldd	r24, Z+2	; 0x02
    4bea:	93 81       	ldd	r25, Z+3	; 0x03
    4bec:	44 e0       	ldi	r20, 0x04	; 4
    4bee:	50 e0       	ldi	r21, 0x00	; 0
    4bf0:	08 c0       	rjmp	.+16     	; 0x4c02 <vfprintf+0x5b8>
    4bf2:	f6 01       	movw	r30, r12
    4bf4:	80 81       	ld	r24, Z
    4bf6:	91 81       	ldd	r25, Z+1	; 0x01
    4bf8:	bc 01       	movw	r22, r24
    4bfa:	80 e0       	ldi	r24, 0x00	; 0
    4bfc:	90 e0       	ldi	r25, 0x00	; 0
    4bfe:	42 e0       	ldi	r20, 0x02	; 2
    4c00:	50 e0       	ldi	r21, 0x00	; 0
    4c02:	c4 0e       	add	r12, r20
    4c04:	d5 1e       	adc	r13, r21
    4c06:	ae 01       	movw	r20, r28
    4c08:	4f 5f       	subi	r20, 0xFF	; 255
    4c0a:	5f 4f       	sbci	r21, 0xFF	; 255
    4c0c:	e4 d3       	rcall	.+1992   	; 0x53d6 <__ultoa_invert>
    4c0e:	e8 2e       	mov	r14, r24
    4c10:	58 89       	ldd	r21, Y+16	; 0x10
    4c12:	e5 1a       	sub	r14, r21
    4c14:	8f e7       	ldi	r24, 0x7F	; 127
    4c16:	f8 2e       	mov	r15, r24
    4c18:	f1 22       	and	r15, r17
    4c1a:	f6 fe       	sbrs	r15, 6
    4c1c:	0b c0       	rjmp	.+22     	; 0x4c34 <vfprintf+0x5ea>
    4c1e:	8e ef       	ldi	r24, 0xFE	; 254
    4c20:	f8 22       	and	r15, r24
    4c22:	e9 14       	cp	r14, r9
    4c24:	38 f4       	brcc	.+14     	; 0x4c34 <vfprintf+0x5ea>
    4c26:	f4 fe       	sbrs	r15, 4
    4c28:	07 c0       	rjmp	.+14     	; 0x4c38 <vfprintf+0x5ee>
    4c2a:	f2 fc       	sbrc	r15, 2
    4c2c:	05 c0       	rjmp	.+10     	; 0x4c38 <vfprintf+0x5ee>
    4c2e:	9f ee       	ldi	r25, 0xEF	; 239
    4c30:	f9 22       	and	r15, r25
    4c32:	02 c0       	rjmp	.+4      	; 0x4c38 <vfprintf+0x5ee>
    4c34:	1e 2d       	mov	r17, r14
    4c36:	01 c0       	rjmp	.+2      	; 0x4c3a <vfprintf+0x5f0>
    4c38:	19 2d       	mov	r17, r9
    4c3a:	f4 fe       	sbrs	r15, 4
    4c3c:	0d c0       	rjmp	.+26     	; 0x4c58 <vfprintf+0x60e>
    4c3e:	fe 01       	movw	r30, r28
    4c40:	ee 0d       	add	r30, r14
    4c42:	f1 1d       	adc	r31, r1
    4c44:	80 81       	ld	r24, Z
    4c46:	80 33       	cpi	r24, 0x30	; 48
    4c48:	19 f4       	brne	.+6      	; 0x4c50 <vfprintf+0x606>
    4c4a:	e9 ee       	ldi	r30, 0xE9	; 233
    4c4c:	fe 22       	and	r15, r30
    4c4e:	08 c0       	rjmp	.+16     	; 0x4c60 <vfprintf+0x616>
    4c50:	1f 5f       	subi	r17, 0xFF	; 255
    4c52:	f2 fe       	sbrs	r15, 2
    4c54:	05 c0       	rjmp	.+10     	; 0x4c60 <vfprintf+0x616>
    4c56:	03 c0       	rjmp	.+6      	; 0x4c5e <vfprintf+0x614>
    4c58:	8f 2d       	mov	r24, r15
    4c5a:	86 78       	andi	r24, 0x86	; 134
    4c5c:	09 f0       	breq	.+2      	; 0x4c60 <vfprintf+0x616>
    4c5e:	1f 5f       	subi	r17, 0xFF	; 255
    4c60:	0f 2d       	mov	r16, r15
    4c62:	f3 fc       	sbrc	r15, 3
    4c64:	13 c0       	rjmp	.+38     	; 0x4c8c <vfprintf+0x642>
    4c66:	f0 fe       	sbrs	r15, 0
    4c68:	0e c0       	rjmp	.+28     	; 0x4c86 <vfprintf+0x63c>
    4c6a:	18 15       	cp	r17, r8
    4c6c:	10 f0       	brcs	.+4      	; 0x4c72 <vfprintf+0x628>
    4c6e:	9e 2c       	mov	r9, r14
    4c70:	0a c0       	rjmp	.+20     	; 0x4c86 <vfprintf+0x63c>
    4c72:	9e 2c       	mov	r9, r14
    4c74:	98 0c       	add	r9, r8
    4c76:	91 1a       	sub	r9, r17
    4c78:	18 2d       	mov	r17, r8
    4c7a:	05 c0       	rjmp	.+10     	; 0x4c86 <vfprintf+0x63c>
    4c7c:	80 e2       	ldi	r24, 0x20	; 32
    4c7e:	90 e0       	ldi	r25, 0x00	; 0
    4c80:	b3 01       	movw	r22, r6
    4c82:	36 d3       	rcall	.+1644   	; 0x52f0 <fputc>
    4c84:	1f 5f       	subi	r17, 0xFF	; 255
    4c86:	18 15       	cp	r17, r8
    4c88:	c8 f3       	brcs	.-14     	; 0x4c7c <vfprintf+0x632>
    4c8a:	04 c0       	rjmp	.+8      	; 0x4c94 <vfprintf+0x64a>
    4c8c:	18 15       	cp	r17, r8
    4c8e:	10 f4       	brcc	.+4      	; 0x4c94 <vfprintf+0x64a>
    4c90:	81 1a       	sub	r8, r17
    4c92:	01 c0       	rjmp	.+2      	; 0x4c96 <vfprintf+0x64c>
    4c94:	88 24       	eor	r8, r8
    4c96:	04 ff       	sbrs	r16, 4
    4c98:	0e c0       	rjmp	.+28     	; 0x4cb6 <vfprintf+0x66c>
    4c9a:	80 e3       	ldi	r24, 0x30	; 48
    4c9c:	90 e0       	ldi	r25, 0x00	; 0
    4c9e:	b3 01       	movw	r22, r6
    4ca0:	27 d3       	rcall	.+1614   	; 0x52f0 <fputc>
    4ca2:	02 ff       	sbrs	r16, 2
    4ca4:	1b c0       	rjmp	.+54     	; 0x4cdc <vfprintf+0x692>
    4ca6:	01 fd       	sbrc	r16, 1
    4ca8:	03 c0       	rjmp	.+6      	; 0x4cb0 <vfprintf+0x666>
    4caa:	88 e7       	ldi	r24, 0x78	; 120
    4cac:	90 e0       	ldi	r25, 0x00	; 0
    4cae:	0e c0       	rjmp	.+28     	; 0x4ccc <vfprintf+0x682>
    4cb0:	88 e5       	ldi	r24, 0x58	; 88
    4cb2:	90 e0       	ldi	r25, 0x00	; 0
    4cb4:	0b c0       	rjmp	.+22     	; 0x4ccc <vfprintf+0x682>
    4cb6:	80 2f       	mov	r24, r16
    4cb8:	86 78       	andi	r24, 0x86	; 134
    4cba:	81 f0       	breq	.+32     	; 0x4cdc <vfprintf+0x692>
    4cbc:	01 ff       	sbrs	r16, 1
    4cbe:	02 c0       	rjmp	.+4      	; 0x4cc4 <vfprintf+0x67a>
    4cc0:	8b e2       	ldi	r24, 0x2B	; 43
    4cc2:	01 c0       	rjmp	.+2      	; 0x4cc6 <vfprintf+0x67c>
    4cc4:	80 e2       	ldi	r24, 0x20	; 32
    4cc6:	f7 fc       	sbrc	r15, 7
    4cc8:	8d e2       	ldi	r24, 0x2D	; 45
    4cca:	90 e0       	ldi	r25, 0x00	; 0
    4ccc:	b3 01       	movw	r22, r6
    4cce:	10 d3       	rcall	.+1568   	; 0x52f0 <fputc>
    4cd0:	05 c0       	rjmp	.+10     	; 0x4cdc <vfprintf+0x692>
    4cd2:	80 e3       	ldi	r24, 0x30	; 48
    4cd4:	90 e0       	ldi	r25, 0x00	; 0
    4cd6:	b3 01       	movw	r22, r6
    4cd8:	0b d3       	rcall	.+1558   	; 0x52f0 <fputc>
    4cda:	9a 94       	dec	r9
    4cdc:	e9 14       	cp	r14, r9
    4cde:	c8 f3       	brcs	.-14     	; 0x4cd2 <vfprintf+0x688>
    4ce0:	ea 94       	dec	r14
    4ce2:	e1 e0       	ldi	r30, 0x01	; 1
    4ce4:	f0 e0       	ldi	r31, 0x00	; 0
    4ce6:	ec 0f       	add	r30, r28
    4ce8:	fd 1f       	adc	r31, r29
    4cea:	ee 0d       	add	r30, r14
    4cec:	f1 1d       	adc	r31, r1
    4cee:	80 81       	ld	r24, Z
    4cf0:	90 e0       	ldi	r25, 0x00	; 0
    4cf2:	b3 01       	movw	r22, r6
    4cf4:	fd d2       	rcall	.+1530   	; 0x52f0 <fputc>
    4cf6:	ee 20       	and	r14, r14
    4cf8:	99 f7       	brne	.-26     	; 0x4ce0 <vfprintf+0x696>
    4cfa:	05 c0       	rjmp	.+10     	; 0x4d06 <vfprintf+0x6bc>
    4cfc:	80 e2       	ldi	r24, 0x20	; 32
    4cfe:	90 e0       	ldi	r25, 0x00	; 0
    4d00:	b3 01       	movw	r22, r6
    4d02:	f6 d2       	rcall	.+1516   	; 0x52f0 <fputc>
    4d04:	8a 94       	dec	r8
    4d06:	88 20       	and	r8, r8
    4d08:	c9 f7       	brne	.-14     	; 0x4cfc <vfprintf+0x6b2>
    4d0a:	b6 cc       	rjmp	.-1684   	; 0x4678 <vfprintf+0x2e>
    4d0c:	f3 01       	movw	r30, r6
    4d0e:	66 81       	ldd	r22, Z+6	; 0x06
    4d10:	77 81       	ldd	r23, Z+7	; 0x07
    4d12:	cb 01       	movw	r24, r22
    4d14:	61 96       	adiw	r28, 0x11	; 17
    4d16:	e2 e1       	ldi	r30, 0x12	; 18
    4d18:	70 c0       	rjmp	.+224    	; 0x4dfa <__epilogue_restores__>

00004d1a <__mulsi3>:
    4d1a:	62 9f       	mul	r22, r18
    4d1c:	d0 01       	movw	r26, r0
    4d1e:	73 9f       	mul	r23, r19
    4d20:	f0 01       	movw	r30, r0
    4d22:	82 9f       	mul	r24, r18
    4d24:	e0 0d       	add	r30, r0
    4d26:	f1 1d       	adc	r31, r1
    4d28:	64 9f       	mul	r22, r20
    4d2a:	e0 0d       	add	r30, r0
    4d2c:	f1 1d       	adc	r31, r1
    4d2e:	92 9f       	mul	r25, r18
    4d30:	f0 0d       	add	r31, r0
    4d32:	83 9f       	mul	r24, r19
    4d34:	f0 0d       	add	r31, r0
    4d36:	74 9f       	mul	r23, r20
    4d38:	f0 0d       	add	r31, r0
    4d3a:	65 9f       	mul	r22, r21
    4d3c:	f0 0d       	add	r31, r0
    4d3e:	99 27       	eor	r25, r25
    4d40:	72 9f       	mul	r23, r18
    4d42:	b0 0d       	add	r27, r0
    4d44:	e1 1d       	adc	r30, r1
    4d46:	f9 1f       	adc	r31, r25
    4d48:	63 9f       	mul	r22, r19
    4d4a:	b0 0d       	add	r27, r0
    4d4c:	e1 1d       	adc	r30, r1
    4d4e:	f9 1f       	adc	r31, r25
    4d50:	bd 01       	movw	r22, r26
    4d52:	cf 01       	movw	r24, r30
    4d54:	11 24       	eor	r1, r1
    4d56:	08 95       	ret

00004d58 <__divmodhi4>:
    4d58:	97 fb       	bst	r25, 7
    4d5a:	09 2e       	mov	r0, r25
    4d5c:	07 26       	eor	r0, r23
    4d5e:	0a d0       	rcall	.+20     	; 0x4d74 <__divmodhi4_neg1>
    4d60:	77 fd       	sbrc	r23, 7
    4d62:	04 d0       	rcall	.+8      	; 0x4d6c <__divmodhi4_neg2>
    4d64:	65 d0       	rcall	.+202    	; 0x4e30 <__udivmodhi4>
    4d66:	06 d0       	rcall	.+12     	; 0x4d74 <__divmodhi4_neg1>
    4d68:	00 20       	and	r0, r0
    4d6a:	1a f4       	brpl	.+6      	; 0x4d72 <__divmodhi4_exit>

00004d6c <__divmodhi4_neg2>:
    4d6c:	70 95       	com	r23
    4d6e:	61 95       	neg	r22
    4d70:	7f 4f       	sbci	r23, 0xFF	; 255

00004d72 <__divmodhi4_exit>:
    4d72:	08 95       	ret

00004d74 <__divmodhi4_neg1>:
    4d74:	f6 f7       	brtc	.-4      	; 0x4d72 <__divmodhi4_exit>
    4d76:	90 95       	com	r25
    4d78:	81 95       	neg	r24
    4d7a:	9f 4f       	sbci	r25, 0xFF	; 255
    4d7c:	08 95       	ret

00004d7e <__udivmodsi4>:
    4d7e:	a1 e2       	ldi	r26, 0x21	; 33
    4d80:	1a 2e       	mov	r1, r26
    4d82:	aa 1b       	sub	r26, r26
    4d84:	bb 1b       	sub	r27, r27
    4d86:	fd 01       	movw	r30, r26
    4d88:	0d c0       	rjmp	.+26     	; 0x4da4 <__udivmodsi4_ep>

00004d8a <__udivmodsi4_loop>:
    4d8a:	aa 1f       	adc	r26, r26
    4d8c:	bb 1f       	adc	r27, r27
    4d8e:	ee 1f       	adc	r30, r30
    4d90:	ff 1f       	adc	r31, r31
    4d92:	a2 17       	cp	r26, r18
    4d94:	b3 07       	cpc	r27, r19
    4d96:	e4 07       	cpc	r30, r20
    4d98:	f5 07       	cpc	r31, r21
    4d9a:	20 f0       	brcs	.+8      	; 0x4da4 <__udivmodsi4_ep>
    4d9c:	a2 1b       	sub	r26, r18
    4d9e:	b3 0b       	sbc	r27, r19
    4da0:	e4 0b       	sbc	r30, r20
    4da2:	f5 0b       	sbc	r31, r21

00004da4 <__udivmodsi4_ep>:
    4da4:	66 1f       	adc	r22, r22
    4da6:	77 1f       	adc	r23, r23
    4da8:	88 1f       	adc	r24, r24
    4daa:	99 1f       	adc	r25, r25
    4dac:	1a 94       	dec	r1
    4dae:	69 f7       	brne	.-38     	; 0x4d8a <__udivmodsi4_loop>
    4db0:	60 95       	com	r22
    4db2:	70 95       	com	r23
    4db4:	80 95       	com	r24
    4db6:	90 95       	com	r25
    4db8:	9b 01       	movw	r18, r22
    4dba:	ac 01       	movw	r20, r24
    4dbc:	bd 01       	movw	r22, r26
    4dbe:	cf 01       	movw	r24, r30
    4dc0:	08 95       	ret

00004dc2 <__prologue_saves__>:
    4dc2:	2f 92       	push	r2
    4dc4:	3f 92       	push	r3
    4dc6:	4f 92       	push	r4
    4dc8:	5f 92       	push	r5
    4dca:	6f 92       	push	r6
    4dcc:	7f 92       	push	r7
    4dce:	8f 92       	push	r8
    4dd0:	9f 92       	push	r9
    4dd2:	af 92       	push	r10
    4dd4:	bf 92       	push	r11
    4dd6:	cf 92       	push	r12
    4dd8:	df 92       	push	r13
    4dda:	ef 92       	push	r14
    4ddc:	ff 92       	push	r15
    4dde:	0f 93       	push	r16
    4de0:	1f 93       	push	r17
    4de2:	cf 93       	push	r28
    4de4:	df 93       	push	r29
    4de6:	cd b7       	in	r28, 0x3d	; 61
    4de8:	de b7       	in	r29, 0x3e	; 62
    4dea:	ca 1b       	sub	r28, r26
    4dec:	db 0b       	sbc	r29, r27
    4dee:	0f b6       	in	r0, 0x3f	; 63
    4df0:	f8 94       	cli
    4df2:	de bf       	out	0x3e, r29	; 62
    4df4:	0f be       	out	0x3f, r0	; 63
    4df6:	cd bf       	out	0x3d, r28	; 61
    4df8:	09 94       	ijmp

00004dfa <__epilogue_restores__>:
    4dfa:	2a 88       	ldd	r2, Y+18	; 0x12
    4dfc:	39 88       	ldd	r3, Y+17	; 0x11
    4dfe:	48 88       	ldd	r4, Y+16	; 0x10
    4e00:	5f 84       	ldd	r5, Y+15	; 0x0f
    4e02:	6e 84       	ldd	r6, Y+14	; 0x0e
    4e04:	7d 84       	ldd	r7, Y+13	; 0x0d
    4e06:	8c 84       	ldd	r8, Y+12	; 0x0c
    4e08:	9b 84       	ldd	r9, Y+11	; 0x0b
    4e0a:	aa 84       	ldd	r10, Y+10	; 0x0a
    4e0c:	b9 84       	ldd	r11, Y+9	; 0x09
    4e0e:	c8 84       	ldd	r12, Y+8	; 0x08
    4e10:	df 80       	ldd	r13, Y+7	; 0x07
    4e12:	ee 80       	ldd	r14, Y+6	; 0x06
    4e14:	fd 80       	ldd	r15, Y+5	; 0x05
    4e16:	0c 81       	ldd	r16, Y+4	; 0x04
    4e18:	1b 81       	ldd	r17, Y+3	; 0x03
    4e1a:	aa 81       	ldd	r26, Y+2	; 0x02
    4e1c:	b9 81       	ldd	r27, Y+1	; 0x01
    4e1e:	ce 0f       	add	r28, r30
    4e20:	d1 1d       	adc	r29, r1
    4e22:	0f b6       	in	r0, 0x3f	; 63
    4e24:	f8 94       	cli
    4e26:	de bf       	out	0x3e, r29	; 62
    4e28:	0f be       	out	0x3f, r0	; 63
    4e2a:	cd bf       	out	0x3d, r28	; 61
    4e2c:	ed 01       	movw	r28, r26
    4e2e:	08 95       	ret

00004e30 <__udivmodhi4>:
    4e30:	aa 1b       	sub	r26, r26
    4e32:	bb 1b       	sub	r27, r27
    4e34:	51 e1       	ldi	r21, 0x11	; 17
    4e36:	07 c0       	rjmp	.+14     	; 0x4e46 <__udivmodhi4_ep>

00004e38 <__udivmodhi4_loop>:
    4e38:	aa 1f       	adc	r26, r26
    4e3a:	bb 1f       	adc	r27, r27
    4e3c:	a6 17       	cp	r26, r22
    4e3e:	b7 07       	cpc	r27, r23
    4e40:	10 f0       	brcs	.+4      	; 0x4e46 <__udivmodhi4_ep>
    4e42:	a6 1b       	sub	r26, r22
    4e44:	b7 0b       	sbc	r27, r23

00004e46 <__udivmodhi4_ep>:
    4e46:	88 1f       	adc	r24, r24
    4e48:	99 1f       	adc	r25, r25
    4e4a:	5a 95       	dec	r21
    4e4c:	a9 f7       	brne	.-22     	; 0x4e38 <__udivmodhi4_loop>
    4e4e:	80 95       	com	r24
    4e50:	90 95       	com	r25
    4e52:	bc 01       	movw	r22, r24
    4e54:	cd 01       	movw	r24, r26
    4e56:	08 95       	ret

00004e58 <malloc>:
    4e58:	cf 93       	push	r28
    4e5a:	df 93       	push	r29
    4e5c:	bc 01       	movw	r22, r24
    4e5e:	82 30       	cpi	r24, 0x02	; 2
    4e60:	91 05       	cpc	r25, r1
    4e62:	10 f4       	brcc	.+4      	; 0x4e68 <malloc+0x10>
    4e64:	62 e0       	ldi	r22, 0x02	; 2
    4e66:	70 e0       	ldi	r23, 0x00	; 0
    4e68:	a0 91 f1 04 	lds	r26, 0x04F1
    4e6c:	b0 91 f2 04 	lds	r27, 0x04F2
    4e70:	ed 01       	movw	r28, r26
    4e72:	e0 e0       	ldi	r30, 0x00	; 0
    4e74:	f0 e0       	ldi	r31, 0x00	; 0
    4e76:	40 e0       	ldi	r20, 0x00	; 0
    4e78:	50 e0       	ldi	r21, 0x00	; 0
    4e7a:	21 c0       	rjmp	.+66     	; 0x4ebe <malloc+0x66>
    4e7c:	88 81       	ld	r24, Y
    4e7e:	99 81       	ldd	r25, Y+1	; 0x01
    4e80:	86 17       	cp	r24, r22
    4e82:	97 07       	cpc	r25, r23
    4e84:	69 f4       	brne	.+26     	; 0x4ea0 <malloc+0x48>
    4e86:	8a 81       	ldd	r24, Y+2	; 0x02
    4e88:	9b 81       	ldd	r25, Y+3	; 0x03
    4e8a:	30 97       	sbiw	r30, 0x00	; 0
    4e8c:	19 f0       	breq	.+6      	; 0x4e94 <malloc+0x3c>
    4e8e:	93 83       	std	Z+3, r25	; 0x03
    4e90:	82 83       	std	Z+2, r24	; 0x02
    4e92:	04 c0       	rjmp	.+8      	; 0x4e9c <malloc+0x44>
    4e94:	90 93 f2 04 	sts	0x04F2, r25
    4e98:	80 93 f1 04 	sts	0x04F1, r24
    4e9c:	fe 01       	movw	r30, r28
    4e9e:	34 c0       	rjmp	.+104    	; 0x4f08 <malloc+0xb0>
    4ea0:	68 17       	cp	r22, r24
    4ea2:	79 07       	cpc	r23, r25
    4ea4:	38 f4       	brcc	.+14     	; 0x4eb4 <malloc+0x5c>
    4ea6:	41 15       	cp	r20, r1
    4ea8:	51 05       	cpc	r21, r1
    4eaa:	19 f0       	breq	.+6      	; 0x4eb2 <malloc+0x5a>
    4eac:	84 17       	cp	r24, r20
    4eae:	95 07       	cpc	r25, r21
    4eb0:	08 f4       	brcc	.+2      	; 0x4eb4 <malloc+0x5c>
    4eb2:	ac 01       	movw	r20, r24
    4eb4:	fe 01       	movw	r30, r28
    4eb6:	8a 81       	ldd	r24, Y+2	; 0x02
    4eb8:	9b 81       	ldd	r25, Y+3	; 0x03
    4eba:	9c 01       	movw	r18, r24
    4ebc:	e9 01       	movw	r28, r18
    4ebe:	20 97       	sbiw	r28, 0x00	; 0
    4ec0:	e9 f6       	brne	.-70     	; 0x4e7c <malloc+0x24>
    4ec2:	41 15       	cp	r20, r1
    4ec4:	51 05       	cpc	r21, r1
    4ec6:	a9 f1       	breq	.+106    	; 0x4f32 <malloc+0xda>
    4ec8:	ca 01       	movw	r24, r20
    4eca:	86 1b       	sub	r24, r22
    4ecc:	97 0b       	sbc	r25, r23
    4ece:	04 97       	sbiw	r24, 0x04	; 4
    4ed0:	08 f4       	brcc	.+2      	; 0x4ed4 <malloc+0x7c>
    4ed2:	ba 01       	movw	r22, r20
    4ed4:	e0 e0       	ldi	r30, 0x00	; 0
    4ed6:	f0 e0       	ldi	r31, 0x00	; 0
    4ed8:	2a c0       	rjmp	.+84     	; 0x4f2e <malloc+0xd6>
    4eda:	8d 91       	ld	r24, X+
    4edc:	9c 91       	ld	r25, X
    4ede:	11 97       	sbiw	r26, 0x01	; 1
    4ee0:	84 17       	cp	r24, r20
    4ee2:	95 07       	cpc	r25, r21
    4ee4:	f9 f4       	brne	.+62     	; 0x4f24 <malloc+0xcc>
    4ee6:	64 17       	cp	r22, r20
    4ee8:	75 07       	cpc	r23, r21
    4eea:	81 f4       	brne	.+32     	; 0x4f0c <malloc+0xb4>
    4eec:	12 96       	adiw	r26, 0x02	; 2
    4eee:	8d 91       	ld	r24, X+
    4ef0:	9c 91       	ld	r25, X
    4ef2:	13 97       	sbiw	r26, 0x03	; 3
    4ef4:	30 97       	sbiw	r30, 0x00	; 0
    4ef6:	19 f0       	breq	.+6      	; 0x4efe <malloc+0xa6>
    4ef8:	93 83       	std	Z+3, r25	; 0x03
    4efa:	82 83       	std	Z+2, r24	; 0x02
    4efc:	04 c0       	rjmp	.+8      	; 0x4f06 <malloc+0xae>
    4efe:	90 93 f2 04 	sts	0x04F2, r25
    4f02:	80 93 f1 04 	sts	0x04F1, r24
    4f06:	fd 01       	movw	r30, r26
    4f08:	32 96       	adiw	r30, 0x02	; 2
    4f0a:	4f c0       	rjmp	.+158    	; 0x4faa <malloc+0x152>
    4f0c:	ca 01       	movw	r24, r20
    4f0e:	86 1b       	sub	r24, r22
    4f10:	97 0b       	sbc	r25, r23
    4f12:	fd 01       	movw	r30, r26
    4f14:	e8 0f       	add	r30, r24
    4f16:	f9 1f       	adc	r31, r25
    4f18:	61 93       	st	Z+, r22
    4f1a:	71 93       	st	Z+, r23
    4f1c:	02 97       	sbiw	r24, 0x02	; 2
    4f1e:	8d 93       	st	X+, r24
    4f20:	9c 93       	st	X, r25
    4f22:	43 c0       	rjmp	.+134    	; 0x4faa <malloc+0x152>
    4f24:	fd 01       	movw	r30, r26
    4f26:	82 81       	ldd	r24, Z+2	; 0x02
    4f28:	93 81       	ldd	r25, Z+3	; 0x03
    4f2a:	9c 01       	movw	r18, r24
    4f2c:	d9 01       	movw	r26, r18
    4f2e:	10 97       	sbiw	r26, 0x00	; 0
    4f30:	a1 f6       	brne	.-88     	; 0x4eda <malloc+0x82>
    4f32:	80 91 ef 04 	lds	r24, 0x04EF
    4f36:	90 91 f0 04 	lds	r25, 0x04F0
    4f3a:	89 2b       	or	r24, r25
    4f3c:	41 f4       	brne	.+16     	; 0x4f4e <malloc+0xf6>
    4f3e:	80 91 fa 01 	lds	r24, 0x01FA
    4f42:	90 91 fb 01 	lds	r25, 0x01FB
    4f46:	90 93 f0 04 	sts	0x04F0, r25
    4f4a:	80 93 ef 04 	sts	0x04EF, r24
    4f4e:	40 91 fc 01 	lds	r20, 0x01FC
    4f52:	50 91 fd 01 	lds	r21, 0x01FD
    4f56:	41 15       	cp	r20, r1
    4f58:	51 05       	cpc	r21, r1
    4f5a:	41 f4       	brne	.+16     	; 0x4f6c <malloc+0x114>
    4f5c:	4d b7       	in	r20, 0x3d	; 61
    4f5e:	5e b7       	in	r21, 0x3e	; 62
    4f60:	80 91 f8 01 	lds	r24, 0x01F8
    4f64:	90 91 f9 01 	lds	r25, 0x01F9
    4f68:	48 1b       	sub	r20, r24
    4f6a:	59 0b       	sbc	r21, r25
    4f6c:	20 91 ef 04 	lds	r18, 0x04EF
    4f70:	30 91 f0 04 	lds	r19, 0x04F0
    4f74:	24 17       	cp	r18, r20
    4f76:	35 07       	cpc	r19, r21
    4f78:	b0 f4       	brcc	.+44     	; 0x4fa6 <malloc+0x14e>
    4f7a:	ca 01       	movw	r24, r20
    4f7c:	82 1b       	sub	r24, r18
    4f7e:	93 0b       	sbc	r25, r19
    4f80:	86 17       	cp	r24, r22
    4f82:	97 07       	cpc	r25, r23
    4f84:	80 f0       	brcs	.+32     	; 0x4fa6 <malloc+0x14e>
    4f86:	ab 01       	movw	r20, r22
    4f88:	4e 5f       	subi	r20, 0xFE	; 254
    4f8a:	5f 4f       	sbci	r21, 0xFF	; 255
    4f8c:	84 17       	cp	r24, r20
    4f8e:	95 07       	cpc	r25, r21
    4f90:	50 f0       	brcs	.+20     	; 0x4fa6 <malloc+0x14e>
    4f92:	42 0f       	add	r20, r18
    4f94:	53 1f       	adc	r21, r19
    4f96:	50 93 f0 04 	sts	0x04F0, r21
    4f9a:	40 93 ef 04 	sts	0x04EF, r20
    4f9e:	f9 01       	movw	r30, r18
    4fa0:	61 93       	st	Z+, r22
    4fa2:	71 93       	st	Z+, r23
    4fa4:	02 c0       	rjmp	.+4      	; 0x4faa <malloc+0x152>
    4fa6:	e0 e0       	ldi	r30, 0x00	; 0
    4fa8:	f0 e0       	ldi	r31, 0x00	; 0
    4faa:	cf 01       	movw	r24, r30
    4fac:	df 91       	pop	r29
    4fae:	cf 91       	pop	r28
    4fb0:	08 95       	ret

00004fb2 <free>:
    4fb2:	cf 93       	push	r28
    4fb4:	df 93       	push	r29
    4fb6:	00 97       	sbiw	r24, 0x00	; 0
    4fb8:	09 f4       	brne	.+2      	; 0x4fbc <free+0xa>
    4fba:	50 c0       	rjmp	.+160    	; 0x505c <free+0xaa>
    4fbc:	ec 01       	movw	r28, r24
    4fbe:	22 97       	sbiw	r28, 0x02	; 2
    4fc0:	1b 82       	std	Y+3, r1	; 0x03
    4fc2:	1a 82       	std	Y+2, r1	; 0x02
    4fc4:	a0 91 f1 04 	lds	r26, 0x04F1
    4fc8:	b0 91 f2 04 	lds	r27, 0x04F2
    4fcc:	10 97       	sbiw	r26, 0x00	; 0
    4fce:	09 f1       	breq	.+66     	; 0x5012 <free+0x60>
    4fd0:	40 e0       	ldi	r20, 0x00	; 0
    4fd2:	50 e0       	ldi	r21, 0x00	; 0
    4fd4:	ac 17       	cp	r26, r28
    4fd6:	bd 07       	cpc	r27, r29
    4fd8:	08 f1       	brcs	.+66     	; 0x501c <free+0x6a>
    4fda:	bb 83       	std	Y+3, r27	; 0x03
    4fdc:	aa 83       	std	Y+2, r26	; 0x02
    4fde:	fe 01       	movw	r30, r28
    4fe0:	21 91       	ld	r18, Z+
    4fe2:	31 91       	ld	r19, Z+
    4fe4:	e2 0f       	add	r30, r18
    4fe6:	f3 1f       	adc	r31, r19
    4fe8:	ae 17       	cp	r26, r30
    4fea:	bf 07       	cpc	r27, r31
    4fec:	79 f4       	brne	.+30     	; 0x500c <free+0x5a>
    4fee:	8d 91       	ld	r24, X+
    4ff0:	9c 91       	ld	r25, X
    4ff2:	11 97       	sbiw	r26, 0x01	; 1
    4ff4:	28 0f       	add	r18, r24
    4ff6:	39 1f       	adc	r19, r25
    4ff8:	2e 5f       	subi	r18, 0xFE	; 254
    4ffa:	3f 4f       	sbci	r19, 0xFF	; 255
    4ffc:	39 83       	std	Y+1, r19	; 0x01
    4ffe:	28 83       	st	Y, r18
    5000:	12 96       	adiw	r26, 0x02	; 2
    5002:	8d 91       	ld	r24, X+
    5004:	9c 91       	ld	r25, X
    5006:	13 97       	sbiw	r26, 0x03	; 3
    5008:	9b 83       	std	Y+3, r25	; 0x03
    500a:	8a 83       	std	Y+2, r24	; 0x02
    500c:	41 15       	cp	r20, r1
    500e:	51 05       	cpc	r21, r1
    5010:	71 f4       	brne	.+28     	; 0x502e <free+0x7c>
    5012:	d0 93 f2 04 	sts	0x04F2, r29
    5016:	c0 93 f1 04 	sts	0x04F1, r28
    501a:	20 c0       	rjmp	.+64     	; 0x505c <free+0xaa>
    501c:	12 96       	adiw	r26, 0x02	; 2
    501e:	8d 91       	ld	r24, X+
    5020:	9c 91       	ld	r25, X
    5022:	13 97       	sbiw	r26, 0x03	; 3
    5024:	ad 01       	movw	r20, r26
    5026:	00 97       	sbiw	r24, 0x00	; 0
    5028:	11 f0       	breq	.+4      	; 0x502e <free+0x7c>
    502a:	dc 01       	movw	r26, r24
    502c:	d3 cf       	rjmp	.-90     	; 0x4fd4 <free+0x22>
    502e:	fa 01       	movw	r30, r20
    5030:	d3 83       	std	Z+3, r29	; 0x03
    5032:	c2 83       	std	Z+2, r28	; 0x02
    5034:	21 91       	ld	r18, Z+
    5036:	31 91       	ld	r19, Z+
    5038:	e2 0f       	add	r30, r18
    503a:	f3 1f       	adc	r31, r19
    503c:	ce 17       	cp	r28, r30
    503e:	df 07       	cpc	r29, r31
    5040:	69 f4       	brne	.+26     	; 0x505c <free+0xaa>
    5042:	88 81       	ld	r24, Y
    5044:	99 81       	ldd	r25, Y+1	; 0x01
    5046:	28 0f       	add	r18, r24
    5048:	39 1f       	adc	r19, r25
    504a:	2e 5f       	subi	r18, 0xFE	; 254
    504c:	3f 4f       	sbci	r19, 0xFF	; 255
    504e:	fa 01       	movw	r30, r20
    5050:	31 83       	std	Z+1, r19	; 0x01
    5052:	20 83       	st	Z, r18
    5054:	8a 81       	ldd	r24, Y+2	; 0x02
    5056:	9b 81       	ldd	r25, Y+3	; 0x03
    5058:	93 83       	std	Z+3, r25	; 0x03
    505a:	82 83       	std	Z+2, r24	; 0x02
    505c:	df 91       	pop	r29
    505e:	cf 91       	pop	r28
    5060:	08 95       	ret

00005062 <do_rand>:
    5062:	a0 e0       	ldi	r26, 0x00	; 0
    5064:	b0 e0       	ldi	r27, 0x00	; 0
    5066:	e6 e3       	ldi	r30, 0x36	; 54
    5068:	f8 e2       	ldi	r31, 0x28	; 40
    506a:	b3 ce       	rjmp	.-666    	; 0x4dd2 <__prologue_saves__+0x10>
    506c:	ec 01       	movw	r28, r24
    506e:	a8 80       	ld	r10, Y
    5070:	b9 80       	ldd	r11, Y+1	; 0x01
    5072:	ca 80       	ldd	r12, Y+2	; 0x02
    5074:	db 80       	ldd	r13, Y+3	; 0x03
    5076:	a1 14       	cp	r10, r1
    5078:	b1 04       	cpc	r11, r1
    507a:	c1 04       	cpc	r12, r1
    507c:	d1 04       	cpc	r13, r1
    507e:	41 f4       	brne	.+16     	; 0x5090 <do_rand+0x2e>
    5080:	84 e2       	ldi	r24, 0x24	; 36
    5082:	a8 2e       	mov	r10, r24
    5084:	89 ed       	ldi	r24, 0xD9	; 217
    5086:	b8 2e       	mov	r11, r24
    5088:	8b e5       	ldi	r24, 0x5B	; 91
    508a:	c8 2e       	mov	r12, r24
    508c:	87 e0       	ldi	r24, 0x07	; 7
    508e:	d8 2e       	mov	r13, r24
    5090:	c6 01       	movw	r24, r12
    5092:	b5 01       	movw	r22, r10
    5094:	2d e1       	ldi	r18, 0x1D	; 29
    5096:	33 ef       	ldi	r19, 0xF3	; 243
    5098:	41 e0       	ldi	r20, 0x01	; 1
    509a:	50 e0       	ldi	r21, 0x00	; 0
    509c:	fa d1       	rcall	.+1012   	; 0x5492 <__divmodsi4>
    509e:	27 ea       	ldi	r18, 0xA7	; 167
    50a0:	31 e4       	ldi	r19, 0x41	; 65
    50a2:	40 e0       	ldi	r20, 0x00	; 0
    50a4:	50 e0       	ldi	r21, 0x00	; 0
    50a6:	39 de       	rcall	.-910    	; 0x4d1a <__mulsi3>
    50a8:	7b 01       	movw	r14, r22
    50aa:	8c 01       	movw	r16, r24
    50ac:	c6 01       	movw	r24, r12
    50ae:	b5 01       	movw	r22, r10
    50b0:	2d e1       	ldi	r18, 0x1D	; 29
    50b2:	33 ef       	ldi	r19, 0xF3	; 243
    50b4:	41 e0       	ldi	r20, 0x01	; 1
    50b6:	50 e0       	ldi	r21, 0x00	; 0
    50b8:	ec d1       	rcall	.+984    	; 0x5492 <__divmodsi4>
    50ba:	ca 01       	movw	r24, r20
    50bc:	b9 01       	movw	r22, r18
    50be:	2c ee       	ldi	r18, 0xEC	; 236
    50c0:	34 ef       	ldi	r19, 0xF4	; 244
    50c2:	4f ef       	ldi	r20, 0xFF	; 255
    50c4:	5f ef       	ldi	r21, 0xFF	; 255
    50c6:	29 de       	rcall	.-942    	; 0x4d1a <__mulsi3>
    50c8:	6e 0d       	add	r22, r14
    50ca:	7f 1d       	adc	r23, r15
    50cc:	80 1f       	adc	r24, r16
    50ce:	91 1f       	adc	r25, r17
    50d0:	97 ff       	sbrs	r25, 7
    50d2:	04 c0       	rjmp	.+8      	; 0x50dc <do_rand+0x7a>
    50d4:	61 50       	subi	r22, 0x01	; 1
    50d6:	70 40       	sbci	r23, 0x00	; 0
    50d8:	80 40       	sbci	r24, 0x00	; 0
    50da:	90 48       	sbci	r25, 0x80	; 128
    50dc:	68 83       	st	Y, r22
    50de:	79 83       	std	Y+1, r23	; 0x01
    50e0:	8a 83       	std	Y+2, r24	; 0x02
    50e2:	9b 83       	std	Y+3, r25	; 0x03
    50e4:	9b 01       	movw	r18, r22
    50e6:	3f 77       	andi	r19, 0x7F	; 127
    50e8:	c9 01       	movw	r24, r18
    50ea:	cd b7       	in	r28, 0x3d	; 61
    50ec:	de b7       	in	r29, 0x3e	; 62
    50ee:	ea e0       	ldi	r30, 0x0A	; 10
    50f0:	8c ce       	rjmp	.-744    	; 0x4e0a <__epilogue_restores__+0x10>

000050f2 <rand_r>:
    50f2:	b7 df       	rcall	.-146    	; 0x5062 <do_rand>
    50f4:	08 95       	ret

000050f6 <rand>:
    50f6:	8e ef       	ldi	r24, 0xFE	; 254
    50f8:	91 e0       	ldi	r25, 0x01	; 1
    50fa:	b3 df       	rcall	.-154    	; 0x5062 <do_rand>
    50fc:	08 95       	ret

000050fe <srand>:
    50fe:	a0 e0       	ldi	r26, 0x00	; 0
    5100:	b0 e0       	ldi	r27, 0x00	; 0
    5102:	80 93 fe 01 	sts	0x01FE, r24
    5106:	90 93 ff 01 	sts	0x01FF, r25
    510a:	a0 93 00 02 	sts	0x0200, r26
    510e:	b0 93 01 02 	sts	0x0201, r27
    5112:	08 95       	ret

00005114 <__ftoa_engine>:
    5114:	28 30       	cpi	r18, 0x08	; 8
    5116:	08 f0       	brcs	.+2      	; 0x511a <__ftoa_engine+0x6>
    5118:	27 e0       	ldi	r18, 0x07	; 7
    511a:	33 27       	eor	r19, r19
    511c:	da 01       	movw	r26, r20
    511e:	99 0f       	add	r25, r25
    5120:	31 1d       	adc	r19, r1
    5122:	87 fd       	sbrc	r24, 7
    5124:	91 60       	ori	r25, 0x01	; 1
    5126:	00 96       	adiw	r24, 0x00	; 0
    5128:	61 05       	cpc	r22, r1
    512a:	71 05       	cpc	r23, r1
    512c:	39 f4       	brne	.+14     	; 0x513c <__ftoa_engine+0x28>
    512e:	32 60       	ori	r19, 0x02	; 2
    5130:	2e 5f       	subi	r18, 0xFE	; 254
    5132:	3d 93       	st	X+, r19
    5134:	30 e3       	ldi	r19, 0x30	; 48
    5136:	2a 95       	dec	r18
    5138:	e1 f7       	brne	.-8      	; 0x5132 <__ftoa_engine+0x1e>
    513a:	08 95       	ret
    513c:	9f 3f       	cpi	r25, 0xFF	; 255
    513e:	30 f0       	brcs	.+12     	; 0x514c <__ftoa_engine+0x38>
    5140:	80 38       	cpi	r24, 0x80	; 128
    5142:	71 05       	cpc	r23, r1
    5144:	61 05       	cpc	r22, r1
    5146:	09 f0       	breq	.+2      	; 0x514a <__ftoa_engine+0x36>
    5148:	3c 5f       	subi	r19, 0xFC	; 252
    514a:	3c 5f       	subi	r19, 0xFC	; 252
    514c:	3d 93       	st	X+, r19
    514e:	91 30       	cpi	r25, 0x01	; 1
    5150:	08 f0       	brcs	.+2      	; 0x5154 <__ftoa_engine+0x40>
    5152:	80 68       	ori	r24, 0x80	; 128
    5154:	91 1d       	adc	r25, r1
    5156:	df 93       	push	r29
    5158:	cf 93       	push	r28
    515a:	1f 93       	push	r17
    515c:	0f 93       	push	r16
    515e:	ff 92       	push	r15
    5160:	ef 92       	push	r14
    5162:	19 2f       	mov	r17, r25
    5164:	98 7f       	andi	r25, 0xF8	; 248
    5166:	96 95       	lsr	r25
    5168:	e9 2f       	mov	r30, r25
    516a:	96 95       	lsr	r25
    516c:	96 95       	lsr	r25
    516e:	e9 0f       	add	r30, r25
    5170:	ff 27       	eor	r31, r31
    5172:	ef 53       	subi	r30, 0x3F	; 63
    5174:	fa 4f       	sbci	r31, 0xFA	; 250
    5176:	99 27       	eor	r25, r25
    5178:	33 27       	eor	r19, r19
    517a:	ee 24       	eor	r14, r14
    517c:	ff 24       	eor	r15, r15
    517e:	a7 01       	movw	r20, r14
    5180:	e7 01       	movw	r28, r14
    5182:	05 90       	lpm	r0, Z+
    5184:	08 94       	sec
    5186:	07 94       	ror	r0
    5188:	28 f4       	brcc	.+10     	; 0x5194 <__ftoa_engine+0x80>
    518a:	36 0f       	add	r19, r22
    518c:	e7 1e       	adc	r14, r23
    518e:	f8 1e       	adc	r15, r24
    5190:	49 1f       	adc	r20, r25
    5192:	51 1d       	adc	r21, r1
    5194:	66 0f       	add	r22, r22
    5196:	77 1f       	adc	r23, r23
    5198:	88 1f       	adc	r24, r24
    519a:	99 1f       	adc	r25, r25
    519c:	06 94       	lsr	r0
    519e:	a1 f7       	brne	.-24     	; 0x5188 <__ftoa_engine+0x74>
    51a0:	05 90       	lpm	r0, Z+
    51a2:	07 94       	ror	r0
    51a4:	28 f4       	brcc	.+10     	; 0x51b0 <__ftoa_engine+0x9c>
    51a6:	e7 0e       	add	r14, r23
    51a8:	f8 1e       	adc	r15, r24
    51aa:	49 1f       	adc	r20, r25
    51ac:	56 1f       	adc	r21, r22
    51ae:	c1 1d       	adc	r28, r1
    51b0:	77 0f       	add	r23, r23
    51b2:	88 1f       	adc	r24, r24
    51b4:	99 1f       	adc	r25, r25
    51b6:	66 1f       	adc	r22, r22
    51b8:	06 94       	lsr	r0
    51ba:	a1 f7       	brne	.-24     	; 0x51a4 <__ftoa_engine+0x90>
    51bc:	05 90       	lpm	r0, Z+
    51be:	07 94       	ror	r0
    51c0:	28 f4       	brcc	.+10     	; 0x51cc <__ftoa_engine+0xb8>
    51c2:	f8 0e       	add	r15, r24
    51c4:	49 1f       	adc	r20, r25
    51c6:	56 1f       	adc	r21, r22
    51c8:	c7 1f       	adc	r28, r23
    51ca:	d1 1d       	adc	r29, r1
    51cc:	88 0f       	add	r24, r24
    51ce:	99 1f       	adc	r25, r25
    51d0:	66 1f       	adc	r22, r22
    51d2:	77 1f       	adc	r23, r23
    51d4:	06 94       	lsr	r0
    51d6:	a1 f7       	brne	.-24     	; 0x51c0 <__ftoa_engine+0xac>
    51d8:	05 90       	lpm	r0, Z+
    51da:	07 94       	ror	r0
    51dc:	20 f4       	brcc	.+8      	; 0x51e6 <__ftoa_engine+0xd2>
    51de:	49 0f       	add	r20, r25
    51e0:	56 1f       	adc	r21, r22
    51e2:	c7 1f       	adc	r28, r23
    51e4:	d8 1f       	adc	r29, r24
    51e6:	99 0f       	add	r25, r25
    51e8:	66 1f       	adc	r22, r22
    51ea:	77 1f       	adc	r23, r23
    51ec:	88 1f       	adc	r24, r24
    51ee:	06 94       	lsr	r0
    51f0:	a9 f7       	brne	.-22     	; 0x51dc <__ftoa_engine+0xc8>
    51f2:	84 91       	lpm	r24, Z+
    51f4:	10 95       	com	r17
    51f6:	17 70       	andi	r17, 0x07	; 7
    51f8:	41 f0       	breq	.+16     	; 0x520a <__ftoa_engine+0xf6>
    51fa:	d6 95       	lsr	r29
    51fc:	c7 95       	ror	r28
    51fe:	57 95       	ror	r21
    5200:	47 95       	ror	r20
    5202:	f7 94       	ror	r15
    5204:	e7 94       	ror	r14
    5206:	1a 95       	dec	r17
    5208:	c1 f7       	brne	.-16     	; 0x51fa <__ftoa_engine+0xe6>
    520a:	e7 e6       	ldi	r30, 0x67	; 103
    520c:	f5 e0       	ldi	r31, 0x05	; 5
    520e:	68 94       	set
    5210:	15 90       	lpm	r1, Z+
    5212:	15 91       	lpm	r17, Z+
    5214:	35 91       	lpm	r19, Z+
    5216:	65 91       	lpm	r22, Z+
    5218:	95 91       	lpm	r25, Z+
    521a:	05 90       	lpm	r0, Z+
    521c:	7f e2       	ldi	r23, 0x2F	; 47
    521e:	73 95       	inc	r23
    5220:	e1 18       	sub	r14, r1
    5222:	f1 0a       	sbc	r15, r17
    5224:	43 0b       	sbc	r20, r19
    5226:	56 0b       	sbc	r21, r22
    5228:	c9 0b       	sbc	r28, r25
    522a:	d0 09       	sbc	r29, r0
    522c:	c0 f7       	brcc	.-16     	; 0x521e <__ftoa_engine+0x10a>
    522e:	e1 0c       	add	r14, r1
    5230:	f1 1e       	adc	r15, r17
    5232:	43 1f       	adc	r20, r19
    5234:	56 1f       	adc	r21, r22
    5236:	c9 1f       	adc	r28, r25
    5238:	d0 1d       	adc	r29, r0
    523a:	7e f4       	brtc	.+30     	; 0x525a <__ftoa_engine+0x146>
    523c:	70 33       	cpi	r23, 0x30	; 48
    523e:	11 f4       	brne	.+4      	; 0x5244 <__ftoa_engine+0x130>
    5240:	8a 95       	dec	r24
    5242:	e6 cf       	rjmp	.-52     	; 0x5210 <__ftoa_engine+0xfc>
    5244:	e8 94       	clt
    5246:	01 50       	subi	r16, 0x01	; 1
    5248:	30 f0       	brcs	.+12     	; 0x5256 <__ftoa_engine+0x142>
    524a:	08 0f       	add	r16, r24
    524c:	0a f4       	brpl	.+2      	; 0x5250 <__ftoa_engine+0x13c>
    524e:	00 27       	eor	r16, r16
    5250:	02 17       	cp	r16, r18
    5252:	08 f4       	brcc	.+2      	; 0x5256 <__ftoa_engine+0x142>
    5254:	20 2f       	mov	r18, r16
    5256:	23 95       	inc	r18
    5258:	02 2f       	mov	r16, r18
    525a:	7a 33       	cpi	r23, 0x3A	; 58
    525c:	28 f0       	brcs	.+10     	; 0x5268 <__ftoa_engine+0x154>
    525e:	79 e3       	ldi	r23, 0x39	; 57
    5260:	7d 93       	st	X+, r23
    5262:	2a 95       	dec	r18
    5264:	e9 f7       	brne	.-6      	; 0x5260 <__ftoa_engine+0x14c>
    5266:	10 c0       	rjmp	.+32     	; 0x5288 <__ftoa_engine+0x174>
    5268:	7d 93       	st	X+, r23
    526a:	2a 95       	dec	r18
    526c:	89 f6       	brne	.-94     	; 0x5210 <__ftoa_engine+0xfc>
    526e:	06 94       	lsr	r0
    5270:	97 95       	ror	r25
    5272:	67 95       	ror	r22
    5274:	37 95       	ror	r19
    5276:	17 95       	ror	r17
    5278:	17 94       	ror	r1
    527a:	e1 18       	sub	r14, r1
    527c:	f1 0a       	sbc	r15, r17
    527e:	43 0b       	sbc	r20, r19
    5280:	56 0b       	sbc	r21, r22
    5282:	c9 0b       	sbc	r28, r25
    5284:	d0 09       	sbc	r29, r0
    5286:	98 f0       	brcs	.+38     	; 0x52ae <__ftoa_engine+0x19a>
    5288:	23 95       	inc	r18
    528a:	7e 91       	ld	r23, -X
    528c:	73 95       	inc	r23
    528e:	7a 33       	cpi	r23, 0x3A	; 58
    5290:	08 f0       	brcs	.+2      	; 0x5294 <__ftoa_engine+0x180>
    5292:	70 e3       	ldi	r23, 0x30	; 48
    5294:	7c 93       	st	X, r23
    5296:	20 13       	cpse	r18, r16
    5298:	b8 f7       	brcc	.-18     	; 0x5288 <__ftoa_engine+0x174>
    529a:	7e 91       	ld	r23, -X
    529c:	70 61       	ori	r23, 0x10	; 16
    529e:	7d 93       	st	X+, r23
    52a0:	30 f0       	brcs	.+12     	; 0x52ae <__ftoa_engine+0x19a>
    52a2:	83 95       	inc	r24
    52a4:	71 e3       	ldi	r23, 0x31	; 49
    52a6:	7d 93       	st	X+, r23
    52a8:	70 e3       	ldi	r23, 0x30	; 48
    52aa:	2a 95       	dec	r18
    52ac:	e1 f7       	brne	.-8      	; 0x52a6 <__ftoa_engine+0x192>
    52ae:	11 24       	eor	r1, r1
    52b0:	ef 90       	pop	r14
    52b2:	ff 90       	pop	r15
    52b4:	0f 91       	pop	r16
    52b6:	1f 91       	pop	r17
    52b8:	cf 91       	pop	r28
    52ba:	df 91       	pop	r29
    52bc:	99 27       	eor	r25, r25
    52be:	87 fd       	sbrc	r24, 7
    52c0:	90 95       	com	r25
    52c2:	08 95       	ret

000052c4 <strnlen_P>:
    52c4:	fc 01       	movw	r30, r24
    52c6:	05 90       	lpm	r0, Z+
    52c8:	61 50       	subi	r22, 0x01	; 1
    52ca:	70 40       	sbci	r23, 0x00	; 0
    52cc:	01 10       	cpse	r0, r1
    52ce:	d8 f7       	brcc	.-10     	; 0x52c6 <strnlen_P+0x2>
    52d0:	80 95       	com	r24
    52d2:	90 95       	com	r25
    52d4:	8e 0f       	add	r24, r30
    52d6:	9f 1f       	adc	r25, r31
    52d8:	08 95       	ret

000052da <strnlen>:
    52da:	fc 01       	movw	r30, r24
    52dc:	61 50       	subi	r22, 0x01	; 1
    52de:	70 40       	sbci	r23, 0x00	; 0
    52e0:	01 90       	ld	r0, Z+
    52e2:	01 10       	cpse	r0, r1
    52e4:	d8 f7       	brcc	.-10     	; 0x52dc <strnlen+0x2>
    52e6:	80 95       	com	r24
    52e8:	90 95       	com	r25
    52ea:	8e 0f       	add	r24, r30
    52ec:	9f 1f       	adc	r25, r31
    52ee:	08 95       	ret

000052f0 <fputc>:
    52f0:	0f 93       	push	r16
    52f2:	1f 93       	push	r17
    52f4:	cf 93       	push	r28
    52f6:	df 93       	push	r29
    52f8:	8c 01       	movw	r16, r24
    52fa:	eb 01       	movw	r28, r22
    52fc:	8b 81       	ldd	r24, Y+3	; 0x03
    52fe:	81 ff       	sbrs	r24, 1
    5300:	1b c0       	rjmp	.+54     	; 0x5338 <fputc+0x48>
    5302:	82 ff       	sbrs	r24, 2
    5304:	0d c0       	rjmp	.+26     	; 0x5320 <fputc+0x30>
    5306:	2e 81       	ldd	r18, Y+6	; 0x06
    5308:	3f 81       	ldd	r19, Y+7	; 0x07
    530a:	8c 81       	ldd	r24, Y+4	; 0x04
    530c:	9d 81       	ldd	r25, Y+5	; 0x05
    530e:	28 17       	cp	r18, r24
    5310:	39 07       	cpc	r19, r25
    5312:	64 f4       	brge	.+24     	; 0x532c <fputc+0x3c>
    5314:	e8 81       	ld	r30, Y
    5316:	f9 81       	ldd	r31, Y+1	; 0x01
    5318:	01 93       	st	Z+, r16
    531a:	f9 83       	std	Y+1, r31	; 0x01
    531c:	e8 83       	st	Y, r30
    531e:	06 c0       	rjmp	.+12     	; 0x532c <fputc+0x3c>
    5320:	e8 85       	ldd	r30, Y+8	; 0x08
    5322:	f9 85       	ldd	r31, Y+9	; 0x09
    5324:	80 2f       	mov	r24, r16
    5326:	09 95       	icall
    5328:	89 2b       	or	r24, r25
    532a:	31 f4       	brne	.+12     	; 0x5338 <fputc+0x48>
    532c:	8e 81       	ldd	r24, Y+6	; 0x06
    532e:	9f 81       	ldd	r25, Y+7	; 0x07
    5330:	01 96       	adiw	r24, 0x01	; 1
    5332:	9f 83       	std	Y+7, r25	; 0x07
    5334:	8e 83       	std	Y+6, r24	; 0x06
    5336:	02 c0       	rjmp	.+4      	; 0x533c <fputc+0x4c>
    5338:	0f ef       	ldi	r16, 0xFF	; 255
    533a:	1f ef       	ldi	r17, 0xFF	; 255
    533c:	c8 01       	movw	r24, r16
    533e:	df 91       	pop	r29
    5340:	cf 91       	pop	r28
    5342:	1f 91       	pop	r17
    5344:	0f 91       	pop	r16
    5346:	08 95       	ret

00005348 <printf>:
    5348:	a0 e0       	ldi	r26, 0x00	; 0
    534a:	b0 e0       	ldi	r27, 0x00	; 0
    534c:	e9 ea       	ldi	r30, 0xA9	; 169
    534e:	f9 e2       	ldi	r31, 0x29	; 41
    5350:	48 cd       	rjmp	.-1392   	; 0x4de2 <__prologue_saves__+0x20>
    5352:	fe 01       	movw	r30, r28
    5354:	35 96       	adiw	r30, 0x05	; 5
    5356:	61 91       	ld	r22, Z+
    5358:	71 91       	ld	r23, Z+
    535a:	80 91 f5 04 	lds	r24, 0x04F5
    535e:	90 91 f6 04 	lds	r25, 0x04F6
    5362:	af 01       	movw	r20, r30
    5364:	72 d9       	rcall	.-3356   	; 0x464a <vfprintf>
    5366:	20 96       	adiw	r28, 0x00	; 0
    5368:	e2 e0       	ldi	r30, 0x02	; 2
    536a:	57 cd       	rjmp	.-1362   	; 0x4e1a <__epilogue_restores__+0x20>

0000536c <puts>:
    536c:	0f 93       	push	r16
    536e:	1f 93       	push	r17
    5370:	cf 93       	push	r28
    5372:	df 93       	push	r29
    5374:	8c 01       	movw	r16, r24
    5376:	e0 91 f5 04 	lds	r30, 0x04F5
    537a:	f0 91 f6 04 	lds	r31, 0x04F6
    537e:	83 81       	ldd	r24, Z+3	; 0x03
    5380:	81 ff       	sbrs	r24, 1
    5382:	21 c0       	rjmp	.+66     	; 0x53c6 <puts+0x5a>
    5384:	c0 e0       	ldi	r28, 0x00	; 0
    5386:	d0 e0       	ldi	r29, 0x00	; 0
    5388:	0d c0       	rjmp	.+26     	; 0x53a4 <puts+0x38>
    538a:	e0 91 f5 04 	lds	r30, 0x04F5
    538e:	f0 91 f6 04 	lds	r31, 0x04F6
    5392:	20 85       	ldd	r18, Z+8	; 0x08
    5394:	31 85       	ldd	r19, Z+9	; 0x09
    5396:	bf 01       	movw	r22, r30
    5398:	f9 01       	movw	r30, r18
    539a:	09 95       	icall
    539c:	89 2b       	or	r24, r25
    539e:	11 f0       	breq	.+4      	; 0x53a4 <puts+0x38>
    53a0:	cf ef       	ldi	r28, 0xFF	; 255
    53a2:	df ef       	ldi	r29, 0xFF	; 255
    53a4:	f8 01       	movw	r30, r16
    53a6:	81 91       	ld	r24, Z+
    53a8:	8f 01       	movw	r16, r30
    53aa:	88 23       	and	r24, r24
    53ac:	71 f7       	brne	.-36     	; 0x538a <puts+0x1e>
    53ae:	e0 91 f5 04 	lds	r30, 0x04F5
    53b2:	f0 91 f6 04 	lds	r31, 0x04F6
    53b6:	20 85       	ldd	r18, Z+8	; 0x08
    53b8:	31 85       	ldd	r19, Z+9	; 0x09
    53ba:	8a e0       	ldi	r24, 0x0A	; 10
    53bc:	bf 01       	movw	r22, r30
    53be:	f9 01       	movw	r30, r18
    53c0:	09 95       	icall
    53c2:	89 2b       	or	r24, r25
    53c4:	11 f0       	breq	.+4      	; 0x53ca <puts+0x5e>
    53c6:	cf ef       	ldi	r28, 0xFF	; 255
    53c8:	df ef       	ldi	r29, 0xFF	; 255
    53ca:	ce 01       	movw	r24, r28
    53cc:	df 91       	pop	r29
    53ce:	cf 91       	pop	r28
    53d0:	1f 91       	pop	r17
    53d2:	0f 91       	pop	r16
    53d4:	08 95       	ret

000053d6 <__ultoa_invert>:
    53d6:	fa 01       	movw	r30, r20
    53d8:	aa 27       	eor	r26, r26
    53da:	28 30       	cpi	r18, 0x08	; 8
    53dc:	51 f1       	breq	.+84     	; 0x5432 <__ultoa_invert+0x5c>
    53de:	20 31       	cpi	r18, 0x10	; 16
    53e0:	81 f1       	breq	.+96     	; 0x5442 <__ultoa_invert+0x6c>
    53e2:	e8 94       	clt
    53e4:	6f 93       	push	r22
    53e6:	6e 7f       	andi	r22, 0xFE	; 254
    53e8:	6e 5f       	subi	r22, 0xFE	; 254
    53ea:	7f 4f       	sbci	r23, 0xFF	; 255
    53ec:	8f 4f       	sbci	r24, 0xFF	; 255
    53ee:	9f 4f       	sbci	r25, 0xFF	; 255
    53f0:	af 4f       	sbci	r26, 0xFF	; 255
    53f2:	b1 e0       	ldi	r27, 0x01	; 1
    53f4:	3e d0       	rcall	.+124    	; 0x5472 <__ultoa_invert+0x9c>
    53f6:	b4 e0       	ldi	r27, 0x04	; 4
    53f8:	3c d0       	rcall	.+120    	; 0x5472 <__ultoa_invert+0x9c>
    53fa:	67 0f       	add	r22, r23
    53fc:	78 1f       	adc	r23, r24
    53fe:	89 1f       	adc	r24, r25
    5400:	9a 1f       	adc	r25, r26
    5402:	a1 1d       	adc	r26, r1
    5404:	68 0f       	add	r22, r24
    5406:	79 1f       	adc	r23, r25
    5408:	8a 1f       	adc	r24, r26
    540a:	91 1d       	adc	r25, r1
    540c:	a1 1d       	adc	r26, r1
    540e:	6a 0f       	add	r22, r26
    5410:	71 1d       	adc	r23, r1
    5412:	81 1d       	adc	r24, r1
    5414:	91 1d       	adc	r25, r1
    5416:	a1 1d       	adc	r26, r1
    5418:	20 d0       	rcall	.+64     	; 0x545a <__ultoa_invert+0x84>
    541a:	09 f4       	brne	.+2      	; 0x541e <__ultoa_invert+0x48>
    541c:	68 94       	set
    541e:	3f 91       	pop	r19
    5420:	2a e0       	ldi	r18, 0x0A	; 10
    5422:	26 9f       	mul	r18, r22
    5424:	11 24       	eor	r1, r1
    5426:	30 19       	sub	r19, r0
    5428:	30 5d       	subi	r19, 0xD0	; 208
    542a:	31 93       	st	Z+, r19
    542c:	de f6       	brtc	.-74     	; 0x53e4 <__ultoa_invert+0xe>
    542e:	cf 01       	movw	r24, r30
    5430:	08 95       	ret
    5432:	46 2f       	mov	r20, r22
    5434:	47 70       	andi	r20, 0x07	; 7
    5436:	40 5d       	subi	r20, 0xD0	; 208
    5438:	41 93       	st	Z+, r20
    543a:	b3 e0       	ldi	r27, 0x03	; 3
    543c:	0f d0       	rcall	.+30     	; 0x545c <__ultoa_invert+0x86>
    543e:	c9 f7       	brne	.-14     	; 0x5432 <__ultoa_invert+0x5c>
    5440:	f6 cf       	rjmp	.-20     	; 0x542e <__ultoa_invert+0x58>
    5442:	46 2f       	mov	r20, r22
    5444:	4f 70       	andi	r20, 0x0F	; 15
    5446:	40 5d       	subi	r20, 0xD0	; 208
    5448:	4a 33       	cpi	r20, 0x3A	; 58
    544a:	18 f0       	brcs	.+6      	; 0x5452 <__ultoa_invert+0x7c>
    544c:	49 5d       	subi	r20, 0xD9	; 217
    544e:	31 fd       	sbrc	r19, 1
    5450:	40 52       	subi	r20, 0x20	; 32
    5452:	41 93       	st	Z+, r20
    5454:	02 d0       	rcall	.+4      	; 0x545a <__ultoa_invert+0x84>
    5456:	a9 f7       	brne	.-22     	; 0x5442 <__ultoa_invert+0x6c>
    5458:	ea cf       	rjmp	.-44     	; 0x542e <__ultoa_invert+0x58>
    545a:	b4 e0       	ldi	r27, 0x04	; 4
    545c:	a6 95       	lsr	r26
    545e:	97 95       	ror	r25
    5460:	87 95       	ror	r24
    5462:	77 95       	ror	r23
    5464:	67 95       	ror	r22
    5466:	ba 95       	dec	r27
    5468:	c9 f7       	brne	.-14     	; 0x545c <__ultoa_invert+0x86>
    546a:	00 97       	sbiw	r24, 0x00	; 0
    546c:	61 05       	cpc	r22, r1
    546e:	71 05       	cpc	r23, r1
    5470:	08 95       	ret
    5472:	9b 01       	movw	r18, r22
    5474:	ac 01       	movw	r20, r24
    5476:	0a 2e       	mov	r0, r26
    5478:	06 94       	lsr	r0
    547a:	57 95       	ror	r21
    547c:	47 95       	ror	r20
    547e:	37 95       	ror	r19
    5480:	27 95       	ror	r18
    5482:	ba 95       	dec	r27
    5484:	c9 f7       	brne	.-14     	; 0x5478 <__ultoa_invert+0xa2>
    5486:	62 0f       	add	r22, r18
    5488:	73 1f       	adc	r23, r19
    548a:	84 1f       	adc	r24, r20
    548c:	95 1f       	adc	r25, r21
    548e:	a0 1d       	adc	r26, r0
    5490:	08 95       	ret

00005492 <__divmodsi4>:
    5492:	97 fb       	bst	r25, 7
    5494:	09 2e       	mov	r0, r25
    5496:	05 26       	eor	r0, r21
    5498:	0e d0       	rcall	.+28     	; 0x54b6 <__divmodsi4_neg1>
    549a:	57 fd       	sbrc	r21, 7
    549c:	04 d0       	rcall	.+8      	; 0x54a6 <__divmodsi4_neg2>
    549e:	6f dc       	rcall	.-1826   	; 0x4d7e <__udivmodsi4>
    54a0:	0a d0       	rcall	.+20     	; 0x54b6 <__divmodsi4_neg1>
    54a2:	00 1c       	adc	r0, r0
    54a4:	38 f4       	brcc	.+14     	; 0x54b4 <__divmodsi4_exit>

000054a6 <__divmodsi4_neg2>:
    54a6:	50 95       	com	r21
    54a8:	40 95       	com	r20
    54aa:	30 95       	com	r19
    54ac:	21 95       	neg	r18
    54ae:	3f 4f       	sbci	r19, 0xFF	; 255
    54b0:	4f 4f       	sbci	r20, 0xFF	; 255
    54b2:	5f 4f       	sbci	r21, 0xFF	; 255

000054b4 <__divmodsi4_exit>:
    54b4:	08 95       	ret

000054b6 <__divmodsi4_neg1>:
    54b6:	f6 f7       	brtc	.-4      	; 0x54b4 <__divmodsi4_exit>
    54b8:	90 95       	com	r25
    54ba:	80 95       	com	r24
    54bc:	70 95       	com	r23
    54be:	61 95       	neg	r22
    54c0:	7f 4f       	sbci	r23, 0xFF	; 255
    54c2:	8f 4f       	sbci	r24, 0xFF	; 255
    54c4:	9f 4f       	sbci	r25, 0xFF	; 255
    54c6:	08 95       	ret

000054c8 <_exit>:
    54c8:	f8 94       	cli

000054ca <__stop_program>:
    54ca:	ff cf       	rjmp	.-2      	; 0x54ca <__stop_program>
