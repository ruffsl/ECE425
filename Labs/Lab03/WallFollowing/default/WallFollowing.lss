
WallFollowing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f8  00800100  00005620  000056b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005620  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001b7  008001f8  008001f8  000057ac  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  000057ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000287  00000000  00000000  000057ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e70  00000000  00000000  00005a73  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002bd  00000000  00000000  000068e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000be0  00000000  00000000  00006ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c0  00000000  00000000  00007780  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000009c8  00000000  00000000  00007940  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009f1  00000000  00000000  00008308  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 31 03 	jmp	0x662	; 0x662 <__ctors_end>
       4:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       8:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      10:	0c 94 af 16 	jmp	0x2d5e	; 0x2d5e <__vector_4>
      14:	0c 94 d8 16 	jmp	0x2db0	; 0x2db0 <__vector_5>
      18:	0c 94 01 17 	jmp	0x2e02	; 0x2e02 <__vector_6>
      1c:	0c 94 2a 17 	jmp	0x2e54	; 0x2e54 <__vector_7>
      20:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      24:	0c 94 90 15 	jmp	0x2b20	; 0x2b20 <__vector_9>
      28:	0c 94 b9 15 	jmp	0x2b72	; 0x2b72 <__vector_10>
      2c:	0c 94 e2 15 	jmp	0x2bc4	; 0x2bc4 <__vector_11>
      30:	0c 94 5d 16 	jmp	0x2cba	; 0x2cba <__vector_12>
      34:	0c 94 0b 16 	jmp	0x2c16	; 0x2c16 <__vector_13>
      38:	0c 94 34 16 	jmp	0x2c68	; 0x2c68 <__vector_14>
      3c:	0c 94 86 16 	jmp	0x2d0c	; 0x2d0c <__vector_15>
      40:	0c 94 15 15 	jmp	0x2a2a	; 0x2a2a <__vector_16>
      44:	0c 94 3e 15 	jmp	0x2a7c	; 0x2a7c <__vector_17>
      48:	0c 94 67 15 	jmp	0x2ace	; 0x2ace <__vector_18>
      4c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      50:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      54:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      58:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      5c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      60:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      64:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      68:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      6c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      70:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      74:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      78:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      7c:	ab 12       	cpse	r10, r27
      7e:	ae 12       	cpse	r10, r30
      80:	b1 12       	cpse	r11, r17
      82:	b4 12       	cpse	r11, r20
      84:	bd 12       	cpse	r11, r29
      86:	b7 12       	cpse	r11, r23
      88:	ba 12       	cpse	r11, r26
      8a:	c0 12       	cpse	r12, r16
      8c:	c3 12       	cpse	r12, r19
      8e:	c6 12       	cpse	r12, r22
      90:	c9 12       	cpse	r12, r25
      92:	cc 12       	cpse	r12, r28
      94:	cf 12       	cpse	r12, r31
      96:	d2 12       	cpse	r13, r18
      98:	d5 12       	cpse	r13, r21
      9a:	d8 12       	cpse	r13, r24
      9c:	db 12       	cpse	r13, r27
      9e:	de 12       	cpse	r13, r30
      a0:	e1 12       	cpse	r14, r17
      a2:	f2 12       	cpse	r15, r18
      a4:	f5 12       	cpse	r15, r21
      a6:	f8 12       	cpse	r15, r24
      a8:	fb 12       	cpse	r15, r27
      aa:	04 13       	cpse	r16, r20
      ac:	fe 12       	cpse	r15, r30
      ae:	01 13       	cpse	r16, r17
      b0:	07 13       	cpse	r16, r23
      b2:	0a 13       	cpse	r16, r26
      b4:	0d 13       	cpse	r16, r29
      b6:	10 13       	cpse	r17, r16
      b8:	13 13       	cpse	r17, r19
      ba:	16 13       	cpse	r17, r22
      bc:	19 13       	cpse	r17, r25
      be:	1c 13       	cpse	r17, r28
      c0:	1f 13       	cpse	r17, r31
      c2:	22 13       	cpse	r18, r18
      c4:	25 13       	cpse	r18, r21
      c6:	28 13       	cpse	r18, r24
      c8:	07 63       	ori	r16, 0x37	; 55
      ca:	42 36       	cpi	r20, 0x62	; 98
      cc:	b7 9b       	sbis	0x16, 7	; 22
      ce:	d8 a7       	std	Y+40, r29	; 0x28
      d0:	1a 39       	cpi	r17, 0x9A	; 154
      d2:	68 56       	subi	r22, 0x68	; 104
      d4:	18 ae       	std	Y+56, r1	; 0x38
      d6:	ba ab       	std	Y+50, r27	; 0x32
      d8:	55 8c       	ldd	r5, Z+29	; 0x1d
      da:	1d 3c       	cpi	r17, 0xCD	; 205
      dc:	b7 cc       	rjmp	.-1682   	; 0xfffffa4c <__eeprom_end+0xff7efa4c>
      de:	57 63       	ori	r21, 0x37	; 55
      e0:	bd 6d       	ori	r27, 0xDD	; 221
      e2:	ed fd       	.word	0xfded	; ????
      e4:	75 3e       	cpi	r23, 0xE5	; 229
      e6:	f6 17       	cp	r31, r22
      e8:	72 31       	cpi	r23, 0x12	; 18
      ea:	bf 00       	.word	0x00bf	; ????
      ec:	00 00       	nop
      ee:	80 3f       	cpi	r24, 0xF0	; 240
      f0:	08 00       	.word	0x0008	; ????
      f2:	00 00       	nop
      f4:	be 92       	st	-X, r11
      f6:	24 49       	sbci	r18, 0x94	; 148
      f8:	12 3e       	cpi	r17, 0xE2	; 226
      fa:	ab aa       	std	Y+51, r10	; 0x33
      fc:	aa 2a       	or	r10, r26
      fe:	be cd       	rjmp	.-1156   	; 0xfffffc7c <__eeprom_end+0xff7efc7c>
     100:	cc cc       	rjmp	.-1640   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     102:	4c 3e       	cpi	r20, 0xEC	; 236
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	be ab       	std	Y+54, r27	; 0x36
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	aa 3e       	cpi	r26, 0xEA	; 234
     10e:	00 00       	nop
     110:	00 00       	nop
     112:	bf 00       	.word	0x00bf	; ????
     114:	00 00       	nop
     116:	80 3f       	cpi	r24, 0xF0	; 240
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	00 08       	sbc	r0, r0
     11e:	41 78       	andi	r20, 0x81	; 129
     120:	d3 bb       	out	0x13, r29	; 19
     122:	43 87       	std	Z+11, r20	; 0x0b
     124:	d1 13       	cpse	r29, r17
     126:	3d 19       	sub	r19, r13
     128:	0e 3c       	cpi	r16, 0xCE	; 206
     12a:	c3 bd       	out	0x23, r28	; 35
     12c:	42 82       	std	Z+2, r4	; 0x02
     12e:	ad 2b       	or	r26, r29
     130:	3e 68       	ori	r19, 0x8E	; 142
     132:	ec 82       	std	Y+4, r14	; 0x04
     134:	76 be       	out	0x36, r7	; 54
     136:	d9 8f       	std	Y+25, r29	; 0x19
     138:	e1 a9       	ldd	r30, Z+49	; 0x31
     13a:	3e 4c       	sbci	r19, 0xCE	; 206
     13c:	80 ef       	ldi	r24, 0xF0	; 240
     13e:	ff be       	out	0x3f, r15	; 63
     140:	01 c4       	rjmp	.+2050   	; 0x944 <__stack+0x45>
     142:	ff 7f       	andi	r31, 0xFF	; 255
     144:	3f 00       	.word	0x003f	; ????
     146:	00 00       	nop
	...

0000014a <char_bitmap>:
     14a:	16 05 01 00 00 00 00 00 00 00 fa 00 00 00 e0 00     ................
     15a:	e0 00 28 fe 28 fe 28 24 54 fe 54 48 c4 c8 10 26     ..(.(.($T.TH...&
     16a:	46 6c 92 aa 44 a0 00 a0 c0 00 00 00 38 44 82 00     Fl..D.......8D..
     17a:	00 82 44 38 00 28 10 7c 10 28 10 10 7c 10 10 00     ..D8.(.|.(..|...
     18a:	0a 0c 00 00 10 10 10 10 10 00 06 06 00 00 04 08     ................
     19a:	10 20 40 7c 8a 92 a2 7c 00 42 fe 02 00 42 86 8a     . @|...|.B...B..
     1aa:	92 62 84 82 a2 d2 8c 18 28 48 fe 08 e4 a2 a2 a2     .b......(H......
     1ba:	9c 3c 52 92 92 0c 80 8e 90 a0 c0 6c 92 92 92 6c     .<R........l...l
     1ca:	60 92 92 94 78 00 6c 6c 00 00 00 6a 6c 00 00 10     `...x.ll...jl...
     1da:	28 44 82 00 28 28 28 28 28 00 82 44 28 10 40 80     (D..(((((..D(.@.
     1ea:	8a 90 60 4c 92 9e 82 7c 7e 88 88 88 7e fe 92 92     ..`L...|~...~...
     1fa:	92 6c 7c 82 82 82 44 fe 82 82 44 38 fe 92 92 92     .l|...D...D8....
     20a:	82 fe 90 90 90 80 7c 82 92 92 5e fe 10 10 10 fe     ......|...^.....
     21a:	00 82 fe 82 00 04 02 82 fc 80 fe 10 28 44 82 fe     ............(D..
     22a:	02 02 02 02 fe 40 30 40 fe fe 20 10 08 fe 7c 82     .....@0@.. ...|.
     23a:	82 82 7c fe 90 90 90 60 7c 82 8a 84 7a fe 90 98     ..|....`|...z...
     24a:	94 62 62 92 92 92 8c 80 80 fe 80 80 fc 02 02 02     .bb.............
     25a:	fc f8 04 02 04 f8 fc 02 1c 02 fc c6 28 10 28 c6     ............(.(.
     26a:	e0 10 0e 10 e0 86 8a 92 a2 c2 00 fe 82 82 00 40     ...............@
     27a:	20 10 08 04 00 82 82 fe 00 20 40 80 40 20 02 02      ........ @.@ ..
     28a:	02 02 02 00 80 40 20 00 04 2a 2a 2a 1e fe 12 22     .....@ ..***..."
     29a:	22 1c 1c 22 22 22 04 1c 22 22 12 fe 1c 2a 2a 2a     ".."""..""...***
     2aa:	18 10 7e 90 80 40 30 4a 4a 4a 7c fe 10 20 20 1e     ..~..@0JJJ|..  .
     2ba:	00 22 be 02 00 04 02 22 bc 00 fe 08 14 22 00 00     ."....."....."..
     2ca:	82 fe 02 00 3e 20 18 20 1e 3e 10 20 20 1e 1c 22     ....> . .>.  .."
     2da:	22 22 1c 3e 28 28 28 10 10 28 28 18 3e 3e 10 20     "".>(((..((.>>. 
     2ea:	20 10 12 2a 2a 2a 04 20 fc 22 02 04 3c 02 02 04      ..***. ."..<...
     2fa:	3e 38 04 02 04 38 3c 02 0c 02 3c 22 14 08 14 22     >8...8<...<"..."
     30a:	30 0a 0a 0a 3c 22 26 2a 32 22 00 10 6c 82 00 00     0...<"&*2"..l...
     31a:	00 fe 00 00 00 82 6c 10 00 08 10 10 08 10 00 00     ......l.........
     32a:	00 00 00 7f 81 81 81 7f 7f 83 83 83 7f 7f 87 87     ................
     33a:	87 7f 7f 8f 8f 8f 7f 7f 9f 9f 9f 7f 7f bf bf bf     ................
     34a:	7f 7f ff ff ff 7f 20 40 ff 40 20 62 15 17 15 65     ...... @.@ b...e
     35a:	00 fb fb 00 00                                      .....

0000035f <CEENBoT_Inc_logo_bitmap>:
     35f:	00 00 00 00 00 c0 ff 03 00 e0 ff 07 00 f0 ff 0f     ................
     36f:	00 f8 ff 1f 00 78 00 1e 00 78 00 1e 00 78 00 1e     .....x...x...x..
     37f:	00 78 00 1e 00 78 00 1e 00 78 00 1e 00 78 00 1e     .x...x...x...x..
     38f:	00 78 00 1e 00 78 00 1e 00 00 00 00 00 00 00 00     .x...x..........
     39f:	00 80 ff 03 00 e0 ff 07 00 f0 ff 0f 00 f8 ff 1f     ................
     3af:	00 f8 3c 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     ..<..x<..x<..x<.
     3bf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     3cf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     3df:	00 00 00 00 00 e0 ff 03 00 f0 ff 07 00 f8 ff 0f     ................
     3ef:	00 f8 ff 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .....x<..x<..x<.
     3ff:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     40f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     41f:	00 00 00 00 00 f8 ff 03 00 f8 ff 0f 00 f8 ff 1f     ................
     42f:	00 f8 ff 1f 00 00 00 1e 00 00 00 1e 00 00 80 1f     ................
     43f:	00 00 f0 1f 00 00 ff 0f 00 e0 ff 07 00 f0 ff 00     ................
     44f:	00 f8 0f 00 00 f8 00 00 00 78 00 00 00 78 00 00     .........x...x..
     45f:	00 f8 ff 1f 00 f8 ff 1f 00 f0 ff 1f 00 e0 ff 1f     ................
	...
     477:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     487:	00 78 00 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x...x<..x<..x<.
     497:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 f8 7e 1f     .x<..x<..x<...~.
     4a7:	00 f8 ff 1f 00 f0 ff 0f 00 e0 e7 03 00 00 00 00     ................
     4b7:	00 00 00 38 00 ee ff 6c 00 2a 80 45 00 3a 00 47     ...8...l.*.E.:.G
     4c7:	fc 03 ff 6c fc 83 ff 39 00 de ff 0b 7c d0 81 0b     ...l...9....|...
     4d7:	fc d0 81 0b c0 d0 81 0b fc d0 81 0b 7c de ff 0b     ............|...
     4e7:	00 82 ff 39 70 02 ff 6c f8 3a 00 47 dc 2a 80 45     ...9p..l.:.G.*.E
     4f7:	cc ee ff 6c cc 00 00 38 00 00 00 00 0c 00 00 1e     ...l...8........
     507:	0c 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     517:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     527:	00 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     537:	00 00 00 5e 00 00 00 40 00 00 00 7c 00 00 00 40     ...^...@...|...@
     547:	00 00 00 40 00 00 00 7c 00 00 00 30 00 00 00 10     ...@...|...0....
     557:	00 00 00 30 00 00 00 7c                             ...0...|

0000055f <__c.1790>:
     55f:	6e 61 6e 00                                         nan.

00000563 <__c.1788>:
     563:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     573:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     583:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     593:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     5a3:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     5b3:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     5c3:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     5d3:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     5e3:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     5f3:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     603:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     613:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     623:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     633:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     643:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     653:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

00000662 <__ctors_end>:
     662:	11 24       	eor	r1, r1
     664:	1f be       	out	0x3f, r1	; 63
     666:	cf ef       	ldi	r28, 0xFF	; 255
     668:	d8 e0       	ldi	r29, 0x08	; 8
     66a:	de bf       	out	0x3e, r29	; 62
     66c:	cd bf       	out	0x3d, r28	; 61

0000066e <__do_copy_data>:
     66e:	11 e0       	ldi	r17, 0x01	; 1
     670:	a0 e0       	ldi	r26, 0x00	; 0
     672:	b1 e0       	ldi	r27, 0x01	; 1
     674:	e0 e2       	ldi	r30, 0x20	; 32
     676:	f6 e5       	ldi	r31, 0x56	; 86
     678:	02 c0       	rjmp	.+4      	; 0x67e <.do_copy_data_start>

0000067a <.do_copy_data_loop>:
     67a:	05 90       	lpm	r0, Z+
     67c:	0d 92       	st	X+, r0

0000067e <.do_copy_data_start>:
     67e:	a8 3f       	cpi	r26, 0xF8	; 248
     680:	b1 07       	cpc	r27, r17
     682:	d9 f7       	brne	.-10     	; 0x67a <.do_copy_data_loop>

00000684 <__do_clear_bss>:
     684:	13 e0       	ldi	r17, 0x03	; 3
     686:	a8 ef       	ldi	r26, 0xF8	; 248
     688:	b1 e0       	ldi	r27, 0x01	; 1
     68a:	01 c0       	rjmp	.+2      	; 0x68e <.do_clear_bss_start>

0000068c <.do_clear_bss_loop>:
     68c:	1d 92       	st	X+, r1

0000068e <.do_clear_bss_start>:
     68e:	af 3a       	cpi	r26, 0xAF	; 175
     690:	b1 07       	cpc	r27, r17
     692:	e1 f7       	brne	.-8      	; 0x68c <.do_clear_bss_loop>
     694:	0e 94 55 0d 	call	0x1aaa	; 0x1aaa <main>
     698:	0c 94 0e 2b 	jmp	0x561c	; 0x561c <_exit>

0000069c <__bad_interrupt>:
     69c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006a0 <prefilter>:
* Input Variables:	char reset
* Output Return:	void
* Overview:			This appies a prefilter to the IR data
********************************************************************/
void prefilter(char reset)
{	
     6a0:	2f 92       	push	r2
     6a2:	3f 92       	push	r3
     6a4:	4f 92       	push	r4
     6a6:	5f 92       	push	r5
     6a8:	6f 92       	push	r6
     6aa:	7f 92       	push	r7
     6ac:	8f 92       	push	r8
     6ae:	9f 92       	push	r9
     6b0:	af 92       	push	r10
     6b2:	bf 92       	push	r11
     6b4:	cf 92       	push	r12
     6b6:	df 92       	push	r13
     6b8:	ef 92       	push	r14
     6ba:	ff 92       	push	r15
     6bc:	0f 93       	push	r16
     6be:	1f 93       	push	r17
     6c0:	df 93       	push	r29
     6c2:	cf 93       	push	r28
     6c4:	cd b7       	in	r28, 0x3d	; 61
     6c6:	de b7       	in	r29, 0x3e	; 62
     6c8:	64 97       	sbiw	r28, 0x14	; 20
     6ca:	0f b6       	in	r0, 0x3f	; 63
     6cc:	f8 94       	cli
     6ce:	de bf       	out	0x3e, r29	; 62
     6d0:	0f be       	out	0x3f, r0	; 63
     6d2:	cd bf       	out	0x3d, r28	; 61
	int i;
	if(reset)
     6d4:	88 23       	and	r24, r24
     6d6:	39 f5       	brne	.+78     	; 0x726 <prefilter+0x86>
     6d8:	87 ea       	ldi	r24, 0xA7	; 167
     6da:	92 e0       	ldi	r25, 0x02	; 2
     6dc:	9c 8b       	std	Y+20, r25	; 0x14
     6de:	8b 8b       	std	Y+19, r24	; 0x13
     6e0:	a3 e2       	ldi	r26, 0x23	; 35
     6e2:	b3 e0       	ldi	r27, 0x03	; 3
     6e4:	be 83       	std	Y+6, r27	; 0x06
     6e6:	ad 83       	std	Y+5, r26	; 0x05
     6e8:	e9 ef       	ldi	r30, 0xF9	; 249
     6ea:	f2 e0       	ldi	r31, 0x02	; 2
     6ec:	fc 83       	std	Y+4, r31	; 0x04
     6ee:	eb 83       	std	Y+3, r30	; 0x03
     6f0:	8f ec       	ldi	r24, 0xCF	; 207
     6f2:	92 e0       	ldi	r25, 0x02	; 2
     6f4:	9a 83       	std	Y+2, r25	; 0x02
     6f6:	89 83       	std	Y+1, r24	; 0x01
     6f8:	0f 2e       	mov	r0, r31
     6fa:	f0 e0       	ldi	r31, 0x00	; 0
     6fc:	2f 2e       	mov	r2, r31
     6fe:	f0 e0       	ldi	r31, 0x00	; 0
     700:	3f 2e       	mov	r3, r31
     702:	f0 e0       	ldi	r31, 0x00	; 0
     704:	4f 2e       	mov	r4, r31
     706:	f0 e0       	ldi	r31, 0x00	; 0
     708:	5f 2e       	mov	r5, r31
     70a:	f0 2d       	mov	r31, r0
     70c:	2f 86       	std	Y+15, r2	; 0x0f
     70e:	38 8a       	std	Y+16, r3	; 0x10
     710:	49 8a       	std	Y+17, r4	; 0x11
     712:	5a 8a       	std	Y+18, r5	; 0x12
     714:	2b 86       	std	Y+11, r2	; 0x0b
     716:	3c 86       	std	Y+12, r3	; 0x0c
     718:	4d 86       	std	Y+13, r4	; 0x0d
     71a:	5e 86       	std	Y+14, r5	; 0x0e
     71c:	2f 82       	std	Y+7, r2	; 0x07
     71e:	38 86       	std	Y+8, r3	; 0x08
     720:	49 86       	std	Y+9, r4	; 0x09
     722:	5a 86       	std	Y+10, r5	; 0x0a
     724:	43 c0       	rjmp	.+134    	; 0x7ac <prefilter+0x10c>
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     726:	a0 90 00 02 	lds	r10, 0x0200
     72a:	b0 90 01 02 	lds	r11, 0x0201
     72e:	c0 90 02 02 	lds	r12, 0x0202
     732:	d0 90 03 02 	lds	r13, 0x0203
			rtIR_old[i] = rtIR;
     736:	e0 90 04 02 	lds	r14, 0x0204
     73a:	f0 90 05 02 	lds	r15, 0x0205
     73e:	00 91 06 02 	lds	r16, 0x0206
     742:	10 91 07 02 	lds	r17, 0x0207
			ftIR_old[i] = ftIR;
     746:	20 90 08 02 	lds	r2, 0x0208
     74a:	30 90 09 02 	lds	r3, 0x0209
     74e:	40 90 0a 02 	lds	r4, 0x020A
     752:	50 90 0b 02 	lds	r5, 0x020B
			bkIR_old[i] = bkIR;
     756:	20 91 0c 02 	lds	r18, 0x020C
     75a:	30 91 0d 02 	lds	r19, 0x020D
     75e:	40 91 0e 02 	lds	r20, 0x020E
     762:	50 91 0f 02 	lds	r21, 0x020F
     766:	80 e0       	ldi	r24, 0x00	; 0
     768:	90 e0       	ldi	r25, 0x00	; 0
	int i;
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
		{
			ltIR_old[i] = ltIR;
     76a:	fc 01       	movw	r30, r24
     76c:	e9 57       	subi	r30, 0x79	; 121
     76e:	fd 4f       	sbci	r31, 0xFD	; 253
     770:	a0 82       	st	Z, r10
     772:	b1 82       	std	Z+1, r11	; 0x01
     774:	c2 82       	std	Z+2, r12	; 0x02
     776:	d3 82       	std	Z+3, r13	; 0x03
			rtIR_old[i] = rtIR;
     778:	fc 01       	movw	r30, r24
     77a:	ed 5f       	subi	r30, 0xFD	; 253
     77c:	fc 4f       	sbci	r31, 0xFC	; 252
     77e:	e0 82       	st	Z, r14
     780:	f1 82       	std	Z+1, r15	; 0x01
     782:	02 83       	std	Z+2, r16	; 0x02
     784:	13 83       	std	Z+3, r17	; 0x03
			ftIR_old[i] = ftIR;
     786:	fc 01       	movw	r30, r24
     788:	e7 52       	subi	r30, 0x27	; 39
     78a:	fd 4f       	sbci	r31, 0xFD	; 253
     78c:	20 82       	st	Z, r2
     78e:	31 82       	std	Z+1, r3	; 0x01
     790:	42 82       	std	Z+2, r4	; 0x02
     792:	53 82       	std	Z+3, r5	; 0x03
			bkIR_old[i] = bkIR;
     794:	fc 01       	movw	r30, r24
     796:	e1 55       	subi	r30, 0x51	; 81
     798:	fd 4f       	sbci	r31, 0xFD	; 253
     79a:	20 83       	st	Z, r18
     79c:	31 83       	std	Z+1, r19	; 0x01
     79e:	42 83       	std	Z+2, r20	; 0x02
     7a0:	53 83       	std	Z+3, r21	; 0x03
     7a2:	04 96       	adiw	r24, 0x04	; 4
void prefilter(char reset)
{	
	int i;
	if(reset)
	{
		for (i = 0; i < PREFILTER_SIZE; i++)
     7a4:	88 32       	cpi	r24, 0x28	; 40
     7a6:	91 05       	cpc	r25, r1
     7a8:	01 f7       	brne	.-64     	; 0x76a <prefilter+0xca>
     7aa:	96 cf       	rjmp	.-212    	; 0x6d8 <prefilter+0x38>
	float bkIR_new = 0;
	
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
	{
		j = i - 1;
		ltIR_old[i] = ltIR_old[j];
     7ac:	ab 89       	ldd	r26, Y+19	; 0x13
     7ae:	bc 89       	ldd	r27, Y+20	; 0x14
     7b0:	2d 91       	ld	r18, X+
     7b2:	3d 91       	ld	r19, X+
     7b4:	4d 91       	ld	r20, X+
     7b6:	5c 91       	ld	r21, X
     7b8:	13 97       	sbiw	r26, 0x03	; 3
     7ba:	fd 01       	movw	r30, r26
     7bc:	24 83       	std	Z+4, r18	; 0x04
     7be:	35 83       	std	Z+5, r19	; 0x05
     7c0:	46 83       	std	Z+6, r20	; 0x06
     7c2:	57 83       	std	Z+7, r21	; 0x07
		rtIR_old[i] = rtIR_old[j];
     7c4:	ad 81       	ldd	r26, Y+5	; 0x05
     7c6:	be 81       	ldd	r27, Y+6	; 0x06
     7c8:	ed 90       	ld	r14, X+
     7ca:	fd 90       	ld	r15, X+
     7cc:	0d 91       	ld	r16, X+
     7ce:	1c 91       	ld	r17, X
     7d0:	13 97       	sbiw	r26, 0x03	; 3
     7d2:	fd 01       	movw	r30, r26
     7d4:	e4 82       	std	Z+4, r14	; 0x04
     7d6:	f5 82       	std	Z+5, r15	; 0x05
     7d8:	06 83       	std	Z+6, r16	; 0x06
     7da:	17 83       	std	Z+7, r17	; 0x07
		ftIR_old[i] = ftIR_old[j];
     7dc:	ab 81       	ldd	r26, Y+3	; 0x03
     7de:	bc 81       	ldd	r27, Y+4	; 0x04
     7e0:	ad 90       	ld	r10, X+
     7e2:	bd 90       	ld	r11, X+
     7e4:	cd 90       	ld	r12, X+
     7e6:	dc 90       	ld	r13, X
     7e8:	13 97       	sbiw	r26, 0x03	; 3
     7ea:	fd 01       	movw	r30, r26
     7ec:	a4 82       	std	Z+4, r10	; 0x04
     7ee:	b5 82       	std	Z+5, r11	; 0x05
     7f0:	c6 82       	std	Z+6, r12	; 0x06
     7f2:	d7 82       	std	Z+7, r13	; 0x07
		bkIR_old[i] = bkIR_old[j];
     7f4:	a9 81       	ldd	r26, Y+1	; 0x01
     7f6:	ba 81       	ldd	r27, Y+2	; 0x02
     7f8:	6d 90       	ld	r6, X+
     7fa:	7d 90       	ld	r7, X+
     7fc:	8d 90       	ld	r8, X+
     7fe:	9c 90       	ld	r9, X
     800:	13 97       	sbiw	r26, 0x03	; 3
     802:	fd 01       	movw	r30, r26
     804:	64 82       	std	Z+4, r6	; 0x04
     806:	75 82       	std	Z+5, r7	; 0x05
     808:	86 82       	std	Z+6, r8	; 0x06
     80a:	97 82       	std	Z+7, r9	; 0x07
		ltIR_new += ltIR_old[i];
     80c:	c2 01       	movw	r24, r4
     80e:	b1 01       	movw	r22, r2
     810:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
     814:	1b 01       	movw	r2, r22
     816:	2c 01       	movw	r4, r24
		rtIR_new += rtIR_old[i];
     818:	6f 85       	ldd	r22, Y+15	; 0x0f
     81a:	78 89       	ldd	r23, Y+16	; 0x10
     81c:	89 89       	ldd	r24, Y+17	; 0x11
     81e:	9a 89       	ldd	r25, Y+18	; 0x12
     820:	a8 01       	movw	r20, r16
     822:	97 01       	movw	r18, r14
     824:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
     828:	6f 87       	std	Y+15, r22	; 0x0f
     82a:	78 8b       	std	Y+16, r23	; 0x10
     82c:	89 8b       	std	Y+17, r24	; 0x11
     82e:	9a 8b       	std	Y+18, r25	; 0x12
		ftIR_new += ftIR_old[i];
     830:	6b 85       	ldd	r22, Y+11	; 0x0b
     832:	7c 85       	ldd	r23, Y+12	; 0x0c
     834:	8d 85       	ldd	r24, Y+13	; 0x0d
     836:	9e 85       	ldd	r25, Y+14	; 0x0e
     838:	a6 01       	movw	r20, r12
     83a:	95 01       	movw	r18, r10
     83c:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
     840:	6b 87       	std	Y+11, r22	; 0x0b
     842:	7c 87       	std	Y+12, r23	; 0x0c
     844:	8d 87       	std	Y+13, r24	; 0x0d
     846:	9e 87       	std	Y+14, r25	; 0x0e
		bkIR_new += bkIR_old[i];
     848:	6f 81       	ldd	r22, Y+7	; 0x07
     84a:	78 85       	ldd	r23, Y+8	; 0x08
     84c:	89 85       	ldd	r24, Y+9	; 0x09
     84e:	9a 85       	ldd	r25, Y+10	; 0x0a
     850:	a4 01       	movw	r20, r8
     852:	93 01       	movw	r18, r6
     854:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
     858:	6f 83       	std	Y+7, r22	; 0x07
     85a:	78 87       	std	Y+8, r23	; 0x08
     85c:	89 87       	std	Y+9, r24	; 0x09
     85e:	9a 87       	std	Y+10, r25	; 0x0a
     860:	8b 89       	ldd	r24, Y+19	; 0x13
     862:	9c 89       	ldd	r25, Y+20	; 0x14
     864:	04 97       	sbiw	r24, 0x04	; 4
     866:	9c 8b       	std	Y+20, r25	; 0x14
     868:	8b 8b       	std	Y+19, r24	; 0x13
     86a:	ad 81       	ldd	r26, Y+5	; 0x05
     86c:	be 81       	ldd	r27, Y+6	; 0x06
     86e:	14 97       	sbiw	r26, 0x04	; 4
     870:	be 83       	std	Y+6, r27	; 0x06
     872:	ad 83       	std	Y+5, r26	; 0x05
     874:	eb 81       	ldd	r30, Y+3	; 0x03
     876:	fc 81       	ldd	r31, Y+4	; 0x04
     878:	34 97       	sbiw	r30, 0x04	; 4
     87a:	fc 83       	std	Y+4, r31	; 0x04
     87c:	eb 83       	std	Y+3, r30	; 0x03
     87e:	89 81       	ldd	r24, Y+1	; 0x01
     880:	9a 81       	ldd	r25, Y+2	; 0x02
     882:	04 97       	sbiw	r24, 0x04	; 4
     884:	9a 83       	std	Y+2, r25	; 0x02
     886:	89 83       	std	Y+1, r24	; 0x01
	float ltIR_new = 0;
	float rtIR_new = 0;
	float ftIR_new = 0;
	float bkIR_new = 0;
	
	for (i = PREFILTER_SIZE-1; i >= 0 ; i--)
     888:	ab 89       	ldd	r26, Y+19	; 0x13
     88a:	bc 89       	ldd	r27, Y+20	; 0x14
     88c:	af 57       	subi	r26, 0x7F	; 127
     88e:	b2 40       	sbci	r27, 0x02	; 2
     890:	09 f0       	breq	.+2      	; 0x894 <prefilter+0x1f4>
     892:	8c cf       	rjmp	.-232    	; 0x7ac <prefilter+0x10c>
		rtIR_new += rtIR_old[i];
		ftIR_new += ftIR_old[i];
		bkIR_new += bkIR_old[i];
	}
	
	ltIR_old[0] = ltIR;
     894:	80 91 00 02 	lds	r24, 0x0200
     898:	90 91 01 02 	lds	r25, 0x0201
     89c:	a0 91 02 02 	lds	r26, 0x0202
     8a0:	b0 91 03 02 	lds	r27, 0x0203
     8a4:	eb 89       	ldd	r30, Y+19	; 0x13
     8a6:	fc 89       	ldd	r31, Y+20	; 0x14
     8a8:	80 87       	std	Z+8, r24	; 0x08
     8aa:	91 87       	std	Z+9, r25	; 0x09
     8ac:	a2 87       	std	Z+10, r26	; 0x0a
     8ae:	b3 87       	std	Z+11, r27	; 0x0b
	rtIR_old[0] = rtIR;
     8b0:	80 91 04 02 	lds	r24, 0x0204
     8b4:	90 91 05 02 	lds	r25, 0x0205
     8b8:	a0 91 06 02 	lds	r26, 0x0206
     8bc:	b0 91 07 02 	lds	r27, 0x0207
     8c0:	80 93 03 03 	sts	0x0303, r24
     8c4:	90 93 04 03 	sts	0x0304, r25
     8c8:	a0 93 05 03 	sts	0x0305, r26
     8cc:	b0 93 06 03 	sts	0x0306, r27
	ftIR_old[0] = ftIR;
     8d0:	80 91 08 02 	lds	r24, 0x0208
     8d4:	90 91 09 02 	lds	r25, 0x0209
     8d8:	a0 91 0a 02 	lds	r26, 0x020A
     8dc:	b0 91 0b 02 	lds	r27, 0x020B
     8e0:	80 93 d9 02 	sts	0x02D9, r24
     8e4:	90 93 da 02 	sts	0x02DA, r25
     8e8:	a0 93 db 02 	sts	0x02DB, r26
     8ec:	b0 93 dc 02 	sts	0x02DC, r27
	bkIR_old[0] = bkIR;
     8f0:	80 91 0c 02 	lds	r24, 0x020C
     8f4:	90 91 0d 02 	lds	r25, 0x020D
     8f8:	a0 91 0e 02 	lds	r26, 0x020E
     8fc:	b0 91 0f 02 	lds	r27, 0x020F
     900:	80 93 af 02 	sts	0x02AF, r24
     904:	90 93 b0 02 	sts	0x02B0, r25
     908:	a0 93 b1 02 	sts	0x02B1, r26
     90c:	b0 93 b2 02 	sts	0x02B2, r27
	
	ltIR = ltIR_new/PREFILTER_SIZE;
     910:	c2 01       	movw	r24, r4
     912:	b1 01       	movw	r22, r2
     914:	20 e0       	ldi	r18, 0x00	; 0
     916:	30 e0       	ldi	r19, 0x00	; 0
     918:	40 e2       	ldi	r20, 0x20	; 32
     91a:	51 e4       	ldi	r21, 0x41	; 65
     91c:	0e 94 7e 20 	call	0x40fc	; 0x40fc <__divsf3>
     920:	60 93 00 02 	sts	0x0200, r22
     924:	70 93 01 02 	sts	0x0201, r23
     928:	80 93 02 02 	sts	0x0202, r24
     92c:	90 93 03 02 	sts	0x0203, r25
	rtIR = rtIR_new/PREFILTER_SIZE;
     930:	6f 85       	ldd	r22, Y+15	; 0x0f
     932:	78 89       	ldd	r23, Y+16	; 0x10
     934:	89 89       	ldd	r24, Y+17	; 0x11
     936:	9a 89       	ldd	r25, Y+18	; 0x12
     938:	20 e0       	ldi	r18, 0x00	; 0
     93a:	30 e0       	ldi	r19, 0x00	; 0
     93c:	40 e2       	ldi	r20, 0x20	; 32
     93e:	51 e4       	ldi	r21, 0x41	; 65
     940:	0e 94 7e 20 	call	0x40fc	; 0x40fc <__divsf3>
     944:	60 93 04 02 	sts	0x0204, r22
     948:	70 93 05 02 	sts	0x0205, r23
     94c:	80 93 06 02 	sts	0x0206, r24
     950:	90 93 07 02 	sts	0x0207, r25
	ftIR = ftIR_new/PREFILTER_SIZE;
     954:	6b 85       	ldd	r22, Y+11	; 0x0b
     956:	7c 85       	ldd	r23, Y+12	; 0x0c
     958:	8d 85       	ldd	r24, Y+13	; 0x0d
     95a:	9e 85       	ldd	r25, Y+14	; 0x0e
     95c:	20 e0       	ldi	r18, 0x00	; 0
     95e:	30 e0       	ldi	r19, 0x00	; 0
     960:	40 e2       	ldi	r20, 0x20	; 32
     962:	51 e4       	ldi	r21, 0x41	; 65
     964:	0e 94 7e 20 	call	0x40fc	; 0x40fc <__divsf3>
     968:	60 93 08 02 	sts	0x0208, r22
     96c:	70 93 09 02 	sts	0x0209, r23
     970:	80 93 0a 02 	sts	0x020A, r24
     974:	90 93 0b 02 	sts	0x020B, r25
	bkIR = bkIR_new/PREFILTER_SIZE;
     978:	6f 81       	ldd	r22, Y+7	; 0x07
     97a:	78 85       	ldd	r23, Y+8	; 0x08
     97c:	89 85       	ldd	r24, Y+9	; 0x09
     97e:	9a 85       	ldd	r25, Y+10	; 0x0a
     980:	20 e0       	ldi	r18, 0x00	; 0
     982:	30 e0       	ldi	r19, 0x00	; 0
     984:	40 e2       	ldi	r20, 0x20	; 32
     986:	51 e4       	ldi	r21, 0x41	; 65
     988:	0e 94 7e 20 	call	0x40fc	; 0x40fc <__divsf3>
     98c:	60 93 0c 02 	sts	0x020C, r22
     990:	70 93 0d 02 	sts	0x020D, r23
     994:	80 93 0e 02 	sts	0x020E, r24
     998:	90 93 0f 02 	sts	0x020F, r25
}
     99c:	64 96       	adiw	r28, 0x14	; 20
     99e:	0f b6       	in	r0, 0x3f	; 63
     9a0:	f8 94       	cli
     9a2:	de bf       	out	0x3e, r29	; 62
     9a4:	0f be       	out	0x3f, r0	; 63
     9a6:	cd bf       	out	0x3d, r28	; 61
     9a8:	cf 91       	pop	r28
     9aa:	df 91       	pop	r29
     9ac:	1f 91       	pop	r17
     9ae:	0f 91       	pop	r16
     9b0:	ff 90       	pop	r15
     9b2:	ef 90       	pop	r14
     9b4:	df 90       	pop	r13
     9b6:	cf 90       	pop	r12
     9b8:	bf 90       	pop	r11
     9ba:	af 90       	pop	r10
     9bc:	9f 90       	pop	r9
     9be:	8f 90       	pop	r8
     9c0:	7f 90       	pop	r7
     9c2:	6f 90       	pop	r6
     9c4:	5f 90       	pop	r5
     9c6:	4f 90       	pop	r4
     9c8:	3f 90       	pop	r3
     9ca:	2f 90       	pop	r2
     9cc:	08 95       	ret

000009ce <pidController>:
* Input Variables:	float error, char reset
* Output Return:	float
* Overview:			This computes the control effort
********************************************************************/
float pidController(float error, char reset )
{	
     9ce:	6f 92       	push	r6
     9d0:	7f 92       	push	r7
     9d2:	8f 92       	push	r8
     9d4:	9f 92       	push	r9
     9d6:	af 92       	push	r10
     9d8:	bf 92       	push	r11
     9da:	cf 92       	push	r12
     9dc:	df 92       	push	r13
     9de:	ef 92       	push	r14
     9e0:	ff 92       	push	r15
     9e2:	0f 93       	push	r16
     9e4:	1f 93       	push	r17
     9e6:	3b 01       	movw	r6, r22
     9e8:	4c 01       	movw	r8, r24
	if(reset){
     9ea:	44 23       	and	r20, r20
     9ec:	61 f0       	breq	.+24     	; 0xa06 <pidController+0x38>
		Ierror = 0;
     9ee:	80 e0       	ldi	r24, 0x00	; 0
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	a0 e0       	ldi	r26, 0x00	; 0
     9f4:	b0 e0       	ldi	r27, 0x00	; 0
     9f6:	80 93 f8 01 	sts	0x01F8, r24
     9fa:	90 93 f9 01 	sts	0x01F9, r25
     9fe:	a0 93 fa 01 	sts	0x01FA, r26
     a02:	b0 93 fb 01 	sts	0x01FB, r27
	}
	Ierror += error;
     a06:	c4 01       	movw	r24, r8
     a08:	b3 01       	movw	r22, r6
     a0a:	20 91 f8 01 	lds	r18, 0x01F8
     a0e:	30 91 f9 01 	lds	r19, 0x01F9
     a12:	40 91 fa 01 	lds	r20, 0x01FA
     a16:	50 91 fb 01 	lds	r21, 0x01FB
     a1a:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
     a1e:	5b 01       	movw	r10, r22
     a20:	6c 01       	movw	r12, r24
     a22:	60 93 f8 01 	sts	0x01F8, r22
     a26:	70 93 f9 01 	sts	0x01F9, r23
     a2a:	80 93 fa 01 	sts	0x01FA, r24
     a2e:	90 93 fb 01 	sts	0x01FB, r25
     a32:	c4 01       	movw	r24, r8
     a34:	b3 01       	movw	r22, r6
     a36:	20 e0       	ldi	r18, 0x00	; 0
     a38:	30 e0       	ldi	r19, 0x00	; 0
     a3a:	40 ee       	ldi	r20, 0xE0	; 224
     a3c:	50 e4       	ldi	r21, 0x40	; 64
     a3e:	0e 94 07 22 	call	0x440e	; 0x440e <__mulsf3>
     a42:	7b 01       	movw	r14, r22
     a44:	8c 01       	movw	r16, r24
     a46:	c4 01       	movw	r24, r8
     a48:	b3 01       	movw	r22, r6
     a4a:	20 91 fc 01 	lds	r18, 0x01FC
     a4e:	30 91 fd 01 	lds	r19, 0x01FD
     a52:	40 91 fe 01 	lds	r20, 0x01FE
     a56:	50 91 ff 01 	lds	r21, 0x01FF
     a5a:	0e 94 15 20 	call	0x402a	; 0x402a <__subsf3>
     a5e:	20 e0       	ldi	r18, 0x00	; 0
     a60:	30 e0       	ldi	r19, 0x00	; 0
     a62:	40 ee       	ldi	r20, 0xE0	; 224
     a64:	50 e4       	ldi	r21, 0x40	; 64
     a66:	0e 94 07 22 	call	0x440e	; 0x440e <__mulsf3>
     a6a:	9b 01       	movw	r18, r22
     a6c:	ac 01       	movw	r20, r24
     a6e:	c8 01       	movw	r24, r16
     a70:	b7 01       	movw	r22, r14
     a72:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
     a76:	7b 01       	movw	r14, r22
     a78:	8c 01       	movw	r16, r24
     a7a:	c6 01       	movw	r24, r12
     a7c:	b5 01       	movw	r22, r10
     a7e:	20 e0       	ldi	r18, 0x00	; 0
     a80:	30 e0       	ldi	r19, 0x00	; 0
     a82:	40 e0       	ldi	r20, 0x00	; 0
     a84:	50 e0       	ldi	r21, 0x00	; 0
     a86:	0e 94 07 22 	call	0x440e	; 0x440e <__mulsf3>
     a8a:	9b 01       	movw	r18, r22
     a8c:	ac 01       	movw	r20, r24
     a8e:	c8 01       	movw	r24, r16
     a90:	b7 01       	movw	r22, r14
     a92:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
	
	float effort = (KP*error) + (KD*(error-error_old)) + (KI*Ierror);
	
	return effort;	
}
     a96:	1f 91       	pop	r17
     a98:	0f 91       	pop	r16
     a9a:	ff 90       	pop	r15
     a9c:	ef 90       	pop	r14
     a9e:	df 90       	pop	r13
     aa0:	cf 90       	pop	r12
     aa2:	bf 90       	pop	r11
     aa4:	af 90       	pop	r10
     aa6:	9f 90       	pop	r9
     aa8:	8f 90       	pop	r8
     aaa:	7f 90       	pop	r7
     aac:	6f 90       	pop	r6
     aae:	08 95       	ret

00000ab0 <check_threshhold>:
* Output Return:	char
* Overview:			This check the IR values to thresholds
********************************************************************/

char check_threshhold(float F, float B, float L, float R)
{
     ab0:	2f 92       	push	r2
     ab2:	6f 92       	push	r6
     ab4:	7f 92       	push	r7
     ab6:	8f 92       	push	r8
     ab8:	9f 92       	push	r9
     aba:	af 92       	push	r10
     abc:	bf 92       	push	r11
     abe:	cf 92       	push	r12
     ac0:	df 92       	push	r13
     ac2:	ef 92       	push	r14
     ac4:	ff 92       	push	r15
     ac6:	0f 93       	push	r16
     ac8:	1f 93       	push	r17
     aca:	df 93       	push	r29
     acc:	cf 93       	push	r28
     ace:	00 d0       	rcall	.+0      	; 0xad0 <check_threshhold+0x20>
     ad0:	00 d0       	rcall	.+0      	; 0xad2 <check_threshhold+0x22>
     ad2:	cd b7       	in	r28, 0x3d	; 61
     ad4:	de b7       	in	r29, 0x3e	; 62
     ad6:	69 83       	std	Y+1, r22	; 0x01
     ad8:	7a 83       	std	Y+2, r23	; 0x02
     ada:	8b 83       	std	Y+3, r24	; 0x03
     adc:	9c 83       	std	Y+4, r25	; 0x04
	char check = 0;
	check += 0b00000001*(ftIR < F);
     ade:	60 90 08 02 	lds	r6, 0x0208
     ae2:	70 90 09 02 	lds	r7, 0x0209
     ae6:	80 90 0a 02 	lds	r8, 0x020A
     aea:	90 90 0b 02 	lds	r9, 0x020B
	check += 0b00000010*(bkIR < B);
     aee:	60 91 0c 02 	lds	r22, 0x020C
     af2:	70 91 0d 02 	lds	r23, 0x020D
     af6:	80 91 0e 02 	lds	r24, 0x020E
     afa:	90 91 0f 02 	lds	r25, 0x020F
     afe:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     b02:	28 2e       	mov	r2, r24
     b04:	22 1c       	adc	r2, r2
     b06:	22 24       	eor	r2, r2
     b08:	22 1c       	adc	r2, r2
     b0a:	22 0c       	add	r2, r2
	check += 0b00000100*(ltIR < L);
     b0c:	60 91 00 02 	lds	r22, 0x0200
     b10:	70 91 01 02 	lds	r23, 0x0201
     b14:	80 91 02 02 	lds	r24, 0x0202
     b18:	90 91 03 02 	lds	r25, 0x0203
     b1c:	a8 01       	movw	r20, r16
     b1e:	97 01       	movw	r18, r14
     b20:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     b24:	08 2f       	mov	r16, r24
     b26:	00 1f       	adc	r16, r16
     b28:	00 27       	eor	r16, r16
     b2a:	00 1f       	adc	r16, r16
     b2c:	00 0f       	add	r16, r16
     b2e:	00 0f       	add	r16, r16
	check += 0b00001000*(rtIR < R);
     b30:	60 91 04 02 	lds	r22, 0x0204
     b34:	70 91 05 02 	lds	r23, 0x0205
     b38:	80 91 06 02 	lds	r24, 0x0206
     b3c:	90 91 07 02 	lds	r25, 0x0207
     b40:	a6 01       	movw	r20, r12
     b42:	95 01       	movw	r18, r10
     b44:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     b48:	18 2f       	mov	r17, r24
     b4a:	11 1f       	adc	r17, r17
     b4c:	11 27       	eor	r17, r17
     b4e:	11 1f       	adc	r17, r17
     b50:	11 0f       	add	r17, r17
     b52:	11 0f       	add	r17, r17
     b54:	11 0f       	add	r17, r17

char check_threshhold(float F, float B, float L, float R)
{
	char check = 0;
	check += 0b00000001*(ftIR < F);
	check += 0b00000010*(bkIR < B);
     b56:	ff 24       	eor	r15, r15
     b58:	c4 01       	movw	r24, r8
     b5a:	b3 01       	movw	r22, r6
     b5c:	29 81       	ldd	r18, Y+1	; 0x01
     b5e:	3a 81       	ldd	r19, Y+2	; 0x02
     b60:	4b 81       	ldd	r20, Y+3	; 0x03
     b62:	5c 81       	ldd	r21, Y+4	; 0x04
     b64:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     b68:	88 23       	and	r24, r24
     b6a:	14 f4       	brge	.+4      	; 0xb70 <check_threshhold+0xc0>
     b6c:	ff 24       	eor	r15, r15
     b6e:	f3 94       	inc	r15
     b70:	2f 0c       	add	r2, r15
	check += 0b00000100*(ltIR < L);
     b72:	20 0e       	add	r2, r16
	check += 0b00001000*(rtIR < R);
	return check;	
}
     b74:	82 2d       	mov	r24, r2
     b76:	81 0f       	add	r24, r17
     b78:	0f 90       	pop	r0
     b7a:	0f 90       	pop	r0
     b7c:	0f 90       	pop	r0
     b7e:	0f 90       	pop	r0
     b80:	cf 91       	pop	r28
     b82:	df 91       	pop	r29
     b84:	1f 91       	pop	r17
     b86:	0f 91       	pop	r16
     b88:	ff 90       	pop	r15
     b8a:	ef 90       	pop	r14
     b8c:	df 90       	pop	r13
     b8e:	cf 90       	pop	r12
     b90:	bf 90       	pop	r11
     b92:	af 90       	pop	r10
     b94:	9f 90       	pop	r9
     b96:	8f 90       	pop	r8
     b98:	7f 90       	pop	r7
     b9a:	6f 90       	pop	r6
     b9c:	2f 90       	pop	r2
     b9e:	08 95       	ret

00000ba0 <move_arc_stwt>:
		// bool stepper_FWD = arcLength >= 0;
		// STEPPER_move_stwt( STEPPER_BOTH, 
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk, // Left
		// stepper_FWD, stepper_NUM, arcSpeed, arcAccel, arcBrk); // Right
	// }
}
     ba0:	08 95       	ret

00000ba2 <checkIR>:
* Overview:			Use a comment block like this before functions
********************************************************************/
void checkIR( void )
{
	// Update all IR values
	ftIR = getFrontIR();
     ba2:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <getFrontIR>
     ba6:	60 93 08 02 	sts	0x0208, r22
     baa:	70 93 09 02 	sts	0x0209, r23
     bae:	80 93 0a 02 	sts	0x020A, r24
     bb2:	90 93 0b 02 	sts	0x020B, r25
	bkIR = getBackIR();
     bb6:	0e 94 c1 0b 	call	0x1782	; 0x1782 <getBackIR>
     bba:	60 93 0c 02 	sts	0x020C, r22
     bbe:	70 93 0d 02 	sts	0x020D, r23
     bc2:	80 93 0e 02 	sts	0x020E, r24
     bc6:	90 93 0f 02 	sts	0x020F, r25
	ltIR = getLeftIR();
     bca:	0e 94 2a 0c 	call	0x1854	; 0x1854 <getLeftIR>
     bce:	60 93 00 02 	sts	0x0200, r22
     bd2:	70 93 01 02 	sts	0x0201, r23
     bd6:	80 93 02 02 	sts	0x0202, r24
     bda:	90 93 03 02 	sts	0x0203, r25
	rtIR = getRightIR();
     bde:	0e 94 07 0c 	call	0x180e	; 0x180e <getRightIR>
     be2:	60 93 04 02 	sts	0x0204, r22
     be6:	70 93 05 02 	sts	0x0205, r23
     bea:	80 93 06 02 	sts	0x0206, r24
     bee:	90 93 07 02 	sts	0x0207, r25
}
     bf2:	08 95       	ret

00000bf4 <moveAway>:
* Input Variables:	none
* Output Return:	char
* Overview:			Use a comment block like this before functions
********************************************************************/
char moveAway ( void )
{	
     bf4:	2f 92       	push	r2
     bf6:	3f 92       	push	r3
     bf8:	4f 92       	push	r4
     bfa:	5f 92       	push	r5
     bfc:	6f 92       	push	r6
     bfe:	7f 92       	push	r7
     c00:	8f 92       	push	r8
     c02:	9f 92       	push	r9
     c04:	af 92       	push	r10
     c06:	bf 92       	push	r11
     c08:	cf 92       	push	r12
     c0a:	df 92       	push	r13
     c0c:	ef 92       	push	r14
     c0e:	ff 92       	push	r15
     c10:	0f 93       	push	r16
     c12:	1f 93       	push	r17
     c14:	df 93       	push	r29
     c16:	cf 93       	push	r28
     c18:	00 d0       	rcall	.+0      	; 0xc1a <moveAway+0x26>
     c1a:	00 d0       	rcall	.+0      	; 0xc1c <moveAway+0x28>
     c1c:	cd b7       	in	r28, 0x3d	; 61
     c1e:	de b7       	in	r29, 0x3e	; 62
	char shyRobot = 0;
	
	float moveY = ftIR - bkIR;
     c20:	60 90 08 02 	lds	r6, 0x0208
     c24:	70 90 09 02 	lds	r7, 0x0209
     c28:	80 90 0a 02 	lds	r8, 0x020A
     c2c:	90 90 0b 02 	lds	r9, 0x020B
     c30:	a0 90 0c 02 	lds	r10, 0x020C
     c34:	b0 90 0d 02 	lds	r11, 0x020D
     c38:	c0 90 0e 02 	lds	r12, 0x020E
     c3c:	d0 90 0f 02 	lds	r13, 0x020F
	float moveX = rtIR - ltIR;
     c40:	e0 90 04 02 	lds	r14, 0x0204
     c44:	f0 90 05 02 	lds	r15, 0x0205
     c48:	00 91 06 02 	lds	r16, 0x0206
     c4c:	10 91 07 02 	lds	r17, 0x0207
     c50:	20 90 00 02 	lds	r2, 0x0200
     c54:	30 90 01 02 	lds	r3, 0x0201
     c58:	40 90 02 02 	lds	r4, 0x0202
     c5c:	50 90 03 02 	lds	r5, 0x0203
     c60:	c8 01       	movw	r24, r16
     c62:	b7 01       	movw	r22, r14
     c64:	a2 01       	movw	r20, r4
     c66:	91 01       	movw	r18, r2
     c68:	0e 94 15 20 	call	0x402a	; 0x402a <__subsf3>
     c6c:	69 83       	std	Y+1, r22	; 0x01
     c6e:	7a 83       	std	Y+2, r23	; 0x02
     c70:	8b 83       	std	Y+3, r24	; 0x03
     c72:	9c 83       	std	Y+4, r25	; 0x04
	
	
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
     c74:	c4 01       	movw	r24, r8
     c76:	b3 01       	movw	r22, r6
     c78:	20 e0       	ldi	r18, 0x00	; 0
     c7a:	30 e0       	ldi	r19, 0x00	; 0
     c7c:	40 e8       	ldi	r20, 0x80	; 128
     c7e:	5f e3       	ldi	r21, 0x3F	; 63
     c80:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     c84:	87 fd       	sbrc	r24, 7
     c86:	0b c0       	rjmp	.+22     	; 0xc9e <moveAway+0xaa>
     c88:	c6 01       	movw	r24, r12
     c8a:	b5 01       	movw	r22, r10
     c8c:	20 e0       	ldi	r18, 0x00	; 0
     c8e:	30 e0       	ldi	r19, 0x00	; 0
     c90:	40 e8       	ldi	r20, 0x80	; 128
     c92:	5f e3       	ldi	r21, 0x3F	; 63
     c94:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     c98:	88 23       	and	r24, r24
     c9a:	0c f0       	brlt	.+2      	; 0xc9e <moveAway+0xaa>
     c9c:	76 c0       	rjmp	.+236    	; 0xd8a <moveAway+0x196>
********************************************************************/
char moveAway ( void )
{	
	char shyRobot = 0;
	
	float moveY = ftIR - bkIR;
     c9e:	c4 01       	movw	r24, r8
     ca0:	b3 01       	movw	r22, r6
     ca2:	a6 01       	movw	r20, r12
     ca4:	95 01       	movw	r18, r10
     ca6:	0e 94 15 20 	call	0x402a	; 0x402a <__subsf3>
     caa:	7b 01       	movw	r14, r22
     cac:	8c 01       	movw	r16, r24
	float moveX = rtIR - ltIR;
	
	
	if ((ftIR < IR_OBST_F_THRESH)|(bkIR < IR_OBST_B_THRESH))
	{
			BOOL moveForward = ~(moveY <= 0);
     cae:	dd 24       	eor	r13, r13
     cb0:	20 e0       	ldi	r18, 0x00	; 0
     cb2:	30 e0       	ldi	r19, 0x00	; 0
     cb4:	40 e0       	ldi	r20, 0x00	; 0
     cb6:	50 e0       	ldi	r21, 0x00	; 0
     cb8:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     cbc:	18 16       	cp	r1, r24
     cbe:	14 f0       	brlt	.+4      	; 0xcc4 <moveAway+0xd0>
     cc0:	dd 24       	eor	r13, r13
     cc2:	d3 94       	inc	r13
     cc4:	7d 2c       	mov	r7, r13
     cc6:	70 94       	com	r7
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
     cc8:	c8 01       	movw	r24, r16
     cca:	b7 01       	movw	r22, r14
     ccc:	0e 94 e6 20 	call	0x41cc	; 0x41cc <__fixsfsi>
     cd0:	9b 01       	movw	r18, r22
     cd2:	77 ff       	sbrs	r23, 7
     cd4:	03 c0       	rjmp	.+6      	; 0xcdc <moveAway+0xe8>
     cd6:	30 95       	com	r19
     cd8:	21 95       	neg	r18
     cda:	3f 4f       	sbci	r19, 0xFF	; 255
     cdc:	b9 01       	movw	r22, r18
     cde:	88 27       	eor	r24, r24
     ce0:	77 fd       	sbrc	r23, 7
     ce2:	80 95       	com	r24
     ce4:	98 2f       	mov	r25, r24
     ce6:	0e 94 19 21 	call	0x4232	; 0x4232 <__floatsisf>
     cea:	6b 01       	movw	r12, r22
     cec:	7c 01       	movw	r14, r24
     cee:	8d b7       	in	r24, 0x3d	; 61
     cf0:	9e b7       	in	r25, 0x3e	; 62
     cf2:	09 97       	sbiw	r24, 0x09	; 9
     cf4:	0f b6       	in	r0, 0x3f	; 63
     cf6:	f8 94       	cli
     cf8:	9e bf       	out	0x3e, r25	; 62
     cfa:	0f be       	out	0x3f, r0	; 63
     cfc:	8d bf       	out	0x3d, r24	; 61
     cfe:	0d b7       	in	r16, 0x3d	; 61
     d00:	1e b7       	in	r17, 0x3e	; 62
     d02:	0f 5f       	subi	r16, 0xFF	; 255
     d04:	1f 4f       	sbci	r17, 0xFF	; 255
     d06:	c7 01       	movw	r24, r14
     d08:	b6 01       	movw	r22, r12
     d0a:	29 81       	ldd	r18, Y+1	; 0x01
     d0c:	3a 81       	ldd	r19, Y+2	; 0x02
     d0e:	4b 81       	ldd	r20, Y+3	; 0x03
     d10:	5c 81       	ldd	r21, Y+4	; 0x04
     d12:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
     d16:	0e 94 eb 20 	call	0x41d6	; 0x41d6 <__fixunssfsi>
     d1a:	4b 01       	movw	r8, r22
     d1c:	5c 01       	movw	r10, r24
     d1e:	82 e3       	ldi	r24, 0x32	; 50
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	f8 01       	movw	r30, r16
     d24:	91 83       	std	Z+1, r25	; 0x01
     d26:	80 83       	st	Z, r24
     d28:	c7 01       	movw	r24, r14
     d2a:	b6 01       	movw	r22, r12
     d2c:	29 81       	ldd	r18, Y+1	; 0x01
     d2e:	3a 81       	ldd	r19, Y+2	; 0x02
     d30:	4b 81       	ldd	r20, Y+3	; 0x03
     d32:	5c 81       	ldd	r21, Y+4	; 0x04
     d34:	0e 94 15 20 	call	0x402a	; 0x402a <__subsf3>
     d38:	0e 94 eb 20 	call	0x41d6	; 0x41d6 <__fixunssfsi>
     d3c:	f8 01       	movw	r30, r16
     d3e:	73 83       	std	Z+3, r23	; 0x03
     d40:	62 83       	std	Z+2, r22	; 0x02
     d42:	82 ec       	ldi	r24, 0xC2	; 194
     d44:	91 e0       	ldi	r25, 0x01	; 1
     d46:	95 83       	std	Z+5, r25	; 0x05
     d48:	84 83       	std	Z+4, r24	; 0x04
     d4a:	16 82       	std	Z+6, r1	; 0x06
     d4c:	10 86       	std	Z+8, r1	; 0x08
     d4e:	17 82       	std	Z+7, r1	; 0x07
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	62 e0       	ldi	r22, 0x02	; 2
     d54:	47 2d       	mov	r20, r7
     d56:	22 e3       	ldi	r18, 0x32	; 50
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	84 01       	movw	r16, r8
     d5c:	52 ec       	ldi	r21, 0xC2	; 194
     d5e:	e5 2e       	mov	r14, r21
     d60:	51 e0       	ldi	r21, 0x01	; 1
     d62:	f5 2e       	mov	r15, r21
     d64:	cc 24       	eor	r12, r12
     d66:	aa 24       	eor	r10, r10
     d68:	bb 24       	eor	r11, r11
     d6a:	87 2c       	mov	r8, r7
     d6c:	0e 94 3f 10 	call	0x207e	; 0x207e <STEPPER_move>
			moveForward, 50, abs(moveY)+moveX, 450, STEPPER_BRK_OFF, // Left
			moveForward, 50, abs(moveY)-moveX, 450, STEPPER_BRK_OFF ); // Right
			LCD_clear();
     d70:	8d b7       	in	r24, 0x3d	; 61
     d72:	9e b7       	in	r25, 0x3e	; 62
     d74:	09 96       	adiw	r24, 0x09	; 9
     d76:	0f b6       	in	r0, 0x3f	; 63
     d78:	f8 94       	cli
     d7a:	9e bf       	out	0x3e, r25	; 62
     d7c:	0f be       	out	0x3f, r0	; 63
     d7e:	8d bf       	out	0x3d, r24	; 61
     d80:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <LCD_clear>
			LCD_printf("moveAwayF\n\n\n\n");
     d84:	80 e0       	ldi	r24, 0x00	; 0
     d86:	91 e0       	ldi	r25, 0x01	; 1
     d88:	78 c0       	rjmp	.+240    	; 0xe7a <moveAway+0x286>
			
			shyRobot = 1;
	}
	else if ((rtIR < IR_OBST_R_THRESH)|(ltIR < IR_OBST_L_THRESH))
     d8a:	c8 01       	movw	r24, r16
     d8c:	b7 01       	movw	r22, r14
     d8e:	20 e0       	ldi	r18, 0x00	; 0
     d90:	30 e0       	ldi	r19, 0x00	; 0
     d92:	40 e8       	ldi	r20, 0x80	; 128
     d94:	5f e3       	ldi	r21, 0x3F	; 63
     d96:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     d9a:	87 fd       	sbrc	r24, 7
     d9c:	0c c0       	rjmp	.+24     	; 0xdb6 <moveAway+0x1c2>
     d9e:	c2 01       	movw	r24, r4
     da0:	b1 01       	movw	r22, r2
     da2:	20 e0       	ldi	r18, 0x00	; 0
     da4:	30 e0       	ldi	r19, 0x00	; 0
     da6:	40 e8       	ldi	r20, 0x80	; 128
     da8:	5f e3       	ldi	r21, 0x3F	; 63
     daa:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     dae:	87 fd       	sbrc	r24, 7
     db0:	02 c0       	rjmp	.+4      	; 0xdb6 <moveAway+0x1c2>
     db2:	80 e0       	ldi	r24, 0x00	; 0
     db4:	65 c0       	rjmp	.+202    	; 0xe80 <moveAway+0x28c>
	{
			BOOL moveForwardR = ~(moveX <= 0);
			BOOL moveForwardL = ~(moveX > 0);
			
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
     db6:	69 81       	ldd	r22, Y+1	; 0x01
     db8:	7a 81       	ldd	r23, Y+2	; 0x02
     dba:	8b 81       	ldd	r24, Y+3	; 0x03
     dbc:	9c 81       	ldd	r25, Y+4	; 0x04
     dbe:	0e 94 e6 20 	call	0x41cc	; 0x41cc <__fixsfsi>
     dc2:	8b 01       	movw	r16, r22
     dc4:	77 ff       	sbrs	r23, 7
     dc6:	03 c0       	rjmp	.+6      	; 0xdce <moveAway+0x1da>
     dc8:	10 95       	com	r17
     dca:	01 95       	neg	r16
     dcc:	1f 4f       	sbci	r17, 0xFF	; 255
     dce:	ed b7       	in	r30, 0x3d	; 61
     dd0:	fe b7       	in	r31, 0x3e	; 62
     dd2:	39 97       	sbiw	r30, 0x09	; 9
     dd4:	0f b6       	in	r0, 0x3f	; 63
     dd6:	f8 94       	cli
     dd8:	fe bf       	out	0x3e, r31	; 62
     dda:	0f be       	out	0x3f, r0	; 63
     ddc:	ed bf       	out	0x3d, r30	; 61
     dde:	ad b6       	in	r10, 0x3d	; 61
     de0:	be b6       	in	r11, 0x3e	; 62
     de2:	08 94       	sec
     de4:	a1 1c       	adc	r10, r1
     de6:	b1 1c       	adc	r11, r1
     de8:	ff 24       	eor	r15, r15
     dea:	69 81       	ldd	r22, Y+1	; 0x01
     dec:	7a 81       	ldd	r23, Y+2	; 0x02
     dee:	8b 81       	ldd	r24, Y+3	; 0x03
     df0:	9c 81       	ldd	r25, Y+4	; 0x04
     df2:	20 e0       	ldi	r18, 0x00	; 0
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	40 e0       	ldi	r20, 0x00	; 0
     df8:	50 e0       	ldi	r21, 0x00	; 0
     dfa:	0e 94 c9 21 	call	0x4392	; 0x4392 <__gesf2>
     dfe:	18 16       	cp	r1, r24
     e00:	14 f4       	brge	.+4      	; 0xe06 <moveAway+0x212>
     e02:	ff 24       	eor	r15, r15
     e04:	f3 94       	inc	r15
     e06:	f0 94       	com	r15
     e08:	dd 24       	eor	r13, r13
     e0a:	69 81       	ldd	r22, Y+1	; 0x01
     e0c:	7a 81       	ldd	r23, Y+2	; 0x02
     e0e:	8b 81       	ldd	r24, Y+3	; 0x03
     e10:	9c 81       	ldd	r25, Y+4	; 0x04
     e12:	20 e0       	ldi	r18, 0x00	; 0
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	40 e0       	ldi	r20, 0x00	; 0
     e18:	50 e0       	ldi	r21, 0x00	; 0
     e1a:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     e1e:	18 16       	cp	r1, r24
     e20:	14 f0       	brlt	.+4      	; 0xe26 <moveAway+0x232>
     e22:	dd 24       	eor	r13, r13
     e24:	d3 94       	inc	r13
     e26:	d0 94       	com	r13
     e28:	88 ec       	ldi	r24, 0xC8	; 200
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	f5 01       	movw	r30, r10
     e2e:	91 83       	std	Z+1, r25	; 0x01
     e30:	80 83       	st	Z, r24
     e32:	13 83       	std	Z+3, r17	; 0x03
     e34:	02 83       	std	Z+2, r16	; 0x02
     e36:	82 ec       	ldi	r24, 0xC2	; 194
     e38:	91 e0       	ldi	r25, 0x01	; 1
     e3a:	95 83       	std	Z+5, r25	; 0x05
     e3c:	84 83       	std	Z+4, r24	; 0x04
     e3e:	16 82       	std	Z+6, r1	; 0x06
     e40:	10 86       	std	Z+8, r1	; 0x08
     e42:	17 82       	std	Z+7, r1	; 0x07
     e44:	81 e0       	ldi	r24, 0x01	; 1
     e46:	62 e0       	ldi	r22, 0x02	; 2
     e48:	4f 2d       	mov	r20, r15
     e4a:	28 ec       	ldi	r18, 0xC8	; 200
     e4c:	30 e0       	ldi	r19, 0x00	; 0
     e4e:	92 ec       	ldi	r25, 0xC2	; 194
     e50:	e9 2e       	mov	r14, r25
     e52:	91 e0       	ldi	r25, 0x01	; 1
     e54:	f9 2e       	mov	r15, r25
     e56:	cc 24       	eor	r12, r12
     e58:	aa 24       	eor	r10, r10
     e5a:	bb 24       	eor	r11, r11
     e5c:	8d 2c       	mov	r8, r13
     e5e:	0e 94 3f 10 	call	0x207e	; 0x207e <STEPPER_move>
			moveForwardL, 200, abs(moveX), 450, STEPPER_BRK_OFF, // Left
			moveForwardR, 200, abs(moveX), 450, STEPPER_BRK_OFF ); // Right
			LCD_clear();
     e62:	8d b7       	in	r24, 0x3d	; 61
     e64:	9e b7       	in	r25, 0x3e	; 62
     e66:	09 96       	adiw	r24, 0x09	; 9
     e68:	0f b6       	in	r0, 0x3f	; 63
     e6a:	f8 94       	cli
     e6c:	9e bf       	out	0x3e, r25	; 62
     e6e:	0f be       	out	0x3f, r0	; 63
     e70:	8d bf       	out	0x3d, r24	; 61
     e72:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <LCD_clear>
			LCD_printf("moveAwayS\n\n\n\n");
     e76:	8d e0       	ldi	r24, 0x0D	; 13
     e78:	91 e0       	ldi	r25, 0x01	; 1
     e7a:	0e 94 60 2a 	call	0x54c0	; 0x54c0 <puts>
     e7e:	81 e0       	ldi	r24, 0x01	; 1
			
			shyRobot = 1;
	}
	
	return shyRobot;
}
     e80:	0f 90       	pop	r0
     e82:	0f 90       	pop	r0
     e84:	0f 90       	pop	r0
     e86:	0f 90       	pop	r0
     e88:	cf 91       	pop	r28
     e8a:	df 91       	pop	r29
     e8c:	1f 91       	pop	r17
     e8e:	0f 91       	pop	r16
     e90:	ff 90       	pop	r15
     e92:	ef 90       	pop	r14
     e94:	df 90       	pop	r13
     e96:	cf 90       	pop	r12
     e98:	bf 90       	pop	r11
     e9a:	af 90       	pop	r10
     e9c:	9f 90       	pop	r9
     e9e:	8f 90       	pop	r8
     ea0:	7f 90       	pop	r7
     ea2:	6f 90       	pop	r6
     ea4:	5f 90       	pop	r5
     ea6:	4f 90       	pop	r4
     ea8:	3f 90       	pop	r3
     eaa:	2f 90       	pop	r2
     eac:	08 95       	ret

00000eae <moveWander>:
* Input Variables:	none
* Output Return:	none
* Overview:			Use a comment block like this before functions
********************************************************************/
char moveWander ( void )
{
     eae:	2f 92       	push	r2
     eb0:	3f 92       	push	r3
     eb2:	4f 92       	push	r4
     eb4:	5f 92       	push	r5
     eb6:	6f 92       	push	r6
     eb8:	7f 92       	push	r7
     eba:	8f 92       	push	r8
     ebc:	af 92       	push	r10
     ebe:	bf 92       	push	r11
     ec0:	cf 92       	push	r12
     ec2:	df 92       	push	r13
     ec4:	ef 92       	push	r14
     ec6:	ff 92       	push	r15
     ec8:	0f 93       	push	r16
     eca:	1f 93       	push	r17
     ecc:	df 93       	push	r29
     ece:	cf 93       	push	r28
     ed0:	00 d0       	rcall	.+0      	; 0xed2 <moveWander+0x24>
     ed2:	00 d0       	rcall	.+0      	; 0xed4 <moveWander+0x26>
     ed4:	cd b7       	in	r28, 0x3d	; 61
     ed6:	de b7       	in	r29, 0x3e	; 62
	// Check moveAway() (shy kid) program
	char isShy = moveAway();
     ed8:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <moveAway>
     edc:	c8 2e       	mov	r12, r24
	char isWander = 0;
	
	// Check to see if robot sees a wall. If YES go track the wall else randomly WANDER.
	if (isShy)
     ede:	88 23       	and	r24, r24
     ee0:	09 f0       	breq	.+2      	; 0xee4 <moveWander+0x36>
     ee2:	17 c1       	rjmp	.+558    	; 0x1112 <moveWander+0x264>
	{
		return isShy;
	}
	
	// char irBool = check_threshhold(IR_WALL_F_THRESH,IR_WALL_B_THRESH,IR_WALL_L_THRESH,IR_WALL_R_THRESH);
	if ((ftIR < IR_WALL_F_THRESH)|(bkIR < IR_WALL_B_THRESH)|(rtIR < IR_WALL_R_THRESH)|(ltIR < IR_WALL_L_THRESH))
     ee4:	ee 24       	eor	r14, r14
     ee6:	ff 24       	eor	r15, r15
     ee8:	60 91 00 02 	lds	r22, 0x0200
     eec:	70 91 01 02 	lds	r23, 0x0201
     ef0:	80 91 02 02 	lds	r24, 0x0202
     ef4:	90 91 03 02 	lds	r25, 0x0203
     ef8:	20 e0       	ldi	r18, 0x00	; 0
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	40 ea       	ldi	r20, 0xA0	; 160
     efe:	51 e4       	ldi	r21, 0x41	; 65
     f00:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     f04:	88 23       	and	r24, r24
     f06:	1c f4       	brge	.+6      	; 0xf0e <moveWander+0x60>
     f08:	f1 e0       	ldi	r31, 0x01	; 1
     f0a:	ef 2e       	mov	r14, r31
     f0c:	f1 2c       	mov	r15, r1
     f0e:	00 e0       	ldi	r16, 0x00	; 0
     f10:	10 e0       	ldi	r17, 0x00	; 0
     f12:	60 91 04 02 	lds	r22, 0x0204
     f16:	70 91 05 02 	lds	r23, 0x0205
     f1a:	80 91 06 02 	lds	r24, 0x0206
     f1e:	90 91 07 02 	lds	r25, 0x0207
     f22:	20 e0       	ldi	r18, 0x00	; 0
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	40 ea       	ldi	r20, 0xA0	; 160
     f28:	51 e4       	ldi	r21, 0x41	; 65
     f2a:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     f2e:	88 23       	and	r24, r24
     f30:	14 f4       	brge	.+4      	; 0xf36 <moveWander+0x88>
     f32:	01 e0       	ldi	r16, 0x01	; 1
     f34:	10 e0       	ldi	r17, 0x00	; 0
     f36:	0e 29       	or	r16, r14
     f38:	1f 29       	or	r17, r15
     f3a:	ff 24       	eor	r15, r15
     f3c:	60 91 08 02 	lds	r22, 0x0208
     f40:	70 91 09 02 	lds	r23, 0x0209
     f44:	80 91 0a 02 	lds	r24, 0x020A
     f48:	90 91 0b 02 	lds	r25, 0x020B
     f4c:	20 e0       	ldi	r18, 0x00	; 0
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	40 ea       	ldi	r20, 0xA0	; 160
     f52:	51 e4       	ldi	r21, 0x41	; 65
     f54:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     f58:	88 23       	and	r24, r24
     f5a:	14 f4       	brge	.+4      	; 0xf60 <moveWander+0xb2>
     f5c:	ff 24       	eor	r15, r15
     f5e:	f3 94       	inc	r15
     f60:	ee 24       	eor	r14, r14
     f62:	60 91 0c 02 	lds	r22, 0x020C
     f66:	70 91 0d 02 	lds	r23, 0x020D
     f6a:	80 91 0e 02 	lds	r24, 0x020E
     f6e:	90 91 0f 02 	lds	r25, 0x020F
     f72:	20 e0       	ldi	r18, 0x00	; 0
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	40 e2       	ldi	r20, 0x20	; 32
     f78:	52 e4       	ldi	r21, 0x42	; 66
     f7a:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
     f7e:	88 23       	and	r24, r24
     f80:	14 f4       	brge	.+4      	; 0xf86 <moveWander+0xd8>
     f82:	ee 24       	eor	r14, r14
     f84:	e3 94       	inc	r14
     f86:	fe 28       	or	r15, r14
     f88:	8f 2d       	mov	r24, r15
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	08 2b       	or	r16, r24
     f8e:	19 2b       	or	r17, r25
     f90:	01 2b       	or	r16, r17
     f92:	09 f0       	breq	.+2      	; 0xf96 <moveWander+0xe8>
     f94:	be c0       	rjmp	.+380    	; 0x1112 <moveWander+0x264>
	{	
		return isWander = 0;
	}
	else
	{
		STEPPER_STEPS curr_steps = STEPPER_get_nSteps();
     f96:	0e 94 77 0f 	call	0x1eee	; 0x1eee <STEPPER_get_nSteps>
     f9a:	9b 01       	movw	r18, r22
     f9c:	ac 01       	movw	r20, r24
		
		// reset Ierror if we are now wandering
		Ierror = 0;
     f9e:	80 e0       	ldi	r24, 0x00	; 0
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	a0 e0       	ldi	r26, 0x00	; 0
     fa4:	b0 e0       	ldi	r27, 0x00	; 0
     fa6:	80 93 f8 01 	sts	0x01F8, r24
     faa:	90 93 f9 01 	sts	0x01F9, r25
     fae:	a0 93 fa 01 	sts	0x01FA, r26
     fb2:	b0 93 fb 01 	sts	0x01FB, r27
		
		// IF moveAway() returns zero (NOT shy) and my motion is complete do random motion
		if ((curr_steps.left == 0)&(curr_steps.right == 0))
     fb6:	23 2b       	or	r18, r19
     fb8:	11 f4       	brne	.+4      	; 0xfbe <moveWander+0x110>
     fba:	45 2b       	or	r20, r21
     fbc:	19 f0       	breq	.+6      	; 0xfc4 <moveWander+0x116>
     fbe:	cc 24       	eor	r12, r12
     fc0:	c3 94       	inc	r12
     fc2:	a7 c0       	rjmp	.+334    	; 0x1112 <moveWander+0x264>
		{
			// create random values for wheel position and wheel speed
			int moveRand = rand()%400+400;
     fc4:	0e 94 25 29 	call	0x524a	; 0x524a <rand>
     fc8:	60 e9       	ldi	r22, 0x90	; 144
     fca:	71 e0       	ldi	r23, 0x01	; 1
     fcc:	0e 94 56 27 	call	0x4eac	; 0x4eac <__divmodhi4>
     fd0:	e0 e9       	ldi	r30, 0x90	; 144
     fd2:	2e 2e       	mov	r2, r30
     fd4:	e1 e0       	ldi	r30, 0x01	; 1
     fd6:	3e 2e       	mov	r3, r30
     fd8:	28 0e       	add	r2, r24
     fda:	39 1e       	adc	r3, r25
			float turnRandR = rand()%200+200;
     fdc:	0e 94 25 29 	call	0x524a	; 0x524a <rand>
     fe0:	68 ec       	ldi	r22, 0xC8	; 200
     fe2:	70 e0       	ldi	r23, 0x00	; 0
     fe4:	0e 94 56 27 	call	0x4eac	; 0x4eac <__divmodhi4>
     fe8:	88 53       	subi	r24, 0x38	; 56
     fea:	9f 4f       	sbci	r25, 0xFF	; 255
     fec:	aa 27       	eor	r26, r26
     fee:	97 fd       	sbrc	r25, 7
     ff0:	a0 95       	com	r26
     ff2:	ba 2f       	mov	r27, r26
     ff4:	bc 01       	movw	r22, r24
     ff6:	cd 01       	movw	r24, r26
     ff8:	0e 94 19 21 	call	0x4232	; 0x4232 <__floatsisf>
     ffc:	69 83       	std	Y+1, r22	; 0x01
     ffe:	7a 83       	std	Y+2, r23	; 0x02
    1000:	8b 83       	std	Y+3, r24	; 0x03
    1002:	9c 83       	std	Y+4, r25	; 0x04
			float turnRandL = rand()%200+200;
    1004:	0e 94 25 29 	call	0x524a	; 0x524a <rand>
    1008:	68 ec       	ldi	r22, 0xC8	; 200
    100a:	70 e0       	ldi	r23, 0x00	; 0
    100c:	0e 94 56 27 	call	0x4eac	; 0x4eac <__divmodhi4>
    1010:	88 53       	subi	r24, 0x38	; 56
    1012:	9f 4f       	sbci	r25, 0xFF	; 255
    1014:	aa 27       	eor	r26, r26
    1016:	97 fd       	sbrc	r25, 7
    1018:	a0 95       	com	r26
    101a:	ba 2f       	mov	r27, r26
    101c:	bc 01       	movw	r22, r24
    101e:	cd 01       	movw	r24, r26
    1020:	0e 94 19 21 	call	0x4232	; 0x4232 <__floatsisf>
    1024:	2b 01       	movw	r4, r22
    1026:	3c 01       	movw	r6, r24
			
			BOOL direction = ~((rand()%10)>7);
    1028:	0e 94 25 29 	call	0x524a	; 0x524a <rand>
    102c:	20 e0       	ldi	r18, 0x00	; 0
    102e:	6a e0       	ldi	r22, 0x0A	; 10
    1030:	70 e0       	ldi	r23, 0x00	; 0
    1032:	0e 94 56 27 	call	0x4eac	; 0x4eac <__divmodhi4>
    1036:	08 97       	sbiw	r24, 0x08	; 8
    1038:	0c f0       	brlt	.+2      	; 0x103c <moveWander+0x18e>
    103a:	21 e0       	ldi	r18, 0x01	; 1
    103c:	82 2e       	mov	r8, r18
    103e:	80 94       	com	r8
					
			// Move.
			STEPPER_move_stnb( STEPPER_BOTH, 
    1040:	8d b7       	in	r24, 0x3d	; 61
    1042:	9e b7       	in	r25, 0x3e	; 62
    1044:	09 97       	sbiw	r24, 0x09	; 9
    1046:	0f b6       	in	r0, 0x3f	; 63
    1048:	f8 94       	cli
    104a:	9e bf       	out	0x3e, r25	; 62
    104c:	0f be       	out	0x3f, r0	; 63
    104e:	8d bf       	out	0x3d, r24	; 61
    1050:	0d b7       	in	r16, 0x3d	; 61
    1052:	1e b7       	in	r17, 0x3e	; 62
    1054:	0f 5f       	subi	r16, 0xFF	; 255
    1056:	1f 4f       	sbci	r17, 0xFF	; 255
    1058:	c3 01       	movw	r24, r6
    105a:	b2 01       	movw	r22, r4
    105c:	0e 94 eb 20 	call	0x41d6	; 0x41d6 <__fixunssfsi>
    1060:	6b 01       	movw	r12, r22
    1062:	7c 01       	movw	r14, r24
    1064:	d8 01       	movw	r26, r16
    1066:	2c 92       	st	X, r2
    1068:	11 96       	adiw	r26, 0x01	; 1
    106a:	3c 92       	st	X, r3
    106c:	69 81       	ldd	r22, Y+1	; 0x01
    106e:	7a 81       	ldd	r23, Y+2	; 0x02
    1070:	8b 81       	ldd	r24, Y+3	; 0x03
    1072:	9c 81       	ldd	r25, Y+4	; 0x04
    1074:	0e 94 eb 20 	call	0x41d6	; 0x41d6 <__fixunssfsi>
    1078:	f8 01       	movw	r30, r16
    107a:	73 83       	std	Z+3, r23	; 0x03
    107c:	62 83       	std	Z+2, r22	; 0x02
    107e:	82 ec       	ldi	r24, 0xC2	; 194
    1080:	91 e0       	ldi	r25, 0x01	; 1
    1082:	95 83       	std	Z+5, r25	; 0x05
    1084:	84 83       	std	Z+4, r24	; 0x04
    1086:	16 82       	std	Z+6, r1	; 0x06
    1088:	10 86       	std	Z+8, r1	; 0x08
    108a:	17 82       	std	Z+7, r1	; 0x07
    108c:	81 e0       	ldi	r24, 0x01	; 1
    108e:	62 e0       	ldi	r22, 0x02	; 2
    1090:	48 2d       	mov	r20, r8
    1092:	91 01       	movw	r18, r2
    1094:	86 01       	movw	r16, r12
    1096:	72 ec       	ldi	r23, 0xC2	; 194
    1098:	e7 2e       	mov	r14, r23
    109a:	71 e0       	ldi	r23, 0x01	; 1
    109c:	f7 2e       	mov	r15, r23
    109e:	cc 24       	eor	r12, r12
    10a0:	aa 24       	eor	r10, r10
    10a2:	bb 24       	eor	r11, r11
    10a4:	0e 94 3f 10 	call	0x207e	; 0x207e <STEPPER_move>
			direction, moveRand, turnRandL, 450, STEPPER_BRK_OFF, // Left
			direction, moveRand, turnRandR, 450, STEPPER_BRK_OFF ); // Right
			LCD_clear();
    10a8:	8d b7       	in	r24, 0x3d	; 61
    10aa:	9e b7       	in	r25, 0x3e	; 62
    10ac:	09 96       	adiw	r24, 0x09	; 9
    10ae:	0f b6       	in	r0, 0x3f	; 63
    10b0:	f8 94       	cli
    10b2:	9e bf       	out	0x3e, r25	; 62
    10b4:	0f be       	out	0x3f, r0	; 63
    10b6:	8d bf       	out	0x3d, r24	; 61
    10b8:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <LCD_clear>
			LCD_printf("moveWander\nmoveRand: %3d\nturnRandR: %3d\nturnRandL: %3d\n",moveRand,turnRandR,turnRandL);
    10bc:	ad b7       	in	r26, 0x3d	; 61
    10be:	be b7       	in	r27, 0x3e	; 62
    10c0:	1c 97       	sbiw	r26, 0x0c	; 12
    10c2:	0f b6       	in	r0, 0x3f	; 63
    10c4:	f8 94       	cli
    10c6:	be bf       	out	0x3e, r27	; 62
    10c8:	0f be       	out	0x3f, r0	; 63
    10ca:	ad bf       	out	0x3d, r26	; 61
    10cc:	ed b7       	in	r30, 0x3d	; 61
    10ce:	fe b7       	in	r31, 0x3e	; 62
    10d0:	31 96       	adiw	r30, 0x01	; 1
    10d2:	8a e1       	ldi	r24, 0x1A	; 26
    10d4:	91 e0       	ldi	r25, 0x01	; 1
    10d6:	12 96       	adiw	r26, 0x02	; 2
    10d8:	9c 93       	st	X, r25
    10da:	8e 93       	st	-X, r24
    10dc:	11 97       	sbiw	r26, 0x01	; 1
    10de:	33 82       	std	Z+3, r3	; 0x03
    10e0:	22 82       	std	Z+2, r2	; 0x02
    10e2:	89 81       	ldd	r24, Y+1	; 0x01
    10e4:	9a 81       	ldd	r25, Y+2	; 0x02
    10e6:	ab 81       	ldd	r26, Y+3	; 0x03
    10e8:	bc 81       	ldd	r27, Y+4	; 0x04
    10ea:	84 83       	std	Z+4, r24	; 0x04
    10ec:	95 83       	std	Z+5, r25	; 0x05
    10ee:	a6 83       	std	Z+6, r26	; 0x06
    10f0:	b7 83       	std	Z+7, r27	; 0x07
    10f2:	40 86       	std	Z+8, r4	; 0x08
    10f4:	51 86       	std	Z+9, r5	; 0x09
    10f6:	62 86       	std	Z+10, r6	; 0x0a
    10f8:	73 86       	std	Z+11, r7	; 0x0b
    10fa:	0e 94 4e 2a 	call	0x549c	; 0x549c <printf>
    10fe:	cc 24       	eor	r12, r12
    1100:	c3 94       	inc	r12
    1102:	ad b7       	in	r26, 0x3d	; 61
    1104:	be b7       	in	r27, 0x3e	; 62
    1106:	1c 96       	adiw	r26, 0x0c	; 12
    1108:	0f b6       	in	r0, 0x3f	; 63
    110a:	f8 94       	cli
    110c:	be bf       	out	0x3e, r27	; 62
    110e:	0f be       	out	0x3f, r0	; 63
    1110:	ad bf       	out	0x3d, r26	; 61
			
		}
		isWander = 1;
	}
	return isWander;
}
    1112:	8c 2d       	mov	r24, r12
    1114:	0f 90       	pop	r0
    1116:	0f 90       	pop	r0
    1118:	0f 90       	pop	r0
    111a:	0f 90       	pop	r0
    111c:	cf 91       	pop	r28
    111e:	df 91       	pop	r29
    1120:	1f 91       	pop	r17
    1122:	0f 91       	pop	r16
    1124:	ff 90       	pop	r15
    1126:	ef 90       	pop	r14
    1128:	df 90       	pop	r13
    112a:	cf 90       	pop	r12
    112c:	bf 90       	pop	r11
    112e:	af 90       	pop	r10
    1130:	8f 90       	pop	r8
    1132:	7f 90       	pop	r7
    1134:	6f 90       	pop	r6
    1136:	5f 90       	pop	r5
    1138:	4f 90       	pop	r4
    113a:	3f 90       	pop	r3
    113c:	2f 90       	pop	r2
    113e:	08 95       	ret

00001140 <moveWall>:
* Input Variables:	void
* Output Return:	char
* Overview:			This moves the robot in any arc length
********************************************************************/
char moveWall( void )
{	
    1140:	2f 92       	push	r2
    1142:	3f 92       	push	r3
    1144:	4f 92       	push	r4
    1146:	5f 92       	push	r5
    1148:	6f 92       	push	r6
    114a:	7f 92       	push	r7
    114c:	8f 92       	push	r8
    114e:	9f 92       	push	r9
    1150:	af 92       	push	r10
    1152:	bf 92       	push	r11
    1154:	cf 92       	push	r12
    1156:	df 92       	push	r13
    1158:	ef 92       	push	r14
    115a:	ff 92       	push	r15
    115c:	0f 93       	push	r16
    115e:	1f 93       	push	r17
    1160:	df 93       	push	r29
    1162:	cf 93       	push	r28
    1164:	00 d0       	rcall	.+0      	; 0x1166 <moveWall+0x26>
    1166:	00 d0       	rcall	.+0      	; 0x1168 <moveWall+0x28>
    1168:	0f 92       	push	r0
    116a:	cd b7       	in	r28, 0x3d	; 61
    116c:	de b7       	in	r29, 0x3e	; 62
	char isWander = moveWander();
    116e:	0e 94 57 07 	call	0xeae	; 0xeae <moveWander>
	if(isWander){
    1172:	88 23       	and	r24, r24
    1174:	09 f0       	breq	.+2      	; 0x1178 <moveWall+0x38>
    1176:	47 c1       	rjmp	.+654    	; 0x1406 <moveWall+0x2c6>
		return isWander;
	}
	
	BOOL isLEFT;
	
	if(rtIR>IR_WALL_R_THRESH){
    1178:	60 91 04 02 	lds	r22, 0x0204
    117c:	70 91 05 02 	lds	r23, 0x0205
    1180:	80 91 06 02 	lds	r24, 0x0206
    1184:	90 91 07 02 	lds	r25, 0x0207
    1188:	20 e0       	ldi	r18, 0x00	; 0
    118a:	30 e0       	ldi	r19, 0x00	; 0
    118c:	40 ea       	ldi	r20, 0xA0	; 160
    118e:	51 e4       	ldi	r21, 0x41	; 65
    1190:	0e 94 c9 21 	call	0x4392	; 0x4392 <__gesf2>
    1194:	18 16       	cp	r1, r24
    1196:	64 f4       	brge	.+24     	; 0x11b0 <moveWall+0x70>
		rtIR = IR_WALL_R_THRESH-15;
    1198:	80 e0       	ldi	r24, 0x00	; 0
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	a0 ea       	ldi	r26, 0xA0	; 160
    119e:	b0 e4       	ldi	r27, 0x40	; 64
    11a0:	80 93 04 02 	sts	0x0204, r24
    11a4:	90 93 05 02 	sts	0x0205, r25
    11a8:	a0 93 06 02 	sts	0x0206, r26
    11ac:	b0 93 07 02 	sts	0x0207, r27
		isLEFT = 0;
	}
	if(ltIR>IR_WALL_L_THRESH){
    11b0:	60 91 00 02 	lds	r22, 0x0200
    11b4:	70 91 01 02 	lds	r23, 0x0201
    11b8:	80 91 02 02 	lds	r24, 0x0202
    11bc:	90 91 03 02 	lds	r25, 0x0203
    11c0:	20 e0       	ldi	r18, 0x00	; 0
    11c2:	30 e0       	ldi	r19, 0x00	; 0
    11c4:	40 ea       	ldi	r20, 0xA0	; 160
    11c6:	51 e4       	ldi	r21, 0x41	; 65
    11c8:	0e 94 c9 21 	call	0x4392	; 0x4392 <__gesf2>
    11cc:	18 16       	cp	r1, r24
    11ce:	14 f0       	brlt	.+4      	; 0x11d4 <moveWall+0x94>
    11d0:	cc 24       	eor	r12, r12
    11d2:	0e c0       	rjmp	.+28     	; 0x11f0 <moveWall+0xb0>
		ltIR = IR_WALL_L_THRESH-15;
    11d4:	80 e0       	ldi	r24, 0x00	; 0
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	a0 ea       	ldi	r26, 0xA0	; 160
    11da:	b0 e4       	ldi	r27, 0x40	; 64
    11dc:	80 93 00 02 	sts	0x0200, r24
    11e0:	90 93 01 02 	sts	0x0201, r25
    11e4:	a0 93 02 02 	sts	0x0202, r26
    11e8:	b0 93 03 02 	sts	0x0203, r27
    11ec:	cc 24       	eor	r12, r12
    11ee:	c3 94       	inc	r12
		isLEFT = 1;
	}
	
	float error;
	if(bkIR < IR_WALL_B_THRESH)
    11f0:	e0 90 0c 02 	lds	r14, 0x020C
    11f4:	f0 90 0d 02 	lds	r15, 0x020D
    11f8:	00 91 0e 02 	lds	r16, 0x020E
    11fc:	10 91 0f 02 	lds	r17, 0x020F
    1200:	c8 01       	movw	r24, r16
    1202:	b7 01       	movw	r22, r14
    1204:	20 e0       	ldi	r18, 0x00	; 0
    1206:	30 e0       	ldi	r19, 0x00	; 0
    1208:	40 e2       	ldi	r20, 0x20	; 32
    120a:	52 e4       	ldi	r21, 0x42	; 66
    120c:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
    1210:	88 23       	and	r24, r24
    1212:	34 f5       	brge	.+76     	; 0x1260 <moveWall+0x120>
	{
		if (isLEFT)
    1214:	cc 20       	and	r12, r12
    1216:	69 f0       	breq	.+26     	; 0x1232 <moveWall+0xf2>
		{
			error = rtIR - (ltIR + bkIR);
    1218:	c8 01       	movw	r24, r16
    121a:	b7 01       	movw	r22, r14
    121c:	20 91 00 02 	lds	r18, 0x0200
    1220:	30 91 01 02 	lds	r19, 0x0201
    1224:	40 91 02 02 	lds	r20, 0x0202
    1228:	50 91 03 02 	lds	r21, 0x0203
    122c:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
    1230:	0c c0       	rjmp	.+24     	; 0x124a <moveWall+0x10a>
		}
		else 
		{
			error = rtIR - (ltIR - bkIR);
    1232:	60 91 00 02 	lds	r22, 0x0200
    1236:	70 91 01 02 	lds	r23, 0x0201
    123a:	80 91 02 02 	lds	r24, 0x0202
    123e:	90 91 03 02 	lds	r25, 0x0203
    1242:	a8 01       	movw	r20, r16
    1244:	97 01       	movw	r18, r14
    1246:	0e 94 15 20 	call	0x402a	; 0x402a <__subsf3>
    124a:	9b 01       	movw	r18, r22
    124c:	ac 01       	movw	r20, r24
    124e:	60 91 04 02 	lds	r22, 0x0204
    1252:	70 91 05 02 	lds	r23, 0x0205
    1256:	80 91 06 02 	lds	r24, 0x0206
    125a:	90 91 07 02 	lds	r25, 0x0207
    125e:	10 c0       	rjmp	.+32     	; 0x1280 <moveWall+0x140>
		}
	}
	else 
	{
		error = rtIR - ltIR;
    1260:	60 91 04 02 	lds	r22, 0x0204
    1264:	70 91 05 02 	lds	r23, 0x0205
    1268:	80 91 06 02 	lds	r24, 0x0206
    126c:	90 91 07 02 	lds	r25, 0x0207
    1270:	20 91 00 02 	lds	r18, 0x0200
    1274:	30 91 01 02 	lds	r19, 0x0201
    1278:	40 91 02 02 	lds	r20, 0x0202
    127c:	50 91 03 02 	lds	r21, 0x0203
    1280:	0e 94 15 20 	call	0x402a	; 0x402a <__subsf3>
    1284:	6d 83       	std	Y+5, r22	; 0x05
    1286:	97 2e       	mov	r9, r23
    1288:	1c 01       	movw	r2, r24
	}

	
	float effort = pidController(error, 0);
    128a:	2d 81       	ldd	r18, Y+5	; 0x05
    128c:	37 2f       	mov	r19, r23
    128e:	b9 01       	movw	r22, r18
    1290:	40 e0       	ldi	r20, 0x00	; 0
    1292:	0e 94 e7 04 	call	0x9ce	; 0x9ce <pidController>
    1296:	2b 01       	movw	r4, r22
    1298:	3c 01       	movw	r6, r24
	if((abs(effort) > MAX_EFFORT)&(effort!=0)){
    129a:	0e 94 e6 20 	call	0x41cc	; 0x41cc <__fixsfsi>
    129e:	8b 01       	movw	r16, r22
    12a0:	77 ff       	sbrs	r23, 7
    12a2:	03 c0       	rjmp	.+6      	; 0x12aa <moveWall+0x16a>
    12a4:	10 95       	com	r17
    12a6:	01 95       	neg	r16
    12a8:	1f 4f       	sbci	r17, 0xFF	; 255
    12aa:	05 36       	cpi	r16, 0x65	; 101
    12ac:	11 05       	cpc	r17, r1
    12ae:	fc f0       	brlt	.+62     	; 0x12ee <moveWall+0x1ae>
    12b0:	c3 01       	movw	r24, r6
    12b2:	b2 01       	movw	r22, r4
    12b4:	20 e0       	ldi	r18, 0x00	; 0
    12b6:	30 e0       	ldi	r19, 0x00	; 0
    12b8:	40 e0       	ldi	r20, 0x00	; 0
    12ba:	50 e0       	ldi	r21, 0x00	; 0
    12bc:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__cmpsf2>
    12c0:	88 23       	and	r24, r24
    12c2:	a9 f0       	breq	.+42     	; 0x12ee <moveWall+0x1ae>
		effort = MAX_EFFORT*(effort/abs(effort));
    12c4:	b8 01       	movw	r22, r16
    12c6:	88 27       	eor	r24, r24
    12c8:	77 fd       	sbrc	r23, 7
    12ca:	80 95       	com	r24
    12cc:	98 2f       	mov	r25, r24
    12ce:	0e 94 19 21 	call	0x4232	; 0x4232 <__floatsisf>
    12d2:	9b 01       	movw	r18, r22
    12d4:	ac 01       	movw	r20, r24
    12d6:	c3 01       	movw	r24, r6
    12d8:	b2 01       	movw	r22, r4
    12da:	0e 94 7e 20 	call	0x40fc	; 0x40fc <__divsf3>
    12de:	20 e0       	ldi	r18, 0x00	; 0
    12e0:	30 e0       	ldi	r19, 0x00	; 0
    12e2:	48 ec       	ldi	r20, 0xC8	; 200
    12e4:	52 e4       	ldi	r21, 0x42	; 66
    12e6:	0e 94 07 22 	call	0x440e	; 0x440e <__mulsf3>
    12ea:	2b 01       	movw	r4, r22
    12ec:	3c 01       	movw	r6, r24
	}
	
	float stepper_speed_L = MAX_SPEED/2 + (MAX_SPEED/2)*(effort/MAX_EFFORT);
    12ee:	c3 01       	movw	r24, r6
    12f0:	b2 01       	movw	r22, r4
    12f2:	20 e0       	ldi	r18, 0x00	; 0
    12f4:	30 e0       	ldi	r19, 0x00	; 0
    12f6:	48 ec       	ldi	r20, 0xC8	; 200
    12f8:	52 e4       	ldi	r21, 0x42	; 66
    12fa:	0e 94 7e 20 	call	0x40fc	; 0x40fc <__divsf3>
    12fe:	6b 01       	movw	r12, r22
    1300:	7c 01       	movw	r14, r24
	float stepper_speed_R = MAX_SPEED/2 - (MAX_SPEED/2)*(effort/MAX_EFFORT);
	
	// Move with wall
	STEPPER_move_stnb( STEPPER_BOTH, 
    1302:	8d b7       	in	r24, 0x3d	; 61
    1304:	9e b7       	in	r25, 0x3e	; 62
    1306:	09 97       	sbiw	r24, 0x09	; 9
    1308:	0f b6       	in	r0, 0x3f	; 63
    130a:	f8 94       	cli
    130c:	9e bf       	out	0x3e, r25	; 62
    130e:	0f be       	out	0x3f, r0	; 63
    1310:	8d bf       	out	0x3d, r24	; 61
    1312:	0d b7       	in	r16, 0x3d	; 61
    1314:	1e b7       	in	r17, 0x3e	; 62
    1316:	0f 5f       	subi	r16, 0xFF	; 255
    1318:	1f 4f       	sbci	r17, 0xFF	; 255
    131a:	c7 01       	movw	r24, r14
    131c:	b6 01       	movw	r22, r12
    131e:	20 e0       	ldi	r18, 0x00	; 0
    1320:	30 e0       	ldi	r19, 0x00	; 0
    1322:	46 e1       	ldi	r20, 0x16	; 22
    1324:	53 e4       	ldi	r21, 0x43	; 67
    1326:	0e 94 07 22 	call	0x440e	; 0x440e <__mulsf3>
    132a:	20 e0       	ldi	r18, 0x00	; 0
    132c:	30 e0       	ldi	r19, 0x00	; 0
    132e:	46 e1       	ldi	r20, 0x16	; 22
    1330:	53 e4       	ldi	r21, 0x43	; 67
    1332:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
    1336:	0e 94 eb 20 	call	0x41d6	; 0x41d6 <__fixunssfsi>
    133a:	69 83       	std	Y+1, r22	; 0x01
    133c:	7a 83       	std	Y+2, r23	; 0x02
    133e:	8b 83       	std	Y+3, r24	; 0x03
    1340:	9c 83       	std	Y+4, r25	; 0x04
    1342:	82 e3       	ldi	r24, 0x32	; 50
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	d8 01       	movw	r26, r16
    1348:	8d 93       	st	X+, r24
    134a:	9c 93       	st	X, r25
    134c:	c7 01       	movw	r24, r14
    134e:	b6 01       	movw	r22, r12
    1350:	20 e0       	ldi	r18, 0x00	; 0
    1352:	30 e0       	ldi	r19, 0x00	; 0
    1354:	46 e1       	ldi	r20, 0x16	; 22
    1356:	53 ec       	ldi	r21, 0xC3	; 195
    1358:	0e 94 07 22 	call	0x440e	; 0x440e <__mulsf3>
    135c:	20 e0       	ldi	r18, 0x00	; 0
    135e:	30 e0       	ldi	r19, 0x00	; 0
    1360:	46 e1       	ldi	r20, 0x16	; 22
    1362:	53 e4       	ldi	r21, 0x43	; 67
    1364:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
    1368:	0e 94 eb 20 	call	0x41d6	; 0x41d6 <__fixunssfsi>
    136c:	f8 01       	movw	r30, r16
    136e:	73 83       	std	Z+3, r23	; 0x03
    1370:	62 83       	std	Z+2, r22	; 0x02
    1372:	82 ec       	ldi	r24, 0xC2	; 194
    1374:	91 e0       	ldi	r25, 0x01	; 1
    1376:	95 83       	std	Z+5, r25	; 0x05
    1378:	84 83       	std	Z+4, r24	; 0x04
    137a:	16 82       	std	Z+6, r1	; 0x06
    137c:	10 86       	std	Z+8, r1	; 0x08
    137e:	17 82       	std	Z+7, r1	; 0x07
    1380:	81 e0       	ldi	r24, 0x01	; 1
    1382:	62 e0       	ldi	r22, 0x02	; 2
    1384:	41 e0       	ldi	r20, 0x01	; 1
    1386:	22 e3       	ldi	r18, 0x32	; 50
    1388:	30 e0       	ldi	r19, 0x00	; 0
    138a:	09 81       	ldd	r16, Y+1	; 0x01
    138c:	1a 81       	ldd	r17, Y+2	; 0x02
    138e:	a2 ec       	ldi	r26, 0xC2	; 194
    1390:	ea 2e       	mov	r14, r26
    1392:	a1 e0       	ldi	r26, 0x01	; 1
    1394:	fa 2e       	mov	r15, r26
    1396:	cc 24       	eor	r12, r12
    1398:	aa 24       	eor	r10, r10
    139a:	bb 24       	eor	r11, r11
    139c:	88 24       	eor	r8, r8
    139e:	83 94       	inc	r8
    13a0:	0e 94 3f 10 	call	0x207e	; 0x207e <STEPPER_move>
	STEPPER_REV, 50, stepper_speed_L, 450, STEPPER_BRK_OFF, // Left
	STEPPER_REV, 50, stepper_speed_R, 450, STEPPER_BRK_OFF ); // Right
	
	LCD_clear();
    13a4:	8d b7       	in	r24, 0x3d	; 61
    13a6:	9e b7       	in	r25, 0x3e	; 62
    13a8:	09 96       	adiw	r24, 0x09	; 9
    13aa:	0f b6       	in	r0, 0x3f	; 63
    13ac:	f8 94       	cli
    13ae:	9e bf       	out	0x3e, r25	; 62
    13b0:	0f be       	out	0x3f, r0	; 63
    13b2:	8d bf       	out	0x3d, r24	; 61
    13b4:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <LCD_clear>
	LCD_printf("moveWall\nError: %3f\nEffort: %3f\n\n", error, effort);
    13b8:	ad b7       	in	r26, 0x3d	; 61
    13ba:	be b7       	in	r27, 0x3e	; 62
    13bc:	1a 97       	sbiw	r26, 0x0a	; 10
    13be:	0f b6       	in	r0, 0x3f	; 63
    13c0:	f8 94       	cli
    13c2:	be bf       	out	0x3e, r27	; 62
    13c4:	0f be       	out	0x3f, r0	; 63
    13c6:	ad bf       	out	0x3d, r26	; 61
    13c8:	ed b7       	in	r30, 0x3d	; 61
    13ca:	fe b7       	in	r31, 0x3e	; 62
    13cc:	31 96       	adiw	r30, 0x01	; 1
    13ce:	82 e5       	ldi	r24, 0x52	; 82
    13d0:	91 e0       	ldi	r25, 0x01	; 1
    13d2:	12 96       	adiw	r26, 0x02	; 2
    13d4:	9c 93       	st	X, r25
    13d6:	8e 93       	st	-X, r24
    13d8:	11 97       	sbiw	r26, 0x01	; 1
    13da:	2d 81       	ldd	r18, Y+5	; 0x05
    13dc:	39 2d       	mov	r19, r9
    13de:	c9 01       	movw	r24, r18
    13e0:	d1 01       	movw	r26, r2
    13e2:	82 83       	std	Z+2, r24	; 0x02
    13e4:	93 83       	std	Z+3, r25	; 0x03
    13e6:	a4 83       	std	Z+4, r26	; 0x04
    13e8:	b5 83       	std	Z+5, r27	; 0x05
    13ea:	46 82       	std	Z+6, r4	; 0x06
    13ec:	57 82       	std	Z+7, r5	; 0x07
    13ee:	60 86       	std	Z+8, r6	; 0x08
    13f0:	71 86       	std	Z+9, r7	; 0x09
    13f2:	0e 94 4e 2a 	call	0x549c	; 0x549c <printf>
    13f6:	ed b7       	in	r30, 0x3d	; 61
    13f8:	fe b7       	in	r31, 0x3e	; 62
    13fa:	3a 96       	adiw	r30, 0x0a	; 10
    13fc:	0f b6       	in	r0, 0x3f	; 63
    13fe:	f8 94       	cli
    1400:	fe bf       	out	0x3e, r31	; 62
    1402:	0f be       	out	0x3f, r0	; 63
    1404:	ed bf       	out	0x3d, r30	; 61
	
}
    1406:	0f 90       	pop	r0
    1408:	0f 90       	pop	r0
    140a:	0f 90       	pop	r0
    140c:	0f 90       	pop	r0
    140e:	0f 90       	pop	r0
    1410:	cf 91       	pop	r28
    1412:	df 91       	pop	r29
    1414:	1f 91       	pop	r17
    1416:	0f 91       	pop	r16
    1418:	ff 90       	pop	r15
    141a:	ef 90       	pop	r14
    141c:	df 90       	pop	r13
    141e:	cf 90       	pop	r12
    1420:	bf 90       	pop	r11
    1422:	af 90       	pop	r10
    1424:	9f 90       	pop	r9
    1426:	8f 90       	pop	r8
    1428:	7f 90       	pop	r7
    142a:	6f 90       	pop	r6
    142c:	5f 90       	pop	r5
    142e:	4f 90       	pop	r4
    1430:	3f 90       	pop	r3
    1432:	2f 90       	pop	r2
    1434:	08 95       	ret

00001436 <CBOT_main>:
void CBOT_main( void )
{
	// Initialize variables
	int btnValue=0;//value of button pushed

	ATopstat = ATTINY_open();//open the tiny microcontroller
    1436:	0e 94 79 13 	call	0x26f2	; 0x26f2 <ATTINY_open>
    143a:	90 93 2c 03 	sts	0x032C, r25
    143e:	80 93 2b 03 	sts	0x032B, r24
	LEopstat = LED_open(); //open the LED module
    1442:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <LED_open>
    1446:	90 93 02 03 	sts	0x0302, r25
    144a:	80 93 01 03 	sts	0x0301, r24
	LCopstat = LCD_open(); //open the LCD module
    144e:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <LCD_open>
    1452:	90 93 d8 02 	sts	0x02D8, r25
    1456:	80 93 d7 02 	sts	0x02D7, r24
	STEPPER_open(); // Open STEPPER module for use
    145a:	0e 94 e6 10 	call	0x21cc	; 0x21cc <STEPPER_open>
	SPKR_open(SPKR_BEEP_MODE);//open the speaker in beep mode
    145e:	81 e0       	ldi	r24, 0x01	; 1
    1460:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <SPKR_open>
	
	LED_open();
    1464:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <LED_open>
	I2C_open();
    1468:	0e 94 d3 14 	call	0x29a6	; 0x29a6 <I2C_open>
	ADC_open();//open the ADC module
    146c:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <ADC_open>
 	ADC_set_VREF( ADC_VREF_AVCC );// Set the Voltage Reference first so VREF=5V.
    1470:	81 e0       	ldi	r24, 0x01	; 1
    1472:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <ADC_set_VREF>


	checkIR();
    1476:	0e 94 d1 05 	call	0xba2	; 0xba2 <checkIR>
	prefilter(1);
    147a:	81 e0       	ldi	r24, 0x01	; 1
    147c:	0e 94 50 03 	call	0x6a0	; 0x6a0 <prefilter>

	// Infinite loop
	while (1)
    {
		checkIR();
    1480:	0e 94 d1 05 	call	0xba2	; 0xba2 <checkIR>
		// prefilter(0);
		moveWall();
    1484:	0e 94 a0 08 	call	0x1140	; 0x1140 <moveWall>
    1488:	fb cf       	rjmp	.-10     	; 0x1480 <CBOT_main+0x4a>

0000148a <get_ambient_temp>:
* Output Return:	I2C_STATUS
* Overview:			Reads the ambient temperature
********************************************************************/

I2C_STATUS get_ambient_temp( unsigned char *ambient_temp )
{
    148a:	1f 93       	push	r17
    148c:	cf 93       	push	r28
    148e:	df 93       	push	r29
    1490:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    1492:	88 e6       	ldi	r24, 0x68	; 104
    1494:	60 e0       	ldi	r22, 0x00	; 0
    1496:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    149a:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
    149c:	88 23       	and	r24, r24
    149e:	a1 f4       	brne	.+40     	; 0x14c8 <get_ambient_temp+0x3e>
	{

		// Send the register value (being 1).  This is
		// the register that contains the ambient temperature.
		i2c_stat = I2C_MSTR_send( __TPA81_AMBIENT );
    14a0:	81 e0       	ldi	r24, 0x01	; 1
    14a2:	0e 94 53 14 	call	0x28a6	; 0x28a6 <I2C_MSTR_send>
    14a6:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
    14a8:	88 23       	and	r24, r24
    14aa:	71 f4       	brne	.+28     	; 0x14c8 <get_ambient_temp+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    14ac:	88 e6       	ldi	r24, 0x68	; 104
    14ae:	61 e0       	ldi	r22, 0x01	; 1
    14b0:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    14b4:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
    14b6:	88 23       	and	r24, r24
    14b8:	39 f4       	brne	.+14     	; 0x14c8 <get_ambient_temp+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( ambient_temp, FALSE );
    14ba:	ce 01       	movw	r24, r28
    14bc:	60 e0       	ldi	r22, 0x00	; 0
    14be:	0e 94 27 14 	call	0x284e	; 0x284e <I2C_MSTR_get>
    14c2:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
    14c4:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*ambient_temp = 0;
    14c6:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
    14c8:	0e 94 bf 14 	call	0x297e	; 0x297e <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_ambient_temp()
    14cc:	81 2f       	mov	r24, r17
    14ce:	df 91       	pop	r29
    14d0:	cf 91       	pop	r28
    14d2:	1f 91       	pop	r17
    14d4:	08 95       	ret

000014d6 <read_pixel_8>:
	return i2c_stat;
}

// get pixel eight
I2C_STATUS read_pixel_8( unsigned char *pixel_8)
{
    14d6:	1f 93       	push	r17
    14d8:	cf 93       	push	r28
    14da:	df 93       	push	r29
    14dc:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    14de:	88 e6       	ldi	r24, 0x68	; 104
    14e0:	60 e0       	ldi	r22, 0x00	; 0
    14e2:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    14e6:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    14e8:	88 23       	and	r24, r24
    14ea:	a1 f4       	brne	.+40     	; 0x1514 <read_pixel_8+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX8 );
    14ec:	89 e0       	ldi	r24, 0x09	; 9
    14ee:	0e 94 53 14 	call	0x28a6	; 0x28a6 <I2C_MSTR_send>
    14f2:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    14f4:	88 23       	and	r24, r24
    14f6:	71 f4       	brne	.+28     	; 0x1514 <read_pixel_8+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    14f8:	88 e6       	ldi	r24, 0x68	; 104
    14fa:	61 e0       	ldi	r22, 0x01	; 1
    14fc:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    1500:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    1502:	88 23       	and	r24, r24
    1504:	39 f4       	brne	.+14     	; 0x1514 <read_pixel_8+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_8, FALSE );
    1506:	ce 01       	movw	r24, r28
    1508:	60 e0       	ldi	r22, 0x00	; 0
    150a:	0e 94 27 14 	call	0x284e	; 0x284e <I2C_MSTR_get>
    150e:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    1510:	81 11       	cpse	r24, r1
					*pixel_8 = 0;
    1512:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    1514:	0e 94 bf 14 	call	0x297e	; 0x297e <I2C_MSTR_stop>
	return i2c_stat;
}
    1518:	81 2f       	mov	r24, r17
    151a:	df 91       	pop	r29
    151c:	cf 91       	pop	r28
    151e:	1f 91       	pop	r17
    1520:	08 95       	ret

00001522 <read_pixel_7>:
	return i2c_stat;
}

// get pixel seven
I2C_STATUS read_pixel_7( unsigned char *pixel_7)
{
    1522:	1f 93       	push	r17
    1524:	cf 93       	push	r28
    1526:	df 93       	push	r29
    1528:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    152a:	88 e6       	ldi	r24, 0x68	; 104
    152c:	60 e0       	ldi	r22, 0x00	; 0
    152e:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    1532:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    1534:	88 23       	and	r24, r24
    1536:	a1 f4       	brne	.+40     	; 0x1560 <read_pixel_7+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX7 );
    1538:	88 e0       	ldi	r24, 0x08	; 8
    153a:	0e 94 53 14 	call	0x28a6	; 0x28a6 <I2C_MSTR_send>
    153e:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    1540:	88 23       	and	r24, r24
    1542:	71 f4       	brne	.+28     	; 0x1560 <read_pixel_7+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    1544:	88 e6       	ldi	r24, 0x68	; 104
    1546:	61 e0       	ldi	r22, 0x01	; 1
    1548:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    154c:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    154e:	88 23       	and	r24, r24
    1550:	39 f4       	brne	.+14     	; 0x1560 <read_pixel_7+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_7, FALSE );
    1552:	ce 01       	movw	r24, r28
    1554:	60 e0       	ldi	r22, 0x00	; 0
    1556:	0e 94 27 14 	call	0x284e	; 0x284e <I2C_MSTR_get>
    155a:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    155c:	81 11       	cpse	r24, r1
					*pixel_7 = 0;
    155e:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    1560:	0e 94 bf 14 	call	0x297e	; 0x297e <I2C_MSTR_stop>
	return i2c_stat;
}
    1564:	81 2f       	mov	r24, r17
    1566:	df 91       	pop	r29
    1568:	cf 91       	pop	r28
    156a:	1f 91       	pop	r17
    156c:	08 95       	ret

0000156e <read_pixel_6>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel six
I2C_STATUS read_pixel_6( unsigned char *pixel_6)
{
    156e:	1f 93       	push	r17
    1570:	cf 93       	push	r28
    1572:	df 93       	push	r29
    1574:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    1576:	88 e6       	ldi	r24, 0x68	; 104
    1578:	60 e0       	ldi	r22, 0x00	; 0
    157a:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    157e:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    1580:	88 23       	and	r24, r24
    1582:	a1 f4       	brne	.+40     	; 0x15ac <read_pixel_6+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX6 );
    1584:	87 e0       	ldi	r24, 0x07	; 7
    1586:	0e 94 53 14 	call	0x28a6	; 0x28a6 <I2C_MSTR_send>
    158a:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    158c:	88 23       	and	r24, r24
    158e:	71 f4       	brne	.+28     	; 0x15ac <read_pixel_6+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    1590:	88 e6       	ldi	r24, 0x68	; 104
    1592:	61 e0       	ldi	r22, 0x01	; 1
    1594:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    1598:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    159a:	88 23       	and	r24, r24
    159c:	39 f4       	brne	.+14     	; 0x15ac <read_pixel_6+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_6, FALSE );
    159e:	ce 01       	movw	r24, r28
    15a0:	60 e0       	ldi	r22, 0x00	; 0
    15a2:	0e 94 27 14 	call	0x284e	; 0x284e <I2C_MSTR_get>
    15a6:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    15a8:	81 11       	cpse	r24, r1
					*pixel_6 = 0;
    15aa:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    15ac:	0e 94 bf 14 	call	0x297e	; 0x297e <I2C_MSTR_stop>
	return i2c_stat;
}
    15b0:	81 2f       	mov	r24, r17
    15b2:	df 91       	pop	r29
    15b4:	cf 91       	pop	r28
    15b6:	1f 91       	pop	r17
    15b8:	08 95       	ret

000015ba <read_pixel_5>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel five
I2C_STATUS read_pixel_5( unsigned char *pixel_5)
{
    15ba:	1f 93       	push	r17
    15bc:	cf 93       	push	r28
    15be:	df 93       	push	r29
    15c0:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    15c2:	88 e6       	ldi	r24, 0x68	; 104
    15c4:	60 e0       	ldi	r22, 0x00	; 0
    15c6:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    15ca:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    15cc:	88 23       	and	r24, r24
    15ce:	a1 f4       	brne	.+40     	; 0x15f8 <read_pixel_5+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX5 );
    15d0:	86 e0       	ldi	r24, 0x06	; 6
    15d2:	0e 94 53 14 	call	0x28a6	; 0x28a6 <I2C_MSTR_send>
    15d6:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    15d8:	88 23       	and	r24, r24
    15da:	71 f4       	brne	.+28     	; 0x15f8 <read_pixel_5+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    15dc:	88 e6       	ldi	r24, 0x68	; 104
    15de:	61 e0       	ldi	r22, 0x01	; 1
    15e0:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    15e4:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    15e6:	88 23       	and	r24, r24
    15e8:	39 f4       	brne	.+14     	; 0x15f8 <read_pixel_5+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_5, FALSE );
    15ea:	ce 01       	movw	r24, r28
    15ec:	60 e0       	ldi	r22, 0x00	; 0
    15ee:	0e 94 27 14 	call	0x284e	; 0x284e <I2C_MSTR_get>
    15f2:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    15f4:	81 11       	cpse	r24, r1
					*pixel_5 = 0;
    15f6:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    15f8:	0e 94 bf 14 	call	0x297e	; 0x297e <I2C_MSTR_stop>
	return i2c_stat;
}
    15fc:	81 2f       	mov	r24, r17
    15fe:	df 91       	pop	r29
    1600:	cf 91       	pop	r28
    1602:	1f 91       	pop	r17
    1604:	08 95       	ret

00001606 <read_pixel_4>:
	return i2c_stat;
}

// get pixel four
I2C_STATUS read_pixel_4( unsigned char *pixel_4)
{
    1606:	1f 93       	push	r17
    1608:	cf 93       	push	r28
    160a:	df 93       	push	r29
    160c:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    160e:	88 e6       	ldi	r24, 0x68	; 104
    1610:	60 e0       	ldi	r22, 0x00	; 0
    1612:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    1616:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    1618:	88 23       	and	r24, r24
    161a:	a1 f4       	brne	.+40     	; 0x1644 <read_pixel_4+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX4 );
    161c:	85 e0       	ldi	r24, 0x05	; 5
    161e:	0e 94 53 14 	call	0x28a6	; 0x28a6 <I2C_MSTR_send>
    1622:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    1624:	88 23       	and	r24, r24
    1626:	71 f4       	brne	.+28     	; 0x1644 <read_pixel_4+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    1628:	88 e6       	ldi	r24, 0x68	; 104
    162a:	61 e0       	ldi	r22, 0x01	; 1
    162c:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    1630:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    1632:	88 23       	and	r24, r24
    1634:	39 f4       	brne	.+14     	; 0x1644 <read_pixel_4+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_4, FALSE );
    1636:	ce 01       	movw	r24, r28
    1638:	60 e0       	ldi	r22, 0x00	; 0
    163a:	0e 94 27 14 	call	0x284e	; 0x284e <I2C_MSTR_get>
    163e:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    1640:	81 11       	cpse	r24, r1
					*pixel_4 = 0;
    1642:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    1644:	0e 94 bf 14 	call	0x297e	; 0x297e <I2C_MSTR_stop>
	return i2c_stat;
}
    1648:	81 2f       	mov	r24, r17
    164a:	df 91       	pop	r29
    164c:	cf 91       	pop	r28
    164e:	1f 91       	pop	r17
    1650:	08 95       	ret

00001652 <read_pixel_3>:
	return i2c_stat;
}

// get pixel three
I2C_STATUS read_pixel_3( unsigned char *pixel_3)
{
    1652:	1f 93       	push	r17
    1654:	cf 93       	push	r28
    1656:	df 93       	push	r29
    1658:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    165a:	88 e6       	ldi	r24, 0x68	; 104
    165c:	60 e0       	ldi	r22, 0x00	; 0
    165e:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    1662:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    1664:	88 23       	and	r24, r24
    1666:	a1 f4       	brne	.+40     	; 0x1690 <read_pixel_3+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX3 );
    1668:	84 e0       	ldi	r24, 0x04	; 4
    166a:	0e 94 53 14 	call	0x28a6	; 0x28a6 <I2C_MSTR_send>
    166e:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    1670:	88 23       	and	r24, r24
    1672:	71 f4       	brne	.+28     	; 0x1690 <read_pixel_3+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    1674:	88 e6       	ldi	r24, 0x68	; 104
    1676:	61 e0       	ldi	r22, 0x01	; 1
    1678:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    167c:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    167e:	88 23       	and	r24, r24
    1680:	39 f4       	brne	.+14     	; 0x1690 <read_pixel_3+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_3, FALSE );
    1682:	ce 01       	movw	r24, r28
    1684:	60 e0       	ldi	r22, 0x00	; 0
    1686:	0e 94 27 14 	call	0x284e	; 0x284e <I2C_MSTR_get>
    168a:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    168c:	81 11       	cpse	r24, r1
					*pixel_3 = 0;
    168e:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    1690:	0e 94 bf 14 	call	0x297e	; 0x297e <I2C_MSTR_stop>
	return i2c_stat;
}
    1694:	81 2f       	mov	r24, r17
    1696:	df 91       	pop	r29
    1698:	cf 91       	pop	r28
    169a:	1f 91       	pop	r17
    169c:	08 95       	ret

0000169e <read_pixel_2>:
}


// get pixel two
I2C_STATUS read_pixel_2( unsigned char *pixel_2)
{
    169e:	1f 93       	push	r17
    16a0:	cf 93       	push	r28
    16a2:	df 93       	push	r29
    16a4:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    16a6:	88 e6       	ldi	r24, 0x68	; 104
    16a8:	60 e0       	ldi	r22, 0x00	; 0
    16aa:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    16ae:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    16b0:	88 23       	and	r24, r24
    16b2:	a1 f4       	brne	.+40     	; 0x16dc <read_pixel_2+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX2 );
    16b4:	83 e0       	ldi	r24, 0x03	; 3
    16b6:	0e 94 53 14 	call	0x28a6	; 0x28a6 <I2C_MSTR_send>
    16ba:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    16bc:	88 23       	and	r24, r24
    16be:	71 f4       	brne	.+28     	; 0x16dc <read_pixel_2+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    16c0:	88 e6       	ldi	r24, 0x68	; 104
    16c2:	61 e0       	ldi	r22, 0x01	; 1
    16c4:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    16c8:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    16ca:	88 23       	and	r24, r24
    16cc:	39 f4       	brne	.+14     	; 0x16dc <read_pixel_2+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_2, FALSE );
    16ce:	ce 01       	movw	r24, r28
    16d0:	60 e0       	ldi	r22, 0x00	; 0
    16d2:	0e 94 27 14 	call	0x284e	; 0x284e <I2C_MSTR_get>
    16d6:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    16d8:	81 11       	cpse	r24, r1
					*pixel_2 = 0;
    16da:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    16dc:	0e 94 bf 14 	call	0x297e	; 0x297e <I2C_MSTR_stop>
	return i2c_stat;
}
    16e0:	81 2f       	mov	r24, r17
    16e2:	df 91       	pop	r29
    16e4:	cf 91       	pop	r28
    16e6:	1f 91       	pop	r17
    16e8:	08 95       	ret

000016ea <read_pixel_1>:
* Output Return:	I2C_STATUS
* Overview:			These are several pixel read values for each of the pixels
********************************************************************/
// get pixel one
I2C_STATUS read_pixel_1( unsigned char *pixel_1)
{
    16ea:	1f 93       	push	r17
    16ec:	cf 93       	push	r28
    16ee:	df 93       	push	r29
    16f0:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    16f2:	88 e6       	ldi	r24, 0x68	; 104
    16f4:	60 e0       	ldi	r22, 0x00	; 0
    16f6:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    16fa:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
    16fc:	88 23       	and	r24, r24
    16fe:	a1 f4       	brne	.+40     	; 0x1728 <read_pixel_1+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX1 );
    1700:	82 e0       	ldi	r24, 0x02	; 2
    1702:	0e 94 53 14 	call	0x28a6	; 0x28a6 <I2C_MSTR_send>
    1706:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
    1708:	88 23       	and	r24, r24
    170a:	71 f4       	brne	.+28     	; 0x1728 <read_pixel_1+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    170c:	88 e6       	ldi	r24, 0x68	; 104
    170e:	61 e0       	ldi	r22, 0x01	; 1
    1710:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    1714:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
    1716:	88 23       	and	r24, r24
    1718:	39 f4       	brne	.+14     	; 0x1728 <read_pixel_1+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_1, FALSE );
    171a:	ce 01       	movw	r24, r28
    171c:	60 e0       	ldi	r22, 0x00	; 0
    171e:	0e 94 27 14 	call	0x284e	; 0x284e <I2C_MSTR_get>
    1722:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
    1724:	81 11       	cpse	r24, r1
					*pixel_1 = 0;
    1726:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
    1728:	0e 94 bf 14 	call	0x297e	; 0x297e <I2C_MSTR_stop>
	return i2c_stat;
}
    172c:	81 2f       	mov	r24, r17
    172e:	df 91       	pop	r29
    1730:	cf 91       	pop	r28
    1732:	1f 91       	pop	r17
    1734:	08 95       	ret

00001736 <get_revision>:
* Input Variables:	unsigned char revision
* Output Return:	I2C_STATUS
* Overview:			
********************************************************************/
I2C_STATUS get_revision( unsigned char *revision )
{
    1736:	1f 93       	push	r17
    1738:	cf 93       	push	r28
    173a:	df 93       	push	r29
    173c:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
    173e:	88 e6       	ldi	r24, 0x68	; 104
    1740:	60 e0       	ldi	r22, 0x00	; 0
    1742:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    1746:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
    1748:	88 23       	and	r24, r24
    174a:	a1 f4       	brne	.+40     	; 0x1774 <get_revision+0x3e>
	{

		// Send the register value (being 0).  This is
		// the register that contains the software revision.
		i2c_stat = I2C_MSTR_send( __TPA81_REVISION );
    174c:	80 e0       	ldi	r24, 0x00	; 0
    174e:	0e 94 53 14 	call	0x28a6	; 0x28a6 <I2C_MSTR_send>
    1752:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
    1754:	88 23       	and	r24, r24
    1756:	71 f4       	brne	.+28     	; 0x1774 <get_revision+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
    1758:	88 e6       	ldi	r24, 0x68	; 104
    175a:	61 e0       	ldi	r22, 0x01	; 1
    175c:	0e 94 79 14 	call	0x28f2	; 0x28f2 <I2C_MSTR_start>
    1760:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
    1762:	88 23       	and	r24, r24
    1764:	39 f4       	brne	.+14     	; 0x1774 <get_revision+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( revision, FALSE );
    1766:	ce 01       	movw	r24, r28
    1768:	60 e0       	ldi	r22, 0x00	; 0
    176a:	0e 94 27 14 	call	0x284e	; 0x284e <I2C_MSTR_get>
    176e:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
    1770:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*revision = 0;
    1772:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
    1774:	0e 94 bf 14 	call	0x297e	; 0x297e <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_revision()
    1778:	81 2f       	mov	r24, r17
    177a:	df 91       	pop	r29
    177c:	cf 91       	pop	r28
    177e:	1f 91       	pop	r17
    1780:	08 95       	ret

00001782 <getBackIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
    1782:	81 e0       	ldi	r24, 0x01	; 1
    1784:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel(IRBACK_CHAN);
    1788:	85 e0       	ldi	r24, 0x05	; 5
    178a:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    178e:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <ADC_sample>
    1792:	a0 e0       	ldi	r26, 0x00	; 0
    1794:	b0 e0       	ldi	r27, 0x00	; 0
    1796:	bc 01       	movw	r22, r24
    1798:	cd 01       	movw	r24, r26
    179a:	0e 94 17 21 	call	0x422e	; 0x422e <__floatunsisf>
    179e:	20 e0       	ldi	r18, 0x00	; 0
    17a0:	30 e0       	ldi	r19, 0x00	; 0
    17a2:	40 ea       	ldi	r20, 0xA0	; 160
    17a4:	50 e4       	ldi	r21, 0x40	; 64
    17a6:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
    17aa:	9b 01       	movw	r18, r22
    17ac:	ac 01       	movw	r20, r24
    17ae:	60 e0       	ldi	r22, 0x00	; 0
    17b0:	70 e2       	ldi	r23, 0x20	; 32
    17b2:	86 e3       	ldi	r24, 0x36	; 54
    17b4:	95 e4       	ldi	r25, 0x45	; 69
    17b6:	0e 94 7e 20 	call	0x40fc	; 0x40fc <__divsf3>
    17ba:	20 e0       	ldi	r18, 0x00	; 0
    17bc:	30 e0       	ldi	r19, 0x00	; 0
    17be:	40 e8       	ldi	r20, 0x80	; 128
    17c0:	5f e3       	ldi	r21, 0x3F	; 63
    17c2:	0e 94 15 20 	call	0x402a	; 0x402a <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
    17c6:	08 95       	ret

000017c8 <getFrontIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
    17c8:	81 e0       	ldi	r24, 0x01	; 1
    17ca:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel(IRFRONT_CHAN);
    17ce:	87 e0       	ldi	r24, 0x07	; 7
    17d0:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    17d4:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <ADC_sample>
    17d8:	a0 e0       	ldi	r26, 0x00	; 0
    17da:	b0 e0       	ldi	r27, 0x00	; 0
    17dc:	bc 01       	movw	r22, r24
    17de:	cd 01       	movw	r24, r26
    17e0:	0e 94 17 21 	call	0x422e	; 0x422e <__floatunsisf>
    17e4:	20 e0       	ldi	r18, 0x00	; 0
    17e6:	30 e0       	ldi	r19, 0x00	; 0
    17e8:	40 ea       	ldi	r20, 0xA0	; 160
    17ea:	50 e4       	ldi	r21, 0x40	; 64
    17ec:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
    17f0:	9b 01       	movw	r18, r22
    17f2:	ac 01       	movw	r20, r24
    17f4:	60 e0       	ldi	r22, 0x00	; 0
    17f6:	70 e2       	ldi	r23, 0x20	; 32
    17f8:	86 e3       	ldi	r24, 0x36	; 54
    17fa:	95 e4       	ldi	r25, 0x45	; 69
    17fc:	0e 94 7e 20 	call	0x40fc	; 0x40fc <__divsf3>
    1800:	20 e0       	ldi	r18, 0x00	; 0
    1802:	30 e0       	ldi	r19, 0x00	; 0
    1804:	40 e8       	ldi	r20, 0x80	; 128
    1806:	5f e3       	ldi	r21, 0x3F	; 63
    1808:	0e 94 15 20 	call	0x402a	; 0x402a <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
    180c:	08 95       	ret

0000180e <getRightIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
    180e:	81 e0       	ldi	r24, 0x01	; 1
    1810:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
    1814:	83 e0       	ldi	r24, 0x03	; 3
    1816:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    181a:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <ADC_sample>
    181e:	a0 e0       	ldi	r26, 0x00	; 0
    1820:	b0 e0       	ldi	r27, 0x00	; 0
    1822:	bc 01       	movw	r22, r24
    1824:	cd 01       	movw	r24, r26
    1826:	0e 94 17 21 	call	0x422e	; 0x422e <__floatunsisf>
    182a:	20 e0       	ldi	r18, 0x00	; 0
    182c:	30 e0       	ldi	r19, 0x00	; 0
    182e:	40 ea       	ldi	r20, 0xA0	; 160
    1830:	50 e4       	ldi	r21, 0x40	; 64
    1832:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
    1836:	9b 01       	movw	r18, r22
    1838:	ac 01       	movw	r20, r24
    183a:	60 e0       	ldi	r22, 0x00	; 0
    183c:	70 e2       	ldi	r23, 0x20	; 32
    183e:	86 e3       	ldi	r24, 0x36	; 54
    1840:	95 e4       	ldi	r25, 0x45	; 69
    1842:	0e 94 7e 20 	call	0x40fc	; 0x40fc <__divsf3>
    1846:	20 e0       	ldi	r18, 0x00	; 0
    1848:	30 e0       	ldi	r19, 0x00	; 0
    184a:	40 e8       	ldi	r20, 0x80	; 128
    184c:	5f e3       	ldi	r21, 0x3F	; 63
    184e:	0e 94 15 20 	call	0x402a	; 0x402a <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
    1852:	08 95       	ret

00001854 <getLeftIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
 	ADC_set_VREF( ADC_VREF_AVCC );
    1854:	81 e0       	ldi	r24, 0x01	; 1
    1856:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
    185a:	84 e0       	ldi	r24, 0x04	; 4
    185c:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    1860:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <ADC_sample>
    1864:	a0 e0       	ldi	r26, 0x00	; 0
    1866:	b0 e0       	ldi	r27, 0x00	; 0
    1868:	bc 01       	movw	r22, r24
    186a:	cd 01       	movw	r24, r26
    186c:	0e 94 17 21 	call	0x422e	; 0x422e <__floatunsisf>
    1870:	20 e0       	ldi	r18, 0x00	; 0
    1872:	30 e0       	ldi	r19, 0x00	; 0
    1874:	40 ea       	ldi	r20, 0xA0	; 160
    1876:	50 e4       	ldi	r21, 0x40	; 64
    1878:	0e 94 16 20 	call	0x402c	; 0x402c <__addsf3>
    187c:	9b 01       	movw	r18, r22
    187e:	ac 01       	movw	r20, r24
    1880:	60 e0       	ldi	r22, 0x00	; 0
    1882:	70 e2       	ldi	r23, 0x20	; 32
    1884:	86 e3       	ldi	r24, 0x36	; 54
    1886:	95 e4       	ldi	r25, 0x45	; 69
    1888:	0e 94 7e 20 	call	0x40fc	; 0x40fc <__divsf3>
    188c:	20 e0       	ldi	r18, 0x00	; 0
    188e:	30 e0       	ldi	r19, 0x00	; 0
    1890:	40 e8       	ldi	r20, 0x80	; 128
    1892:	5f e3       	ldi	r21, 0x3F	; 63
    1894:	0e 94 15 20 	call	0x402a	; 0x402a <__subsf3>
	voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	dist = distance*1;
	return dist;
}
    1898:	08 95       	ret

0000189a <getRightLight>:
********************************************************************/
float getRightLight( void )
{
	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
    189a:	81 e0       	ldi	r24, 0x01	; 1
    189c:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <ADC_set_VREF>
	ADC_set_channel( RIGHT_LIGHT_CHAN );
    18a0:	85 e0       	ldi	r24, 0x05	; 5
    18a2:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <ADC_set_channel>
	adcsample = ADC_sample();
    18a6:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <ADC_sample>
    18aa:	a0 e0       	ldi	r26, 0x00	; 0
    18ac:	b0 e0       	ldi	r27, 0x00	; 0
    18ae:	bc 01       	movw	r22, r24
    18b0:	cd 01       	movw	r24, r26
    18b2:	0e 94 17 21 	call	0x422e	; 0x422e <__floatunsisf>
    18b6:	20 e0       	ldi	r18, 0x00	; 0
    18b8:	30 e0       	ldi	r19, 0x00	; 0
    18ba:	40 ea       	ldi	r20, 0xA0	; 160
    18bc:	5b e3       	ldi	r21, 0x3B	; 59
    18be:	0e 94 07 22 	call	0x440e	; 0x440e <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * ( 5.0 / 1024 );
	//LCD_printf( "right: %f\n",voltage);
	return voltage;
}
    18c2:	08 95       	ret

000018c4 <getLeftLight>:
float getLeftLight( void )
{

	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
    18c4:	81 e0       	ldi	r24, 0x01	; 1
    18c6:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <ADC_set_VREF>
	ADC_set_channel( LEFT_LIGHT_CHAN );
    18ca:	86 e0       	ldi	r24, 0x06	; 6
    18cc:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <ADC_set_channel>
	adcsample = ADC_sample();
    18d0:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <ADC_sample>
    18d4:	a0 e0       	ldi	r26, 0x00	; 0
    18d6:	b0 e0       	ldi	r27, 0x00	; 0
    18d8:	bc 01       	movw	r22, r24
    18da:	cd 01       	movw	r24, r26
    18dc:	0e 94 17 21 	call	0x422e	; 0x422e <__floatunsisf>
    18e0:	20 e0       	ldi	r18, 0x00	; 0
    18e2:	30 e0       	ldi	r19, 0x00	; 0
    18e4:	40 ea       	ldi	r20, 0xA0	; 160
    18e6:	5b e3       	ldi	r21, 0x3B	; 59
    18e8:	0e 94 07 22 	call	0x440e	; 0x440e <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * (5.0/ 1024.0 );
	//LCD_printf( "voltage: %f\n",voltage);
	return voltage;
}
    18ec:	08 95       	ret

000018ee <WaitButton>:
* Input Variables:	none
* Output Return:	int
* Overview:			Use a comment block like this before functions
********************************************************************/
int WaitButton( void ) 
{
    18ee:	ff 92       	push	r15
    18f0:	0f 93       	push	r16
    18f2:	1f 93       	push	r17
    18f4:	cf 93       	push	r28
    18f6:	df 93       	push	r29
    BOOL btnState1, btnState2, btnState3;//local variables - button states
	//int rtnValue=0;//return the button value
	int rtnValue=0;

	LCD_clear();
    18f8:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <LCD_clear>

	if((ATopstat.state=SUBSYS_OPEN))
    18fc:	81 e0       	ldi	r24, 0x01	; 1
    18fe:	80 93 2c 03 	sts	0x032C, r24
	{
       		// Get switch states.
		btnState1 = ATTINY_get_SW_state( ATTINY_SW3 );
    1902:	80 e0       	ldi	r24, 0x00	; 0
    1904:	0e 94 2b 13 	call	0x2656	; 0x2656 <ATTINY_get_SW_state>
    1908:	18 2f       	mov	r17, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
    190a:	81 e0       	ldi	r24, 0x01	; 1
    190c:	0e 94 2b 13 	call	0x2656	; 0x2656 <ATTINY_get_SW_state>
    1910:	08 2f       	mov	r16, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
    1912:	82 e0       	ldi	r24, 0x02	; 2
    1914:	0e 94 2b 13 	call	0x2656	; 0x2656 <ATTINY_get_SW_state>
    1918:	f8 2e       	mov	r15, r24
		//LCD_printf("btnStates: %d %d %d \n", btnState1, btnState2, btnState3);

		if( btnState1 == TRUE ) 
    191a:	11 30       	cpi	r17, 0x01	; 1
    191c:	19 f0       	breq	.+6      	; 0x1924 <WaitButton+0x36>
    191e:	c0 e0       	ldi	r28, 0x00	; 0
    1920:	d0 e0       	ldi	r29, 0x00	; 0
    1922:	17 c0       	rjmp	.+46     	; 0x1952 <WaitButton+0x64>
		{
			LCD_printf( "SW1: Pushed\n");
    1924:	84 e7       	ldi	r24, 0x74	; 116
    1926:	91 e0       	ldi	r25, 0x01	; 1
    1928:	0e 94 60 2a 	call	0x54c0	; 0x54c0 <puts>
			TMRSRVC_delay(1000);//wait 1 s
    192c:	88 ee       	ldi	r24, 0xE8	; 232
    192e:	93 e0       	ldi	r25, 0x03	; 3
    1930:	0e 94 c8 13 	call	0x2790	; 0x2790 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b00100000 );//turn the red LED on
    1934:	80 e2       	ldi	r24, 0x20	; 32
    1936:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
    193a:	80 ed       	ldi	r24, 0xD0	; 208
    193c:	97 e0       	ldi	r25, 0x07	; 7
    193e:	0e 94 c8 13 	call	0x2790	; 0x2790 <TMRSRVC_delay>
               		LED_clr_pattern( 0b01000000 );//turn the green LED off
    1942:	80 e4       	ldi	r24, 0x40	; 64
    1944:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
    1948:	80 e2       	ldi	r24, 0x20	; 32
    194a:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <LED_clr_pattern>
    194e:	c1 e0       	ldi	r28, 0x01	; 1
    1950:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=1;
			}//end if button 1 state open

		if( btnState2 == TRUE ) 
    1952:	01 30       	cpi	r16, 0x01	; 1
    1954:	b9 f4       	brne	.+46     	; 0x1984 <WaitButton+0x96>
		{
			LCD_printf( "SW2: Pushed\n");
    1956:	80 e8       	ldi	r24, 0x80	; 128
    1958:	91 e0       	ldi	r25, 0x01	; 1
    195a:	0e 94 60 2a 	call	0x54c0	; 0x54c0 <puts>
			TMRSRVC_delay(1000);//wait 1 s
    195e:	88 ee       	ldi	r24, 0xE8	; 232
    1960:	93 e0       	ldi	r25, 0x03	; 3
    1962:	0e 94 c8 13 	call	0x2790	; 0x2790 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
    1966:	80 e4       	ldi	r24, 0x40	; 64
    1968:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
    196c:	80 ed       	ldi	r24, 0xD0	; 208
    196e:	97 e0       	ldi	r25, 0x07	; 7
    1970:	0e 94 c8 13 	call	0x2790	; 0x2790 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
    1974:	80 e4       	ldi	r24, 0x40	; 64
    1976:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
    197a:	80 e2       	ldi	r24, 0x20	; 32
    197c:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <LED_clr_pattern>
    1980:	c2 e0       	ldi	r28, 0x02	; 2
    1982:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=2;
		}//end if btn 2 open

		if ( btnState3 == TRUE ) 
    1984:	81 e0       	ldi	r24, 0x01	; 1
    1986:	f8 16       	cp	r15, r24
    1988:	d1 f4       	brne	.+52     	; 0x19be <WaitButton+0xd0>
		{
			LCD_printf( "SW3: Pushed\n");
    198a:	8c e8       	ldi	r24, 0x8C	; 140
    198c:	91 e0       	ldi	r25, 0x01	; 1
    198e:	0e 94 60 2a 	call	0x54c0	; 0x54c0 <puts>
			TMRSRVC_delay(1000);//wait 1 s
    1992:	88 ee       	ldi	r24, 0xE8	; 232
    1994:	93 e0       	ldi	r25, 0x03	; 3
    1996:	0e 94 c8 13 	call	0x2790	; 0x2790 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
    199a:	80 e4       	ldi	r24, 0x40	; 64
    199c:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <LED_set_pattern>
                	LED_set_pattern( 0b00100000 );//turn the red LED on
    19a0:	80 e2       	ldi	r24, 0x20	; 32
    19a2:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
    19a6:	80 ed       	ldi	r24, 0xD0	; 208
    19a8:	97 e0       	ldi	r25, 0x07	; 7
    19aa:	0e 94 c8 13 	call	0x2790	; 0x2790 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
    19ae:	80 e4       	ldi	r24, 0x40	; 64
    19b0:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
    19b4:	80 e2       	ldi	r24, 0x20	; 32
    19b6:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <LED_clr_pattern>
    19ba:	c3 e0       	ldi	r28, 0x03	; 3
    19bc:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=3;
		}//end if btn 3 open
            	LCD_clear();
    19be:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <LCD_clear>
		return rtnValue;
	}//end AT while

}//end the WaitButton() function
    19c2:	ce 01       	movw	r24, r28
    19c4:	df 91       	pop	r29
    19c6:	cf 91       	pop	r28
    19c8:	1f 91       	pop	r17
    19ca:	0f 91       	pop	r16
    19cc:	ff 90       	pop	r15
    19ce:	08 95       	ret

000019d0 <ADC_open>:
    19d0:	8f e0       	ldi	r24, 0x0F	; 15
    19d2:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    19d6:	88 23       	and	r24, r24
    19d8:	31 f4       	brne	.+12     	; 0x19e6 <ADC_open+0x16>
    19da:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <__ADC_init>
    19de:	8f e0       	ldi	r24, 0x0F	; 15
    19e0:	61 e0       	ldi	r22, 0x01	; 1
    19e2:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    19e6:	8f e0       	ldi	r24, 0x0F	; 15
    19e8:	91 e0       	ldi	r25, 0x01	; 1
    19ea:	08 95       	ret

000019ec <ADC_sample>:
    19ec:	8f e0       	ldi	r24, 0x0F	; 15
    19ee:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    19f2:	81 30       	cpi	r24, 0x01	; 1
    19f4:	19 f0       	breq	.+6      	; 0x19fc <ADC_sample+0x10>
    19f6:	20 e0       	ldi	r18, 0x00	; 0
    19f8:	30 e0       	ldi	r19, 0x00	; 0
    19fa:	13 c0       	rjmp	.+38     	; 0x1a22 <ADC_sample+0x36>
    19fc:	80 91 7a 00 	lds	r24, 0x007A
    1a00:	80 64       	ori	r24, 0x40	; 64
    1a02:	80 93 7a 00 	sts	0x007A, r24
    1a06:	80 91 7a 00 	lds	r24, 0x007A
    1a0a:	86 fd       	sbrc	r24, 6
    1a0c:	fc cf       	rjmp	.-8      	; 0x1a06 <ADC_sample+0x1a>
    1a0e:	30 91 78 00 	lds	r19, 0x0078
    1a12:	20 91 79 00 	lds	r18, 0x0079
    1a16:	92 2f       	mov	r25, r18
    1a18:	80 e0       	ldi	r24, 0x00	; 0
    1a1a:	23 2f       	mov	r18, r19
    1a1c:	30 e0       	ldi	r19, 0x00	; 0
    1a1e:	28 2b       	or	r18, r24
    1a20:	39 2b       	or	r19, r25
    1a22:	c9 01       	movw	r24, r18
    1a24:	08 95       	ret

00001a26 <ADC_set_channel>:
    1a26:	58 2f       	mov	r21, r24
    1a28:	80 91 98 01 	lds	r24, 0x0198
    1a2c:	88 30       	cpi	r24, 0x08	; 8
    1a2e:	d8 f4       	brcc	.+54     	; 0x1a66 <ADC_set_channel+0x40>
    1a30:	40 91 7e 00 	lds	r20, 0x007E
    1a34:	21 e0       	ldi	r18, 0x01	; 1
    1a36:	30 e0       	ldi	r19, 0x00	; 0
    1a38:	b9 01       	movw	r22, r18
    1a3a:	02 c0       	rjmp	.+4      	; 0x1a40 <ADC_set_channel+0x1a>
    1a3c:	66 0f       	add	r22, r22
    1a3e:	77 1f       	adc	r23, r23
    1a40:	8a 95       	dec	r24
    1a42:	e2 f7       	brpl	.-8      	; 0x1a3c <ADC_set_channel+0x16>
    1a44:	cb 01       	movw	r24, r22
    1a46:	80 95       	com	r24
    1a48:	84 23       	and	r24, r20
    1a4a:	80 93 7e 00 	sts	0x007E, r24
    1a4e:	80 91 7e 00 	lds	r24, 0x007E
    1a52:	05 2e       	mov	r0, r21
    1a54:	02 c0       	rjmp	.+4      	; 0x1a5a <ADC_set_channel+0x34>
    1a56:	22 0f       	add	r18, r18
    1a58:	33 1f       	adc	r19, r19
    1a5a:	0a 94       	dec	r0
    1a5c:	e2 f7       	brpl	.-8      	; 0x1a56 <ADC_set_channel+0x30>
    1a5e:	82 2b       	or	r24, r18
    1a60:	80 93 7e 00 	sts	0x007E, r24
    1a64:	0d c0       	rjmp	.+26     	; 0x1a80 <ADC_set_channel+0x5a>
    1a66:	20 91 7e 00 	lds	r18, 0x007E
    1a6a:	81 e0       	ldi	r24, 0x01	; 1
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	05 2e       	mov	r0, r21
    1a70:	02 c0       	rjmp	.+4      	; 0x1a76 <ADC_set_channel+0x50>
    1a72:	88 0f       	add	r24, r24
    1a74:	99 1f       	adc	r25, r25
    1a76:	0a 94       	dec	r0
    1a78:	e2 f7       	brpl	.-8      	; 0x1a72 <ADC_set_channel+0x4c>
    1a7a:	28 2b       	or	r18, r24
    1a7c:	20 93 7e 00 	sts	0x007E, r18
    1a80:	50 93 98 01 	sts	0x0198, r21
    1a84:	80 91 7c 00 	lds	r24, 0x007C
    1a88:	5f 71       	andi	r21, 0x1F	; 31
    1a8a:	80 7e       	andi	r24, 0xE0	; 224
    1a8c:	85 2b       	or	r24, r21
    1a8e:	80 93 7c 00 	sts	0x007C, r24
    1a92:	08 95       	ret

00001a94 <ADC_set_VREF>:
    1a94:	ec e7       	ldi	r30, 0x7C	; 124
    1a96:	f0 e0       	ldi	r31, 0x00	; 0
    1a98:	90 81       	ld	r25, Z
    1a9a:	82 95       	swap	r24
    1a9c:	88 0f       	add	r24, r24
    1a9e:	88 0f       	add	r24, r24
    1aa0:	80 7c       	andi	r24, 0xC0	; 192
    1aa2:	9f 73       	andi	r25, 0x3F	; 63
    1aa4:	98 2b       	or	r25, r24
    1aa6:	90 83       	st	Z, r25
    1aa8:	08 95       	ret

00001aaa <main>:
    1aaa:	0e 94 13 15 	call	0x2a26	; 0x2a26 <CBOT_ISR_init>
    1aae:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <CBOT_init>
    1ab2:	0e 94 1b 0a 	call	0x1436	; 0x1436 <CBOT_main>
    1ab6:	80 e0       	ldi	r24, 0x00	; 0
    1ab8:	90 e0       	ldi	r25, 0x00	; 0
    1aba:	08 95       	ret

00001abc <LCD_clear>:
    1abc:	0f 93       	push	r16
    1abe:	1f 93       	push	r17
    1ac0:	80 e4       	ldi	r24, 0x40	; 64
    1ac2:	60 e0       	ldi	r22, 0x00	; 0
    1ac4:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1ac8:	00 e0       	ldi	r16, 0x00	; 0
    1aca:	80 2f       	mov	r24, r16
    1acc:	60 e0       	ldi	r22, 0x00	; 0
    1ace:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <LCD_set_PGC_addr>
    1ad2:	10 e0       	ldi	r17, 0x00	; 0
    1ad4:	80 e0       	ldi	r24, 0x00	; 0
    1ad6:	61 e0       	ldi	r22, 0x01	; 1
    1ad8:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1adc:	1f 5f       	subi	r17, 0xFF	; 255
    1ade:	10 38       	cpi	r17, 0x80	; 128
    1ae0:	c9 f7       	brne	.-14     	; 0x1ad4 <LCD_clear+0x18>
    1ae2:	0f 5f       	subi	r16, 0xFF	; 255
    1ae4:	04 30       	cpi	r16, 0x04	; 4
    1ae6:	89 f7       	brne	.-30     	; 0x1aca <LCD_clear+0xe>
    1ae8:	83 e0       	ldi	r24, 0x03	; 3
    1aea:	60 e0       	ldi	r22, 0x00	; 0
    1aec:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <LCD_set_next_PGC>
    1af0:	1f 91       	pop	r17
    1af2:	0f 91       	pop	r16
    1af4:	08 95       	ret

00001af6 <LCD_open>:
    1af6:	0f 93       	push	r16
    1af8:	1f 93       	push	r17
    1afa:	82 e0       	ldi	r24, 0x02	; 2
    1afc:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    1b00:	88 23       	and	r24, r24
    1b02:	11 f4       	brne	.+4      	; 0x1b08 <LCD_open+0x12>
    1b04:	82 e0       	ldi	r24, 0x02	; 2
    1b06:	06 c0       	rjmp	.+12     	; 0x1b14 <LCD_open+0x1e>
    1b08:	81 e0       	ldi	r24, 0x01	; 1
    1b0a:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    1b0e:	88 23       	and	r24, r24
    1b10:	19 f4       	brne	.+6      	; 0x1b18 <LCD_open+0x22>
    1b12:	81 e0       	ldi	r24, 0x01	; 1
    1b14:	90 e0       	ldi	r25, 0x00	; 0
    1b16:	6d c0       	rjmp	.+218    	; 0x1bf2 <LCD_open+0xfc>
    1b18:	0e 94 7b 17 	call	0x2ef6	; 0x2ef6 <__LCD_init>
    1b1c:	85 e0       	ldi	r24, 0x05	; 5
    1b1e:	61 e0       	ldi	r22, 0x01	; 1
    1b20:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    1b24:	8e ea       	ldi	r24, 0xAE	; 174
    1b26:	60 e0       	ldi	r22, 0x00	; 0
    1b28:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1b2c:	82 ea       	ldi	r24, 0xA2	; 162
    1b2e:	60 e0       	ldi	r22, 0x00	; 0
    1b30:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1b34:	80 ea       	ldi	r24, 0xA0	; 160
    1b36:	60 e0       	ldi	r22, 0x00	; 0
    1b38:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1b3c:	00 e5       	ldi	r16, 0x50	; 80
    1b3e:	13 ec       	ldi	r17, 0xC3	; 195
    1b40:	c8 01       	movw	r24, r16
    1b42:	01 97       	sbiw	r24, 0x01	; 1
    1b44:	f1 f7       	brne	.-4      	; 0x1b42 <LCD_open+0x4c>
    1b46:	80 ec       	ldi	r24, 0xC0	; 192
    1b48:	60 e0       	ldi	r22, 0x00	; 0
    1b4a:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1b4e:	8f e2       	ldi	r24, 0x2F	; 47
    1b50:	60 e0       	ldi	r22, 0x00	; 0
    1b52:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1b56:	81 e8       	ldi	r24, 0x81	; 129
    1b58:	60 e0       	ldi	r22, 0x00	; 0
    1b5a:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1b5e:	86 e1       	ldi	r24, 0x16	; 22
    1b60:	60 e0       	ldi	r22, 0x00	; 0
    1b62:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1b66:	82 e2       	ldi	r24, 0x22	; 34
    1b68:	60 e0       	ldi	r22, 0x00	; 0
    1b6a:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1b6e:	c8 01       	movw	r24, r16
    1b70:	01 97       	sbiw	r24, 0x01	; 1
    1b72:	f1 f7       	brne	.-4      	; 0x1b70 <LCD_open+0x7a>
    1b74:	8f ea       	ldi	r24, 0xAF	; 175
    1b76:	60 e0       	ldi	r22, 0x00	; 0
    1b78:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1b7c:	86 ea       	ldi	r24, 0xA6	; 166
    1b7e:	60 e0       	ldi	r22, 0x00	; 0
    1b80:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1b84:	85 ea       	ldi	r24, 0xA5	; 165
    1b86:	60 e0       	ldi	r22, 0x00	; 0
    1b88:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1b8c:	80 e0       	ldi	r24, 0x00	; 0
    1b8e:	90 e0       	ldi	r25, 0x00	; 0
    1b90:	28 e8       	ldi	r18, 0x88	; 136
    1b92:	33 e1       	ldi	r19, 0x13	; 19
    1b94:	f9 01       	movw	r30, r18
    1b96:	31 97       	sbiw	r30, 0x01	; 1
    1b98:	f1 f7       	brne	.-4      	; 0x1b96 <LCD_open+0xa0>
    1b9a:	01 96       	adiw	r24, 0x01	; 1
    1b9c:	43 e0       	ldi	r20, 0x03	; 3
    1b9e:	88 3e       	cpi	r24, 0xE8	; 232
    1ba0:	94 07       	cpc	r25, r20
    1ba2:	c1 f7       	brne	.-16     	; 0x1b94 <LCD_open+0x9e>
    1ba4:	83 eb       	ldi	r24, 0xB3	; 179
    1ba6:	60 e0       	ldi	r22, 0x00	; 0
    1ba8:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1bac:	80 e4       	ldi	r24, 0x40	; 64
    1bae:	60 e0       	ldi	r22, 0x00	; 0
    1bb0:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1bb4:	83 e0       	ldi	r24, 0x03	; 3
    1bb6:	60 e0       	ldi	r22, 0x00	; 0
    1bb8:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <LCD_set_PGC_addr>
    1bbc:	83 e0       	ldi	r24, 0x03	; 3
    1bbe:	60 e0       	ldi	r22, 0x00	; 0
    1bc0:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <LCD_set_next_PGC>
    1bc4:	10 92 7b 03 	sts	0x037B, r1
    1bc8:	10 92 7d 03 	sts	0x037D, r1
    1bcc:	10 92 7c 03 	sts	0x037C, r1
    1bd0:	87 ea       	ldi	r24, 0xA7	; 167
    1bd2:	91 e0       	ldi	r25, 0x01	; 1
    1bd4:	90 93 ac 03 	sts	0x03AC, r25
    1bd8:	80 93 ab 03 	sts	0x03AB, r24
    1bdc:	88 e1       	ldi	r24, 0x18	; 24
    1bde:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <LCD_set_backlight>
    1be2:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <LCD_clear>
    1be6:	84 ea       	ldi	r24, 0xA4	; 164
    1be8:	60 e0       	ldi	r22, 0x00	; 0
    1bea:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1bee:	85 e0       	ldi	r24, 0x05	; 5
    1bf0:	91 e0       	ldi	r25, 0x01	; 1
    1bf2:	1f 91       	pop	r17
    1bf4:	0f 91       	pop	r16
    1bf6:	08 95       	ret

00001bf8 <LCD_set_backlight>:
    1bf8:	1f 93       	push	r17
    1bfa:	18 2f       	mov	r17, r24
    1bfc:	85 e0       	ldi	r24, 0x05	; 5
    1bfe:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    1c02:	81 30       	cpi	r24, 0x01	; 1
    1c04:	c1 f4       	brne	.+48     	; 0x1c36 <LCD_set_backlight+0x3e>
    1c06:	87 e0       	ldi	r24, 0x07	; 7
    1c08:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <SPI_set_slave_addr>
    1c0c:	82 e0       	ldi	r24, 0x02	; 2
    1c0e:	6a e0       	ldi	r22, 0x0A	; 10
    1c10:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <SPI_transmit>
    1c14:	82 e0       	ldi	r24, 0x02	; 2
    1c16:	61 eb       	ldi	r22, 0xB1	; 177
    1c18:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <SPI_transmit>
    1c1c:	61 2f       	mov	r22, r17
    1c1e:	11 32       	cpi	r17, 0x21	; 33
    1c20:	08 f0       	brcs	.+2      	; 0x1c24 <LCD_set_backlight+0x2c>
    1c22:	60 e2       	ldi	r22, 0x20	; 32
    1c24:	82 e0       	ldi	r24, 0x02	; 2
    1c26:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <SPI_transmit>
    1c2a:	89 ee       	ldi	r24, 0xE9	; 233
    1c2c:	8a 95       	dec	r24
    1c2e:	f1 f7       	brne	.-4      	; 0x1c2c <LCD_set_backlight+0x34>
    1c30:	87 e0       	ldi	r24, 0x07	; 7
    1c32:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <SPI_set_slave_addr>
    1c36:	1f 91       	pop	r17
    1c38:	08 95       	ret

00001c3a <LCD_set_next_PGC>:
    1c3a:	83 70       	andi	r24, 0x03	; 3
    1c3c:	6f 77       	andi	r22, 0x7F	; 127
    1c3e:	60 93 79 03 	sts	0x0379, r22
    1c42:	80 93 7a 03 	sts	0x037A, r24
    1c46:	08 95       	ret

00001c48 <LCD_set_PGC_addr>:
    1c48:	0f 93       	push	r16
    1c4a:	1f 93       	push	r17
    1c4c:	06 2f       	mov	r16, r22
    1c4e:	16 2f       	mov	r17, r22
    1c50:	1f 77       	andi	r17, 0x7F	; 127
    1c52:	83 70       	andi	r24, 0x03	; 3
    1c54:	80 6b       	ori	r24, 0xB0	; 176
    1c56:	60 e0       	ldi	r22, 0x00	; 0
    1c58:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1c5c:	12 95       	swap	r17
    1c5e:	1f 70       	andi	r17, 0x0F	; 15
    1c60:	81 2f       	mov	r24, r17
    1c62:	80 61       	ori	r24, 0x10	; 16
    1c64:	60 e0       	ldi	r22, 0x00	; 0
    1c66:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1c6a:	80 2f       	mov	r24, r16
    1c6c:	8f 70       	andi	r24, 0x0F	; 15
    1c6e:	60 e0       	ldi	r22, 0x00	; 0
    1c70:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    1c74:	1f 91       	pop	r17
    1c76:	0f 91       	pop	r16
    1c78:	08 95       	ret

00001c7a <LCD_write>:
    1c7a:	0f 93       	push	r16
    1c7c:	1f 93       	push	r17
    1c7e:	08 2f       	mov	r16, r24
    1c80:	16 2f       	mov	r17, r22
    1c82:	85 e0       	ldi	r24, 0x05	; 5
    1c84:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    1c88:	81 30       	cpi	r24, 0x01	; 1
    1c8a:	79 f4       	brne	.+30     	; 0x1caa <LCD_write+0x30>
    1c8c:	11 23       	and	r17, r17
    1c8e:	19 f0       	breq	.+6      	; 0x1c96 <LCD_write+0x1c>
    1c90:	11 30       	cpi	r17, 0x01	; 1
    1c92:	21 f4       	brne	.+8      	; 0x1c9c <LCD_write+0x22>
    1c94:	02 c0       	rjmp	.+4      	; 0x1c9a <LCD_write+0x20>
    1c96:	2b 98       	cbi	0x05, 3	; 5
    1c98:	01 c0       	rjmp	.+2      	; 0x1c9c <LCD_write+0x22>
    1c9a:	2b 9a       	sbi	0x05, 3	; 5
    1c9c:	86 e0       	ldi	r24, 0x06	; 6
    1c9e:	8a 95       	dec	r24
    1ca0:	f1 f7       	brne	.-4      	; 0x1c9e <LCD_write+0x24>
    1ca2:	80 e0       	ldi	r24, 0x00	; 0
    1ca4:	60 2f       	mov	r22, r16
    1ca6:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <SPI_transmit>
    1caa:	1f 91       	pop	r17
    1cac:	0f 91       	pop	r16
    1cae:	08 95       	ret

00001cb0 <LED_clr_pattern>:
    1cb0:	1f 93       	push	r17
    1cb2:	18 2f       	mov	r17, r24
    1cb4:	86 e0       	ldi	r24, 0x06	; 6
    1cb6:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    1cba:	81 30       	cpi	r24, 0x01	; 1
    1cbc:	19 f4       	brne	.+6      	; 0x1cc4 <LED_clr_pattern+0x14>
    1cbe:	81 2f       	mov	r24, r17
    1cc0:	0e 94 2a 18 	call	0x3054	; 0x3054 <__LED_clr_pattern>
    1cc4:	1f 91       	pop	r17
    1cc6:	08 95       	ret

00001cc8 <LED_open>:
    1cc8:	0e 94 2f 18 	call	0x305e	; 0x305e <__LED_init>
    1ccc:	86 e0       	ldi	r24, 0x06	; 6
    1cce:	61 e0       	ldi	r22, 0x01	; 1
    1cd0:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    1cd4:	86 e0       	ldi	r24, 0x06	; 6
    1cd6:	91 e0       	ldi	r25, 0x01	; 1
    1cd8:	08 95       	ret

00001cda <LED_set_pattern>:
    1cda:	1f 93       	push	r17
    1cdc:	18 2f       	mov	r17, r24
    1cde:	86 e0       	ldi	r24, 0x06	; 6
    1ce0:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    1ce4:	81 30       	cpi	r24, 0x01	; 1
    1ce6:	19 f4       	brne	.+6      	; 0x1cee <LED_set_pattern+0x14>
    1ce8:	81 2f       	mov	r24, r17
    1cea:	0e 94 32 18 	call	0x3064	; 0x3064 <__LED_set_pattern>
    1cee:	1f 91       	pop	r17
    1cf0:	08 95       	ret

00001cf2 <SPI_set_slave_addr>:
    1cf2:	1f 93       	push	r17
    1cf4:	18 2f       	mov	r17, r24
    1cf6:	82 e0       	ldi	r24, 0x02	; 2
    1cf8:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    1cfc:	81 30       	cpi	r24, 0x01	; 1
    1cfe:	09 f0       	breq	.+2      	; 0x1d02 <SPI_set_slave_addr+0x10>
    1d00:	47 c0       	rjmp	.+142    	; 0x1d90 <SPI_set_slave_addr+0x9e>
    1d02:	91 2f       	mov	r25, r17
    1d04:	97 70       	andi	r25, 0x07	; 7
    1d06:	80 91 7e 03 	lds	r24, 0x037E
    1d0a:	98 17       	cp	r25, r24
    1d0c:	09 f4       	brne	.+2      	; 0x1d10 <SPI_set_slave_addr+0x1e>
    1d0e:	40 c0       	rjmp	.+128    	; 0x1d90 <SPI_set_slave_addr+0x9e>
    1d10:	90 93 7e 03 	sts	0x037E, r25
    1d14:	85 b1       	in	r24, 0x05	; 5
    1d16:	88 7f       	andi	r24, 0xF8	; 248
    1d18:	89 2b       	or	r24, r25
    1d1a:	85 b9       	out	0x05, r24	; 5
    1d1c:	93 30       	cpi	r25, 0x03	; 3
    1d1e:	11 f1       	breq	.+68     	; 0x1d64 <SPI_set_slave_addr+0x72>
    1d20:	94 30       	cpi	r25, 0x04	; 4
    1d22:	28 f4       	brcc	.+10     	; 0x1d2e <SPI_set_slave_addr+0x3c>
    1d24:	91 30       	cpi	r25, 0x01	; 1
    1d26:	51 f0       	breq	.+20     	; 0x1d3c <SPI_set_slave_addr+0x4a>
    1d28:	92 30       	cpi	r25, 0x02	; 2
    1d2a:	90 f4       	brcc	.+36     	; 0x1d50 <SPI_set_slave_addr+0x5e>
    1d2c:	0c c0       	rjmp	.+24     	; 0x1d46 <SPI_set_slave_addr+0x54>
    1d2e:	95 30       	cpi	r25, 0x05	; 5
    1d30:	19 f1       	breq	.+70     	; 0x1d78 <SPI_set_slave_addr+0x86>
    1d32:	95 30       	cpi	r25, 0x05	; 5
    1d34:	e0 f0       	brcs	.+56     	; 0x1d6e <SPI_set_slave_addr+0x7c>
    1d36:	96 30       	cpi	r25, 0x06	; 6
    1d38:	21 f5       	brne	.+72     	; 0x1d82 <SPI_set_slave_addr+0x90>
    1d3a:	0f c0       	rjmp	.+30     	; 0x1d5a <SPI_set_slave_addr+0x68>
    1d3c:	e0 91 62 02 	lds	r30, 0x0262
    1d40:	f0 91 63 02 	lds	r31, 0x0263
    1d44:	22 c0       	rjmp	.+68     	; 0x1d8a <SPI_set_slave_addr+0x98>
    1d46:	e0 91 60 02 	lds	r30, 0x0260
    1d4a:	f0 91 61 02 	lds	r31, 0x0261
    1d4e:	1d c0       	rjmp	.+58     	; 0x1d8a <SPI_set_slave_addr+0x98>
    1d50:	e0 91 64 02 	lds	r30, 0x0264
    1d54:	f0 91 65 02 	lds	r31, 0x0265
    1d58:	18 c0       	rjmp	.+48     	; 0x1d8a <SPI_set_slave_addr+0x98>
    1d5a:	e0 91 6c 02 	lds	r30, 0x026C
    1d5e:	f0 91 6d 02 	lds	r31, 0x026D
    1d62:	13 c0       	rjmp	.+38     	; 0x1d8a <SPI_set_slave_addr+0x98>
    1d64:	e0 91 66 02 	lds	r30, 0x0266
    1d68:	f0 91 67 02 	lds	r31, 0x0267
    1d6c:	0e c0       	rjmp	.+28     	; 0x1d8a <SPI_set_slave_addr+0x98>
    1d6e:	e0 91 68 02 	lds	r30, 0x0268
    1d72:	f0 91 69 02 	lds	r31, 0x0269
    1d76:	09 c0       	rjmp	.+18     	; 0x1d8a <SPI_set_slave_addr+0x98>
    1d78:	e0 91 6a 02 	lds	r30, 0x026A
    1d7c:	f0 91 6b 02 	lds	r31, 0x026B
    1d80:	04 c0       	rjmp	.+8      	; 0x1d8a <SPI_set_slave_addr+0x98>
    1d82:	e0 91 6e 02 	lds	r30, 0x026E
    1d86:	f0 91 6f 02 	lds	r31, 0x026F
    1d8a:	30 97       	sbiw	r30, 0x00	; 0
    1d8c:	09 f0       	breq	.+2      	; 0x1d90 <SPI_set_slave_addr+0x9e>
    1d8e:	09 95       	icall
    1d90:	1f 91       	pop	r17
    1d92:	08 95       	ret

00001d94 <SPI_transmit>:
    1d94:	1f 93       	push	r17
    1d96:	16 2f       	mov	r17, r22
    1d98:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <SPI_set_slave_addr>
    1d9c:	82 e0       	ldi	r24, 0x02	; 2
    1d9e:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    1da2:	81 30       	cpi	r24, 0x01	; 1
    1da4:	21 f4       	brne	.+8      	; 0x1dae <SPI_transmit+0x1a>
    1da6:	1e bd       	out	0x2e, r17	; 46
    1da8:	0d b4       	in	r0, 0x2d	; 45
    1daa:	07 fe       	sbrs	r0, 7
    1dac:	fd cf       	rjmp	.-6      	; 0x1da8 <SPI_transmit+0x14>
    1dae:	1f 91       	pop	r17
    1db0:	08 95       	ret

00001db2 <__SPKR_set_up_freq_LUT>:
    1db2:	0f 93       	push	r16
    1db4:	1f 93       	push	r17
    1db6:	cf 93       	push	r28
    1db8:	df 93       	push	r29
    1dba:	80 e2       	ldi	r24, 0x20	; 32
    1dbc:	91 e0       	ldi	r25, 0x01	; 1
    1dbe:	0e 94 d6 27 	call	0x4fac	; 0x4fac <malloc>
    1dc2:	9c 01       	movw	r18, r24
    1dc4:	90 93 7f 02 	sts	0x027F, r25
    1dc8:	80 93 7e 02 	sts	0x027E, r24
    1dcc:	89 2b       	or	r24, r25
    1dce:	11 f4       	brne	.+4      	; 0x1dd4 <__SPKR_set_up_freq_LUT+0x22>
    1dd0:	80 e0       	ldi	r24, 0x00	; 0
    1dd2:	39 c0       	rjmp	.+114    	; 0x1e46 <__SPKR_set_up_freq_LUT+0x94>
    1dd4:	89 01       	movw	r16, r18
    1dd6:	c0 e0       	ldi	r28, 0x00	; 0
    1dd8:	d0 e0       	ldi	r29, 0x00	; 0
    1dda:	be 01       	movw	r22, r28
    1ddc:	80 e0       	ldi	r24, 0x00	; 0
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	0e 94 17 21 	call	0x422e	; 0x422e <__floatunsisf>
    1de4:	20 e0       	ldi	r18, 0x00	; 0
    1de6:	30 e0       	ldi	r19, 0x00	; 0
    1de8:	40 ea       	ldi	r20, 0xA0	; 160
    1dea:	51 e4       	ldi	r21, 0x41	; 65
    1dec:	0e 94 7e 20 	call	0x40fc	; 0x40fc <__divsf3>
    1df0:	27 ef       	ldi	r18, 0xF7	; 247
    1df2:	35 e7       	ldi	r19, 0x75	; 117
    1df4:	40 e0       	ldi	r20, 0x00	; 0
    1df6:	5f e3       	ldi	r21, 0x3F	; 63
    1df8:	0e 94 07 22 	call	0x440e	; 0x440e <__mulsf3>
    1dfc:	9b 01       	movw	r18, r22
    1dfe:	ac 01       	movw	r20, r24
    1e00:	60 e0       	ldi	r22, 0x00	; 0
    1e02:	70 e0       	ldi	r23, 0x00	; 0
    1e04:	80 e2       	ldi	r24, 0x20	; 32
    1e06:	91 e4       	ldi	r25, 0x41	; 65
    1e08:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <pow>
    1e0c:	9b 01       	movw	r18, r22
    1e0e:	ac 01       	movw	r20, r24
    1e10:	ca 01       	movw	r24, r20
    1e12:	b9 01       	movw	r22, r18
    1e14:	2d ec       	ldi	r18, 0xCD	; 205
    1e16:	3c ec       	ldi	r19, 0xCC	; 204
    1e18:	42 e8       	ldi	r20, 0x82	; 130
    1e1a:	51 e4       	ldi	r21, 0x41	; 65
    1e1c:	0e 94 07 22 	call	0x440e	; 0x440e <__mulsf3>
    1e20:	0e 94 cd 21 	call	0x439a	; 0x439a <lrint>
    1e24:	2a e0       	ldi	r18, 0x0A	; 10
    1e26:	30 e0       	ldi	r19, 0x00	; 0
    1e28:	40 e0       	ldi	r20, 0x00	; 0
    1e2a:	50 e0       	ldi	r21, 0x00	; 0
    1e2c:	0e 94 37 27 	call	0x4e6e	; 0x4e6e <__mulsi3>
    1e30:	f8 01       	movw	r30, r16
    1e32:	61 93       	st	Z+, r22
    1e34:	71 93       	st	Z+, r23
    1e36:	81 93       	st	Z+, r24
    1e38:	91 93       	st	Z+, r25
    1e3a:	8f 01       	movw	r16, r30
    1e3c:	21 96       	adiw	r28, 0x01	; 1
    1e3e:	c8 34       	cpi	r28, 0x48	; 72
    1e40:	d1 05       	cpc	r29, r1
    1e42:	59 f6       	brne	.-106    	; 0x1dda <__SPKR_set_up_freq_LUT+0x28>
    1e44:	81 e0       	ldi	r24, 0x01	; 1
    1e46:	df 91       	pop	r29
    1e48:	cf 91       	pop	r28
    1e4a:	1f 91       	pop	r17
    1e4c:	0f 91       	pop	r16
    1e4e:	08 95       	ret

00001e50 <__SPKR_open_beep_mode>:
    1e50:	8a e0       	ldi	r24, 0x0A	; 10
    1e52:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    1e56:	88 23       	and	r24, r24
    1e58:	71 f4       	brne	.+28     	; 0x1e76 <__SPKR_open_beep_mode+0x26>
    1e5a:	10 92 7b 02 	sts	0x027B, r1
    1e5e:	10 92 7a 02 	sts	0x027A, r1
    1e62:	81 e0       	ldi	r24, 0x01	; 1
    1e64:	0e 94 5b 19 	call	0x32b6	; 0x32b6 <__SPKR_init>
    1e68:	81 e0       	ldi	r24, 0x01	; 1
    1e6a:	80 93 71 02 	sts	0x0271, r24
    1e6e:	8a e0       	ldi	r24, 0x0A	; 10
    1e70:	61 e0       	ldi	r22, 0x01	; 1
    1e72:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    1e76:	8a e0       	ldi	r24, 0x0A	; 10
    1e78:	91 e0       	ldi	r25, 0x01	; 1
    1e7a:	08 95       	ret

00001e7c <__SPKR_open_tone_mode>:
    1e7c:	1f 93       	push	r17
    1e7e:	8b e0       	ldi	r24, 0x0B	; 11
    1e80:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    1e84:	88 23       	and	r24, r24
    1e86:	11 f0       	breq	.+4      	; 0x1e8c <__SPKR_open_tone_mode+0x10>
    1e88:	90 e0       	ldi	r25, 0x00	; 0
    1e8a:	21 c0       	rjmp	.+66     	; 0x1ece <__SPKR_open_tone_mode+0x52>
    1e8c:	89 e0       	ldi	r24, 0x09	; 9
    1e8e:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    1e92:	88 23       	and	r24, r24
    1e94:	d9 f4       	brne	.+54     	; 0x1ecc <__SPKR_open_tone_mode+0x50>
    1e96:	0e 94 d9 0e 	call	0x1db2	; 0x1db2 <__SPKR_set_up_freq_LUT>
    1e9a:	18 2f       	mov	r17, r24
    1e9c:	81 30       	cpi	r24, 0x01	; 1
    1e9e:	b1 f4       	brne	.+44     	; 0x1ecc <__SPKR_open_tone_mode+0x50>
    1ea0:	10 92 72 02 	sts	0x0272, r1
    1ea4:	10 92 73 02 	sts	0x0273, r1
    1ea8:	10 92 74 02 	sts	0x0274, r1
    1eac:	10 92 75 02 	sts	0x0275, r1
    1eb0:	8d e0       	ldi	r24, 0x0D	; 13
    1eb2:	6e ed       	ldi	r22, 0xDE	; 222
    1eb4:	78 e1       	ldi	r23, 0x18	; 24
    1eb6:	0e 94 53 17 	call	0x2ea6	; 0x2ea6 <ISR_attach>
    1eba:	82 e0       	ldi	r24, 0x02	; 2
    1ebc:	0e 94 5b 19 	call	0x32b6	; 0x32b6 <__SPKR_init>
    1ec0:	10 93 70 02 	sts	0x0270, r17
    1ec4:	89 e0       	ldi	r24, 0x09	; 9
    1ec6:	61 e0       	ldi	r22, 0x01	; 1
    1ec8:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    1ecc:	91 e0       	ldi	r25, 0x01	; 1
    1ece:	89 e0       	ldi	r24, 0x09	; 9
    1ed0:	1f 91       	pop	r17
    1ed2:	08 95       	ret

00001ed4 <SPKR_open>:
    1ed4:	81 30       	cpi	r24, 0x01	; 1
    1ed6:	29 f0       	breq	.+10     	; 0x1ee2 <SPKR_open+0xe>
    1ed8:	82 30       	cpi	r24, 0x02	; 2
    1eda:	31 f0       	breq	.+12     	; 0x1ee8 <SPKR_open+0x14>
    1edc:	90 e0       	ldi	r25, 0x00	; 0
    1ede:	89 e0       	ldi	r24, 0x09	; 9
    1ee0:	08 95       	ret
    1ee2:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <__SPKR_open_beep_mode>
    1ee6:	08 95       	ret
    1ee8:	0e 94 3e 0f 	call	0x1e7c	; 0x1e7c <__SPKR_open_tone_mode>
    1eec:	08 95       	ret

00001eee <STEPPER_get_nSteps>:
    1eee:	80 91 3f 03 	lds	r24, 0x033F
    1ef2:	90 91 40 03 	lds	r25, 0x0340
    1ef6:	20 91 41 03 	lds	r18, 0x0341
    1efa:	30 91 42 03 	lds	r19, 0x0342
    1efe:	bc 01       	movw	r22, r24
    1f00:	c9 01       	movw	r24, r18
    1f02:	08 95       	ret

00001f04 <STEPPER_stepmode>:
    1f04:	2f 92       	push	r2
    1f06:	3f 92       	push	r3
    1f08:	4f 92       	push	r4
    1f0a:	5f 92       	push	r5
    1f0c:	6f 92       	push	r6
    1f0e:	7f 92       	push	r7
    1f10:	8f 92       	push	r8
    1f12:	9f 92       	push	r9
    1f14:	af 92       	push	r10
    1f16:	bf 92       	push	r11
    1f18:	cf 92       	push	r12
    1f1a:	df 92       	push	r13
    1f1c:	ef 92       	push	r14
    1f1e:	ff 92       	push	r15
    1f20:	0f 93       	push	r16
    1f22:	1f 93       	push	r17
    1f24:	df 93       	push	r29
    1f26:	cf 93       	push	r28
    1f28:	cd b7       	in	r28, 0x3d	; 61
    1f2a:	de b7       	in	r29, 0x3e	; 62
    1f2c:	58 2e       	mov	r5, r24
    1f2e:	96 2e       	mov	r9, r22
    1f30:	44 2e       	mov	r4, r20
    1f32:	39 01       	movw	r6, r18
    1f34:	3c 2c       	mov	r3, r12
    1f36:	c9 8c       	ldd	r12, Y+25	; 0x19
    1f38:	da 8c       	ldd	r13, Y+26	; 0x1a
    1f3a:	2b 8c       	ldd	r2, Y+27	; 0x1b
    1f3c:	81 e0       	ldi	r24, 0x01	; 1
    1f3e:	68 17       	cp	r22, r24
    1f40:	39 f1       	breq	.+78     	; 0x1f90 <STEPPER_stepmode+0x8c>
    1f42:	68 17       	cp	r22, r24
    1f44:	28 f0       	brcs	.+10     	; 0x1f50 <STEPPER_stepmode+0x4c>
    1f46:	92 e0       	ldi	r25, 0x02	; 2
    1f48:	69 17       	cp	r22, r25
    1f4a:	09 f0       	breq	.+2      	; 0x1f4e <STEPPER_stepmode+0x4a>
    1f4c:	85 c0       	rjmp	.+266    	; 0x2058 <STEPPER_stepmode+0x154>
    1f4e:	49 c0       	rjmp	.+146    	; 0x1fe2 <STEPPER_stepmode+0xde>
    1f50:	80 e0       	ldi	r24, 0x00	; 0
    1f52:	61 e0       	ldi	r22, 0x01	; 1
    1f54:	0e 94 8b 11 	call	0x2316	; 0x2316 <STEPPER_set_mode>
    1f58:	80 e0       	ldi	r24, 0x00	; 0
    1f5a:	b7 01       	movw	r22, r14
    1f5c:	0e 94 54 11 	call	0x22a8	; 0x22a8 <STEPPER_set_accel>
    1f60:	80 e0       	ldi	r24, 0x00	; 0
    1f62:	64 2d       	mov	r22, r4
    1f64:	a3 01       	movw	r20, r6
    1f66:	98 01       	movw	r18, r16
    1f68:	03 2d       	mov	r16, r3
    1f6a:	ee 24       	eor	r14, r14
    1f6c:	e3 94       	inc	r14
    1f6e:	e4 e6       	ldi	r30, 0x64	; 100
    1f70:	ce 2e       	mov	r12, r30
    1f72:	e3 e0       	ldi	r30, 0x03	; 3
    1f74:	de 2e       	mov	r13, r30
    1f76:	0e 94 c2 11 	call	0x2384	; 0x2384 <STEPPER_step>
    1f7a:	55 20       	and	r5, r5
    1f7c:	09 f0       	breq	.+2      	; 0x1f80 <STEPPER_stepmode+0x7c>
    1f7e:	6c c0       	rjmp	.+216    	; 0x2058 <STEPPER_stepmode+0x154>
    1f80:	00 d0       	rcall	.+0      	; 0x1f82 <STEPPER_stepmode+0x7e>
    1f82:	0f 92       	push	r0
    1f84:	ed b7       	in	r30, 0x3d	; 61
    1f86:	fe b7       	in	r31, 0x3e	; 62
    1f88:	11 82       	std	Z+1, r1	; 0x01
    1f8a:	b3 82       	std	Z+3, r11	; 0x03
    1f8c:	a2 82       	std	Z+2, r10	; 0x02
    1f8e:	23 c0       	rjmp	.+70     	; 0x1fd6 <STEPPER_stepmode+0xd2>
    1f90:	81 e0       	ldi	r24, 0x01	; 1
    1f92:	61 e0       	ldi	r22, 0x01	; 1
    1f94:	0e 94 8b 11 	call	0x2316	; 0x2316 <STEPPER_set_mode>
    1f98:	81 e0       	ldi	r24, 0x01	; 1
    1f9a:	b6 01       	movw	r22, r12
    1f9c:	0e 94 54 11 	call	0x22a8	; 0x22a8 <STEPPER_set_accel>
    1fa0:	81 e0       	ldi	r24, 0x01	; 1
    1fa2:	68 2d       	mov	r22, r8
    1fa4:	4d 89       	ldd	r20, Y+21	; 0x15
    1fa6:	5e 89       	ldd	r21, Y+22	; 0x16
    1fa8:	2f 89       	ldd	r18, Y+23	; 0x17
    1faa:	38 8d       	ldd	r19, Y+24	; 0x18
    1fac:	02 2d       	mov	r16, r2
    1fae:	ee 24       	eor	r14, r14
    1fb0:	e3 94       	inc	r14
    1fb2:	74 e6       	ldi	r23, 0x64	; 100
    1fb4:	c7 2e       	mov	r12, r23
    1fb6:	73 e0       	ldi	r23, 0x03	; 3
    1fb8:	d7 2e       	mov	r13, r23
    1fba:	0e 94 c2 11 	call	0x2384	; 0x2384 <STEPPER_step>
    1fbe:	55 20       	and	r5, r5
    1fc0:	09 f0       	breq	.+2      	; 0x1fc4 <STEPPER_stepmode+0xc0>
    1fc2:	4a c0       	rjmp	.+148    	; 0x2058 <STEPPER_stepmode+0x154>
    1fc4:	00 d0       	rcall	.+0      	; 0x1fc6 <STEPPER_stepmode+0xc2>
    1fc6:	0f 92       	push	r0
    1fc8:	ed b7       	in	r30, 0x3d	; 61
    1fca:	fe b7       	in	r31, 0x3e	; 62
    1fcc:	91 82       	std	Z+1, r9	; 0x01
    1fce:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1fd0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1fd2:	93 83       	std	Z+3, r25	; 0x03
    1fd4:	82 83       	std	Z+2, r24	; 0x02
    1fd6:	0e 94 4e 12 	call	0x249c	; 0x249c <STEPPER_wait_and_then>
    1fda:	0f 90       	pop	r0
    1fdc:	0f 90       	pop	r0
    1fde:	0f 90       	pop	r0
    1fe0:	3b c0       	rjmp	.+118    	; 0x2058 <STEPPER_stepmode+0x154>
    1fe2:	82 e0       	ldi	r24, 0x02	; 2
    1fe4:	61 e0       	ldi	r22, 0x01	; 1
    1fe6:	0e 94 8b 11 	call	0x2316	; 0x2316 <STEPPER_set_mode>
    1fea:	80 e0       	ldi	r24, 0x00	; 0
    1fec:	b7 01       	movw	r22, r14
    1fee:	0e 94 54 11 	call	0x22a8	; 0x22a8 <STEPPER_set_accel>
    1ff2:	81 e0       	ldi	r24, 0x01	; 1
    1ff4:	b6 01       	movw	r22, r12
    1ff6:	0e 94 54 11 	call	0x22a8	; 0x22a8 <STEPPER_set_accel>
    1ffa:	80 e0       	ldi	r24, 0x00	; 0
    1ffc:	64 2d       	mov	r22, r4
    1ffe:	a3 01       	movw	r20, r6
    2000:	98 01       	movw	r18, r16
    2002:	03 2d       	mov	r16, r3
    2004:	ee 24       	eor	r14, r14
    2006:	e3 94       	inc	r14
    2008:	94 e6       	ldi	r25, 0x64	; 100
    200a:	c9 2e       	mov	r12, r25
    200c:	93 e0       	ldi	r25, 0x03	; 3
    200e:	d9 2e       	mov	r13, r25
    2010:	0e 94 c2 11 	call	0x2384	; 0x2384 <STEPPER_step>
    2014:	81 e0       	ldi	r24, 0x01	; 1
    2016:	68 2d       	mov	r22, r8
    2018:	4d 89       	ldd	r20, Y+21	; 0x15
    201a:	5e 89       	ldd	r21, Y+22	; 0x16
    201c:	2f 89       	ldd	r18, Y+23	; 0x17
    201e:	38 8d       	ldd	r19, Y+24	; 0x18
    2020:	02 2d       	mov	r16, r2
    2022:	0e 94 c2 11 	call	0x2384	; 0x2384 <STEPPER_step>
    2026:	55 20       	and	r5, r5
    2028:	b9 f4       	brne	.+46     	; 0x2058 <STEPPER_stepmode+0x154>
    202a:	00 d0       	rcall	.+0      	; 0x202c <STEPPER_stepmode+0x128>
    202c:	00 d0       	rcall	.+0      	; 0x202e <STEPPER_stepmode+0x12a>
    202e:	0f 92       	push	r0
    2030:	ad b7       	in	r26, 0x3d	; 61
    2032:	be b7       	in	r27, 0x3e	; 62
    2034:	11 96       	adiw	r26, 0x01	; 1
    2036:	ed b7       	in	r30, 0x3d	; 61
    2038:	fe b7       	in	r31, 0x3e	; 62
    203a:	91 82       	std	Z+1, r9	; 0x01
    203c:	fd 01       	movw	r30, r26
    203e:	b2 82       	std	Z+2, r11	; 0x02
    2040:	a1 82       	std	Z+1, r10	; 0x01
    2042:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2044:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2046:	94 83       	std	Z+4, r25	; 0x04
    2048:	83 83       	std	Z+3, r24	; 0x03
    204a:	0e 94 4e 12 	call	0x249c	; 0x249c <STEPPER_wait_and_then>
    204e:	0f 90       	pop	r0
    2050:	0f 90       	pop	r0
    2052:	0f 90       	pop	r0
    2054:	0f 90       	pop	r0
    2056:	0f 90       	pop	r0
    2058:	cf 91       	pop	r28
    205a:	df 91       	pop	r29
    205c:	1f 91       	pop	r17
    205e:	0f 91       	pop	r16
    2060:	ff 90       	pop	r15
    2062:	ef 90       	pop	r14
    2064:	df 90       	pop	r13
    2066:	cf 90       	pop	r12
    2068:	bf 90       	pop	r11
    206a:	af 90       	pop	r10
    206c:	9f 90       	pop	r9
    206e:	8f 90       	pop	r8
    2070:	7f 90       	pop	r7
    2072:	6f 90       	pop	r6
    2074:	5f 90       	pop	r5
    2076:	4f 90       	pop	r4
    2078:	3f 90       	pop	r3
    207a:	2f 90       	pop	r2
    207c:	08 95       	ret

0000207e <STEPPER_move>:
    207e:	6f 92       	push	r6
    2080:	7f 92       	push	r7
    2082:	8f 92       	push	r8
    2084:	9f 92       	push	r9
    2086:	af 92       	push	r10
    2088:	bf 92       	push	r11
    208a:	cf 92       	push	r12
    208c:	df 92       	push	r13
    208e:	ef 92       	push	r14
    2090:	ff 92       	push	r15
    2092:	0f 93       	push	r16
    2094:	1f 93       	push	r17
    2096:	df 93       	push	r29
    2098:	cf 93       	push	r28
    209a:	cd b7       	in	r28, 0x3d	; 61
    209c:	de b7       	in	r29, 0x3e	; 62
    209e:	94 2e       	mov	r9, r20
    20a0:	7c 2d       	mov	r23, r12
    20a2:	d5 01       	movw	r26, r10
    20a4:	49 89       	ldd	r20, Y+17	; 0x11
    20a6:	5a 89       	ldd	r21, Y+18	; 0x12
    20a8:	ab 88       	ldd	r10, Y+19	; 0x13
    20aa:	bc 88       	ldd	r11, Y+20	; 0x14
    20ac:	cd 88       	ldd	r12, Y+21	; 0x15
    20ae:	de 88       	ldd	r13, Y+22	; 0x16
    20b0:	9f 89       	ldd	r25, Y+23	; 0x17
    20b2:	81 30       	cpi	r24, 0x01	; 1
    20b4:	09 f4       	brne	.+2      	; 0x20b8 <STEPPER_move+0x3a>
    20b6:	57 c0       	rjmp	.+174    	; 0x2166 <STEPPER_move+0xe8>
    20b8:	81 30       	cpi	r24, 0x01	; 1
    20ba:	b8 f1       	brcs	.+110    	; 0x212a <STEPPER_move+0xac>
    20bc:	82 30       	cpi	r24, 0x02	; 2
    20be:	09 f0       	breq	.+2      	; 0x20c2 <STEPPER_move+0x44>
    20c0:	76 c0       	rjmp	.+236    	; 0x21ae <STEPPER_move+0x130>
    20c2:	61 30       	cpi	r22, 0x01	; 1
    20c4:	91 f0       	breq	.+36     	; 0x20ea <STEPPER_move+0x6c>
    20c6:	61 30       	cpi	r22, 0x01	; 1
    20c8:	20 f0       	brcs	.+8      	; 0x20d2 <STEPPER_move+0x54>
    20ca:	62 30       	cpi	r22, 0x02	; 2
    20cc:	09 f0       	breq	.+2      	; 0x20d0 <STEPPER_move+0x52>
    20ce:	6f c0       	rjmp	.+222    	; 0x21ae <STEPPER_move+0x130>
    20d0:	15 c0       	rjmp	.+42     	; 0x20fc <STEPPER_move+0x7e>
    20d2:	80 e0       	ldi	r24, 0x00	; 0
    20d4:	60 e0       	ldi	r22, 0x00	; 0
    20d6:	0e 94 8b 11 	call	0x2316	; 0x2316 <STEPPER_set_mode>
    20da:	80 e0       	ldi	r24, 0x00	; 0
    20dc:	b7 01       	movw	r22, r14
    20de:	0e 94 54 11 	call	0x22a8	; 0x22a8 <STEPPER_set_accel>
    20e2:	80 e0       	ldi	r24, 0x00	; 0
    20e4:	69 2d       	mov	r22, r9
    20e6:	a8 01       	movw	r20, r16
    20e8:	1d c0       	rjmp	.+58     	; 0x2124 <STEPPER_move+0xa6>
    20ea:	81 e0       	ldi	r24, 0x01	; 1
    20ec:	60 e0       	ldi	r22, 0x00	; 0
    20ee:	0e 94 8b 11 	call	0x2316	; 0x2316 <STEPPER_set_mode>
    20f2:	81 e0       	ldi	r24, 0x01	; 1
    20f4:	b6 01       	movw	r22, r12
    20f6:	0e 94 54 11 	call	0x22a8	; 0x22a8 <STEPPER_set_accel>
    20fa:	11 c0       	rjmp	.+34     	; 0x211e <STEPPER_move+0xa0>
    20fc:	82 e0       	ldi	r24, 0x02	; 2
    20fe:	60 e0       	ldi	r22, 0x00	; 0
    2100:	0e 94 8b 11 	call	0x2316	; 0x2316 <STEPPER_set_mode>
    2104:	80 e0       	ldi	r24, 0x00	; 0
    2106:	b7 01       	movw	r22, r14
    2108:	0e 94 54 11 	call	0x22a8	; 0x22a8 <STEPPER_set_accel>
    210c:	81 e0       	ldi	r24, 0x01	; 1
    210e:	b6 01       	movw	r22, r12
    2110:	0e 94 54 11 	call	0x22a8	; 0x22a8 <STEPPER_set_accel>
    2114:	80 e0       	ldi	r24, 0x00	; 0
    2116:	69 2d       	mov	r22, r9
    2118:	a8 01       	movw	r20, r16
    211a:	0e 94 3d 11 	call	0x227a	; 0x227a <STEPPER_run>
    211e:	81 e0       	ldi	r24, 0x01	; 1
    2120:	68 2d       	mov	r22, r8
    2122:	a5 01       	movw	r20, r10
    2124:	0e 94 3d 11 	call	0x227a	; 0x227a <STEPPER_run>
    2128:	42 c0       	rjmp	.+132    	; 0x21ae <STEPPER_move+0x130>
    212a:	ed b7       	in	r30, 0x3d	; 61
    212c:	fe b7       	in	r31, 0x3e	; 62
    212e:	39 97       	sbiw	r30, 0x09	; 9
    2130:	0f b6       	in	r0, 0x3f	; 63
    2132:	f8 94       	cli
    2134:	fe bf       	out	0x3e, r31	; 62
    2136:	0f be       	out	0x3f, r0	; 63
    2138:	ed bf       	out	0x3d, r30	; 61
    213a:	6d b6       	in	r6, 0x3d	; 61
    213c:	7e b6       	in	r7, 0x3e	; 62
    213e:	08 94       	sec
    2140:	61 1c       	adc	r6, r1
    2142:	71 1c       	adc	r7, r1
    2144:	52 83       	std	Z+2, r21	; 0x02
    2146:	41 83       	std	Z+1, r20	; 0x01
    2148:	f3 01       	movw	r30, r6
    214a:	b3 82       	std	Z+3, r11	; 0x03
    214c:	a2 82       	std	Z+2, r10	; 0x02
    214e:	d5 82       	std	Z+5, r13	; 0x05
    2150:	c4 82       	std	Z+4, r12	; 0x04
    2152:	96 83       	std	Z+6, r25	; 0x06
    2154:	88 8d       	ldd	r24, Y+24	; 0x18
    2156:	99 8d       	ldd	r25, Y+25	; 0x19
    2158:	90 87       	std	Z+8, r25	; 0x08
    215a:	87 83       	std	Z+7, r24	; 0x07
    215c:	80 e0       	ldi	r24, 0x00	; 0
    215e:	49 2d       	mov	r20, r9
    2160:	c7 2e       	mov	r12, r23
    2162:	5d 01       	movw	r10, r26
    2164:	1a c0       	rjmp	.+52     	; 0x219a <STEPPER_move+0x11c>
    2166:	ed b7       	in	r30, 0x3d	; 61
    2168:	fe b7       	in	r31, 0x3e	; 62
    216a:	39 97       	sbiw	r30, 0x09	; 9
    216c:	0f b6       	in	r0, 0x3f	; 63
    216e:	f8 94       	cli
    2170:	fe bf       	out	0x3e, r31	; 62
    2172:	0f be       	out	0x3f, r0	; 63
    2174:	ed bf       	out	0x3d, r30	; 61
    2176:	ad b7       	in	r26, 0x3d	; 61
    2178:	be b7       	in	r27, 0x3e	; 62
    217a:	11 96       	adiw	r26, 0x01	; 1
    217c:	52 83       	std	Z+2, r21	; 0x02
    217e:	41 83       	std	Z+1, r20	; 0x01
    2180:	fd 01       	movw	r30, r26
    2182:	b3 82       	std	Z+3, r11	; 0x03
    2184:	a2 82       	std	Z+2, r10	; 0x02
    2186:	d5 82       	std	Z+5, r13	; 0x05
    2188:	c4 82       	std	Z+4, r12	; 0x04
    218a:	96 83       	std	Z+6, r25	; 0x06
    218c:	10 86       	std	Z+8, r1	; 0x08
    218e:	17 82       	std	Z+7, r1	; 0x07
    2190:	81 e0       	ldi	r24, 0x01	; 1
    2192:	49 2d       	mov	r20, r9
    2194:	c7 2e       	mov	r12, r23
    2196:	aa 24       	eor	r10, r10
    2198:	bb 24       	eor	r11, r11
    219a:	0e 94 82 0f 	call	0x1f04	; 0x1f04 <STEPPER_stepmode>
    219e:	8d b7       	in	r24, 0x3d	; 61
    21a0:	9e b7       	in	r25, 0x3e	; 62
    21a2:	09 96       	adiw	r24, 0x09	; 9
    21a4:	0f b6       	in	r0, 0x3f	; 63
    21a6:	f8 94       	cli
    21a8:	9e bf       	out	0x3e, r25	; 62
    21aa:	0f be       	out	0x3f, r0	; 63
    21ac:	8d bf       	out	0x3d, r24	; 61
    21ae:	cf 91       	pop	r28
    21b0:	df 91       	pop	r29
    21b2:	1f 91       	pop	r17
    21b4:	0f 91       	pop	r16
    21b6:	ff 90       	pop	r15
    21b8:	ef 90       	pop	r14
    21ba:	df 90       	pop	r13
    21bc:	cf 90       	pop	r12
    21be:	bf 90       	pop	r11
    21c0:	af 90       	pop	r10
    21c2:	9f 90       	pop	r9
    21c4:	8f 90       	pop	r8
    21c6:	7f 90       	pop	r7
    21c8:	6f 90       	pop	r6
    21ca:	08 95       	ret

000021cc <STEPPER_open>:
    21cc:	0e 94 ed 19 	call	0x33da	; 0x33da <__STEPPER_init>
    21d0:	81 e0       	ldi	r24, 0x01	; 1
    21d2:	80 93 63 03 	sts	0x0363, r24
    21d6:	ed e2       	ldi	r30, 0x2D	; 45
    21d8:	f3 e0       	ldi	r31, 0x03	; 3
    21da:	11 92       	st	Z+, r1
    21dc:	11 92       	st	Z+, r1
    21de:	11 82       	std	Z+1, r1	; 0x01
    21e0:	10 82       	st	Z, r1
    21e2:	32 96       	adiw	r30, 0x02	; 2
    21e4:	11 82       	std	Z+1, r1	; 0x01
    21e6:	10 82       	st	Z, r1
    21e8:	32 96       	adiw	r30, 0x02	; 2
    21ea:	11 82       	std	Z+1, r1	; 0x01
    21ec:	10 82       	st	Z, r1
    21ee:	32 96       	adiw	r30, 0x02	; 2
    21f0:	11 82       	std	Z+1, r1	; 0x01
    21f2:	10 82       	st	Z, r1
    21f4:	32 96       	adiw	r30, 0x02	; 2
    21f6:	11 82       	std	Z+1, r1	; 0x01
    21f8:	10 82       	st	Z, r1
    21fa:	32 96       	adiw	r30, 0x02	; 2
    21fc:	11 82       	std	Z+1, r1	; 0x01
    21fe:	10 82       	st	Z, r1
    2200:	32 96       	adiw	r30, 0x02	; 2
    2202:	11 82       	std	Z+1, r1	; 0x01
    2204:	10 82       	st	Z, r1
    2206:	32 96       	adiw	r30, 0x02	; 2
    2208:	11 82       	std	Z+1, r1	; 0x01
    220a:	10 82       	st	Z, r1
    220c:	32 96       	adiw	r30, 0x02	; 2
    220e:	11 82       	std	Z+1, r1	; 0x01
    2210:	10 82       	st	Z, r1
    2212:	32 96       	adiw	r30, 0x02	; 2
    2214:	11 82       	std	Z+1, r1	; 0x01
    2216:	10 82       	st	Z, r1
    2218:	32 96       	adiw	r30, 0x02	; 2
    221a:	11 82       	std	Z+1, r1	; 0x01
    221c:	10 82       	st	Z, r1
    221e:	32 96       	adiw	r30, 0x02	; 2
    2220:	11 82       	std	Z+1, r1	; 0x01
    2222:	10 82       	st	Z, r1
    2224:	36 96       	adiw	r30, 0x06	; 6
    2226:	11 92       	st	Z+, r1
    2228:	11 92       	st	Z+, r1
    222a:	11 92       	st	Z+, r1
    222c:	10 82       	st	Z, r1
    222e:	32 96       	adiw	r30, 0x02	; 2
    2230:	11 92       	st	Z+, r1
    2232:	11 92       	st	Z+, r1
    2234:	11 92       	st	Z+, r1
    2236:	11 92       	st	Z+, r1
    2238:	11 92       	st	Z+, r1
    223a:	11 92       	st	Z+, r1
    223c:	11 92       	st	Z+, r1
    223e:	11 82       	std	Z+1, r1	; 0x01
    2240:	10 82       	st	Z, r1
    2242:	32 96       	adiw	r30, 0x02	; 2
    2244:	11 82       	std	Z+1, r1	; 0x01
    2246:	10 82       	st	Z, r1
    2248:	32 96       	adiw	r30, 0x02	; 2
    224a:	11 82       	std	Z+1, r1	; 0x01
    224c:	10 82       	st	Z, r1
    224e:	32 96       	adiw	r30, 0x02	; 2
    2250:	11 82       	std	Z+1, r1	; 0x01
    2252:	10 82       	st	Z, r1
    2254:	76 97       	sbiw	r30, 0x16	; 22
    2256:	11 82       	std	Z+1, r1	; 0x01
    2258:	10 82       	st	Z, r1
    225a:	32 96       	adiw	r30, 0x02	; 2
    225c:	11 82       	std	Z+1, r1	; 0x01
    225e:	10 82       	st	Z, r1
    2260:	10 92 62 03 	sts	0x0362, r1
    2264:	10 92 61 03 	sts	0x0361, r1
    2268:	10 92 63 03 	sts	0x0363, r1
    226c:	87 e0       	ldi	r24, 0x07	; 7
    226e:	61 e0       	ldi	r22, 0x01	; 1
    2270:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    2274:	87 e0       	ldi	r24, 0x07	; 7
    2276:	91 e0       	ldi	r25, 0x01	; 1
    2278:	08 95       	ret

0000227a <STEPPER_run>:
    227a:	ef 92       	push	r14
    227c:	ff 92       	push	r15
    227e:	0f 93       	push	r16
    2280:	1f 93       	push	r17
    2282:	18 2f       	mov	r17, r24
    2284:	06 2f       	mov	r16, r22
    2286:	7a 01       	movw	r14, r20
    2288:	60 e0       	ldi	r22, 0x00	; 0
    228a:	0e 94 8b 11 	call	0x2316	; 0x2316 <STEPPER_set_mode>
    228e:	81 2f       	mov	r24, r17
    2290:	60 2f       	mov	r22, r16
    2292:	0e 94 76 11 	call	0x22ec	; 0x22ec <STEPPER_set_dir>
    2296:	81 2f       	mov	r24, r17
    2298:	b7 01       	movw	r22, r14
    229a:	0e 94 a0 11 	call	0x2340	; 0x2340 <STEPPER_set_speed>
    229e:	1f 91       	pop	r17
    22a0:	0f 91       	pop	r16
    22a2:	ff 90       	pop	r15
    22a4:	ef 90       	pop	r14
    22a6:	08 95       	ret

000022a8 <STEPPER_set_accel>:
    22a8:	48 2f       	mov	r20, r24
    22aa:	81 e0       	ldi	r24, 0x01	; 1
    22ac:	80 93 63 03 	sts	0x0363, r24
    22b0:	cb 01       	movw	r24, r22
    22b2:	23 e0       	ldi	r18, 0x03	; 3
    22b4:	69 3e       	cpi	r22, 0xE9	; 233
    22b6:	72 07       	cpc	r23, r18
    22b8:	10 f0       	brcs	.+4      	; 0x22be <STEPPER_set_accel+0x16>
    22ba:	88 ee       	ldi	r24, 0xE8	; 232
    22bc:	93 e0       	ldi	r25, 0x03	; 3
    22be:	41 30       	cpi	r20, 0x01	; 1
    22c0:	71 f0       	breq	.+28     	; 0x22de <STEPPER_set_accel+0x36>
    22c2:	41 30       	cpi	r20, 0x01	; 1
    22c4:	18 f0       	brcs	.+6      	; 0x22cc <STEPPER_set_accel+0x24>
    22c6:	42 30       	cpi	r20, 0x02	; 2
    22c8:	71 f4       	brne	.+28     	; 0x22e6 <STEPPER_set_accel+0x3e>
    22ca:	05 c0       	rjmp	.+10     	; 0x22d6 <STEPPER_set_accel+0x2e>
    22cc:	90 93 38 03 	sts	0x0338, r25
    22d0:	80 93 37 03 	sts	0x0337, r24
    22d4:	08 c0       	rjmp	.+16     	; 0x22e6 <STEPPER_set_accel+0x3e>
    22d6:	90 93 38 03 	sts	0x0338, r25
    22da:	80 93 37 03 	sts	0x0337, r24
    22de:	90 93 3a 03 	sts	0x033A, r25
    22e2:	80 93 39 03 	sts	0x0339, r24
    22e6:	10 92 63 03 	sts	0x0363, r1
    22ea:	08 95       	ret

000022ec <STEPPER_set_dir>:
    22ec:	98 2f       	mov	r25, r24
    22ee:	81 e0       	ldi	r24, 0x01	; 1
    22f0:	80 93 63 03 	sts	0x0363, r24
    22f4:	91 30       	cpi	r25, 0x01	; 1
    22f6:	51 f0       	breq	.+20     	; 0x230c <STEPPER_set_dir+0x20>
    22f8:	91 30       	cpi	r25, 0x01	; 1
    22fa:	18 f0       	brcs	.+6      	; 0x2302 <STEPPER_set_dir+0x16>
    22fc:	92 30       	cpi	r25, 0x02	; 2
    22fe:	41 f4       	brne	.+16     	; 0x2310 <STEPPER_set_dir+0x24>
    2300:	03 c0       	rjmp	.+6      	; 0x2308 <STEPPER_set_dir+0x1c>
    2302:	60 93 50 03 	sts	0x0350, r22
    2306:	04 c0       	rjmp	.+8      	; 0x2310 <STEPPER_set_dir+0x24>
    2308:	60 93 50 03 	sts	0x0350, r22
    230c:	60 93 51 03 	sts	0x0351, r22
    2310:	10 92 63 03 	sts	0x0363, r1
    2314:	08 95       	ret

00002316 <STEPPER_set_mode>:
    2316:	98 2f       	mov	r25, r24
    2318:	81 e0       	ldi	r24, 0x01	; 1
    231a:	80 93 63 03 	sts	0x0363, r24
    231e:	91 30       	cpi	r25, 0x01	; 1
    2320:	51 f0       	breq	.+20     	; 0x2336 <STEPPER_set_mode+0x20>
    2322:	91 30       	cpi	r25, 0x01	; 1
    2324:	18 f0       	brcs	.+6      	; 0x232c <STEPPER_set_mode+0x16>
    2326:	92 30       	cpi	r25, 0x02	; 2
    2328:	41 f4       	brne	.+16     	; 0x233a <STEPPER_set_mode+0x24>
    232a:	03 c0       	rjmp	.+6      	; 0x2332 <STEPPER_set_mode+0x1c>
    232c:	60 93 2d 03 	sts	0x032D, r22
    2330:	04 c0       	rjmp	.+8      	; 0x233a <STEPPER_set_mode+0x24>
    2332:	60 93 2d 03 	sts	0x032D, r22
    2336:	60 93 2e 03 	sts	0x032E, r22
    233a:	10 92 63 03 	sts	0x0363, r1
    233e:	08 95       	ret

00002340 <STEPPER_set_speed>:
    2340:	48 2f       	mov	r20, r24
    2342:	81 e0       	ldi	r24, 0x01	; 1
    2344:	80 93 63 03 	sts	0x0363, r24
    2348:	cb 01       	movw	r24, r22
    234a:	21 e0       	ldi	r18, 0x01	; 1
    234c:	61 39       	cpi	r22, 0x91	; 145
    234e:	72 07       	cpc	r23, r18
    2350:	10 f0       	brcs	.+4      	; 0x2356 <STEPPER_set_speed+0x16>
    2352:	80 e9       	ldi	r24, 0x90	; 144
    2354:	91 e0       	ldi	r25, 0x01	; 1
    2356:	41 30       	cpi	r20, 0x01	; 1
    2358:	71 f0       	breq	.+28     	; 0x2376 <STEPPER_set_speed+0x36>
    235a:	41 30       	cpi	r20, 0x01	; 1
    235c:	18 f0       	brcs	.+6      	; 0x2364 <STEPPER_set_speed+0x24>
    235e:	42 30       	cpi	r20, 0x02	; 2
    2360:	71 f4       	brne	.+28     	; 0x237e <STEPPER_set_speed+0x3e>
    2362:	05 c0       	rjmp	.+10     	; 0x236e <STEPPER_set_speed+0x2e>
    2364:	90 93 30 03 	sts	0x0330, r25
    2368:	80 93 2f 03 	sts	0x032F, r24
    236c:	08 c0       	rjmp	.+16     	; 0x237e <STEPPER_set_speed+0x3e>
    236e:	90 93 30 03 	sts	0x0330, r25
    2372:	80 93 2f 03 	sts	0x032F, r24
    2376:	90 93 32 03 	sts	0x0332, r25
    237a:	80 93 31 03 	sts	0x0331, r24
    237e:	10 92 63 03 	sts	0x0363, r1
    2382:	08 95       	ret

00002384 <STEPPER_step>:
    2384:	8f 92       	push	r8
    2386:	9f 92       	push	r9
    2388:	af 92       	push	r10
    238a:	bf 92       	push	r11
    238c:	cf 92       	push	r12
    238e:	df 92       	push	r13
    2390:	ef 92       	push	r14
    2392:	ff 92       	push	r15
    2394:	0f 93       	push	r16
    2396:	1f 93       	push	r17
    2398:	cf 93       	push	r28
    239a:	df 93       	push	r29
    239c:	18 2f       	mov	r17, r24
    239e:	f6 2e       	mov	r15, r22
    23a0:	5a 01       	movw	r10, r20
    23a2:	49 01       	movw	r8, r18
    23a4:	e6 01       	movw	r28, r12
    23a6:	61 e0       	ldi	r22, 0x01	; 1
    23a8:	0e 94 8b 11 	call	0x2316	; 0x2316 <STEPPER_set_mode>
    23ac:	81 2f       	mov	r24, r17
    23ae:	b5 01       	movw	r22, r10
    23b0:	a4 01       	movw	r20, r8
    23b2:	0e 94 27 1a 	call	0x344e	; 0x344e <STEPPER_setup_decels>
    23b6:	81 2f       	mov	r24, r17
    23b8:	6f 2d       	mov	r22, r15
    23ba:	0e 94 76 11 	call	0x22ec	; 0x22ec <STEPPER_set_dir>
    23be:	81 2f       	mov	r24, r17
    23c0:	60 2f       	mov	r22, r16
    23c2:	0e 94 12 1a 	call	0x3424	; 0x3424 <STEPPER_set_stop_mode>
    23c6:	81 2f       	mov	r24, r17
    23c8:	b5 01       	movw	r22, r10
    23ca:	0e 94 f7 19 	call	0x33ee	; 0x33ee <STEPPER_set_steps>
    23ce:	c1 14       	cp	r12, r1
    23d0:	d1 04       	cpc	r13, r1
    23d2:	99 f0       	breq	.+38     	; 0x23fa <STEPPER_step+0x76>
    23d4:	11 30       	cpi	r17, 0x01	; 1
    23d6:	49 f0       	breq	.+18     	; 0x23ea <STEPPER_step+0x66>
    23d8:	11 30       	cpi	r17, 0x01	; 1
    23da:	18 f0       	brcs	.+6      	; 0x23e2 <STEPPER_step+0x5e>
    23dc:	12 30       	cpi	r17, 0x02	; 2
    23de:	69 f4       	brne	.+26     	; 0x23fa <STEPPER_step+0x76>
    23e0:	06 c0       	rjmp	.+12     	; 0x23ee <STEPPER_step+0x6a>
    23e2:	18 82       	st	Y, r1
    23e4:	10 92 5f 03 	sts	0x035F, r1
    23e8:	08 c0       	rjmp	.+16     	; 0x23fa <STEPPER_step+0x76>
    23ea:	19 82       	std	Y+1, r1	; 0x01
    23ec:	04 c0       	rjmp	.+8      	; 0x23f6 <STEPPER_step+0x72>
    23ee:	18 82       	st	Y, r1
    23f0:	19 82       	std	Y+1, r1	; 0x01
    23f2:	10 92 5f 03 	sts	0x035F, r1
    23f6:	10 92 60 03 	sts	0x0360, r1
    23fa:	d0 93 62 03 	sts	0x0362, r29
    23fe:	c0 93 61 03 	sts	0x0361, r28
    2402:	ee 20       	and	r14, r14
    2404:	b9 f5       	brne	.+110    	; 0x2474 <STEPPER_step+0xf0>
    2406:	80 e1       	ldi	r24, 0x10	; 16
    2408:	92 e0       	ldi	r25, 0x02	; 2
    240a:	90 93 62 03 	sts	0x0362, r25
    240e:	80 93 61 03 	sts	0x0361, r24
    2412:	81 2f       	mov	r24, r17
    2414:	b4 01       	movw	r22, r8
    2416:	0e 94 a0 11 	call	0x2340	; 0x2340 <STEPPER_set_speed>
    241a:	81 2f       	mov	r24, r17
    241c:	0e 94 d8 19 	call	0x33b0	; 0x33b0 <STEPPER_go>
    2420:	11 30       	cpi	r17, 0x01	; 1
    2422:	71 f0       	breq	.+28     	; 0x2440 <STEPPER_step+0xbc>
    2424:	11 30       	cpi	r17, 0x01	; 1
    2426:	18 f0       	brcs	.+6      	; 0x242e <STEPPER_step+0xaa>
    2428:	12 30       	cpi	r17, 0x02	; 2
    242a:	59 f5       	brne	.+86     	; 0x2482 <STEPPER_step+0xfe>
    242c:	12 c0       	rjmp	.+36     	; 0x2452 <STEPPER_step+0xce>
    242e:	10 92 10 02 	sts	0x0210, r1
    2432:	10 92 5f 03 	sts	0x035F, r1
    2436:	80 91 10 02 	lds	r24, 0x0210
    243a:	88 23       	and	r24, r24
    243c:	e1 f3       	breq	.-8      	; 0x2436 <STEPPER_step+0xb2>
    243e:	21 c0       	rjmp	.+66     	; 0x2482 <STEPPER_step+0xfe>
    2440:	10 92 11 02 	sts	0x0211, r1
    2444:	10 92 60 03 	sts	0x0360, r1
    2448:	80 91 11 02 	lds	r24, 0x0211
    244c:	88 23       	and	r24, r24
    244e:	e1 f3       	breq	.-8      	; 0x2448 <STEPPER_step+0xc4>
    2450:	18 c0       	rjmp	.+48     	; 0x2482 <STEPPER_step+0xfe>
    2452:	10 92 10 02 	sts	0x0210, r1
    2456:	10 92 11 02 	sts	0x0211, r1
    245a:	10 92 5f 03 	sts	0x035F, r1
    245e:	10 92 60 03 	sts	0x0360, r1
    2462:	80 91 10 02 	lds	r24, 0x0210
    2466:	88 23       	and	r24, r24
    2468:	e1 f3       	breq	.-8      	; 0x2462 <STEPPER_step+0xde>
    246a:	80 91 11 02 	lds	r24, 0x0211
    246e:	88 23       	and	r24, r24
    2470:	c1 f3       	breq	.-16     	; 0x2462 <STEPPER_step+0xde>
    2472:	07 c0       	rjmp	.+14     	; 0x2482 <STEPPER_step+0xfe>
    2474:	81 2f       	mov	r24, r17
    2476:	b4 01       	movw	r22, r8
    2478:	0e 94 a0 11 	call	0x2340	; 0x2340 <STEPPER_set_speed>
    247c:	81 2f       	mov	r24, r17
    247e:	0e 94 d8 19 	call	0x33b0	; 0x33b0 <STEPPER_go>
    2482:	df 91       	pop	r29
    2484:	cf 91       	pop	r28
    2486:	1f 91       	pop	r17
    2488:	0f 91       	pop	r16
    248a:	ff 90       	pop	r15
    248c:	ef 90       	pop	r14
    248e:	df 90       	pop	r13
    2490:	cf 90       	pop	r12
    2492:	bf 90       	pop	r11
    2494:	af 90       	pop	r10
    2496:	9f 90       	pop	r9
    2498:	8f 90       	pop	r8
    249a:	08 95       	ret

0000249c <STEPPER_wait_and_then>:
    249c:	cf 92       	push	r12
    249e:	df 92       	push	r13
    24a0:	ef 92       	push	r14
    24a2:	ff 92       	push	r15
    24a4:	0f 93       	push	r16
    24a6:	1f 93       	push	r17
    24a8:	df 93       	push	r29
    24aa:	cf 93       	push	r28
    24ac:	cd b7       	in	r28, 0x3d	; 61
    24ae:	de b7       	in	r29, 0x3e	; 62
    24b0:	8b 85       	ldd	r24, Y+11	; 0x0b
    24b2:	81 30       	cpi	r24, 0x01	; 1
    24b4:	61 f0       	breq	.+24     	; 0x24ce <STEPPER_wait_and_then+0x32>
    24b6:	81 30       	cpi	r24, 0x01	; 1
    24b8:	18 f0       	brcs	.+6      	; 0x24c0 <STEPPER_wait_and_then+0x24>
    24ba:	82 30       	cpi	r24, 0x02	; 2
    24bc:	a1 f5       	brne	.+104    	; 0x2526 <STEPPER_wait_and_then+0x8a>
    24be:	11 c0       	rjmp	.+34     	; 0x24e2 <STEPPER_wait_and_then+0x46>
    24c0:	ec 85       	ldd	r30, Y+12	; 0x0c
    24c2:	fd 85       	ldd	r31, Y+13	; 0x0d
    24c4:	80 91 64 03 	lds	r24, 0x0364
    24c8:	88 23       	and	r24, r24
    24ca:	e1 f3       	breq	.-8      	; 0x24c4 <STEPPER_wait_and_then+0x28>
    24cc:	06 c0       	rjmp	.+12     	; 0x24da <STEPPER_wait_and_then+0x3e>
    24ce:	ec 85       	ldd	r30, Y+12	; 0x0c
    24d0:	fd 85       	ldd	r31, Y+13	; 0x0d
    24d2:	80 91 65 03 	lds	r24, 0x0365
    24d6:	88 23       	and	r24, r24
    24d8:	e1 f3       	breq	.-8      	; 0x24d2 <STEPPER_wait_and_then+0x36>
    24da:	30 97       	sbiw	r30, 0x00	; 0
    24dc:	21 f1       	breq	.+72     	; 0x2526 <STEPPER_wait_and_then+0x8a>
    24de:	09 95       	icall
    24e0:	22 c0       	rjmp	.+68     	; 0x2526 <STEPPER_wait_and_then+0x8a>
    24e2:	cc 84       	ldd	r12, Y+12	; 0x0c
    24e4:	dd 84       	ldd	r13, Y+13	; 0x0d
    24e6:	ee 84       	ldd	r14, Y+14	; 0x0e
    24e8:	ff 84       	ldd	r15, Y+15	; 0x0f
    24ea:	00 e0       	ldi	r16, 0x00	; 0
    24ec:	10 e0       	ldi	r17, 0x00	; 0
    24ee:	00 23       	and	r16, r16
    24f0:	51 f4       	brne	.+20     	; 0x2506 <STEPPER_wait_and_then+0x6a>
    24f2:	80 91 64 03 	lds	r24, 0x0364
    24f6:	88 23       	and	r24, r24
    24f8:	31 f0       	breq	.+12     	; 0x2506 <STEPPER_wait_and_then+0x6a>
    24fa:	c1 14       	cp	r12, r1
    24fc:	d1 04       	cpc	r13, r1
    24fe:	11 f0       	breq	.+4      	; 0x2504 <STEPPER_wait_and_then+0x68>
    2500:	f6 01       	movw	r30, r12
    2502:	09 95       	icall
    2504:	01 e0       	ldi	r16, 0x01	; 1
    2506:	11 23       	and	r17, r17
    2508:	51 f4       	brne	.+20     	; 0x251e <STEPPER_wait_and_then+0x82>
    250a:	80 91 65 03 	lds	r24, 0x0365
    250e:	88 23       	and	r24, r24
    2510:	31 f0       	breq	.+12     	; 0x251e <STEPPER_wait_and_then+0x82>
    2512:	e1 14       	cp	r14, r1
    2514:	f1 04       	cpc	r15, r1
    2516:	11 f0       	breq	.+4      	; 0x251c <STEPPER_wait_and_then+0x80>
    2518:	f7 01       	movw	r30, r14
    251a:	09 95       	icall
    251c:	11 e0       	ldi	r17, 0x01	; 1
    251e:	00 23       	and	r16, r16
    2520:	31 f3       	breq	.-52     	; 0x24ee <STEPPER_wait_and_then+0x52>
    2522:	11 23       	and	r17, r17
    2524:	21 f3       	breq	.-56     	; 0x24ee <STEPPER_wait_and_then+0x52>
    2526:	cf 91       	pop	r28
    2528:	df 91       	pop	r29
    252a:	1f 91       	pop	r17
    252c:	0f 91       	pop	r16
    252e:	ff 90       	pop	r15
    2530:	ef 90       	pop	r14
    2532:	df 90       	pop	r13
    2534:	cf 90       	pop	r12
    2536:	08 95       	ret

00002538 <SYS_get_state>:
    2538:	e8 2f       	mov	r30, r24
    253a:	f0 e0       	ldi	r31, 0x00	; 0
    253c:	e3 31       	cpi	r30, 0x13	; 19
    253e:	f1 05       	cpc	r31, r1
    2540:	40 f4       	brcc	.+16     	; 0x2552 <SYS_get_state+0x1a>
    2542:	e2 5c       	subi	r30, 0xC2	; 194
    2544:	ff 4f       	sbci	r31, 0xFF	; 255
    2546:	ee 0f       	add	r30, r30
    2548:	ff 1f       	adc	r31, r31
    254a:	05 90       	lpm	r0, Z+
    254c:	f4 91       	lpm	r31, Z+
    254e:	e0 2d       	mov	r30, r0
    2550:	09 94       	ijmp
    2552:	80 e0       	ldi	r24, 0x00	; 0
    2554:	08 95       	ret
    2556:	80 91 66 03 	lds	r24, 0x0366
    255a:	08 95       	ret
    255c:	80 91 67 03 	lds	r24, 0x0367
    2560:	08 95       	ret
    2562:	80 91 68 03 	lds	r24, 0x0368
    2566:	08 95       	ret
    2568:	80 91 69 03 	lds	r24, 0x0369
    256c:	08 95       	ret
    256e:	80 91 6a 03 	lds	r24, 0x036A
    2572:	08 95       	ret
    2574:	80 91 6c 03 	lds	r24, 0x036C
    2578:	08 95       	ret
    257a:	80 91 6b 03 	lds	r24, 0x036B
    257e:	08 95       	ret
    2580:	80 91 6d 03 	lds	r24, 0x036D
    2584:	08 95       	ret
    2586:	80 91 6e 03 	lds	r24, 0x036E
    258a:	08 95       	ret
    258c:	80 91 6f 03 	lds	r24, 0x036F
    2590:	08 95       	ret
    2592:	80 91 70 03 	lds	r24, 0x0370
    2596:	08 95       	ret
    2598:	80 91 71 03 	lds	r24, 0x0371
    259c:	08 95       	ret
    259e:	80 91 72 03 	lds	r24, 0x0372
    25a2:	08 95       	ret
    25a4:	80 91 73 03 	lds	r24, 0x0373
    25a8:	08 95       	ret
    25aa:	80 91 74 03 	lds	r24, 0x0374
    25ae:	08 95       	ret
    25b0:	80 91 75 03 	lds	r24, 0x0375
    25b4:	08 95       	ret
    25b6:	80 91 76 03 	lds	r24, 0x0376
    25ba:	08 95       	ret
    25bc:	80 91 77 03 	lds	r24, 0x0377
    25c0:	08 95       	ret
    25c2:	80 91 78 03 	lds	r24, 0x0378
    25c6:	08 95       	ret

000025c8 <SYS_set_state>:
    25c8:	e8 2f       	mov	r30, r24
    25ca:	f0 e0       	ldi	r31, 0x00	; 0
    25cc:	e3 31       	cpi	r30, 0x13	; 19
    25ce:	f1 05       	cpc	r31, r1
    25d0:	08 f0       	brcs	.+2      	; 0x25d4 <SYS_set_state+0xc>
    25d2:	40 c0       	rjmp	.+128    	; 0x2654 <SYS_set_state+0x8c>
    25d4:	ef 5a       	subi	r30, 0xAF	; 175
    25d6:	ff 4f       	sbci	r31, 0xFF	; 255
    25d8:	ee 0f       	add	r30, r30
    25da:	ff 1f       	adc	r31, r31
    25dc:	05 90       	lpm	r0, Z+
    25de:	f4 91       	lpm	r31, Z+
    25e0:	e0 2d       	mov	r30, r0
    25e2:	09 94       	ijmp
    25e4:	60 93 66 03 	sts	0x0366, r22
    25e8:	08 95       	ret
    25ea:	60 93 67 03 	sts	0x0367, r22
    25ee:	08 95       	ret
    25f0:	60 93 68 03 	sts	0x0368, r22
    25f4:	08 95       	ret
    25f6:	60 93 69 03 	sts	0x0369, r22
    25fa:	08 95       	ret
    25fc:	60 93 6a 03 	sts	0x036A, r22
    2600:	08 95       	ret
    2602:	60 93 6c 03 	sts	0x036C, r22
    2606:	08 95       	ret
    2608:	60 93 6b 03 	sts	0x036B, r22
    260c:	08 95       	ret
    260e:	60 93 6d 03 	sts	0x036D, r22
    2612:	08 95       	ret
    2614:	60 93 6e 03 	sts	0x036E, r22
    2618:	08 95       	ret
    261a:	60 93 6f 03 	sts	0x036F, r22
    261e:	08 95       	ret
    2620:	60 93 70 03 	sts	0x0370, r22
    2624:	08 95       	ret
    2626:	60 93 71 03 	sts	0x0371, r22
    262a:	08 95       	ret
    262c:	60 93 72 03 	sts	0x0372, r22
    2630:	08 95       	ret
    2632:	60 93 73 03 	sts	0x0373, r22
    2636:	08 95       	ret
    2638:	60 93 74 03 	sts	0x0374, r22
    263c:	08 95       	ret
    263e:	60 93 75 03 	sts	0x0375, r22
    2642:	08 95       	ret
    2644:	60 93 76 03 	sts	0x0376, r22
    2648:	08 95       	ret
    264a:	60 93 77 03 	sts	0x0377, r22
    264e:	08 95       	ret
    2650:	60 93 76 03 	sts	0x0376, r22
    2654:	08 95       	ret

00002656 <ATTINY_get_SW_state>:
    2656:	1f 93       	push	r17
    2658:	cf 93       	push	r28
    265a:	df 93       	push	r29
    265c:	18 2f       	mov	r17, r24
    265e:	80 91 13 02 	lds	r24, 0x0213
    2662:	88 23       	and	r24, r24
    2664:	41 f0       	breq	.+16     	; 0x2676 <ATTINY_get_SW_state+0x20>
    2666:	80 91 1d 02 	lds	r24, 0x021D
    266a:	88 23       	and	r24, r24
    266c:	99 f0       	breq	.+38     	; 0x2694 <ATTINY_get_SW_state+0x3e>
    266e:	10 92 13 02 	sts	0x0213, r1
    2672:	10 92 1d 02 	sts	0x021D, r1
    2676:	0e 94 87 1a 	call	0x350e	; 0x350e <ATTINY_get_sensors>
    267a:	80 93 12 02 	sts	0x0212, r24
    267e:	87 e1       	ldi	r24, 0x17	; 23
    2680:	92 e0       	ldi	r25, 0x02	; 2
    2682:	61 e0       	ldi	r22, 0x01	; 1
    2684:	40 e0       	ldi	r20, 0x00	; 0
    2686:	22 e3       	ldi	r18, 0x32	; 50
    2688:	30 e0       	ldi	r19, 0x00	; 0
    268a:	0e 94 e9 13 	call	0x27d2	; 0x27d2 <TMRSRVC_new>
    268e:	81 e0       	ldi	r24, 0x01	; 1
    2690:	80 93 13 02 	sts	0x0213, r24
    2694:	90 91 12 02 	lds	r25, 0x0212
    2698:	a1 2f       	mov	r26, r17
    269a:	b0 e0       	ldi	r27, 0x00	; 0
    269c:	ed 01       	movw	r28, r26
    269e:	cf 55       	subi	r28, 0x5F	; 95
    26a0:	de 4f       	sbci	r29, 0xFE	; 254
    26a2:	88 81       	ld	r24, Y
    26a4:	88 23       	and	r24, r24
    26a6:	69 f0       	breq	.+26     	; 0x26c2 <ATTINY_get_SW_state+0x6c>
    26a8:	fd 01       	movw	r30, r26
    26aa:	ec 55       	subi	r30, 0x5C	; 92
    26ac:	fe 4f       	sbci	r31, 0xFE	; 254
    26ae:	80 81       	ld	r24, Z
    26b0:	98 23       	and	r25, r24
    26b2:	c1 f0       	breq	.+48     	; 0x26e4 <ATTINY_get_SW_state+0x8e>
    26b4:	fd 01       	movw	r30, r26
    26b6:	ec 5e       	subi	r30, 0xEC	; 236
    26b8:	fd 4f       	sbci	r31, 0xFD	; 253
    26ba:	81 e0       	ldi	r24, 0x01	; 1
    26bc:	80 83       	st	Z, r24
    26be:	18 82       	st	Y, r1
    26c0:	11 c0       	rjmp	.+34     	; 0x26e4 <ATTINY_get_SW_state+0x8e>
    26c2:	fd 01       	movw	r30, r26
    26c4:	ec 5e       	subi	r30, 0xEC	; 236
    26c6:	fd 4f       	sbci	r31, 0xFD	; 253
    26c8:	80 81       	ld	r24, Z
    26ca:	81 11       	cpse	r24, r1
    26cc:	10 82       	st	Z, r1
    26ce:	fd 01       	movw	r30, r26
    26d0:	ec 55       	subi	r30, 0x5C	; 92
    26d2:	fe 4f       	sbci	r31, 0xFE	; 254
    26d4:	80 81       	ld	r24, Z
    26d6:	98 23       	and	r25, r24
    26d8:	29 f4       	brne	.+10     	; 0x26e4 <ATTINY_get_SW_state+0x8e>
    26da:	fd 01       	movw	r30, r26
    26dc:	ef 55       	subi	r30, 0x5F	; 95
    26de:	fe 4f       	sbci	r31, 0xFE	; 254
    26e0:	81 e0       	ldi	r24, 0x01	; 1
    26e2:	80 83       	st	Z, r24
    26e4:	ac 5e       	subi	r26, 0xEC	; 236
    26e6:	bd 4f       	sbci	r27, 0xFD	; 253
    26e8:	8c 91       	ld	r24, X
    26ea:	df 91       	pop	r29
    26ec:	cf 91       	pop	r28
    26ee:	1f 91       	pop	r17
    26f0:	08 95       	ret

000026f2 <ATTINY_open>:
    26f2:	82 e0       	ldi	r24, 0x02	; 2
    26f4:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    26f8:	88 23       	and	r24, r24
    26fa:	19 f4       	brne	.+6      	; 0x2702 <ATTINY_open+0x10>
    26fc:	90 e0       	ldi	r25, 0x00	; 0
    26fe:	82 e0       	ldi	r24, 0x02	; 2
    2700:	08 95       	ret
    2702:	10 92 94 03 	sts	0x0394, r1
    2706:	10 92 93 03 	sts	0x0393, r1
    270a:	10 92 96 03 	sts	0x0396, r1
    270e:	10 92 95 03 	sts	0x0395, r1
    2712:	10 92 98 03 	sts	0x0398, r1
    2716:	10 92 97 03 	sts	0x0397, r1
    271a:	10 92 9a 03 	sts	0x039A, r1
    271e:	10 92 99 03 	sts	0x0399, r1
    2722:	10 92 9c 03 	sts	0x039C, r1
    2726:	10 92 9b 03 	sts	0x039B, r1
    272a:	80 e9       	ldi	r24, 0x90	; 144
    272c:	91 e0       	ldi	r25, 0x01	; 1
    272e:	90 93 80 03 	sts	0x0380, r25
    2732:	80 93 7f 03 	sts	0x037F, r24
    2736:	90 93 82 03 	sts	0x0382, r25
    273a:	80 93 81 03 	sts	0x0381, r24
    273e:	90 93 84 03 	sts	0x0384, r25
    2742:	80 93 83 03 	sts	0x0383, r24
    2746:	90 93 86 03 	sts	0x0386, r25
    274a:	80 93 85 03 	sts	0x0385, r24
    274e:	90 93 88 03 	sts	0x0388, r25
    2752:	80 93 87 03 	sts	0x0387, r24
    2756:	84 e3       	ldi	r24, 0x34	; 52
    2758:	98 e0       	ldi	r25, 0x08	; 8
    275a:	90 93 8a 03 	sts	0x038A, r25
    275e:	80 93 89 03 	sts	0x0389, r24
    2762:	90 93 8c 03 	sts	0x038C, r25
    2766:	80 93 8b 03 	sts	0x038B, r24
    276a:	90 93 8e 03 	sts	0x038E, r25
    276e:	80 93 8d 03 	sts	0x038D, r24
    2772:	90 93 90 03 	sts	0x0390, r25
    2776:	80 93 8f 03 	sts	0x038F, r24
    277a:	90 93 92 03 	sts	0x0392, r25
    277e:	80 93 91 03 	sts	0x0391, r24
    2782:	81 e0       	ldi	r24, 0x01	; 1
    2784:	61 e0       	ldi	r22, 0x01	; 1
    2786:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    278a:	91 e0       	ldi	r25, 0x01	; 1
    278c:	81 e0       	ldi	r24, 0x01	; 1
    278e:	08 95       	ret

00002790 <TMRSRVC_delay>:
    2790:	df 93       	push	r29
    2792:	cf 93       	push	r28
    2794:	cd b7       	in	r28, 0x3d	; 61
    2796:	de b7       	in	r29, 0x3e	; 62
    2798:	29 97       	sbiw	r28, 0x09	; 9
    279a:	0f b6       	in	r0, 0x3f	; 63
    279c:	f8 94       	cli
    279e:	de bf       	out	0x3e, r29	; 62
    27a0:	0f be       	out	0x3f, r0	; 63
    27a2:	cd bf       	out	0x3d, r28	; 61
    27a4:	9c 01       	movw	r18, r24
    27a6:	ce 01       	movw	r24, r28
    27a8:	01 96       	adiw	r24, 0x01	; 1
    27aa:	61 e0       	ldi	r22, 0x01	; 1
    27ac:	40 e0       	ldi	r20, 0x00	; 0
    27ae:	0e 94 e9 13 	call	0x27d2	; 0x27d2 <TMRSRVC_new>
    27b2:	98 2f       	mov	r25, r24
    27b4:	88 23       	and	r24, r24
    27b6:	19 f4       	brne	.+6      	; 0x27be <TMRSRVC_delay+0x2e>
    27b8:	8f 81       	ldd	r24, Y+7	; 0x07
    27ba:	88 23       	and	r24, r24
    27bc:	e9 f3       	breq	.-6      	; 0x27b8 <TMRSRVC_delay+0x28>
    27be:	89 2f       	mov	r24, r25
    27c0:	29 96       	adiw	r28, 0x09	; 9
    27c2:	0f b6       	in	r0, 0x3f	; 63
    27c4:	f8 94       	cli
    27c6:	de bf       	out	0x3e, r29	; 62
    27c8:	0f be       	out	0x3f, r0	; 63
    27ca:	cd bf       	out	0x3d, r28	; 61
    27cc:	cf 91       	pop	r28
    27ce:	df 91       	pop	r29
    27d0:	08 95       	ret

000027d2 <TMRSRVC_new>:
    27d2:	ef 92       	push	r14
    27d4:	ff 92       	push	r15
    27d6:	0f 93       	push	r16
    27d8:	1f 93       	push	r17
    27da:	cf 93       	push	r28
    27dc:	df 93       	push	r29
    27de:	ec 01       	movw	r28, r24
    27e0:	f6 2e       	mov	r15, r22
    27e2:	e4 2e       	mov	r14, r20
    27e4:	89 01       	movw	r16, r18
    27e6:	88 e0       	ldi	r24, 0x08	; 8
    27e8:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    27ec:	81 30       	cpi	r24, 0x01	; 1
    27ee:	11 f0       	breq	.+4      	; 0x27f4 <TMRSRVC_new+0x22>
    27f0:	81 e0       	ldi	r24, 0x01	; 1
    27f2:	26 c0       	rjmp	.+76     	; 0x2840 <TMRSRVC_new+0x6e>
    27f4:	84 e0       	ldi	r24, 0x04	; 4
    27f6:	90 e0       	ldi	r25, 0x00	; 0
    27f8:	0e 94 d6 27 	call	0x4fac	; 0x4fac <malloc>
    27fc:	fc 01       	movw	r30, r24
    27fe:	00 97       	sbiw	r24, 0x00	; 0
    2800:	11 f4       	brne	.+4      	; 0x2806 <TMRSRVC_new+0x34>
    2802:	82 e0       	ldi	r24, 0x02	; 2
    2804:	1d c0       	rjmp	.+58     	; 0x2840 <TMRSRVC_new+0x6e>
    2806:	f9 82       	std	Y+1, r15	; 0x01
    2808:	f0 fc       	sbrc	r15, 0
    280a:	1e 82       	std	Y+6, r1	; 0x06
    280c:	81 e0       	ldi	r24, 0x01	; 1
    280e:	e8 16       	cp	r14, r24
    2810:	19 f4       	brne	.+6      	; 0x2818 <TMRSRVC_new+0x46>
    2812:	89 81       	ldd	r24, Y+1	; 0x01
    2814:	84 60       	ori	r24, 0x04	; 4
    2816:	89 83       	std	Y+1, r24	; 0x01
    2818:	89 81       	ldd	r24, Y+1	; 0x01
    281a:	88 60       	ori	r24, 0x08	; 8
    281c:	89 83       	std	Y+1, r24	; 0x01
    281e:	1b 83       	std	Y+3, r17	; 0x03
    2820:	0a 83       	std	Y+2, r16	; 0x02
    2822:	1d 83       	std	Y+5, r17	; 0x05
    2824:	0c 83       	std	Y+4, r16	; 0x04
    2826:	d1 83       	std	Z+1, r29	; 0x01
    2828:	c0 83       	st	Z, r28
    282a:	13 82       	std	Z+3, r1	; 0x03
    282c:	12 82       	std	Z+2, r1	; 0x02
    282e:	81 e0       	ldi	r24, 0x01	; 1
    2830:	80 93 80 02 	sts	0x0280, r24
    2834:	cf 01       	movw	r24, r30
    2836:	0e 94 b8 1a 	call	0x3570	; 0x3570 <TMRSRVC_insert>
    283a:	10 92 80 02 	sts	0x0280, r1
    283e:	80 e0       	ldi	r24, 0x00	; 0
    2840:	df 91       	pop	r29
    2842:	cf 91       	pop	r28
    2844:	1f 91       	pop	r17
    2846:	0f 91       	pop	r16
    2848:	ff 90       	pop	r15
    284a:	ef 90       	pop	r14
    284c:	08 95       	ret

0000284e <I2C_MSTR_get>:
    284e:	fc 01       	movw	r30, r24
    2850:	80 91 a0 03 	lds	r24, 0x03A0
    2854:	81 30       	cpi	r24, 0x01	; 1
    2856:	11 f0       	breq	.+4      	; 0x285c <I2C_MSTR_get+0xe>
    2858:	85 e0       	ldi	r24, 0x05	; 5
    285a:	08 95       	ret
    285c:	80 91 a1 03 	lds	r24, 0x03A1
    2860:	81 30       	cpi	r24, 0x01	; 1
    2862:	11 f0       	breq	.+4      	; 0x2868 <I2C_MSTR_get+0x1a>
    2864:	8a e0       	ldi	r24, 0x0A	; 10
    2866:	08 95       	ret
    2868:	61 30       	cpi	r22, 0x01	; 1
    286a:	11 f4       	brne	.+4      	; 0x2870 <I2C_MSTR_get+0x22>
    286c:	84 ec       	ldi	r24, 0xC4	; 196
    286e:	01 c0       	rjmp	.+2      	; 0x2872 <I2C_MSTR_get+0x24>
    2870:	84 e8       	ldi	r24, 0x84	; 132
    2872:	80 93 bc 00 	sts	0x00BC, r24
    2876:	80 91 bc 00 	lds	r24, 0x00BC
    287a:	87 ff       	sbrs	r24, 7
    287c:	fc cf       	rjmp	.-8      	; 0x2876 <I2C_MSTR_get+0x28>
    287e:	61 30       	cpi	r22, 0x01	; 1
    2880:	31 f4       	brne	.+12     	; 0x288e <I2C_MSTR_get+0x40>
    2882:	80 91 b9 00 	lds	r24, 0x00B9
    2886:	88 7f       	andi	r24, 0xF8	; 248
    2888:	80 35       	cpi	r24, 0x50	; 80
    288a:	59 f4       	brne	.+22     	; 0x28a2 <I2C_MSTR_get+0x54>
    288c:	05 c0       	rjmp	.+10     	; 0x2898 <I2C_MSTR_get+0x4a>
    288e:	80 91 b9 00 	lds	r24, 0x00B9
    2892:	88 7f       	andi	r24, 0xF8	; 248
    2894:	88 35       	cpi	r24, 0x58	; 88
    2896:	29 f4       	brne	.+10     	; 0x28a2 <I2C_MSTR_get+0x54>
    2898:	80 91 bb 00 	lds	r24, 0x00BB
    289c:	80 83       	st	Z, r24
    289e:	80 e0       	ldi	r24, 0x00	; 0
    28a0:	08 95       	ret
    28a2:	82 e0       	ldi	r24, 0x02	; 2
    28a4:	08 95       	ret

000028a6 <I2C_MSTR_send>:
    28a6:	98 2f       	mov	r25, r24
    28a8:	80 91 a0 03 	lds	r24, 0x03A0
    28ac:	81 30       	cpi	r24, 0x01	; 1
    28ae:	11 f0       	breq	.+4      	; 0x28b4 <I2C_MSTR_send+0xe>
    28b0:	85 e0       	ldi	r24, 0x05	; 5
    28b2:	08 95       	ret
    28b4:	80 91 a1 03 	lds	r24, 0x03A1
    28b8:	81 30       	cpi	r24, 0x01	; 1
    28ba:	11 f0       	breq	.+4      	; 0x28c0 <I2C_MSTR_send+0x1a>
    28bc:	8a e0       	ldi	r24, 0x0A	; 10
    28be:	08 95       	ret
    28c0:	90 93 bb 00 	sts	0x00BB, r25
    28c4:	84 e8       	ldi	r24, 0x84	; 132
    28c6:	80 93 bc 00 	sts	0x00BC, r24
    28ca:	80 91 bc 00 	lds	r24, 0x00BC
    28ce:	87 ff       	sbrs	r24, 7
    28d0:	fc cf       	rjmp	.-8      	; 0x28ca <I2C_MSTR_send+0x24>
    28d2:	80 91 b9 00 	lds	r24, 0x00B9
    28d6:	90 e0       	ldi	r25, 0x00	; 0
    28d8:	88 7f       	andi	r24, 0xF8	; 248
    28da:	90 70       	andi	r25, 0x00	; 0
    28dc:	88 32       	cpi	r24, 0x28	; 40
    28de:	91 05       	cpc	r25, r1
    28e0:	21 f0       	breq	.+8      	; 0x28ea <I2C_MSTR_send+0x44>
    28e2:	c0 97       	sbiw	r24, 0x30	; 48
    28e4:	21 f4       	brne	.+8      	; 0x28ee <I2C_MSTR_send+0x48>
    28e6:	83 e0       	ldi	r24, 0x03	; 3
    28e8:	08 95       	ret
    28ea:	80 e0       	ldi	r24, 0x00	; 0
    28ec:	08 95       	ret
    28ee:	8c e0       	ldi	r24, 0x0C	; 12
    28f0:	08 95       	ret

000028f2 <I2C_MSTR_start>:
    28f2:	98 2f       	mov	r25, r24
    28f4:	20 91 a0 03 	lds	r18, 0x03A0
    28f8:	21 30       	cpi	r18, 0x01	; 1
    28fa:	11 f0       	breq	.+4      	; 0x2900 <I2C_MSTR_start+0xe>
    28fc:	85 e0       	ldi	r24, 0x05	; 5
    28fe:	08 95       	ret
    2900:	80 91 a2 03 	lds	r24, 0x03A2
    2904:	81 30       	cpi	r24, 0x01	; 1
    2906:	11 f4       	brne	.+4      	; 0x290c <I2C_MSTR_start+0x1a>
    2908:	89 e0       	ldi	r24, 0x09	; 9
    290a:	08 95       	ret
    290c:	20 93 a1 03 	sts	0x03A1, r18
    2910:	84 ea       	ldi	r24, 0xA4	; 164
    2912:	80 93 bc 00 	sts	0x00BC, r24
    2916:	80 91 bc 00 	lds	r24, 0x00BC
    291a:	87 ff       	sbrs	r24, 7
    291c:	fc cf       	rjmp	.-8      	; 0x2916 <I2C_MSTR_start+0x24>
    291e:	80 91 b9 00 	lds	r24, 0x00B9
    2922:	88 7f       	andi	r24, 0xF8	; 248
    2924:	88 30       	cpi	r24, 0x08	; 8
    2926:	39 f0       	breq	.+14     	; 0x2936 <I2C_MSTR_start+0x44>
    2928:	80 91 b9 00 	lds	r24, 0x00B9
    292c:	88 7f       	andi	r24, 0xF8	; 248
    292e:	80 31       	cpi	r24, 0x10	; 16
    2930:	11 f0       	breq	.+4      	; 0x2936 <I2C_MSTR_start+0x44>
    2932:	81 e0       	ldi	r24, 0x01	; 1
    2934:	08 95       	ret
    2936:	61 30       	cpi	r22, 0x01	; 1
    2938:	19 f4       	brne	.+6      	; 0x2940 <I2C_MSTR_start+0x4e>
    293a:	99 0f       	add	r25, r25
    293c:	91 60       	ori	r25, 0x01	; 1
    293e:	03 c0       	rjmp	.+6      	; 0x2946 <I2C_MSTR_start+0x54>
    2940:	66 23       	and	r22, r22
    2942:	19 f4       	brne	.+6      	; 0x294a <I2C_MSTR_start+0x58>
    2944:	99 0f       	add	r25, r25
    2946:	90 93 bb 00 	sts	0x00BB, r25
    294a:	84 e8       	ldi	r24, 0x84	; 132
    294c:	80 93 bc 00 	sts	0x00BC, r24
    2950:	80 91 bc 00 	lds	r24, 0x00BC
    2954:	87 ff       	sbrs	r24, 7
    2956:	fc cf       	rjmp	.-8      	; 0x2950 <I2C_MSTR_start+0x5e>
    2958:	61 30       	cpi	r22, 0x01	; 1
    295a:	31 f4       	brne	.+12     	; 0x2968 <I2C_MSTR_start+0x76>
    295c:	80 91 b9 00 	lds	r24, 0x00B9
    2960:	88 7f       	andi	r24, 0xF8	; 248
    2962:	80 34       	cpi	r24, 0x40	; 64
    2964:	41 f4       	brne	.+16     	; 0x2976 <I2C_MSTR_start+0x84>
    2966:	09 c0       	rjmp	.+18     	; 0x297a <I2C_MSTR_start+0x88>
    2968:	66 23       	and	r22, r22
    296a:	39 f4       	brne	.+14     	; 0x297a <I2C_MSTR_start+0x88>
    296c:	80 91 b9 00 	lds	r24, 0x00B9
    2970:	88 7f       	andi	r24, 0xF8	; 248
    2972:	88 31       	cpi	r24, 0x18	; 24
    2974:	11 f0       	breq	.+4      	; 0x297a <I2C_MSTR_start+0x88>
    2976:	82 e0       	ldi	r24, 0x02	; 2
    2978:	08 95       	ret
    297a:	80 e0       	ldi	r24, 0x00	; 0
    297c:	08 95       	ret

0000297e <I2C_MSTR_stop>:
    297e:	80 91 a1 03 	lds	r24, 0x03A1
    2982:	81 30       	cpi	r24, 0x01	; 1
    2984:	11 f0       	breq	.+4      	; 0x298a <I2C_MSTR_stop+0xc>
    2986:	8a e0       	ldi	r24, 0x0A	; 10
    2988:	08 95       	ret
    298a:	80 91 a3 03 	lds	r24, 0x03A3
    298e:	81 30       	cpi	r24, 0x01	; 1
    2990:	29 f4       	brne	.+10     	; 0x299c <I2C_MSTR_stop+0x1e>
    2992:	85 e9       	ldi	r24, 0x95	; 149
    2994:	80 93 bc 00 	sts	0x00BC, r24
    2998:	80 e0       	ldi	r24, 0x00	; 0
    299a:	08 95       	ret
    299c:	84 e9       	ldi	r24, 0x94	; 148
    299e:	80 93 bc 00 	sts	0x00BC, r24
    29a2:	80 e0       	ldi	r24, 0x00	; 0
    29a4:	08 95       	ret

000029a6 <I2C_open>:
    29a6:	82 e1       	ldi	r24, 0x12	; 18
    29a8:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    29ac:	88 23       	and	r24, r24
    29ae:	b1 f4       	brne	.+44     	; 0x29dc <I2C_open+0x36>
    29b0:	10 92 a0 03 	sts	0x03A0, r1
    29b4:	10 92 a1 03 	sts	0x03A1, r1
    29b8:	10 92 a2 03 	sts	0x03A2, r1
    29bc:	10 92 a3 03 	sts	0x03A3, r1
    29c0:	10 92 a4 03 	sts	0x03A4, r1
    29c4:	0e 94 54 1b 	call	0x36a8	; 0x36a8 <__I2C_init>
    29c8:	87 e1       	ldi	r24, 0x17	; 23
    29ca:	60 e0       	ldi	r22, 0x00	; 0
    29cc:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <I2C_set_BRG>
    29d0:	0e 94 4a 1b 	call	0x3694	; 0x3694 <I2C_enable>
    29d4:	82 e1       	ldi	r24, 0x12	; 18
    29d6:	61 e0       	ldi	r22, 0x01	; 1
    29d8:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    29dc:	82 e1       	ldi	r24, 0x12	; 18
    29de:	90 e0       	ldi	r25, 0x00	; 0
    29e0:	08 95       	ret

000029e2 <I2C_set_BRG>:
    29e2:	63 70       	andi	r22, 0x03	; 3
    29e4:	60 93 b9 00 	sts	0x00B9, r22
    29e8:	80 93 b8 00 	sts	0x00B8, r24
    29ec:	81 e0       	ldi	r24, 0x01	; 1
    29ee:	80 93 a0 03 	sts	0x03A0, r24
    29f2:	08 95       	ret

000029f4 <__ADC_init>:
    29f4:	8f e1       	ldi	r24, 0x1F	; 31
    29f6:	80 93 7c 00 	sts	0x007C, r24
    29fa:	ea e7       	ldi	r30, 0x7A	; 122
    29fc:	f0 e0       	ldi	r31, 0x00	; 0
    29fe:	87 e0       	ldi	r24, 0x07	; 7
    2a00:	80 83       	st	Z, r24
    2a02:	80 81       	ld	r24, Z
    2a04:	80 68       	ori	r24, 0x80	; 128
    2a06:	80 83       	st	Z, r24
    2a08:	08 95       	ret

00002a0a <CBOT_init>:
    2a0a:	0e 94 64 1a 	call	0x34c8	; 0x34c8 <SYS_init>
    2a0e:	0e 94 37 18 	call	0x306e	; 0x306e <ATMEGA_open>
    2a12:	0e 94 67 17 	call	0x2ece	; 0x2ece <ISR_open>
    2a16:	0e 94 21 1b 	call	0x3642	; 0x3642 <TMRSRVC_open>
    2a1a:	0e 94 9c 18 	call	0x3138	; 0x3138 <SPI_open>
    2a1e:	0e 94 79 13 	call	0x26f2	; 0x26f2 <ATTINY_open>
    2a22:	78 94       	sei
    2a24:	08 95       	ret

00002a26 <CBOT_ISR_init>:
    2a26:	00 00       	nop
    2a28:	08 95       	ret

00002a2a <__vector_16>:
    2a2a:	1f 92       	push	r1
    2a2c:	0f 92       	push	r0
    2a2e:	0f b6       	in	r0, 0x3f	; 63
    2a30:	0f 92       	push	r0
    2a32:	11 24       	eor	r1, r1
    2a34:	2f 93       	push	r18
    2a36:	3f 93       	push	r19
    2a38:	4f 93       	push	r20
    2a3a:	5f 93       	push	r21
    2a3c:	6f 93       	push	r22
    2a3e:	7f 93       	push	r23
    2a40:	8f 93       	push	r24
    2a42:	9f 93       	push	r25
    2a44:	af 93       	push	r26
    2a46:	bf 93       	push	r27
    2a48:	ef 93       	push	r30
    2a4a:	ff 93       	push	r31
    2a4c:	e0 91 40 02 	lds	r30, 0x0240
    2a50:	f0 91 41 02 	lds	r31, 0x0241
    2a54:	30 97       	sbiw	r30, 0x00	; 0
    2a56:	09 f0       	breq	.+2      	; 0x2a5a <__vector_16+0x30>
    2a58:	09 95       	icall
    2a5a:	ff 91       	pop	r31
    2a5c:	ef 91       	pop	r30
    2a5e:	bf 91       	pop	r27
    2a60:	af 91       	pop	r26
    2a62:	9f 91       	pop	r25
    2a64:	8f 91       	pop	r24
    2a66:	7f 91       	pop	r23
    2a68:	6f 91       	pop	r22
    2a6a:	5f 91       	pop	r21
    2a6c:	4f 91       	pop	r20
    2a6e:	3f 91       	pop	r19
    2a70:	2f 91       	pop	r18
    2a72:	0f 90       	pop	r0
    2a74:	0f be       	out	0x3f, r0	; 63
    2a76:	0f 90       	pop	r0
    2a78:	1f 90       	pop	r1
    2a7a:	18 95       	reti

00002a7c <__vector_17>:
    2a7c:	1f 92       	push	r1
    2a7e:	0f 92       	push	r0
    2a80:	0f b6       	in	r0, 0x3f	; 63
    2a82:	0f 92       	push	r0
    2a84:	11 24       	eor	r1, r1
    2a86:	2f 93       	push	r18
    2a88:	3f 93       	push	r19
    2a8a:	4f 93       	push	r20
    2a8c:	5f 93       	push	r21
    2a8e:	6f 93       	push	r22
    2a90:	7f 93       	push	r23
    2a92:	8f 93       	push	r24
    2a94:	9f 93       	push	r25
    2a96:	af 93       	push	r26
    2a98:	bf 93       	push	r27
    2a9a:	ef 93       	push	r30
    2a9c:	ff 93       	push	r31
    2a9e:	e0 91 42 02 	lds	r30, 0x0242
    2aa2:	f0 91 43 02 	lds	r31, 0x0243
    2aa6:	30 97       	sbiw	r30, 0x00	; 0
    2aa8:	09 f0       	breq	.+2      	; 0x2aac <__vector_17+0x30>
    2aaa:	09 95       	icall
    2aac:	ff 91       	pop	r31
    2aae:	ef 91       	pop	r30
    2ab0:	bf 91       	pop	r27
    2ab2:	af 91       	pop	r26
    2ab4:	9f 91       	pop	r25
    2ab6:	8f 91       	pop	r24
    2ab8:	7f 91       	pop	r23
    2aba:	6f 91       	pop	r22
    2abc:	5f 91       	pop	r21
    2abe:	4f 91       	pop	r20
    2ac0:	3f 91       	pop	r19
    2ac2:	2f 91       	pop	r18
    2ac4:	0f 90       	pop	r0
    2ac6:	0f be       	out	0x3f, r0	; 63
    2ac8:	0f 90       	pop	r0
    2aca:	1f 90       	pop	r1
    2acc:	18 95       	reti

00002ace <__vector_18>:
    2ace:	1f 92       	push	r1
    2ad0:	0f 92       	push	r0
    2ad2:	0f b6       	in	r0, 0x3f	; 63
    2ad4:	0f 92       	push	r0
    2ad6:	11 24       	eor	r1, r1
    2ad8:	2f 93       	push	r18
    2ada:	3f 93       	push	r19
    2adc:	4f 93       	push	r20
    2ade:	5f 93       	push	r21
    2ae0:	6f 93       	push	r22
    2ae2:	7f 93       	push	r23
    2ae4:	8f 93       	push	r24
    2ae6:	9f 93       	push	r25
    2ae8:	af 93       	push	r26
    2aea:	bf 93       	push	r27
    2aec:	ef 93       	push	r30
    2aee:	ff 93       	push	r31
    2af0:	e0 91 44 02 	lds	r30, 0x0244
    2af4:	f0 91 45 02 	lds	r31, 0x0245
    2af8:	30 97       	sbiw	r30, 0x00	; 0
    2afa:	09 f0       	breq	.+2      	; 0x2afe <__vector_18+0x30>
    2afc:	09 95       	icall
    2afe:	ff 91       	pop	r31
    2b00:	ef 91       	pop	r30
    2b02:	bf 91       	pop	r27
    2b04:	af 91       	pop	r26
    2b06:	9f 91       	pop	r25
    2b08:	8f 91       	pop	r24
    2b0a:	7f 91       	pop	r23
    2b0c:	6f 91       	pop	r22
    2b0e:	5f 91       	pop	r21
    2b10:	4f 91       	pop	r20
    2b12:	3f 91       	pop	r19
    2b14:	2f 91       	pop	r18
    2b16:	0f 90       	pop	r0
    2b18:	0f be       	out	0x3f, r0	; 63
    2b1a:	0f 90       	pop	r0
    2b1c:	1f 90       	pop	r1
    2b1e:	18 95       	reti

00002b20 <__vector_9>:
    2b20:	1f 92       	push	r1
    2b22:	0f 92       	push	r0
    2b24:	0f b6       	in	r0, 0x3f	; 63
    2b26:	0f 92       	push	r0
    2b28:	11 24       	eor	r1, r1
    2b2a:	2f 93       	push	r18
    2b2c:	3f 93       	push	r19
    2b2e:	4f 93       	push	r20
    2b30:	5f 93       	push	r21
    2b32:	6f 93       	push	r22
    2b34:	7f 93       	push	r23
    2b36:	8f 93       	push	r24
    2b38:	9f 93       	push	r25
    2b3a:	af 93       	push	r26
    2b3c:	bf 93       	push	r27
    2b3e:	ef 93       	push	r30
    2b40:	ff 93       	push	r31
    2b42:	e0 91 32 02 	lds	r30, 0x0232
    2b46:	f0 91 33 02 	lds	r31, 0x0233
    2b4a:	30 97       	sbiw	r30, 0x00	; 0
    2b4c:	09 f0       	breq	.+2      	; 0x2b50 <__vector_9+0x30>
    2b4e:	09 95       	icall
    2b50:	ff 91       	pop	r31
    2b52:	ef 91       	pop	r30
    2b54:	bf 91       	pop	r27
    2b56:	af 91       	pop	r26
    2b58:	9f 91       	pop	r25
    2b5a:	8f 91       	pop	r24
    2b5c:	7f 91       	pop	r23
    2b5e:	6f 91       	pop	r22
    2b60:	5f 91       	pop	r21
    2b62:	4f 91       	pop	r20
    2b64:	3f 91       	pop	r19
    2b66:	2f 91       	pop	r18
    2b68:	0f 90       	pop	r0
    2b6a:	0f be       	out	0x3f, r0	; 63
    2b6c:	0f 90       	pop	r0
    2b6e:	1f 90       	pop	r1
    2b70:	18 95       	reti

00002b72 <__vector_10>:
    2b72:	1f 92       	push	r1
    2b74:	0f 92       	push	r0
    2b76:	0f b6       	in	r0, 0x3f	; 63
    2b78:	0f 92       	push	r0
    2b7a:	11 24       	eor	r1, r1
    2b7c:	2f 93       	push	r18
    2b7e:	3f 93       	push	r19
    2b80:	4f 93       	push	r20
    2b82:	5f 93       	push	r21
    2b84:	6f 93       	push	r22
    2b86:	7f 93       	push	r23
    2b88:	8f 93       	push	r24
    2b8a:	9f 93       	push	r25
    2b8c:	af 93       	push	r26
    2b8e:	bf 93       	push	r27
    2b90:	ef 93       	push	r30
    2b92:	ff 93       	push	r31
    2b94:	e0 91 34 02 	lds	r30, 0x0234
    2b98:	f0 91 35 02 	lds	r31, 0x0235
    2b9c:	30 97       	sbiw	r30, 0x00	; 0
    2b9e:	09 f0       	breq	.+2      	; 0x2ba2 <__vector_10+0x30>
    2ba0:	09 95       	icall
    2ba2:	ff 91       	pop	r31
    2ba4:	ef 91       	pop	r30
    2ba6:	bf 91       	pop	r27
    2ba8:	af 91       	pop	r26
    2baa:	9f 91       	pop	r25
    2bac:	8f 91       	pop	r24
    2bae:	7f 91       	pop	r23
    2bb0:	6f 91       	pop	r22
    2bb2:	5f 91       	pop	r21
    2bb4:	4f 91       	pop	r20
    2bb6:	3f 91       	pop	r19
    2bb8:	2f 91       	pop	r18
    2bba:	0f 90       	pop	r0
    2bbc:	0f be       	out	0x3f, r0	; 63
    2bbe:	0f 90       	pop	r0
    2bc0:	1f 90       	pop	r1
    2bc2:	18 95       	reti

00002bc4 <__vector_11>:
    2bc4:	1f 92       	push	r1
    2bc6:	0f 92       	push	r0
    2bc8:	0f b6       	in	r0, 0x3f	; 63
    2bca:	0f 92       	push	r0
    2bcc:	11 24       	eor	r1, r1
    2bce:	2f 93       	push	r18
    2bd0:	3f 93       	push	r19
    2bd2:	4f 93       	push	r20
    2bd4:	5f 93       	push	r21
    2bd6:	6f 93       	push	r22
    2bd8:	7f 93       	push	r23
    2bda:	8f 93       	push	r24
    2bdc:	9f 93       	push	r25
    2bde:	af 93       	push	r26
    2be0:	bf 93       	push	r27
    2be2:	ef 93       	push	r30
    2be4:	ff 93       	push	r31
    2be6:	e0 91 36 02 	lds	r30, 0x0236
    2bea:	f0 91 37 02 	lds	r31, 0x0237
    2bee:	30 97       	sbiw	r30, 0x00	; 0
    2bf0:	09 f0       	breq	.+2      	; 0x2bf4 <__vector_11+0x30>
    2bf2:	09 95       	icall
    2bf4:	ff 91       	pop	r31
    2bf6:	ef 91       	pop	r30
    2bf8:	bf 91       	pop	r27
    2bfa:	af 91       	pop	r26
    2bfc:	9f 91       	pop	r25
    2bfe:	8f 91       	pop	r24
    2c00:	7f 91       	pop	r23
    2c02:	6f 91       	pop	r22
    2c04:	5f 91       	pop	r21
    2c06:	4f 91       	pop	r20
    2c08:	3f 91       	pop	r19
    2c0a:	2f 91       	pop	r18
    2c0c:	0f 90       	pop	r0
    2c0e:	0f be       	out	0x3f, r0	; 63
    2c10:	0f 90       	pop	r0
    2c12:	1f 90       	pop	r1
    2c14:	18 95       	reti

00002c16 <__vector_13>:
    2c16:	1f 92       	push	r1
    2c18:	0f 92       	push	r0
    2c1a:	0f b6       	in	r0, 0x3f	; 63
    2c1c:	0f 92       	push	r0
    2c1e:	11 24       	eor	r1, r1
    2c20:	2f 93       	push	r18
    2c22:	3f 93       	push	r19
    2c24:	4f 93       	push	r20
    2c26:	5f 93       	push	r21
    2c28:	6f 93       	push	r22
    2c2a:	7f 93       	push	r23
    2c2c:	8f 93       	push	r24
    2c2e:	9f 93       	push	r25
    2c30:	af 93       	push	r26
    2c32:	bf 93       	push	r27
    2c34:	ef 93       	push	r30
    2c36:	ff 93       	push	r31
    2c38:	e0 91 3a 02 	lds	r30, 0x023A
    2c3c:	f0 91 3b 02 	lds	r31, 0x023B
    2c40:	30 97       	sbiw	r30, 0x00	; 0
    2c42:	09 f0       	breq	.+2      	; 0x2c46 <__vector_13+0x30>
    2c44:	09 95       	icall
    2c46:	ff 91       	pop	r31
    2c48:	ef 91       	pop	r30
    2c4a:	bf 91       	pop	r27
    2c4c:	af 91       	pop	r26
    2c4e:	9f 91       	pop	r25
    2c50:	8f 91       	pop	r24
    2c52:	7f 91       	pop	r23
    2c54:	6f 91       	pop	r22
    2c56:	5f 91       	pop	r21
    2c58:	4f 91       	pop	r20
    2c5a:	3f 91       	pop	r19
    2c5c:	2f 91       	pop	r18
    2c5e:	0f 90       	pop	r0
    2c60:	0f be       	out	0x3f, r0	; 63
    2c62:	0f 90       	pop	r0
    2c64:	1f 90       	pop	r1
    2c66:	18 95       	reti

00002c68 <__vector_14>:
    2c68:	1f 92       	push	r1
    2c6a:	0f 92       	push	r0
    2c6c:	0f b6       	in	r0, 0x3f	; 63
    2c6e:	0f 92       	push	r0
    2c70:	11 24       	eor	r1, r1
    2c72:	2f 93       	push	r18
    2c74:	3f 93       	push	r19
    2c76:	4f 93       	push	r20
    2c78:	5f 93       	push	r21
    2c7a:	6f 93       	push	r22
    2c7c:	7f 93       	push	r23
    2c7e:	8f 93       	push	r24
    2c80:	9f 93       	push	r25
    2c82:	af 93       	push	r26
    2c84:	bf 93       	push	r27
    2c86:	ef 93       	push	r30
    2c88:	ff 93       	push	r31
    2c8a:	e0 91 3c 02 	lds	r30, 0x023C
    2c8e:	f0 91 3d 02 	lds	r31, 0x023D
    2c92:	30 97       	sbiw	r30, 0x00	; 0
    2c94:	09 f0       	breq	.+2      	; 0x2c98 <__vector_14+0x30>
    2c96:	09 95       	icall
    2c98:	ff 91       	pop	r31
    2c9a:	ef 91       	pop	r30
    2c9c:	bf 91       	pop	r27
    2c9e:	af 91       	pop	r26
    2ca0:	9f 91       	pop	r25
    2ca2:	8f 91       	pop	r24
    2ca4:	7f 91       	pop	r23
    2ca6:	6f 91       	pop	r22
    2ca8:	5f 91       	pop	r21
    2caa:	4f 91       	pop	r20
    2cac:	3f 91       	pop	r19
    2cae:	2f 91       	pop	r18
    2cb0:	0f 90       	pop	r0
    2cb2:	0f be       	out	0x3f, r0	; 63
    2cb4:	0f 90       	pop	r0
    2cb6:	1f 90       	pop	r1
    2cb8:	18 95       	reti

00002cba <__vector_12>:
    2cba:	1f 92       	push	r1
    2cbc:	0f 92       	push	r0
    2cbe:	0f b6       	in	r0, 0x3f	; 63
    2cc0:	0f 92       	push	r0
    2cc2:	11 24       	eor	r1, r1
    2cc4:	2f 93       	push	r18
    2cc6:	3f 93       	push	r19
    2cc8:	4f 93       	push	r20
    2cca:	5f 93       	push	r21
    2ccc:	6f 93       	push	r22
    2cce:	7f 93       	push	r23
    2cd0:	8f 93       	push	r24
    2cd2:	9f 93       	push	r25
    2cd4:	af 93       	push	r26
    2cd6:	bf 93       	push	r27
    2cd8:	ef 93       	push	r30
    2cda:	ff 93       	push	r31
    2cdc:	e0 91 38 02 	lds	r30, 0x0238
    2ce0:	f0 91 39 02 	lds	r31, 0x0239
    2ce4:	30 97       	sbiw	r30, 0x00	; 0
    2ce6:	09 f0       	breq	.+2      	; 0x2cea <__vector_12+0x30>
    2ce8:	09 95       	icall
    2cea:	ff 91       	pop	r31
    2cec:	ef 91       	pop	r30
    2cee:	bf 91       	pop	r27
    2cf0:	af 91       	pop	r26
    2cf2:	9f 91       	pop	r25
    2cf4:	8f 91       	pop	r24
    2cf6:	7f 91       	pop	r23
    2cf8:	6f 91       	pop	r22
    2cfa:	5f 91       	pop	r21
    2cfc:	4f 91       	pop	r20
    2cfe:	3f 91       	pop	r19
    2d00:	2f 91       	pop	r18
    2d02:	0f 90       	pop	r0
    2d04:	0f be       	out	0x3f, r0	; 63
    2d06:	0f 90       	pop	r0
    2d08:	1f 90       	pop	r1
    2d0a:	18 95       	reti

00002d0c <__vector_15>:
    2d0c:	1f 92       	push	r1
    2d0e:	0f 92       	push	r0
    2d10:	0f b6       	in	r0, 0x3f	; 63
    2d12:	0f 92       	push	r0
    2d14:	11 24       	eor	r1, r1
    2d16:	2f 93       	push	r18
    2d18:	3f 93       	push	r19
    2d1a:	4f 93       	push	r20
    2d1c:	5f 93       	push	r21
    2d1e:	6f 93       	push	r22
    2d20:	7f 93       	push	r23
    2d22:	8f 93       	push	r24
    2d24:	9f 93       	push	r25
    2d26:	af 93       	push	r26
    2d28:	bf 93       	push	r27
    2d2a:	ef 93       	push	r30
    2d2c:	ff 93       	push	r31
    2d2e:	e0 91 3e 02 	lds	r30, 0x023E
    2d32:	f0 91 3f 02 	lds	r31, 0x023F
    2d36:	30 97       	sbiw	r30, 0x00	; 0
    2d38:	09 f0       	breq	.+2      	; 0x2d3c <__vector_15+0x30>
    2d3a:	09 95       	icall
    2d3c:	ff 91       	pop	r31
    2d3e:	ef 91       	pop	r30
    2d40:	bf 91       	pop	r27
    2d42:	af 91       	pop	r26
    2d44:	9f 91       	pop	r25
    2d46:	8f 91       	pop	r24
    2d48:	7f 91       	pop	r23
    2d4a:	6f 91       	pop	r22
    2d4c:	5f 91       	pop	r21
    2d4e:	4f 91       	pop	r20
    2d50:	3f 91       	pop	r19
    2d52:	2f 91       	pop	r18
    2d54:	0f 90       	pop	r0
    2d56:	0f be       	out	0x3f, r0	; 63
    2d58:	0f 90       	pop	r0
    2d5a:	1f 90       	pop	r1
    2d5c:	18 95       	reti

00002d5e <__vector_4>:
    2d5e:	1f 92       	push	r1
    2d60:	0f 92       	push	r0
    2d62:	0f b6       	in	r0, 0x3f	; 63
    2d64:	0f 92       	push	r0
    2d66:	11 24       	eor	r1, r1
    2d68:	2f 93       	push	r18
    2d6a:	3f 93       	push	r19
    2d6c:	4f 93       	push	r20
    2d6e:	5f 93       	push	r21
    2d70:	6f 93       	push	r22
    2d72:	7f 93       	push	r23
    2d74:	8f 93       	push	r24
    2d76:	9f 93       	push	r25
    2d78:	af 93       	push	r26
    2d7a:	bf 93       	push	r27
    2d7c:	ef 93       	push	r30
    2d7e:	ff 93       	push	r31
    2d80:	e0 91 28 02 	lds	r30, 0x0228
    2d84:	f0 91 29 02 	lds	r31, 0x0229
    2d88:	30 97       	sbiw	r30, 0x00	; 0
    2d8a:	09 f0       	breq	.+2      	; 0x2d8e <__vector_4+0x30>
    2d8c:	09 95       	icall
    2d8e:	ff 91       	pop	r31
    2d90:	ef 91       	pop	r30
    2d92:	bf 91       	pop	r27
    2d94:	af 91       	pop	r26
    2d96:	9f 91       	pop	r25
    2d98:	8f 91       	pop	r24
    2d9a:	7f 91       	pop	r23
    2d9c:	6f 91       	pop	r22
    2d9e:	5f 91       	pop	r21
    2da0:	4f 91       	pop	r20
    2da2:	3f 91       	pop	r19
    2da4:	2f 91       	pop	r18
    2da6:	0f 90       	pop	r0
    2da8:	0f be       	out	0x3f, r0	; 63
    2daa:	0f 90       	pop	r0
    2dac:	1f 90       	pop	r1
    2dae:	18 95       	reti

00002db0 <__vector_5>:
    2db0:	1f 92       	push	r1
    2db2:	0f 92       	push	r0
    2db4:	0f b6       	in	r0, 0x3f	; 63
    2db6:	0f 92       	push	r0
    2db8:	11 24       	eor	r1, r1
    2dba:	2f 93       	push	r18
    2dbc:	3f 93       	push	r19
    2dbe:	4f 93       	push	r20
    2dc0:	5f 93       	push	r21
    2dc2:	6f 93       	push	r22
    2dc4:	7f 93       	push	r23
    2dc6:	8f 93       	push	r24
    2dc8:	9f 93       	push	r25
    2dca:	af 93       	push	r26
    2dcc:	bf 93       	push	r27
    2dce:	ef 93       	push	r30
    2dd0:	ff 93       	push	r31
    2dd2:	e0 91 2a 02 	lds	r30, 0x022A
    2dd6:	f0 91 2b 02 	lds	r31, 0x022B
    2dda:	30 97       	sbiw	r30, 0x00	; 0
    2ddc:	09 f0       	breq	.+2      	; 0x2de0 <__vector_5+0x30>
    2dde:	09 95       	icall
    2de0:	ff 91       	pop	r31
    2de2:	ef 91       	pop	r30
    2de4:	bf 91       	pop	r27
    2de6:	af 91       	pop	r26
    2de8:	9f 91       	pop	r25
    2dea:	8f 91       	pop	r24
    2dec:	7f 91       	pop	r23
    2dee:	6f 91       	pop	r22
    2df0:	5f 91       	pop	r21
    2df2:	4f 91       	pop	r20
    2df4:	3f 91       	pop	r19
    2df6:	2f 91       	pop	r18
    2df8:	0f 90       	pop	r0
    2dfa:	0f be       	out	0x3f, r0	; 63
    2dfc:	0f 90       	pop	r0
    2dfe:	1f 90       	pop	r1
    2e00:	18 95       	reti

00002e02 <__vector_6>:
    2e02:	1f 92       	push	r1
    2e04:	0f 92       	push	r0
    2e06:	0f b6       	in	r0, 0x3f	; 63
    2e08:	0f 92       	push	r0
    2e0a:	11 24       	eor	r1, r1
    2e0c:	2f 93       	push	r18
    2e0e:	3f 93       	push	r19
    2e10:	4f 93       	push	r20
    2e12:	5f 93       	push	r21
    2e14:	6f 93       	push	r22
    2e16:	7f 93       	push	r23
    2e18:	8f 93       	push	r24
    2e1a:	9f 93       	push	r25
    2e1c:	af 93       	push	r26
    2e1e:	bf 93       	push	r27
    2e20:	ef 93       	push	r30
    2e22:	ff 93       	push	r31
    2e24:	e0 91 2c 02 	lds	r30, 0x022C
    2e28:	f0 91 2d 02 	lds	r31, 0x022D
    2e2c:	30 97       	sbiw	r30, 0x00	; 0
    2e2e:	09 f0       	breq	.+2      	; 0x2e32 <__vector_6+0x30>
    2e30:	09 95       	icall
    2e32:	ff 91       	pop	r31
    2e34:	ef 91       	pop	r30
    2e36:	bf 91       	pop	r27
    2e38:	af 91       	pop	r26
    2e3a:	9f 91       	pop	r25
    2e3c:	8f 91       	pop	r24
    2e3e:	7f 91       	pop	r23
    2e40:	6f 91       	pop	r22
    2e42:	5f 91       	pop	r21
    2e44:	4f 91       	pop	r20
    2e46:	3f 91       	pop	r19
    2e48:	2f 91       	pop	r18
    2e4a:	0f 90       	pop	r0
    2e4c:	0f be       	out	0x3f, r0	; 63
    2e4e:	0f 90       	pop	r0
    2e50:	1f 90       	pop	r1
    2e52:	18 95       	reti

00002e54 <__vector_7>:
    2e54:	1f 92       	push	r1
    2e56:	0f 92       	push	r0
    2e58:	0f b6       	in	r0, 0x3f	; 63
    2e5a:	0f 92       	push	r0
    2e5c:	11 24       	eor	r1, r1
    2e5e:	2f 93       	push	r18
    2e60:	3f 93       	push	r19
    2e62:	4f 93       	push	r20
    2e64:	5f 93       	push	r21
    2e66:	6f 93       	push	r22
    2e68:	7f 93       	push	r23
    2e6a:	8f 93       	push	r24
    2e6c:	9f 93       	push	r25
    2e6e:	af 93       	push	r26
    2e70:	bf 93       	push	r27
    2e72:	ef 93       	push	r30
    2e74:	ff 93       	push	r31
    2e76:	e0 91 2e 02 	lds	r30, 0x022E
    2e7a:	f0 91 2f 02 	lds	r31, 0x022F
    2e7e:	30 97       	sbiw	r30, 0x00	; 0
    2e80:	09 f0       	breq	.+2      	; 0x2e84 <__vector_7+0x30>
    2e82:	09 95       	icall
    2e84:	ff 91       	pop	r31
    2e86:	ef 91       	pop	r30
    2e88:	bf 91       	pop	r27
    2e8a:	af 91       	pop	r26
    2e8c:	9f 91       	pop	r25
    2e8e:	8f 91       	pop	r24
    2e90:	7f 91       	pop	r23
    2e92:	6f 91       	pop	r22
    2e94:	5f 91       	pop	r21
    2e96:	4f 91       	pop	r20
    2e98:	3f 91       	pop	r19
    2e9a:	2f 91       	pop	r18
    2e9c:	0f 90       	pop	r0
    2e9e:	0f be       	out	0x3f, r0	; 63
    2ea0:	0f 90       	pop	r0
    2ea2:	1f 90       	pop	r1
    2ea4:	18 95       	reti

00002ea6 <ISR_attach>:
    2ea6:	e8 2f       	mov	r30, r24
    2ea8:	80 32       	cpi	r24, 0x20	; 32
    2eaa:	68 f4       	brcc	.+26     	; 0x2ec6 <ISR_attach+0x20>
    2eac:	80 51       	subi	r24, 0x10	; 16
    2eae:	83 30       	cpi	r24, 0x03	; 3
    2eb0:	50 f0       	brcs	.+20     	; 0x2ec6 <ISR_attach+0x20>
    2eb2:	f0 e0       	ldi	r31, 0x00	; 0
    2eb4:	ee 0f       	add	r30, r30
    2eb6:	ff 1f       	adc	r31, r31
    2eb8:	e0 5e       	subi	r30, 0xE0	; 224
    2eba:	fd 4f       	sbci	r31, 0xFD	; 253
    2ebc:	20 81       	ld	r18, Z
    2ebe:	31 81       	ldd	r19, Z+1	; 0x01
    2ec0:	71 83       	std	Z+1, r23	; 0x01
    2ec2:	60 83       	st	Z, r22
    2ec4:	02 c0       	rjmp	.+4      	; 0x2eca <ISR_attach+0x24>
    2ec6:	20 e0       	ldi	r18, 0x00	; 0
    2ec8:	30 e0       	ldi	r19, 0x00	; 0
    2eca:	c9 01       	movw	r24, r18
    2ecc:	08 95       	ret

00002ece <ISR_open>:
    2ece:	80 e1       	ldi	r24, 0x10	; 16
    2ed0:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    2ed4:	88 23       	and	r24, r24
    2ed6:	61 f4       	brne	.+24     	; 0x2ef0 <ISR_open+0x22>
    2ed8:	e0 e2       	ldi	r30, 0x20	; 32
    2eda:	f2 e0       	ldi	r31, 0x02	; 2
    2edc:	11 92       	st	Z+, r1
    2ede:	11 92       	st	Z+, r1
    2ee0:	82 e0       	ldi	r24, 0x02	; 2
    2ee2:	e0 36       	cpi	r30, 0x60	; 96
    2ee4:	f8 07       	cpc	r31, r24
    2ee6:	d1 f7       	brne	.-12     	; 0x2edc <ISR_open+0xe>
    2ee8:	80 e1       	ldi	r24, 0x10	; 16
    2eea:	61 e0       	ldi	r22, 0x01	; 1
    2eec:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    2ef0:	80 e1       	ldi	r24, 0x10	; 16
    2ef2:	91 e0       	ldi	r25, 0x01	; 1
    2ef4:	08 95       	ret

00002ef6 <__LCD_init>:
    2ef6:	23 9a       	sbi	0x04, 3	; 4
    2ef8:	08 95       	ret

00002efa <__LCD_putchar>:
    2efa:	ff 92       	push	r15
    2efc:	0f 93       	push	r16
    2efe:	1f 93       	push	r17
    2f00:	cf 93       	push	r28
    2f02:	df 93       	push	r29
    2f04:	f8 2e       	mov	r15, r24
    2f06:	8a e0       	ldi	r24, 0x0A	; 10
    2f08:	f8 16       	cp	r15, r24
    2f0a:	b1 f0       	breq	.+44     	; 0x2f38 <__LCD_putchar+0x3e>
    2f0c:	8f 15       	cp	r24, r15
    2f0e:	48 f0       	brcs	.+18     	; 0x2f22 <__LCD_putchar+0x28>
    2f10:	e8 e0       	ldi	r30, 0x08	; 8
    2f12:	fe 16       	cp	r15, r30
    2f14:	b9 f1       	breq	.+110    	; 0x2f84 <__LCD_putchar+0x8a>
    2f16:	ef 15       	cp	r30, r15
    2f18:	38 f1       	brcs	.+78     	; 0x2f68 <__LCD_putchar+0x6e>
    2f1a:	f7 e0       	ldi	r31, 0x07	; 7
    2f1c:	ff 16       	cp	r15, r31
    2f1e:	51 f4       	brne	.+20     	; 0x2f34 <__LCD_putchar+0x3a>
    2f20:	3b c0       	rjmp	.+118    	; 0x2f98 <__LCD_putchar+0x9e>
    2f22:	8d e0       	ldi	r24, 0x0D	; 13
    2f24:	f8 16       	cp	r15, r24
    2f26:	59 f0       	breq	.+22     	; 0x2f3e <__LCD_putchar+0x44>
    2f28:	eb e1       	ldi	r30, 0x1B	; 27
    2f2a:	fe 16       	cp	r15, r30
    2f2c:	89 f0       	breq	.+34     	; 0x2f50 <__LCD_putchar+0x56>
    2f2e:	fc e0       	ldi	r31, 0x0C	; 12
    2f30:	ff 16       	cp	r15, r31
    2f32:	41 f0       	breq	.+16     	; 0x2f44 <__LCD_putchar+0x4a>
    2f34:	01 e0       	ldi	r16, 0x01	; 1
    2f36:	41 c0       	rjmp	.+130    	; 0x2fba <__LCD_putchar+0xc0>
    2f38:	10 92 79 03 	sts	0x0379, r1
    2f3c:	03 c0       	rjmp	.+6      	; 0x2f44 <__LCD_putchar+0x4a>
    2f3e:	10 92 79 03 	sts	0x0379, r1
    2f42:	3a c0       	rjmp	.+116    	; 0x2fb8 <__LCD_putchar+0xbe>
    2f44:	80 91 7a 03 	lds	r24, 0x037A
    2f48:	81 50       	subi	r24, 0x01	; 1
    2f4a:	80 93 7a 03 	sts	0x037A, r24
    2f4e:	34 c0       	rjmp	.+104    	; 0x2fb8 <__LCD_putchar+0xbe>
    2f50:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <LCD_clear>
    2f54:	14 c0       	rjmp	.+40     	; 0x2f7e <__LCD_putchar+0x84>
    2f56:	80 e0       	ldi	r24, 0x00	; 0
    2f58:	61 e0       	ldi	r22, 0x01	; 1
    2f5a:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    2f5e:	80 91 79 03 	lds	r24, 0x0379
    2f62:	8f 5f       	subi	r24, 0xFF	; 255
    2f64:	80 93 79 03 	sts	0x0379, r24
    2f68:	80 91 79 03 	lds	r24, 0x0379
    2f6c:	87 ff       	sbrs	r24, 7
    2f6e:	f3 cf       	rjmp	.-26     	; 0x2f56 <__LCD_putchar+0x5c>
    2f70:	10 92 79 03 	sts	0x0379, r1
    2f74:	80 91 7a 03 	lds	r24, 0x037A
    2f78:	81 50       	subi	r24, 0x01	; 1
    2f7a:	80 93 7a 03 	sts	0x037A, r24
    2f7e:	00 e0       	ldi	r16, 0x00	; 0
    2f80:	11 e0       	ldi	r17, 0x01	; 1
    2f82:	1c c0       	rjmp	.+56     	; 0x2fbc <__LCD_putchar+0xc2>
    2f84:	80 91 79 03 	lds	r24, 0x0379
    2f88:	88 23       	and	r24, r24
    2f8a:	b1 f0       	breq	.+44     	; 0x2fb8 <__LCD_putchar+0xbe>
    2f8c:	80 91 79 03 	lds	r24, 0x0379
    2f90:	86 50       	subi	r24, 0x06	; 6
    2f92:	80 93 79 03 	sts	0x0379, r24
    2f96:	10 c0       	rjmp	.+32     	; 0x2fb8 <__LCD_putchar+0xbe>
    2f98:	81 e0       	ldi	r24, 0x01	; 1
    2f9a:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <SPKR_open>
    2f9e:	64 ef       	ldi	r22, 0xF4	; 244
    2fa0:	71 e0       	ldi	r23, 0x01	; 1
    2fa2:	80 e0       	ldi	r24, 0x00	; 0
    2fa4:	90 e0       	ldi	r25, 0x00	; 0
    2fa6:	4d e7       	ldi	r20, 0x7D	; 125
    2fa8:	50 e0       	ldi	r21, 0x00	; 0
    2faa:	24 e6       	ldi	r18, 0x64	; 100
    2fac:	30 e0       	ldi	r19, 0x00	; 0
    2fae:	0e 94 85 19 	call	0x330a	; 0x330a <SPKR_play_beep>
    2fb2:	81 e0       	ldi	r24, 0x01	; 1
    2fb4:	0e 94 51 19 	call	0x32a2	; 0x32a2 <SPKR_close>
    2fb8:	00 e0       	ldi	r16, 0x00	; 0
    2fba:	10 e0       	ldi	r17, 0x00	; 0
    2fbc:	80 91 7a 03 	lds	r24, 0x037A
    2fc0:	60 91 79 03 	lds	r22, 0x0379
    2fc4:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <LCD_set_PGC_addr>
    2fc8:	00 23       	and	r16, r16
    2fca:	51 f1       	breq	.+84     	; 0x3020 <__LCD_putchar+0x126>
    2fcc:	85 e0       	ldi	r24, 0x05	; 5
    2fce:	f8 9e       	mul	r15, r24
    2fd0:	c0 01       	movw	r24, r0
    2fd2:	11 24       	eor	r1, r1
    2fd4:	ec 01       	movw	r28, r24
    2fd6:	c3 55       	subi	r28, 0x53	; 83
    2fd8:	df 4f       	sbci	r29, 0xFF	; 255
    2fda:	8c 01       	movw	r16, r24
    2fdc:	0e 54       	subi	r16, 0x4E	; 78
    2fde:	1f 4f       	sbci	r17, 0xFF	; 255
    2fe0:	fe 01       	movw	r30, r28
    2fe2:	84 91       	lpm	r24, Z+
    2fe4:	61 e0       	ldi	r22, 0x01	; 1
    2fe6:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    2fea:	21 96       	adiw	r28, 0x01	; 1
    2fec:	c0 17       	cp	r28, r16
    2fee:	d1 07       	cpc	r29, r17
    2ff0:	b9 f7       	brne	.-18     	; 0x2fe0 <__LCD_putchar+0xe6>
    2ff2:	80 e0       	ldi	r24, 0x00	; 0
    2ff4:	61 e0       	ldi	r22, 0x01	; 1
    2ff6:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <LCD_write>
    2ffa:	80 91 79 03 	lds	r24, 0x0379
    2ffe:	8a 5f       	subi	r24, 0xFA	; 250
    3000:	80 93 79 03 	sts	0x0379, r24
    3004:	80 91 79 03 	lds	r24, 0x0379
    3008:	90 e0       	ldi	r25, 0x00	; 0
    300a:	8c 37       	cpi	r24, 0x7C	; 124
    300c:	91 05       	cpc	r25, r1
    300e:	3c f0       	brlt	.+14     	; 0x301e <__LCD_putchar+0x124>
    3010:	10 92 79 03 	sts	0x0379, r1
    3014:	80 91 7a 03 	lds	r24, 0x037A
    3018:	81 50       	subi	r24, 0x01	; 1
    301a:	80 93 7a 03 	sts	0x037A, r24
    301e:	11 e0       	ldi	r17, 0x01	; 1
    3020:	80 91 7a 03 	lds	r24, 0x037A
    3024:	83 70       	andi	r24, 0x03	; 3
    3026:	80 93 7a 03 	sts	0x037A, r24
    302a:	11 30       	cpi	r17, 0x01	; 1
    302c:	59 f4       	brne	.+22     	; 0x3044 <__LCD_putchar+0x14a>
    302e:	80 91 7b 03 	lds	r24, 0x037B
    3032:	81 30       	cpi	r24, 0x01	; 1
    3034:	39 f4       	brne	.+14     	; 0x3044 <__LCD_putchar+0x14a>
    3036:	e0 91 7c 03 	lds	r30, 0x037C
    303a:	f0 91 7d 03 	lds	r31, 0x037D
    303e:	30 97       	sbiw	r30, 0x00	; 0
    3040:	09 f0       	breq	.+2      	; 0x3044 <__LCD_putchar+0x14a>
    3042:	09 95       	icall
    3044:	80 e0       	ldi	r24, 0x00	; 0
    3046:	90 e0       	ldi	r25, 0x00	; 0
    3048:	df 91       	pop	r29
    304a:	cf 91       	pop	r28
    304c:	1f 91       	pop	r17
    304e:	0f 91       	pop	r16
    3050:	ff 90       	pop	r15
    3052:	08 95       	ret

00003054 <__LED_clr_pattern>:
    3054:	85 fd       	sbrc	r24, 5
    3056:	5d 98       	cbi	0x0b, 5	; 11
    3058:	86 fd       	sbrc	r24, 6
    305a:	5e 98       	cbi	0x0b, 6	; 11
    305c:	08 95       	ret

0000305e <__LED_init>:
    305e:	55 9a       	sbi	0x0a, 5	; 10
    3060:	56 9a       	sbi	0x0a, 6	; 10
    3062:	08 95       	ret

00003064 <__LED_set_pattern>:
    3064:	85 fd       	sbrc	r24, 5
    3066:	5d 9a       	sbi	0x0b, 5	; 11
    3068:	86 fd       	sbrc	r24, 6
    306a:	5e 9a       	sbi	0x0b, 6	; 11
    306c:	08 95       	ret

0000306e <ATMEGA_open>:
    306e:	80 e0       	ldi	r24, 0x00	; 0
    3070:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    3074:	88 23       	and	r24, r24
    3076:	51 f4       	brne	.+20     	; 0x308c <ATMEGA_open+0x1e>
    3078:	f8 94       	cli
    307a:	0e 94 68 1b 	call	0x36d0	; 0x36d0 <__ATMEGA_init>
    307e:	81 e0       	ldi	r24, 0x01	; 1
    3080:	0e 94 49 18 	call	0x3092	; 0x3092 <ATMEGA_set_clk_mode>
    3084:	80 e0       	ldi	r24, 0x00	; 0
    3086:	61 e0       	ldi	r22, 0x01	; 1
    3088:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    308c:	80 e0       	ldi	r24, 0x00	; 0
    308e:	91 e0       	ldi	r25, 0x01	; 1
    3090:	08 95       	ret

00003092 <ATMEGA_set_clk_mode>:
    3092:	81 30       	cpi	r24, 0x01	; 1
    3094:	49 f0       	breq	.+18     	; 0x30a8 <ATMEGA_set_clk_mode+0x16>
    3096:	f8 94       	cli
    3098:	81 30       	cpi	r24, 0x01	; 1
    309a:	20 f1       	brcs	.+72     	; 0x30e4 <ATMEGA_set_clk_mode+0x52>
    309c:	82 30       	cpi	r24, 0x02	; 2
    309e:	b1 f0       	breq	.+44     	; 0x30cc <ATMEGA_set_clk_mode+0x3a>
    30a0:	83 30       	cpi	r24, 0x03	; 3
    30a2:	09 f0       	breq	.+2      	; 0x30a6 <ATMEGA_set_clk_mode+0x14>
    30a4:	45 c0       	rjmp	.+138    	; 0x3130 <ATMEGA_set_clk_mode+0x9e>
    30a6:	17 c0       	rjmp	.+46     	; 0x30d6 <ATMEGA_set_clk_mode+0x44>
    30a8:	2c 9a       	sbi	0x05, 4	; 5
    30aa:	80 e8       	ldi	r24, 0x80	; 128
    30ac:	80 93 61 00 	sts	0x0061, r24
    30b0:	10 92 61 00 	sts	0x0061, r1
    30b4:	80 e0       	ldi	r24, 0x00	; 0
    30b6:	90 e0       	ldi	r25, 0x00	; 0
    30b8:	00 00       	nop
    30ba:	01 96       	adiw	r24, 0x01	; 1
    30bc:	88 32       	cpi	r24, 0x28	; 40
    30be:	91 05       	cpc	r25, r1
    30c0:	d9 f7       	brne	.-10     	; 0x30b8 <ATMEGA_set_clk_mode+0x26>
    30c2:	10 92 68 00 	sts	0x0068, r1
    30c6:	10 92 6b 00 	sts	0x006B, r1
    30ca:	08 95       	ret
    30cc:	80 e8       	ldi	r24, 0x80	; 128
    30ce:	80 93 61 00 	sts	0x0061, r24
    30d2:	83 e0       	ldi	r24, 0x03	; 3
    30d4:	04 c0       	rjmp	.+8      	; 0x30de <ATMEGA_set_clk_mode+0x4c>
    30d6:	80 e8       	ldi	r24, 0x80	; 128
    30d8:	80 93 61 00 	sts	0x0061, r24
    30dc:	88 e0       	ldi	r24, 0x08	; 8
    30de:	80 93 61 00 	sts	0x0061, r24
    30e2:	28 c0       	rjmp	.+80     	; 0x3134 <ATMEGA_set_clk_mode+0xa2>
    30e4:	80 e0       	ldi	r24, 0x00	; 0
    30e6:	90 e0       	ldi	r25, 0x00	; 0
    30e8:	00 00       	nop
    30ea:	01 96       	adiw	r24, 0x01	; 1
    30ec:	2d e6       	ldi	r18, 0x6D	; 109
    30ee:	80 36       	cpi	r24, 0x60	; 96
    30f0:	92 07       	cpc	r25, r18
    30f2:	d1 f7       	brne	.-12     	; 0x30e8 <ATMEGA_set_clk_mode+0x56>
    30f4:	2c 98       	cbi	0x05, 4	; 5
    30f6:	80 e0       	ldi	r24, 0x00	; 0
    30f8:	90 e0       	ldi	r25, 0x00	; 0
    30fa:	00 00       	nop
    30fc:	01 96       	adiw	r24, 0x01	; 1
    30fe:	2d e6       	ldi	r18, 0x6D	; 109
    3100:	80 36       	cpi	r24, 0x60	; 96
    3102:	92 07       	cpc	r25, r18
    3104:	d1 f7       	brne	.-12     	; 0x30fa <ATMEGA_set_clk_mode+0x68>
    3106:	10 92 7a 00 	sts	0x007A, r1
    310a:	8f ef       	ldi	r24, 0xFF	; 255
    310c:	80 93 64 00 	sts	0x0064, r24
    3110:	80 91 68 00 	lds	r24, 0x0068
    3114:	81 60       	ori	r24, 0x01	; 1
    3116:	80 93 68 00 	sts	0x0068, r24
    311a:	80 91 6b 00 	lds	r24, 0x006B
    311e:	84 60       	ori	r24, 0x04	; 4
    3120:	80 93 6b 00 	sts	0x006B, r24
    3124:	78 94       	sei
    3126:	83 b7       	in	r24, 0x33	; 51
    3128:	81 60       	ori	r24, 0x01	; 1
    312a:	83 bf       	out	0x33, r24	; 51
    312c:	88 95       	sleep
    312e:	08 95       	ret
    3130:	82 30       	cpi	r24, 0x02	; 2
    3132:	08 f0       	brcs	.+2      	; 0x3136 <ATMEGA_set_clk_mode+0xa4>
    3134:	78 94       	sei
    3136:	08 95       	ret

00003138 <SPI_open>:
    3138:	0f 93       	push	r16
    313a:	1f 93       	push	r17
    313c:	0e 94 94 1b 	call	0x3728	; 0x3728 <__SPI_init>
    3140:	80 e0       	ldi	r24, 0x00	; 0
    3142:	63 e8       	ldi	r22, 0x83	; 131
    3144:	7b e1       	ldi	r23, 0x1B	; 27
    3146:	0e 94 d5 18 	call	0x31aa	; 0x31aa <SPI_set_config_func>
    314a:	81 e0       	ldi	r24, 0x01	; 1
    314c:	6b e7       	ldi	r22, 0x7B	; 123
    314e:	7b e1       	ldi	r23, 0x1B	; 27
    3150:	0e 94 d5 18 	call	0x31aa	; 0x31aa <SPI_set_config_func>
    3154:	82 e0       	ldi	r24, 0x02	; 2
    3156:	63 e7       	ldi	r22, 0x73	; 115
    3158:	7b e1       	ldi	r23, 0x1B	; 27
    315a:	0e 94 d5 18 	call	0x31aa	; 0x31aa <SPI_set_config_func>
    315e:	86 e0       	ldi	r24, 0x06	; 6
    3160:	6b e8       	ldi	r22, 0x8B	; 139
    3162:	7b e1       	ldi	r23, 0x1B	; 27
    3164:	0e 94 d5 18 	call	0x31aa	; 0x31aa <SPI_set_config_func>
    3168:	0b e6       	ldi	r16, 0x6B	; 107
    316a:	1b e1       	ldi	r17, 0x1B	; 27
    316c:	83 e0       	ldi	r24, 0x03	; 3
    316e:	b8 01       	movw	r22, r16
    3170:	0e 94 d5 18 	call	0x31aa	; 0x31aa <SPI_set_config_func>
    3174:	84 e0       	ldi	r24, 0x04	; 4
    3176:	b8 01       	movw	r22, r16
    3178:	0e 94 d5 18 	call	0x31aa	; 0x31aa <SPI_set_config_func>
    317c:	85 e0       	ldi	r24, 0x05	; 5
    317e:	b8 01       	movw	r22, r16
    3180:	0e 94 d5 18 	call	0x31aa	; 0x31aa <SPI_set_config_func>
    3184:	87 e0       	ldi	r24, 0x07	; 7
    3186:	b8 01       	movw	r22, r16
    3188:	0e 94 d5 18 	call	0x31aa	; 0x31aa <SPI_set_config_func>
    318c:	82 e0       	ldi	r24, 0x02	; 2
    318e:	61 e0       	ldi	r22, 0x01	; 1
    3190:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    3194:	8f ef       	ldi	r24, 0xFF	; 255
    3196:	80 93 7e 03 	sts	0x037E, r24
    319a:	87 e0       	ldi	r24, 0x07	; 7
    319c:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <SPI_set_slave_addr>
    31a0:	82 e0       	ldi	r24, 0x02	; 2
    31a2:	91 e0       	ldi	r25, 0x01	; 1
    31a4:	1f 91       	pop	r17
    31a6:	0f 91       	pop	r16
    31a8:	08 95       	ret

000031aa <SPI_set_config_func>:
    31aa:	e8 2f       	mov	r30, r24
    31ac:	f0 e0       	ldi	r31, 0x00	; 0
    31ae:	ee 0f       	add	r30, r30
    31b0:	ff 1f       	adc	r31, r31
    31b2:	e0 5a       	subi	r30, 0xA0	; 160
    31b4:	fd 4f       	sbci	r31, 0xFD	; 253
    31b6:	71 83       	std	Z+1, r23	; 0x01
    31b8:	60 83       	st	Z, r22
    31ba:	08 95       	ret

000031bc <__SPKR_TIMER1_COMPA_vect>:
    31bc:	0e 94 e1 18 	call	0x31c2	; 0x31c2 <SPKR_clk>
    31c0:	08 95       	ret

000031c2 <SPKR_clk>:
    31c2:	80 91 72 02 	lds	r24, 0x0272
    31c6:	90 91 73 02 	lds	r25, 0x0273
    31ca:	a0 91 74 02 	lds	r26, 0x0274
    31ce:	b0 91 75 02 	lds	r27, 0x0275
    31d2:	20 91 76 02 	lds	r18, 0x0276
    31d6:	30 91 77 02 	lds	r19, 0x0277
    31da:	40 91 78 02 	lds	r20, 0x0278
    31de:	50 91 79 02 	lds	r21, 0x0279
    31e2:	28 0f       	add	r18, r24
    31e4:	39 1f       	adc	r19, r25
    31e6:	4a 1f       	adc	r20, r26
    31e8:	5b 1f       	adc	r21, r27
    31ea:	20 93 72 02 	sts	0x0272, r18
    31ee:	30 93 73 02 	sts	0x0273, r19
    31f2:	40 93 74 02 	sts	0x0274, r20
    31f6:	50 93 75 02 	sts	0x0275, r21
    31fa:	80 91 72 02 	lds	r24, 0x0272
    31fe:	90 91 73 02 	lds	r25, 0x0273
    3202:	a0 91 74 02 	lds	r26, 0x0274
    3206:	b0 91 75 02 	lds	r27, 0x0275
    320a:	88 51       	subi	r24, 0x18	; 24
    320c:	96 4f       	sbci	r25, 0xF6	; 246
    320e:	a0 40       	sbci	r26, 0x00	; 0
    3210:	b0 40       	sbci	r27, 0x00	; 0
    3212:	bc f0       	brlt	.+46     	; 0x3242 <SPKR_clk+0x80>
    3214:	8b b1       	in	r24, 0x0b	; 11
    3216:	80 58       	subi	r24, 0x80	; 128
    3218:	8b b9       	out	0x0b, r24	; 11
    321a:	80 91 72 02 	lds	r24, 0x0272
    321e:	90 91 73 02 	lds	r25, 0x0273
    3222:	a0 91 74 02 	lds	r26, 0x0274
    3226:	b0 91 75 02 	lds	r27, 0x0275
    322a:	88 51       	subi	r24, 0x18	; 24
    322c:	96 4f       	sbci	r25, 0xF6	; 246
    322e:	a0 40       	sbci	r26, 0x00	; 0
    3230:	b0 40       	sbci	r27, 0x00	; 0
    3232:	80 93 72 02 	sts	0x0272, r24
    3236:	90 93 73 02 	sts	0x0273, r25
    323a:	a0 93 74 02 	sts	0x0274, r26
    323e:	b0 93 75 02 	sts	0x0275, r27
    3242:	08 95       	ret

00003244 <__SPKR_close_beep_mode>:
    3244:	8a e0       	ldi	r24, 0x0A	; 10
    3246:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    324a:	81 30       	cpi	r24, 0x01	; 1
    324c:	41 f4       	brne	.+16     	; 0x325e <__SPKR_close_beep_mode+0x1a>
    324e:	0e 94 c4 1b 	call	0x3788	; 0x3788 <__SPKR_close>
    3252:	10 92 71 02 	sts	0x0271, r1
    3256:	8a e0       	ldi	r24, 0x0A	; 10
    3258:	60 e0       	ldi	r22, 0x00	; 0
    325a:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    325e:	08 95       	ret

00003260 <__SPKR_close_tone_mode>:
    3260:	89 e0       	ldi	r24, 0x09	; 9
    3262:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    3266:	81 30       	cpi	r24, 0x01	; 1
    3268:	d9 f4       	brne	.+54     	; 0x32a0 <__SPKR_close_tone_mode+0x40>
    326a:	80 91 70 02 	lds	r24, 0x0270
    326e:	88 23       	and	r24, r24
    3270:	11 f0       	breq	.+4      	; 0x3276 <__SPKR_close_tone_mode+0x16>
    3272:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <__SPKR_stop>
    3276:	82 e0       	ldi	r24, 0x02	; 2
    3278:	0e 94 c4 1b 	call	0x3788	; 0x3788 <__SPKR_close>
    327c:	80 91 7e 02 	lds	r24, 0x027E
    3280:	90 91 7f 02 	lds	r25, 0x027F
    3284:	00 97       	sbiw	r24, 0x00	; 0
    3286:	31 f0       	breq	.+12     	; 0x3294 <__SPKR_close_tone_mode+0x34>
    3288:	0e 94 83 28 	call	0x5106	; 0x5106 <free>
    328c:	10 92 7f 02 	sts	0x027F, r1
    3290:	10 92 7e 02 	sts	0x027E, r1
    3294:	10 92 70 02 	sts	0x0270, r1
    3298:	89 e0       	ldi	r24, 0x09	; 9
    329a:	60 e0       	ldi	r22, 0x00	; 0
    329c:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    32a0:	08 95       	ret

000032a2 <SPKR_close>:
    32a2:	81 30       	cpi	r24, 0x01	; 1
    32a4:	29 f0       	breq	.+10     	; 0x32b0 <SPKR_close+0xe>
    32a6:	82 30       	cpi	r24, 0x02	; 2
    32a8:	29 f4       	brne	.+10     	; 0x32b4 <SPKR_close+0x12>
    32aa:	0e 94 30 19 	call	0x3260	; 0x3260 <__SPKR_close_tone_mode>
    32ae:	08 95       	ret
    32b0:	0e 94 22 19 	call	0x3244	; 0x3244 <__SPKR_close_beep_mode>
    32b4:	08 95       	ret

000032b6 <__SPKR_init>:
    32b6:	98 2f       	mov	r25, r24
    32b8:	80 91 70 02 	lds	r24, 0x0270
    32bc:	88 23       	and	r24, r24
    32be:	31 f4       	brne	.+12     	; 0x32cc <__SPKR_init+0x16>
    32c0:	80 91 71 02 	lds	r24, 0x0271
    32c4:	88 23       	and	r24, r24
    32c6:	11 f4       	brne	.+4      	; 0x32cc <__SPKR_init+0x16>
    32c8:	57 9a       	sbi	0x0a, 7	; 10
    32ca:	5f 98       	cbi	0x0b, 7	; 11
    32cc:	80 91 70 02 	lds	r24, 0x0270
    32d0:	88 23       	and	r24, r24
    32d2:	d1 f4       	brne	.+52     	; 0x3308 <__SPKR_init+0x52>
    32d4:	92 30       	cpi	r25, 0x02	; 2
    32d6:	c1 f4       	brne	.+48     	; 0x3308 <__SPKR_init+0x52>
    32d8:	10 92 80 00 	sts	0x0080, r1
    32dc:	10 92 81 00 	sts	0x0081, r1
    32e0:	80 91 81 00 	lds	r24, 0x0081
    32e4:	88 60       	ori	r24, 0x08	; 8
    32e6:	80 93 81 00 	sts	0x0081, r24
    32ea:	80 91 81 00 	lds	r24, 0x0081
    32ee:	81 60       	ori	r24, 0x01	; 1
    32f0:	80 93 81 00 	sts	0x0081, r24
    32f4:	10 92 85 00 	sts	0x0085, r1
    32f8:	10 92 84 00 	sts	0x0084, r1
    32fc:	81 e0       	ldi	r24, 0x01	; 1
    32fe:	80 93 89 00 	sts	0x0089, r24
    3302:	80 e9       	ldi	r24, 0x90	; 144
    3304:	80 93 88 00 	sts	0x0088, r24
    3308:	08 95       	ret

0000330a <SPKR_play_beep>:
    330a:	8f 92       	push	r8
    330c:	9f 92       	push	r9
    330e:	af 92       	push	r10
    3310:	bf 92       	push	r11
    3312:	cf 92       	push	r12
    3314:	df 92       	push	r13
    3316:	ef 92       	push	r14
    3318:	ff 92       	push	r15
    331a:	0f 93       	push	r16
    331c:	1f 93       	push	r17
    331e:	cf 93       	push	r28
    3320:	df 93       	push	r29
    3322:	4b 01       	movw	r8, r22
    3324:	5c 01       	movw	r10, r24
    3326:	ea 01       	movw	r28, r20
    3328:	b9 01       	movw	r22, r18
    332a:	21 15       	cp	r18, r1
    332c:	31 05       	cpc	r19, r1
    332e:	39 f1       	breq	.+78     	; 0x337e <SPKR_play_beep+0x74>
    3330:	9e 01       	movw	r18, r28
    3332:	44 27       	eor	r20, r20
    3334:	37 fd       	sbrc	r19, 7
    3336:	40 95       	com	r20
    3338:	54 2f       	mov	r21, r20
    333a:	65 36       	cpi	r22, 0x65	; 101
    333c:	71 05       	cpc	r23, r1
    333e:	10 f0       	brcs	.+4      	; 0x3344 <SPKR_play_beep+0x3a>
    3340:	64 e6       	ldi	r22, 0x64	; 100
    3342:	70 e0       	ldi	r23, 0x00	; 0
    3344:	80 e0       	ldi	r24, 0x00	; 0
    3346:	90 e0       	ldi	r25, 0x00	; 0
    3348:	0e 94 37 27 	call	0x4e6e	; 0x4e6e <__mulsi3>
    334c:	24 e6       	ldi	r18, 0x64	; 100
    334e:	30 e0       	ldi	r19, 0x00	; 0
    3350:	40 e0       	ldi	r20, 0x00	; 0
    3352:	50 e0       	ldi	r21, 0x00	; 0
    3354:	0e 94 69 27 	call	0x4ed2	; 0x4ed2 <__udivmodsi4>
    3358:	79 01       	movw	r14, r18
    335a:	8a 01       	movw	r16, r20
    335c:	c5 01       	movw	r24, r10
    335e:	b4 01       	movw	r22, r8
    3360:	0e 94 ad 1b 	call	0x375a	; 0x375a <SPKR_beep>
    3364:	c7 01       	movw	r24, r14
    3366:	0e 94 c8 13 	call	0x2790	; 0x2790 <TMRSRVC_delay>
    336a:	60 e0       	ldi	r22, 0x00	; 0
    336c:	70 e0       	ldi	r23, 0x00	; 0
    336e:	80 e0       	ldi	r24, 0x00	; 0
    3370:	90 e0       	ldi	r25, 0x00	; 0
    3372:	0e 94 ad 1b 	call	0x375a	; 0x375a <SPKR_beep>
    3376:	ce 01       	movw	r24, r28
    3378:	8e 19       	sub	r24, r14
    337a:	9f 09       	sbc	r25, r15
    337c:	04 c0       	rjmp	.+8      	; 0x3386 <SPKR_play_beep+0x7c>
    337e:	41 15       	cp	r20, r1
    3380:	51 05       	cpc	r21, r1
    3382:	19 f0       	breq	.+6      	; 0x338a <SPKR_play_beep+0x80>
    3384:	ca 01       	movw	r24, r20
    3386:	0e 94 c8 13 	call	0x2790	; 0x2790 <TMRSRVC_delay>
    338a:	df 91       	pop	r29
    338c:	cf 91       	pop	r28
    338e:	1f 91       	pop	r17
    3390:	0f 91       	pop	r16
    3392:	ff 90       	pop	r15
    3394:	ef 90       	pop	r14
    3396:	df 90       	pop	r13
    3398:	cf 90       	pop	r12
    339a:	bf 90       	pop	r11
    339c:	af 90       	pop	r10
    339e:	9f 90       	pop	r9
    33a0:	8f 90       	pop	r8
    33a2:	08 95       	ret

000033a4 <__SPKR_stop>:
    33a4:	ef e6       	ldi	r30, 0x6F	; 111
    33a6:	f0 e0       	ldi	r31, 0x00	; 0
    33a8:	80 81       	ld	r24, Z
    33aa:	8d 7f       	andi	r24, 0xFD	; 253
    33ac:	80 83       	st	Z, r24
    33ae:	08 95       	ret

000033b0 <STEPPER_go>:
    33b0:	98 2f       	mov	r25, r24
    33b2:	81 e0       	ldi	r24, 0x01	; 1
    33b4:	80 93 63 03 	sts	0x0363, r24
    33b8:	91 30       	cpi	r25, 0x01	; 1
    33ba:	51 f0       	breq	.+20     	; 0x33d0 <STEPPER_go+0x20>
    33bc:	91 30       	cpi	r25, 0x01	; 1
    33be:	18 f0       	brcs	.+6      	; 0x33c6 <STEPPER_go+0x16>
    33c0:	92 30       	cpi	r25, 0x02	; 2
    33c2:	41 f4       	brne	.+16     	; 0x33d4 <STEPPER_go+0x24>
    33c4:	03 c0       	rjmp	.+6      	; 0x33cc <STEPPER_go+0x1c>
    33c6:	10 92 4b 03 	sts	0x034B, r1
    33ca:	04 c0       	rjmp	.+8      	; 0x33d4 <STEPPER_go+0x24>
    33cc:	10 92 4b 03 	sts	0x034B, r1
    33d0:	10 92 4c 03 	sts	0x034C, r1
    33d4:	10 92 63 03 	sts	0x0363, r1
    33d8:	08 95       	ret

000033da <__STEPPER_init>:
    33da:	3a 9a       	sbi	0x07, 2	; 7
    33dc:	3b 9a       	sbi	0x07, 3	; 7
    33de:	3c 9a       	sbi	0x07, 4	; 7
    33e0:	3d 9a       	sbi	0x07, 5	; 7
    33e2:	3e 9a       	sbi	0x07, 6	; 7
    33e4:	3f 9a       	sbi	0x07, 7	; 7
    33e6:	88 b1       	in	r24, 0x08	; 8
    33e8:	83 70       	andi	r24, 0x03	; 3
    33ea:	88 b9       	out	0x08, r24	; 8
    33ec:	08 95       	ret

000033ee <STEPPER_set_steps>:
    33ee:	98 2f       	mov	r25, r24
    33f0:	81 e0       	ldi	r24, 0x01	; 1
    33f2:	80 93 63 03 	sts	0x0363, r24
    33f6:	91 30       	cpi	r25, 0x01	; 1
    33f8:	71 f0       	breq	.+28     	; 0x3416 <STEPPER_set_steps+0x28>
    33fa:	91 30       	cpi	r25, 0x01	; 1
    33fc:	18 f0       	brcs	.+6      	; 0x3404 <STEPPER_set_steps+0x16>
    33fe:	92 30       	cpi	r25, 0x02	; 2
    3400:	71 f4       	brne	.+28     	; 0x341e <STEPPER_set_steps+0x30>
    3402:	05 c0       	rjmp	.+10     	; 0x340e <STEPPER_set_steps+0x20>
    3404:	70 93 40 03 	sts	0x0340, r23
    3408:	60 93 3f 03 	sts	0x033F, r22
    340c:	08 c0       	rjmp	.+16     	; 0x341e <STEPPER_set_steps+0x30>
    340e:	70 93 40 03 	sts	0x0340, r23
    3412:	60 93 3f 03 	sts	0x033F, r22
    3416:	70 93 42 03 	sts	0x0342, r23
    341a:	60 93 41 03 	sts	0x0341, r22
    341e:	10 92 63 03 	sts	0x0363, r1
    3422:	08 95       	ret

00003424 <STEPPER_set_stop_mode>:
    3424:	98 2f       	mov	r25, r24
    3426:	81 e0       	ldi	r24, 0x01	; 1
    3428:	80 93 63 03 	sts	0x0363, r24
    342c:	91 30       	cpi	r25, 0x01	; 1
    342e:	51 f0       	breq	.+20     	; 0x3444 <STEPPER_set_stop_mode+0x20>
    3430:	91 30       	cpi	r25, 0x01	; 1
    3432:	18 f0       	brcs	.+6      	; 0x343a <STEPPER_set_stop_mode+0x16>
    3434:	92 30       	cpi	r25, 0x02	; 2
    3436:	41 f4       	brne	.+16     	; 0x3448 <STEPPER_set_stop_mode+0x24>
    3438:	03 c0       	rjmp	.+6      	; 0x3440 <STEPPER_set_stop_mode+0x1c>
    343a:	60 93 4d 03 	sts	0x034D, r22
    343e:	04 c0       	rjmp	.+8      	; 0x3448 <STEPPER_set_stop_mode+0x24>
    3440:	60 93 4d 03 	sts	0x034D, r22
    3444:	60 93 4e 03 	sts	0x034E, r22
    3448:	10 92 63 03 	sts	0x0363, r1
    344c:	08 95       	ret

0000344e <STEPPER_setup_decels>:
    344e:	0f 93       	push	r16
    3450:	1f 93       	push	r17
    3452:	cf 93       	push	r28
    3454:	df 93       	push	r29
    3456:	eb 01       	movw	r28, r22
    3458:	8a 01       	movw	r16, r20
    345a:	81 30       	cpi	r24, 0x01	; 1
    345c:	01 f1       	breq	.+64     	; 0x349e <STEPPER_setup_decels+0x50>
    345e:	81 30       	cpi	r24, 0x01	; 1
    3460:	18 f0       	brcs	.+6      	; 0x3468 <STEPPER_setup_decels+0x1a>
    3462:	82 30       	cpi	r24, 0x02	; 2
    3464:	61 f5       	brne	.+88     	; 0x34be <STEPPER_setup_decels+0x70>
    3466:	0d c0       	rjmp	.+26     	; 0x3482 <STEPPER_setup_decels+0x34>
    3468:	80 91 37 03 	lds	r24, 0x0337
    346c:	90 91 38 03 	lds	r25, 0x0338
    3470:	89 2b       	or	r24, r25
    3472:	11 f0       	breq	.+4      	; 0x3478 <STEPPER_setup_decels+0x2a>
    3474:	80 e0       	ldi	r24, 0x00	; 0
    3476:	1a c0       	rjmp	.+52     	; 0x34ac <STEPPER_setup_decels+0x5e>
    3478:	10 92 44 03 	sts	0x0344, r1
    347c:	10 92 43 03 	sts	0x0343, r1
    3480:	1e c0       	rjmp	.+60     	; 0x34be <STEPPER_setup_decels+0x70>
    3482:	80 91 37 03 	lds	r24, 0x0337
    3486:	90 91 38 03 	lds	r25, 0x0338
    348a:	89 2b       	or	r24, r25
    348c:	21 f0       	breq	.+8      	; 0x3496 <STEPPER_setup_decels+0x48>
    348e:	80 e0       	ldi	r24, 0x00	; 0
    3490:	0e 94 e0 1b 	call	0x37c0	; 0x37c0 <STEPPER_set_decel_step_values>
    3494:	04 c0       	rjmp	.+8      	; 0x349e <STEPPER_setup_decels+0x50>
    3496:	10 92 44 03 	sts	0x0344, r1
    349a:	10 92 43 03 	sts	0x0343, r1
    349e:	80 91 39 03 	lds	r24, 0x0339
    34a2:	90 91 3a 03 	lds	r25, 0x033A
    34a6:	89 2b       	or	r24, r25
    34a8:	31 f0       	breq	.+12     	; 0x34b6 <STEPPER_setup_decels+0x68>
    34aa:	81 e0       	ldi	r24, 0x01	; 1
    34ac:	be 01       	movw	r22, r28
    34ae:	a8 01       	movw	r20, r16
    34b0:	0e 94 e0 1b 	call	0x37c0	; 0x37c0 <STEPPER_set_decel_step_values>
    34b4:	04 c0       	rjmp	.+8      	; 0x34be <STEPPER_setup_decels+0x70>
    34b6:	10 92 46 03 	sts	0x0346, r1
    34ba:	10 92 45 03 	sts	0x0345, r1
    34be:	df 91       	pop	r29
    34c0:	cf 91       	pop	r28
    34c2:	1f 91       	pop	r17
    34c4:	0f 91       	pop	r16
    34c6:	08 95       	ret

000034c8 <SYS_init>:
    34c8:	10 92 66 03 	sts	0x0366, r1
    34cc:	10 92 67 03 	sts	0x0367, r1
    34d0:	10 92 6b 03 	sts	0x036B, r1
    34d4:	10 92 68 03 	sts	0x0368, r1
    34d8:	10 92 6a 03 	sts	0x036A, r1
    34dc:	10 92 6c 03 	sts	0x036C, r1
    34e0:	10 92 6d 03 	sts	0x036D, r1
    34e4:	10 92 6e 03 	sts	0x036E, r1
    34e8:	10 92 6f 03 	sts	0x036F, r1
    34ec:	10 92 70 03 	sts	0x0370, r1
    34f0:	10 92 71 03 	sts	0x0371, r1
    34f4:	10 92 72 03 	sts	0x0372, r1
    34f8:	10 92 73 03 	sts	0x0373, r1
    34fc:	10 92 74 03 	sts	0x0374, r1
    3500:	10 92 75 03 	sts	0x0375, r1
    3504:	10 92 76 03 	sts	0x0376, r1
    3508:	10 92 77 03 	sts	0x0377, r1
    350c:	08 95       	ret

0000350e <ATTINY_get_sensors>:
    350e:	0f 93       	push	r16
    3510:	1f 93       	push	r17
    3512:	81 e0       	ldi	r24, 0x01	; 1
    3514:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    3518:	81 30       	cpi	r24, 0x01	; 1
    351a:	11 f0       	breq	.+4      	; 0x3520 <ATTINY_get_sensors+0x12>
    351c:	00 e0       	ldi	r16, 0x00	; 0
    351e:	24 c0       	rjmp	.+72     	; 0x3568 <ATTINY_get_sensors+0x5a>
    3520:	87 e0       	ldi	r24, 0x07	; 7
    3522:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <SPI_set_slave_addr>
    3526:	82 e0       	ldi	r24, 0x02	; 2
    3528:	6a e0       	ldi	r22, 0x0A	; 10
    352a:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <SPI_transmit>
    352e:	82 e0       	ldi	r24, 0x02	; 2
    3530:	62 eb       	ldi	r22, 0xB2	; 178
    3532:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <SPI_transmit>
    3536:	18 ec       	ldi	r17, 0xC8	; 200
    3538:	81 2f       	mov	r24, r17
    353a:	8a 95       	dec	r24
    353c:	f1 f7       	brne	.-4      	; 0x353a <ATTINY_get_sensors+0x2c>
    353e:	82 e0       	ldi	r24, 0x02	; 2
    3540:	60 e0       	ldi	r22, 0x00	; 0
    3542:	0e 94 9b 1b 	call	0x3736	; 0x3736 <SPI_receive>
    3546:	08 2f       	mov	r16, r24
    3548:	81 2f       	mov	r24, r17
    354a:	8a 95       	dec	r24
    354c:	f1 f7       	brne	.-4      	; 0x354a <ATTINY_get_sensors+0x3c>
    354e:	82 e0       	ldi	r24, 0x02	; 2
    3550:	60 e0       	ldi	r22, 0x00	; 0
    3552:	0e 94 9b 1b 	call	0x3736	; 0x3736 <SPI_receive>
    3556:	1a 95       	dec	r17
    3558:	f1 f7       	brne	.-4      	; 0x3556 <ATTINY_get_sensors+0x48>
    355a:	87 e0       	ldi	r24, 0x07	; 7
    355c:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <SPI_set_slave_addr>
    3560:	88 e8       	ldi	r24, 0x88	; 136
    3562:	93 e1       	ldi	r25, 0x13	; 19
    3564:	01 97       	sbiw	r24, 0x01	; 1
    3566:	f1 f7       	brne	.-4      	; 0x3564 <ATTINY_get_sensors+0x56>
    3568:	80 2f       	mov	r24, r16
    356a:	1f 91       	pop	r17
    356c:	0f 91       	pop	r16
    356e:	08 95       	ret

00003570 <TMRSRVC_insert>:
    3570:	cf 92       	push	r12
    3572:	df 92       	push	r13
    3574:	ef 92       	push	r14
    3576:	ff 92       	push	r15
    3578:	0f 93       	push	r16
    357a:	1f 93       	push	r17
    357c:	cf 93       	push	r28
    357e:	df 93       	push	r29
    3580:	ec 01       	movw	r28, r24
    3582:	80 91 9d 03 	lds	r24, 0x039D
    3586:	88 23       	and	r24, r24
    3588:	39 f4       	brne	.+14     	; 0x3598 <TMRSRVC_insert+0x28>
    358a:	d0 93 9f 03 	sts	0x039F, r29
    358e:	c0 93 9e 03 	sts	0x039E, r28
    3592:	0e 94 46 1b 	call	0x368c	; 0x368c <TMRSRVC_start>
    3596:	47 c0       	rjmp	.+142    	; 0x3626 <TMRSRVC_insert+0xb6>
    3598:	c0 90 9e 03 	lds	r12, 0x039E
    359c:	d0 90 9f 03 	lds	r13, 0x039F
    35a0:	00 e0       	ldi	r16, 0x00	; 0
    35a2:	10 e0       	ldi	r17, 0x00	; 0
    35a4:	ee 24       	eor	r14, r14
    35a6:	ff 24       	eor	r15, r15
    35a8:	37 c0       	rjmp	.+110    	; 0x3618 <TMRSRVC_insert+0xa8>
    35aa:	a8 81       	ld	r26, Y
    35ac:	b9 81       	ldd	r27, Y+1	; 0x01
    35ae:	fd 01       	movw	r30, r26
    35b0:	64 81       	ldd	r22, Z+4	; 0x04
    35b2:	75 81       	ldd	r23, Z+5	; 0x05
    35b4:	f6 01       	movw	r30, r12
    35b6:	40 81       	ld	r20, Z
    35b8:	51 81       	ldd	r21, Z+1	; 0x01
    35ba:	fa 01       	movw	r30, r20
    35bc:	84 81       	ldd	r24, Z+4	; 0x04
    35be:	95 81       	ldd	r25, Z+5	; 0x05
    35c0:	9b 01       	movw	r18, r22
    35c2:	28 1b       	sub	r18, r24
    35c4:	39 0b       	sbc	r19, r25
    35c6:	37 ff       	sbrs	r19, 7
    35c8:	0f c0       	rjmp	.+30     	; 0x35e8 <TMRSRVC_insert+0x78>
    35ca:	86 1b       	sub	r24, r22
    35cc:	97 0b       	sbc	r25, r23
    35ce:	95 83       	std	Z+5, r25	; 0x05
    35d0:	84 83       	std	Z+4, r24	; 0x04
    35d2:	db 82       	std	Y+3, r13	; 0x03
    35d4:	ca 82       	std	Y+2, r12	; 0x02
    35d6:	01 2b       	or	r16, r17
    35d8:	29 f4       	brne	.+10     	; 0x35e4 <TMRSRVC_insert+0x74>
    35da:	d0 93 9f 03 	sts	0x039F, r29
    35de:	c0 93 9e 03 	sts	0x039E, r28
    35e2:	21 c0       	rjmp	.+66     	; 0x3626 <TMRSRVC_insert+0xb6>
    35e4:	f7 01       	movw	r30, r14
    35e6:	0c c0       	rjmp	.+24     	; 0x3600 <TMRSRVC_insert+0x90>
    35e8:	f6 01       	movw	r30, r12
    35ea:	82 81       	ldd	r24, Z+2	; 0x02
    35ec:	93 81       	ldd	r25, Z+3	; 0x03
    35ee:	21 15       	cp	r18, r1
    35f0:	31 05       	cpc	r19, r1
    35f2:	49 f4       	brne	.+18     	; 0x3606 <TMRSRVC_insert+0x96>
    35f4:	fd 01       	movw	r30, r26
    35f6:	15 82       	std	Z+5, r1	; 0x05
    35f8:	14 82       	std	Z+4, r1	; 0x04
    35fa:	9b 83       	std	Y+3, r25	; 0x03
    35fc:	8a 83       	std	Y+2, r24	; 0x02
    35fe:	f6 01       	movw	r30, r12
    3600:	d3 83       	std	Z+3, r29	; 0x03
    3602:	c2 83       	std	Z+2, r28	; 0x02
    3604:	10 c0       	rjmp	.+32     	; 0x3626 <TMRSRVC_insert+0xb6>
    3606:	fd 01       	movw	r30, r26
    3608:	35 83       	std	Z+5, r19	; 0x05
    360a:	24 83       	std	Z+4, r18	; 0x04
    360c:	00 97       	sbiw	r24, 0x00	; 0
    360e:	b9 f3       	breq	.-18     	; 0x35fe <TMRSRVC_insert+0x8e>
    3610:	0f 5f       	subi	r16, 0xFF	; 255
    3612:	1f 4f       	sbci	r17, 0xFF	; 255
    3614:	76 01       	movw	r14, r12
    3616:	6c 01       	movw	r12, r24
    3618:	80 91 9d 03 	lds	r24, 0x039D
    361c:	90 e0       	ldi	r25, 0x00	; 0
    361e:	08 17       	cp	r16, r24
    3620:	19 07       	cpc	r17, r25
    3622:	18 f2       	brcs	.-122    	; 0x35aa <TMRSRVC_insert+0x3a>
    3624:	ec cf       	rjmp	.-40     	; 0x35fe <TMRSRVC_insert+0x8e>
    3626:	80 91 9d 03 	lds	r24, 0x039D
    362a:	8f 5f       	subi	r24, 0xFF	; 255
    362c:	80 93 9d 03 	sts	0x039D, r24
    3630:	df 91       	pop	r29
    3632:	cf 91       	pop	r28
    3634:	1f 91       	pop	r17
    3636:	0f 91       	pop	r16
    3638:	ff 90       	pop	r15
    363a:	ef 90       	pop	r14
    363c:	df 90       	pop	r13
    363e:	cf 90       	pop	r12
    3640:	08 95       	ret

00003642 <TMRSRVC_open>:
    3642:	88 e0       	ldi	r24, 0x08	; 8
    3644:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    3648:	88 23       	and	r24, r24
    364a:	b9 f4       	brne	.+46     	; 0x367a <TMRSRVC_open+0x38>
    364c:	10 92 9d 03 	sts	0x039D, r1
    3650:	10 92 9f 03 	sts	0x039F, r1
    3654:	10 92 9e 03 	sts	0x039E, r1
    3658:	10 92 80 02 	sts	0x0280, r1
    365c:	10 92 81 02 	sts	0x0281, r1
    3660:	80 e1       	ldi	r24, 0x10	; 16
    3662:	6d e4       	ldi	r22, 0x4D	; 77
    3664:	7c e1       	ldi	r23, 0x1C	; 28
    3666:	0e 94 57 1b 	call	0x36ae	; 0x36ae <__ISR_attach>
    366a:	0e 94 54 1c 	call	0x38a8	; 0x38a8 <__TMRSRVC_init>
    366e:	0e 94 40 1b 	call	0x3680	; 0x3680 <__TMRSRVC_start>
    3672:	88 e0       	ldi	r24, 0x08	; 8
    3674:	61 e0       	ldi	r22, 0x01	; 1
    3676:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <SYS_set_state>
    367a:	88 e0       	ldi	r24, 0x08	; 8
    367c:	91 e0       	ldi	r25, 0x01	; 1
    367e:	08 95       	ret

00003680 <__TMRSRVC_start>:
    3680:	ee e6       	ldi	r30, 0x6E	; 110
    3682:	f0 e0       	ldi	r31, 0x00	; 0
    3684:	80 81       	ld	r24, Z
    3686:	82 60       	ori	r24, 0x02	; 2
    3688:	80 83       	st	Z, r24
    368a:	08 95       	ret

0000368c <TMRSRVC_start>:
    368c:	81 e0       	ldi	r24, 0x01	; 1
    368e:	80 93 81 02 	sts	0x0281, r24
    3692:	08 95       	ret

00003694 <I2C_enable>:
    3694:	80 91 a0 03 	lds	r24, 0x03A0
    3698:	81 30       	cpi	r24, 0x01	; 1
    369a:	29 f4       	brne	.+10     	; 0x36a6 <I2C_enable+0x12>
    369c:	80 91 bc 00 	lds	r24, 0x00BC
    36a0:	84 60       	ori	r24, 0x04	; 4
    36a2:	80 93 bc 00 	sts	0x00BC, r24
    36a6:	08 95       	ret

000036a8 <__I2C_init>:
    36a8:	38 98       	cbi	0x07, 0	; 7
    36aa:	39 98       	cbi	0x07, 1	; 7
    36ac:	08 95       	ret

000036ae <__ISR_attach>:
    36ae:	80 32       	cpi	r24, 0x20	; 32
    36b0:	18 f0       	brcs	.+6      	; 0x36b8 <__ISR_attach+0xa>
    36b2:	20 e0       	ldi	r18, 0x00	; 0
    36b4:	30 e0       	ldi	r19, 0x00	; 0
    36b6:	0a c0       	rjmp	.+20     	; 0x36cc <__ISR_attach+0x1e>
    36b8:	e8 2f       	mov	r30, r24
    36ba:	f0 e0       	ldi	r31, 0x00	; 0
    36bc:	ee 0f       	add	r30, r30
    36be:	ff 1f       	adc	r31, r31
    36c0:	e0 5e       	subi	r30, 0xE0	; 224
    36c2:	fd 4f       	sbci	r31, 0xFD	; 253
    36c4:	20 81       	ld	r18, Z
    36c6:	31 81       	ldd	r19, Z+1	; 0x01
    36c8:	71 83       	std	Z+1, r23	; 0x01
    36ca:	60 83       	st	Z, r22
    36cc:	c9 01       	movw	r24, r18
    36ce:	08 95       	ret

000036d0 <__ATMEGA_init>:
    36d0:	24 9a       	sbi	0x04, 4	; 4
    36d2:	2c 9a       	sbi	0x05, 4	; 5
    36d4:	08 95       	ret

000036d6 <SPI_default_config>:
    36d6:	83 e5       	ldi	r24, 0x53	; 83
    36d8:	8c bd       	out	0x2c, r24	; 44
    36da:	81 e0       	ldi	r24, 0x01	; 1
    36dc:	8d bd       	out	0x2d, r24	; 45
    36de:	8d e0       	ldi	r24, 0x0D	; 13
    36e0:	8a 95       	dec	r24
    36e2:	f1 f7       	brne	.-4      	; 0x36e0 <SPI_default_config+0xa>
    36e4:	08 95       	ret

000036e6 <SPI_ATtiny0_config>:
    36e6:	83 e5       	ldi	r24, 0x53	; 83
    36e8:	8c bd       	out	0x2c, r24	; 44
    36ea:	1d bc       	out	0x2d, r1	; 45
    36ec:	84 ef       	ldi	r24, 0xF4	; 244
    36ee:	91 e0       	ldi	r25, 0x01	; 1
    36f0:	01 97       	sbiw	r24, 0x01	; 1
    36f2:	f1 f7       	brne	.-4      	; 0x36f0 <SPI_ATtiny0_config+0xa>
    36f4:	08 95       	ret

000036f6 <SPI_PSXC_config>:
    36f6:	8f e7       	ldi	r24, 0x7F	; 127
    36f8:	8c bd       	out	0x2c, r24	; 44
    36fa:	1d bc       	out	0x2d, r1	; 45
    36fc:	84 ef       	ldi	r24, 0xF4	; 244
    36fe:	91 e0       	ldi	r25, 0x01	; 1
    3700:	01 97       	sbiw	r24, 0x01	; 1
    3702:	f1 f7       	brne	.-4      	; 0x3700 <SPI_PSXC_config+0xa>
    3704:	08 95       	ret

00003706 <SPI_LCD_config>:
    3706:	83 e5       	ldi	r24, 0x53	; 83
    3708:	8c bd       	out	0x2c, r24	; 44
    370a:	81 e0       	ldi	r24, 0x01	; 1
    370c:	8d bd       	out	0x2d, r24	; 45
    370e:	8d e0       	ldi	r24, 0x0D	; 13
    3710:	8a 95       	dec	r24
    3712:	f1 f7       	brne	.-4      	; 0x3710 <SPI_LCD_config+0xa>
    3714:	08 95       	ret

00003716 <SPI_FLASH_config>:
    3716:	83 e5       	ldi	r24, 0x53	; 83
    3718:	8c bd       	out	0x2c, r24	; 44
    371a:	81 e0       	ldi	r24, 0x01	; 1
    371c:	8d bd       	out	0x2d, r24	; 45
    371e:	84 ef       	ldi	r24, 0xF4	; 244
    3720:	91 e0       	ldi	r25, 0x01	; 1
    3722:	01 97       	sbiw	r24, 0x01	; 1
    3724:	f1 f7       	brne	.-4      	; 0x3722 <SPI_FLASH_config+0xc>
    3726:	08 95       	ret

00003728 <__SPI_init>:
    3728:	25 9a       	sbi	0x04, 5	; 4
    372a:	26 98       	cbi	0x04, 6	; 4
    372c:	27 9a       	sbi	0x04, 7	; 4
    372e:	20 9a       	sbi	0x04, 0	; 4
    3730:	21 9a       	sbi	0x04, 1	; 4
    3732:	22 9a       	sbi	0x04, 2	; 4
    3734:	08 95       	ret

00003736 <SPI_receive>:
    3736:	1f 93       	push	r17
    3738:	16 2f       	mov	r17, r22
    373a:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <SPI_set_slave_addr>
    373e:	82 e0       	ldi	r24, 0x02	; 2
    3740:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    3744:	81 30       	cpi	r24, 0x01	; 1
    3746:	11 f0       	breq	.+4      	; 0x374c <SPI_receive+0x16>
    3748:	80 e0       	ldi	r24, 0x00	; 0
    374a:	05 c0       	rjmp	.+10     	; 0x3756 <SPI_receive+0x20>
    374c:	1e bd       	out	0x2e, r17	; 46
    374e:	0d b4       	in	r0, 0x2d	; 45
    3750:	07 fe       	sbrs	r0, 7
    3752:	fd cf       	rjmp	.-6      	; 0x374e <SPI_receive+0x18>
    3754:	8e b5       	in	r24, 0x2e	; 46
    3756:	1f 91       	pop	r17
    3758:	08 95       	ret

0000375a <SPKR_beep>:
    375a:	9b 01       	movw	r18, r22
    375c:	ac 01       	movw	r20, r24
    375e:	80 91 71 02 	lds	r24, 0x0271
    3762:	88 23       	and	r24, r24
    3764:	81 f0       	breq	.+32     	; 0x3786 <SPKR_beep+0x2c>
    3766:	da 01       	movw	r26, r20
    3768:	c9 01       	movw	r24, r18
    376a:	88 0f       	add	r24, r24
    376c:	99 1f       	adc	r25, r25
    376e:	aa 1f       	adc	r26, r26
    3770:	bb 1f       	adc	r27, r27
    3772:	90 93 7d 02 	sts	0x027D, r25
    3776:	80 93 7c 02 	sts	0x027C, r24
    377a:	21 15       	cp	r18, r1
    377c:	31 05       	cpc	r19, r1
    377e:	41 05       	cpc	r20, r1
    3780:	51 05       	cpc	r21, r1
    3782:	09 f4       	brne	.+2      	; 0x3786 <SPKR_beep+0x2c>
    3784:	5f 98       	cbi	0x0b, 7	; 11
    3786:	08 95       	ret

00003788 <__SPKR_close>:
    3788:	82 30       	cpi	r24, 0x02	; 2
    378a:	29 f4       	brne	.+10     	; 0x3796 <__SPKR_close+0xe>
    378c:	80 91 81 00 	lds	r24, 0x0081
    3790:	8e 7f       	andi	r24, 0xFE	; 254
    3792:	80 93 81 00 	sts	0x0081, r24
    3796:	80 91 70 02 	lds	r24, 0x0270
    379a:	81 30       	cpi	r24, 0x01	; 1
    379c:	31 f4       	brne	.+12     	; 0x37aa <__SPKR_close+0x22>
    379e:	80 91 71 02 	lds	r24, 0x0271
    37a2:	81 30       	cpi	r24, 0x01	; 1
    37a4:	11 f4       	brne	.+4      	; 0x37aa <__SPKR_close+0x22>
    37a6:	00 00       	nop
    37a8:	08 95       	ret
    37aa:	80 91 70 02 	lds	r24, 0x0270
    37ae:	81 30       	cpi	r24, 0x01	; 1
    37b0:	21 f0       	breq	.+8      	; 0x37ba <__SPKR_close+0x32>
    37b2:	80 91 71 02 	lds	r24, 0x0271
    37b6:	81 30       	cpi	r24, 0x01	; 1
    37b8:	11 f4       	brne	.+4      	; 0x37be <__SPKR_close+0x36>
    37ba:	5f 98       	cbi	0x0b, 7	; 11
    37bc:	57 98       	cbi	0x0a, 7	; 10
    37be:	08 95       	ret

000037c0 <STEPPER_set_decel_step_values>:
    37c0:	ef 92       	push	r14
    37c2:	ff 92       	push	r15
    37c4:	0f 93       	push	r16
    37c6:	1f 93       	push	r17
    37c8:	cf 93       	push	r28
    37ca:	df 93       	push	r29
    37cc:	eb 01       	movw	r28, r22
    37ce:	88 23       	and	r24, r24
    37d0:	21 f0       	breq	.+8      	; 0x37da <STEPPER_set_decel_step_values+0x1a>
    37d2:	81 30       	cpi	r24, 0x01	; 1
    37d4:	09 f0       	breq	.+2      	; 0x37d8 <STEPPER_set_decel_step_values+0x18>
    37d6:	5a c0       	rjmp	.+180    	; 0x388c <STEPPER_set_decel_step_values+0xcc>
    37d8:	2d c0       	rjmp	.+90     	; 0x3834 <STEPPER_set_decel_step_values+0x74>
    37da:	9a 01       	movw	r18, r20
    37dc:	40 e0       	ldi	r20, 0x00	; 0
    37de:	50 e0       	ldi	r21, 0x00	; 0
    37e0:	ca 01       	movw	r24, r20
    37e2:	b9 01       	movw	r22, r18
    37e4:	0e 94 37 27 	call	0x4e6e	; 0x4e6e <__mulsi3>
    37e8:	20 91 37 03 	lds	r18, 0x0337
    37ec:	30 91 38 03 	lds	r19, 0x0338
    37f0:	22 0f       	add	r18, r18
    37f2:	33 1f       	adc	r19, r19
    37f4:	40 e0       	ldi	r20, 0x00	; 0
    37f6:	50 e0       	ldi	r21, 0x00	; 0
    37f8:	0e 94 69 27 	call	0x4ed2	; 0x4ed2 <__udivmodsi4>
    37fc:	79 01       	movw	r14, r18
    37fe:	8a 01       	movw	r16, r20
    3800:	a8 01       	movw	r20, r16
    3802:	97 01       	movw	r18, r14
    3804:	22 0f       	add	r18, r18
    3806:	33 1f       	adc	r19, r19
    3808:	44 1f       	adc	r20, r20
    380a:	55 1f       	adc	r21, r21
    380c:	ce 01       	movw	r24, r28
    380e:	a0 e0       	ldi	r26, 0x00	; 0
    3810:	b0 e0       	ldi	r27, 0x00	; 0
    3812:	82 17       	cp	r24, r18
    3814:	93 07       	cpc	r25, r19
    3816:	a4 07       	cpc	r26, r20
    3818:	b5 07       	cpc	r27, r21
    381a:	28 f0       	brcs	.+10     	; 0x3826 <STEPPER_set_decel_step_values+0x66>
    381c:	f0 92 44 03 	sts	0x0344, r15
    3820:	e0 92 43 03 	sts	0x0343, r14
    3824:	33 c0       	rjmp	.+102    	; 0x388c <STEPPER_set_decel_step_values+0xcc>
    3826:	d6 95       	lsr	r29
    3828:	c7 95       	ror	r28
    382a:	d0 93 44 03 	sts	0x0344, r29
    382e:	c0 93 43 03 	sts	0x0343, r28
    3832:	2c c0       	rjmp	.+88     	; 0x388c <STEPPER_set_decel_step_values+0xcc>
    3834:	9a 01       	movw	r18, r20
    3836:	40 e0       	ldi	r20, 0x00	; 0
    3838:	50 e0       	ldi	r21, 0x00	; 0
    383a:	ca 01       	movw	r24, r20
    383c:	b9 01       	movw	r22, r18
    383e:	0e 94 37 27 	call	0x4e6e	; 0x4e6e <__mulsi3>
    3842:	20 91 39 03 	lds	r18, 0x0339
    3846:	30 91 3a 03 	lds	r19, 0x033A
    384a:	22 0f       	add	r18, r18
    384c:	33 1f       	adc	r19, r19
    384e:	40 e0       	ldi	r20, 0x00	; 0
    3850:	50 e0       	ldi	r21, 0x00	; 0
    3852:	0e 94 69 27 	call	0x4ed2	; 0x4ed2 <__udivmodsi4>
    3856:	79 01       	movw	r14, r18
    3858:	8a 01       	movw	r16, r20
    385a:	a8 01       	movw	r20, r16
    385c:	97 01       	movw	r18, r14
    385e:	22 0f       	add	r18, r18
    3860:	33 1f       	adc	r19, r19
    3862:	44 1f       	adc	r20, r20
    3864:	55 1f       	adc	r21, r21
    3866:	ce 01       	movw	r24, r28
    3868:	a0 e0       	ldi	r26, 0x00	; 0
    386a:	b0 e0       	ldi	r27, 0x00	; 0
    386c:	82 17       	cp	r24, r18
    386e:	93 07       	cpc	r25, r19
    3870:	a4 07       	cpc	r26, r20
    3872:	b5 07       	cpc	r27, r21
    3874:	28 f0       	brcs	.+10     	; 0x3880 <STEPPER_set_decel_step_values+0xc0>
    3876:	f0 92 46 03 	sts	0x0346, r15
    387a:	e0 92 45 03 	sts	0x0345, r14
    387e:	06 c0       	rjmp	.+12     	; 0x388c <STEPPER_set_decel_step_values+0xcc>
    3880:	d6 95       	lsr	r29
    3882:	c7 95       	ror	r28
    3884:	d0 93 46 03 	sts	0x0346, r29
    3888:	c0 93 45 03 	sts	0x0345, r28
    388c:	df 91       	pop	r29
    388e:	cf 91       	pop	r28
    3890:	1f 91       	pop	r17
    3892:	0f 91       	pop	r16
    3894:	ff 90       	pop	r15
    3896:	ef 90       	pop	r14
    3898:	08 95       	ret

0000389a <__TIMER0_COMPA_vect>:
    389a:	0e 94 5d 1c 	call	0x38ba	; 0x38ba <TMRSRVC_tick>
    389e:	0e 94 9d 1c 	call	0x393a	; 0x393a <STEPPER_clk>
    38a2:	0e 94 76 1c 	call	0x38ec	; 0x38ec <SPKR_beep_clk>
    38a6:	08 95       	ret

000038a8 <__TMRSRVC_init>:
    38a8:	84 b5       	in	r24, 0x24	; 36
    38aa:	82 60       	ori	r24, 0x02	; 2
    38ac:	84 bd       	out	0x24, r24	; 36
    38ae:	85 b5       	in	r24, 0x25	; 37
    38b0:	84 60       	ori	r24, 0x04	; 4
    38b2:	85 bd       	out	0x25, r24	; 37
    38b4:	8e e4       	ldi	r24, 0x4E	; 78
    38b6:	87 bd       	out	0x27, r24	; 39
    38b8:	08 95       	ret

000038ba <TMRSRVC_tick>:
    38ba:	88 e0       	ldi	r24, 0x08	; 8
    38bc:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    38c0:	88 23       	and	r24, r24
    38c2:	11 f4       	brne	.+4      	; 0x38c8 <TMRSRVC_tick+0xe>
    38c4:	84 e0       	ldi	r24, 0x04	; 4
    38c6:	08 95       	ret
    38c8:	80 91 81 02 	lds	r24, 0x0281
    38cc:	88 23       	and	r24, r24
    38ce:	11 f4       	brne	.+4      	; 0x38d4 <TMRSRVC_tick+0x1a>
    38d0:	83 e0       	ldi	r24, 0x03	; 3
    38d2:	08 95       	ret
    38d4:	80 91 80 02 	lds	r24, 0x0280
    38d8:	88 23       	and	r24, r24
    38da:	11 f0       	breq	.+4      	; 0x38e0 <TMRSRVC_tick+0x26>
    38dc:	82 e0       	ldi	r24, 0x02	; 2
    38de:	08 95       	ret
    38e0:	0e 94 0f 1f 	call	0x3e1e	; 0x3e1e <TMRSRVC_process>
    38e4:	81 30       	cpi	r24, 0x01	; 1
    38e6:	e1 f3       	breq	.-8      	; 0x38e0 <TMRSRVC_tick+0x26>
    38e8:	80 e0       	ldi	r24, 0x00	; 0
    38ea:	08 95       	ret

000038ec <SPKR_beep_clk>:
    38ec:	80 91 71 02 	lds	r24, 0x0271
    38f0:	81 30       	cpi	r24, 0x01	; 1
    38f2:	11 f5       	brne	.+68     	; 0x3938 <SPKR_beep_clk+0x4c>
    38f4:	80 91 7a 02 	lds	r24, 0x027A
    38f8:	90 91 7b 02 	lds	r25, 0x027B
    38fc:	20 91 7c 02 	lds	r18, 0x027C
    3900:	30 91 7d 02 	lds	r19, 0x027D
    3904:	28 0f       	add	r18, r24
    3906:	39 1f       	adc	r19, r25
    3908:	30 93 7b 02 	sts	0x027B, r19
    390c:	20 93 7a 02 	sts	0x027A, r18
    3910:	80 91 7a 02 	lds	r24, 0x027A
    3914:	90 91 7b 02 	lds	r25, 0x027B
    3918:	88 5e       	subi	r24, 0xE8	; 232
    391a:	93 40       	sbci	r25, 0x03	; 3
    391c:	6c f0       	brlt	.+26     	; 0x3938 <SPKR_beep_clk+0x4c>
    391e:	8b b1       	in	r24, 0x0b	; 11
    3920:	80 58       	subi	r24, 0x80	; 128
    3922:	8b b9       	out	0x0b, r24	; 11
    3924:	80 91 7a 02 	lds	r24, 0x027A
    3928:	90 91 7b 02 	lds	r25, 0x027B
    392c:	88 5e       	subi	r24, 0xE8	; 232
    392e:	93 40       	sbci	r25, 0x03	; 3
    3930:	90 93 7b 02 	sts	0x027B, r25
    3934:	80 93 7a 02 	sts	0x027A, r24
    3938:	08 95       	ret

0000393a <STEPPER_clk>:
    393a:	87 e0       	ldi	r24, 0x07	; 7
    393c:	0e 94 9c 12 	call	0x2538	; 0x2538 <SYS_get_state>
    3940:	81 30       	cpi	r24, 0x01	; 1
    3942:	09 f0       	breq	.+2      	; 0x3946 <STEPPER_clk+0xc>
    3944:	aa c0       	rjmp	.+340    	; 0x3a9a <STEPPER_clk+0x160>
    3946:	80 91 37 03 	lds	r24, 0x0337
    394a:	90 91 38 03 	lds	r25, 0x0338
    394e:	89 2b       	or	r24, r25
    3950:	09 f1       	breq	.+66     	; 0x3994 <STEPPER_clk+0x5a>
    3952:	80 91 5b 03 	lds	r24, 0x035B
    3956:	90 91 5c 03 	lds	r25, 0x035C
    395a:	20 91 37 03 	lds	r18, 0x0337
    395e:	30 91 38 03 	lds	r19, 0x0338
    3962:	82 0f       	add	r24, r18
    3964:	93 1f       	adc	r25, r19
    3966:	90 93 5c 03 	sts	0x035C, r25
    396a:	80 93 5b 03 	sts	0x035B, r24
    396e:	80 91 5b 03 	lds	r24, 0x035B
    3972:	90 91 5c 03 	lds	r25, 0x035C
    3976:	88 5e       	subi	r24, 0xE8	; 232
    3978:	93 40       	sbci	r25, 0x03	; 3
    397a:	a4 f0       	brlt	.+40     	; 0x39a4 <STEPPER_clk+0x6a>
    397c:	80 91 5b 03 	lds	r24, 0x035B
    3980:	90 91 5c 03 	lds	r25, 0x035C
    3984:	88 5e       	subi	r24, 0xE8	; 232
    3986:	93 40       	sbci	r25, 0x03	; 3
    3988:	90 93 5c 03 	sts	0x035C, r25
    398c:	80 93 5b 03 	sts	0x035B, r24
    3990:	41 e0       	ldi	r20, 0x01	; 1
    3992:	09 c0       	rjmp	.+18     	; 0x39a6 <STEPPER_clk+0x6c>
    3994:	80 91 2f 03 	lds	r24, 0x032F
    3998:	90 91 30 03 	lds	r25, 0x0330
    399c:	90 93 34 03 	sts	0x0334, r25
    39a0:	80 93 33 03 	sts	0x0333, r24
    39a4:	40 e0       	ldi	r20, 0x00	; 0
    39a6:	80 91 39 03 	lds	r24, 0x0339
    39aa:	90 91 3a 03 	lds	r25, 0x033A
    39ae:	89 2b       	or	r24, r25
    39b0:	09 f1       	breq	.+66     	; 0x39f4 <STEPPER_clk+0xba>
    39b2:	80 91 5d 03 	lds	r24, 0x035D
    39b6:	90 91 5e 03 	lds	r25, 0x035E
    39ba:	20 91 39 03 	lds	r18, 0x0339
    39be:	30 91 3a 03 	lds	r19, 0x033A
    39c2:	82 0f       	add	r24, r18
    39c4:	93 1f       	adc	r25, r19
    39c6:	90 93 5e 03 	sts	0x035E, r25
    39ca:	80 93 5d 03 	sts	0x035D, r24
    39ce:	80 91 5d 03 	lds	r24, 0x035D
    39d2:	90 91 5e 03 	lds	r25, 0x035E
    39d6:	88 5e       	subi	r24, 0xE8	; 232
    39d8:	93 40       	sbci	r25, 0x03	; 3
    39da:	a4 f0       	brlt	.+40     	; 0x3a04 <STEPPER_clk+0xca>
    39dc:	80 91 5d 03 	lds	r24, 0x035D
    39e0:	90 91 5e 03 	lds	r25, 0x035E
    39e4:	88 5e       	subi	r24, 0xE8	; 232
    39e6:	93 40       	sbci	r25, 0x03	; 3
    39e8:	90 93 5e 03 	sts	0x035E, r25
    39ec:	80 93 5d 03 	sts	0x035D, r24
    39f0:	61 e0       	ldi	r22, 0x01	; 1
    39f2:	09 c0       	rjmp	.+18     	; 0x3a06 <STEPPER_clk+0xcc>
    39f4:	80 91 31 03 	lds	r24, 0x0331
    39f8:	90 91 32 03 	lds	r25, 0x0332
    39fc:	90 93 36 03 	sts	0x0336, r25
    3a00:	80 93 35 03 	sts	0x0335, r24
    3a04:	60 e0       	ldi	r22, 0x00	; 0
    3a06:	84 2f       	mov	r24, r20
    3a08:	0e 94 4e 1d 	call	0x3a9c	; 0x3a9c <STEPPER_process_accel>
    3a0c:	80 91 57 03 	lds	r24, 0x0357
    3a10:	90 91 58 03 	lds	r25, 0x0358
    3a14:	20 91 33 03 	lds	r18, 0x0333
    3a18:	30 91 34 03 	lds	r19, 0x0334
    3a1c:	28 0f       	add	r18, r24
    3a1e:	39 1f       	adc	r19, r25
    3a20:	30 93 58 03 	sts	0x0358, r19
    3a24:	20 93 57 03 	sts	0x0357, r18
    3a28:	80 91 57 03 	lds	r24, 0x0357
    3a2c:	90 91 58 03 	lds	r25, 0x0358
    3a30:	88 5e       	subi	r24, 0xE8	; 232
    3a32:	93 40       	sbci	r25, 0x03	; 3
    3a34:	14 f4       	brge	.+4      	; 0x3a3a <STEPPER_clk+0x100>
    3a36:	40 e0       	ldi	r20, 0x00	; 0
    3a38:	0b c0       	rjmp	.+22     	; 0x3a50 <STEPPER_clk+0x116>
    3a3a:	80 91 57 03 	lds	r24, 0x0357
    3a3e:	90 91 58 03 	lds	r25, 0x0358
    3a42:	88 5e       	subi	r24, 0xE8	; 232
    3a44:	93 40       	sbci	r25, 0x03	; 3
    3a46:	90 93 58 03 	sts	0x0358, r25
    3a4a:	80 93 57 03 	sts	0x0357, r24
    3a4e:	41 e0       	ldi	r20, 0x01	; 1
    3a50:	80 91 59 03 	lds	r24, 0x0359
    3a54:	90 91 5a 03 	lds	r25, 0x035A
    3a58:	20 91 35 03 	lds	r18, 0x0335
    3a5c:	30 91 36 03 	lds	r19, 0x0336
    3a60:	28 0f       	add	r18, r24
    3a62:	39 1f       	adc	r19, r25
    3a64:	30 93 5a 03 	sts	0x035A, r19
    3a68:	20 93 59 03 	sts	0x0359, r18
    3a6c:	80 91 59 03 	lds	r24, 0x0359
    3a70:	90 91 5a 03 	lds	r25, 0x035A
    3a74:	88 5e       	subi	r24, 0xE8	; 232
    3a76:	93 40       	sbci	r25, 0x03	; 3
    3a78:	14 f4       	brge	.+4      	; 0x3a7e <STEPPER_clk+0x144>
    3a7a:	60 e0       	ldi	r22, 0x00	; 0
    3a7c:	0b c0       	rjmp	.+22     	; 0x3a94 <STEPPER_clk+0x15a>
    3a7e:	80 91 59 03 	lds	r24, 0x0359
    3a82:	90 91 5a 03 	lds	r25, 0x035A
    3a86:	88 5e       	subi	r24, 0xE8	; 232
    3a88:	93 40       	sbci	r25, 0x03	; 3
    3a8a:	90 93 5a 03 	sts	0x035A, r25
    3a8e:	80 93 59 03 	sts	0x0359, r24
    3a92:	61 e0       	ldi	r22, 0x01	; 1
    3a94:	84 2f       	mov	r24, r20
    3a96:	0e 94 93 1d 	call	0x3b26	; 0x3b26 <STEPPER_process_run_mode>
    3a9a:	08 95       	ret

00003a9c <STEPPER_process_accel>:
    3a9c:	88 23       	and	r24, r24
    3a9e:	f1 f0       	breq	.+60     	; 0x3adc <STEPPER_process_accel+0x40>
    3aa0:	20 91 2f 03 	lds	r18, 0x032F
    3aa4:	30 91 30 03 	lds	r19, 0x0330
    3aa8:	80 91 33 03 	lds	r24, 0x0333
    3aac:	90 91 34 03 	lds	r25, 0x0334
    3ab0:	28 1b       	sub	r18, r24
    3ab2:	39 0b       	sbc	r19, r25
    3ab4:	12 16       	cp	r1, r18
    3ab6:	13 06       	cpc	r1, r19
    3ab8:	34 f4       	brge	.+12     	; 0x3ac6 <STEPPER_process_accel+0x2a>
    3aba:	80 91 33 03 	lds	r24, 0x0333
    3abe:	90 91 34 03 	lds	r25, 0x0334
    3ac2:	01 96       	adiw	r24, 0x01	; 1
    3ac4:	07 c0       	rjmp	.+14     	; 0x3ad4 <STEPPER_process_accel+0x38>
    3ac6:	23 2b       	or	r18, r19
    3ac8:	49 f0       	breq	.+18     	; 0x3adc <STEPPER_process_accel+0x40>
    3aca:	80 91 33 03 	lds	r24, 0x0333
    3ace:	90 91 34 03 	lds	r25, 0x0334
    3ad2:	01 97       	sbiw	r24, 0x01	; 1
    3ad4:	90 93 34 03 	sts	0x0334, r25
    3ad8:	80 93 33 03 	sts	0x0333, r24
    3adc:	66 23       	and	r22, r22
    3ade:	11 f1       	breq	.+68     	; 0x3b24 <STEPPER_process_accel+0x88>
    3ae0:	20 91 31 03 	lds	r18, 0x0331
    3ae4:	30 91 32 03 	lds	r19, 0x0332
    3ae8:	80 91 35 03 	lds	r24, 0x0335
    3aec:	90 91 36 03 	lds	r25, 0x0336
    3af0:	28 1b       	sub	r18, r24
    3af2:	39 0b       	sbc	r19, r25
    3af4:	12 16       	cp	r1, r18
    3af6:	13 06       	cpc	r1, r19
    3af8:	54 f4       	brge	.+20     	; 0x3b0e <STEPPER_process_accel+0x72>
    3afa:	80 91 35 03 	lds	r24, 0x0335
    3afe:	90 91 36 03 	lds	r25, 0x0336
    3b02:	01 96       	adiw	r24, 0x01	; 1
    3b04:	90 93 36 03 	sts	0x0336, r25
    3b08:	80 93 35 03 	sts	0x0335, r24
    3b0c:	08 95       	ret
    3b0e:	23 2b       	or	r18, r19
    3b10:	49 f0       	breq	.+18     	; 0x3b24 <STEPPER_process_accel+0x88>
    3b12:	80 91 35 03 	lds	r24, 0x0335
    3b16:	90 91 36 03 	lds	r25, 0x0336
    3b1a:	01 97       	sbiw	r24, 0x01	; 1
    3b1c:	90 93 36 03 	sts	0x0336, r25
    3b20:	80 93 35 03 	sts	0x0335, r24
    3b24:	08 95       	ret

00003b26 <STEPPER_process_run_mode>:
    3b26:	0f 93       	push	r16
    3b28:	1f 93       	push	r17
    3b2a:	18 2f       	mov	r17, r24
    3b2c:	06 2f       	mov	r16, r22
    3b2e:	80 91 63 03 	lds	r24, 0x0363
    3b32:	88 23       	and	r24, r24
    3b34:	09 f0       	breq	.+2      	; 0x3b38 <STEPPER_process_run_mode+0x12>
    3b36:	e7 c0       	rjmp	.+462    	; 0x3d06 <STEPPER_process_run_mode+0x1e0>
    3b38:	80 91 4b 03 	lds	r24, 0x034B
    3b3c:	88 23       	and	r24, r24
    3b3e:	09 f0       	breq	.+2      	; 0x3b42 <STEPPER_process_run_mode+0x1c>
    3b40:	5a c0       	rjmp	.+180    	; 0x3bf6 <STEPPER_process_run_mode+0xd0>
    3b42:	80 91 33 03 	lds	r24, 0x0333
    3b46:	90 91 34 03 	lds	r25, 0x0334
    3b4a:	89 2b       	or	r24, r25
    3b4c:	e9 f4       	brne	.+58     	; 0x3b88 <STEPPER_process_run_mode+0x62>
    3b4e:	80 91 82 02 	lds	r24, 0x0282
    3b52:	83 7e       	andi	r24, 0xE3	; 227
    3b54:	80 93 82 02 	sts	0x0282, r24
    3b58:	10 92 54 03 	sts	0x0354, r1
    3b5c:	80 91 5f 03 	lds	r24, 0x035F
    3b60:	88 23       	and	r24, r24
    3b62:	09 f4       	brne	.+2      	; 0x3b66 <STEPPER_process_run_mode+0x40>
    3b64:	5d c0       	rjmp	.+186    	; 0x3c20 <STEPPER_process_run_mode+0xfa>
    3b66:	60 91 4d 03 	lds	r22, 0x034D
    3b6a:	80 e0       	ldi	r24, 0x00	; 0
    3b6c:	0e 94 ea 1e 	call	0x3dd4	; 0x3dd4 <STEPPER_stop>
    3b70:	e0 91 61 03 	lds	r30, 0x0361
    3b74:	f0 91 62 03 	lds	r31, 0x0362
    3b78:	30 97       	sbiw	r30, 0x00	; 0
    3b7a:	09 f4       	brne	.+2      	; 0x3b7e <STEPPER_process_run_mode+0x58>
    3b7c:	51 c0       	rjmp	.+162    	; 0x3c20 <STEPPER_process_run_mode+0xfa>
    3b7e:	81 e0       	ldi	r24, 0x01	; 1
    3b80:	80 83       	st	Z, r24
    3b82:	10 92 5f 03 	sts	0x035F, r1
    3b86:	4c c0       	rjmp	.+152    	; 0x3c20 <STEPPER_process_run_mode+0xfa>
    3b88:	80 91 2d 03 	lds	r24, 0x032D
    3b8c:	81 30       	cpi	r24, 0x01	; 1
    3b8e:	41 f4       	brne	.+16     	; 0x3ba0 <STEPPER_process_run_mode+0x7a>
    3b90:	80 91 3f 03 	lds	r24, 0x033F
    3b94:	90 91 40 03 	lds	r25, 0x0340
    3b98:	01 97       	sbiw	r24, 0x01	; 1
    3b9a:	11 f4       	brne	.+4      	; 0x3ba0 <STEPPER_process_run_mode+0x7a>
    3b9c:	11 e0       	ldi	r17, 0x01	; 1
    3b9e:	02 c0       	rjmp	.+4      	; 0x3ba4 <STEPPER_process_run_mode+0x7e>
    3ba0:	11 23       	and	r17, r17
    3ba2:	f1 f1       	breq	.+124    	; 0x3c20 <STEPPER_process_run_mode+0xfa>
    3ba4:	e0 91 52 03 	lds	r30, 0x0352
    3ba8:	f0 e0       	ldi	r31, 0x00	; 0
    3baa:	e7 56       	subi	r30, 0x67	; 103
    3bac:	fe 4f       	sbci	r31, 0xFE	; 254
    3bae:	90 91 82 02 	lds	r25, 0x0282
    3bb2:	93 7e       	andi	r25, 0xE3	; 227
    3bb4:	80 81       	ld	r24, Z
    3bb6:	89 2b       	or	r24, r25
    3bb8:	80 93 82 02 	sts	0x0282, r24
    3bbc:	80 91 50 03 	lds	r24, 0x0350
    3bc0:	88 23       	and	r24, r24
    3bc2:	21 f4       	brne	.+8      	; 0x3bcc <STEPPER_process_run_mode+0xa6>
    3bc4:	80 91 52 03 	lds	r24, 0x0352
    3bc8:	8f 5f       	subi	r24, 0xFF	; 255
    3bca:	03 c0       	rjmp	.+6      	; 0x3bd2 <STEPPER_process_run_mode+0xac>
    3bcc:	80 91 52 03 	lds	r24, 0x0352
    3bd0:	81 50       	subi	r24, 0x01	; 1
    3bd2:	80 93 52 03 	sts	0x0352, r24
    3bd6:	80 91 52 03 	lds	r24, 0x0352
    3bda:	83 70       	andi	r24, 0x03	; 3
    3bdc:	80 93 52 03 	sts	0x0352, r24
    3be0:	81 e0       	ldi	r24, 0x01	; 1
    3be2:	80 93 54 03 	sts	0x0354, r24
    3be6:	80 91 2d 03 	lds	r24, 0x032D
    3bea:	81 30       	cpi	r24, 0x01	; 1
    3bec:	c9 f4       	brne	.+50     	; 0x3c20 <STEPPER_process_run_mode+0xfa>
    3bee:	80 e0       	ldi	r24, 0x00	; 0
    3bf0:	0e 94 96 1e 	call	0x3d2c	; 0x3d2c <STEPPER_process_step_mode>
    3bf4:	15 c0       	rjmp	.+42     	; 0x3c20 <STEPPER_process_run_mode+0xfa>
    3bf6:	90 91 82 02 	lds	r25, 0x0282
    3bfa:	93 7e       	andi	r25, 0xE3	; 227
    3bfc:	90 93 82 02 	sts	0x0282, r25
    3c00:	e0 91 52 03 	lds	r30, 0x0352
    3c04:	f0 e0       	ldi	r31, 0x00	; 0
    3c06:	e7 56       	subi	r30, 0x67	; 103
    3c08:	fe 4f       	sbci	r31, 0xFE	; 254
    3c0a:	80 81       	ld	r24, Z
    3c0c:	89 2b       	or	r24, r25
    3c0e:	80 93 82 02 	sts	0x0282, r24
    3c12:	82 e0       	ldi	r24, 0x02	; 2
    3c14:	80 93 54 03 	sts	0x0354, r24
    3c18:	10 92 34 03 	sts	0x0334, r1
    3c1c:	10 92 33 03 	sts	0x0333, r1
    3c20:	80 91 4c 03 	lds	r24, 0x034C
    3c24:	88 23       	and	r24, r24
    3c26:	09 f0       	breq	.+2      	; 0x3c2a <STEPPER_process_run_mode+0x104>
    3c28:	59 c0       	rjmp	.+178    	; 0x3cdc <STEPPER_process_run_mode+0x1b6>
    3c2a:	80 91 35 03 	lds	r24, 0x0335
    3c2e:	90 91 36 03 	lds	r25, 0x0336
    3c32:	89 2b       	or	r24, r25
    3c34:	e9 f4       	brne	.+58     	; 0x3c70 <STEPPER_process_run_mode+0x14a>
    3c36:	80 91 82 02 	lds	r24, 0x0282
    3c3a:	8f 71       	andi	r24, 0x1F	; 31
    3c3c:	80 93 82 02 	sts	0x0282, r24
    3c40:	10 92 55 03 	sts	0x0355, r1
    3c44:	80 91 60 03 	lds	r24, 0x0360
    3c48:	88 23       	and	r24, r24
    3c4a:	09 f4       	brne	.+2      	; 0x3c4e <STEPPER_process_run_mode+0x128>
    3c4c:	5c c0       	rjmp	.+184    	; 0x3d06 <STEPPER_process_run_mode+0x1e0>
    3c4e:	60 91 4e 03 	lds	r22, 0x034E
    3c52:	81 e0       	ldi	r24, 0x01	; 1
    3c54:	0e 94 ea 1e 	call	0x3dd4	; 0x3dd4 <STEPPER_stop>
    3c58:	e0 91 61 03 	lds	r30, 0x0361
    3c5c:	f0 91 62 03 	lds	r31, 0x0362
    3c60:	30 97       	sbiw	r30, 0x00	; 0
    3c62:	09 f4       	brne	.+2      	; 0x3c66 <STEPPER_process_run_mode+0x140>
    3c64:	50 c0       	rjmp	.+160    	; 0x3d06 <STEPPER_process_run_mode+0x1e0>
    3c66:	81 e0       	ldi	r24, 0x01	; 1
    3c68:	81 83       	std	Z+1, r24	; 0x01
    3c6a:	10 92 60 03 	sts	0x0360, r1
    3c6e:	4b c0       	rjmp	.+150    	; 0x3d06 <STEPPER_process_run_mode+0x1e0>
    3c70:	80 91 2e 03 	lds	r24, 0x032E
    3c74:	81 30       	cpi	r24, 0x01	; 1
    3c76:	41 f4       	brne	.+16     	; 0x3c88 <STEPPER_process_run_mode+0x162>
    3c78:	80 91 41 03 	lds	r24, 0x0341
    3c7c:	90 91 42 03 	lds	r25, 0x0342
    3c80:	01 97       	sbiw	r24, 0x01	; 1
    3c82:	11 f4       	brne	.+4      	; 0x3c88 <STEPPER_process_run_mode+0x162>
    3c84:	01 e0       	ldi	r16, 0x01	; 1
    3c86:	02 c0       	rjmp	.+4      	; 0x3c8c <STEPPER_process_run_mode+0x166>
    3c88:	00 23       	and	r16, r16
    3c8a:	e9 f1       	breq	.+122    	; 0x3d06 <STEPPER_process_run_mode+0x1e0>
    3c8c:	e0 91 53 03 	lds	r30, 0x0353
    3c90:	f0 e0       	ldi	r31, 0x00	; 0
    3c92:	e3 56       	subi	r30, 0x63	; 99
    3c94:	fe 4f       	sbci	r31, 0xFE	; 254
    3c96:	90 91 82 02 	lds	r25, 0x0282
    3c9a:	9f 71       	andi	r25, 0x1F	; 31
    3c9c:	80 81       	ld	r24, Z
    3c9e:	89 2b       	or	r24, r25
    3ca0:	80 93 82 02 	sts	0x0282, r24
    3ca4:	80 91 51 03 	lds	r24, 0x0351
    3ca8:	88 23       	and	r24, r24
    3caa:	21 f4       	brne	.+8      	; 0x3cb4 <STEPPER_process_run_mode+0x18e>
    3cac:	80 91 53 03 	lds	r24, 0x0353
    3cb0:	8f 5f       	subi	r24, 0xFF	; 255
    3cb2:	03 c0       	rjmp	.+6      	; 0x3cba <STEPPER_process_run_mode+0x194>
    3cb4:	80 91 53 03 	lds	r24, 0x0353
    3cb8:	81 50       	subi	r24, 0x01	; 1
    3cba:	80 93 53 03 	sts	0x0353, r24
    3cbe:	80 91 53 03 	lds	r24, 0x0353
    3cc2:	83 70       	andi	r24, 0x03	; 3
    3cc4:	80 93 53 03 	sts	0x0353, r24
    3cc8:	81 e0       	ldi	r24, 0x01	; 1
    3cca:	80 93 55 03 	sts	0x0355, r24
    3cce:	80 91 2e 03 	lds	r24, 0x032E
    3cd2:	81 30       	cpi	r24, 0x01	; 1
    3cd4:	c1 f4       	brne	.+48     	; 0x3d06 <STEPPER_process_run_mode+0x1e0>
    3cd6:	0e 94 96 1e 	call	0x3d2c	; 0x3d2c <STEPPER_process_step_mode>
    3cda:	15 c0       	rjmp	.+42     	; 0x3d06 <STEPPER_process_run_mode+0x1e0>
    3cdc:	90 91 82 02 	lds	r25, 0x0282
    3ce0:	9f 71       	andi	r25, 0x1F	; 31
    3ce2:	90 93 82 02 	sts	0x0282, r25
    3ce6:	e0 91 53 03 	lds	r30, 0x0353
    3cea:	f0 e0       	ldi	r31, 0x00	; 0
    3cec:	e3 56       	subi	r30, 0x63	; 99
    3cee:	fe 4f       	sbci	r31, 0xFE	; 254
    3cf0:	80 81       	ld	r24, Z
    3cf2:	89 2b       	or	r24, r25
    3cf4:	80 93 82 02 	sts	0x0282, r24
    3cf8:	82 e0       	ldi	r24, 0x02	; 2
    3cfa:	80 93 55 03 	sts	0x0355, r24
    3cfe:	10 92 36 03 	sts	0x0336, r1
    3d02:	10 92 35 03 	sts	0x0335, r1
    3d06:	80 91 56 03 	lds	r24, 0x0356
    3d0a:	88 23       	and	r24, r24
    3d0c:	31 f4       	brne	.+12     	; 0x3d1a <STEPPER_process_run_mode+0x1f4>
    3d0e:	82 e8       	ldi	r24, 0x82	; 130
    3d10:	92 e0       	ldi	r25, 0x02	; 2
    3d12:	61 2f       	mov	r22, r17
    3d14:	40 2f       	mov	r20, r16
    3d16:	0e 94 7d 1f 	call	0x3efa	; 0x3efa <STEPPER_process_pwm>
    3d1a:	88 b1       	in	r24, 0x08	; 8
    3d1c:	83 70       	andi	r24, 0x03	; 3
    3d1e:	90 91 82 02 	lds	r25, 0x0282
    3d22:	89 2b       	or	r24, r25
    3d24:	88 b9       	out	0x08, r24	; 8
    3d26:	1f 91       	pop	r17
    3d28:	0f 91       	pop	r16
    3d2a:	08 95       	ret

00003d2c <STEPPER_process_step_mode>:
    3d2c:	88 23       	and	r24, r24
    3d2e:	21 f0       	breq	.+8      	; 0x3d38 <STEPPER_process_step_mode+0xc>
    3d30:	81 30       	cpi	r24, 0x01	; 1
    3d32:	09 f0       	breq	.+2      	; 0x3d36 <STEPPER_process_step_mode+0xa>
    3d34:	4e c0       	rjmp	.+156    	; 0x3dd2 <STEPPER_process_step_mode+0xa6>
    3d36:	27 c0       	rjmp	.+78     	; 0x3d86 <STEPPER_process_step_mode+0x5a>
    3d38:	80 91 3f 03 	lds	r24, 0x033F
    3d3c:	90 91 40 03 	lds	r25, 0x0340
    3d40:	89 2b       	or	r24, r25
    3d42:	49 f0       	breq	.+18     	; 0x3d56 <STEPPER_process_step_mode+0x2a>
    3d44:	80 91 3f 03 	lds	r24, 0x033F
    3d48:	90 91 40 03 	lds	r25, 0x0340
    3d4c:	01 97       	sbiw	r24, 0x01	; 1
    3d4e:	90 93 40 03 	sts	0x0340, r25
    3d52:	80 93 3f 03 	sts	0x033F, r24
    3d56:	80 91 5f 03 	lds	r24, 0x035F
    3d5a:	88 23       	and	r24, r24
    3d5c:	d1 f5       	brne	.+116    	; 0x3dd2 <STEPPER_process_step_mode+0xa6>
    3d5e:	20 91 3f 03 	lds	r18, 0x033F
    3d62:	30 91 40 03 	lds	r19, 0x0340
    3d66:	80 91 43 03 	lds	r24, 0x0343
    3d6a:	90 91 44 03 	lds	r25, 0x0344
    3d6e:	28 17       	cp	r18, r24
    3d70:	39 07       	cpc	r19, r25
    3d72:	79 f5       	brne	.+94     	; 0x3dd2 <STEPPER_process_step_mode+0xa6>
    3d74:	80 e0       	ldi	r24, 0x00	; 0
    3d76:	60 e0       	ldi	r22, 0x00	; 0
    3d78:	70 e0       	ldi	r23, 0x00	; 0
    3d7a:	0e 94 a0 11 	call	0x2340	; 0x2340 <STEPPER_set_speed>
    3d7e:	81 e0       	ldi	r24, 0x01	; 1
    3d80:	80 93 5f 03 	sts	0x035F, r24
    3d84:	08 95       	ret
    3d86:	80 91 41 03 	lds	r24, 0x0341
    3d8a:	90 91 42 03 	lds	r25, 0x0342
    3d8e:	89 2b       	or	r24, r25
    3d90:	49 f0       	breq	.+18     	; 0x3da4 <STEPPER_process_step_mode+0x78>
    3d92:	80 91 41 03 	lds	r24, 0x0341
    3d96:	90 91 42 03 	lds	r25, 0x0342
    3d9a:	01 97       	sbiw	r24, 0x01	; 1
    3d9c:	90 93 42 03 	sts	0x0342, r25
    3da0:	80 93 41 03 	sts	0x0341, r24
    3da4:	80 91 60 03 	lds	r24, 0x0360
    3da8:	88 23       	and	r24, r24
    3daa:	99 f4       	brne	.+38     	; 0x3dd2 <STEPPER_process_step_mode+0xa6>
    3dac:	20 91 41 03 	lds	r18, 0x0341
    3db0:	30 91 42 03 	lds	r19, 0x0342
    3db4:	80 91 45 03 	lds	r24, 0x0345
    3db8:	90 91 46 03 	lds	r25, 0x0346
    3dbc:	28 17       	cp	r18, r24
    3dbe:	39 07       	cpc	r19, r25
    3dc0:	41 f4       	brne	.+16     	; 0x3dd2 <STEPPER_process_step_mode+0xa6>
    3dc2:	81 e0       	ldi	r24, 0x01	; 1
    3dc4:	60 e0       	ldi	r22, 0x00	; 0
    3dc6:	70 e0       	ldi	r23, 0x00	; 0
    3dc8:	0e 94 a0 11 	call	0x2340	; 0x2340 <STEPPER_set_speed>
    3dcc:	81 e0       	ldi	r24, 0x01	; 1
    3dce:	80 93 60 03 	sts	0x0360, r24
    3dd2:	08 95       	ret

00003dd4 <STEPPER_stop>:
    3dd4:	0f 93       	push	r16
    3dd6:	1f 93       	push	r17
    3dd8:	18 2f       	mov	r17, r24
    3dda:	06 2f       	mov	r16, r22
    3ddc:	66 23       	and	r22, r22
    3dde:	49 f4       	brne	.+18     	; 0x3df2 <STEPPER_stop+0x1e>
    3de0:	60 e0       	ldi	r22, 0x00	; 0
    3de2:	70 e0       	ldi	r23, 0x00	; 0
    3de4:	0e 94 a0 11 	call	0x2340	; 0x2340 <STEPPER_set_speed>
    3de8:	81 2f       	mov	r24, r17
    3dea:	60 e0       	ldi	r22, 0x00	; 0
    3dec:	70 e0       	ldi	r23, 0x00	; 0
    3dee:	0e 94 f7 19 	call	0x33ee	; 0x33ee <STEPPER_set_steps>
    3df2:	81 e0       	ldi	r24, 0x01	; 1
    3df4:	80 93 63 03 	sts	0x0363, r24
    3df8:	11 30       	cpi	r17, 0x01	; 1
    3dfa:	51 f0       	breq	.+20     	; 0x3e10 <STEPPER_stop+0x3c>
    3dfc:	11 30       	cpi	r17, 0x01	; 1
    3dfe:	18 f0       	brcs	.+6      	; 0x3e06 <STEPPER_stop+0x32>
    3e00:	12 30       	cpi	r17, 0x02	; 2
    3e02:	41 f4       	brne	.+16     	; 0x3e14 <STEPPER_stop+0x40>
    3e04:	03 c0       	rjmp	.+6      	; 0x3e0c <STEPPER_stop+0x38>
    3e06:	00 93 4b 03 	sts	0x034B, r16
    3e0a:	04 c0       	rjmp	.+8      	; 0x3e14 <STEPPER_stop+0x40>
    3e0c:	00 93 4b 03 	sts	0x034B, r16
    3e10:	00 93 4c 03 	sts	0x034C, r16
    3e14:	10 92 63 03 	sts	0x0363, r1
    3e18:	1f 91       	pop	r17
    3e1a:	0f 91       	pop	r16
    3e1c:	08 95       	ret

00003e1e <TMRSRVC_process>:
    3e1e:	ff 92       	push	r15
    3e20:	0f 93       	push	r16
    3e22:	1f 93       	push	r17
    3e24:	cf 93       	push	r28
    3e26:	df 93       	push	r29
    3e28:	80 91 9d 03 	lds	r24, 0x039D
    3e2c:	88 23       	and	r24, r24
    3e2e:	09 f4       	brne	.+2      	; 0x3e32 <TMRSRVC_process+0x14>
    3e30:	59 c0       	rjmp	.+178    	; 0x3ee4 <TMRSRVC_process+0xc6>
    3e32:	00 91 9e 03 	lds	r16, 0x039E
    3e36:	10 91 9f 03 	lds	r17, 0x039F
    3e3a:	f8 01       	movw	r30, r16
    3e3c:	c0 81       	ld	r28, Z
    3e3e:	d1 81       	ldd	r29, Z+1	; 0x01
    3e40:	8c 81       	ldd	r24, Y+4	; 0x04
    3e42:	9d 81       	ldd	r25, Y+5	; 0x05
    3e44:	01 97       	sbiw	r24, 0x01	; 1
    3e46:	9d 83       	std	Y+5, r25	; 0x05
    3e48:	8c 83       	std	Y+4, r24	; 0x04
    3e4a:	18 16       	cp	r1, r24
    3e4c:	19 06       	cpc	r1, r25
    3e4e:	0c f4       	brge	.+2      	; 0x3e52 <TMRSRVC_process+0x34>
    3e50:	49 c0       	rjmp	.+146    	; 0x3ee4 <TMRSRVC_process+0xc6>
    3e52:	89 81       	ldd	r24, Y+1	; 0x01
    3e54:	80 ff       	sbrs	r24, 0
    3e56:	05 c0       	rjmp	.+10     	; 0x3e62 <TMRSRVC_process+0x44>
    3e58:	8e 81       	ldd	r24, Y+6	; 0x06
    3e5a:	88 23       	and	r24, r24
    3e5c:	11 f4       	brne	.+4      	; 0x3e62 <TMRSRVC_process+0x44>
    3e5e:	81 e0       	ldi	r24, 0x01	; 1
    3e60:	8e 83       	std	Y+6, r24	; 0x06
    3e62:	89 81       	ldd	r24, Y+1	; 0x01
    3e64:	81 ff       	sbrs	r24, 1
    3e66:	03 c0       	rjmp	.+6      	; 0x3e6e <TMRSRVC_process+0x50>
    3e68:	ef 81       	ldd	r30, Y+7	; 0x07
    3e6a:	f8 85       	ldd	r31, Y+8	; 0x08
    3e6c:	09 95       	icall
    3e6e:	80 91 9d 03 	lds	r24, 0x039D
    3e72:	82 30       	cpi	r24, 0x02	; 2
    3e74:	a8 f0       	brcs	.+42     	; 0x3ea0 <TMRSRVC_process+0x82>
    3e76:	f8 01       	movw	r30, r16
    3e78:	82 81       	ldd	r24, Z+2	; 0x02
    3e7a:	93 81       	ldd	r25, Z+3	; 0x03
    3e7c:	90 93 9f 03 	sts	0x039F, r25
    3e80:	80 93 9e 03 	sts	0x039E, r24
    3e84:	13 82       	std	Z+3, r1	; 0x03
    3e86:	12 82       	std	Z+2, r1	; 0x02
    3e88:	e0 91 00 00 	lds	r30, 0x0000
    3e8c:	f0 91 01 00 	lds	r31, 0x0001
    3e90:	84 81       	ldd	r24, Z+4	; 0x04
    3e92:	95 81       	ldd	r25, Z+5	; 0x05
    3e94:	18 16       	cp	r1, r24
    3e96:	19 06       	cpc	r1, r25
    3e98:	3c f0       	brlt	.+14     	; 0x3ea8 <TMRSRVC_process+0x8a>
    3e9a:	ff 24       	eor	r15, r15
    3e9c:	f3 94       	inc	r15
    3e9e:	05 c0       	rjmp	.+10     	; 0x3eaa <TMRSRVC_process+0x8c>
    3ea0:	10 92 9f 03 	sts	0x039F, r1
    3ea4:	10 92 9e 03 	sts	0x039E, r1
    3ea8:	ff 24       	eor	r15, r15
    3eaa:	80 91 9d 03 	lds	r24, 0x039D
    3eae:	81 50       	subi	r24, 0x01	; 1
    3eb0:	80 93 9d 03 	sts	0x039D, r24
    3eb4:	80 91 9d 03 	lds	r24, 0x039D
    3eb8:	88 23       	and	r24, r24
    3eba:	11 f4       	brne	.+4      	; 0x3ec0 <TMRSRVC_process+0xa2>
    3ebc:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <TMRSRVC_stop>
    3ec0:	89 81       	ldd	r24, Y+1	; 0x01
    3ec2:	82 ff       	sbrs	r24, 2
    3ec4:	08 c0       	rjmp	.+16     	; 0x3ed6 <TMRSRVC_process+0xb8>
    3ec6:	8a 81       	ldd	r24, Y+2	; 0x02
    3ec8:	9b 81       	ldd	r25, Y+3	; 0x03
    3eca:	9d 83       	std	Y+5, r25	; 0x05
    3ecc:	8c 83       	std	Y+4, r24	; 0x04
    3ece:	c8 01       	movw	r24, r16
    3ed0:	0e 94 b8 1a 	call	0x3570	; 0x3570 <TMRSRVC_insert>
    3ed4:	08 c0       	rjmp	.+16     	; 0x3ee6 <TMRSRVC_process+0xc8>
    3ed6:	c8 01       	movw	r24, r16
    3ed8:	0e 94 83 28 	call	0x5106	; 0x5106 <free>
    3edc:	89 81       	ldd	r24, Y+1	; 0x01
    3ede:	8f 7e       	andi	r24, 0xEF	; 239
    3ee0:	89 83       	std	Y+1, r24	; 0x01
    3ee2:	01 c0       	rjmp	.+2      	; 0x3ee6 <TMRSRVC_process+0xc8>
    3ee4:	ff 24       	eor	r15, r15
    3ee6:	8f 2d       	mov	r24, r15
    3ee8:	df 91       	pop	r29
    3eea:	cf 91       	pop	r28
    3eec:	1f 91       	pop	r17
    3eee:	0f 91       	pop	r16
    3ef0:	ff 90       	pop	r15
    3ef2:	08 95       	ret

00003ef4 <TMRSRVC_stop>:
    3ef4:	10 92 81 02 	sts	0x0281, r1
    3ef8:	08 95       	ret

00003efa <STEPPER_process_pwm>:
    3efa:	fc 01       	movw	r30, r24
    3efc:	80 91 54 03 	lds	r24, 0x0354
    3f00:	82 30       	cpi	r24, 0x02	; 2
    3f02:	69 f4       	brne	.+26     	; 0x3f1e <STEPPER_process_pwm+0x24>
    3f04:	80 91 86 02 	lds	r24, 0x0286
    3f08:	91 e0       	ldi	r25, 0x01	; 1
    3f0a:	89 27       	eor	r24, r25
    3f0c:	80 93 86 02 	sts	0x0286, r24
    3f10:	88 23       	and	r24, r24
    3f12:	09 f0       	breq	.+2      	; 0x3f16 <STEPPER_process_pwm+0x1c>
    3f14:	3e c0       	rjmp	.+124    	; 0x3f92 <STEPPER_process_pwm+0x98>
    3f16:	80 81       	ld	r24, Z
    3f18:	83 7e       	andi	r24, 0xE3	; 227
    3f1a:	80 83       	st	Z, r24
    3f1c:	3a c0       	rjmp	.+116    	; 0x3f92 <STEPPER_process_pwm+0x98>
    3f1e:	80 91 33 03 	lds	r24, 0x0333
    3f22:	90 91 34 03 	lds	r25, 0x0334
    3f26:	c3 97       	sbiw	r24, 0x33	; 51
    3f28:	a4 f5       	brge	.+104    	; 0x3f92 <STEPPER_process_pwm+0x98>
    3f2a:	66 23       	and	r22, r22
    3f2c:	d1 f0       	breq	.+52     	; 0x3f62 <STEPPER_process_pwm+0x68>
    3f2e:	20 91 33 03 	lds	r18, 0x0333
    3f32:	30 91 34 03 	lds	r19, 0x0334
    3f36:	80 e6       	ldi	r24, 0x60	; 96
    3f38:	90 e0       	ldi	r25, 0x00	; 0
    3f3a:	bc 01       	movw	r22, r24
    3f3c:	26 9f       	mul	r18, r22
    3f3e:	c0 01       	movw	r24, r0
    3f40:	27 9f       	mul	r18, r23
    3f42:	90 0d       	add	r25, r0
    3f44:	36 9f       	mul	r19, r22
    3f46:	90 0d       	add	r25, r0
    3f48:	11 24       	eor	r1, r1
    3f4a:	88 0f       	add	r24, r24
    3f4c:	89 2f       	mov	r24, r25
    3f4e:	88 1f       	adc	r24, r24
    3f50:	99 0b       	sbc	r25, r25
    3f52:	90 93 48 03 	sts	0x0348, r25
    3f56:	80 93 47 03 	sts	0x0347, r24
    3f5a:	81 e0       	ldi	r24, 0x01	; 1
    3f5c:	80 93 84 02 	sts	0x0284, r24
    3f60:	18 c0       	rjmp	.+48     	; 0x3f92 <STEPPER_process_pwm+0x98>
    3f62:	80 91 84 02 	lds	r24, 0x0284
    3f66:	88 23       	and	r24, r24
    3f68:	a1 f0       	breq	.+40     	; 0x3f92 <STEPPER_process_pwm+0x98>
    3f6a:	80 91 47 03 	lds	r24, 0x0347
    3f6e:	90 91 48 03 	lds	r25, 0x0348
    3f72:	01 97       	sbiw	r24, 0x01	; 1
    3f74:	90 93 48 03 	sts	0x0348, r25
    3f78:	80 93 47 03 	sts	0x0347, r24
    3f7c:	80 91 47 03 	lds	r24, 0x0347
    3f80:	90 91 48 03 	lds	r25, 0x0348
    3f84:	89 2b       	or	r24, r25
    3f86:	29 f4       	brne	.+10     	; 0x3f92 <STEPPER_process_pwm+0x98>
    3f88:	80 81       	ld	r24, Z
    3f8a:	83 7e       	andi	r24, 0xE3	; 227
    3f8c:	80 83       	st	Z, r24
    3f8e:	10 92 84 02 	sts	0x0284, r1
    3f92:	80 91 55 03 	lds	r24, 0x0355
    3f96:	82 30       	cpi	r24, 0x02	; 2
    3f98:	69 f4       	brne	.+26     	; 0x3fb4 <STEPPER_process_pwm+0xba>
    3f9a:	80 91 85 02 	lds	r24, 0x0285
    3f9e:	91 e0       	ldi	r25, 0x01	; 1
    3fa0:	89 27       	eor	r24, r25
    3fa2:	80 93 85 02 	sts	0x0285, r24
    3fa6:	88 23       	and	r24, r24
    3fa8:	09 f0       	breq	.+2      	; 0x3fac <STEPPER_process_pwm+0xb2>
    3faa:	3e c0       	rjmp	.+124    	; 0x4028 <STEPPER_process_pwm+0x12e>
    3fac:	80 81       	ld	r24, Z
    3fae:	8f 71       	andi	r24, 0x1F	; 31
    3fb0:	80 83       	st	Z, r24
    3fb2:	08 95       	ret
    3fb4:	80 91 35 03 	lds	r24, 0x0335
    3fb8:	90 91 36 03 	lds	r25, 0x0336
    3fbc:	c3 97       	sbiw	r24, 0x33	; 51
    3fbe:	a4 f5       	brge	.+104    	; 0x4028 <STEPPER_process_pwm+0x12e>
    3fc0:	44 23       	and	r20, r20
    3fc2:	d1 f0       	breq	.+52     	; 0x3ff8 <STEPPER_process_pwm+0xfe>
    3fc4:	20 91 35 03 	lds	r18, 0x0335
    3fc8:	30 91 36 03 	lds	r19, 0x0336
    3fcc:	80 e6       	ldi	r24, 0x60	; 96
    3fce:	90 e0       	ldi	r25, 0x00	; 0
    3fd0:	ac 01       	movw	r20, r24
    3fd2:	24 9f       	mul	r18, r20
    3fd4:	c0 01       	movw	r24, r0
    3fd6:	25 9f       	mul	r18, r21
    3fd8:	90 0d       	add	r25, r0
    3fda:	34 9f       	mul	r19, r20
    3fdc:	90 0d       	add	r25, r0
    3fde:	11 24       	eor	r1, r1
    3fe0:	88 0f       	add	r24, r24
    3fe2:	89 2f       	mov	r24, r25
    3fe4:	88 1f       	adc	r24, r24
    3fe6:	99 0b       	sbc	r25, r25
    3fe8:	90 93 4a 03 	sts	0x034A, r25
    3fec:	80 93 49 03 	sts	0x0349, r24
    3ff0:	81 e0       	ldi	r24, 0x01	; 1
    3ff2:	80 93 83 02 	sts	0x0283, r24
    3ff6:	08 95       	ret
    3ff8:	80 91 83 02 	lds	r24, 0x0283
    3ffc:	88 23       	and	r24, r24
    3ffe:	a1 f0       	breq	.+40     	; 0x4028 <STEPPER_process_pwm+0x12e>
    4000:	80 91 49 03 	lds	r24, 0x0349
    4004:	90 91 4a 03 	lds	r25, 0x034A
    4008:	01 97       	sbiw	r24, 0x01	; 1
    400a:	90 93 4a 03 	sts	0x034A, r25
    400e:	80 93 49 03 	sts	0x0349, r24
    4012:	80 91 49 03 	lds	r24, 0x0349
    4016:	90 91 4a 03 	lds	r25, 0x034A
    401a:	89 2b       	or	r24, r25
    401c:	29 f4       	brne	.+10     	; 0x4028 <STEPPER_process_pwm+0x12e>
    401e:	80 81       	ld	r24, Z
    4020:	8f 71       	andi	r24, 0x1F	; 31
    4022:	80 83       	st	Z, r24
    4024:	10 92 83 02 	sts	0x0283, r1
    4028:	08 95       	ret

0000402a <__subsf3>:
    402a:	50 58       	subi	r21, 0x80	; 128

0000402c <__addsf3>:
    402c:	bb 27       	eor	r27, r27
    402e:	aa 27       	eor	r26, r26
    4030:	0e d0       	rcall	.+28     	; 0x404e <__addsf3x>
    4032:	75 c1       	rjmp	.+746    	; 0x431e <__fp_round>
    4034:	66 d1       	rcall	.+716    	; 0x4302 <__fp_pscA>
    4036:	30 f0       	brcs	.+12     	; 0x4044 <__addsf3+0x18>
    4038:	6b d1       	rcall	.+726    	; 0x4310 <__fp_pscB>
    403a:	20 f0       	brcs	.+8      	; 0x4044 <__addsf3+0x18>
    403c:	31 f4       	brne	.+12     	; 0x404a <__addsf3+0x1e>
    403e:	9f 3f       	cpi	r25, 0xFF	; 255
    4040:	11 f4       	brne	.+4      	; 0x4046 <__addsf3+0x1a>
    4042:	1e f4       	brtc	.+6      	; 0x404a <__addsf3+0x1e>
    4044:	5b c1       	rjmp	.+694    	; 0x42fc <__fp_nan>
    4046:	0e f4       	brtc	.+2      	; 0x404a <__addsf3+0x1e>
    4048:	e0 95       	com	r30
    404a:	e7 fb       	bst	r30, 7
    404c:	51 c1       	rjmp	.+674    	; 0x42f0 <__fp_inf>

0000404e <__addsf3x>:
    404e:	e9 2f       	mov	r30, r25
    4050:	77 d1       	rcall	.+750    	; 0x4340 <__fp_split3>
    4052:	80 f3       	brcs	.-32     	; 0x4034 <__addsf3+0x8>
    4054:	ba 17       	cp	r27, r26
    4056:	62 07       	cpc	r22, r18
    4058:	73 07       	cpc	r23, r19
    405a:	84 07       	cpc	r24, r20
    405c:	95 07       	cpc	r25, r21
    405e:	18 f0       	brcs	.+6      	; 0x4066 <__addsf3x+0x18>
    4060:	71 f4       	brne	.+28     	; 0x407e <__addsf3x+0x30>
    4062:	9e f5       	brtc	.+102    	; 0x40ca <__addsf3x+0x7c>
    4064:	8f c1       	rjmp	.+798    	; 0x4384 <__fp_zero>
    4066:	0e f4       	brtc	.+2      	; 0x406a <__addsf3x+0x1c>
    4068:	e0 95       	com	r30
    406a:	0b 2e       	mov	r0, r27
    406c:	ba 2f       	mov	r27, r26
    406e:	a0 2d       	mov	r26, r0
    4070:	0b 01       	movw	r0, r22
    4072:	b9 01       	movw	r22, r18
    4074:	90 01       	movw	r18, r0
    4076:	0c 01       	movw	r0, r24
    4078:	ca 01       	movw	r24, r20
    407a:	a0 01       	movw	r20, r0
    407c:	11 24       	eor	r1, r1
    407e:	ff 27       	eor	r31, r31
    4080:	59 1b       	sub	r21, r25
    4082:	99 f0       	breq	.+38     	; 0x40aa <__addsf3x+0x5c>
    4084:	59 3f       	cpi	r21, 0xF9	; 249
    4086:	50 f4       	brcc	.+20     	; 0x409c <__addsf3x+0x4e>
    4088:	50 3e       	cpi	r21, 0xE0	; 224
    408a:	68 f1       	brcs	.+90     	; 0x40e6 <__addsf3x+0x98>
    408c:	1a 16       	cp	r1, r26
    408e:	f0 40       	sbci	r31, 0x00	; 0
    4090:	a2 2f       	mov	r26, r18
    4092:	23 2f       	mov	r18, r19
    4094:	34 2f       	mov	r19, r20
    4096:	44 27       	eor	r20, r20
    4098:	58 5f       	subi	r21, 0xF8	; 248
    409a:	f3 cf       	rjmp	.-26     	; 0x4082 <__addsf3x+0x34>
    409c:	46 95       	lsr	r20
    409e:	37 95       	ror	r19
    40a0:	27 95       	ror	r18
    40a2:	a7 95       	ror	r26
    40a4:	f0 40       	sbci	r31, 0x00	; 0
    40a6:	53 95       	inc	r21
    40a8:	c9 f7       	brne	.-14     	; 0x409c <__addsf3x+0x4e>
    40aa:	7e f4       	brtc	.+30     	; 0x40ca <__addsf3x+0x7c>
    40ac:	1f 16       	cp	r1, r31
    40ae:	ba 0b       	sbc	r27, r26
    40b0:	62 0b       	sbc	r22, r18
    40b2:	73 0b       	sbc	r23, r19
    40b4:	84 0b       	sbc	r24, r20
    40b6:	ba f0       	brmi	.+46     	; 0x40e6 <__addsf3x+0x98>
    40b8:	91 50       	subi	r25, 0x01	; 1
    40ba:	a1 f0       	breq	.+40     	; 0x40e4 <__addsf3x+0x96>
    40bc:	ff 0f       	add	r31, r31
    40be:	bb 1f       	adc	r27, r27
    40c0:	66 1f       	adc	r22, r22
    40c2:	77 1f       	adc	r23, r23
    40c4:	88 1f       	adc	r24, r24
    40c6:	c2 f7       	brpl	.-16     	; 0x40b8 <__addsf3x+0x6a>
    40c8:	0e c0       	rjmp	.+28     	; 0x40e6 <__addsf3x+0x98>
    40ca:	ba 0f       	add	r27, r26
    40cc:	62 1f       	adc	r22, r18
    40ce:	73 1f       	adc	r23, r19
    40d0:	84 1f       	adc	r24, r20
    40d2:	48 f4       	brcc	.+18     	; 0x40e6 <__addsf3x+0x98>
    40d4:	87 95       	ror	r24
    40d6:	77 95       	ror	r23
    40d8:	67 95       	ror	r22
    40da:	b7 95       	ror	r27
    40dc:	f7 95       	ror	r31
    40de:	9e 3f       	cpi	r25, 0xFE	; 254
    40e0:	08 f0       	brcs	.+2      	; 0x40e4 <__addsf3x+0x96>
    40e2:	b3 cf       	rjmp	.-154    	; 0x404a <__addsf3+0x1e>
    40e4:	93 95       	inc	r25
    40e6:	88 0f       	add	r24, r24
    40e8:	08 f0       	brcs	.+2      	; 0x40ec <__addsf3x+0x9e>
    40ea:	99 27       	eor	r25, r25
    40ec:	ee 0f       	add	r30, r30
    40ee:	97 95       	ror	r25
    40f0:	87 95       	ror	r24
    40f2:	08 95       	ret

000040f4 <__cmpsf2>:
    40f4:	d9 d0       	rcall	.+434    	; 0x42a8 <__fp_cmp>
    40f6:	08 f4       	brcc	.+2      	; 0x40fa <__cmpsf2+0x6>
    40f8:	81 e0       	ldi	r24, 0x01	; 1
    40fa:	08 95       	ret

000040fc <__divsf3>:
    40fc:	0c d0       	rcall	.+24     	; 0x4116 <__divsf3x>
    40fe:	0f c1       	rjmp	.+542    	; 0x431e <__fp_round>
    4100:	07 d1       	rcall	.+526    	; 0x4310 <__fp_pscB>
    4102:	40 f0       	brcs	.+16     	; 0x4114 <__divsf3+0x18>
    4104:	fe d0       	rcall	.+508    	; 0x4302 <__fp_pscA>
    4106:	30 f0       	brcs	.+12     	; 0x4114 <__divsf3+0x18>
    4108:	21 f4       	brne	.+8      	; 0x4112 <__divsf3+0x16>
    410a:	5f 3f       	cpi	r21, 0xFF	; 255
    410c:	19 f0       	breq	.+6      	; 0x4114 <__divsf3+0x18>
    410e:	f0 c0       	rjmp	.+480    	; 0x42f0 <__fp_inf>
    4110:	51 11       	cpse	r21, r1
    4112:	39 c1       	rjmp	.+626    	; 0x4386 <__fp_szero>
    4114:	f3 c0       	rjmp	.+486    	; 0x42fc <__fp_nan>

00004116 <__divsf3x>:
    4116:	14 d1       	rcall	.+552    	; 0x4340 <__fp_split3>
    4118:	98 f3       	brcs	.-26     	; 0x4100 <__divsf3+0x4>

0000411a <__divsf3_pse>:
    411a:	99 23       	and	r25, r25
    411c:	c9 f3       	breq	.-14     	; 0x4110 <__divsf3+0x14>
    411e:	55 23       	and	r21, r21
    4120:	b1 f3       	breq	.-20     	; 0x410e <__divsf3+0x12>
    4122:	95 1b       	sub	r25, r21
    4124:	55 0b       	sbc	r21, r21
    4126:	bb 27       	eor	r27, r27
    4128:	aa 27       	eor	r26, r26
    412a:	62 17       	cp	r22, r18
    412c:	73 07       	cpc	r23, r19
    412e:	84 07       	cpc	r24, r20
    4130:	38 f0       	brcs	.+14     	; 0x4140 <__divsf3_pse+0x26>
    4132:	9f 5f       	subi	r25, 0xFF	; 255
    4134:	5f 4f       	sbci	r21, 0xFF	; 255
    4136:	22 0f       	add	r18, r18
    4138:	33 1f       	adc	r19, r19
    413a:	44 1f       	adc	r20, r20
    413c:	aa 1f       	adc	r26, r26
    413e:	a9 f3       	breq	.-22     	; 0x412a <__divsf3_pse+0x10>
    4140:	33 d0       	rcall	.+102    	; 0x41a8 <__divsf3_pse+0x8e>
    4142:	0e 2e       	mov	r0, r30
    4144:	3a f0       	brmi	.+14     	; 0x4154 <__divsf3_pse+0x3a>
    4146:	e0 e8       	ldi	r30, 0x80	; 128
    4148:	30 d0       	rcall	.+96     	; 0x41aa <__divsf3_pse+0x90>
    414a:	91 50       	subi	r25, 0x01	; 1
    414c:	50 40       	sbci	r21, 0x00	; 0
    414e:	e6 95       	lsr	r30
    4150:	00 1c       	adc	r0, r0
    4152:	ca f7       	brpl	.-14     	; 0x4146 <__divsf3_pse+0x2c>
    4154:	29 d0       	rcall	.+82     	; 0x41a8 <__divsf3_pse+0x8e>
    4156:	fe 2f       	mov	r31, r30
    4158:	27 d0       	rcall	.+78     	; 0x41a8 <__divsf3_pse+0x8e>
    415a:	66 0f       	add	r22, r22
    415c:	77 1f       	adc	r23, r23
    415e:	88 1f       	adc	r24, r24
    4160:	bb 1f       	adc	r27, r27
    4162:	26 17       	cp	r18, r22
    4164:	37 07       	cpc	r19, r23
    4166:	48 07       	cpc	r20, r24
    4168:	ab 07       	cpc	r26, r27
    416a:	b0 e8       	ldi	r27, 0x80	; 128
    416c:	09 f0       	breq	.+2      	; 0x4170 <__divsf3_pse+0x56>
    416e:	bb 0b       	sbc	r27, r27
    4170:	80 2d       	mov	r24, r0
    4172:	bf 01       	movw	r22, r30
    4174:	ff 27       	eor	r31, r31
    4176:	93 58       	subi	r25, 0x83	; 131
    4178:	5f 4f       	sbci	r21, 0xFF	; 255
    417a:	2a f0       	brmi	.+10     	; 0x4186 <__divsf3_pse+0x6c>
    417c:	9e 3f       	cpi	r25, 0xFE	; 254
    417e:	51 05       	cpc	r21, r1
    4180:	68 f0       	brcs	.+26     	; 0x419c <__divsf3_pse+0x82>
    4182:	b6 c0       	rjmp	.+364    	; 0x42f0 <__fp_inf>
    4184:	00 c1       	rjmp	.+512    	; 0x4386 <__fp_szero>
    4186:	5f 3f       	cpi	r21, 0xFF	; 255
    4188:	ec f3       	brlt	.-6      	; 0x4184 <__divsf3_pse+0x6a>
    418a:	98 3e       	cpi	r25, 0xE8	; 232
    418c:	dc f3       	brlt	.-10     	; 0x4184 <__divsf3_pse+0x6a>
    418e:	86 95       	lsr	r24
    4190:	77 95       	ror	r23
    4192:	67 95       	ror	r22
    4194:	b7 95       	ror	r27
    4196:	f7 95       	ror	r31
    4198:	9f 5f       	subi	r25, 0xFF	; 255
    419a:	c9 f7       	brne	.-14     	; 0x418e <__divsf3_pse+0x74>
    419c:	88 0f       	add	r24, r24
    419e:	91 1d       	adc	r25, r1
    41a0:	96 95       	lsr	r25
    41a2:	87 95       	ror	r24
    41a4:	97 f9       	bld	r25, 7
    41a6:	08 95       	ret
    41a8:	e1 e0       	ldi	r30, 0x01	; 1
    41aa:	66 0f       	add	r22, r22
    41ac:	77 1f       	adc	r23, r23
    41ae:	88 1f       	adc	r24, r24
    41b0:	bb 1f       	adc	r27, r27
    41b2:	62 17       	cp	r22, r18
    41b4:	73 07       	cpc	r23, r19
    41b6:	84 07       	cpc	r24, r20
    41b8:	ba 07       	cpc	r27, r26
    41ba:	20 f0       	brcs	.+8      	; 0x41c4 <__divsf3_pse+0xaa>
    41bc:	62 1b       	sub	r22, r18
    41be:	73 0b       	sbc	r23, r19
    41c0:	84 0b       	sbc	r24, r20
    41c2:	ba 0b       	sbc	r27, r26
    41c4:	ee 1f       	adc	r30, r30
    41c6:	88 f7       	brcc	.-30     	; 0x41aa <__divsf3_pse+0x90>
    41c8:	e0 95       	com	r30
    41ca:	08 95       	ret

000041cc <__fixsfsi>:
    41cc:	04 d0       	rcall	.+8      	; 0x41d6 <__fixunssfsi>
    41ce:	68 94       	set
    41d0:	b1 11       	cpse	r27, r1
    41d2:	d9 c0       	rjmp	.+434    	; 0x4386 <__fp_szero>
    41d4:	08 95       	ret

000041d6 <__fixunssfsi>:
    41d6:	bc d0       	rcall	.+376    	; 0x4350 <__fp_splitA>
    41d8:	88 f0       	brcs	.+34     	; 0x41fc <__fixunssfsi+0x26>
    41da:	9f 57       	subi	r25, 0x7F	; 127
    41dc:	90 f0       	brcs	.+36     	; 0x4202 <__fixunssfsi+0x2c>
    41de:	b9 2f       	mov	r27, r25
    41e0:	99 27       	eor	r25, r25
    41e2:	b7 51       	subi	r27, 0x17	; 23
    41e4:	a0 f0       	brcs	.+40     	; 0x420e <__fixunssfsi+0x38>
    41e6:	d1 f0       	breq	.+52     	; 0x421c <__fixunssfsi+0x46>
    41e8:	66 0f       	add	r22, r22
    41ea:	77 1f       	adc	r23, r23
    41ec:	88 1f       	adc	r24, r24
    41ee:	99 1f       	adc	r25, r25
    41f0:	1a f0       	brmi	.+6      	; 0x41f8 <__fixunssfsi+0x22>
    41f2:	ba 95       	dec	r27
    41f4:	c9 f7       	brne	.-14     	; 0x41e8 <__fixunssfsi+0x12>
    41f6:	12 c0       	rjmp	.+36     	; 0x421c <__fixunssfsi+0x46>
    41f8:	b1 30       	cpi	r27, 0x01	; 1
    41fa:	81 f0       	breq	.+32     	; 0x421c <__fixunssfsi+0x46>
    41fc:	c3 d0       	rcall	.+390    	; 0x4384 <__fp_zero>
    41fe:	b1 e0       	ldi	r27, 0x01	; 1
    4200:	08 95       	ret
    4202:	c0 c0       	rjmp	.+384    	; 0x4384 <__fp_zero>
    4204:	67 2f       	mov	r22, r23
    4206:	78 2f       	mov	r23, r24
    4208:	88 27       	eor	r24, r24
    420a:	b8 5f       	subi	r27, 0xF8	; 248
    420c:	39 f0       	breq	.+14     	; 0x421c <__fixunssfsi+0x46>
    420e:	b9 3f       	cpi	r27, 0xF9	; 249
    4210:	cc f3       	brlt	.-14     	; 0x4204 <__fixunssfsi+0x2e>
    4212:	86 95       	lsr	r24
    4214:	77 95       	ror	r23
    4216:	67 95       	ror	r22
    4218:	b3 95       	inc	r27
    421a:	d9 f7       	brne	.-10     	; 0x4212 <__fixunssfsi+0x3c>
    421c:	3e f4       	brtc	.+14     	; 0x422c <__fixunssfsi+0x56>
    421e:	90 95       	com	r25
    4220:	80 95       	com	r24
    4222:	70 95       	com	r23
    4224:	61 95       	neg	r22
    4226:	7f 4f       	sbci	r23, 0xFF	; 255
    4228:	8f 4f       	sbci	r24, 0xFF	; 255
    422a:	9f 4f       	sbci	r25, 0xFF	; 255
    422c:	08 95       	ret

0000422e <__floatunsisf>:
    422e:	e8 94       	clt
    4230:	09 c0       	rjmp	.+18     	; 0x4244 <__floatsisf+0x12>

00004232 <__floatsisf>:
    4232:	97 fb       	bst	r25, 7
    4234:	3e f4       	brtc	.+14     	; 0x4244 <__floatsisf+0x12>
    4236:	90 95       	com	r25
    4238:	80 95       	com	r24
    423a:	70 95       	com	r23
    423c:	61 95       	neg	r22
    423e:	7f 4f       	sbci	r23, 0xFF	; 255
    4240:	8f 4f       	sbci	r24, 0xFF	; 255
    4242:	9f 4f       	sbci	r25, 0xFF	; 255
    4244:	99 23       	and	r25, r25
    4246:	a9 f0       	breq	.+42     	; 0x4272 <__floatsisf+0x40>
    4248:	f9 2f       	mov	r31, r25
    424a:	96 e9       	ldi	r25, 0x96	; 150
    424c:	bb 27       	eor	r27, r27
    424e:	93 95       	inc	r25
    4250:	f6 95       	lsr	r31
    4252:	87 95       	ror	r24
    4254:	77 95       	ror	r23
    4256:	67 95       	ror	r22
    4258:	b7 95       	ror	r27
    425a:	f1 11       	cpse	r31, r1
    425c:	f8 cf       	rjmp	.-16     	; 0x424e <__floatsisf+0x1c>
    425e:	fa f4       	brpl	.+62     	; 0x429e <__floatsisf+0x6c>
    4260:	bb 0f       	add	r27, r27
    4262:	11 f4       	brne	.+4      	; 0x4268 <__floatsisf+0x36>
    4264:	60 ff       	sbrs	r22, 0
    4266:	1b c0       	rjmp	.+54     	; 0x429e <__floatsisf+0x6c>
    4268:	6f 5f       	subi	r22, 0xFF	; 255
    426a:	7f 4f       	sbci	r23, 0xFF	; 255
    426c:	8f 4f       	sbci	r24, 0xFF	; 255
    426e:	9f 4f       	sbci	r25, 0xFF	; 255
    4270:	16 c0       	rjmp	.+44     	; 0x429e <__floatsisf+0x6c>
    4272:	88 23       	and	r24, r24
    4274:	11 f0       	breq	.+4      	; 0x427a <__floatsisf+0x48>
    4276:	96 e9       	ldi	r25, 0x96	; 150
    4278:	11 c0       	rjmp	.+34     	; 0x429c <__floatsisf+0x6a>
    427a:	77 23       	and	r23, r23
    427c:	21 f0       	breq	.+8      	; 0x4286 <__floatsisf+0x54>
    427e:	9e e8       	ldi	r25, 0x8E	; 142
    4280:	87 2f       	mov	r24, r23
    4282:	76 2f       	mov	r23, r22
    4284:	05 c0       	rjmp	.+10     	; 0x4290 <__floatsisf+0x5e>
    4286:	66 23       	and	r22, r22
    4288:	71 f0       	breq	.+28     	; 0x42a6 <__floatsisf+0x74>
    428a:	96 e8       	ldi	r25, 0x86	; 134
    428c:	86 2f       	mov	r24, r22
    428e:	70 e0       	ldi	r23, 0x00	; 0
    4290:	60 e0       	ldi	r22, 0x00	; 0
    4292:	2a f0       	brmi	.+10     	; 0x429e <__floatsisf+0x6c>
    4294:	9a 95       	dec	r25
    4296:	66 0f       	add	r22, r22
    4298:	77 1f       	adc	r23, r23
    429a:	88 1f       	adc	r24, r24
    429c:	da f7       	brpl	.-10     	; 0x4294 <__floatsisf+0x62>
    429e:	88 0f       	add	r24, r24
    42a0:	96 95       	lsr	r25
    42a2:	87 95       	ror	r24
    42a4:	97 f9       	bld	r25, 7
    42a6:	08 95       	ret

000042a8 <__fp_cmp>:
    42a8:	99 0f       	add	r25, r25
    42aa:	00 08       	sbc	r0, r0
    42ac:	55 0f       	add	r21, r21
    42ae:	aa 0b       	sbc	r26, r26
    42b0:	e0 e8       	ldi	r30, 0x80	; 128
    42b2:	fe ef       	ldi	r31, 0xFE	; 254
    42b4:	16 16       	cp	r1, r22
    42b6:	17 06       	cpc	r1, r23
    42b8:	e8 07       	cpc	r30, r24
    42ba:	f9 07       	cpc	r31, r25
    42bc:	c0 f0       	brcs	.+48     	; 0x42ee <__fp_cmp+0x46>
    42be:	12 16       	cp	r1, r18
    42c0:	13 06       	cpc	r1, r19
    42c2:	e4 07       	cpc	r30, r20
    42c4:	f5 07       	cpc	r31, r21
    42c6:	98 f0       	brcs	.+38     	; 0x42ee <__fp_cmp+0x46>
    42c8:	62 1b       	sub	r22, r18
    42ca:	73 0b       	sbc	r23, r19
    42cc:	84 0b       	sbc	r24, r20
    42ce:	95 0b       	sbc	r25, r21
    42d0:	39 f4       	brne	.+14     	; 0x42e0 <__fp_cmp+0x38>
    42d2:	0a 26       	eor	r0, r26
    42d4:	61 f0       	breq	.+24     	; 0x42ee <__fp_cmp+0x46>
    42d6:	23 2b       	or	r18, r19
    42d8:	24 2b       	or	r18, r20
    42da:	25 2b       	or	r18, r21
    42dc:	21 f4       	brne	.+8      	; 0x42e6 <__fp_cmp+0x3e>
    42de:	08 95       	ret
    42e0:	0a 26       	eor	r0, r26
    42e2:	09 f4       	brne	.+2      	; 0x42e6 <__fp_cmp+0x3e>
    42e4:	a1 40       	sbci	r26, 0x01	; 1
    42e6:	a6 95       	lsr	r26
    42e8:	8f ef       	ldi	r24, 0xFF	; 255
    42ea:	81 1d       	adc	r24, r1
    42ec:	81 1d       	adc	r24, r1
    42ee:	08 95       	ret

000042f0 <__fp_inf>:
    42f0:	97 f9       	bld	r25, 7
    42f2:	9f 67       	ori	r25, 0x7F	; 127
    42f4:	80 e8       	ldi	r24, 0x80	; 128
    42f6:	70 e0       	ldi	r23, 0x00	; 0
    42f8:	60 e0       	ldi	r22, 0x00	; 0
    42fa:	08 95       	ret

000042fc <__fp_nan>:
    42fc:	9f ef       	ldi	r25, 0xFF	; 255
    42fe:	80 ec       	ldi	r24, 0xC0	; 192
    4300:	08 95       	ret

00004302 <__fp_pscA>:
    4302:	00 24       	eor	r0, r0
    4304:	0a 94       	dec	r0
    4306:	16 16       	cp	r1, r22
    4308:	17 06       	cpc	r1, r23
    430a:	18 06       	cpc	r1, r24
    430c:	09 06       	cpc	r0, r25
    430e:	08 95       	ret

00004310 <__fp_pscB>:
    4310:	00 24       	eor	r0, r0
    4312:	0a 94       	dec	r0
    4314:	12 16       	cp	r1, r18
    4316:	13 06       	cpc	r1, r19
    4318:	14 06       	cpc	r1, r20
    431a:	05 06       	cpc	r0, r21
    431c:	08 95       	ret

0000431e <__fp_round>:
    431e:	09 2e       	mov	r0, r25
    4320:	03 94       	inc	r0
    4322:	00 0c       	add	r0, r0
    4324:	11 f4       	brne	.+4      	; 0x432a <__fp_round+0xc>
    4326:	88 23       	and	r24, r24
    4328:	52 f0       	brmi	.+20     	; 0x433e <__fp_round+0x20>
    432a:	bb 0f       	add	r27, r27
    432c:	40 f4       	brcc	.+16     	; 0x433e <__fp_round+0x20>
    432e:	bf 2b       	or	r27, r31
    4330:	11 f4       	brne	.+4      	; 0x4336 <__fp_round+0x18>
    4332:	60 ff       	sbrs	r22, 0
    4334:	04 c0       	rjmp	.+8      	; 0x433e <__fp_round+0x20>
    4336:	6f 5f       	subi	r22, 0xFF	; 255
    4338:	7f 4f       	sbci	r23, 0xFF	; 255
    433a:	8f 4f       	sbci	r24, 0xFF	; 255
    433c:	9f 4f       	sbci	r25, 0xFF	; 255
    433e:	08 95       	ret

00004340 <__fp_split3>:
    4340:	57 fd       	sbrc	r21, 7
    4342:	90 58       	subi	r25, 0x80	; 128
    4344:	44 0f       	add	r20, r20
    4346:	55 1f       	adc	r21, r21
    4348:	59 f0       	breq	.+22     	; 0x4360 <__fp_splitA+0x10>
    434a:	5f 3f       	cpi	r21, 0xFF	; 255
    434c:	71 f0       	breq	.+28     	; 0x436a <__fp_splitA+0x1a>
    434e:	47 95       	ror	r20

00004350 <__fp_splitA>:
    4350:	88 0f       	add	r24, r24
    4352:	97 fb       	bst	r25, 7
    4354:	99 1f       	adc	r25, r25
    4356:	61 f0       	breq	.+24     	; 0x4370 <__fp_splitA+0x20>
    4358:	9f 3f       	cpi	r25, 0xFF	; 255
    435a:	79 f0       	breq	.+30     	; 0x437a <__fp_splitA+0x2a>
    435c:	87 95       	ror	r24
    435e:	08 95       	ret
    4360:	12 16       	cp	r1, r18
    4362:	13 06       	cpc	r1, r19
    4364:	14 06       	cpc	r1, r20
    4366:	55 1f       	adc	r21, r21
    4368:	f2 cf       	rjmp	.-28     	; 0x434e <__fp_split3+0xe>
    436a:	46 95       	lsr	r20
    436c:	f1 df       	rcall	.-30     	; 0x4350 <__fp_splitA>
    436e:	08 c0       	rjmp	.+16     	; 0x4380 <__fp_splitA+0x30>
    4370:	16 16       	cp	r1, r22
    4372:	17 06       	cpc	r1, r23
    4374:	18 06       	cpc	r1, r24
    4376:	99 1f       	adc	r25, r25
    4378:	f1 cf       	rjmp	.-30     	; 0x435c <__fp_splitA+0xc>
    437a:	86 95       	lsr	r24
    437c:	71 05       	cpc	r23, r1
    437e:	61 05       	cpc	r22, r1
    4380:	08 94       	sec
    4382:	08 95       	ret

00004384 <__fp_zero>:
    4384:	e8 94       	clt

00004386 <__fp_szero>:
    4386:	bb 27       	eor	r27, r27
    4388:	66 27       	eor	r22, r22
    438a:	77 27       	eor	r23, r23
    438c:	cb 01       	movw	r24, r22
    438e:	97 f9       	bld	r25, 7
    4390:	08 95       	ret

00004392 <__gesf2>:
    4392:	8a df       	rcall	.-236    	; 0x42a8 <__fp_cmp>
    4394:	08 f4       	brcc	.+2      	; 0x4398 <__gesf2+0x6>
    4396:	8f ef       	ldi	r24, 0xFF	; 255
    4398:	08 95       	ret

0000439a <lrint>:
    439a:	da df       	rcall	.-76     	; 0x4350 <__fp_splitA>
    439c:	a8 f1       	brcs	.+106    	; 0x4408 <lrint+0x6e>
    439e:	9e 57       	subi	r25, 0x7E	; 126
    43a0:	a8 f1       	brcs	.+106    	; 0x440c <lrint+0x72>
    43a2:	98 51       	subi	r25, 0x18	; 24
    43a4:	60 f0       	brcs	.+24     	; 0x43be <lrint+0x24>
    43a6:	39 f1       	breq	.+78     	; 0x43f6 <lrint+0x5c>
    43a8:	98 30       	cpi	r25, 0x08	; 8
    43aa:	70 f5       	brcc	.+92     	; 0x4408 <lrint+0x6e>
    43ac:	09 2e       	mov	r0, r25
    43ae:	99 27       	eor	r25, r25
    43b0:	66 0f       	add	r22, r22
    43b2:	77 1f       	adc	r23, r23
    43b4:	88 1f       	adc	r24, r24
    43b6:	99 1f       	adc	r25, r25
    43b8:	0a 94       	dec	r0
    43ba:	d1 f7       	brne	.-12     	; 0x43b0 <lrint+0x16>
    43bc:	1c c0       	rjmp	.+56     	; 0x43f6 <lrint+0x5c>
    43be:	bb 27       	eor	r27, r27
    43c0:	99 3f       	cpi	r25, 0xF9	; 249
    43c2:	4c f4       	brge	.+18     	; 0x43d6 <lrint+0x3c>
    43c4:	b1 11       	cpse	r27, r1
    43c6:	b1 e0       	ldi	r27, 0x01	; 1
    43c8:	b6 2b       	or	r27, r22
    43ca:	67 2f       	mov	r22, r23
    43cc:	78 2f       	mov	r23, r24
    43ce:	88 27       	eor	r24, r24
    43d0:	98 5f       	subi	r25, 0xF8	; 248
    43d2:	b1 f7       	brne	.-20     	; 0x43c0 <lrint+0x26>
    43d4:	08 c0       	rjmp	.+16     	; 0x43e6 <lrint+0x4c>
    43d6:	86 95       	lsr	r24
    43d8:	77 95       	ror	r23
    43da:	67 95       	ror	r22
    43dc:	b7 95       	ror	r27
    43de:	08 f4       	brcc	.+2      	; 0x43e2 <lrint+0x48>
    43e0:	b1 60       	ori	r27, 0x01	; 1
    43e2:	93 95       	inc	r25
    43e4:	c1 f7       	brne	.-16     	; 0x43d6 <lrint+0x3c>
    43e6:	bb 0f       	add	r27, r27
    43e8:	30 f4       	brcc	.+12     	; 0x43f6 <lrint+0x5c>
    43ea:	11 f4       	brne	.+4      	; 0x43f0 <lrint+0x56>
    43ec:	60 ff       	sbrs	r22, 0
    43ee:	03 c0       	rjmp	.+6      	; 0x43f6 <lrint+0x5c>
    43f0:	6f 5f       	subi	r22, 0xFF	; 255
    43f2:	7f 4f       	sbci	r23, 0xFF	; 255
    43f4:	8f 4f       	sbci	r24, 0xFF	; 255
    43f6:	3e f4       	brtc	.+14     	; 0x4406 <lrint+0x6c>
    43f8:	90 95       	com	r25
    43fa:	80 95       	com	r24
    43fc:	70 95       	com	r23
    43fe:	61 95       	neg	r22
    4400:	7f 4f       	sbci	r23, 0xFF	; 255
    4402:	8f 4f       	sbci	r24, 0xFF	; 255
    4404:	9f 4f       	sbci	r25, 0xFF	; 255
    4406:	08 95       	ret
    4408:	68 94       	set
    440a:	bd cf       	rjmp	.-134    	; 0x4386 <__fp_szero>
    440c:	bb cf       	rjmp	.-138    	; 0x4384 <__fp_zero>

0000440e <__mulsf3>:
    440e:	0b d0       	rcall	.+22     	; 0x4426 <__mulsf3x>
    4410:	86 cf       	rjmp	.-244    	; 0x431e <__fp_round>
    4412:	77 df       	rcall	.-274    	; 0x4302 <__fp_pscA>
    4414:	28 f0       	brcs	.+10     	; 0x4420 <__mulsf3+0x12>
    4416:	7c df       	rcall	.-264    	; 0x4310 <__fp_pscB>
    4418:	18 f0       	brcs	.+6      	; 0x4420 <__mulsf3+0x12>
    441a:	95 23       	and	r25, r21
    441c:	09 f0       	breq	.+2      	; 0x4420 <__mulsf3+0x12>
    441e:	68 cf       	rjmp	.-304    	; 0x42f0 <__fp_inf>
    4420:	6d cf       	rjmp	.-294    	; 0x42fc <__fp_nan>
    4422:	11 24       	eor	r1, r1
    4424:	b0 cf       	rjmp	.-160    	; 0x4386 <__fp_szero>

00004426 <__mulsf3x>:
    4426:	8c df       	rcall	.-232    	; 0x4340 <__fp_split3>
    4428:	a0 f3       	brcs	.-24     	; 0x4412 <__mulsf3+0x4>

0000442a <__mulsf3_pse>:
    442a:	95 9f       	mul	r25, r21
    442c:	d1 f3       	breq	.-12     	; 0x4422 <__mulsf3+0x14>
    442e:	95 0f       	add	r25, r21
    4430:	50 e0       	ldi	r21, 0x00	; 0
    4432:	55 1f       	adc	r21, r21
    4434:	62 9f       	mul	r22, r18
    4436:	f0 01       	movw	r30, r0
    4438:	72 9f       	mul	r23, r18
    443a:	bb 27       	eor	r27, r27
    443c:	f0 0d       	add	r31, r0
    443e:	b1 1d       	adc	r27, r1
    4440:	63 9f       	mul	r22, r19
    4442:	aa 27       	eor	r26, r26
    4444:	f0 0d       	add	r31, r0
    4446:	b1 1d       	adc	r27, r1
    4448:	aa 1f       	adc	r26, r26
    444a:	64 9f       	mul	r22, r20
    444c:	66 27       	eor	r22, r22
    444e:	b0 0d       	add	r27, r0
    4450:	a1 1d       	adc	r26, r1
    4452:	66 1f       	adc	r22, r22
    4454:	82 9f       	mul	r24, r18
    4456:	22 27       	eor	r18, r18
    4458:	b0 0d       	add	r27, r0
    445a:	a1 1d       	adc	r26, r1
    445c:	62 1f       	adc	r22, r18
    445e:	73 9f       	mul	r23, r19
    4460:	b0 0d       	add	r27, r0
    4462:	a1 1d       	adc	r26, r1
    4464:	62 1f       	adc	r22, r18
    4466:	83 9f       	mul	r24, r19
    4468:	a0 0d       	add	r26, r0
    446a:	61 1d       	adc	r22, r1
    446c:	22 1f       	adc	r18, r18
    446e:	74 9f       	mul	r23, r20
    4470:	33 27       	eor	r19, r19
    4472:	a0 0d       	add	r26, r0
    4474:	61 1d       	adc	r22, r1
    4476:	23 1f       	adc	r18, r19
    4478:	84 9f       	mul	r24, r20
    447a:	60 0d       	add	r22, r0
    447c:	21 1d       	adc	r18, r1
    447e:	82 2f       	mov	r24, r18
    4480:	76 2f       	mov	r23, r22
    4482:	6a 2f       	mov	r22, r26
    4484:	11 24       	eor	r1, r1
    4486:	9f 57       	subi	r25, 0x7F	; 127
    4488:	50 40       	sbci	r21, 0x00	; 0
    448a:	8a f0       	brmi	.+34     	; 0x44ae <__mulsf3_pse+0x84>
    448c:	e1 f0       	breq	.+56     	; 0x44c6 <__mulsf3_pse+0x9c>
    448e:	88 23       	and	r24, r24
    4490:	4a f0       	brmi	.+18     	; 0x44a4 <__mulsf3_pse+0x7a>
    4492:	ee 0f       	add	r30, r30
    4494:	ff 1f       	adc	r31, r31
    4496:	bb 1f       	adc	r27, r27
    4498:	66 1f       	adc	r22, r22
    449a:	77 1f       	adc	r23, r23
    449c:	88 1f       	adc	r24, r24
    449e:	91 50       	subi	r25, 0x01	; 1
    44a0:	50 40       	sbci	r21, 0x00	; 0
    44a2:	a9 f7       	brne	.-22     	; 0x448e <__mulsf3_pse+0x64>
    44a4:	9e 3f       	cpi	r25, 0xFE	; 254
    44a6:	51 05       	cpc	r21, r1
    44a8:	70 f0       	brcs	.+28     	; 0x44c6 <__mulsf3_pse+0x9c>
    44aa:	22 cf       	rjmp	.-444    	; 0x42f0 <__fp_inf>
    44ac:	6c cf       	rjmp	.-296    	; 0x4386 <__fp_szero>
    44ae:	5f 3f       	cpi	r21, 0xFF	; 255
    44b0:	ec f3       	brlt	.-6      	; 0x44ac <__mulsf3_pse+0x82>
    44b2:	98 3e       	cpi	r25, 0xE8	; 232
    44b4:	dc f3       	brlt	.-10     	; 0x44ac <__mulsf3_pse+0x82>
    44b6:	86 95       	lsr	r24
    44b8:	77 95       	ror	r23
    44ba:	67 95       	ror	r22
    44bc:	b7 95       	ror	r27
    44be:	f7 95       	ror	r31
    44c0:	e7 95       	ror	r30
    44c2:	9f 5f       	subi	r25, 0xFF	; 255
    44c4:	c1 f7       	brne	.-16     	; 0x44b6 <__mulsf3_pse+0x8c>
    44c6:	fe 2b       	or	r31, r30
    44c8:	88 0f       	add	r24, r24
    44ca:	91 1d       	adc	r25, r1
    44cc:	96 95       	lsr	r25
    44ce:	87 95       	ror	r24
    44d0:	97 f9       	bld	r25, 7
    44d2:	08 95       	ret

000044d4 <pow>:
    44d4:	fa 01       	movw	r30, r20
    44d6:	ee 0f       	add	r30, r30
    44d8:	ff 1f       	adc	r31, r31
    44da:	30 96       	adiw	r30, 0x00	; 0
    44dc:	21 05       	cpc	r18, r1
    44de:	31 05       	cpc	r19, r1
    44e0:	99 f1       	breq	.+102    	; 0x4548 <pow+0x74>
    44e2:	61 15       	cp	r22, r1
    44e4:	71 05       	cpc	r23, r1
    44e6:	61 f4       	brne	.+24     	; 0x4500 <pow+0x2c>
    44e8:	80 38       	cpi	r24, 0x80	; 128
    44ea:	bf e3       	ldi	r27, 0x3F	; 63
    44ec:	9b 07       	cpc	r25, r27
    44ee:	49 f1       	breq	.+82     	; 0x4542 <pow+0x6e>
    44f0:	68 94       	set
    44f2:	90 38       	cpi	r25, 0x80	; 128
    44f4:	81 05       	cpc	r24, r1
    44f6:	61 f0       	breq	.+24     	; 0x4510 <pow+0x3c>
    44f8:	80 38       	cpi	r24, 0x80	; 128
    44fa:	bf ef       	ldi	r27, 0xFF	; 255
    44fc:	9b 07       	cpc	r25, r27
    44fe:	41 f0       	breq	.+16     	; 0x4510 <pow+0x3c>
    4500:	99 23       	and	r25, r25
    4502:	42 f5       	brpl	.+80     	; 0x4554 <pow+0x80>
    4504:	ff 3f       	cpi	r31, 0xFF	; 255
    4506:	e1 05       	cpc	r30, r1
    4508:	31 05       	cpc	r19, r1
    450a:	21 05       	cpc	r18, r1
    450c:	11 f1       	breq	.+68     	; 0x4552 <pow+0x7e>
    450e:	e8 94       	clt
    4510:	08 94       	sec
    4512:	e7 95       	ror	r30
    4514:	d9 01       	movw	r26, r18
    4516:	aa 23       	and	r26, r26
    4518:	29 f4       	brne	.+10     	; 0x4524 <pow+0x50>
    451a:	ab 2f       	mov	r26, r27
    451c:	be 2f       	mov	r27, r30
    451e:	f8 5f       	subi	r31, 0xF8	; 248
    4520:	d0 f3       	brcs	.-12     	; 0x4516 <pow+0x42>
    4522:	10 c0       	rjmp	.+32     	; 0x4544 <pow+0x70>
    4524:	ff 5f       	subi	r31, 0xFF	; 255
    4526:	70 f4       	brcc	.+28     	; 0x4544 <pow+0x70>
    4528:	a6 95       	lsr	r26
    452a:	e0 f7       	brcc	.-8      	; 0x4524 <pow+0x50>
    452c:	f7 39       	cpi	r31, 0x97	; 151
    452e:	50 f0       	brcs	.+20     	; 0x4544 <pow+0x70>
    4530:	19 f0       	breq	.+6      	; 0x4538 <pow+0x64>
    4532:	ff 3a       	cpi	r31, 0xAF	; 175
    4534:	38 f4       	brcc	.+14     	; 0x4544 <pow+0x70>
    4536:	9f 77       	andi	r25, 0x7F	; 127
    4538:	9f 93       	push	r25
    453a:	0c d0       	rcall	.+24     	; 0x4554 <pow+0x80>
    453c:	0f 90       	pop	r0
    453e:	07 fc       	sbrc	r0, 7
    4540:	90 58       	subi	r25, 0x80	; 128
    4542:	08 95       	ret
    4544:	3e f0       	brts	.+14     	; 0x4554 <pow+0x80>
    4546:	da ce       	rjmp	.-588    	; 0x42fc <__fp_nan>
    4548:	60 e0       	ldi	r22, 0x00	; 0
    454a:	70 e0       	ldi	r23, 0x00	; 0
    454c:	80 e8       	ldi	r24, 0x80	; 128
    454e:	9f e3       	ldi	r25, 0x3F	; 63
    4550:	08 95       	ret
    4552:	4f e7       	ldi	r20, 0x7F	; 127
    4554:	9f 77       	andi	r25, 0x7F	; 127
    4556:	5f 93       	push	r21
    4558:	4f 93       	push	r20
    455a:	3f 93       	push	r19
    455c:	2f 93       	push	r18
    455e:	9e d0       	rcall	.+316    	; 0x469c <log>
    4560:	2f 91       	pop	r18
    4562:	3f 91       	pop	r19
    4564:	4f 91       	pop	r20
    4566:	5f 91       	pop	r21
    4568:	52 df       	rcall	.-348    	; 0x440e <__mulsf3>
    456a:	05 c0       	rjmp	.+10     	; 0x4576 <exp>
    456c:	19 f4       	brne	.+6      	; 0x4574 <pow+0xa0>
    456e:	0e f0       	brts	.+2      	; 0x4572 <pow+0x9e>
    4570:	bf ce       	rjmp	.-642    	; 0x42f0 <__fp_inf>
    4572:	08 cf       	rjmp	.-496    	; 0x4384 <__fp_zero>
    4574:	c3 ce       	rjmp	.-634    	; 0x42fc <__fp_nan>

00004576 <exp>:
    4576:	ec de       	rcall	.-552    	; 0x4350 <__fp_splitA>
    4578:	c8 f3       	brcs	.-14     	; 0x456c <pow+0x98>
    457a:	96 38       	cpi	r25, 0x86	; 134
    457c:	c0 f7       	brcc	.-16     	; 0x456e <pow+0x9a>
    457e:	07 f8       	bld	r0, 7
    4580:	0f 92       	push	r0
    4582:	e8 94       	clt
    4584:	2b e3       	ldi	r18, 0x3B	; 59
    4586:	3a ea       	ldi	r19, 0xAA	; 170
    4588:	48 eb       	ldi	r20, 0xB8	; 184
    458a:	5f e7       	ldi	r21, 0x7F	; 127
    458c:	4e df       	rcall	.-356    	; 0x442a <__mulsf3_pse>
    458e:	0f 92       	push	r0
    4590:	0f 92       	push	r0
    4592:	0f 92       	push	r0
    4594:	4d b7       	in	r20, 0x3d	; 61
    4596:	5e b7       	in	r21, 0x3e	; 62
    4598:	0f 92       	push	r0
    459a:	c0 d0       	rcall	.+384    	; 0x471c <modf>
    459c:	e8 ec       	ldi	r30, 0xC8	; 200
    459e:	f0 e0       	ldi	r31, 0x00	; 0
    45a0:	16 d0       	rcall	.+44     	; 0x45ce <__fp_powser>
    45a2:	4f 91       	pop	r20
    45a4:	5f 91       	pop	r21
    45a6:	ef 91       	pop	r30
    45a8:	ff 91       	pop	r31
    45aa:	e5 95       	asr	r30
    45ac:	ee 1f       	adc	r30, r30
    45ae:	ff 1f       	adc	r31, r31
    45b0:	49 f0       	breq	.+18     	; 0x45c4 <exp+0x4e>
    45b2:	fe 57       	subi	r31, 0x7E	; 126
    45b4:	e0 68       	ori	r30, 0x80	; 128
    45b6:	44 27       	eor	r20, r20
    45b8:	ee 0f       	add	r30, r30
    45ba:	44 1f       	adc	r20, r20
    45bc:	fa 95       	dec	r31
    45be:	e1 f7       	brne	.-8      	; 0x45b8 <exp+0x42>
    45c0:	41 95       	neg	r20
    45c2:	55 0b       	sbc	r21, r21
    45c4:	32 d0       	rcall	.+100    	; 0x462a <ldexp>
    45c6:	0f 90       	pop	r0
    45c8:	07 fe       	sbrs	r0, 7
    45ca:	26 c0       	rjmp	.+76     	; 0x4618 <inverse>
    45cc:	08 95       	ret

000045ce <__fp_powser>:
    45ce:	df 93       	push	r29
    45d0:	cf 93       	push	r28
    45d2:	1f 93       	push	r17
    45d4:	0f 93       	push	r16
    45d6:	ff 92       	push	r15
    45d8:	ef 92       	push	r14
    45da:	df 92       	push	r13
    45dc:	7b 01       	movw	r14, r22
    45de:	8c 01       	movw	r16, r24
    45e0:	68 94       	set
    45e2:	05 c0       	rjmp	.+10     	; 0x45ee <__fp_powser+0x20>
    45e4:	da 2e       	mov	r13, r26
    45e6:	ef 01       	movw	r28, r30
    45e8:	1e df       	rcall	.-452    	; 0x4426 <__mulsf3x>
    45ea:	fe 01       	movw	r30, r28
    45ec:	e8 94       	clt
    45ee:	a5 91       	lpm	r26, Z+
    45f0:	25 91       	lpm	r18, Z+
    45f2:	35 91       	lpm	r19, Z+
    45f4:	45 91       	lpm	r20, Z+
    45f6:	55 91       	lpm	r21, Z+
    45f8:	ae f3       	brts	.-22     	; 0x45e4 <__fp_powser+0x16>
    45fa:	ef 01       	movw	r28, r30
    45fc:	28 dd       	rcall	.-1456   	; 0x404e <__addsf3x>
    45fe:	fe 01       	movw	r30, r28
    4600:	97 01       	movw	r18, r14
    4602:	a8 01       	movw	r20, r16
    4604:	da 94       	dec	r13
    4606:	79 f7       	brne	.-34     	; 0x45e6 <__fp_powser+0x18>
    4608:	df 90       	pop	r13
    460a:	ef 90       	pop	r14
    460c:	ff 90       	pop	r15
    460e:	0f 91       	pop	r16
    4610:	1f 91       	pop	r17
    4612:	cf 91       	pop	r28
    4614:	df 91       	pop	r29
    4616:	08 95       	ret

00004618 <inverse>:
    4618:	9b 01       	movw	r18, r22
    461a:	ac 01       	movw	r20, r24
    461c:	60 e0       	ldi	r22, 0x00	; 0
    461e:	70 e0       	ldi	r23, 0x00	; 0
    4620:	80 e8       	ldi	r24, 0x80	; 128
    4622:	9f e3       	ldi	r25, 0x3F	; 63
    4624:	6b cd       	rjmp	.-1322   	; 0x40fc <__divsf3>
    4626:	64 ce       	rjmp	.-824    	; 0x42f0 <__fp_inf>
    4628:	ac c0       	rjmp	.+344    	; 0x4782 <__fp_mpack>

0000462a <ldexp>:
    462a:	92 de       	rcall	.-732    	; 0x4350 <__fp_splitA>
    462c:	e8 f3       	brcs	.-6      	; 0x4628 <inverse+0x10>
    462e:	99 23       	and	r25, r25
    4630:	d9 f3       	breq	.-10     	; 0x4628 <inverse+0x10>
    4632:	94 0f       	add	r25, r20
    4634:	51 1d       	adc	r21, r1
    4636:	bb f3       	brvs	.-18     	; 0x4626 <inverse+0xe>
    4638:	91 50       	subi	r25, 0x01	; 1
    463a:	50 40       	sbci	r21, 0x00	; 0
    463c:	94 f0       	brlt	.+36     	; 0x4662 <ldexp+0x38>
    463e:	59 f0       	breq	.+22     	; 0x4656 <ldexp+0x2c>
    4640:	88 23       	and	r24, r24
    4642:	32 f0       	brmi	.+12     	; 0x4650 <ldexp+0x26>
    4644:	66 0f       	add	r22, r22
    4646:	77 1f       	adc	r23, r23
    4648:	88 1f       	adc	r24, r24
    464a:	91 50       	subi	r25, 0x01	; 1
    464c:	50 40       	sbci	r21, 0x00	; 0
    464e:	c1 f7       	brne	.-16     	; 0x4640 <ldexp+0x16>
    4650:	9e 3f       	cpi	r25, 0xFE	; 254
    4652:	51 05       	cpc	r21, r1
    4654:	44 f7       	brge	.-48     	; 0x4626 <inverse+0xe>
    4656:	88 0f       	add	r24, r24
    4658:	91 1d       	adc	r25, r1
    465a:	96 95       	lsr	r25
    465c:	87 95       	ror	r24
    465e:	97 f9       	bld	r25, 7
    4660:	08 95       	ret
    4662:	5f 3f       	cpi	r21, 0xFF	; 255
    4664:	ac f0       	brlt	.+42     	; 0x4690 <ldexp+0x66>
    4666:	98 3e       	cpi	r25, 0xE8	; 232
    4668:	9c f0       	brlt	.+38     	; 0x4690 <ldexp+0x66>
    466a:	bb 27       	eor	r27, r27
    466c:	86 95       	lsr	r24
    466e:	77 95       	ror	r23
    4670:	67 95       	ror	r22
    4672:	b7 95       	ror	r27
    4674:	08 f4       	brcc	.+2      	; 0x4678 <ldexp+0x4e>
    4676:	b1 60       	ori	r27, 0x01	; 1
    4678:	93 95       	inc	r25
    467a:	c1 f7       	brne	.-16     	; 0x466c <ldexp+0x42>
    467c:	bb 0f       	add	r27, r27
    467e:	58 f7       	brcc	.-42     	; 0x4656 <ldexp+0x2c>
    4680:	11 f4       	brne	.+4      	; 0x4686 <ldexp+0x5c>
    4682:	60 ff       	sbrs	r22, 0
    4684:	e8 cf       	rjmp	.-48     	; 0x4656 <ldexp+0x2c>
    4686:	6f 5f       	subi	r22, 0xFF	; 255
    4688:	7f 4f       	sbci	r23, 0xFF	; 255
    468a:	8f 4f       	sbci	r24, 0xFF	; 255
    468c:	9f 4f       	sbci	r25, 0xFF	; 255
    468e:	e3 cf       	rjmp	.-58     	; 0x4656 <ldexp+0x2c>
    4690:	7a ce       	rjmp	.-780    	; 0x4386 <__fp_szero>
    4692:	0e f0       	brts	.+2      	; 0x4696 <ldexp+0x6c>
    4694:	76 c0       	rjmp	.+236    	; 0x4782 <__fp_mpack>
    4696:	32 ce       	rjmp	.-924    	; 0x42fc <__fp_nan>
    4698:	68 94       	set
    469a:	2a ce       	rjmp	.-940    	; 0x42f0 <__fp_inf>

0000469c <log>:
    469c:	59 de       	rcall	.-846    	; 0x4350 <__fp_splitA>
    469e:	c8 f3       	brcs	.-14     	; 0x4692 <ldexp+0x68>
    46a0:	99 23       	and	r25, r25
    46a2:	d1 f3       	breq	.-12     	; 0x4698 <ldexp+0x6e>
    46a4:	c6 f3       	brts	.-16     	; 0x4696 <ldexp+0x6c>
    46a6:	df 93       	push	r29
    46a8:	cf 93       	push	r28
    46aa:	1f 93       	push	r17
    46ac:	0f 93       	push	r16
    46ae:	ff 92       	push	r15
    46b0:	c9 2f       	mov	r28, r25
    46b2:	dd 27       	eor	r29, r29
    46b4:	88 23       	and	r24, r24
    46b6:	2a f0       	brmi	.+10     	; 0x46c2 <log+0x26>
    46b8:	21 97       	sbiw	r28, 0x01	; 1
    46ba:	66 0f       	add	r22, r22
    46bc:	77 1f       	adc	r23, r23
    46be:	88 1f       	adc	r24, r24
    46c0:	da f7       	brpl	.-10     	; 0x46b8 <log+0x1c>
    46c2:	20 e0       	ldi	r18, 0x00	; 0
    46c4:	30 e0       	ldi	r19, 0x00	; 0
    46c6:	40 e8       	ldi	r20, 0x80	; 128
    46c8:	5f eb       	ldi	r21, 0xBF	; 191
    46ca:	9f e3       	ldi	r25, 0x3F	; 63
    46cc:	88 39       	cpi	r24, 0x98	; 152
    46ce:	20 f0       	brcs	.+8      	; 0x46d8 <log+0x3c>
    46d0:	80 3e       	cpi	r24, 0xE0	; 224
    46d2:	30 f0       	brcs	.+12     	; 0x46e0 <log+0x44>
    46d4:	21 96       	adiw	r28, 0x01	; 1
    46d6:	8f 77       	andi	r24, 0x7F	; 127
    46d8:	a9 dc       	rcall	.-1710   	; 0x402c <__addsf3>
    46da:	e0 ef       	ldi	r30, 0xF0	; 240
    46dc:	f0 e0       	ldi	r31, 0x00	; 0
    46de:	03 c0       	rjmp	.+6      	; 0x46e6 <log+0x4a>
    46e0:	a5 dc       	rcall	.-1718   	; 0x402c <__addsf3>
    46e2:	ed e1       	ldi	r30, 0x1D	; 29
    46e4:	f1 e0       	ldi	r31, 0x01	; 1
    46e6:	73 df       	rcall	.-282    	; 0x45ce <__fp_powser>
    46e8:	8b 01       	movw	r16, r22
    46ea:	be 01       	movw	r22, r28
    46ec:	ec 01       	movw	r28, r24
    46ee:	fb 2e       	mov	r15, r27
    46f0:	6f 57       	subi	r22, 0x7F	; 127
    46f2:	71 09       	sbc	r23, r1
    46f4:	75 95       	asr	r23
    46f6:	77 1f       	adc	r23, r23
    46f8:	88 0b       	sbc	r24, r24
    46fa:	99 0b       	sbc	r25, r25
    46fc:	9a dd       	rcall	.-1228   	; 0x4232 <__floatsisf>
    46fe:	28 e1       	ldi	r18, 0x18	; 24
    4700:	32 e7       	ldi	r19, 0x72	; 114
    4702:	41 e3       	ldi	r20, 0x31	; 49
    4704:	5f e3       	ldi	r21, 0x3F	; 63
    4706:	8f de       	rcall	.-738    	; 0x4426 <__mulsf3x>
    4708:	af 2d       	mov	r26, r15
    470a:	98 01       	movw	r18, r16
    470c:	ae 01       	movw	r20, r28
    470e:	ff 90       	pop	r15
    4710:	0f 91       	pop	r16
    4712:	1f 91       	pop	r17
    4714:	cf 91       	pop	r28
    4716:	df 91       	pop	r29
    4718:	9a dc       	rcall	.-1740   	; 0x404e <__addsf3x>
    471a:	01 ce       	rjmp	.-1022   	; 0x431e <__fp_round>

0000471c <modf>:
    471c:	fa 01       	movw	r30, r20
    471e:	dc 01       	movw	r26, r24
    4720:	aa 0f       	add	r26, r26
    4722:	bb 1f       	adc	r27, r27
    4724:	9b 01       	movw	r18, r22
    4726:	ac 01       	movw	r20, r24
    4728:	bf 57       	subi	r27, 0x7F	; 127
    472a:	28 f4       	brcc	.+10     	; 0x4736 <modf+0x1a>
    472c:	22 27       	eor	r18, r18
    472e:	33 27       	eor	r19, r19
    4730:	44 27       	eor	r20, r20
    4732:	50 78       	andi	r21, 0x80	; 128
    4734:	1f c0       	rjmp	.+62     	; 0x4774 <modf+0x58>
    4736:	b7 51       	subi	r27, 0x17	; 23
    4738:	88 f4       	brcc	.+34     	; 0x475c <modf+0x40>
    473a:	ab 2f       	mov	r26, r27
    473c:	00 24       	eor	r0, r0
    473e:	46 95       	lsr	r20
    4740:	37 95       	ror	r19
    4742:	27 95       	ror	r18
    4744:	01 1c       	adc	r0, r1
    4746:	a3 95       	inc	r26
    4748:	d2 f3       	brmi	.-12     	; 0x473e <modf+0x22>
    474a:	00 20       	and	r0, r0
    474c:	69 f0       	breq	.+26     	; 0x4768 <modf+0x4c>
    474e:	22 0f       	add	r18, r18
    4750:	33 1f       	adc	r19, r19
    4752:	44 1f       	adc	r20, r20
    4754:	b3 95       	inc	r27
    4756:	da f3       	brmi	.-10     	; 0x474e <modf+0x32>
    4758:	0d d0       	rcall	.+26     	; 0x4774 <modf+0x58>
    475a:	67 cc       	rjmp	.-1842   	; 0x402a <__subsf3>
    475c:	61 30       	cpi	r22, 0x01	; 1
    475e:	71 05       	cpc	r23, r1
    4760:	a0 e8       	ldi	r26, 0x80	; 128
    4762:	8a 07       	cpc	r24, r26
    4764:	b9 46       	sbci	r27, 0x69	; 105
    4766:	30 f4       	brcc	.+12     	; 0x4774 <modf+0x58>
    4768:	9b 01       	movw	r18, r22
    476a:	ac 01       	movw	r20, r24
    476c:	66 27       	eor	r22, r22
    476e:	77 27       	eor	r23, r23
    4770:	88 27       	eor	r24, r24
    4772:	90 78       	andi	r25, 0x80	; 128
    4774:	30 96       	adiw	r30, 0x00	; 0
    4776:	21 f0       	breq	.+8      	; 0x4780 <modf+0x64>
    4778:	20 83       	st	Z, r18
    477a:	31 83       	std	Z+1, r19	; 0x01
    477c:	42 83       	std	Z+2, r20	; 0x02
    477e:	53 83       	std	Z+3, r21	; 0x03
    4780:	08 95       	ret

00004782 <__fp_mpack>:
    4782:	9f 3f       	cpi	r25, 0xFF	; 255
    4784:	31 f0       	breq	.+12     	; 0x4792 <__fp_mpack_finite+0xc>

00004786 <__fp_mpack_finite>:
    4786:	91 50       	subi	r25, 0x01	; 1
    4788:	20 f4       	brcc	.+8      	; 0x4792 <__fp_mpack_finite+0xc>
    478a:	87 95       	ror	r24
    478c:	77 95       	ror	r23
    478e:	67 95       	ror	r22
    4790:	b7 95       	ror	r27
    4792:	88 0f       	add	r24, r24
    4794:	91 1d       	adc	r25, r1
    4796:	96 95       	lsr	r25
    4798:	87 95       	ror	r24
    479a:	97 f9       	bld	r25, 7
    479c:	08 95       	ret

0000479e <vfprintf>:
    479e:	a1 e1       	ldi	r26, 0x11	; 17
    47a0:	b0 e0       	ldi	r27, 0x00	; 0
    47a2:	e4 ed       	ldi	r30, 0xD4	; 212
    47a4:	f3 e2       	ldi	r31, 0x23	; 35
    47a6:	b7 c3       	rjmp	.+1902   	; 0x4f16 <__prologue_saves__>
    47a8:	3c 01       	movw	r6, r24
    47aa:	7f 87       	std	Y+15, r23	; 0x0f
    47ac:	6e 87       	std	Y+14, r22	; 0x0e
    47ae:	6a 01       	movw	r12, r20
    47b0:	fc 01       	movw	r30, r24
    47b2:	17 82       	std	Z+7, r1	; 0x07
    47b4:	16 82       	std	Z+6, r1	; 0x06
    47b6:	83 81       	ldd	r24, Z+3	; 0x03
    47b8:	81 fd       	sbrc	r24, 1
    47ba:	03 c0       	rjmp	.+6      	; 0x47c2 <vfprintf+0x24>
    47bc:	6f ef       	ldi	r22, 0xFF	; 255
    47be:	7f ef       	ldi	r23, 0xFF	; 255
    47c0:	52 c3       	rjmp	.+1700   	; 0x4e66 <vfprintf+0x6c8>
    47c2:	9e 01       	movw	r18, r28
    47c4:	2f 5f       	subi	r18, 0xFF	; 255
    47c6:	3f 4f       	sbci	r19, 0xFF	; 255
    47c8:	39 8b       	std	Y+17, r19	; 0x11
    47ca:	28 8b       	std	Y+16, r18	; 0x10
    47cc:	f3 01       	movw	r30, r6
    47ce:	23 81       	ldd	r18, Z+3	; 0x03
    47d0:	ee 85       	ldd	r30, Y+14	; 0x0e
    47d2:	ff 85       	ldd	r31, Y+15	; 0x0f
    47d4:	23 fd       	sbrc	r18, 3
    47d6:	85 91       	lpm	r24, Z+
    47d8:	23 ff       	sbrs	r18, 3
    47da:	81 91       	ld	r24, Z+
    47dc:	ff 87       	std	Y+15, r31	; 0x0f
    47de:	ee 87       	std	Y+14, r30	; 0x0e
    47e0:	88 23       	and	r24, r24
    47e2:	09 f4       	brne	.+2      	; 0x47e6 <vfprintf+0x48>
    47e4:	3d c3       	rjmp	.+1658   	; 0x4e60 <vfprintf+0x6c2>
    47e6:	85 32       	cpi	r24, 0x25	; 37
    47e8:	51 f4       	brne	.+20     	; 0x47fe <vfprintf+0x60>
    47ea:	ee 85       	ldd	r30, Y+14	; 0x0e
    47ec:	ff 85       	ldd	r31, Y+15	; 0x0f
    47ee:	23 fd       	sbrc	r18, 3
    47f0:	85 91       	lpm	r24, Z+
    47f2:	23 ff       	sbrs	r18, 3
    47f4:	81 91       	ld	r24, Z+
    47f6:	ff 87       	std	Y+15, r31	; 0x0f
    47f8:	ee 87       	std	Y+14, r30	; 0x0e
    47fa:	85 32       	cpi	r24, 0x25	; 37
    47fc:	21 f4       	brne	.+8      	; 0x4806 <vfprintf+0x68>
    47fe:	90 e0       	ldi	r25, 0x00	; 0
    4800:	b3 01       	movw	r22, r6
    4802:	20 d6       	rcall	.+3136   	; 0x5444 <fputc>
    4804:	e3 cf       	rjmp	.-58     	; 0x47cc <vfprintf+0x2e>
    4806:	98 2f       	mov	r25, r24
    4808:	10 e0       	ldi	r17, 0x00	; 0
    480a:	88 24       	eor	r8, r8
    480c:	99 24       	eor	r9, r9
    480e:	10 32       	cpi	r17, 0x20	; 32
    4810:	b0 f4       	brcc	.+44     	; 0x483e <vfprintf+0xa0>
    4812:	9b 32       	cpi	r25, 0x2B	; 43
    4814:	69 f0       	breq	.+26     	; 0x4830 <vfprintf+0x92>
    4816:	9c 32       	cpi	r25, 0x2C	; 44
    4818:	28 f4       	brcc	.+10     	; 0x4824 <vfprintf+0x86>
    481a:	90 32       	cpi	r25, 0x20	; 32
    481c:	51 f0       	breq	.+20     	; 0x4832 <vfprintf+0x94>
    481e:	93 32       	cpi	r25, 0x23	; 35
    4820:	71 f4       	brne	.+28     	; 0x483e <vfprintf+0xa0>
    4822:	0b c0       	rjmp	.+22     	; 0x483a <vfprintf+0x9c>
    4824:	9d 32       	cpi	r25, 0x2D	; 45
    4826:	39 f0       	breq	.+14     	; 0x4836 <vfprintf+0x98>
    4828:	90 33       	cpi	r25, 0x30	; 48
    482a:	49 f4       	brne	.+18     	; 0x483e <vfprintf+0xa0>
    482c:	11 60       	ori	r17, 0x01	; 1
    482e:	28 c0       	rjmp	.+80     	; 0x4880 <vfprintf+0xe2>
    4830:	12 60       	ori	r17, 0x02	; 2
    4832:	14 60       	ori	r17, 0x04	; 4
    4834:	25 c0       	rjmp	.+74     	; 0x4880 <vfprintf+0xe2>
    4836:	18 60       	ori	r17, 0x08	; 8
    4838:	23 c0       	rjmp	.+70     	; 0x4880 <vfprintf+0xe2>
    483a:	10 61       	ori	r17, 0x10	; 16
    483c:	21 c0       	rjmp	.+66     	; 0x4880 <vfprintf+0xe2>
    483e:	17 fd       	sbrc	r17, 7
    4840:	2a c0       	rjmp	.+84     	; 0x4896 <vfprintf+0xf8>
    4842:	89 2f       	mov	r24, r25
    4844:	80 53       	subi	r24, 0x30	; 48
    4846:	8a 30       	cpi	r24, 0x0A	; 10
    4848:	78 f4       	brcc	.+30     	; 0x4868 <vfprintf+0xca>
    484a:	16 ff       	sbrs	r17, 6
    484c:	06 c0       	rjmp	.+12     	; 0x485a <vfprintf+0xbc>
    484e:	fa e0       	ldi	r31, 0x0A	; 10
    4850:	9f 9e       	mul	r9, r31
    4852:	90 2c       	mov	r9, r0
    4854:	11 24       	eor	r1, r1
    4856:	98 0e       	add	r9, r24
    4858:	13 c0       	rjmp	.+38     	; 0x4880 <vfprintf+0xe2>
    485a:	3a e0       	ldi	r19, 0x0A	; 10
    485c:	83 9e       	mul	r8, r19
    485e:	80 2c       	mov	r8, r0
    4860:	11 24       	eor	r1, r1
    4862:	88 0e       	add	r8, r24
    4864:	10 62       	ori	r17, 0x20	; 32
    4866:	0c c0       	rjmp	.+24     	; 0x4880 <vfprintf+0xe2>
    4868:	9e 32       	cpi	r25, 0x2E	; 46
    486a:	21 f4       	brne	.+8      	; 0x4874 <vfprintf+0xd6>
    486c:	16 fd       	sbrc	r17, 6
    486e:	f8 c2       	rjmp	.+1520   	; 0x4e60 <vfprintf+0x6c2>
    4870:	10 64       	ori	r17, 0x40	; 64
    4872:	06 c0       	rjmp	.+12     	; 0x4880 <vfprintf+0xe2>
    4874:	9c 36       	cpi	r25, 0x6C	; 108
    4876:	11 f4       	brne	.+4      	; 0x487c <vfprintf+0xde>
    4878:	10 68       	ori	r17, 0x80	; 128
    487a:	02 c0       	rjmp	.+4      	; 0x4880 <vfprintf+0xe2>
    487c:	98 36       	cpi	r25, 0x68	; 104
    487e:	59 f4       	brne	.+22     	; 0x4896 <vfprintf+0xf8>
    4880:	ee 85       	ldd	r30, Y+14	; 0x0e
    4882:	ff 85       	ldd	r31, Y+15	; 0x0f
    4884:	23 fd       	sbrc	r18, 3
    4886:	95 91       	lpm	r25, Z+
    4888:	23 ff       	sbrs	r18, 3
    488a:	91 91       	ld	r25, Z+
    488c:	ff 87       	std	Y+15, r31	; 0x0f
    488e:	ee 87       	std	Y+14, r30	; 0x0e
    4890:	99 23       	and	r25, r25
    4892:	09 f0       	breq	.+2      	; 0x4896 <vfprintf+0xf8>
    4894:	bc cf       	rjmp	.-136    	; 0x480e <vfprintf+0x70>
    4896:	89 2f       	mov	r24, r25
    4898:	85 54       	subi	r24, 0x45	; 69
    489a:	83 30       	cpi	r24, 0x03	; 3
    489c:	20 f4       	brcc	.+8      	; 0x48a6 <vfprintf+0x108>
    489e:	81 2f       	mov	r24, r17
    48a0:	80 61       	ori	r24, 0x10	; 16
    48a2:	90 5e       	subi	r25, 0xE0	; 224
    48a4:	07 c0       	rjmp	.+14     	; 0x48b4 <vfprintf+0x116>
    48a6:	89 2f       	mov	r24, r25
    48a8:	85 56       	subi	r24, 0x65	; 101
    48aa:	83 30       	cpi	r24, 0x03	; 3
    48ac:	08 f0       	brcs	.+2      	; 0x48b0 <vfprintf+0x112>
    48ae:	8f c1       	rjmp	.+798    	; 0x4bce <vfprintf+0x430>
    48b0:	81 2f       	mov	r24, r17
    48b2:	8f 7e       	andi	r24, 0xEF	; 239
    48b4:	86 fd       	sbrc	r24, 6
    48b6:	02 c0       	rjmp	.+4      	; 0x48bc <vfprintf+0x11e>
    48b8:	76 e0       	ldi	r23, 0x06	; 6
    48ba:	97 2e       	mov	r9, r23
    48bc:	6f e3       	ldi	r22, 0x3F	; 63
    48be:	f6 2e       	mov	r15, r22
    48c0:	f8 22       	and	r15, r24
    48c2:	95 36       	cpi	r25, 0x65	; 101
    48c4:	19 f4       	brne	.+6      	; 0x48cc <vfprintf+0x12e>
    48c6:	f0 e4       	ldi	r31, 0x40	; 64
    48c8:	ff 2a       	or	r15, r31
    48ca:	07 c0       	rjmp	.+14     	; 0x48da <vfprintf+0x13c>
    48cc:	96 36       	cpi	r25, 0x66	; 102
    48ce:	19 f4       	brne	.+6      	; 0x48d6 <vfprintf+0x138>
    48d0:	20 e8       	ldi	r18, 0x80	; 128
    48d2:	f2 2a       	or	r15, r18
    48d4:	02 c0       	rjmp	.+4      	; 0x48da <vfprintf+0x13c>
    48d6:	91 10       	cpse	r9, r1
    48d8:	9a 94       	dec	r9
    48da:	f7 fe       	sbrs	r15, 7
    48dc:	0a c0       	rjmp	.+20     	; 0x48f2 <vfprintf+0x154>
    48de:	3b e3       	ldi	r19, 0x3B	; 59
    48e0:	39 15       	cp	r19, r9
    48e2:	18 f4       	brcc	.+6      	; 0x48ea <vfprintf+0x14c>
    48e4:	5c e3       	ldi	r21, 0x3C	; 60
    48e6:	b5 2e       	mov	r11, r21
    48e8:	02 c0       	rjmp	.+4      	; 0x48ee <vfprintf+0x150>
    48ea:	b9 2c       	mov	r11, r9
    48ec:	b3 94       	inc	r11
    48ee:	27 e0       	ldi	r18, 0x07	; 7
    48f0:	09 c0       	rjmp	.+18     	; 0x4904 <vfprintf+0x166>
    48f2:	47 e0       	ldi	r20, 0x07	; 7
    48f4:	49 15       	cp	r20, r9
    48f6:	20 f4       	brcc	.+8      	; 0x4900 <vfprintf+0x162>
    48f8:	bb 24       	eor	r11, r11
    48fa:	47 e0       	ldi	r20, 0x07	; 7
    48fc:	94 2e       	mov	r9, r20
    48fe:	f7 cf       	rjmp	.-18     	; 0x48ee <vfprintf+0x150>
    4900:	29 2d       	mov	r18, r9
    4902:	bb 24       	eor	r11, r11
    4904:	c6 01       	movw	r24, r12
    4906:	04 96       	adiw	r24, 0x04	; 4
    4908:	9d 87       	std	Y+13, r25	; 0x0d
    490a:	8c 87       	std	Y+12, r24	; 0x0c
    490c:	f6 01       	movw	r30, r12
    490e:	60 81       	ld	r22, Z
    4910:	71 81       	ldd	r23, Z+1	; 0x01
    4912:	82 81       	ldd	r24, Z+2	; 0x02
    4914:	93 81       	ldd	r25, Z+3	; 0x03
    4916:	ae 01       	movw	r20, r28
    4918:	4f 5f       	subi	r20, 0xFF	; 255
    491a:	5f 4f       	sbci	r21, 0xFF	; 255
    491c:	0b 2d       	mov	r16, r11
    491e:	a4 d4       	rcall	.+2376   	; 0x5268 <__ftoa_engine>
    4920:	6c 01       	movw	r12, r24
    4922:	09 81       	ldd	r16, Y+1	; 0x01
    4924:	20 2e       	mov	r2, r16
    4926:	33 24       	eor	r3, r3
    4928:	00 ff       	sbrs	r16, 0
    492a:	04 c0       	rjmp	.+8      	; 0x4934 <vfprintf+0x196>
    492c:	03 fd       	sbrc	r16, 3
    492e:	02 c0       	rjmp	.+4      	; 0x4934 <vfprintf+0x196>
    4930:	1d e2       	ldi	r17, 0x2D	; 45
    4932:	09 c0       	rjmp	.+18     	; 0x4946 <vfprintf+0x1a8>
    4934:	f1 fe       	sbrs	r15, 1
    4936:	02 c0       	rjmp	.+4      	; 0x493c <vfprintf+0x19e>
    4938:	1b e2       	ldi	r17, 0x2B	; 43
    493a:	05 c0       	rjmp	.+10     	; 0x4946 <vfprintf+0x1a8>
    493c:	f2 fc       	sbrc	r15, 2
    493e:	02 c0       	rjmp	.+4      	; 0x4944 <vfprintf+0x1a6>
    4940:	10 e0       	ldi	r17, 0x00	; 0
    4942:	01 c0       	rjmp	.+2      	; 0x4946 <vfprintf+0x1a8>
    4944:	10 e2       	ldi	r17, 0x20	; 32
    4946:	c1 01       	movw	r24, r2
    4948:	8c 70       	andi	r24, 0x0C	; 12
    494a:	90 70       	andi	r25, 0x00	; 0
    494c:	89 2b       	or	r24, r25
    494e:	a1 f1       	breq	.+104    	; 0x49b8 <vfprintf+0x21a>
    4950:	11 23       	and	r17, r17
    4952:	11 f4       	brne	.+4      	; 0x4958 <vfprintf+0x1ba>
    4954:	83 e0       	ldi	r24, 0x03	; 3
    4956:	01 c0       	rjmp	.+2      	; 0x495a <vfprintf+0x1bc>
    4958:	84 e0       	ldi	r24, 0x04	; 4
    495a:	88 15       	cp	r24, r8
    495c:	10 f0       	brcs	.+4      	; 0x4962 <vfprintf+0x1c4>
    495e:	88 24       	eor	r8, r8
    4960:	09 c0       	rjmp	.+18     	; 0x4974 <vfprintf+0x1d6>
    4962:	88 1a       	sub	r8, r24
    4964:	f3 fc       	sbrc	r15, 3
    4966:	06 c0       	rjmp	.+12     	; 0x4974 <vfprintf+0x1d6>
    4968:	80 e2       	ldi	r24, 0x20	; 32
    496a:	90 e0       	ldi	r25, 0x00	; 0
    496c:	b3 01       	movw	r22, r6
    496e:	6a d5       	rcall	.+2772   	; 0x5444 <fputc>
    4970:	8a 94       	dec	r8
    4972:	d1 f7       	brne	.-12     	; 0x4968 <vfprintf+0x1ca>
    4974:	11 23       	and	r17, r17
    4976:	21 f0       	breq	.+8      	; 0x4980 <vfprintf+0x1e2>
    4978:	81 2f       	mov	r24, r17
    497a:	90 e0       	ldi	r25, 0x00	; 0
    497c:	b3 01       	movw	r22, r6
    497e:	62 d5       	rcall	.+2756   	; 0x5444 <fputc>
    4980:	23 fe       	sbrs	r2, 3
    4982:	03 c0       	rjmp	.+6      	; 0x498a <vfprintf+0x1ec>
    4984:	0f e5       	ldi	r16, 0x5F	; 95
    4986:	15 e0       	ldi	r17, 0x05	; 5
    4988:	0d c0       	rjmp	.+26     	; 0x49a4 <vfprintf+0x206>
    498a:	03 e6       	ldi	r16, 0x63	; 99
    498c:	15 e0       	ldi	r17, 0x05	; 5
    498e:	0a c0       	rjmp	.+20     	; 0x49a4 <vfprintf+0x206>
    4990:	e1 14       	cp	r14, r1
    4992:	f1 04       	cpc	r15, r1
    4994:	09 f0       	breq	.+2      	; 0x4998 <vfprintf+0x1fa>
    4996:	80 52       	subi	r24, 0x20	; 32
    4998:	90 e0       	ldi	r25, 0x00	; 0
    499a:	b3 01       	movw	r22, r6
    499c:	53 d5       	rcall	.+2726   	; 0x5444 <fputc>
    499e:	0f 5f       	subi	r16, 0xFF	; 255
    49a0:	1f 4f       	sbci	r17, 0xFF	; 255
    49a2:	05 c0       	rjmp	.+10     	; 0x49ae <vfprintf+0x210>
    49a4:	ef 2c       	mov	r14, r15
    49a6:	ff 24       	eor	r15, r15
    49a8:	f0 e1       	ldi	r31, 0x10	; 16
    49aa:	ef 22       	and	r14, r31
    49ac:	ff 24       	eor	r15, r15
    49ae:	f8 01       	movw	r30, r16
    49b0:	84 91       	lpm	r24, Z+
    49b2:	88 23       	and	r24, r24
    49b4:	69 f7       	brne	.-38     	; 0x4990 <vfprintf+0x1f2>
    49b6:	08 c1       	rjmp	.+528    	; 0x4bc8 <vfprintf+0x42a>
    49b8:	f7 fe       	sbrs	r15, 7
    49ba:	12 c0       	rjmp	.+36     	; 0x49e0 <vfprintf+0x242>
    49bc:	bc 0c       	add	r11, r12
    49be:	24 fe       	sbrs	r2, 4
    49c0:	04 c0       	rjmp	.+8      	; 0x49ca <vfprintf+0x22c>
    49c2:	8a 81       	ldd	r24, Y+2	; 0x02
    49c4:	81 33       	cpi	r24, 0x31	; 49
    49c6:	09 f4       	brne	.+2      	; 0x49ca <vfprintf+0x22c>
    49c8:	ba 94       	dec	r11
    49ca:	1b 14       	cp	r1, r11
    49cc:	1c f0       	brlt	.+6      	; 0x49d4 <vfprintf+0x236>
    49ce:	bb 24       	eor	r11, r11
    49d0:	b3 94       	inc	r11
    49d2:	2d c0       	rjmp	.+90     	; 0x4a2e <vfprintf+0x290>
    49d4:	f8 e0       	ldi	r31, 0x08	; 8
    49d6:	fb 15       	cp	r31, r11
    49d8:	50 f5       	brcc	.+84     	; 0x4a2e <vfprintf+0x290>
    49da:	38 e0       	ldi	r19, 0x08	; 8
    49dc:	b3 2e       	mov	r11, r19
    49de:	27 c0       	rjmp	.+78     	; 0x4a2e <vfprintf+0x290>
    49e0:	f6 fc       	sbrc	r15, 6
    49e2:	25 c0       	rjmp	.+74     	; 0x4a2e <vfprintf+0x290>
    49e4:	89 2d       	mov	r24, r9
    49e6:	90 e0       	ldi	r25, 0x00	; 0
    49e8:	8c 15       	cp	r24, r12
    49ea:	9d 05       	cpc	r25, r13
    49ec:	4c f0       	brlt	.+18     	; 0x4a00 <vfprintf+0x262>
    49ee:	2c ef       	ldi	r18, 0xFC	; 252
    49f0:	c2 16       	cp	r12, r18
    49f2:	2f ef       	ldi	r18, 0xFF	; 255
    49f4:	d2 06       	cpc	r13, r18
    49f6:	24 f0       	brlt	.+8      	; 0x4a00 <vfprintf+0x262>
    49f8:	30 e8       	ldi	r19, 0x80	; 128
    49fa:	f3 2a       	or	r15, r19
    49fc:	01 c0       	rjmp	.+2      	; 0x4a00 <vfprintf+0x262>
    49fe:	9a 94       	dec	r9
    4a00:	99 20       	and	r9, r9
    4a02:	49 f0       	breq	.+18     	; 0x4a16 <vfprintf+0x278>
    4a04:	e2 e0       	ldi	r30, 0x02	; 2
    4a06:	f0 e0       	ldi	r31, 0x00	; 0
    4a08:	ec 0f       	add	r30, r28
    4a0a:	fd 1f       	adc	r31, r29
    4a0c:	e9 0d       	add	r30, r9
    4a0e:	f1 1d       	adc	r31, r1
    4a10:	80 81       	ld	r24, Z
    4a12:	80 33       	cpi	r24, 0x30	; 48
    4a14:	a1 f3       	breq	.-24     	; 0x49fe <vfprintf+0x260>
    4a16:	f7 fe       	sbrs	r15, 7
    4a18:	0a c0       	rjmp	.+20     	; 0x4a2e <vfprintf+0x290>
    4a1a:	b9 2c       	mov	r11, r9
    4a1c:	b3 94       	inc	r11
    4a1e:	89 2d       	mov	r24, r9
    4a20:	90 e0       	ldi	r25, 0x00	; 0
    4a22:	c8 16       	cp	r12, r24
    4a24:	d9 06       	cpc	r13, r25
    4a26:	14 f0       	brlt	.+4      	; 0x4a2c <vfprintf+0x28e>
    4a28:	99 24       	eor	r9, r9
    4a2a:	01 c0       	rjmp	.+2      	; 0x4a2e <vfprintf+0x290>
    4a2c:	9c 18       	sub	r9, r12
    4a2e:	f7 fc       	sbrc	r15, 7
    4a30:	03 c0       	rjmp	.+6      	; 0x4a38 <vfprintf+0x29a>
    4a32:	25 e0       	ldi	r18, 0x05	; 5
    4a34:	30 e0       	ldi	r19, 0x00	; 0
    4a36:	09 c0       	rjmp	.+18     	; 0x4a4a <vfprintf+0x2ac>
    4a38:	1c 14       	cp	r1, r12
    4a3a:	1d 04       	cpc	r1, r13
    4a3c:	1c f0       	brlt	.+6      	; 0x4a44 <vfprintf+0x2a6>
    4a3e:	21 e0       	ldi	r18, 0x01	; 1
    4a40:	30 e0       	ldi	r19, 0x00	; 0
    4a42:	03 c0       	rjmp	.+6      	; 0x4a4a <vfprintf+0x2ac>
    4a44:	96 01       	movw	r18, r12
    4a46:	2f 5f       	subi	r18, 0xFF	; 255
    4a48:	3f 4f       	sbci	r19, 0xFF	; 255
    4a4a:	11 23       	and	r17, r17
    4a4c:	11 f0       	breq	.+4      	; 0x4a52 <vfprintf+0x2b4>
    4a4e:	2f 5f       	subi	r18, 0xFF	; 255
    4a50:	3f 4f       	sbci	r19, 0xFF	; 255
    4a52:	99 20       	and	r9, r9
    4a54:	29 f0       	breq	.+10     	; 0x4a60 <vfprintf+0x2c2>
    4a56:	89 2d       	mov	r24, r9
    4a58:	90 e0       	ldi	r25, 0x00	; 0
    4a5a:	01 96       	adiw	r24, 0x01	; 1
    4a5c:	28 0f       	add	r18, r24
    4a5e:	39 1f       	adc	r19, r25
    4a60:	88 2d       	mov	r24, r8
    4a62:	90 e0       	ldi	r25, 0x00	; 0
    4a64:	28 17       	cp	r18, r24
    4a66:	39 07       	cpc	r19, r25
    4a68:	14 f0       	brlt	.+4      	; 0x4a6e <vfprintf+0x2d0>
    4a6a:	88 24       	eor	r8, r8
    4a6c:	01 c0       	rjmp	.+2      	; 0x4a70 <vfprintf+0x2d2>
    4a6e:	82 1a       	sub	r8, r18
    4a70:	4f 2c       	mov	r4, r15
    4a72:	55 24       	eor	r5, r5
    4a74:	c2 01       	movw	r24, r4
    4a76:	89 70       	andi	r24, 0x09	; 9
    4a78:	90 70       	andi	r25, 0x00	; 0
    4a7a:	89 2b       	or	r24, r25
    4a7c:	31 f0       	breq	.+12     	; 0x4a8a <vfprintf+0x2ec>
    4a7e:	07 c0       	rjmp	.+14     	; 0x4a8e <vfprintf+0x2f0>
    4a80:	80 e2       	ldi	r24, 0x20	; 32
    4a82:	90 e0       	ldi	r25, 0x00	; 0
    4a84:	b3 01       	movw	r22, r6
    4a86:	de d4       	rcall	.+2492   	; 0x5444 <fputc>
    4a88:	8a 94       	dec	r8
    4a8a:	88 20       	and	r8, r8
    4a8c:	c9 f7       	brne	.-14     	; 0x4a80 <vfprintf+0x2e2>
    4a8e:	11 23       	and	r17, r17
    4a90:	21 f0       	breq	.+8      	; 0x4a9a <vfprintf+0x2fc>
    4a92:	81 2f       	mov	r24, r17
    4a94:	90 e0       	ldi	r25, 0x00	; 0
    4a96:	b3 01       	movw	r22, r6
    4a98:	d5 d4       	rcall	.+2474   	; 0x5444 <fputc>
    4a9a:	43 fe       	sbrs	r4, 3
    4a9c:	06 c0       	rjmp	.+12     	; 0x4aaa <vfprintf+0x30c>
    4a9e:	07 c0       	rjmp	.+14     	; 0x4aae <vfprintf+0x310>
    4aa0:	80 e3       	ldi	r24, 0x30	; 48
    4aa2:	90 e0       	ldi	r25, 0x00	; 0
    4aa4:	b3 01       	movw	r22, r6
    4aa6:	ce d4       	rcall	.+2460   	; 0x5444 <fputc>
    4aa8:	8a 94       	dec	r8
    4aaa:	88 20       	and	r8, r8
    4aac:	c9 f7       	brne	.-14     	; 0x4aa0 <vfprintf+0x302>
    4aae:	f7 fe       	sbrs	r15, 7
    4ab0:	44 c0       	rjmp	.+136    	; 0x4b3a <vfprintf+0x39c>
    4ab2:	86 01       	movw	r16, r12
    4ab4:	d7 fe       	sbrs	r13, 7
    4ab6:	02 c0       	rjmp	.+4      	; 0x4abc <vfprintf+0x31e>
    4ab8:	00 e0       	ldi	r16, 0x00	; 0
    4aba:	10 e0       	ldi	r17, 0x00	; 0
    4abc:	76 01       	movw	r14, r12
    4abe:	08 94       	sec
    4ac0:	e1 1c       	adc	r14, r1
    4ac2:	f1 1c       	adc	r15, r1
    4ac4:	e0 1a       	sub	r14, r16
    4ac6:	f1 0a       	sbc	r15, r17
    4ac8:	41 e0       	ldi	r20, 0x01	; 1
    4aca:	50 e0       	ldi	r21, 0x00	; 0
    4acc:	4c 0f       	add	r20, r28
    4ace:	5d 1f       	adc	r21, r29
    4ad0:	e4 0e       	add	r14, r20
    4ad2:	f5 1e       	adc	r15, r21
    4ad4:	26 01       	movw	r4, r12
    4ad6:	4b 18       	sub	r4, r11
    4ad8:	51 08       	sbc	r5, r1
    4ada:	89 2d       	mov	r24, r9
    4adc:	90 e0       	ldi	r25, 0x00	; 0
    4ade:	aa 24       	eor	r10, r10
    4ae0:	bb 24       	eor	r11, r11
    4ae2:	a8 1a       	sub	r10, r24
    4ae4:	b9 0a       	sbc	r11, r25
    4ae6:	5f ef       	ldi	r21, 0xFF	; 255
    4ae8:	0f 3f       	cpi	r16, 0xFF	; 255
    4aea:	15 07       	cpc	r17, r21
    4aec:	21 f4       	brne	.+8      	; 0x4af6 <vfprintf+0x358>
    4aee:	8e e2       	ldi	r24, 0x2E	; 46
    4af0:	90 e0       	ldi	r25, 0x00	; 0
    4af2:	b3 01       	movw	r22, r6
    4af4:	a7 d4       	rcall	.+2382   	; 0x5444 <fputc>
    4af6:	c0 16       	cp	r12, r16
    4af8:	d1 06       	cpc	r13, r17
    4afa:	34 f0       	brlt	.+12     	; 0x4b08 <vfprintf+0x36a>
    4afc:	40 16       	cp	r4, r16
    4afe:	51 06       	cpc	r5, r17
    4b00:	1c f4       	brge	.+6      	; 0x4b08 <vfprintf+0x36a>
    4b02:	f7 01       	movw	r30, r14
    4b04:	80 81       	ld	r24, Z
    4b06:	01 c0       	rjmp	.+2      	; 0x4b0a <vfprintf+0x36c>
    4b08:	80 e3       	ldi	r24, 0x30	; 48
    4b0a:	01 50       	subi	r16, 0x01	; 1
    4b0c:	10 40       	sbci	r17, 0x00	; 0
    4b0e:	08 94       	sec
    4b10:	e1 1c       	adc	r14, r1
    4b12:	f1 1c       	adc	r15, r1
    4b14:	0a 15       	cp	r16, r10
    4b16:	1b 05       	cpc	r17, r11
    4b18:	24 f0       	brlt	.+8      	; 0x4b22 <vfprintf+0x384>
    4b1a:	90 e0       	ldi	r25, 0x00	; 0
    4b1c:	b3 01       	movw	r22, r6
    4b1e:	92 d4       	rcall	.+2340   	; 0x5444 <fputc>
    4b20:	e2 cf       	rjmp	.-60     	; 0x4ae6 <vfprintf+0x348>
    4b22:	0c 15       	cp	r16, r12
    4b24:	1d 05       	cpc	r17, r13
    4b26:	39 f4       	brne	.+14     	; 0x4b36 <vfprintf+0x398>
    4b28:	9a 81       	ldd	r25, Y+2	; 0x02
    4b2a:	96 33       	cpi	r25, 0x36	; 54
    4b2c:	18 f4       	brcc	.+6      	; 0x4b34 <vfprintf+0x396>
    4b2e:	95 33       	cpi	r25, 0x35	; 53
    4b30:	11 f4       	brne	.+4      	; 0x4b36 <vfprintf+0x398>
    4b32:	24 fe       	sbrs	r2, 4
    4b34:	81 e3       	ldi	r24, 0x31	; 49
    4b36:	90 e0       	ldi	r25, 0x00	; 0
    4b38:	45 c0       	rjmp	.+138    	; 0x4bc4 <vfprintf+0x426>
    4b3a:	8a 81       	ldd	r24, Y+2	; 0x02
    4b3c:	81 33       	cpi	r24, 0x31	; 49
    4b3e:	09 f0       	breq	.+2      	; 0x4b42 <vfprintf+0x3a4>
    4b40:	0f 7e       	andi	r16, 0xEF	; 239
    4b42:	90 e0       	ldi	r25, 0x00	; 0
    4b44:	b3 01       	movw	r22, r6
    4b46:	7e d4       	rcall	.+2300   	; 0x5444 <fputc>
    4b48:	99 20       	and	r9, r9
    4b4a:	91 f0       	breq	.+36     	; 0x4b70 <vfprintf+0x3d2>
    4b4c:	8e e2       	ldi	r24, 0x2E	; 46
    4b4e:	90 e0       	ldi	r25, 0x00	; 0
    4b50:	b3 01       	movw	r22, r6
    4b52:	78 d4       	rcall	.+2288   	; 0x5444 <fputc>
    4b54:	12 e0       	ldi	r17, 0x02	; 2
    4b56:	e1 e0       	ldi	r30, 0x01	; 1
    4b58:	f0 e0       	ldi	r31, 0x00	; 0
    4b5a:	ec 0f       	add	r30, r28
    4b5c:	fd 1f       	adc	r31, r29
    4b5e:	e1 0f       	add	r30, r17
    4b60:	f1 1d       	adc	r31, r1
    4b62:	1f 5f       	subi	r17, 0xFF	; 255
    4b64:	80 81       	ld	r24, Z
    4b66:	90 e0       	ldi	r25, 0x00	; 0
    4b68:	b3 01       	movw	r22, r6
    4b6a:	6c d4       	rcall	.+2264   	; 0x5444 <fputc>
    4b6c:	9a 94       	dec	r9
    4b6e:	99 f7       	brne	.-26     	; 0x4b56 <vfprintf+0x3b8>
    4b70:	44 fc       	sbrc	r4, 4
    4b72:	03 c0       	rjmp	.+6      	; 0x4b7a <vfprintf+0x3dc>
    4b74:	85 e6       	ldi	r24, 0x65	; 101
    4b76:	90 e0       	ldi	r25, 0x00	; 0
    4b78:	02 c0       	rjmp	.+4      	; 0x4b7e <vfprintf+0x3e0>
    4b7a:	85 e4       	ldi	r24, 0x45	; 69
    4b7c:	90 e0       	ldi	r25, 0x00	; 0
    4b7e:	b3 01       	movw	r22, r6
    4b80:	61 d4       	rcall	.+2242   	; 0x5444 <fputc>
    4b82:	d7 fc       	sbrc	r13, 7
    4b84:	05 c0       	rjmp	.+10     	; 0x4b90 <vfprintf+0x3f2>
    4b86:	c1 14       	cp	r12, r1
    4b88:	d1 04       	cpc	r13, r1
    4b8a:	41 f4       	brne	.+16     	; 0x4b9c <vfprintf+0x3fe>
    4b8c:	04 ff       	sbrs	r16, 4
    4b8e:	06 c0       	rjmp	.+12     	; 0x4b9c <vfprintf+0x3fe>
    4b90:	d0 94       	com	r13
    4b92:	c1 94       	neg	r12
    4b94:	d1 08       	sbc	r13, r1
    4b96:	d3 94       	inc	r13
    4b98:	8d e2       	ldi	r24, 0x2D	; 45
    4b9a:	01 c0       	rjmp	.+2      	; 0x4b9e <vfprintf+0x400>
    4b9c:	8b e2       	ldi	r24, 0x2B	; 43
    4b9e:	90 e0       	ldi	r25, 0x00	; 0
    4ba0:	b3 01       	movw	r22, r6
    4ba2:	50 d4       	rcall	.+2208   	; 0x5444 <fputc>
    4ba4:	80 e3       	ldi	r24, 0x30	; 48
    4ba6:	05 c0       	rjmp	.+10     	; 0x4bb2 <vfprintf+0x414>
    4ba8:	8f 5f       	subi	r24, 0xFF	; 255
    4baa:	26 ef       	ldi	r18, 0xF6	; 246
    4bac:	3f ef       	ldi	r19, 0xFF	; 255
    4bae:	c2 0e       	add	r12, r18
    4bb0:	d3 1e       	adc	r13, r19
    4bb2:	3a e0       	ldi	r19, 0x0A	; 10
    4bb4:	c3 16       	cp	r12, r19
    4bb6:	d1 04       	cpc	r13, r1
    4bb8:	bc f7       	brge	.-18     	; 0x4ba8 <vfprintf+0x40a>
    4bba:	90 e0       	ldi	r25, 0x00	; 0
    4bbc:	b3 01       	movw	r22, r6
    4bbe:	42 d4       	rcall	.+2180   	; 0x5444 <fputc>
    4bc0:	c6 01       	movw	r24, r12
    4bc2:	c0 96       	adiw	r24, 0x30	; 48
    4bc4:	b3 01       	movw	r22, r6
    4bc6:	3e d4       	rcall	.+2172   	; 0x5444 <fputc>
    4bc8:	cc 84       	ldd	r12, Y+12	; 0x0c
    4bca:	dd 84       	ldd	r13, Y+13	; 0x0d
    4bcc:	46 c1       	rjmp	.+652    	; 0x4e5a <vfprintf+0x6bc>
    4bce:	93 36       	cpi	r25, 0x63	; 99
    4bd0:	31 f0       	breq	.+12     	; 0x4bde <vfprintf+0x440>
    4bd2:	93 37       	cpi	r25, 0x73	; 115
    4bd4:	99 f0       	breq	.+38     	; 0x4bfc <vfprintf+0x45e>
    4bd6:	93 35       	cpi	r25, 0x53	; 83
    4bd8:	09 f0       	breq	.+2      	; 0x4bdc <vfprintf+0x43e>
    4bda:	55 c0       	rjmp	.+170    	; 0x4c86 <vfprintf+0x4e8>
    4bdc:	22 c0       	rjmp	.+68     	; 0x4c22 <vfprintf+0x484>
    4bde:	f6 01       	movw	r30, r12
    4be0:	80 81       	ld	r24, Z
    4be2:	89 83       	std	Y+1, r24	; 0x01
    4be4:	5e 01       	movw	r10, r28
    4be6:	08 94       	sec
    4be8:	a1 1c       	adc	r10, r1
    4bea:	b1 1c       	adc	r11, r1
    4bec:	22 e0       	ldi	r18, 0x02	; 2
    4bee:	30 e0       	ldi	r19, 0x00	; 0
    4bf0:	c2 0e       	add	r12, r18
    4bf2:	d3 1e       	adc	r13, r19
    4bf4:	21 e0       	ldi	r18, 0x01	; 1
    4bf6:	e2 2e       	mov	r14, r18
    4bf8:	f1 2c       	mov	r15, r1
    4bfa:	11 c0       	rjmp	.+34     	; 0x4c1e <vfprintf+0x480>
    4bfc:	f6 01       	movw	r30, r12
    4bfe:	a0 80       	ld	r10, Z
    4c00:	b1 80       	ldd	r11, Z+1	; 0x01
    4c02:	16 fd       	sbrc	r17, 6
    4c04:	03 c0       	rjmp	.+6      	; 0x4c0c <vfprintf+0x46e>
    4c06:	6f ef       	ldi	r22, 0xFF	; 255
    4c08:	7f ef       	ldi	r23, 0xFF	; 255
    4c0a:	02 c0       	rjmp	.+4      	; 0x4c10 <vfprintf+0x472>
    4c0c:	69 2d       	mov	r22, r9
    4c0e:	70 e0       	ldi	r23, 0x00	; 0
    4c10:	22 e0       	ldi	r18, 0x02	; 2
    4c12:	30 e0       	ldi	r19, 0x00	; 0
    4c14:	c2 0e       	add	r12, r18
    4c16:	d3 1e       	adc	r13, r19
    4c18:	c5 01       	movw	r24, r10
    4c1a:	09 d4       	rcall	.+2066   	; 0x542e <strnlen>
    4c1c:	7c 01       	movw	r14, r24
    4c1e:	1f 77       	andi	r17, 0x7F	; 127
    4c20:	12 c0       	rjmp	.+36     	; 0x4c46 <vfprintf+0x4a8>
    4c22:	f6 01       	movw	r30, r12
    4c24:	a0 80       	ld	r10, Z
    4c26:	b1 80       	ldd	r11, Z+1	; 0x01
    4c28:	16 fd       	sbrc	r17, 6
    4c2a:	03 c0       	rjmp	.+6      	; 0x4c32 <vfprintf+0x494>
    4c2c:	6f ef       	ldi	r22, 0xFF	; 255
    4c2e:	7f ef       	ldi	r23, 0xFF	; 255
    4c30:	02 c0       	rjmp	.+4      	; 0x4c36 <vfprintf+0x498>
    4c32:	69 2d       	mov	r22, r9
    4c34:	70 e0       	ldi	r23, 0x00	; 0
    4c36:	22 e0       	ldi	r18, 0x02	; 2
    4c38:	30 e0       	ldi	r19, 0x00	; 0
    4c3a:	c2 0e       	add	r12, r18
    4c3c:	d3 1e       	adc	r13, r19
    4c3e:	c5 01       	movw	r24, r10
    4c40:	eb d3       	rcall	.+2006   	; 0x5418 <strnlen_P>
    4c42:	7c 01       	movw	r14, r24
    4c44:	10 68       	ori	r17, 0x80	; 128
    4c46:	13 ff       	sbrs	r17, 3
    4c48:	06 c0       	rjmp	.+12     	; 0x4c56 <vfprintf+0x4b8>
    4c4a:	19 c0       	rjmp	.+50     	; 0x4c7e <vfprintf+0x4e0>
    4c4c:	80 e2       	ldi	r24, 0x20	; 32
    4c4e:	90 e0       	ldi	r25, 0x00	; 0
    4c50:	b3 01       	movw	r22, r6
    4c52:	f8 d3       	rcall	.+2032   	; 0x5444 <fputc>
    4c54:	8a 94       	dec	r8
    4c56:	88 2d       	mov	r24, r8
    4c58:	90 e0       	ldi	r25, 0x00	; 0
    4c5a:	e8 16       	cp	r14, r24
    4c5c:	f9 06       	cpc	r15, r25
    4c5e:	b0 f3       	brcs	.-20     	; 0x4c4c <vfprintf+0x4ae>
    4c60:	0e c0       	rjmp	.+28     	; 0x4c7e <vfprintf+0x4e0>
    4c62:	f5 01       	movw	r30, r10
    4c64:	17 fd       	sbrc	r17, 7
    4c66:	85 91       	lpm	r24, Z+
    4c68:	17 ff       	sbrs	r17, 7
    4c6a:	81 91       	ld	r24, Z+
    4c6c:	5f 01       	movw	r10, r30
    4c6e:	90 e0       	ldi	r25, 0x00	; 0
    4c70:	b3 01       	movw	r22, r6
    4c72:	e8 d3       	rcall	.+2000   	; 0x5444 <fputc>
    4c74:	81 10       	cpse	r8, r1
    4c76:	8a 94       	dec	r8
    4c78:	08 94       	sec
    4c7a:	e1 08       	sbc	r14, r1
    4c7c:	f1 08       	sbc	r15, r1
    4c7e:	e1 14       	cp	r14, r1
    4c80:	f1 04       	cpc	r15, r1
    4c82:	79 f7       	brne	.-34     	; 0x4c62 <vfprintf+0x4c4>
    4c84:	ea c0       	rjmp	.+468    	; 0x4e5a <vfprintf+0x6bc>
    4c86:	94 36       	cpi	r25, 0x64	; 100
    4c88:	11 f0       	breq	.+4      	; 0x4c8e <vfprintf+0x4f0>
    4c8a:	99 36       	cpi	r25, 0x69	; 105
    4c8c:	81 f5       	brne	.+96     	; 0x4cee <vfprintf+0x550>
    4c8e:	17 ff       	sbrs	r17, 7
    4c90:	08 c0       	rjmp	.+16     	; 0x4ca2 <vfprintf+0x504>
    4c92:	f6 01       	movw	r30, r12
    4c94:	20 81       	ld	r18, Z
    4c96:	31 81       	ldd	r19, Z+1	; 0x01
    4c98:	42 81       	ldd	r20, Z+2	; 0x02
    4c9a:	53 81       	ldd	r21, Z+3	; 0x03
    4c9c:	84 e0       	ldi	r24, 0x04	; 4
    4c9e:	90 e0       	ldi	r25, 0x00	; 0
    4ca0:	0a c0       	rjmp	.+20     	; 0x4cb6 <vfprintf+0x518>
    4ca2:	f6 01       	movw	r30, r12
    4ca4:	80 81       	ld	r24, Z
    4ca6:	91 81       	ldd	r25, Z+1	; 0x01
    4ca8:	9c 01       	movw	r18, r24
    4caa:	44 27       	eor	r20, r20
    4cac:	37 fd       	sbrc	r19, 7
    4cae:	40 95       	com	r20
    4cb0:	54 2f       	mov	r21, r20
    4cb2:	82 e0       	ldi	r24, 0x02	; 2
    4cb4:	90 e0       	ldi	r25, 0x00	; 0
    4cb6:	c8 0e       	add	r12, r24
    4cb8:	d9 1e       	adc	r13, r25
    4cba:	9f e6       	ldi	r25, 0x6F	; 111
    4cbc:	f9 2e       	mov	r15, r25
    4cbe:	f1 22       	and	r15, r17
    4cc0:	57 ff       	sbrs	r21, 7
    4cc2:	09 c0       	rjmp	.+18     	; 0x4cd6 <vfprintf+0x538>
    4cc4:	50 95       	com	r21
    4cc6:	40 95       	com	r20
    4cc8:	30 95       	com	r19
    4cca:	21 95       	neg	r18
    4ccc:	3f 4f       	sbci	r19, 0xFF	; 255
    4cce:	4f 4f       	sbci	r20, 0xFF	; 255
    4cd0:	5f 4f       	sbci	r21, 0xFF	; 255
    4cd2:	90 e8       	ldi	r25, 0x80	; 128
    4cd4:	f9 2a       	or	r15, r25
    4cd6:	ca 01       	movw	r24, r20
    4cd8:	b9 01       	movw	r22, r18
    4cda:	ae 01       	movw	r20, r28
    4cdc:	4f 5f       	subi	r20, 0xFF	; 255
    4cde:	5f 4f       	sbci	r21, 0xFF	; 255
    4ce0:	2a e0       	ldi	r18, 0x0A	; 10
    4ce2:	30 e0       	ldi	r19, 0x00	; 0
    4ce4:	22 d4       	rcall	.+2116   	; 0x552a <__ultoa_invert>
    4ce6:	e8 2e       	mov	r14, r24
    4ce8:	e8 89       	ldd	r30, Y+16	; 0x10
    4cea:	ee 1a       	sub	r14, r30
    4cec:	40 c0       	rjmp	.+128    	; 0x4d6e <vfprintf+0x5d0>
    4cee:	95 37       	cpi	r25, 0x75	; 117
    4cf0:	21 f4       	brne	.+8      	; 0x4cfa <vfprintf+0x55c>
    4cf2:	1f 7e       	andi	r17, 0xEF	; 239
    4cf4:	2a e0       	ldi	r18, 0x0A	; 10
    4cf6:	30 e0       	ldi	r19, 0x00	; 0
    4cf8:	1c c0       	rjmp	.+56     	; 0x4d32 <vfprintf+0x594>
    4cfa:	19 7f       	andi	r17, 0xF9	; 249
    4cfc:	9f 36       	cpi	r25, 0x6F	; 111
    4cfe:	61 f0       	breq	.+24     	; 0x4d18 <vfprintf+0x57a>
    4d00:	90 37       	cpi	r25, 0x70	; 112
    4d02:	20 f4       	brcc	.+8      	; 0x4d0c <vfprintf+0x56e>
    4d04:	98 35       	cpi	r25, 0x58	; 88
    4d06:	09 f0       	breq	.+2      	; 0x4d0a <vfprintf+0x56c>
    4d08:	ab c0       	rjmp	.+342    	; 0x4e60 <vfprintf+0x6c2>
    4d0a:	0f c0       	rjmp	.+30     	; 0x4d2a <vfprintf+0x58c>
    4d0c:	90 37       	cpi	r25, 0x70	; 112
    4d0e:	39 f0       	breq	.+14     	; 0x4d1e <vfprintf+0x580>
    4d10:	98 37       	cpi	r25, 0x78	; 120
    4d12:	09 f0       	breq	.+2      	; 0x4d16 <vfprintf+0x578>
    4d14:	a5 c0       	rjmp	.+330    	; 0x4e60 <vfprintf+0x6c2>
    4d16:	04 c0       	rjmp	.+8      	; 0x4d20 <vfprintf+0x582>
    4d18:	28 e0       	ldi	r18, 0x08	; 8
    4d1a:	30 e0       	ldi	r19, 0x00	; 0
    4d1c:	0a c0       	rjmp	.+20     	; 0x4d32 <vfprintf+0x594>
    4d1e:	10 61       	ori	r17, 0x10	; 16
    4d20:	14 fd       	sbrc	r17, 4
    4d22:	14 60       	ori	r17, 0x04	; 4
    4d24:	20 e1       	ldi	r18, 0x10	; 16
    4d26:	30 e0       	ldi	r19, 0x00	; 0
    4d28:	04 c0       	rjmp	.+8      	; 0x4d32 <vfprintf+0x594>
    4d2a:	14 fd       	sbrc	r17, 4
    4d2c:	16 60       	ori	r17, 0x06	; 6
    4d2e:	20 e1       	ldi	r18, 0x10	; 16
    4d30:	32 e0       	ldi	r19, 0x02	; 2
    4d32:	17 ff       	sbrs	r17, 7
    4d34:	08 c0       	rjmp	.+16     	; 0x4d46 <vfprintf+0x5a8>
    4d36:	f6 01       	movw	r30, r12
    4d38:	60 81       	ld	r22, Z
    4d3a:	71 81       	ldd	r23, Z+1	; 0x01
    4d3c:	82 81       	ldd	r24, Z+2	; 0x02
    4d3e:	93 81       	ldd	r25, Z+3	; 0x03
    4d40:	44 e0       	ldi	r20, 0x04	; 4
    4d42:	50 e0       	ldi	r21, 0x00	; 0
    4d44:	08 c0       	rjmp	.+16     	; 0x4d56 <vfprintf+0x5b8>
    4d46:	f6 01       	movw	r30, r12
    4d48:	80 81       	ld	r24, Z
    4d4a:	91 81       	ldd	r25, Z+1	; 0x01
    4d4c:	bc 01       	movw	r22, r24
    4d4e:	80 e0       	ldi	r24, 0x00	; 0
    4d50:	90 e0       	ldi	r25, 0x00	; 0
    4d52:	42 e0       	ldi	r20, 0x02	; 2
    4d54:	50 e0       	ldi	r21, 0x00	; 0
    4d56:	c4 0e       	add	r12, r20
    4d58:	d5 1e       	adc	r13, r21
    4d5a:	ae 01       	movw	r20, r28
    4d5c:	4f 5f       	subi	r20, 0xFF	; 255
    4d5e:	5f 4f       	sbci	r21, 0xFF	; 255
    4d60:	e4 d3       	rcall	.+1992   	; 0x552a <__ultoa_invert>
    4d62:	e8 2e       	mov	r14, r24
    4d64:	58 89       	ldd	r21, Y+16	; 0x10
    4d66:	e5 1a       	sub	r14, r21
    4d68:	8f e7       	ldi	r24, 0x7F	; 127
    4d6a:	f8 2e       	mov	r15, r24
    4d6c:	f1 22       	and	r15, r17
    4d6e:	f6 fe       	sbrs	r15, 6
    4d70:	0b c0       	rjmp	.+22     	; 0x4d88 <vfprintf+0x5ea>
    4d72:	8e ef       	ldi	r24, 0xFE	; 254
    4d74:	f8 22       	and	r15, r24
    4d76:	e9 14       	cp	r14, r9
    4d78:	38 f4       	brcc	.+14     	; 0x4d88 <vfprintf+0x5ea>
    4d7a:	f4 fe       	sbrs	r15, 4
    4d7c:	07 c0       	rjmp	.+14     	; 0x4d8c <vfprintf+0x5ee>
    4d7e:	f2 fc       	sbrc	r15, 2
    4d80:	05 c0       	rjmp	.+10     	; 0x4d8c <vfprintf+0x5ee>
    4d82:	9f ee       	ldi	r25, 0xEF	; 239
    4d84:	f9 22       	and	r15, r25
    4d86:	02 c0       	rjmp	.+4      	; 0x4d8c <vfprintf+0x5ee>
    4d88:	1e 2d       	mov	r17, r14
    4d8a:	01 c0       	rjmp	.+2      	; 0x4d8e <vfprintf+0x5f0>
    4d8c:	19 2d       	mov	r17, r9
    4d8e:	f4 fe       	sbrs	r15, 4
    4d90:	0d c0       	rjmp	.+26     	; 0x4dac <vfprintf+0x60e>
    4d92:	fe 01       	movw	r30, r28
    4d94:	ee 0d       	add	r30, r14
    4d96:	f1 1d       	adc	r31, r1
    4d98:	80 81       	ld	r24, Z
    4d9a:	80 33       	cpi	r24, 0x30	; 48
    4d9c:	19 f4       	brne	.+6      	; 0x4da4 <vfprintf+0x606>
    4d9e:	e9 ee       	ldi	r30, 0xE9	; 233
    4da0:	fe 22       	and	r15, r30
    4da2:	08 c0       	rjmp	.+16     	; 0x4db4 <vfprintf+0x616>
    4da4:	1f 5f       	subi	r17, 0xFF	; 255
    4da6:	f2 fe       	sbrs	r15, 2
    4da8:	05 c0       	rjmp	.+10     	; 0x4db4 <vfprintf+0x616>
    4daa:	03 c0       	rjmp	.+6      	; 0x4db2 <vfprintf+0x614>
    4dac:	8f 2d       	mov	r24, r15
    4dae:	86 78       	andi	r24, 0x86	; 134
    4db0:	09 f0       	breq	.+2      	; 0x4db4 <vfprintf+0x616>
    4db2:	1f 5f       	subi	r17, 0xFF	; 255
    4db4:	0f 2d       	mov	r16, r15
    4db6:	f3 fc       	sbrc	r15, 3
    4db8:	13 c0       	rjmp	.+38     	; 0x4de0 <vfprintf+0x642>
    4dba:	f0 fe       	sbrs	r15, 0
    4dbc:	0e c0       	rjmp	.+28     	; 0x4dda <vfprintf+0x63c>
    4dbe:	18 15       	cp	r17, r8
    4dc0:	10 f0       	brcs	.+4      	; 0x4dc6 <vfprintf+0x628>
    4dc2:	9e 2c       	mov	r9, r14
    4dc4:	0a c0       	rjmp	.+20     	; 0x4dda <vfprintf+0x63c>
    4dc6:	9e 2c       	mov	r9, r14
    4dc8:	98 0c       	add	r9, r8
    4dca:	91 1a       	sub	r9, r17
    4dcc:	18 2d       	mov	r17, r8
    4dce:	05 c0       	rjmp	.+10     	; 0x4dda <vfprintf+0x63c>
    4dd0:	80 e2       	ldi	r24, 0x20	; 32
    4dd2:	90 e0       	ldi	r25, 0x00	; 0
    4dd4:	b3 01       	movw	r22, r6
    4dd6:	36 d3       	rcall	.+1644   	; 0x5444 <fputc>
    4dd8:	1f 5f       	subi	r17, 0xFF	; 255
    4dda:	18 15       	cp	r17, r8
    4ddc:	c8 f3       	brcs	.-14     	; 0x4dd0 <vfprintf+0x632>
    4dde:	04 c0       	rjmp	.+8      	; 0x4de8 <vfprintf+0x64a>
    4de0:	18 15       	cp	r17, r8
    4de2:	10 f4       	brcc	.+4      	; 0x4de8 <vfprintf+0x64a>
    4de4:	81 1a       	sub	r8, r17
    4de6:	01 c0       	rjmp	.+2      	; 0x4dea <vfprintf+0x64c>
    4de8:	88 24       	eor	r8, r8
    4dea:	04 ff       	sbrs	r16, 4
    4dec:	0e c0       	rjmp	.+28     	; 0x4e0a <vfprintf+0x66c>
    4dee:	80 e3       	ldi	r24, 0x30	; 48
    4df0:	90 e0       	ldi	r25, 0x00	; 0
    4df2:	b3 01       	movw	r22, r6
    4df4:	27 d3       	rcall	.+1614   	; 0x5444 <fputc>
    4df6:	02 ff       	sbrs	r16, 2
    4df8:	1b c0       	rjmp	.+54     	; 0x4e30 <vfprintf+0x692>
    4dfa:	01 fd       	sbrc	r16, 1
    4dfc:	03 c0       	rjmp	.+6      	; 0x4e04 <vfprintf+0x666>
    4dfe:	88 e7       	ldi	r24, 0x78	; 120
    4e00:	90 e0       	ldi	r25, 0x00	; 0
    4e02:	0e c0       	rjmp	.+28     	; 0x4e20 <vfprintf+0x682>
    4e04:	88 e5       	ldi	r24, 0x58	; 88
    4e06:	90 e0       	ldi	r25, 0x00	; 0
    4e08:	0b c0       	rjmp	.+22     	; 0x4e20 <vfprintf+0x682>
    4e0a:	80 2f       	mov	r24, r16
    4e0c:	86 78       	andi	r24, 0x86	; 134
    4e0e:	81 f0       	breq	.+32     	; 0x4e30 <vfprintf+0x692>
    4e10:	01 ff       	sbrs	r16, 1
    4e12:	02 c0       	rjmp	.+4      	; 0x4e18 <vfprintf+0x67a>
    4e14:	8b e2       	ldi	r24, 0x2B	; 43
    4e16:	01 c0       	rjmp	.+2      	; 0x4e1a <vfprintf+0x67c>
    4e18:	80 e2       	ldi	r24, 0x20	; 32
    4e1a:	f7 fc       	sbrc	r15, 7
    4e1c:	8d e2       	ldi	r24, 0x2D	; 45
    4e1e:	90 e0       	ldi	r25, 0x00	; 0
    4e20:	b3 01       	movw	r22, r6
    4e22:	10 d3       	rcall	.+1568   	; 0x5444 <fputc>
    4e24:	05 c0       	rjmp	.+10     	; 0x4e30 <vfprintf+0x692>
    4e26:	80 e3       	ldi	r24, 0x30	; 48
    4e28:	90 e0       	ldi	r25, 0x00	; 0
    4e2a:	b3 01       	movw	r22, r6
    4e2c:	0b d3       	rcall	.+1558   	; 0x5444 <fputc>
    4e2e:	9a 94       	dec	r9
    4e30:	e9 14       	cp	r14, r9
    4e32:	c8 f3       	brcs	.-14     	; 0x4e26 <vfprintf+0x688>
    4e34:	ea 94       	dec	r14
    4e36:	e1 e0       	ldi	r30, 0x01	; 1
    4e38:	f0 e0       	ldi	r31, 0x00	; 0
    4e3a:	ec 0f       	add	r30, r28
    4e3c:	fd 1f       	adc	r31, r29
    4e3e:	ee 0d       	add	r30, r14
    4e40:	f1 1d       	adc	r31, r1
    4e42:	80 81       	ld	r24, Z
    4e44:	90 e0       	ldi	r25, 0x00	; 0
    4e46:	b3 01       	movw	r22, r6
    4e48:	fd d2       	rcall	.+1530   	; 0x5444 <fputc>
    4e4a:	ee 20       	and	r14, r14
    4e4c:	99 f7       	brne	.-26     	; 0x4e34 <vfprintf+0x696>
    4e4e:	05 c0       	rjmp	.+10     	; 0x4e5a <vfprintf+0x6bc>
    4e50:	80 e2       	ldi	r24, 0x20	; 32
    4e52:	90 e0       	ldi	r25, 0x00	; 0
    4e54:	b3 01       	movw	r22, r6
    4e56:	f6 d2       	rcall	.+1516   	; 0x5444 <fputc>
    4e58:	8a 94       	dec	r8
    4e5a:	88 20       	and	r8, r8
    4e5c:	c9 f7       	brne	.-14     	; 0x4e50 <vfprintf+0x6b2>
    4e5e:	b6 cc       	rjmp	.-1684   	; 0x47cc <vfprintf+0x2e>
    4e60:	f3 01       	movw	r30, r6
    4e62:	66 81       	ldd	r22, Z+6	; 0x06
    4e64:	77 81       	ldd	r23, Z+7	; 0x07
    4e66:	cb 01       	movw	r24, r22
    4e68:	61 96       	adiw	r28, 0x11	; 17
    4e6a:	e2 e1       	ldi	r30, 0x12	; 18
    4e6c:	70 c0       	rjmp	.+224    	; 0x4f4e <__epilogue_restores__>

00004e6e <__mulsi3>:
    4e6e:	62 9f       	mul	r22, r18
    4e70:	d0 01       	movw	r26, r0
    4e72:	73 9f       	mul	r23, r19
    4e74:	f0 01       	movw	r30, r0
    4e76:	82 9f       	mul	r24, r18
    4e78:	e0 0d       	add	r30, r0
    4e7a:	f1 1d       	adc	r31, r1
    4e7c:	64 9f       	mul	r22, r20
    4e7e:	e0 0d       	add	r30, r0
    4e80:	f1 1d       	adc	r31, r1
    4e82:	92 9f       	mul	r25, r18
    4e84:	f0 0d       	add	r31, r0
    4e86:	83 9f       	mul	r24, r19
    4e88:	f0 0d       	add	r31, r0
    4e8a:	74 9f       	mul	r23, r20
    4e8c:	f0 0d       	add	r31, r0
    4e8e:	65 9f       	mul	r22, r21
    4e90:	f0 0d       	add	r31, r0
    4e92:	99 27       	eor	r25, r25
    4e94:	72 9f       	mul	r23, r18
    4e96:	b0 0d       	add	r27, r0
    4e98:	e1 1d       	adc	r30, r1
    4e9a:	f9 1f       	adc	r31, r25
    4e9c:	63 9f       	mul	r22, r19
    4e9e:	b0 0d       	add	r27, r0
    4ea0:	e1 1d       	adc	r30, r1
    4ea2:	f9 1f       	adc	r31, r25
    4ea4:	bd 01       	movw	r22, r26
    4ea6:	cf 01       	movw	r24, r30
    4ea8:	11 24       	eor	r1, r1
    4eaa:	08 95       	ret

00004eac <__divmodhi4>:
    4eac:	97 fb       	bst	r25, 7
    4eae:	09 2e       	mov	r0, r25
    4eb0:	07 26       	eor	r0, r23
    4eb2:	0a d0       	rcall	.+20     	; 0x4ec8 <__divmodhi4_neg1>
    4eb4:	77 fd       	sbrc	r23, 7
    4eb6:	04 d0       	rcall	.+8      	; 0x4ec0 <__divmodhi4_neg2>
    4eb8:	65 d0       	rcall	.+202    	; 0x4f84 <__udivmodhi4>
    4eba:	06 d0       	rcall	.+12     	; 0x4ec8 <__divmodhi4_neg1>
    4ebc:	00 20       	and	r0, r0
    4ebe:	1a f4       	brpl	.+6      	; 0x4ec6 <__divmodhi4_exit>

00004ec0 <__divmodhi4_neg2>:
    4ec0:	70 95       	com	r23
    4ec2:	61 95       	neg	r22
    4ec4:	7f 4f       	sbci	r23, 0xFF	; 255

00004ec6 <__divmodhi4_exit>:
    4ec6:	08 95       	ret

00004ec8 <__divmodhi4_neg1>:
    4ec8:	f6 f7       	brtc	.-4      	; 0x4ec6 <__divmodhi4_exit>
    4eca:	90 95       	com	r25
    4ecc:	81 95       	neg	r24
    4ece:	9f 4f       	sbci	r25, 0xFF	; 255
    4ed0:	08 95       	ret

00004ed2 <__udivmodsi4>:
    4ed2:	a1 e2       	ldi	r26, 0x21	; 33
    4ed4:	1a 2e       	mov	r1, r26
    4ed6:	aa 1b       	sub	r26, r26
    4ed8:	bb 1b       	sub	r27, r27
    4eda:	fd 01       	movw	r30, r26
    4edc:	0d c0       	rjmp	.+26     	; 0x4ef8 <__udivmodsi4_ep>

00004ede <__udivmodsi4_loop>:
    4ede:	aa 1f       	adc	r26, r26
    4ee0:	bb 1f       	adc	r27, r27
    4ee2:	ee 1f       	adc	r30, r30
    4ee4:	ff 1f       	adc	r31, r31
    4ee6:	a2 17       	cp	r26, r18
    4ee8:	b3 07       	cpc	r27, r19
    4eea:	e4 07       	cpc	r30, r20
    4eec:	f5 07       	cpc	r31, r21
    4eee:	20 f0       	brcs	.+8      	; 0x4ef8 <__udivmodsi4_ep>
    4ef0:	a2 1b       	sub	r26, r18
    4ef2:	b3 0b       	sbc	r27, r19
    4ef4:	e4 0b       	sbc	r30, r20
    4ef6:	f5 0b       	sbc	r31, r21

00004ef8 <__udivmodsi4_ep>:
    4ef8:	66 1f       	adc	r22, r22
    4efa:	77 1f       	adc	r23, r23
    4efc:	88 1f       	adc	r24, r24
    4efe:	99 1f       	adc	r25, r25
    4f00:	1a 94       	dec	r1
    4f02:	69 f7       	brne	.-38     	; 0x4ede <__udivmodsi4_loop>
    4f04:	60 95       	com	r22
    4f06:	70 95       	com	r23
    4f08:	80 95       	com	r24
    4f0a:	90 95       	com	r25
    4f0c:	9b 01       	movw	r18, r22
    4f0e:	ac 01       	movw	r20, r24
    4f10:	bd 01       	movw	r22, r26
    4f12:	cf 01       	movw	r24, r30
    4f14:	08 95       	ret

00004f16 <__prologue_saves__>:
    4f16:	2f 92       	push	r2
    4f18:	3f 92       	push	r3
    4f1a:	4f 92       	push	r4
    4f1c:	5f 92       	push	r5
    4f1e:	6f 92       	push	r6
    4f20:	7f 92       	push	r7
    4f22:	8f 92       	push	r8
    4f24:	9f 92       	push	r9
    4f26:	af 92       	push	r10
    4f28:	bf 92       	push	r11
    4f2a:	cf 92       	push	r12
    4f2c:	df 92       	push	r13
    4f2e:	ef 92       	push	r14
    4f30:	ff 92       	push	r15
    4f32:	0f 93       	push	r16
    4f34:	1f 93       	push	r17
    4f36:	cf 93       	push	r28
    4f38:	df 93       	push	r29
    4f3a:	cd b7       	in	r28, 0x3d	; 61
    4f3c:	de b7       	in	r29, 0x3e	; 62
    4f3e:	ca 1b       	sub	r28, r26
    4f40:	db 0b       	sbc	r29, r27
    4f42:	0f b6       	in	r0, 0x3f	; 63
    4f44:	f8 94       	cli
    4f46:	de bf       	out	0x3e, r29	; 62
    4f48:	0f be       	out	0x3f, r0	; 63
    4f4a:	cd bf       	out	0x3d, r28	; 61
    4f4c:	09 94       	ijmp

00004f4e <__epilogue_restores__>:
    4f4e:	2a 88       	ldd	r2, Y+18	; 0x12
    4f50:	39 88       	ldd	r3, Y+17	; 0x11
    4f52:	48 88       	ldd	r4, Y+16	; 0x10
    4f54:	5f 84       	ldd	r5, Y+15	; 0x0f
    4f56:	6e 84       	ldd	r6, Y+14	; 0x0e
    4f58:	7d 84       	ldd	r7, Y+13	; 0x0d
    4f5a:	8c 84       	ldd	r8, Y+12	; 0x0c
    4f5c:	9b 84       	ldd	r9, Y+11	; 0x0b
    4f5e:	aa 84       	ldd	r10, Y+10	; 0x0a
    4f60:	b9 84       	ldd	r11, Y+9	; 0x09
    4f62:	c8 84       	ldd	r12, Y+8	; 0x08
    4f64:	df 80       	ldd	r13, Y+7	; 0x07
    4f66:	ee 80       	ldd	r14, Y+6	; 0x06
    4f68:	fd 80       	ldd	r15, Y+5	; 0x05
    4f6a:	0c 81       	ldd	r16, Y+4	; 0x04
    4f6c:	1b 81       	ldd	r17, Y+3	; 0x03
    4f6e:	aa 81       	ldd	r26, Y+2	; 0x02
    4f70:	b9 81       	ldd	r27, Y+1	; 0x01
    4f72:	ce 0f       	add	r28, r30
    4f74:	d1 1d       	adc	r29, r1
    4f76:	0f b6       	in	r0, 0x3f	; 63
    4f78:	f8 94       	cli
    4f7a:	de bf       	out	0x3e, r29	; 62
    4f7c:	0f be       	out	0x3f, r0	; 63
    4f7e:	cd bf       	out	0x3d, r28	; 61
    4f80:	ed 01       	movw	r28, r26
    4f82:	08 95       	ret

00004f84 <__udivmodhi4>:
    4f84:	aa 1b       	sub	r26, r26
    4f86:	bb 1b       	sub	r27, r27
    4f88:	51 e1       	ldi	r21, 0x11	; 17
    4f8a:	07 c0       	rjmp	.+14     	; 0x4f9a <__udivmodhi4_ep>

00004f8c <__udivmodhi4_loop>:
    4f8c:	aa 1f       	adc	r26, r26
    4f8e:	bb 1f       	adc	r27, r27
    4f90:	a6 17       	cp	r26, r22
    4f92:	b7 07       	cpc	r27, r23
    4f94:	10 f0       	brcs	.+4      	; 0x4f9a <__udivmodhi4_ep>
    4f96:	a6 1b       	sub	r26, r22
    4f98:	b7 0b       	sbc	r27, r23

00004f9a <__udivmodhi4_ep>:
    4f9a:	88 1f       	adc	r24, r24
    4f9c:	99 1f       	adc	r25, r25
    4f9e:	5a 95       	dec	r21
    4fa0:	a9 f7       	brne	.-22     	; 0x4f8c <__udivmodhi4_loop>
    4fa2:	80 95       	com	r24
    4fa4:	90 95       	com	r25
    4fa6:	bc 01       	movw	r22, r24
    4fa8:	cd 01       	movw	r24, r26
    4faa:	08 95       	ret

00004fac <malloc>:
    4fac:	cf 93       	push	r28
    4fae:	df 93       	push	r29
    4fb0:	bc 01       	movw	r22, r24
    4fb2:	82 30       	cpi	r24, 0x02	; 2
    4fb4:	91 05       	cpc	r25, r1
    4fb6:	10 f4       	brcc	.+4      	; 0x4fbc <malloc+0x10>
    4fb8:	62 e0       	ldi	r22, 0x02	; 2
    4fba:	70 e0       	ldi	r23, 0x00	; 0
    4fbc:	a0 91 a7 03 	lds	r26, 0x03A7
    4fc0:	b0 91 a8 03 	lds	r27, 0x03A8
    4fc4:	ed 01       	movw	r28, r26
    4fc6:	e0 e0       	ldi	r30, 0x00	; 0
    4fc8:	f0 e0       	ldi	r31, 0x00	; 0
    4fca:	40 e0       	ldi	r20, 0x00	; 0
    4fcc:	50 e0       	ldi	r21, 0x00	; 0
    4fce:	21 c0       	rjmp	.+66     	; 0x5012 <malloc+0x66>
    4fd0:	88 81       	ld	r24, Y
    4fd2:	99 81       	ldd	r25, Y+1	; 0x01
    4fd4:	86 17       	cp	r24, r22
    4fd6:	97 07       	cpc	r25, r23
    4fd8:	69 f4       	brne	.+26     	; 0x4ff4 <malloc+0x48>
    4fda:	8a 81       	ldd	r24, Y+2	; 0x02
    4fdc:	9b 81       	ldd	r25, Y+3	; 0x03
    4fde:	30 97       	sbiw	r30, 0x00	; 0
    4fe0:	19 f0       	breq	.+6      	; 0x4fe8 <malloc+0x3c>
    4fe2:	93 83       	std	Z+3, r25	; 0x03
    4fe4:	82 83       	std	Z+2, r24	; 0x02
    4fe6:	04 c0       	rjmp	.+8      	; 0x4ff0 <malloc+0x44>
    4fe8:	90 93 a8 03 	sts	0x03A8, r25
    4fec:	80 93 a7 03 	sts	0x03A7, r24
    4ff0:	fe 01       	movw	r30, r28
    4ff2:	34 c0       	rjmp	.+104    	; 0x505c <malloc+0xb0>
    4ff4:	68 17       	cp	r22, r24
    4ff6:	79 07       	cpc	r23, r25
    4ff8:	38 f4       	brcc	.+14     	; 0x5008 <malloc+0x5c>
    4ffa:	41 15       	cp	r20, r1
    4ffc:	51 05       	cpc	r21, r1
    4ffe:	19 f0       	breq	.+6      	; 0x5006 <malloc+0x5a>
    5000:	84 17       	cp	r24, r20
    5002:	95 07       	cpc	r25, r21
    5004:	08 f4       	brcc	.+2      	; 0x5008 <malloc+0x5c>
    5006:	ac 01       	movw	r20, r24
    5008:	fe 01       	movw	r30, r28
    500a:	8a 81       	ldd	r24, Y+2	; 0x02
    500c:	9b 81       	ldd	r25, Y+3	; 0x03
    500e:	9c 01       	movw	r18, r24
    5010:	e9 01       	movw	r28, r18
    5012:	20 97       	sbiw	r28, 0x00	; 0
    5014:	e9 f6       	brne	.-70     	; 0x4fd0 <malloc+0x24>
    5016:	41 15       	cp	r20, r1
    5018:	51 05       	cpc	r21, r1
    501a:	a9 f1       	breq	.+106    	; 0x5086 <malloc+0xda>
    501c:	ca 01       	movw	r24, r20
    501e:	86 1b       	sub	r24, r22
    5020:	97 0b       	sbc	r25, r23
    5022:	04 97       	sbiw	r24, 0x04	; 4
    5024:	08 f4       	brcc	.+2      	; 0x5028 <malloc+0x7c>
    5026:	ba 01       	movw	r22, r20
    5028:	e0 e0       	ldi	r30, 0x00	; 0
    502a:	f0 e0       	ldi	r31, 0x00	; 0
    502c:	2a c0       	rjmp	.+84     	; 0x5082 <malloc+0xd6>
    502e:	8d 91       	ld	r24, X+
    5030:	9c 91       	ld	r25, X
    5032:	11 97       	sbiw	r26, 0x01	; 1
    5034:	84 17       	cp	r24, r20
    5036:	95 07       	cpc	r25, r21
    5038:	f9 f4       	brne	.+62     	; 0x5078 <malloc+0xcc>
    503a:	64 17       	cp	r22, r20
    503c:	75 07       	cpc	r23, r21
    503e:	81 f4       	brne	.+32     	; 0x5060 <malloc+0xb4>
    5040:	12 96       	adiw	r26, 0x02	; 2
    5042:	8d 91       	ld	r24, X+
    5044:	9c 91       	ld	r25, X
    5046:	13 97       	sbiw	r26, 0x03	; 3
    5048:	30 97       	sbiw	r30, 0x00	; 0
    504a:	19 f0       	breq	.+6      	; 0x5052 <malloc+0xa6>
    504c:	93 83       	std	Z+3, r25	; 0x03
    504e:	82 83       	std	Z+2, r24	; 0x02
    5050:	04 c0       	rjmp	.+8      	; 0x505a <malloc+0xae>
    5052:	90 93 a8 03 	sts	0x03A8, r25
    5056:	80 93 a7 03 	sts	0x03A7, r24
    505a:	fd 01       	movw	r30, r26
    505c:	32 96       	adiw	r30, 0x02	; 2
    505e:	4f c0       	rjmp	.+158    	; 0x50fe <malloc+0x152>
    5060:	ca 01       	movw	r24, r20
    5062:	86 1b       	sub	r24, r22
    5064:	97 0b       	sbc	r25, r23
    5066:	fd 01       	movw	r30, r26
    5068:	e8 0f       	add	r30, r24
    506a:	f9 1f       	adc	r31, r25
    506c:	61 93       	st	Z+, r22
    506e:	71 93       	st	Z+, r23
    5070:	02 97       	sbiw	r24, 0x02	; 2
    5072:	8d 93       	st	X+, r24
    5074:	9c 93       	st	X, r25
    5076:	43 c0       	rjmp	.+134    	; 0x50fe <malloc+0x152>
    5078:	fd 01       	movw	r30, r26
    507a:	82 81       	ldd	r24, Z+2	; 0x02
    507c:	93 81       	ldd	r25, Z+3	; 0x03
    507e:	9c 01       	movw	r18, r24
    5080:	d9 01       	movw	r26, r18
    5082:	10 97       	sbiw	r26, 0x00	; 0
    5084:	a1 f6       	brne	.-88     	; 0x502e <malloc+0x82>
    5086:	80 91 a5 03 	lds	r24, 0x03A5
    508a:	90 91 a6 03 	lds	r25, 0x03A6
    508e:	89 2b       	or	r24, r25
    5090:	41 f4       	brne	.+16     	; 0x50a2 <malloc+0xf6>
    5092:	80 91 ef 01 	lds	r24, 0x01EF
    5096:	90 91 f0 01 	lds	r25, 0x01F0
    509a:	90 93 a6 03 	sts	0x03A6, r25
    509e:	80 93 a5 03 	sts	0x03A5, r24
    50a2:	40 91 f1 01 	lds	r20, 0x01F1
    50a6:	50 91 f2 01 	lds	r21, 0x01F2
    50aa:	41 15       	cp	r20, r1
    50ac:	51 05       	cpc	r21, r1
    50ae:	41 f4       	brne	.+16     	; 0x50c0 <malloc+0x114>
    50b0:	4d b7       	in	r20, 0x3d	; 61
    50b2:	5e b7       	in	r21, 0x3e	; 62
    50b4:	80 91 ed 01 	lds	r24, 0x01ED
    50b8:	90 91 ee 01 	lds	r25, 0x01EE
    50bc:	48 1b       	sub	r20, r24
    50be:	59 0b       	sbc	r21, r25
    50c0:	20 91 a5 03 	lds	r18, 0x03A5
    50c4:	30 91 a6 03 	lds	r19, 0x03A6
    50c8:	24 17       	cp	r18, r20
    50ca:	35 07       	cpc	r19, r21
    50cc:	b0 f4       	brcc	.+44     	; 0x50fa <malloc+0x14e>
    50ce:	ca 01       	movw	r24, r20
    50d0:	82 1b       	sub	r24, r18
    50d2:	93 0b       	sbc	r25, r19
    50d4:	86 17       	cp	r24, r22
    50d6:	97 07       	cpc	r25, r23
    50d8:	80 f0       	brcs	.+32     	; 0x50fa <malloc+0x14e>
    50da:	ab 01       	movw	r20, r22
    50dc:	4e 5f       	subi	r20, 0xFE	; 254
    50de:	5f 4f       	sbci	r21, 0xFF	; 255
    50e0:	84 17       	cp	r24, r20
    50e2:	95 07       	cpc	r25, r21
    50e4:	50 f0       	brcs	.+20     	; 0x50fa <malloc+0x14e>
    50e6:	42 0f       	add	r20, r18
    50e8:	53 1f       	adc	r21, r19
    50ea:	50 93 a6 03 	sts	0x03A6, r21
    50ee:	40 93 a5 03 	sts	0x03A5, r20
    50f2:	f9 01       	movw	r30, r18
    50f4:	61 93       	st	Z+, r22
    50f6:	71 93       	st	Z+, r23
    50f8:	02 c0       	rjmp	.+4      	; 0x50fe <malloc+0x152>
    50fa:	e0 e0       	ldi	r30, 0x00	; 0
    50fc:	f0 e0       	ldi	r31, 0x00	; 0
    50fe:	cf 01       	movw	r24, r30
    5100:	df 91       	pop	r29
    5102:	cf 91       	pop	r28
    5104:	08 95       	ret

00005106 <free>:
    5106:	cf 93       	push	r28
    5108:	df 93       	push	r29
    510a:	00 97       	sbiw	r24, 0x00	; 0
    510c:	09 f4       	brne	.+2      	; 0x5110 <free+0xa>
    510e:	50 c0       	rjmp	.+160    	; 0x51b0 <free+0xaa>
    5110:	ec 01       	movw	r28, r24
    5112:	22 97       	sbiw	r28, 0x02	; 2
    5114:	1b 82       	std	Y+3, r1	; 0x03
    5116:	1a 82       	std	Y+2, r1	; 0x02
    5118:	a0 91 a7 03 	lds	r26, 0x03A7
    511c:	b0 91 a8 03 	lds	r27, 0x03A8
    5120:	10 97       	sbiw	r26, 0x00	; 0
    5122:	09 f1       	breq	.+66     	; 0x5166 <free+0x60>
    5124:	40 e0       	ldi	r20, 0x00	; 0
    5126:	50 e0       	ldi	r21, 0x00	; 0
    5128:	ac 17       	cp	r26, r28
    512a:	bd 07       	cpc	r27, r29
    512c:	08 f1       	brcs	.+66     	; 0x5170 <free+0x6a>
    512e:	bb 83       	std	Y+3, r27	; 0x03
    5130:	aa 83       	std	Y+2, r26	; 0x02
    5132:	fe 01       	movw	r30, r28
    5134:	21 91       	ld	r18, Z+
    5136:	31 91       	ld	r19, Z+
    5138:	e2 0f       	add	r30, r18
    513a:	f3 1f       	adc	r31, r19
    513c:	ae 17       	cp	r26, r30
    513e:	bf 07       	cpc	r27, r31
    5140:	79 f4       	brne	.+30     	; 0x5160 <free+0x5a>
    5142:	8d 91       	ld	r24, X+
    5144:	9c 91       	ld	r25, X
    5146:	11 97       	sbiw	r26, 0x01	; 1
    5148:	28 0f       	add	r18, r24
    514a:	39 1f       	adc	r19, r25
    514c:	2e 5f       	subi	r18, 0xFE	; 254
    514e:	3f 4f       	sbci	r19, 0xFF	; 255
    5150:	39 83       	std	Y+1, r19	; 0x01
    5152:	28 83       	st	Y, r18
    5154:	12 96       	adiw	r26, 0x02	; 2
    5156:	8d 91       	ld	r24, X+
    5158:	9c 91       	ld	r25, X
    515a:	13 97       	sbiw	r26, 0x03	; 3
    515c:	9b 83       	std	Y+3, r25	; 0x03
    515e:	8a 83       	std	Y+2, r24	; 0x02
    5160:	41 15       	cp	r20, r1
    5162:	51 05       	cpc	r21, r1
    5164:	71 f4       	brne	.+28     	; 0x5182 <free+0x7c>
    5166:	d0 93 a8 03 	sts	0x03A8, r29
    516a:	c0 93 a7 03 	sts	0x03A7, r28
    516e:	20 c0       	rjmp	.+64     	; 0x51b0 <free+0xaa>
    5170:	12 96       	adiw	r26, 0x02	; 2
    5172:	8d 91       	ld	r24, X+
    5174:	9c 91       	ld	r25, X
    5176:	13 97       	sbiw	r26, 0x03	; 3
    5178:	ad 01       	movw	r20, r26
    517a:	00 97       	sbiw	r24, 0x00	; 0
    517c:	11 f0       	breq	.+4      	; 0x5182 <free+0x7c>
    517e:	dc 01       	movw	r26, r24
    5180:	d3 cf       	rjmp	.-90     	; 0x5128 <free+0x22>
    5182:	fa 01       	movw	r30, r20
    5184:	d3 83       	std	Z+3, r29	; 0x03
    5186:	c2 83       	std	Z+2, r28	; 0x02
    5188:	21 91       	ld	r18, Z+
    518a:	31 91       	ld	r19, Z+
    518c:	e2 0f       	add	r30, r18
    518e:	f3 1f       	adc	r31, r19
    5190:	ce 17       	cp	r28, r30
    5192:	df 07       	cpc	r29, r31
    5194:	69 f4       	brne	.+26     	; 0x51b0 <free+0xaa>
    5196:	88 81       	ld	r24, Y
    5198:	99 81       	ldd	r25, Y+1	; 0x01
    519a:	28 0f       	add	r18, r24
    519c:	39 1f       	adc	r19, r25
    519e:	2e 5f       	subi	r18, 0xFE	; 254
    51a0:	3f 4f       	sbci	r19, 0xFF	; 255
    51a2:	fa 01       	movw	r30, r20
    51a4:	31 83       	std	Z+1, r19	; 0x01
    51a6:	20 83       	st	Z, r18
    51a8:	8a 81       	ldd	r24, Y+2	; 0x02
    51aa:	9b 81       	ldd	r25, Y+3	; 0x03
    51ac:	93 83       	std	Z+3, r25	; 0x03
    51ae:	82 83       	std	Z+2, r24	; 0x02
    51b0:	df 91       	pop	r29
    51b2:	cf 91       	pop	r28
    51b4:	08 95       	ret

000051b6 <do_rand>:
    51b6:	a0 e0       	ldi	r26, 0x00	; 0
    51b8:	b0 e0       	ldi	r27, 0x00	; 0
    51ba:	e0 ee       	ldi	r30, 0xE0	; 224
    51bc:	f8 e2       	ldi	r31, 0x28	; 40
    51be:	b3 ce       	rjmp	.-666    	; 0x4f26 <__prologue_saves__+0x10>
    51c0:	ec 01       	movw	r28, r24
    51c2:	a8 80       	ld	r10, Y
    51c4:	b9 80       	ldd	r11, Y+1	; 0x01
    51c6:	ca 80       	ldd	r12, Y+2	; 0x02
    51c8:	db 80       	ldd	r13, Y+3	; 0x03
    51ca:	a1 14       	cp	r10, r1
    51cc:	b1 04       	cpc	r11, r1
    51ce:	c1 04       	cpc	r12, r1
    51d0:	d1 04       	cpc	r13, r1
    51d2:	41 f4       	brne	.+16     	; 0x51e4 <do_rand+0x2e>
    51d4:	84 e2       	ldi	r24, 0x24	; 36
    51d6:	a8 2e       	mov	r10, r24
    51d8:	89 ed       	ldi	r24, 0xD9	; 217
    51da:	b8 2e       	mov	r11, r24
    51dc:	8b e5       	ldi	r24, 0x5B	; 91
    51de:	c8 2e       	mov	r12, r24
    51e0:	87 e0       	ldi	r24, 0x07	; 7
    51e2:	d8 2e       	mov	r13, r24
    51e4:	c6 01       	movw	r24, r12
    51e6:	b5 01       	movw	r22, r10
    51e8:	2d e1       	ldi	r18, 0x1D	; 29
    51ea:	33 ef       	ldi	r19, 0xF3	; 243
    51ec:	41 e0       	ldi	r20, 0x01	; 1
    51ee:	50 e0       	ldi	r21, 0x00	; 0
    51f0:	fa d1       	rcall	.+1012   	; 0x55e6 <__divmodsi4>
    51f2:	27 ea       	ldi	r18, 0xA7	; 167
    51f4:	31 e4       	ldi	r19, 0x41	; 65
    51f6:	40 e0       	ldi	r20, 0x00	; 0
    51f8:	50 e0       	ldi	r21, 0x00	; 0
    51fa:	39 de       	rcall	.-910    	; 0x4e6e <__mulsi3>
    51fc:	7b 01       	movw	r14, r22
    51fe:	8c 01       	movw	r16, r24
    5200:	c6 01       	movw	r24, r12
    5202:	b5 01       	movw	r22, r10
    5204:	2d e1       	ldi	r18, 0x1D	; 29
    5206:	33 ef       	ldi	r19, 0xF3	; 243
    5208:	41 e0       	ldi	r20, 0x01	; 1
    520a:	50 e0       	ldi	r21, 0x00	; 0
    520c:	ec d1       	rcall	.+984    	; 0x55e6 <__divmodsi4>
    520e:	ca 01       	movw	r24, r20
    5210:	b9 01       	movw	r22, r18
    5212:	2c ee       	ldi	r18, 0xEC	; 236
    5214:	34 ef       	ldi	r19, 0xF4	; 244
    5216:	4f ef       	ldi	r20, 0xFF	; 255
    5218:	5f ef       	ldi	r21, 0xFF	; 255
    521a:	29 de       	rcall	.-942    	; 0x4e6e <__mulsi3>
    521c:	6e 0d       	add	r22, r14
    521e:	7f 1d       	adc	r23, r15
    5220:	80 1f       	adc	r24, r16
    5222:	91 1f       	adc	r25, r17
    5224:	97 ff       	sbrs	r25, 7
    5226:	04 c0       	rjmp	.+8      	; 0x5230 <do_rand+0x7a>
    5228:	61 50       	subi	r22, 0x01	; 1
    522a:	70 40       	sbci	r23, 0x00	; 0
    522c:	80 40       	sbci	r24, 0x00	; 0
    522e:	90 48       	sbci	r25, 0x80	; 128
    5230:	68 83       	st	Y, r22
    5232:	79 83       	std	Y+1, r23	; 0x01
    5234:	8a 83       	std	Y+2, r24	; 0x02
    5236:	9b 83       	std	Y+3, r25	; 0x03
    5238:	9b 01       	movw	r18, r22
    523a:	3f 77       	andi	r19, 0x7F	; 127
    523c:	c9 01       	movw	r24, r18
    523e:	cd b7       	in	r28, 0x3d	; 61
    5240:	de b7       	in	r29, 0x3e	; 62
    5242:	ea e0       	ldi	r30, 0x0A	; 10
    5244:	8c ce       	rjmp	.-744    	; 0x4f5e <__epilogue_restores__+0x10>

00005246 <rand_r>:
    5246:	b7 df       	rcall	.-146    	; 0x51b6 <do_rand>
    5248:	08 95       	ret

0000524a <rand>:
    524a:	83 ef       	ldi	r24, 0xF3	; 243
    524c:	91 e0       	ldi	r25, 0x01	; 1
    524e:	b3 df       	rcall	.-154    	; 0x51b6 <do_rand>
    5250:	08 95       	ret

00005252 <srand>:
    5252:	a0 e0       	ldi	r26, 0x00	; 0
    5254:	b0 e0       	ldi	r27, 0x00	; 0
    5256:	80 93 f3 01 	sts	0x01F3, r24
    525a:	90 93 f4 01 	sts	0x01F4, r25
    525e:	a0 93 f5 01 	sts	0x01F5, r26
    5262:	b0 93 f6 01 	sts	0x01F6, r27
    5266:	08 95       	ret

00005268 <__ftoa_engine>:
    5268:	28 30       	cpi	r18, 0x08	; 8
    526a:	08 f0       	brcs	.+2      	; 0x526e <__ftoa_engine+0x6>
    526c:	27 e0       	ldi	r18, 0x07	; 7
    526e:	33 27       	eor	r19, r19
    5270:	da 01       	movw	r26, r20
    5272:	99 0f       	add	r25, r25
    5274:	31 1d       	adc	r19, r1
    5276:	87 fd       	sbrc	r24, 7
    5278:	91 60       	ori	r25, 0x01	; 1
    527a:	00 96       	adiw	r24, 0x00	; 0
    527c:	61 05       	cpc	r22, r1
    527e:	71 05       	cpc	r23, r1
    5280:	39 f4       	brne	.+14     	; 0x5290 <__ftoa_engine+0x28>
    5282:	32 60       	ori	r19, 0x02	; 2
    5284:	2e 5f       	subi	r18, 0xFE	; 254
    5286:	3d 93       	st	X+, r19
    5288:	30 e3       	ldi	r19, 0x30	; 48
    528a:	2a 95       	dec	r18
    528c:	e1 f7       	brne	.-8      	; 0x5286 <__ftoa_engine+0x1e>
    528e:	08 95       	ret
    5290:	9f 3f       	cpi	r25, 0xFF	; 255
    5292:	30 f0       	brcs	.+12     	; 0x52a0 <__ftoa_engine+0x38>
    5294:	80 38       	cpi	r24, 0x80	; 128
    5296:	71 05       	cpc	r23, r1
    5298:	61 05       	cpc	r22, r1
    529a:	09 f0       	breq	.+2      	; 0x529e <__ftoa_engine+0x36>
    529c:	3c 5f       	subi	r19, 0xFC	; 252
    529e:	3c 5f       	subi	r19, 0xFC	; 252
    52a0:	3d 93       	st	X+, r19
    52a2:	91 30       	cpi	r25, 0x01	; 1
    52a4:	08 f0       	brcs	.+2      	; 0x52a8 <__ftoa_engine+0x40>
    52a6:	80 68       	ori	r24, 0x80	; 128
    52a8:	91 1d       	adc	r25, r1
    52aa:	df 93       	push	r29
    52ac:	cf 93       	push	r28
    52ae:	1f 93       	push	r17
    52b0:	0f 93       	push	r16
    52b2:	ff 92       	push	r15
    52b4:	ef 92       	push	r14
    52b6:	19 2f       	mov	r17, r25
    52b8:	98 7f       	andi	r25, 0xF8	; 248
    52ba:	96 95       	lsr	r25
    52bc:	e9 2f       	mov	r30, r25
    52be:	96 95       	lsr	r25
    52c0:	96 95       	lsr	r25
    52c2:	e9 0f       	add	r30, r25
    52c4:	ff 27       	eor	r31, r31
    52c6:	ef 53       	subi	r30, 0x3F	; 63
    52c8:	fa 4f       	sbci	r31, 0xFA	; 250
    52ca:	99 27       	eor	r25, r25
    52cc:	33 27       	eor	r19, r19
    52ce:	ee 24       	eor	r14, r14
    52d0:	ff 24       	eor	r15, r15
    52d2:	a7 01       	movw	r20, r14
    52d4:	e7 01       	movw	r28, r14
    52d6:	05 90       	lpm	r0, Z+
    52d8:	08 94       	sec
    52da:	07 94       	ror	r0
    52dc:	28 f4       	brcc	.+10     	; 0x52e8 <__ftoa_engine+0x80>
    52de:	36 0f       	add	r19, r22
    52e0:	e7 1e       	adc	r14, r23
    52e2:	f8 1e       	adc	r15, r24
    52e4:	49 1f       	adc	r20, r25
    52e6:	51 1d       	adc	r21, r1
    52e8:	66 0f       	add	r22, r22
    52ea:	77 1f       	adc	r23, r23
    52ec:	88 1f       	adc	r24, r24
    52ee:	99 1f       	adc	r25, r25
    52f0:	06 94       	lsr	r0
    52f2:	a1 f7       	brne	.-24     	; 0x52dc <__ftoa_engine+0x74>
    52f4:	05 90       	lpm	r0, Z+
    52f6:	07 94       	ror	r0
    52f8:	28 f4       	brcc	.+10     	; 0x5304 <__ftoa_engine+0x9c>
    52fa:	e7 0e       	add	r14, r23
    52fc:	f8 1e       	adc	r15, r24
    52fe:	49 1f       	adc	r20, r25
    5300:	56 1f       	adc	r21, r22
    5302:	c1 1d       	adc	r28, r1
    5304:	77 0f       	add	r23, r23
    5306:	88 1f       	adc	r24, r24
    5308:	99 1f       	adc	r25, r25
    530a:	66 1f       	adc	r22, r22
    530c:	06 94       	lsr	r0
    530e:	a1 f7       	brne	.-24     	; 0x52f8 <__ftoa_engine+0x90>
    5310:	05 90       	lpm	r0, Z+
    5312:	07 94       	ror	r0
    5314:	28 f4       	brcc	.+10     	; 0x5320 <__ftoa_engine+0xb8>
    5316:	f8 0e       	add	r15, r24
    5318:	49 1f       	adc	r20, r25
    531a:	56 1f       	adc	r21, r22
    531c:	c7 1f       	adc	r28, r23
    531e:	d1 1d       	adc	r29, r1
    5320:	88 0f       	add	r24, r24
    5322:	99 1f       	adc	r25, r25
    5324:	66 1f       	adc	r22, r22
    5326:	77 1f       	adc	r23, r23
    5328:	06 94       	lsr	r0
    532a:	a1 f7       	brne	.-24     	; 0x5314 <__ftoa_engine+0xac>
    532c:	05 90       	lpm	r0, Z+
    532e:	07 94       	ror	r0
    5330:	20 f4       	brcc	.+8      	; 0x533a <__ftoa_engine+0xd2>
    5332:	49 0f       	add	r20, r25
    5334:	56 1f       	adc	r21, r22
    5336:	c7 1f       	adc	r28, r23
    5338:	d8 1f       	adc	r29, r24
    533a:	99 0f       	add	r25, r25
    533c:	66 1f       	adc	r22, r22
    533e:	77 1f       	adc	r23, r23
    5340:	88 1f       	adc	r24, r24
    5342:	06 94       	lsr	r0
    5344:	a9 f7       	brne	.-22     	; 0x5330 <__ftoa_engine+0xc8>
    5346:	84 91       	lpm	r24, Z+
    5348:	10 95       	com	r17
    534a:	17 70       	andi	r17, 0x07	; 7
    534c:	41 f0       	breq	.+16     	; 0x535e <__ftoa_engine+0xf6>
    534e:	d6 95       	lsr	r29
    5350:	c7 95       	ror	r28
    5352:	57 95       	ror	r21
    5354:	47 95       	ror	r20
    5356:	f7 94       	ror	r15
    5358:	e7 94       	ror	r14
    535a:	1a 95       	dec	r17
    535c:	c1 f7       	brne	.-16     	; 0x534e <__ftoa_engine+0xe6>
    535e:	e7 e6       	ldi	r30, 0x67	; 103
    5360:	f5 e0       	ldi	r31, 0x05	; 5
    5362:	68 94       	set
    5364:	15 90       	lpm	r1, Z+
    5366:	15 91       	lpm	r17, Z+
    5368:	35 91       	lpm	r19, Z+
    536a:	65 91       	lpm	r22, Z+
    536c:	95 91       	lpm	r25, Z+
    536e:	05 90       	lpm	r0, Z+
    5370:	7f e2       	ldi	r23, 0x2F	; 47
    5372:	73 95       	inc	r23
    5374:	e1 18       	sub	r14, r1
    5376:	f1 0a       	sbc	r15, r17
    5378:	43 0b       	sbc	r20, r19
    537a:	56 0b       	sbc	r21, r22
    537c:	c9 0b       	sbc	r28, r25
    537e:	d0 09       	sbc	r29, r0
    5380:	c0 f7       	brcc	.-16     	; 0x5372 <__ftoa_engine+0x10a>
    5382:	e1 0c       	add	r14, r1
    5384:	f1 1e       	adc	r15, r17
    5386:	43 1f       	adc	r20, r19
    5388:	56 1f       	adc	r21, r22
    538a:	c9 1f       	adc	r28, r25
    538c:	d0 1d       	adc	r29, r0
    538e:	7e f4       	brtc	.+30     	; 0x53ae <__ftoa_engine+0x146>
    5390:	70 33       	cpi	r23, 0x30	; 48
    5392:	11 f4       	brne	.+4      	; 0x5398 <__ftoa_engine+0x130>
    5394:	8a 95       	dec	r24
    5396:	e6 cf       	rjmp	.-52     	; 0x5364 <__ftoa_engine+0xfc>
    5398:	e8 94       	clt
    539a:	01 50       	subi	r16, 0x01	; 1
    539c:	30 f0       	brcs	.+12     	; 0x53aa <__ftoa_engine+0x142>
    539e:	08 0f       	add	r16, r24
    53a0:	0a f4       	brpl	.+2      	; 0x53a4 <__ftoa_engine+0x13c>
    53a2:	00 27       	eor	r16, r16
    53a4:	02 17       	cp	r16, r18
    53a6:	08 f4       	brcc	.+2      	; 0x53aa <__ftoa_engine+0x142>
    53a8:	20 2f       	mov	r18, r16
    53aa:	23 95       	inc	r18
    53ac:	02 2f       	mov	r16, r18
    53ae:	7a 33       	cpi	r23, 0x3A	; 58
    53b0:	28 f0       	brcs	.+10     	; 0x53bc <__ftoa_engine+0x154>
    53b2:	79 e3       	ldi	r23, 0x39	; 57
    53b4:	7d 93       	st	X+, r23
    53b6:	2a 95       	dec	r18
    53b8:	e9 f7       	brne	.-6      	; 0x53b4 <__ftoa_engine+0x14c>
    53ba:	10 c0       	rjmp	.+32     	; 0x53dc <__ftoa_engine+0x174>
    53bc:	7d 93       	st	X+, r23
    53be:	2a 95       	dec	r18
    53c0:	89 f6       	brne	.-94     	; 0x5364 <__ftoa_engine+0xfc>
    53c2:	06 94       	lsr	r0
    53c4:	97 95       	ror	r25
    53c6:	67 95       	ror	r22
    53c8:	37 95       	ror	r19
    53ca:	17 95       	ror	r17
    53cc:	17 94       	ror	r1
    53ce:	e1 18       	sub	r14, r1
    53d0:	f1 0a       	sbc	r15, r17
    53d2:	43 0b       	sbc	r20, r19
    53d4:	56 0b       	sbc	r21, r22
    53d6:	c9 0b       	sbc	r28, r25
    53d8:	d0 09       	sbc	r29, r0
    53da:	98 f0       	brcs	.+38     	; 0x5402 <__ftoa_engine+0x19a>
    53dc:	23 95       	inc	r18
    53de:	7e 91       	ld	r23, -X
    53e0:	73 95       	inc	r23
    53e2:	7a 33       	cpi	r23, 0x3A	; 58
    53e4:	08 f0       	brcs	.+2      	; 0x53e8 <__ftoa_engine+0x180>
    53e6:	70 e3       	ldi	r23, 0x30	; 48
    53e8:	7c 93       	st	X, r23
    53ea:	20 13       	cpse	r18, r16
    53ec:	b8 f7       	brcc	.-18     	; 0x53dc <__ftoa_engine+0x174>
    53ee:	7e 91       	ld	r23, -X
    53f0:	70 61       	ori	r23, 0x10	; 16
    53f2:	7d 93       	st	X+, r23
    53f4:	30 f0       	brcs	.+12     	; 0x5402 <__ftoa_engine+0x19a>
    53f6:	83 95       	inc	r24
    53f8:	71 e3       	ldi	r23, 0x31	; 49
    53fa:	7d 93       	st	X+, r23
    53fc:	70 e3       	ldi	r23, 0x30	; 48
    53fe:	2a 95       	dec	r18
    5400:	e1 f7       	brne	.-8      	; 0x53fa <__ftoa_engine+0x192>
    5402:	11 24       	eor	r1, r1
    5404:	ef 90       	pop	r14
    5406:	ff 90       	pop	r15
    5408:	0f 91       	pop	r16
    540a:	1f 91       	pop	r17
    540c:	cf 91       	pop	r28
    540e:	df 91       	pop	r29
    5410:	99 27       	eor	r25, r25
    5412:	87 fd       	sbrc	r24, 7
    5414:	90 95       	com	r25
    5416:	08 95       	ret

00005418 <strnlen_P>:
    5418:	fc 01       	movw	r30, r24
    541a:	05 90       	lpm	r0, Z+
    541c:	61 50       	subi	r22, 0x01	; 1
    541e:	70 40       	sbci	r23, 0x00	; 0
    5420:	01 10       	cpse	r0, r1
    5422:	d8 f7       	brcc	.-10     	; 0x541a <strnlen_P+0x2>
    5424:	80 95       	com	r24
    5426:	90 95       	com	r25
    5428:	8e 0f       	add	r24, r30
    542a:	9f 1f       	adc	r25, r31
    542c:	08 95       	ret

0000542e <strnlen>:
    542e:	fc 01       	movw	r30, r24
    5430:	61 50       	subi	r22, 0x01	; 1
    5432:	70 40       	sbci	r23, 0x00	; 0
    5434:	01 90       	ld	r0, Z+
    5436:	01 10       	cpse	r0, r1
    5438:	d8 f7       	brcc	.-10     	; 0x5430 <strnlen+0x2>
    543a:	80 95       	com	r24
    543c:	90 95       	com	r25
    543e:	8e 0f       	add	r24, r30
    5440:	9f 1f       	adc	r25, r31
    5442:	08 95       	ret

00005444 <fputc>:
    5444:	0f 93       	push	r16
    5446:	1f 93       	push	r17
    5448:	cf 93       	push	r28
    544a:	df 93       	push	r29
    544c:	8c 01       	movw	r16, r24
    544e:	eb 01       	movw	r28, r22
    5450:	8b 81       	ldd	r24, Y+3	; 0x03
    5452:	81 ff       	sbrs	r24, 1
    5454:	1b c0       	rjmp	.+54     	; 0x548c <fputc+0x48>
    5456:	82 ff       	sbrs	r24, 2
    5458:	0d c0       	rjmp	.+26     	; 0x5474 <fputc+0x30>
    545a:	2e 81       	ldd	r18, Y+6	; 0x06
    545c:	3f 81       	ldd	r19, Y+7	; 0x07
    545e:	8c 81       	ldd	r24, Y+4	; 0x04
    5460:	9d 81       	ldd	r25, Y+5	; 0x05
    5462:	28 17       	cp	r18, r24
    5464:	39 07       	cpc	r19, r25
    5466:	64 f4       	brge	.+24     	; 0x5480 <fputc+0x3c>
    5468:	e8 81       	ld	r30, Y
    546a:	f9 81       	ldd	r31, Y+1	; 0x01
    546c:	01 93       	st	Z+, r16
    546e:	f9 83       	std	Y+1, r31	; 0x01
    5470:	e8 83       	st	Y, r30
    5472:	06 c0       	rjmp	.+12     	; 0x5480 <fputc+0x3c>
    5474:	e8 85       	ldd	r30, Y+8	; 0x08
    5476:	f9 85       	ldd	r31, Y+9	; 0x09
    5478:	80 2f       	mov	r24, r16
    547a:	09 95       	icall
    547c:	89 2b       	or	r24, r25
    547e:	31 f4       	brne	.+12     	; 0x548c <fputc+0x48>
    5480:	8e 81       	ldd	r24, Y+6	; 0x06
    5482:	9f 81       	ldd	r25, Y+7	; 0x07
    5484:	01 96       	adiw	r24, 0x01	; 1
    5486:	9f 83       	std	Y+7, r25	; 0x07
    5488:	8e 83       	std	Y+6, r24	; 0x06
    548a:	02 c0       	rjmp	.+4      	; 0x5490 <fputc+0x4c>
    548c:	0f ef       	ldi	r16, 0xFF	; 255
    548e:	1f ef       	ldi	r17, 0xFF	; 255
    5490:	c8 01       	movw	r24, r16
    5492:	df 91       	pop	r29
    5494:	cf 91       	pop	r28
    5496:	1f 91       	pop	r17
    5498:	0f 91       	pop	r16
    549a:	08 95       	ret

0000549c <printf>:
    549c:	a0 e0       	ldi	r26, 0x00	; 0
    549e:	b0 e0       	ldi	r27, 0x00	; 0
    54a0:	e3 e5       	ldi	r30, 0x53	; 83
    54a2:	fa e2       	ldi	r31, 0x2A	; 42
    54a4:	48 cd       	rjmp	.-1392   	; 0x4f36 <__prologue_saves__+0x20>
    54a6:	fe 01       	movw	r30, r28
    54a8:	35 96       	adiw	r30, 0x05	; 5
    54aa:	61 91       	ld	r22, Z+
    54ac:	71 91       	ld	r23, Z+
    54ae:	80 91 ab 03 	lds	r24, 0x03AB
    54b2:	90 91 ac 03 	lds	r25, 0x03AC
    54b6:	af 01       	movw	r20, r30
    54b8:	72 d9       	rcall	.-3356   	; 0x479e <vfprintf>
    54ba:	20 96       	adiw	r28, 0x00	; 0
    54bc:	e2 e0       	ldi	r30, 0x02	; 2
    54be:	57 cd       	rjmp	.-1362   	; 0x4f6e <__epilogue_restores__+0x20>

000054c0 <puts>:
    54c0:	0f 93       	push	r16
    54c2:	1f 93       	push	r17
    54c4:	cf 93       	push	r28
    54c6:	df 93       	push	r29
    54c8:	8c 01       	movw	r16, r24
    54ca:	e0 91 ab 03 	lds	r30, 0x03AB
    54ce:	f0 91 ac 03 	lds	r31, 0x03AC
    54d2:	83 81       	ldd	r24, Z+3	; 0x03
    54d4:	81 ff       	sbrs	r24, 1
    54d6:	21 c0       	rjmp	.+66     	; 0x551a <puts+0x5a>
    54d8:	c0 e0       	ldi	r28, 0x00	; 0
    54da:	d0 e0       	ldi	r29, 0x00	; 0
    54dc:	0d c0       	rjmp	.+26     	; 0x54f8 <puts+0x38>
    54de:	e0 91 ab 03 	lds	r30, 0x03AB
    54e2:	f0 91 ac 03 	lds	r31, 0x03AC
    54e6:	20 85       	ldd	r18, Z+8	; 0x08
    54e8:	31 85       	ldd	r19, Z+9	; 0x09
    54ea:	bf 01       	movw	r22, r30
    54ec:	f9 01       	movw	r30, r18
    54ee:	09 95       	icall
    54f0:	89 2b       	or	r24, r25
    54f2:	11 f0       	breq	.+4      	; 0x54f8 <puts+0x38>
    54f4:	cf ef       	ldi	r28, 0xFF	; 255
    54f6:	df ef       	ldi	r29, 0xFF	; 255
    54f8:	f8 01       	movw	r30, r16
    54fa:	81 91       	ld	r24, Z+
    54fc:	8f 01       	movw	r16, r30
    54fe:	88 23       	and	r24, r24
    5500:	71 f7       	brne	.-36     	; 0x54de <puts+0x1e>
    5502:	e0 91 ab 03 	lds	r30, 0x03AB
    5506:	f0 91 ac 03 	lds	r31, 0x03AC
    550a:	20 85       	ldd	r18, Z+8	; 0x08
    550c:	31 85       	ldd	r19, Z+9	; 0x09
    550e:	8a e0       	ldi	r24, 0x0A	; 10
    5510:	bf 01       	movw	r22, r30
    5512:	f9 01       	movw	r30, r18
    5514:	09 95       	icall
    5516:	89 2b       	or	r24, r25
    5518:	11 f0       	breq	.+4      	; 0x551e <puts+0x5e>
    551a:	cf ef       	ldi	r28, 0xFF	; 255
    551c:	df ef       	ldi	r29, 0xFF	; 255
    551e:	ce 01       	movw	r24, r28
    5520:	df 91       	pop	r29
    5522:	cf 91       	pop	r28
    5524:	1f 91       	pop	r17
    5526:	0f 91       	pop	r16
    5528:	08 95       	ret

0000552a <__ultoa_invert>:
    552a:	fa 01       	movw	r30, r20
    552c:	aa 27       	eor	r26, r26
    552e:	28 30       	cpi	r18, 0x08	; 8
    5530:	51 f1       	breq	.+84     	; 0x5586 <__ultoa_invert+0x5c>
    5532:	20 31       	cpi	r18, 0x10	; 16
    5534:	81 f1       	breq	.+96     	; 0x5596 <__ultoa_invert+0x6c>
    5536:	e8 94       	clt
    5538:	6f 93       	push	r22
    553a:	6e 7f       	andi	r22, 0xFE	; 254
    553c:	6e 5f       	subi	r22, 0xFE	; 254
    553e:	7f 4f       	sbci	r23, 0xFF	; 255
    5540:	8f 4f       	sbci	r24, 0xFF	; 255
    5542:	9f 4f       	sbci	r25, 0xFF	; 255
    5544:	af 4f       	sbci	r26, 0xFF	; 255
    5546:	b1 e0       	ldi	r27, 0x01	; 1
    5548:	3e d0       	rcall	.+124    	; 0x55c6 <__ultoa_invert+0x9c>
    554a:	b4 e0       	ldi	r27, 0x04	; 4
    554c:	3c d0       	rcall	.+120    	; 0x55c6 <__ultoa_invert+0x9c>
    554e:	67 0f       	add	r22, r23
    5550:	78 1f       	adc	r23, r24
    5552:	89 1f       	adc	r24, r25
    5554:	9a 1f       	adc	r25, r26
    5556:	a1 1d       	adc	r26, r1
    5558:	68 0f       	add	r22, r24
    555a:	79 1f       	adc	r23, r25
    555c:	8a 1f       	adc	r24, r26
    555e:	91 1d       	adc	r25, r1
    5560:	a1 1d       	adc	r26, r1
    5562:	6a 0f       	add	r22, r26
    5564:	71 1d       	adc	r23, r1
    5566:	81 1d       	adc	r24, r1
    5568:	91 1d       	adc	r25, r1
    556a:	a1 1d       	adc	r26, r1
    556c:	20 d0       	rcall	.+64     	; 0x55ae <__ultoa_invert+0x84>
    556e:	09 f4       	brne	.+2      	; 0x5572 <__ultoa_invert+0x48>
    5570:	68 94       	set
    5572:	3f 91       	pop	r19
    5574:	2a e0       	ldi	r18, 0x0A	; 10
    5576:	26 9f       	mul	r18, r22
    5578:	11 24       	eor	r1, r1
    557a:	30 19       	sub	r19, r0
    557c:	30 5d       	subi	r19, 0xD0	; 208
    557e:	31 93       	st	Z+, r19
    5580:	de f6       	brtc	.-74     	; 0x5538 <__ultoa_invert+0xe>
    5582:	cf 01       	movw	r24, r30
    5584:	08 95       	ret
    5586:	46 2f       	mov	r20, r22
    5588:	47 70       	andi	r20, 0x07	; 7
    558a:	40 5d       	subi	r20, 0xD0	; 208
    558c:	41 93       	st	Z+, r20
    558e:	b3 e0       	ldi	r27, 0x03	; 3
    5590:	0f d0       	rcall	.+30     	; 0x55b0 <__ultoa_invert+0x86>
    5592:	c9 f7       	brne	.-14     	; 0x5586 <__ultoa_invert+0x5c>
    5594:	f6 cf       	rjmp	.-20     	; 0x5582 <__ultoa_invert+0x58>
    5596:	46 2f       	mov	r20, r22
    5598:	4f 70       	andi	r20, 0x0F	; 15
    559a:	40 5d       	subi	r20, 0xD0	; 208
    559c:	4a 33       	cpi	r20, 0x3A	; 58
    559e:	18 f0       	brcs	.+6      	; 0x55a6 <__ultoa_invert+0x7c>
    55a0:	49 5d       	subi	r20, 0xD9	; 217
    55a2:	31 fd       	sbrc	r19, 1
    55a4:	40 52       	subi	r20, 0x20	; 32
    55a6:	41 93       	st	Z+, r20
    55a8:	02 d0       	rcall	.+4      	; 0x55ae <__ultoa_invert+0x84>
    55aa:	a9 f7       	brne	.-22     	; 0x5596 <__ultoa_invert+0x6c>
    55ac:	ea cf       	rjmp	.-44     	; 0x5582 <__ultoa_invert+0x58>
    55ae:	b4 e0       	ldi	r27, 0x04	; 4
    55b0:	a6 95       	lsr	r26
    55b2:	97 95       	ror	r25
    55b4:	87 95       	ror	r24
    55b6:	77 95       	ror	r23
    55b8:	67 95       	ror	r22
    55ba:	ba 95       	dec	r27
    55bc:	c9 f7       	brne	.-14     	; 0x55b0 <__ultoa_invert+0x86>
    55be:	00 97       	sbiw	r24, 0x00	; 0
    55c0:	61 05       	cpc	r22, r1
    55c2:	71 05       	cpc	r23, r1
    55c4:	08 95       	ret
    55c6:	9b 01       	movw	r18, r22
    55c8:	ac 01       	movw	r20, r24
    55ca:	0a 2e       	mov	r0, r26
    55cc:	06 94       	lsr	r0
    55ce:	57 95       	ror	r21
    55d0:	47 95       	ror	r20
    55d2:	37 95       	ror	r19
    55d4:	27 95       	ror	r18
    55d6:	ba 95       	dec	r27
    55d8:	c9 f7       	brne	.-14     	; 0x55cc <__ultoa_invert+0xa2>
    55da:	62 0f       	add	r22, r18
    55dc:	73 1f       	adc	r23, r19
    55de:	84 1f       	adc	r24, r20
    55e0:	95 1f       	adc	r25, r21
    55e2:	a0 1d       	adc	r26, r0
    55e4:	08 95       	ret

000055e6 <__divmodsi4>:
    55e6:	97 fb       	bst	r25, 7
    55e8:	09 2e       	mov	r0, r25
    55ea:	05 26       	eor	r0, r21
    55ec:	0e d0       	rcall	.+28     	; 0x560a <__divmodsi4_neg1>
    55ee:	57 fd       	sbrc	r21, 7
    55f0:	04 d0       	rcall	.+8      	; 0x55fa <__divmodsi4_neg2>
    55f2:	6f dc       	rcall	.-1826   	; 0x4ed2 <__udivmodsi4>
    55f4:	0a d0       	rcall	.+20     	; 0x560a <__divmodsi4_neg1>
    55f6:	00 1c       	adc	r0, r0
    55f8:	38 f4       	brcc	.+14     	; 0x5608 <__divmodsi4_exit>

000055fa <__divmodsi4_neg2>:
    55fa:	50 95       	com	r21
    55fc:	40 95       	com	r20
    55fe:	30 95       	com	r19
    5600:	21 95       	neg	r18
    5602:	3f 4f       	sbci	r19, 0xFF	; 255
    5604:	4f 4f       	sbci	r20, 0xFF	; 255
    5606:	5f 4f       	sbci	r21, 0xFF	; 255

00005608 <__divmodsi4_exit>:
    5608:	08 95       	ret

0000560a <__divmodsi4_neg1>:
    560a:	f6 f7       	brtc	.-4      	; 0x5608 <__divmodsi4_exit>
    560c:	90 95       	com	r25
    560e:	80 95       	com	r24
    5610:	70 95       	com	r23
    5612:	61 95       	neg	r22
    5614:	7f 4f       	sbci	r23, 0xFF	; 255
    5616:	8f 4f       	sbci	r24, 0xFF	; 255
    5618:	9f 4f       	sbci	r25, 0xFF	; 255
    561a:	08 95       	ret

0000561c <_exit>:
    561c:	f8 94       	cli

0000561e <__stop_program>:
    561e:	ff cf       	rjmp	.-2      	; 0x561e <__stop_program>
