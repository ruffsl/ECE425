
ObstacleAvoidance.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000080  00800100  000033fa  0000348e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000033fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000ff  00800180  00800180  0000350e  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  0000350e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000174  00000000  00000000  0000352e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008b2  00000000  00000000  000036a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000012d  00000000  00000000  00003f54  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000766  00000000  00000000  00004081  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000130  00000000  00000000  000047e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000795  00000000  00000000  00004918  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000006d3  00000000  00000000  000050ad  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b0 02 	jmp	0x560	; 0x560 <__ctors_end>
       4:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
       8:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
       c:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      10:	0c 94 49 0c 	jmp	0x1892	; 0x1892 <__vector_4>
      14:	0c 94 72 0c 	jmp	0x18e4	; 0x18e4 <__vector_5>
      18:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__vector_6>
      1c:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__vector_7>
      20:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      24:	0c 94 2a 0b 	jmp	0x1654	; 0x1654 <__vector_9>
      28:	0c 94 53 0b 	jmp	0x16a6	; 0x16a6 <__vector_10>
      2c:	0c 94 7c 0b 	jmp	0x16f8	; 0x16f8 <__vector_11>
      30:	0c 94 f7 0b 	jmp	0x17ee	; 0x17ee <__vector_12>
      34:	0c 94 a5 0b 	jmp	0x174a	; 0x174a <__vector_13>
      38:	0c 94 ce 0b 	jmp	0x179c	; 0x179c <__vector_14>
      3c:	0c 94 20 0c 	jmp	0x1840	; 0x1840 <__vector_15>
      40:	0c 94 af 0a 	jmp	0x155e	; 0x155e <__vector_16>
      44:	0c 94 d8 0a 	jmp	0x15b0	; 0x15b0 <__vector_17>
      48:	0c 94 01 0b 	jmp	0x1602	; 0x1602 <__vector_18>
      4c:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      50:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      54:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      58:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      5c:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      60:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      64:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      68:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      6c:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      70:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      74:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      78:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__bad_interrupt>
      7c:	45 08       	sbc	r4, r5
      7e:	48 08       	sbc	r4, r8
      80:	4b 08       	sbc	r4, r11
      82:	4e 08       	sbc	r4, r14
      84:	57 08       	sbc	r5, r7
      86:	51 08       	sbc	r5, r1
      88:	54 08       	sbc	r5, r4
      8a:	5a 08       	sbc	r5, r10
      8c:	5d 08       	sbc	r5, r13
      8e:	60 08       	sbc	r6, r0
      90:	63 08       	sbc	r6, r3
      92:	66 08       	sbc	r6, r6
      94:	69 08       	sbc	r6, r9
      96:	6c 08       	sbc	r6, r12
      98:	6f 08       	sbc	r6, r15
      9a:	72 08       	sbc	r7, r2
      9c:	75 08       	sbc	r7, r5
      9e:	78 08       	sbc	r7, r8
      a0:	7b 08       	sbc	r7, r11
      a2:	8c 08       	sbc	r8, r12
      a4:	8f 08       	sbc	r8, r15
      a6:	92 08       	sbc	r9, r2
      a8:	95 08       	sbc	r9, r5
      aa:	9e 08       	sbc	r9, r14
      ac:	98 08       	sbc	r9, r8
      ae:	9b 08       	sbc	r9, r11
      b0:	a1 08       	sbc	r10, r1
      b2:	a4 08       	sbc	r10, r4
      b4:	a7 08       	sbc	r10, r7
      b6:	aa 08       	sbc	r10, r10
      b8:	ad 08       	sbc	r10, r13
      ba:	b0 08       	sbc	r11, r0
      bc:	b3 08       	sbc	r11, r3
      be:	b6 08       	sbc	r11, r6
      c0:	b9 08       	sbc	r11, r9
      c2:	bc 08       	sbc	r11, r12
      c4:	bf 08       	sbc	r11, r15
      c6:	c2 08       	sbc	r12, r2
      c8:	07 63       	ori	r16, 0x37	; 55
      ca:	42 36       	cpi	r20, 0x62	; 98
      cc:	b7 9b       	sbis	0x16, 7	; 22
      ce:	d8 a7       	std	Y+40, r29	; 0x28
      d0:	1a 39       	cpi	r17, 0x9A	; 154
      d2:	68 56       	subi	r22, 0x68	; 104
      d4:	18 ae       	std	Y+56, r1	; 0x38
      d6:	ba ab       	std	Y+50, r27	; 0x32
      d8:	55 8c       	ldd	r5, Z+29	; 0x1d
      da:	1d 3c       	cpi	r17, 0xCD	; 205
      dc:	b7 cc       	rjmp	.-1682   	; 0xfffffa4c <__eeprom_end+0xff7efa4c>
      de:	57 63       	ori	r21, 0x37	; 55
      e0:	bd 6d       	ori	r27, 0xDD	; 221
      e2:	ed fd       	.word	0xfded	; ????
      e4:	75 3e       	cpi	r23, 0xE5	; 229
      e6:	f6 17       	cp	r31, r22
      e8:	72 31       	cpi	r23, 0x12	; 18
      ea:	bf 00       	.word	0x00bf	; ????
      ec:	00 00       	nop
      ee:	80 3f       	cpi	r24, 0xF0	; 240
      f0:	08 00       	.word	0x0008	; ????
      f2:	00 00       	nop
      f4:	be 92       	st	-X, r11
      f6:	24 49       	sbci	r18, 0x94	; 148
      f8:	12 3e       	cpi	r17, 0xE2	; 226
      fa:	ab aa       	std	Y+51, r10	; 0x33
      fc:	aa 2a       	or	r10, r26
      fe:	be cd       	rjmp	.-1156   	; 0xfffffc7c <__eeprom_end+0xff7efc7c>
     100:	cc cc       	rjmp	.-1640   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     102:	4c 3e       	cpi	r20, 0xEC	; 236
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	be ab       	std	Y+54, r27	; 0x36
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	aa 3e       	cpi	r26, 0xEA	; 234
     10e:	00 00       	nop
     110:	00 00       	nop
     112:	bf 00       	.word	0x00bf	; ????
     114:	00 00       	nop
     116:	80 3f       	cpi	r24, 0xF0	; 240
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	00 08       	sbc	r0, r0
     11e:	41 78       	andi	r20, 0x81	; 129
     120:	d3 bb       	out	0x13, r29	; 19
     122:	43 87       	std	Z+11, r20	; 0x0b
     124:	d1 13       	cpse	r29, r17
     126:	3d 19       	sub	r19, r13
     128:	0e 3c       	cpi	r16, 0xCE	; 206
     12a:	c3 bd       	out	0x23, r28	; 35
     12c:	42 82       	std	Z+2, r4	; 0x02
     12e:	ad 2b       	or	r26, r29
     130:	3e 68       	ori	r19, 0x8E	; 142
     132:	ec 82       	std	Y+4, r14	; 0x04
     134:	76 be       	out	0x36, r7	; 54
     136:	d9 8f       	std	Y+25, r29	; 0x19
     138:	e1 a9       	ldd	r30, Z+49	; 0x31
     13a:	3e 4c       	sbci	r19, 0xCE	; 206
     13c:	80 ef       	ldi	r24, 0xF0	; 240
     13e:	ff be       	out	0x3f, r15	; 63
     140:	01 c4       	rjmp	.+2050   	; 0x944 <getRightIR+0xa>
     142:	ff 7f       	andi	r31, 0xFF	; 255
     144:	3f 00       	.word	0x003f	; ????
     146:	00 00       	nop
	...

0000014a <char_bitmap>:
     14a:	16 05 01 00 00 00 00 00 00 00 fa 00 00 00 e0 00     ................
     15a:	e0 00 28 fe 28 fe 28 24 54 fe 54 48 c4 c8 10 26     ..(.(.($T.TH...&
     16a:	46 6c 92 aa 44 a0 00 a0 c0 00 00 00 38 44 82 00     Fl..D.......8D..
     17a:	00 82 44 38 00 28 10 7c 10 28 10 10 7c 10 10 00     ..D8.(.|.(..|...
     18a:	0a 0c 00 00 10 10 10 10 10 00 06 06 00 00 04 08     ................
     19a:	10 20 40 7c 8a 92 a2 7c 00 42 fe 02 00 42 86 8a     . @|...|.B...B..
     1aa:	92 62 84 82 a2 d2 8c 18 28 48 fe 08 e4 a2 a2 a2     .b......(H......
     1ba:	9c 3c 52 92 92 0c 80 8e 90 a0 c0 6c 92 92 92 6c     .<R........l...l
     1ca:	60 92 92 94 78 00 6c 6c 00 00 00 6a 6c 00 00 10     `...x.ll...jl...
     1da:	28 44 82 00 28 28 28 28 28 00 82 44 28 10 40 80     (D..(((((..D(.@.
     1ea:	8a 90 60 4c 92 9e 82 7c 7e 88 88 88 7e fe 92 92     ..`L...|~...~...
     1fa:	92 6c 7c 82 82 82 44 fe 82 82 44 38 fe 92 92 92     .l|...D...D8....
     20a:	82 fe 90 90 90 80 7c 82 92 92 5e fe 10 10 10 fe     ......|...^.....
     21a:	00 82 fe 82 00 04 02 82 fc 80 fe 10 28 44 82 fe     ............(D..
     22a:	02 02 02 02 fe 40 30 40 fe fe 20 10 08 fe 7c 82     .....@0@.. ...|.
     23a:	82 82 7c fe 90 90 90 60 7c 82 8a 84 7a fe 90 98     ..|....`|...z...
     24a:	94 62 62 92 92 92 8c 80 80 fe 80 80 fc 02 02 02     .bb.............
     25a:	fc f8 04 02 04 f8 fc 02 1c 02 fc c6 28 10 28 c6     ............(.(.
     26a:	e0 10 0e 10 e0 86 8a 92 a2 c2 00 fe 82 82 00 40     ...............@
     27a:	20 10 08 04 00 82 82 fe 00 20 40 80 40 20 02 02      ........ @.@ ..
     28a:	02 02 02 00 80 40 20 00 04 2a 2a 2a 1e fe 12 22     .....@ ..***..."
     29a:	22 1c 1c 22 22 22 04 1c 22 22 12 fe 1c 2a 2a 2a     ".."""..""...***
     2aa:	18 10 7e 90 80 40 30 4a 4a 4a 7c fe 10 20 20 1e     ..~..@0JJJ|..  .
     2ba:	00 22 be 02 00 04 02 22 bc 00 fe 08 14 22 00 00     ."....."....."..
     2ca:	82 fe 02 00 3e 20 18 20 1e 3e 10 20 20 1e 1c 22     ....> . .>.  .."
     2da:	22 22 1c 3e 28 28 28 10 10 28 28 18 3e 3e 10 20     "".>(((..((.>>. 
     2ea:	20 10 12 2a 2a 2a 04 20 fc 22 02 04 3c 02 02 04      ..***. ."..<...
     2fa:	3e 38 04 02 04 38 3c 02 0c 02 3c 22 14 08 14 22     >8...8<...<"..."
     30a:	30 0a 0a 0a 3c 22 26 2a 32 22 00 10 6c 82 00 00     0...<"&*2"..l...
     31a:	00 fe 00 00 00 82 6c 10 00 08 10 10 08 10 00 00     ......l.........
     32a:	00 00 00 7f 81 81 81 7f 7f 83 83 83 7f 7f 87 87     ................
     33a:	87 7f 7f 8f 8f 8f 7f 7f 9f 9f 9f 7f 7f bf bf bf     ................
     34a:	7f 7f ff ff ff 7f 20 40 ff 40 20 62 15 17 15 65     ...... @.@ b...e
     35a:	00 fb fb 00 00                                      .....

0000035f <CEENBoT_Inc_logo_bitmap>:
     35f:	00 00 00 00 00 c0 ff 03 00 e0 ff 07 00 f0 ff 0f     ................
     36f:	00 f8 ff 1f 00 78 00 1e 00 78 00 1e 00 78 00 1e     .....x...x...x..
     37f:	00 78 00 1e 00 78 00 1e 00 78 00 1e 00 78 00 1e     .x...x...x...x..
     38f:	00 78 00 1e 00 78 00 1e 00 00 00 00 00 00 00 00     .x...x..........
     39f:	00 80 ff 03 00 e0 ff 07 00 f0 ff 0f 00 f8 ff 1f     ................
     3af:	00 f8 3c 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     ..<..x<..x<..x<.
     3bf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     3cf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     3df:	00 00 00 00 00 e0 ff 03 00 f0 ff 07 00 f8 ff 0f     ................
     3ef:	00 f8 ff 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .....x<..x<..x<.
     3ff:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     40f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     41f:	00 00 00 00 00 f8 ff 03 00 f8 ff 0f 00 f8 ff 1f     ................
     42f:	00 f8 ff 1f 00 00 00 1e 00 00 00 1e 00 00 80 1f     ................
     43f:	00 00 f0 1f 00 00 ff 0f 00 e0 ff 07 00 f0 ff 00     ................
     44f:	00 f8 0f 00 00 f8 00 00 00 78 00 00 00 78 00 00     .........x...x..
     45f:	00 f8 ff 1f 00 f8 ff 1f 00 f0 ff 1f 00 e0 ff 1f     ................
	...
     477:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     487:	00 78 00 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x...x<..x<..x<.
     497:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 f8 7e 1f     .x<..x<..x<...~.
     4a7:	00 f8 ff 1f 00 f0 ff 0f 00 e0 e7 03 00 00 00 00     ................
     4b7:	00 00 00 38 00 ee ff 6c 00 2a 80 45 00 3a 00 47     ...8...l.*.E.:.G
     4c7:	fc 03 ff 6c fc 83 ff 39 00 de ff 0b 7c d0 81 0b     ...l...9....|...
     4d7:	fc d0 81 0b c0 d0 81 0b fc d0 81 0b 7c de ff 0b     ............|...
     4e7:	00 82 ff 39 70 02 ff 6c f8 3a 00 47 dc 2a 80 45     ...9p..l.:.G.*.E
     4f7:	cc ee ff 6c cc 00 00 38 00 00 00 00 0c 00 00 1e     ...l...8........
     507:	0c 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     517:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     527:	00 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     537:	00 00 00 5e 00 00 00 40 00 00 00 7c 00 00 00 40     ...^...@...|...@
     547:	00 00 00 40 00 00 00 7c 00 00 00 30 00 00 00 10     ...@...|...0....
     557:	00 00 00 30 00 00 00 7c 00                          ...0...|.

00000560 <__ctors_end>:
     560:	11 24       	eor	r1, r1
     562:	1f be       	out	0x3f, r1	; 63
     564:	cf ef       	ldi	r28, 0xFF	; 255
     566:	d8 e0       	ldi	r29, 0x08	; 8
     568:	de bf       	out	0x3e, r29	; 62
     56a:	cd bf       	out	0x3d, r28	; 61

0000056c <__do_copy_data>:
     56c:	11 e0       	ldi	r17, 0x01	; 1
     56e:	a0 e0       	ldi	r26, 0x00	; 0
     570:	b1 e0       	ldi	r27, 0x01	; 1
     572:	ea ef       	ldi	r30, 0xFA	; 250
     574:	f3 e3       	ldi	r31, 0x33	; 51
     576:	02 c0       	rjmp	.+4      	; 0x57c <.do_copy_data_start>

00000578 <.do_copy_data_loop>:
     578:	05 90       	lpm	r0, Z+
     57a:	0d 92       	st	X+, r0

0000057c <.do_copy_data_start>:
     57c:	a0 38       	cpi	r26, 0x80	; 128
     57e:	b1 07       	cpc	r27, r17
     580:	d9 f7       	brne	.-10     	; 0x578 <.do_copy_data_loop>

00000582 <__do_clear_bss>:
     582:	12 e0       	ldi	r17, 0x02	; 2
     584:	a0 e8       	ldi	r26, 0x80	; 128
     586:	b1 e0       	ldi	r27, 0x01	; 1
     588:	01 c0       	rjmp	.+2      	; 0x58c <.do_clear_bss_start>

0000058a <.do_clear_bss_loop>:
     58a:	1d 92       	st	X+, r1

0000058c <.do_clear_bss_start>:
     58c:	af 37       	cpi	r26, 0x7F	; 127
     58e:	b1 07       	cpc	r27, r17
     590:	e1 f7       	brne	.-8      	; 0x58a <.do_clear_bss_loop>
     592:	0e 94 14 06 	call	0xc28	; 0xc28 <main>
     596:	0c 94 fb 19 	jmp	0x33f6	; 0x33f6 <_exit>

0000059a <__bad_interrupt>:
     59a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000059e <get_ambient_temp>:
* Output Return:	I2C_STATUS
* Overview:			Reads the ambient temperature
********************************************************************/

I2C_STATUS get_ambient_temp( unsigned char *ambient_temp )
{
     59e:	1f 93       	push	r17
     5a0:	cf 93       	push	r28
     5a2:	df 93       	push	r29
     5a4:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     5a6:	88 e6       	ldi	r24, 0x68	; 104
     5a8:	60 e0       	ldi	r22, 0x00	; 0
     5aa:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     5ae:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     5b0:	88 23       	and	r24, r24
     5b2:	a1 f4       	brne	.+40     	; 0x5dc <get_ambient_temp+0x3e>
	{

		// Send the register value (being 1).  This is
		// the register that contains the ambient temperature.
		i2c_stat = I2C_MSTR_send( __TPA81_AMBIENT );
     5b4:	81 e0       	ldi	r24, 0x01	; 1
     5b6:	0e 94 ed 09 	call	0x13da	; 0x13da <I2C_MSTR_send>
     5ba:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     5bc:	88 23       	and	r24, r24
     5be:	71 f4       	brne	.+28     	; 0x5dc <get_ambient_temp+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     5c0:	88 e6       	ldi	r24, 0x68	; 104
     5c2:	61 e0       	ldi	r22, 0x01	; 1
     5c4:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     5c8:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     5ca:	88 23       	and	r24, r24
     5cc:	39 f4       	brne	.+14     	; 0x5dc <get_ambient_temp+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( ambient_temp, FALSE );
     5ce:	ce 01       	movw	r24, r28
     5d0:	60 e0       	ldi	r22, 0x00	; 0
     5d2:	0e 94 c1 09 	call	0x1382	; 0x1382 <I2C_MSTR_get>
     5d6:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     5d8:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*ambient_temp = 0;
     5da:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     5dc:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_ambient_temp()
     5e0:	81 2f       	mov	r24, r17
     5e2:	df 91       	pop	r29
     5e4:	cf 91       	pop	r28
     5e6:	1f 91       	pop	r17
     5e8:	08 95       	ret

000005ea <read_pixel_8>:
	return i2c_stat;
}

// get pixel eight
I2C_STATUS read_pixel_8( unsigned char *pixel_8)
{
     5ea:	1f 93       	push	r17
     5ec:	cf 93       	push	r28
     5ee:	df 93       	push	r29
     5f0:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     5f2:	88 e6       	ldi	r24, 0x68	; 104
     5f4:	60 e0       	ldi	r22, 0x00	; 0
     5f6:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     5fa:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     5fc:	88 23       	and	r24, r24
     5fe:	a1 f4       	brne	.+40     	; 0x628 <read_pixel_8+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX8 );
     600:	89 e0       	ldi	r24, 0x09	; 9
     602:	0e 94 ed 09 	call	0x13da	; 0x13da <I2C_MSTR_send>
     606:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     608:	88 23       	and	r24, r24
     60a:	71 f4       	brne	.+28     	; 0x628 <read_pixel_8+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     60c:	88 e6       	ldi	r24, 0x68	; 104
     60e:	61 e0       	ldi	r22, 0x01	; 1
     610:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     614:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     616:	88 23       	and	r24, r24
     618:	39 f4       	brne	.+14     	; 0x628 <read_pixel_8+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_8, FALSE );
     61a:	ce 01       	movw	r24, r28
     61c:	60 e0       	ldi	r22, 0x00	; 0
     61e:	0e 94 c1 09 	call	0x1382	; 0x1382 <I2C_MSTR_get>
     622:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     624:	81 11       	cpse	r24, r1
					*pixel_8 = 0;
     626:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     628:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <I2C_MSTR_stop>
	return i2c_stat;
}
     62c:	81 2f       	mov	r24, r17
     62e:	df 91       	pop	r29
     630:	cf 91       	pop	r28
     632:	1f 91       	pop	r17
     634:	08 95       	ret

00000636 <read_pixel_7>:
	return i2c_stat;
}

// get pixel seven
I2C_STATUS read_pixel_7( unsigned char *pixel_7)
{
     636:	1f 93       	push	r17
     638:	cf 93       	push	r28
     63a:	df 93       	push	r29
     63c:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     63e:	88 e6       	ldi	r24, 0x68	; 104
     640:	60 e0       	ldi	r22, 0x00	; 0
     642:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     646:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     648:	88 23       	and	r24, r24
     64a:	a1 f4       	brne	.+40     	; 0x674 <read_pixel_7+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX7 );
     64c:	88 e0       	ldi	r24, 0x08	; 8
     64e:	0e 94 ed 09 	call	0x13da	; 0x13da <I2C_MSTR_send>
     652:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     654:	88 23       	and	r24, r24
     656:	71 f4       	brne	.+28     	; 0x674 <read_pixel_7+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     658:	88 e6       	ldi	r24, 0x68	; 104
     65a:	61 e0       	ldi	r22, 0x01	; 1
     65c:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     660:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     662:	88 23       	and	r24, r24
     664:	39 f4       	brne	.+14     	; 0x674 <read_pixel_7+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_7, FALSE );
     666:	ce 01       	movw	r24, r28
     668:	60 e0       	ldi	r22, 0x00	; 0
     66a:	0e 94 c1 09 	call	0x1382	; 0x1382 <I2C_MSTR_get>
     66e:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     670:	81 11       	cpse	r24, r1
					*pixel_7 = 0;
     672:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     674:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <I2C_MSTR_stop>
	return i2c_stat;
}
     678:	81 2f       	mov	r24, r17
     67a:	df 91       	pop	r29
     67c:	cf 91       	pop	r28
     67e:	1f 91       	pop	r17
     680:	08 95       	ret

00000682 <read_pixel_6>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel six
I2C_STATUS read_pixel_6( unsigned char *pixel_6)
{
     682:	1f 93       	push	r17
     684:	cf 93       	push	r28
     686:	df 93       	push	r29
     688:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     68a:	88 e6       	ldi	r24, 0x68	; 104
     68c:	60 e0       	ldi	r22, 0x00	; 0
     68e:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     692:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     694:	88 23       	and	r24, r24
     696:	a1 f4       	brne	.+40     	; 0x6c0 <read_pixel_6+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX6 );
     698:	87 e0       	ldi	r24, 0x07	; 7
     69a:	0e 94 ed 09 	call	0x13da	; 0x13da <I2C_MSTR_send>
     69e:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     6a0:	88 23       	and	r24, r24
     6a2:	71 f4       	brne	.+28     	; 0x6c0 <read_pixel_6+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     6a4:	88 e6       	ldi	r24, 0x68	; 104
     6a6:	61 e0       	ldi	r22, 0x01	; 1
     6a8:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     6ac:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     6ae:	88 23       	and	r24, r24
     6b0:	39 f4       	brne	.+14     	; 0x6c0 <read_pixel_6+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_6, FALSE );
     6b2:	ce 01       	movw	r24, r28
     6b4:	60 e0       	ldi	r22, 0x00	; 0
     6b6:	0e 94 c1 09 	call	0x1382	; 0x1382 <I2C_MSTR_get>
     6ba:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     6bc:	81 11       	cpse	r24, r1
					*pixel_6 = 0;
     6be:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     6c0:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <I2C_MSTR_stop>
	return i2c_stat;
}
     6c4:	81 2f       	mov	r24, r17
     6c6:	df 91       	pop	r29
     6c8:	cf 91       	pop	r28
     6ca:	1f 91       	pop	r17
     6cc:	08 95       	ret

000006ce <read_pixel_5>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel five
I2C_STATUS read_pixel_5( unsigned char *pixel_5)
{
     6ce:	1f 93       	push	r17
     6d0:	cf 93       	push	r28
     6d2:	df 93       	push	r29
     6d4:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6d6:	88 e6       	ldi	r24, 0x68	; 104
     6d8:	60 e0       	ldi	r22, 0x00	; 0
     6da:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     6de:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     6e0:	88 23       	and	r24, r24
     6e2:	a1 f4       	brne	.+40     	; 0x70c <read_pixel_5+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX5 );
     6e4:	86 e0       	ldi	r24, 0x06	; 6
     6e6:	0e 94 ed 09 	call	0x13da	; 0x13da <I2C_MSTR_send>
     6ea:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     6ec:	88 23       	and	r24, r24
     6ee:	71 f4       	brne	.+28     	; 0x70c <read_pixel_5+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     6f0:	88 e6       	ldi	r24, 0x68	; 104
     6f2:	61 e0       	ldi	r22, 0x01	; 1
     6f4:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     6f8:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     6fa:	88 23       	and	r24, r24
     6fc:	39 f4       	brne	.+14     	; 0x70c <read_pixel_5+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_5, FALSE );
     6fe:	ce 01       	movw	r24, r28
     700:	60 e0       	ldi	r22, 0x00	; 0
     702:	0e 94 c1 09 	call	0x1382	; 0x1382 <I2C_MSTR_get>
     706:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     708:	81 11       	cpse	r24, r1
					*pixel_5 = 0;
     70a:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     70c:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <I2C_MSTR_stop>
	return i2c_stat;
}
     710:	81 2f       	mov	r24, r17
     712:	df 91       	pop	r29
     714:	cf 91       	pop	r28
     716:	1f 91       	pop	r17
     718:	08 95       	ret

0000071a <read_pixel_4>:
	return i2c_stat;
}

// get pixel four
I2C_STATUS read_pixel_4( unsigned char *pixel_4)
{
     71a:	1f 93       	push	r17
     71c:	cf 93       	push	r28
     71e:	df 93       	push	r29
     720:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     722:	88 e6       	ldi	r24, 0x68	; 104
     724:	60 e0       	ldi	r22, 0x00	; 0
     726:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     72a:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     72c:	88 23       	and	r24, r24
     72e:	a1 f4       	brne	.+40     	; 0x758 <read_pixel_4+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX4 );
     730:	85 e0       	ldi	r24, 0x05	; 5
     732:	0e 94 ed 09 	call	0x13da	; 0x13da <I2C_MSTR_send>
     736:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     738:	88 23       	and	r24, r24
     73a:	71 f4       	brne	.+28     	; 0x758 <read_pixel_4+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     73c:	88 e6       	ldi	r24, 0x68	; 104
     73e:	61 e0       	ldi	r22, 0x01	; 1
     740:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     744:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     746:	88 23       	and	r24, r24
     748:	39 f4       	brne	.+14     	; 0x758 <read_pixel_4+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_4, FALSE );
     74a:	ce 01       	movw	r24, r28
     74c:	60 e0       	ldi	r22, 0x00	; 0
     74e:	0e 94 c1 09 	call	0x1382	; 0x1382 <I2C_MSTR_get>
     752:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     754:	81 11       	cpse	r24, r1
					*pixel_4 = 0;
     756:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     758:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <I2C_MSTR_stop>
	return i2c_stat;
}
     75c:	81 2f       	mov	r24, r17
     75e:	df 91       	pop	r29
     760:	cf 91       	pop	r28
     762:	1f 91       	pop	r17
     764:	08 95       	ret

00000766 <read_pixel_3>:
	return i2c_stat;
}

// get pixel three
I2C_STATUS read_pixel_3( unsigned char *pixel_3)
{
     766:	1f 93       	push	r17
     768:	cf 93       	push	r28
     76a:	df 93       	push	r29
     76c:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     76e:	88 e6       	ldi	r24, 0x68	; 104
     770:	60 e0       	ldi	r22, 0x00	; 0
     772:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     776:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     778:	88 23       	and	r24, r24
     77a:	a1 f4       	brne	.+40     	; 0x7a4 <read_pixel_3+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX3 );
     77c:	84 e0       	ldi	r24, 0x04	; 4
     77e:	0e 94 ed 09 	call	0x13da	; 0x13da <I2C_MSTR_send>
     782:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     784:	88 23       	and	r24, r24
     786:	71 f4       	brne	.+28     	; 0x7a4 <read_pixel_3+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     788:	88 e6       	ldi	r24, 0x68	; 104
     78a:	61 e0       	ldi	r22, 0x01	; 1
     78c:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     790:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     792:	88 23       	and	r24, r24
     794:	39 f4       	brne	.+14     	; 0x7a4 <read_pixel_3+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_3, FALSE );
     796:	ce 01       	movw	r24, r28
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	0e 94 c1 09 	call	0x1382	; 0x1382 <I2C_MSTR_get>
     79e:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     7a0:	81 11       	cpse	r24, r1
					*pixel_3 = 0;
     7a2:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     7a4:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <I2C_MSTR_stop>
	return i2c_stat;
}
     7a8:	81 2f       	mov	r24, r17
     7aa:	df 91       	pop	r29
     7ac:	cf 91       	pop	r28
     7ae:	1f 91       	pop	r17
     7b0:	08 95       	ret

000007b2 <read_pixel_2>:
}


// get pixel two
I2C_STATUS read_pixel_2( unsigned char *pixel_2)
{
     7b2:	1f 93       	push	r17
     7b4:	cf 93       	push	r28
     7b6:	df 93       	push	r29
     7b8:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     7ba:	88 e6       	ldi	r24, 0x68	; 104
     7bc:	60 e0       	ldi	r22, 0x00	; 0
     7be:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     7c2:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     7c4:	88 23       	and	r24, r24
     7c6:	a1 f4       	brne	.+40     	; 0x7f0 <read_pixel_2+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX2 );
     7c8:	83 e0       	ldi	r24, 0x03	; 3
     7ca:	0e 94 ed 09 	call	0x13da	; 0x13da <I2C_MSTR_send>
     7ce:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7d0:	88 23       	and	r24, r24
     7d2:	71 f4       	brne	.+28     	; 0x7f0 <read_pixel_2+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7d4:	88 e6       	ldi	r24, 0x68	; 104
     7d6:	61 e0       	ldi	r22, 0x01	; 1
     7d8:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     7dc:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7de:	88 23       	and	r24, r24
     7e0:	39 f4       	brne	.+14     	; 0x7f0 <read_pixel_2+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_2, FALSE );
     7e2:	ce 01       	movw	r24, r28
     7e4:	60 e0       	ldi	r22, 0x00	; 0
     7e6:	0e 94 c1 09 	call	0x1382	; 0x1382 <I2C_MSTR_get>
     7ea:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     7ec:	81 11       	cpse	r24, r1
					*pixel_2 = 0;
     7ee:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     7f0:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <I2C_MSTR_stop>
	return i2c_stat;
}
     7f4:	81 2f       	mov	r24, r17
     7f6:	df 91       	pop	r29
     7f8:	cf 91       	pop	r28
     7fa:	1f 91       	pop	r17
     7fc:	08 95       	ret

000007fe <read_pixel_1>:
* Output Return:	I2C_STATUS
* Overview:			These are several pixel read values for each of the pixels
********************************************************************/
// get pixel one
I2C_STATUS read_pixel_1( unsigned char *pixel_1)
{
     7fe:	1f 93       	push	r17
     800:	cf 93       	push	r28
     802:	df 93       	push	r29
     804:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     806:	88 e6       	ldi	r24, 0x68	; 104
     808:	60 e0       	ldi	r22, 0x00	; 0
     80a:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     80e:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     810:	88 23       	and	r24, r24
     812:	a1 f4       	brne	.+40     	; 0x83c <read_pixel_1+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX1 );
     814:	82 e0       	ldi	r24, 0x02	; 2
     816:	0e 94 ed 09 	call	0x13da	; 0x13da <I2C_MSTR_send>
     81a:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     81c:	88 23       	and	r24, r24
     81e:	71 f4       	brne	.+28     	; 0x83c <read_pixel_1+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     820:	88 e6       	ldi	r24, 0x68	; 104
     822:	61 e0       	ldi	r22, 0x01	; 1
     824:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     828:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     82a:	88 23       	and	r24, r24
     82c:	39 f4       	brne	.+14     	; 0x83c <read_pixel_1+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_1, FALSE );
     82e:	ce 01       	movw	r24, r28
     830:	60 e0       	ldi	r22, 0x00	; 0
     832:	0e 94 c1 09 	call	0x1382	; 0x1382 <I2C_MSTR_get>
     836:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     838:	81 11       	cpse	r24, r1
					*pixel_1 = 0;
     83a:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     83c:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <I2C_MSTR_stop>
	return i2c_stat;
}
     840:	81 2f       	mov	r24, r17
     842:	df 91       	pop	r29
     844:	cf 91       	pop	r28
     846:	1f 91       	pop	r17
     848:	08 95       	ret

0000084a <get_revision>:
* Input Variables:	unsigned char revision
* Output Return:	I2C_STATUS
* Overview:			
********************************************************************/
I2C_STATUS get_revision( unsigned char *revision )
{
     84a:	1f 93       	push	r17
     84c:	cf 93       	push	r28
     84e:	df 93       	push	r29
     850:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     852:	88 e6       	ldi	r24, 0x68	; 104
     854:	60 e0       	ldi	r22, 0x00	; 0
     856:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     85a:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     85c:	88 23       	and	r24, r24
     85e:	a1 f4       	brne	.+40     	; 0x888 <get_revision+0x3e>
	{

		// Send the register value (being 0).  This is
		// the register that contains the software revision.
		i2c_stat = I2C_MSTR_send( __TPA81_REVISION );
     860:	80 e0       	ldi	r24, 0x00	; 0
     862:	0e 94 ed 09 	call	0x13da	; 0x13da <I2C_MSTR_send>
     866:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     868:	88 23       	and	r24, r24
     86a:	71 f4       	brne	.+28     	; 0x888 <get_revision+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     86c:	88 e6       	ldi	r24, 0x68	; 104
     86e:	61 e0       	ldi	r22, 0x01	; 1
     870:	0e 94 13 0a 	call	0x1426	; 0x1426 <I2C_MSTR_start>
     874:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     876:	88 23       	and	r24, r24
     878:	39 f4       	brne	.+14     	; 0x888 <get_revision+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( revision, FALSE );
     87a:	ce 01       	movw	r24, r28
     87c:	60 e0       	ldi	r22, 0x00	; 0
     87e:	0e 94 c1 09 	call	0x1382	; 0x1382 <I2C_MSTR_get>
     882:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     884:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*revision = 0;
     886:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     888:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_revision()
     88c:	81 2f       	mov	r24, r17
     88e:	df 91       	pop	r29
     890:	cf 91       	pop	r28
     892:	1f 91       	pop	r17
     894:	08 95       	ret

00000896 <getBackIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     896:	81 e0       	ldi	r24, 0x01	; 1
     898:	0e 94 09 06 	call	0xc12	; 0xc12 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel(IRBACK_CHAN);
     89c:	85 e0       	ldi	r24, 0x05	; 5
     89e:	0e 94 d2 05 	call	0xba4	; 0xba4 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     8a2:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ADC_sample>
     8a6:	a0 e0       	ldi	r26, 0x00	; 0
     8a8:	b0 e0       	ldi	r27, 0x00	; 0
     8aa:	bc 01       	movw	r22, r24
     8ac:	cd 01       	movw	r24, r26
     8ae:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <__floatunsisf>
     8b2:	20 e0       	ldi	r18, 0x00	; 0
     8b4:	30 e0       	ldi	r19, 0x00	; 0
     8b6:	40 ea       	ldi	r20, 0xA0	; 160
     8b8:	50 e4       	ldi	r21, 0x40	; 64
     8ba:	0e 94 f4 14 	call	0x29e8	; 0x29e8 <__addsf3>
     8be:	9b 01       	movw	r18, r22
     8c0:	ac 01       	movw	r20, r24
     8c2:	60 e0       	ldi	r22, 0x00	; 0
     8c4:	70 e2       	ldi	r23, 0x20	; 32
     8c6:	86 e3       	ldi	r24, 0x36	; 54
     8c8:	95 e4       	ldi	r25, 0x45	; 69
     8ca:	0e 94 5d 15 	call	0x2aba	; 0x2aba <__divsf3>
     8ce:	20 e0       	ldi	r18, 0x00	; 0
     8d0:	30 e0       	ldi	r19, 0x00	; 0
     8d2:	40 e8       	ldi	r20, 0x80	; 128
     8d4:	5f e3       	ldi	r21, 0x3F	; 63
     8d6:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__subsf3>
     8da:	2c e0       	ldi	r18, 0x0C	; 12
     8dc:	33 e9       	ldi	r19, 0x93	; 147
     8de:	49 ec       	ldi	r20, 0xC9	; 201
     8e0:	5e e3       	ldi	r21, 0x3E	; 62
     8e2:	0e 94 8f 16 	call	0x2d1e	; 0x2d1e <__mulsf3>
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	//Convert distance to inches
	dist = distance*0.3937;
	return dist;
}
     8e6:	08 95       	ret

000008e8 <getFrontIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     8e8:	81 e0       	ldi	r24, 0x01	; 1
     8ea:	0e 94 09 06 	call	0xc12	; 0xc12 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel(IRFRONT_CHAN);
     8ee:	87 e0       	ldi	r24, 0x07	; 7
     8f0:	0e 94 d2 05 	call	0xba4	; 0xba4 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     8f4:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ADC_sample>
     8f8:	a0 e0       	ldi	r26, 0x00	; 0
     8fa:	b0 e0       	ldi	r27, 0x00	; 0
     8fc:	bc 01       	movw	r22, r24
     8fe:	cd 01       	movw	r24, r26
     900:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <__floatunsisf>
     904:	20 e0       	ldi	r18, 0x00	; 0
     906:	30 e0       	ldi	r19, 0x00	; 0
     908:	40 ea       	ldi	r20, 0xA0	; 160
     90a:	50 e4       	ldi	r21, 0x40	; 64
     90c:	0e 94 f4 14 	call	0x29e8	; 0x29e8 <__addsf3>
     910:	9b 01       	movw	r18, r22
     912:	ac 01       	movw	r20, r24
     914:	60 e0       	ldi	r22, 0x00	; 0
     916:	70 e2       	ldi	r23, 0x20	; 32
     918:	86 e3       	ldi	r24, 0x36	; 54
     91a:	95 e4       	ldi	r25, 0x45	; 69
     91c:	0e 94 5d 15 	call	0x2aba	; 0x2aba <__divsf3>
     920:	20 e0       	ldi	r18, 0x00	; 0
     922:	30 e0       	ldi	r19, 0x00	; 0
     924:	40 e8       	ldi	r20, 0x80	; 128
     926:	5f e3       	ldi	r21, 0x3F	; 63
     928:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__subsf3>
     92c:	2c e0       	ldi	r18, 0x0C	; 12
     92e:	33 e9       	ldi	r19, 0x93	; 147
     930:	49 ec       	ldi	r20, 0xC9	; 201
     932:	5e e3       	ldi	r21, 0x3E	; 62
     934:	0e 94 8f 16 	call	0x2d1e	; 0x2d1e <__mulsf3>
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	//Convert distance to inches
	dist = distance*0.3937;
	return dist;
}
     938:	08 95       	ret

0000093a <getRightIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     93a:	81 e0       	ldi	r24, 0x01	; 1
     93c:	0e 94 09 06 	call	0xc12	; 0xc12 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
     940:	83 e0       	ldi	r24, 0x03	; 3
     942:	0e 94 d2 05 	call	0xba4	; 0xba4 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     946:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ADC_sample>
     94a:	a0 e0       	ldi	r26, 0x00	; 0
     94c:	b0 e0       	ldi	r27, 0x00	; 0
     94e:	bc 01       	movw	r22, r24
     950:	cd 01       	movw	r24, r26
     952:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <__floatunsisf>
     956:	20 e0       	ldi	r18, 0x00	; 0
     958:	30 e0       	ldi	r19, 0x00	; 0
     95a:	40 ea       	ldi	r20, 0xA0	; 160
     95c:	50 e4       	ldi	r21, 0x40	; 64
     95e:	0e 94 f4 14 	call	0x29e8	; 0x29e8 <__addsf3>
     962:	9b 01       	movw	r18, r22
     964:	ac 01       	movw	r20, r24
     966:	60 e0       	ldi	r22, 0x00	; 0
     968:	70 e2       	ldi	r23, 0x20	; 32
     96a:	86 e3       	ldi	r24, 0x36	; 54
     96c:	95 e4       	ldi	r25, 0x45	; 69
     96e:	0e 94 5d 15 	call	0x2aba	; 0x2aba <__divsf3>
     972:	20 e0       	ldi	r18, 0x00	; 0
     974:	30 e0       	ldi	r19, 0x00	; 0
     976:	40 e8       	ldi	r20, 0x80	; 128
     978:	5f e3       	ldi	r21, 0x3F	; 63
     97a:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__subsf3>
     97e:	2c e0       	ldi	r18, 0x0C	; 12
     980:	33 e9       	ldi	r19, 0x93	; 147
     982:	49 ec       	ldi	r20, 0xC9	; 201
     984:	5e e3       	ldi	r21, 0x3E	; 62
     986:	0e 94 8f 16 	call	0x2d1e	; 0x2d1e <__mulsf3>
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	//Convert distance to inches
	dist = distance*0.3937;
	return dist;
}
     98a:	08 95       	ret

0000098c <getLeftIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
 	ADC_set_VREF( ADC_VREF_AVCC );
     98c:	81 e0       	ldi	r24, 0x01	; 1
     98e:	0e 94 09 06 	call	0xc12	; 0xc12 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
     992:	84 e0       	ldi	r24, 0x04	; 4
     994:	0e 94 d2 05 	call	0xba4	; 0xba4 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     998:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ADC_sample>
     99c:	a0 e0       	ldi	r26, 0x00	; 0
     99e:	b0 e0       	ldi	r27, 0x00	; 0
     9a0:	bc 01       	movw	r22, r24
     9a2:	cd 01       	movw	r24, r26
     9a4:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <__floatunsisf>
     9a8:	20 e0       	ldi	r18, 0x00	; 0
     9aa:	30 e0       	ldi	r19, 0x00	; 0
     9ac:	40 ea       	ldi	r20, 0xA0	; 160
     9ae:	50 e4       	ldi	r21, 0x40	; 64
     9b0:	0e 94 f4 14 	call	0x29e8	; 0x29e8 <__addsf3>
     9b4:	9b 01       	movw	r18, r22
     9b6:	ac 01       	movw	r20, r24
     9b8:	60 e0       	ldi	r22, 0x00	; 0
     9ba:	70 e2       	ldi	r23, 0x20	; 32
     9bc:	86 e3       	ldi	r24, 0x36	; 54
     9be:	95 e4       	ldi	r25, 0x45	; 69
     9c0:	0e 94 5d 15 	call	0x2aba	; 0x2aba <__divsf3>
     9c4:	20 e0       	ldi	r18, 0x00	; 0
     9c6:	30 e0       	ldi	r19, 0x00	; 0
     9c8:	40 e8       	ldi	r20, 0x80	; 128
     9ca:	5f e3       	ldi	r21, 0x3F	; 63
     9cc:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__subsf3>
     9d0:	2c e0       	ldi	r18, 0x0C	; 12
     9d2:	33 e9       	ldi	r19, 0x93	; 147
     9d4:	49 ec       	ldi	r20, 0xC9	; 201
     9d6:	5e e3       	ldi	r21, 0x3E	; 62
     9d8:	0e 94 8f 16 	call	0x2d1e	; 0x2d1e <__mulsf3>
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	//Convert distance to inches
	dist = distance*0.3937;
	return dist;
}
     9dc:	08 95       	ret

000009de <getRightLight>:
********************************************************************/
float getRightLight( void )
{
	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     9de:	81 e0       	ldi	r24, 0x01	; 1
     9e0:	0e 94 09 06 	call	0xc12	; 0xc12 <ADC_set_VREF>
	ADC_set_channel( RIGHT_LIGHT_CHAN );
     9e4:	85 e0       	ldi	r24, 0x05	; 5
     9e6:	0e 94 d2 05 	call	0xba4	; 0xba4 <ADC_set_channel>
	adcsample = ADC_sample();
     9ea:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ADC_sample>
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	bc 01       	movw	r22, r24
     9f4:	cd 01       	movw	r24, r26
     9f6:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <__floatunsisf>
     9fa:	20 e0       	ldi	r18, 0x00	; 0
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	40 ea       	ldi	r20, 0xA0	; 160
     a00:	5b e3       	ldi	r21, 0x3B	; 59
     a02:	0e 94 8f 16 	call	0x2d1e	; 0x2d1e <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * ( 5.0 / 1024 );
	//LCD_printf( "right: %f\n",voltage);
	return voltage;
}
     a06:	08 95       	ret

00000a08 <getLeftLight>:
float getLeftLight( void )
{

	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     a08:	81 e0       	ldi	r24, 0x01	; 1
     a0a:	0e 94 09 06 	call	0xc12	; 0xc12 <ADC_set_VREF>
	ADC_set_channel( LEFT_LIGHT_CHAN );
     a0e:	86 e0       	ldi	r24, 0x06	; 6
     a10:	0e 94 d2 05 	call	0xba4	; 0xba4 <ADC_set_channel>
	adcsample = ADC_sample();
     a14:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ADC_sample>
     a18:	a0 e0       	ldi	r26, 0x00	; 0
     a1a:	b0 e0       	ldi	r27, 0x00	; 0
     a1c:	bc 01       	movw	r22, r24
     a1e:	cd 01       	movw	r24, r26
     a20:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <__floatunsisf>
     a24:	20 e0       	ldi	r18, 0x00	; 0
     a26:	30 e0       	ldi	r19, 0x00	; 0
     a28:	40 ea       	ldi	r20, 0xA0	; 160
     a2a:	5b e3       	ldi	r21, 0x3B	; 59
     a2c:	0e 94 8f 16 	call	0x2d1e	; 0x2d1e <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * (5.0/ 1024.0 );
	//LCD_printf( "voltage: %f\n",voltage);
	return voltage;
}
     a30:	08 95       	ret

00000a32 <WaitButton>:
* Input Variables:	none
* Output Return:	int
* Overview:			Use a comment block like this before functions
********************************************************************/
int WaitButton( void ) 
{
     a32:	ff 92       	push	r15
     a34:	0f 93       	push	r16
     a36:	1f 93       	push	r17
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
    BOOL btnState1, btnState2, btnState3;//local variables - button states
	int rtnValue=0;//return the button value



	if((ATopstat.state=SUBSYS_OPEN))
     a3c:	81 e0       	ldi	r24, 0x01	; 1
     a3e:	80 93 fc 01 	sts	0x01FC, r24
	{
       		// Get switch states.
		btnState1 = ATTINY_get_SW_state( ATTINY_SW3 );
     a42:	80 e0       	ldi	r24, 0x00	; 0
     a44:	0e 94 c5 08 	call	0x118a	; 0x118a <ATTINY_get_SW_state>
     a48:	18 2f       	mov	r17, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
     a4a:	81 e0       	ldi	r24, 0x01	; 1
     a4c:	0e 94 c5 08 	call	0x118a	; 0x118a <ATTINY_get_SW_state>
     a50:	08 2f       	mov	r16, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
     a52:	82 e0       	ldi	r24, 0x02	; 2
     a54:	0e 94 c5 08 	call	0x118a	; 0x118a <ATTINY_get_SW_state>
     a58:	f8 2e       	mov	r15, r24
		//LCD_printf("btnStates: %d %d %d \n", btnState1, btnState2, btnState3);

		if( btnState1 == TRUE ) 
     a5a:	11 30       	cpi	r17, 0x01	; 1
     a5c:	19 f0       	breq	.+6      	; 0xa64 <WaitButton+0x32>
     a5e:	c0 e0       	ldi	r28, 0x00	; 0
     a60:	d0 e0       	ldi	r29, 0x00	; 0
     a62:	17 c0       	rjmp	.+46     	; 0xa92 <WaitButton+0x60>
		{
			LCD_printf( "SW1: Pushed\n");
     a64:	80 e0       	ldi	r24, 0x00	; 0
     a66:	91 e0       	ldi	r25, 0x01	; 1
     a68:	0e 94 c6 19 	call	0x338c	; 0x338c <puts>
			TMRSRVC_delay(1000);//wait 1 s
     a6c:	88 ee       	ldi	r24, 0xE8	; 232
     a6e:	93 e0       	ldi	r25, 0x03	; 3
     a70:	0e 94 62 09 	call	0x12c4	; 0x12c4 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b00100000 );//turn the red LED on
     a74:	80 e2       	ldi	r24, 0x20	; 32
     a76:	0e 94 2c 07 	call	0xe58	; 0xe58 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     a7a:	80 ed       	ldi	r24, 0xD0	; 208
     a7c:	97 e0       	ldi	r25, 0x07	; 7
     a7e:	0e 94 62 09 	call	0x12c4	; 0x12c4 <TMRSRVC_delay>
               		LED_clr_pattern( 0b01000000 );//turn the green LED off
     a82:	80 e4       	ldi	r24, 0x40	; 64
     a84:	0e 94 17 07 	call	0xe2e	; 0xe2e <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     a88:	80 e2       	ldi	r24, 0x20	; 32
     a8a:	0e 94 17 07 	call	0xe2e	; 0xe2e <LED_clr_pattern>
     a8e:	c1 e0       	ldi	r28, 0x01	; 1
     a90:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=1;
			}//end if button 1 state open

		if( btnState2 == TRUE ) 
     a92:	01 30       	cpi	r16, 0x01	; 1
     a94:	b9 f4       	brne	.+46     	; 0xac4 <WaitButton+0x92>
		{
			LCD_printf( "SW2: Pushed\n");
     a96:	8c e0       	ldi	r24, 0x0C	; 12
     a98:	91 e0       	ldi	r25, 0x01	; 1
     a9a:	0e 94 c6 19 	call	0x338c	; 0x338c <puts>
			TMRSRVC_delay(1000);//wait 1 s
     a9e:	88 ee       	ldi	r24, 0xE8	; 232
     aa0:	93 e0       	ldi	r25, 0x03	; 3
     aa2:	0e 94 62 09 	call	0x12c4	; 0x12c4 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     aa6:	80 e4       	ldi	r24, 0x40	; 64
     aa8:	0e 94 2c 07 	call	0xe58	; 0xe58 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     aac:	80 ed       	ldi	r24, 0xD0	; 208
     aae:	97 e0       	ldi	r25, 0x07	; 7
     ab0:	0e 94 62 09 	call	0x12c4	; 0x12c4 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     ab4:	80 e4       	ldi	r24, 0x40	; 64
     ab6:	0e 94 17 07 	call	0xe2e	; 0xe2e <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     aba:	80 e2       	ldi	r24, 0x20	; 32
     abc:	0e 94 17 07 	call	0xe2e	; 0xe2e <LED_clr_pattern>
     ac0:	c2 e0       	ldi	r28, 0x02	; 2
     ac2:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=2;
		}//end if btn 2 open

		if ( btnState3 == TRUE ) 
     ac4:	81 e0       	ldi	r24, 0x01	; 1
     ac6:	f8 16       	cp	r15, r24
     ac8:	d1 f4       	brne	.+52     	; 0xafe <WaitButton+0xcc>
		{
			LCD_printf( "SW3: Pushed\n");
     aca:	88 e1       	ldi	r24, 0x18	; 24
     acc:	91 e0       	ldi	r25, 0x01	; 1
     ace:	0e 94 c6 19 	call	0x338c	; 0x338c <puts>
			TMRSRVC_delay(1000);//wait 1 s
     ad2:	88 ee       	ldi	r24, 0xE8	; 232
     ad4:	93 e0       	ldi	r25, 0x03	; 3
     ad6:	0e 94 62 09 	call	0x12c4	; 0x12c4 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     ada:	80 e4       	ldi	r24, 0x40	; 64
     adc:	0e 94 2c 07 	call	0xe58	; 0xe58 <LED_set_pattern>
                	LED_set_pattern( 0b00100000 );//turn the red LED on
     ae0:	80 e2       	ldi	r24, 0x20	; 32
     ae2:	0e 94 2c 07 	call	0xe58	; 0xe58 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     ae6:	80 ed       	ldi	r24, 0xD0	; 208
     ae8:	97 e0       	ldi	r25, 0x07	; 7
     aea:	0e 94 62 09 	call	0x12c4	; 0x12c4 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     aee:	80 e4       	ldi	r24, 0x40	; 64
     af0:	0e 94 17 07 	call	0xe2e	; 0xe2e <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     af4:	80 e2       	ldi	r24, 0x20	; 32
     af6:	0e 94 17 07 	call	0xe2e	; 0xe2e <LED_clr_pattern>
     afa:	c3 e0       	ldi	r28, 0x03	; 3
     afc:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=3;
		}//end if btn 3 open
            	LCD_clear();
     afe:	0e 94 1d 06 	call	0xc3a	; 0xc3a <LCD_clear>
		return rtnValue;
	}//end AT while

}//end the WaitButton() function
     b02:	ce 01       	movw	r24, r28
     b04:	df 91       	pop	r29
     b06:	cf 91       	pop	r28
     b08:	1f 91       	pop	r17
     b0a:	0f 91       	pop	r16
     b0c:	ff 90       	pop	r15
     b0e:	08 95       	ret

00000b10 <CBOT_main>:
	unsigned char pixel5 = 0;
	unsigned char pixel6 = 0;
	unsigned char pixel7 = 0;
	unsigned char pixel8 = 0;

	ATopstat = ATTINY_open();//open the tiny microcontroller
     b10:	0e 94 13 09 	call	0x1226	; 0x1226 <ATTINY_open>
     b14:	90 93 fc 01 	sts	0x01FC, r25
     b18:	80 93 fb 01 	sts	0x01FB, r24
	LEopstat = LED_open(); //open the LED module
     b1c:	0e 94 23 07 	call	0xe46	; 0xe46 <LED_open>
     b20:	90 93 fa 01 	sts	0x01FA, r25
     b24:	80 93 f9 01 	sts	0x01F9, r24
	LCopstat = LCD_open(); //open the LCD module
     b28:	0e 94 3a 06 	call	0xc74	; 0xc74 <LCD_open>
     b2c:	90 93 f8 01 	sts	0x01F8, r25
     b30:	80 93 f7 01 	sts	0x01F7, r24
	SPKR_open(SPKR_BEEP_MODE);//open the speaker in beep mode
     b34:	81 e0       	ldi	r24, 0x01	; 1
     b36:	0e 94 29 08 	call	0x1052	; 0x1052 <SPKR_open>
	
	LED_open();
     b3a:	0e 94 23 07 	call	0xe46	; 0xe46 <LED_open>
	I2C_open();
     b3e:	0e 94 6d 0a 	call	0x14da	; 0x14da <I2C_open>
	ADC_open();//open the ADC module
     b42:	0e 94 a7 05 	call	0xb4e	; 0xb4e <ADC_open>
 	ADC_set_VREF( ADC_VREF_AVCC );// Set the Voltage Reference first so VREF=5V.
     b46:	81 e0       	ldi	r24, 0x01	; 1
     b48:	0e 94 09 06 	call	0xc12	; 0xc12 <ADC_set_VREF>
     b4c:	ff cf       	rjmp	.-2      	; 0xb4c <CBOT_main+0x3c>

00000b4e <ADC_open>:
     b4e:	8f e0       	ldi	r24, 0x0F	; 15
     b50:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
     b54:	88 23       	and	r24, r24
     b56:	31 f4       	brne	.+12     	; 0xb64 <ADC_open+0x16>
     b58:	0e 94 94 0a 	call	0x1528	; 0x1528 <__ADC_init>
     b5c:	8f e0       	ldi	r24, 0x0F	; 15
     b5e:	61 e0       	ldi	r22, 0x01	; 1
     b60:	0e 94 7e 08 	call	0x10fc	; 0x10fc <SYS_set_state>
     b64:	8f e0       	ldi	r24, 0x0F	; 15
     b66:	91 e0       	ldi	r25, 0x01	; 1
     b68:	08 95       	ret

00000b6a <ADC_sample>:
     b6a:	8f e0       	ldi	r24, 0x0F	; 15
     b6c:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
     b70:	81 30       	cpi	r24, 0x01	; 1
     b72:	19 f0       	breq	.+6      	; 0xb7a <ADC_sample+0x10>
     b74:	20 e0       	ldi	r18, 0x00	; 0
     b76:	30 e0       	ldi	r19, 0x00	; 0
     b78:	13 c0       	rjmp	.+38     	; 0xba0 <ADC_sample+0x36>
     b7a:	80 91 7a 00 	lds	r24, 0x007A
     b7e:	80 64       	ori	r24, 0x40	; 64
     b80:	80 93 7a 00 	sts	0x007A, r24
     b84:	80 91 7a 00 	lds	r24, 0x007A
     b88:	86 fd       	sbrc	r24, 6
     b8a:	fc cf       	rjmp	.-8      	; 0xb84 <ADC_sample+0x1a>
     b8c:	30 91 78 00 	lds	r19, 0x0078
     b90:	20 91 79 00 	lds	r18, 0x0079
     b94:	92 2f       	mov	r25, r18
     b96:	80 e0       	ldi	r24, 0x00	; 0
     b98:	23 2f       	mov	r18, r19
     b9a:	30 e0       	ldi	r19, 0x00	; 0
     b9c:	28 2b       	or	r18, r24
     b9e:	39 2b       	or	r19, r25
     ba0:	c9 01       	movw	r24, r18
     ba2:	08 95       	ret

00000ba4 <ADC_set_channel>:
     ba4:	58 2f       	mov	r21, r24
     ba6:	80 91 24 01 	lds	r24, 0x0124
     baa:	88 30       	cpi	r24, 0x08	; 8
     bac:	d8 f4       	brcc	.+54     	; 0xbe4 <ADC_set_channel+0x40>
     bae:	40 91 7e 00 	lds	r20, 0x007E
     bb2:	21 e0       	ldi	r18, 0x01	; 1
     bb4:	30 e0       	ldi	r19, 0x00	; 0
     bb6:	b9 01       	movw	r22, r18
     bb8:	02 c0       	rjmp	.+4      	; 0xbbe <ADC_set_channel+0x1a>
     bba:	66 0f       	add	r22, r22
     bbc:	77 1f       	adc	r23, r23
     bbe:	8a 95       	dec	r24
     bc0:	e2 f7       	brpl	.-8      	; 0xbba <ADC_set_channel+0x16>
     bc2:	cb 01       	movw	r24, r22
     bc4:	80 95       	com	r24
     bc6:	84 23       	and	r24, r20
     bc8:	80 93 7e 00 	sts	0x007E, r24
     bcc:	80 91 7e 00 	lds	r24, 0x007E
     bd0:	05 2e       	mov	r0, r21
     bd2:	02 c0       	rjmp	.+4      	; 0xbd8 <ADC_set_channel+0x34>
     bd4:	22 0f       	add	r18, r18
     bd6:	33 1f       	adc	r19, r19
     bd8:	0a 94       	dec	r0
     bda:	e2 f7       	brpl	.-8      	; 0xbd4 <ADC_set_channel+0x30>
     bdc:	82 2b       	or	r24, r18
     bde:	80 93 7e 00 	sts	0x007E, r24
     be2:	0d c0       	rjmp	.+26     	; 0xbfe <ADC_set_channel+0x5a>
     be4:	20 91 7e 00 	lds	r18, 0x007E
     be8:	81 e0       	ldi	r24, 0x01	; 1
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	05 2e       	mov	r0, r21
     bee:	02 c0       	rjmp	.+4      	; 0xbf4 <ADC_set_channel+0x50>
     bf0:	88 0f       	add	r24, r24
     bf2:	99 1f       	adc	r25, r25
     bf4:	0a 94       	dec	r0
     bf6:	e2 f7       	brpl	.-8      	; 0xbf0 <ADC_set_channel+0x4c>
     bf8:	28 2b       	or	r18, r24
     bfa:	20 93 7e 00 	sts	0x007E, r18
     bfe:	50 93 24 01 	sts	0x0124, r21
     c02:	80 91 7c 00 	lds	r24, 0x007C
     c06:	5f 71       	andi	r21, 0x1F	; 31
     c08:	80 7e       	andi	r24, 0xE0	; 224
     c0a:	85 2b       	or	r24, r21
     c0c:	80 93 7c 00 	sts	0x007C, r24
     c10:	08 95       	ret

00000c12 <ADC_set_VREF>:
     c12:	ec e7       	ldi	r30, 0x7C	; 124
     c14:	f0 e0       	ldi	r31, 0x00	; 0
     c16:	90 81       	ld	r25, Z
     c18:	82 95       	swap	r24
     c1a:	88 0f       	add	r24, r24
     c1c:	88 0f       	add	r24, r24
     c1e:	80 7c       	andi	r24, 0xC0	; 192
     c20:	9f 73       	andi	r25, 0x3F	; 63
     c22:	98 2b       	or	r25, r24
     c24:	90 83       	st	Z, r25
     c26:	08 95       	ret

00000c28 <main>:
     c28:	0e 94 ad 0a 	call	0x155a	; 0x155a <CBOT_ISR_init>
     c2c:	0e 94 9f 0a 	call	0x153e	; 0x153e <CBOT_init>
     c30:	0e 94 88 05 	call	0xb10	; 0xb10 <CBOT_main>
     c34:	80 e0       	ldi	r24, 0x00	; 0
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	08 95       	ret

00000c3a <LCD_clear>:
     c3a:	0f 93       	push	r16
     c3c:	1f 93       	push	r17
     c3e:	80 e4       	ldi	r24, 0x40	; 64
     c40:	60 e0       	ldi	r22, 0x00	; 0
     c42:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     c46:	00 e0       	ldi	r16, 0x00	; 0
     c48:	80 2f       	mov	r24, r16
     c4a:	60 e0       	ldi	r22, 0x00	; 0
     c4c:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <LCD_set_PGC_addr>
     c50:	10 e0       	ldi	r17, 0x00	; 0
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	61 e0       	ldi	r22, 0x01	; 1
     c56:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     c5a:	1f 5f       	subi	r17, 0xFF	; 255
     c5c:	10 38       	cpi	r17, 0x80	; 128
     c5e:	c9 f7       	brne	.-14     	; 0xc52 <LCD_clear+0x18>
     c60:	0f 5f       	subi	r16, 0xFF	; 255
     c62:	04 30       	cpi	r16, 0x04	; 4
     c64:	89 f7       	brne	.-30     	; 0xc48 <LCD_clear+0xe>
     c66:	83 e0       	ldi	r24, 0x03	; 3
     c68:	60 e0       	ldi	r22, 0x00	; 0
     c6a:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <LCD_set_next_PGC>
     c6e:	1f 91       	pop	r17
     c70:	0f 91       	pop	r16
     c72:	08 95       	ret

00000c74 <LCD_open>:
     c74:	0f 93       	push	r16
     c76:	1f 93       	push	r17
     c78:	82 e0       	ldi	r24, 0x02	; 2
     c7a:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
     c7e:	88 23       	and	r24, r24
     c80:	11 f4       	brne	.+4      	; 0xc86 <LCD_open+0x12>
     c82:	82 e0       	ldi	r24, 0x02	; 2
     c84:	06 c0       	rjmp	.+12     	; 0xc92 <LCD_open+0x1e>
     c86:	81 e0       	ldi	r24, 0x01	; 1
     c88:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
     c8c:	88 23       	and	r24, r24
     c8e:	19 f4       	brne	.+6      	; 0xc96 <LCD_open+0x22>
     c90:	81 e0       	ldi	r24, 0x01	; 1
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	6d c0       	rjmp	.+218    	; 0xd70 <LCD_open+0xfc>
     c96:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <__LCD_init>
     c9a:	85 e0       	ldi	r24, 0x05	; 5
     c9c:	61 e0       	ldi	r22, 0x01	; 1
     c9e:	0e 94 7e 08 	call	0x10fc	; 0x10fc <SYS_set_state>
     ca2:	8e ea       	ldi	r24, 0xAE	; 174
     ca4:	60 e0       	ldi	r22, 0x00	; 0
     ca6:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     caa:	82 ea       	ldi	r24, 0xA2	; 162
     cac:	60 e0       	ldi	r22, 0x00	; 0
     cae:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     cb2:	80 ea       	ldi	r24, 0xA0	; 160
     cb4:	60 e0       	ldi	r22, 0x00	; 0
     cb6:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     cba:	00 e5       	ldi	r16, 0x50	; 80
     cbc:	13 ec       	ldi	r17, 0xC3	; 195
     cbe:	c8 01       	movw	r24, r16
     cc0:	01 97       	sbiw	r24, 0x01	; 1
     cc2:	f1 f7       	brne	.-4      	; 0xcc0 <LCD_open+0x4c>
     cc4:	80 ec       	ldi	r24, 0xC0	; 192
     cc6:	60 e0       	ldi	r22, 0x00	; 0
     cc8:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     ccc:	8f e2       	ldi	r24, 0x2F	; 47
     cce:	60 e0       	ldi	r22, 0x00	; 0
     cd0:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     cd4:	81 e8       	ldi	r24, 0x81	; 129
     cd6:	60 e0       	ldi	r22, 0x00	; 0
     cd8:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     cdc:	86 e1       	ldi	r24, 0x16	; 22
     cde:	60 e0       	ldi	r22, 0x00	; 0
     ce0:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     ce4:	82 e2       	ldi	r24, 0x22	; 34
     ce6:	60 e0       	ldi	r22, 0x00	; 0
     ce8:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     cec:	c8 01       	movw	r24, r16
     cee:	01 97       	sbiw	r24, 0x01	; 1
     cf0:	f1 f7       	brne	.-4      	; 0xcee <LCD_open+0x7a>
     cf2:	8f ea       	ldi	r24, 0xAF	; 175
     cf4:	60 e0       	ldi	r22, 0x00	; 0
     cf6:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     cfa:	86 ea       	ldi	r24, 0xA6	; 166
     cfc:	60 e0       	ldi	r22, 0x00	; 0
     cfe:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     d02:	85 ea       	ldi	r24, 0xA5	; 165
     d04:	60 e0       	ldi	r22, 0x00	; 0
     d06:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     d0a:	80 e0       	ldi	r24, 0x00	; 0
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	28 e8       	ldi	r18, 0x88	; 136
     d10:	33 e1       	ldi	r19, 0x13	; 19
     d12:	f9 01       	movw	r30, r18
     d14:	31 97       	sbiw	r30, 0x01	; 1
     d16:	f1 f7       	brne	.-4      	; 0xd14 <LCD_open+0xa0>
     d18:	01 96       	adiw	r24, 0x01	; 1
     d1a:	43 e0       	ldi	r20, 0x03	; 3
     d1c:	88 3e       	cpi	r24, 0xE8	; 232
     d1e:	94 07       	cpc	r25, r20
     d20:	c1 f7       	brne	.-16     	; 0xd12 <LCD_open+0x9e>
     d22:	83 eb       	ldi	r24, 0xB3	; 179
     d24:	60 e0       	ldi	r22, 0x00	; 0
     d26:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     d2a:	80 e4       	ldi	r24, 0x40	; 64
     d2c:	60 e0       	ldi	r22, 0x00	; 0
     d2e:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     d32:	83 e0       	ldi	r24, 0x03	; 3
     d34:	60 e0       	ldi	r22, 0x00	; 0
     d36:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <LCD_set_PGC_addr>
     d3a:	83 e0       	ldi	r24, 0x03	; 3
     d3c:	60 e0       	ldi	r22, 0x00	; 0
     d3e:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <LCD_set_next_PGC>
     d42:	10 92 12 02 	sts	0x0212, r1
     d46:	10 92 14 02 	sts	0x0214, r1
     d4a:	10 92 13 02 	sts	0x0213, r1
     d4e:	8b e2       	ldi	r24, 0x2B	; 43
     d50:	91 e0       	ldi	r25, 0x01	; 1
     d52:	90 93 7c 02 	sts	0x027C, r25
     d56:	80 93 7b 02 	sts	0x027B, r24
     d5a:	88 e1       	ldi	r24, 0x18	; 24
     d5c:	0e 94 bb 06 	call	0xd76	; 0xd76 <LCD_set_backlight>
     d60:	0e 94 1d 06 	call	0xc3a	; 0xc3a <LCD_clear>
     d64:	84 ea       	ldi	r24, 0xA4	; 164
     d66:	60 e0       	ldi	r22, 0x00	; 0
     d68:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     d6c:	85 e0       	ldi	r24, 0x05	; 5
     d6e:	91 e0       	ldi	r25, 0x01	; 1
     d70:	1f 91       	pop	r17
     d72:	0f 91       	pop	r16
     d74:	08 95       	ret

00000d76 <LCD_set_backlight>:
     d76:	1f 93       	push	r17
     d78:	18 2f       	mov	r17, r24
     d7a:	85 e0       	ldi	r24, 0x05	; 5
     d7c:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
     d80:	81 30       	cpi	r24, 0x01	; 1
     d82:	c1 f4       	brne	.+48     	; 0xdb4 <LCD_set_backlight+0x3e>
     d84:	87 e0       	ldi	r24, 0x07	; 7
     d86:	0e 94 38 07 	call	0xe70	; 0xe70 <SPI_set_slave_addr>
     d8a:	82 e0       	ldi	r24, 0x02	; 2
     d8c:	6a e0       	ldi	r22, 0x0A	; 10
     d8e:	0e 94 89 07 	call	0xf12	; 0xf12 <SPI_transmit>
     d92:	82 e0       	ldi	r24, 0x02	; 2
     d94:	61 eb       	ldi	r22, 0xB1	; 177
     d96:	0e 94 89 07 	call	0xf12	; 0xf12 <SPI_transmit>
     d9a:	61 2f       	mov	r22, r17
     d9c:	11 32       	cpi	r17, 0x21	; 33
     d9e:	08 f0       	brcs	.+2      	; 0xda2 <LCD_set_backlight+0x2c>
     da0:	60 e2       	ldi	r22, 0x20	; 32
     da2:	82 e0       	ldi	r24, 0x02	; 2
     da4:	0e 94 89 07 	call	0xf12	; 0xf12 <SPI_transmit>
     da8:	89 ee       	ldi	r24, 0xE9	; 233
     daa:	8a 95       	dec	r24
     dac:	f1 f7       	brne	.-4      	; 0xdaa <LCD_set_backlight+0x34>
     dae:	87 e0       	ldi	r24, 0x07	; 7
     db0:	0e 94 38 07 	call	0xe70	; 0xe70 <SPI_set_slave_addr>
     db4:	1f 91       	pop	r17
     db6:	08 95       	ret

00000db8 <LCD_set_next_PGC>:
     db8:	83 70       	andi	r24, 0x03	; 3
     dba:	6f 77       	andi	r22, 0x7F	; 127
     dbc:	60 93 10 02 	sts	0x0210, r22
     dc0:	80 93 11 02 	sts	0x0211, r24
     dc4:	08 95       	ret

00000dc6 <LCD_set_PGC_addr>:
     dc6:	0f 93       	push	r16
     dc8:	1f 93       	push	r17
     dca:	06 2f       	mov	r16, r22
     dcc:	16 2f       	mov	r17, r22
     dce:	1f 77       	andi	r17, 0x7F	; 127
     dd0:	83 70       	andi	r24, 0x03	; 3
     dd2:	80 6b       	ori	r24, 0xB0	; 176
     dd4:	60 e0       	ldi	r22, 0x00	; 0
     dd6:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     dda:	12 95       	swap	r17
     ddc:	1f 70       	andi	r17, 0x0F	; 15
     dde:	81 2f       	mov	r24, r17
     de0:	80 61       	ori	r24, 0x10	; 16
     de2:	60 e0       	ldi	r22, 0x00	; 0
     de4:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     de8:	80 2f       	mov	r24, r16
     dea:	8f 70       	andi	r24, 0x0F	; 15
     dec:	60 e0       	ldi	r22, 0x00	; 0
     dee:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
     df2:	1f 91       	pop	r17
     df4:	0f 91       	pop	r16
     df6:	08 95       	ret

00000df8 <LCD_write>:
     df8:	0f 93       	push	r16
     dfa:	1f 93       	push	r17
     dfc:	08 2f       	mov	r16, r24
     dfe:	16 2f       	mov	r17, r22
     e00:	85 e0       	ldi	r24, 0x05	; 5
     e02:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
     e06:	81 30       	cpi	r24, 0x01	; 1
     e08:	79 f4       	brne	.+30     	; 0xe28 <LCD_write+0x30>
     e0a:	11 23       	and	r17, r17
     e0c:	19 f0       	breq	.+6      	; 0xe14 <LCD_write+0x1c>
     e0e:	11 30       	cpi	r17, 0x01	; 1
     e10:	21 f4       	brne	.+8      	; 0xe1a <LCD_write+0x22>
     e12:	02 c0       	rjmp	.+4      	; 0xe18 <LCD_write+0x20>
     e14:	2b 98       	cbi	0x05, 3	; 5
     e16:	01 c0       	rjmp	.+2      	; 0xe1a <LCD_write+0x22>
     e18:	2b 9a       	sbi	0x05, 3	; 5
     e1a:	86 e0       	ldi	r24, 0x06	; 6
     e1c:	8a 95       	dec	r24
     e1e:	f1 f7       	brne	.-4      	; 0xe1c <LCD_write+0x24>
     e20:	80 e0       	ldi	r24, 0x00	; 0
     e22:	60 2f       	mov	r22, r16
     e24:	0e 94 89 07 	call	0xf12	; 0xf12 <SPI_transmit>
     e28:	1f 91       	pop	r17
     e2a:	0f 91       	pop	r16
     e2c:	08 95       	ret

00000e2e <LED_clr_pattern>:
     e2e:	1f 93       	push	r17
     e30:	18 2f       	mov	r17, r24
     e32:	86 e0       	ldi	r24, 0x06	; 6
     e34:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
     e38:	81 30       	cpi	r24, 0x01	; 1
     e3a:	19 f4       	brne	.+6      	; 0xe42 <LED_clr_pattern+0x14>
     e3c:	81 2f       	mov	r24, r17
     e3e:	0e 94 c4 0d 	call	0x1b88	; 0x1b88 <__LED_clr_pattern>
     e42:	1f 91       	pop	r17
     e44:	08 95       	ret

00000e46 <LED_open>:
     e46:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <__LED_init>
     e4a:	86 e0       	ldi	r24, 0x06	; 6
     e4c:	61 e0       	ldi	r22, 0x01	; 1
     e4e:	0e 94 7e 08 	call	0x10fc	; 0x10fc <SYS_set_state>
     e52:	86 e0       	ldi	r24, 0x06	; 6
     e54:	91 e0       	ldi	r25, 0x01	; 1
     e56:	08 95       	ret

00000e58 <LED_set_pattern>:
     e58:	1f 93       	push	r17
     e5a:	18 2f       	mov	r17, r24
     e5c:	86 e0       	ldi	r24, 0x06	; 6
     e5e:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
     e62:	81 30       	cpi	r24, 0x01	; 1
     e64:	19 f4       	brne	.+6      	; 0xe6c <LED_set_pattern+0x14>
     e66:	81 2f       	mov	r24, r17
     e68:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <__LED_set_pattern>
     e6c:	1f 91       	pop	r17
     e6e:	08 95       	ret

00000e70 <SPI_set_slave_addr>:
     e70:	1f 93       	push	r17
     e72:	18 2f       	mov	r17, r24
     e74:	82 e0       	ldi	r24, 0x02	; 2
     e76:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
     e7a:	81 30       	cpi	r24, 0x01	; 1
     e7c:	09 f0       	breq	.+2      	; 0xe80 <SPI_set_slave_addr+0x10>
     e7e:	47 c0       	rjmp	.+142    	; 0xf0e <SPI_set_slave_addr+0x9e>
     e80:	91 2f       	mov	r25, r17
     e82:	97 70       	andi	r25, 0x07	; 7
     e84:	80 91 15 02 	lds	r24, 0x0215
     e88:	98 17       	cp	r25, r24
     e8a:	09 f4       	brne	.+2      	; 0xe8e <SPI_set_slave_addr+0x1e>
     e8c:	40 c0       	rjmp	.+128    	; 0xf0e <SPI_set_slave_addr+0x9e>
     e8e:	90 93 15 02 	sts	0x0215, r25
     e92:	85 b1       	in	r24, 0x05	; 5
     e94:	88 7f       	andi	r24, 0xF8	; 248
     e96:	89 2b       	or	r24, r25
     e98:	85 b9       	out	0x05, r24	; 5
     e9a:	93 30       	cpi	r25, 0x03	; 3
     e9c:	11 f1       	breq	.+68     	; 0xee2 <SPI_set_slave_addr+0x72>
     e9e:	94 30       	cpi	r25, 0x04	; 4
     ea0:	28 f4       	brcc	.+10     	; 0xeac <SPI_set_slave_addr+0x3c>
     ea2:	91 30       	cpi	r25, 0x01	; 1
     ea4:	51 f0       	breq	.+20     	; 0xeba <SPI_set_slave_addr+0x4a>
     ea6:	92 30       	cpi	r25, 0x02	; 2
     ea8:	90 f4       	brcc	.+36     	; 0xece <SPI_set_slave_addr+0x5e>
     eaa:	0c c0       	rjmp	.+24     	; 0xec4 <SPI_set_slave_addr+0x54>
     eac:	95 30       	cpi	r25, 0x05	; 5
     eae:	19 f1       	breq	.+70     	; 0xef6 <SPI_set_slave_addr+0x86>
     eb0:	95 30       	cpi	r25, 0x05	; 5
     eb2:	e0 f0       	brcs	.+56     	; 0xeec <SPI_set_slave_addr+0x7c>
     eb4:	96 30       	cpi	r25, 0x06	; 6
     eb6:	21 f5       	brne	.+72     	; 0xf00 <SPI_set_slave_addr+0x90>
     eb8:	0f c0       	rjmp	.+30     	; 0xed8 <SPI_set_slave_addr+0x68>
     eba:	e0 91 d2 01 	lds	r30, 0x01D2
     ebe:	f0 91 d3 01 	lds	r31, 0x01D3
     ec2:	22 c0       	rjmp	.+68     	; 0xf08 <SPI_set_slave_addr+0x98>
     ec4:	e0 91 d0 01 	lds	r30, 0x01D0
     ec8:	f0 91 d1 01 	lds	r31, 0x01D1
     ecc:	1d c0       	rjmp	.+58     	; 0xf08 <SPI_set_slave_addr+0x98>
     ece:	e0 91 d4 01 	lds	r30, 0x01D4
     ed2:	f0 91 d5 01 	lds	r31, 0x01D5
     ed6:	18 c0       	rjmp	.+48     	; 0xf08 <SPI_set_slave_addr+0x98>
     ed8:	e0 91 dc 01 	lds	r30, 0x01DC
     edc:	f0 91 dd 01 	lds	r31, 0x01DD
     ee0:	13 c0       	rjmp	.+38     	; 0xf08 <SPI_set_slave_addr+0x98>
     ee2:	e0 91 d6 01 	lds	r30, 0x01D6
     ee6:	f0 91 d7 01 	lds	r31, 0x01D7
     eea:	0e c0       	rjmp	.+28     	; 0xf08 <SPI_set_slave_addr+0x98>
     eec:	e0 91 d8 01 	lds	r30, 0x01D8
     ef0:	f0 91 d9 01 	lds	r31, 0x01D9
     ef4:	09 c0       	rjmp	.+18     	; 0xf08 <SPI_set_slave_addr+0x98>
     ef6:	e0 91 da 01 	lds	r30, 0x01DA
     efa:	f0 91 db 01 	lds	r31, 0x01DB
     efe:	04 c0       	rjmp	.+8      	; 0xf08 <SPI_set_slave_addr+0x98>
     f00:	e0 91 de 01 	lds	r30, 0x01DE
     f04:	f0 91 df 01 	lds	r31, 0x01DF
     f08:	30 97       	sbiw	r30, 0x00	; 0
     f0a:	09 f0       	breq	.+2      	; 0xf0e <SPI_set_slave_addr+0x9e>
     f0c:	09 95       	icall
     f0e:	1f 91       	pop	r17
     f10:	08 95       	ret

00000f12 <SPI_transmit>:
     f12:	1f 93       	push	r17
     f14:	16 2f       	mov	r17, r22
     f16:	0e 94 38 07 	call	0xe70	; 0xe70 <SPI_set_slave_addr>
     f1a:	82 e0       	ldi	r24, 0x02	; 2
     f1c:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
     f20:	81 30       	cpi	r24, 0x01	; 1
     f22:	21 f4       	brne	.+8      	; 0xf2c <SPI_transmit+0x1a>
     f24:	1e bd       	out	0x2e, r17	; 46
     f26:	0d b4       	in	r0, 0x2d	; 45
     f28:	07 fe       	sbrs	r0, 7
     f2a:	fd cf       	rjmp	.-6      	; 0xf26 <SPI_transmit+0x14>
     f2c:	1f 91       	pop	r17
     f2e:	08 95       	ret

00000f30 <__SPKR_set_up_freq_LUT>:
     f30:	0f 93       	push	r16
     f32:	1f 93       	push	r17
     f34:	cf 93       	push	r28
     f36:	df 93       	push	r29
     f38:	80 e2       	ldi	r24, 0x20	; 32
     f3a:	91 e0       	ldi	r25, 0x01	; 1
     f3c:	0e 94 c1 18 	call	0x3182	; 0x3182 <malloc>
     f40:	9c 01       	movw	r18, r24
     f42:	90 93 ef 01 	sts	0x01EF, r25
     f46:	80 93 ee 01 	sts	0x01EE, r24
     f4a:	89 2b       	or	r24, r25
     f4c:	11 f4       	brne	.+4      	; 0xf52 <__SPKR_set_up_freq_LUT+0x22>
     f4e:	80 e0       	ldi	r24, 0x00	; 0
     f50:	39 c0       	rjmp	.+114    	; 0xfc4 <__SPKR_set_up_freq_LUT+0x94>
     f52:	89 01       	movw	r16, r18
     f54:	c0 e0       	ldi	r28, 0x00	; 0
     f56:	d0 e0       	ldi	r29, 0x00	; 0
     f58:	be 01       	movw	r22, r28
     f5a:	80 e0       	ldi	r24, 0x00	; 0
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <__floatunsisf>
     f62:	20 e0       	ldi	r18, 0x00	; 0
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	40 ea       	ldi	r20, 0xA0	; 160
     f68:	51 e4       	ldi	r21, 0x41	; 65
     f6a:	0e 94 5d 15 	call	0x2aba	; 0x2aba <__divsf3>
     f6e:	27 ef       	ldi	r18, 0xF7	; 247
     f70:	35 e7       	ldi	r19, 0x75	; 117
     f72:	40 e0       	ldi	r20, 0x00	; 0
     f74:	5f e3       	ldi	r21, 0x3F	; 63
     f76:	0e 94 8f 16 	call	0x2d1e	; 0x2d1e <__mulsf3>
     f7a:	9b 01       	movw	r18, r22
     f7c:	ac 01       	movw	r20, r24
     f7e:	60 e0       	ldi	r22, 0x00	; 0
     f80:	70 e0       	ldi	r23, 0x00	; 0
     f82:	80 e2       	ldi	r24, 0x20	; 32
     f84:	91 e4       	ldi	r25, 0x41	; 65
     f86:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <pow>
     f8a:	9b 01       	movw	r18, r22
     f8c:	ac 01       	movw	r20, r24
     f8e:	ca 01       	movw	r24, r20
     f90:	b9 01       	movw	r22, r18
     f92:	2d ec       	ldi	r18, 0xCD	; 205
     f94:	3c ec       	ldi	r19, 0xCC	; 204
     f96:	42 e8       	ldi	r20, 0x82	; 130
     f98:	51 e4       	ldi	r21, 0x41	; 65
     f9a:	0e 94 8f 16 	call	0x2d1e	; 0x2d1e <__mulsf3>
     f9e:	0e 94 55 16 	call	0x2caa	; 0x2caa <lrint>
     fa2:	2a e0       	ldi	r18, 0x0A	; 10
     fa4:	30 e0       	ldi	r19, 0x00	; 0
     fa6:	40 e0       	ldi	r20, 0x00	; 0
     fa8:	50 e0       	ldi	r21, 0x00	; 0
     faa:	0e 94 80 18 	call	0x3100	; 0x3100 <__mulsi3>
     fae:	f8 01       	movw	r30, r16
     fb0:	61 93       	st	Z+, r22
     fb2:	71 93       	st	Z+, r23
     fb4:	81 93       	st	Z+, r24
     fb6:	91 93       	st	Z+, r25
     fb8:	8f 01       	movw	r16, r30
     fba:	21 96       	adiw	r28, 0x01	; 1
     fbc:	c8 34       	cpi	r28, 0x48	; 72
     fbe:	d1 05       	cpc	r29, r1
     fc0:	59 f6       	brne	.-106    	; 0xf58 <__SPKR_set_up_freq_LUT+0x28>
     fc2:	81 e0       	ldi	r24, 0x01	; 1
     fc4:	df 91       	pop	r29
     fc6:	cf 91       	pop	r28
     fc8:	1f 91       	pop	r17
     fca:	0f 91       	pop	r16
     fcc:	08 95       	ret

00000fce <__SPKR_open_beep_mode>:
     fce:	8a e0       	ldi	r24, 0x0A	; 10
     fd0:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
     fd4:	88 23       	and	r24, r24
     fd6:	71 f4       	brne	.+28     	; 0xff4 <__SPKR_open_beep_mode+0x26>
     fd8:	10 92 eb 01 	sts	0x01EB, r1
     fdc:	10 92 ea 01 	sts	0x01EA, r1
     fe0:	81 e0       	ldi	r24, 0x01	; 1
     fe2:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <__SPKR_init>
     fe6:	81 e0       	ldi	r24, 0x01	; 1
     fe8:	80 93 e1 01 	sts	0x01E1, r24
     fec:	8a e0       	ldi	r24, 0x0A	; 10
     fee:	61 e0       	ldi	r22, 0x01	; 1
     ff0:	0e 94 7e 08 	call	0x10fc	; 0x10fc <SYS_set_state>
     ff4:	8a e0       	ldi	r24, 0x0A	; 10
     ff6:	91 e0       	ldi	r25, 0x01	; 1
     ff8:	08 95       	ret

00000ffa <__SPKR_open_tone_mode>:
     ffa:	1f 93       	push	r17
     ffc:	8b e0       	ldi	r24, 0x0B	; 11
     ffe:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    1002:	88 23       	and	r24, r24
    1004:	11 f0       	breq	.+4      	; 0x100a <__SPKR_open_tone_mode+0x10>
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	21 c0       	rjmp	.+66     	; 0x104c <__SPKR_open_tone_mode+0x52>
    100a:	89 e0       	ldi	r24, 0x09	; 9
    100c:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    1010:	88 23       	and	r24, r24
    1012:	d9 f4       	brne	.+54     	; 0x104a <__SPKR_open_tone_mode+0x50>
    1014:	0e 94 98 07 	call	0xf30	; 0xf30 <__SPKR_set_up_freq_LUT>
    1018:	18 2f       	mov	r17, r24
    101a:	81 30       	cpi	r24, 0x01	; 1
    101c:	b1 f4       	brne	.+44     	; 0x104a <__SPKR_open_tone_mode+0x50>
    101e:	10 92 e2 01 	sts	0x01E2, r1
    1022:	10 92 e3 01 	sts	0x01E3, r1
    1026:	10 92 e4 01 	sts	0x01E4, r1
    102a:	10 92 e5 01 	sts	0x01E5, r1
    102e:	8d e0       	ldi	r24, 0x0D	; 13
    1030:	68 e7       	ldi	r22, 0x78	; 120
    1032:	7e e0       	ldi	r23, 0x0E	; 14
    1034:	0e 94 ed 0c 	call	0x19da	; 0x19da <ISR_attach>
    1038:	82 e0       	ldi	r24, 0x02	; 2
    103a:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <__SPKR_init>
    103e:	10 93 e0 01 	sts	0x01E0, r17
    1042:	89 e0       	ldi	r24, 0x09	; 9
    1044:	61 e0       	ldi	r22, 0x01	; 1
    1046:	0e 94 7e 08 	call	0x10fc	; 0x10fc <SYS_set_state>
    104a:	91 e0       	ldi	r25, 0x01	; 1
    104c:	89 e0       	ldi	r24, 0x09	; 9
    104e:	1f 91       	pop	r17
    1050:	08 95       	ret

00001052 <SPKR_open>:
    1052:	81 30       	cpi	r24, 0x01	; 1
    1054:	29 f0       	breq	.+10     	; 0x1060 <SPKR_open+0xe>
    1056:	82 30       	cpi	r24, 0x02	; 2
    1058:	31 f0       	breq	.+12     	; 0x1066 <SPKR_open+0x14>
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	89 e0       	ldi	r24, 0x09	; 9
    105e:	08 95       	ret
    1060:	0e 94 e7 07 	call	0xfce	; 0xfce <__SPKR_open_beep_mode>
    1064:	08 95       	ret
    1066:	0e 94 fd 07 	call	0xffa	; 0xffa <__SPKR_open_tone_mode>
    106a:	08 95       	ret

0000106c <SYS_get_state>:
    106c:	e8 2f       	mov	r30, r24
    106e:	f0 e0       	ldi	r31, 0x00	; 0
    1070:	e3 31       	cpi	r30, 0x13	; 19
    1072:	f1 05       	cpc	r31, r1
    1074:	40 f4       	brcc	.+16     	; 0x1086 <SYS_get_state+0x1a>
    1076:	e2 5c       	subi	r30, 0xC2	; 194
    1078:	ff 4f       	sbci	r31, 0xFF	; 255
    107a:	ee 0f       	add	r30, r30
    107c:	ff 1f       	adc	r31, r31
    107e:	05 90       	lpm	r0, Z+
    1080:	f4 91       	lpm	r31, Z+
    1082:	e0 2d       	mov	r30, r0
    1084:	09 94       	ijmp
    1086:	80 e0       	ldi	r24, 0x00	; 0
    1088:	08 95       	ret
    108a:	80 91 fd 01 	lds	r24, 0x01FD
    108e:	08 95       	ret
    1090:	80 91 fe 01 	lds	r24, 0x01FE
    1094:	08 95       	ret
    1096:	80 91 ff 01 	lds	r24, 0x01FF
    109a:	08 95       	ret
    109c:	80 91 00 02 	lds	r24, 0x0200
    10a0:	08 95       	ret
    10a2:	80 91 01 02 	lds	r24, 0x0201
    10a6:	08 95       	ret
    10a8:	80 91 03 02 	lds	r24, 0x0203
    10ac:	08 95       	ret
    10ae:	80 91 02 02 	lds	r24, 0x0202
    10b2:	08 95       	ret
    10b4:	80 91 04 02 	lds	r24, 0x0204
    10b8:	08 95       	ret
    10ba:	80 91 05 02 	lds	r24, 0x0205
    10be:	08 95       	ret
    10c0:	80 91 06 02 	lds	r24, 0x0206
    10c4:	08 95       	ret
    10c6:	80 91 07 02 	lds	r24, 0x0207
    10ca:	08 95       	ret
    10cc:	80 91 08 02 	lds	r24, 0x0208
    10d0:	08 95       	ret
    10d2:	80 91 09 02 	lds	r24, 0x0209
    10d6:	08 95       	ret
    10d8:	80 91 0a 02 	lds	r24, 0x020A
    10dc:	08 95       	ret
    10de:	80 91 0b 02 	lds	r24, 0x020B
    10e2:	08 95       	ret
    10e4:	80 91 0c 02 	lds	r24, 0x020C
    10e8:	08 95       	ret
    10ea:	80 91 0d 02 	lds	r24, 0x020D
    10ee:	08 95       	ret
    10f0:	80 91 0e 02 	lds	r24, 0x020E
    10f4:	08 95       	ret
    10f6:	80 91 0f 02 	lds	r24, 0x020F
    10fa:	08 95       	ret

000010fc <SYS_set_state>:
    10fc:	e8 2f       	mov	r30, r24
    10fe:	f0 e0       	ldi	r31, 0x00	; 0
    1100:	e3 31       	cpi	r30, 0x13	; 19
    1102:	f1 05       	cpc	r31, r1
    1104:	08 f0       	brcs	.+2      	; 0x1108 <SYS_set_state+0xc>
    1106:	40 c0       	rjmp	.+128    	; 0x1188 <SYS_set_state+0x8c>
    1108:	ef 5a       	subi	r30, 0xAF	; 175
    110a:	ff 4f       	sbci	r31, 0xFF	; 255
    110c:	ee 0f       	add	r30, r30
    110e:	ff 1f       	adc	r31, r31
    1110:	05 90       	lpm	r0, Z+
    1112:	f4 91       	lpm	r31, Z+
    1114:	e0 2d       	mov	r30, r0
    1116:	09 94       	ijmp
    1118:	60 93 fd 01 	sts	0x01FD, r22
    111c:	08 95       	ret
    111e:	60 93 fe 01 	sts	0x01FE, r22
    1122:	08 95       	ret
    1124:	60 93 ff 01 	sts	0x01FF, r22
    1128:	08 95       	ret
    112a:	60 93 00 02 	sts	0x0200, r22
    112e:	08 95       	ret
    1130:	60 93 01 02 	sts	0x0201, r22
    1134:	08 95       	ret
    1136:	60 93 03 02 	sts	0x0203, r22
    113a:	08 95       	ret
    113c:	60 93 02 02 	sts	0x0202, r22
    1140:	08 95       	ret
    1142:	60 93 04 02 	sts	0x0204, r22
    1146:	08 95       	ret
    1148:	60 93 05 02 	sts	0x0205, r22
    114c:	08 95       	ret
    114e:	60 93 06 02 	sts	0x0206, r22
    1152:	08 95       	ret
    1154:	60 93 07 02 	sts	0x0207, r22
    1158:	08 95       	ret
    115a:	60 93 08 02 	sts	0x0208, r22
    115e:	08 95       	ret
    1160:	60 93 09 02 	sts	0x0209, r22
    1164:	08 95       	ret
    1166:	60 93 0a 02 	sts	0x020A, r22
    116a:	08 95       	ret
    116c:	60 93 0b 02 	sts	0x020B, r22
    1170:	08 95       	ret
    1172:	60 93 0c 02 	sts	0x020C, r22
    1176:	08 95       	ret
    1178:	60 93 0d 02 	sts	0x020D, r22
    117c:	08 95       	ret
    117e:	60 93 0e 02 	sts	0x020E, r22
    1182:	08 95       	ret
    1184:	60 93 0d 02 	sts	0x020D, r22
    1188:	08 95       	ret

0000118a <ATTINY_get_SW_state>:
    118a:	1f 93       	push	r17
    118c:	cf 93       	push	r28
    118e:	df 93       	push	r29
    1190:	18 2f       	mov	r17, r24
    1192:	80 91 83 01 	lds	r24, 0x0183
    1196:	88 23       	and	r24, r24
    1198:	41 f0       	breq	.+16     	; 0x11aa <ATTINY_get_SW_state+0x20>
    119a:	80 91 8d 01 	lds	r24, 0x018D
    119e:	88 23       	and	r24, r24
    11a0:	99 f0       	breq	.+38     	; 0x11c8 <ATTINY_get_SW_state+0x3e>
    11a2:	10 92 83 01 	sts	0x0183, r1
    11a6:	10 92 8d 01 	sts	0x018D, r1
    11aa:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <ATTINY_get_sensors>
    11ae:	80 93 82 01 	sts	0x0182, r24
    11b2:	87 e8       	ldi	r24, 0x87	; 135
    11b4:	91 e0       	ldi	r25, 0x01	; 1
    11b6:	61 e0       	ldi	r22, 0x01	; 1
    11b8:	40 e0       	ldi	r20, 0x00	; 0
    11ba:	22 e3       	ldi	r18, 0x32	; 50
    11bc:	30 e0       	ldi	r19, 0x00	; 0
    11be:	0e 94 83 09 	call	0x1306	; 0x1306 <TMRSRVC_new>
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	80 93 83 01 	sts	0x0183, r24
    11c8:	90 91 82 01 	lds	r25, 0x0182
    11cc:	a1 2f       	mov	r26, r17
    11ce:	b0 e0       	ldi	r27, 0x00	; 0
    11d0:	ed 01       	movw	r28, r26
    11d2:	cb 5d       	subi	r28, 0xDB	; 219
    11d4:	de 4f       	sbci	r29, 0xFE	; 254
    11d6:	88 81       	ld	r24, Y
    11d8:	88 23       	and	r24, r24
    11da:	69 f0       	breq	.+26     	; 0x11f6 <ATTINY_get_SW_state+0x6c>
    11dc:	fd 01       	movw	r30, r26
    11de:	e8 5d       	subi	r30, 0xD8	; 216
    11e0:	fe 4f       	sbci	r31, 0xFE	; 254
    11e2:	80 81       	ld	r24, Z
    11e4:	98 23       	and	r25, r24
    11e6:	c1 f0       	breq	.+48     	; 0x1218 <ATTINY_get_SW_state+0x8e>
    11e8:	fd 01       	movw	r30, r26
    11ea:	ec 57       	subi	r30, 0x7C	; 124
    11ec:	fe 4f       	sbci	r31, 0xFE	; 254
    11ee:	81 e0       	ldi	r24, 0x01	; 1
    11f0:	80 83       	st	Z, r24
    11f2:	18 82       	st	Y, r1
    11f4:	11 c0       	rjmp	.+34     	; 0x1218 <ATTINY_get_SW_state+0x8e>
    11f6:	fd 01       	movw	r30, r26
    11f8:	ec 57       	subi	r30, 0x7C	; 124
    11fa:	fe 4f       	sbci	r31, 0xFE	; 254
    11fc:	80 81       	ld	r24, Z
    11fe:	81 11       	cpse	r24, r1
    1200:	10 82       	st	Z, r1
    1202:	fd 01       	movw	r30, r26
    1204:	e8 5d       	subi	r30, 0xD8	; 216
    1206:	fe 4f       	sbci	r31, 0xFE	; 254
    1208:	80 81       	ld	r24, Z
    120a:	98 23       	and	r25, r24
    120c:	29 f4       	brne	.+10     	; 0x1218 <ATTINY_get_SW_state+0x8e>
    120e:	fd 01       	movw	r30, r26
    1210:	eb 5d       	subi	r30, 0xDB	; 219
    1212:	fe 4f       	sbci	r31, 0xFE	; 254
    1214:	81 e0       	ldi	r24, 0x01	; 1
    1216:	80 83       	st	Z, r24
    1218:	ac 57       	subi	r26, 0x7C	; 124
    121a:	be 4f       	sbci	r27, 0xFE	; 254
    121c:	8c 91       	ld	r24, X
    121e:	df 91       	pop	r29
    1220:	cf 91       	pop	r28
    1222:	1f 91       	pop	r17
    1224:	08 95       	ret

00001226 <ATTINY_open>:
    1226:	82 e0       	ldi	r24, 0x02	; 2
    1228:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    122c:	88 23       	and	r24, r24
    122e:	19 f4       	brne	.+6      	; 0x1236 <ATTINY_open+0x10>
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	82 e0       	ldi	r24, 0x02	; 2
    1234:	08 95       	ret
    1236:	10 92 2b 02 	sts	0x022B, r1
    123a:	10 92 2a 02 	sts	0x022A, r1
    123e:	10 92 2d 02 	sts	0x022D, r1
    1242:	10 92 2c 02 	sts	0x022C, r1
    1246:	10 92 2f 02 	sts	0x022F, r1
    124a:	10 92 2e 02 	sts	0x022E, r1
    124e:	10 92 31 02 	sts	0x0231, r1
    1252:	10 92 30 02 	sts	0x0230, r1
    1256:	10 92 33 02 	sts	0x0233, r1
    125a:	10 92 32 02 	sts	0x0232, r1
    125e:	80 e9       	ldi	r24, 0x90	; 144
    1260:	91 e0       	ldi	r25, 0x01	; 1
    1262:	90 93 17 02 	sts	0x0217, r25
    1266:	80 93 16 02 	sts	0x0216, r24
    126a:	90 93 19 02 	sts	0x0219, r25
    126e:	80 93 18 02 	sts	0x0218, r24
    1272:	90 93 1b 02 	sts	0x021B, r25
    1276:	80 93 1a 02 	sts	0x021A, r24
    127a:	90 93 1d 02 	sts	0x021D, r25
    127e:	80 93 1c 02 	sts	0x021C, r24
    1282:	90 93 1f 02 	sts	0x021F, r25
    1286:	80 93 1e 02 	sts	0x021E, r24
    128a:	84 e3       	ldi	r24, 0x34	; 52
    128c:	98 e0       	ldi	r25, 0x08	; 8
    128e:	90 93 21 02 	sts	0x0221, r25
    1292:	80 93 20 02 	sts	0x0220, r24
    1296:	90 93 23 02 	sts	0x0223, r25
    129a:	80 93 22 02 	sts	0x0222, r24
    129e:	90 93 25 02 	sts	0x0225, r25
    12a2:	80 93 24 02 	sts	0x0224, r24
    12a6:	90 93 27 02 	sts	0x0227, r25
    12aa:	80 93 26 02 	sts	0x0226, r24
    12ae:	90 93 29 02 	sts	0x0229, r25
    12b2:	80 93 28 02 	sts	0x0228, r24
    12b6:	81 e0       	ldi	r24, 0x01	; 1
    12b8:	61 e0       	ldi	r22, 0x01	; 1
    12ba:	0e 94 7e 08 	call	0x10fc	; 0x10fc <SYS_set_state>
    12be:	91 e0       	ldi	r25, 0x01	; 1
    12c0:	81 e0       	ldi	r24, 0x01	; 1
    12c2:	08 95       	ret

000012c4 <TMRSRVC_delay>:
    12c4:	df 93       	push	r29
    12c6:	cf 93       	push	r28
    12c8:	cd b7       	in	r28, 0x3d	; 61
    12ca:	de b7       	in	r29, 0x3e	; 62
    12cc:	29 97       	sbiw	r28, 0x09	; 9
    12ce:	0f b6       	in	r0, 0x3f	; 63
    12d0:	f8 94       	cli
    12d2:	de bf       	out	0x3e, r29	; 62
    12d4:	0f be       	out	0x3f, r0	; 63
    12d6:	cd bf       	out	0x3d, r28	; 61
    12d8:	9c 01       	movw	r18, r24
    12da:	ce 01       	movw	r24, r28
    12dc:	01 96       	adiw	r24, 0x01	; 1
    12de:	61 e0       	ldi	r22, 0x01	; 1
    12e0:	40 e0       	ldi	r20, 0x00	; 0
    12e2:	0e 94 83 09 	call	0x1306	; 0x1306 <TMRSRVC_new>
    12e6:	98 2f       	mov	r25, r24
    12e8:	88 23       	and	r24, r24
    12ea:	19 f4       	brne	.+6      	; 0x12f2 <TMRSRVC_delay+0x2e>
    12ec:	8f 81       	ldd	r24, Y+7	; 0x07
    12ee:	88 23       	and	r24, r24
    12f0:	e9 f3       	breq	.-6      	; 0x12ec <TMRSRVC_delay+0x28>
    12f2:	89 2f       	mov	r24, r25
    12f4:	29 96       	adiw	r28, 0x09	; 9
    12f6:	0f b6       	in	r0, 0x3f	; 63
    12f8:	f8 94       	cli
    12fa:	de bf       	out	0x3e, r29	; 62
    12fc:	0f be       	out	0x3f, r0	; 63
    12fe:	cd bf       	out	0x3d, r28	; 61
    1300:	cf 91       	pop	r28
    1302:	df 91       	pop	r29
    1304:	08 95       	ret

00001306 <TMRSRVC_new>:
    1306:	ef 92       	push	r14
    1308:	ff 92       	push	r15
    130a:	0f 93       	push	r16
    130c:	1f 93       	push	r17
    130e:	cf 93       	push	r28
    1310:	df 93       	push	r29
    1312:	ec 01       	movw	r28, r24
    1314:	f6 2e       	mov	r15, r22
    1316:	e4 2e       	mov	r14, r20
    1318:	89 01       	movw	r16, r18
    131a:	88 e0       	ldi	r24, 0x08	; 8
    131c:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    1320:	81 30       	cpi	r24, 0x01	; 1
    1322:	11 f0       	breq	.+4      	; 0x1328 <TMRSRVC_new+0x22>
    1324:	81 e0       	ldi	r24, 0x01	; 1
    1326:	26 c0       	rjmp	.+76     	; 0x1374 <TMRSRVC_new+0x6e>
    1328:	84 e0       	ldi	r24, 0x04	; 4
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	0e 94 c1 18 	call	0x3182	; 0x3182 <malloc>
    1330:	fc 01       	movw	r30, r24
    1332:	00 97       	sbiw	r24, 0x00	; 0
    1334:	11 f4       	brne	.+4      	; 0x133a <TMRSRVC_new+0x34>
    1336:	82 e0       	ldi	r24, 0x02	; 2
    1338:	1d c0       	rjmp	.+58     	; 0x1374 <TMRSRVC_new+0x6e>
    133a:	f9 82       	std	Y+1, r15	; 0x01
    133c:	f0 fc       	sbrc	r15, 0
    133e:	1e 82       	std	Y+6, r1	; 0x06
    1340:	81 e0       	ldi	r24, 0x01	; 1
    1342:	e8 16       	cp	r14, r24
    1344:	19 f4       	brne	.+6      	; 0x134c <TMRSRVC_new+0x46>
    1346:	89 81       	ldd	r24, Y+1	; 0x01
    1348:	84 60       	ori	r24, 0x04	; 4
    134a:	89 83       	std	Y+1, r24	; 0x01
    134c:	89 81       	ldd	r24, Y+1	; 0x01
    134e:	88 60       	ori	r24, 0x08	; 8
    1350:	89 83       	std	Y+1, r24	; 0x01
    1352:	1b 83       	std	Y+3, r17	; 0x03
    1354:	0a 83       	std	Y+2, r16	; 0x02
    1356:	1d 83       	std	Y+5, r17	; 0x05
    1358:	0c 83       	std	Y+4, r16	; 0x04
    135a:	d1 83       	std	Z+1, r29	; 0x01
    135c:	c0 83       	st	Z, r28
    135e:	13 82       	std	Z+3, r1	; 0x03
    1360:	12 82       	std	Z+2, r1	; 0x02
    1362:	81 e0       	ldi	r24, 0x01	; 1
    1364:	80 93 f0 01 	sts	0x01F0, r24
    1368:	cf 01       	movw	r24, r30
    136a:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <TMRSRVC_insert>
    136e:	10 92 f0 01 	sts	0x01F0, r1
    1372:	80 e0       	ldi	r24, 0x00	; 0
    1374:	df 91       	pop	r29
    1376:	cf 91       	pop	r28
    1378:	1f 91       	pop	r17
    137a:	0f 91       	pop	r16
    137c:	ff 90       	pop	r15
    137e:	ef 90       	pop	r14
    1380:	08 95       	ret

00001382 <I2C_MSTR_get>:
    1382:	fc 01       	movw	r30, r24
    1384:	80 91 37 02 	lds	r24, 0x0237
    1388:	81 30       	cpi	r24, 0x01	; 1
    138a:	11 f0       	breq	.+4      	; 0x1390 <I2C_MSTR_get+0xe>
    138c:	85 e0       	ldi	r24, 0x05	; 5
    138e:	08 95       	ret
    1390:	80 91 38 02 	lds	r24, 0x0238
    1394:	81 30       	cpi	r24, 0x01	; 1
    1396:	11 f0       	breq	.+4      	; 0x139c <I2C_MSTR_get+0x1a>
    1398:	8a e0       	ldi	r24, 0x0A	; 10
    139a:	08 95       	ret
    139c:	61 30       	cpi	r22, 0x01	; 1
    139e:	11 f4       	brne	.+4      	; 0x13a4 <I2C_MSTR_get+0x22>
    13a0:	84 ec       	ldi	r24, 0xC4	; 196
    13a2:	01 c0       	rjmp	.+2      	; 0x13a6 <I2C_MSTR_get+0x24>
    13a4:	84 e8       	ldi	r24, 0x84	; 132
    13a6:	80 93 bc 00 	sts	0x00BC, r24
    13aa:	80 91 bc 00 	lds	r24, 0x00BC
    13ae:	87 ff       	sbrs	r24, 7
    13b0:	fc cf       	rjmp	.-8      	; 0x13aa <I2C_MSTR_get+0x28>
    13b2:	61 30       	cpi	r22, 0x01	; 1
    13b4:	31 f4       	brne	.+12     	; 0x13c2 <I2C_MSTR_get+0x40>
    13b6:	80 91 b9 00 	lds	r24, 0x00B9
    13ba:	88 7f       	andi	r24, 0xF8	; 248
    13bc:	80 35       	cpi	r24, 0x50	; 80
    13be:	59 f4       	brne	.+22     	; 0x13d6 <I2C_MSTR_get+0x54>
    13c0:	05 c0       	rjmp	.+10     	; 0x13cc <I2C_MSTR_get+0x4a>
    13c2:	80 91 b9 00 	lds	r24, 0x00B9
    13c6:	88 7f       	andi	r24, 0xF8	; 248
    13c8:	88 35       	cpi	r24, 0x58	; 88
    13ca:	29 f4       	brne	.+10     	; 0x13d6 <I2C_MSTR_get+0x54>
    13cc:	80 91 bb 00 	lds	r24, 0x00BB
    13d0:	80 83       	st	Z, r24
    13d2:	80 e0       	ldi	r24, 0x00	; 0
    13d4:	08 95       	ret
    13d6:	82 e0       	ldi	r24, 0x02	; 2
    13d8:	08 95       	ret

000013da <I2C_MSTR_send>:
    13da:	98 2f       	mov	r25, r24
    13dc:	80 91 37 02 	lds	r24, 0x0237
    13e0:	81 30       	cpi	r24, 0x01	; 1
    13e2:	11 f0       	breq	.+4      	; 0x13e8 <I2C_MSTR_send+0xe>
    13e4:	85 e0       	ldi	r24, 0x05	; 5
    13e6:	08 95       	ret
    13e8:	80 91 38 02 	lds	r24, 0x0238
    13ec:	81 30       	cpi	r24, 0x01	; 1
    13ee:	11 f0       	breq	.+4      	; 0x13f4 <I2C_MSTR_send+0x1a>
    13f0:	8a e0       	ldi	r24, 0x0A	; 10
    13f2:	08 95       	ret
    13f4:	90 93 bb 00 	sts	0x00BB, r25
    13f8:	84 e8       	ldi	r24, 0x84	; 132
    13fa:	80 93 bc 00 	sts	0x00BC, r24
    13fe:	80 91 bc 00 	lds	r24, 0x00BC
    1402:	87 ff       	sbrs	r24, 7
    1404:	fc cf       	rjmp	.-8      	; 0x13fe <I2C_MSTR_send+0x24>
    1406:	80 91 b9 00 	lds	r24, 0x00B9
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	88 7f       	andi	r24, 0xF8	; 248
    140e:	90 70       	andi	r25, 0x00	; 0
    1410:	88 32       	cpi	r24, 0x28	; 40
    1412:	91 05       	cpc	r25, r1
    1414:	21 f0       	breq	.+8      	; 0x141e <I2C_MSTR_send+0x44>
    1416:	c0 97       	sbiw	r24, 0x30	; 48
    1418:	21 f4       	brne	.+8      	; 0x1422 <I2C_MSTR_send+0x48>
    141a:	83 e0       	ldi	r24, 0x03	; 3
    141c:	08 95       	ret
    141e:	80 e0       	ldi	r24, 0x00	; 0
    1420:	08 95       	ret
    1422:	8c e0       	ldi	r24, 0x0C	; 12
    1424:	08 95       	ret

00001426 <I2C_MSTR_start>:
    1426:	98 2f       	mov	r25, r24
    1428:	20 91 37 02 	lds	r18, 0x0237
    142c:	21 30       	cpi	r18, 0x01	; 1
    142e:	11 f0       	breq	.+4      	; 0x1434 <I2C_MSTR_start+0xe>
    1430:	85 e0       	ldi	r24, 0x05	; 5
    1432:	08 95       	ret
    1434:	80 91 39 02 	lds	r24, 0x0239
    1438:	81 30       	cpi	r24, 0x01	; 1
    143a:	11 f4       	brne	.+4      	; 0x1440 <I2C_MSTR_start+0x1a>
    143c:	89 e0       	ldi	r24, 0x09	; 9
    143e:	08 95       	ret
    1440:	20 93 38 02 	sts	0x0238, r18
    1444:	84 ea       	ldi	r24, 0xA4	; 164
    1446:	80 93 bc 00 	sts	0x00BC, r24
    144a:	80 91 bc 00 	lds	r24, 0x00BC
    144e:	87 ff       	sbrs	r24, 7
    1450:	fc cf       	rjmp	.-8      	; 0x144a <I2C_MSTR_start+0x24>
    1452:	80 91 b9 00 	lds	r24, 0x00B9
    1456:	88 7f       	andi	r24, 0xF8	; 248
    1458:	88 30       	cpi	r24, 0x08	; 8
    145a:	39 f0       	breq	.+14     	; 0x146a <I2C_MSTR_start+0x44>
    145c:	80 91 b9 00 	lds	r24, 0x00B9
    1460:	88 7f       	andi	r24, 0xF8	; 248
    1462:	80 31       	cpi	r24, 0x10	; 16
    1464:	11 f0       	breq	.+4      	; 0x146a <I2C_MSTR_start+0x44>
    1466:	81 e0       	ldi	r24, 0x01	; 1
    1468:	08 95       	ret
    146a:	61 30       	cpi	r22, 0x01	; 1
    146c:	19 f4       	brne	.+6      	; 0x1474 <I2C_MSTR_start+0x4e>
    146e:	99 0f       	add	r25, r25
    1470:	91 60       	ori	r25, 0x01	; 1
    1472:	03 c0       	rjmp	.+6      	; 0x147a <I2C_MSTR_start+0x54>
    1474:	66 23       	and	r22, r22
    1476:	19 f4       	brne	.+6      	; 0x147e <I2C_MSTR_start+0x58>
    1478:	99 0f       	add	r25, r25
    147a:	90 93 bb 00 	sts	0x00BB, r25
    147e:	84 e8       	ldi	r24, 0x84	; 132
    1480:	80 93 bc 00 	sts	0x00BC, r24
    1484:	80 91 bc 00 	lds	r24, 0x00BC
    1488:	87 ff       	sbrs	r24, 7
    148a:	fc cf       	rjmp	.-8      	; 0x1484 <I2C_MSTR_start+0x5e>
    148c:	61 30       	cpi	r22, 0x01	; 1
    148e:	31 f4       	brne	.+12     	; 0x149c <I2C_MSTR_start+0x76>
    1490:	80 91 b9 00 	lds	r24, 0x00B9
    1494:	88 7f       	andi	r24, 0xF8	; 248
    1496:	80 34       	cpi	r24, 0x40	; 64
    1498:	41 f4       	brne	.+16     	; 0x14aa <I2C_MSTR_start+0x84>
    149a:	09 c0       	rjmp	.+18     	; 0x14ae <I2C_MSTR_start+0x88>
    149c:	66 23       	and	r22, r22
    149e:	39 f4       	brne	.+14     	; 0x14ae <I2C_MSTR_start+0x88>
    14a0:	80 91 b9 00 	lds	r24, 0x00B9
    14a4:	88 7f       	andi	r24, 0xF8	; 248
    14a6:	88 31       	cpi	r24, 0x18	; 24
    14a8:	11 f0       	breq	.+4      	; 0x14ae <I2C_MSTR_start+0x88>
    14aa:	82 e0       	ldi	r24, 0x02	; 2
    14ac:	08 95       	ret
    14ae:	80 e0       	ldi	r24, 0x00	; 0
    14b0:	08 95       	ret

000014b2 <I2C_MSTR_stop>:
    14b2:	80 91 38 02 	lds	r24, 0x0238
    14b6:	81 30       	cpi	r24, 0x01	; 1
    14b8:	11 f0       	breq	.+4      	; 0x14be <I2C_MSTR_stop+0xc>
    14ba:	8a e0       	ldi	r24, 0x0A	; 10
    14bc:	08 95       	ret
    14be:	80 91 3a 02 	lds	r24, 0x023A
    14c2:	81 30       	cpi	r24, 0x01	; 1
    14c4:	29 f4       	brne	.+10     	; 0x14d0 <I2C_MSTR_stop+0x1e>
    14c6:	85 e9       	ldi	r24, 0x95	; 149
    14c8:	80 93 bc 00 	sts	0x00BC, r24
    14cc:	80 e0       	ldi	r24, 0x00	; 0
    14ce:	08 95       	ret
    14d0:	84 e9       	ldi	r24, 0x94	; 148
    14d2:	80 93 bc 00 	sts	0x00BC, r24
    14d6:	80 e0       	ldi	r24, 0x00	; 0
    14d8:	08 95       	ret

000014da <I2C_open>:
    14da:	82 e1       	ldi	r24, 0x12	; 18
    14dc:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    14e0:	88 23       	and	r24, r24
    14e2:	b1 f4       	brne	.+44     	; 0x1510 <I2C_open+0x36>
    14e4:	10 92 37 02 	sts	0x0237, r1
    14e8:	10 92 38 02 	sts	0x0238, r1
    14ec:	10 92 39 02 	sts	0x0239, r1
    14f0:	10 92 3a 02 	sts	0x023A, r1
    14f4:	10 92 3b 02 	sts	0x023B, r1
    14f8:	0e 94 62 10 	call	0x20c4	; 0x20c4 <__I2C_init>
    14fc:	87 e1       	ldi	r24, 0x17	; 23
    14fe:	60 e0       	ldi	r22, 0x00	; 0
    1500:	0e 94 8b 0a 	call	0x1516	; 0x1516 <I2C_set_BRG>
    1504:	0e 94 58 10 	call	0x20b0	; 0x20b0 <I2C_enable>
    1508:	82 e1       	ldi	r24, 0x12	; 18
    150a:	61 e0       	ldi	r22, 0x01	; 1
    150c:	0e 94 7e 08 	call	0x10fc	; 0x10fc <SYS_set_state>
    1510:	82 e1       	ldi	r24, 0x12	; 18
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	08 95       	ret

00001516 <I2C_set_BRG>:
    1516:	63 70       	andi	r22, 0x03	; 3
    1518:	60 93 b9 00 	sts	0x00B9, r22
    151c:	80 93 b8 00 	sts	0x00B8, r24
    1520:	81 e0       	ldi	r24, 0x01	; 1
    1522:	80 93 37 02 	sts	0x0237, r24
    1526:	08 95       	ret

00001528 <__ADC_init>:
    1528:	8f e1       	ldi	r24, 0x1F	; 31
    152a:	80 93 7c 00 	sts	0x007C, r24
    152e:	ea e7       	ldi	r30, 0x7A	; 122
    1530:	f0 e0       	ldi	r31, 0x00	; 0
    1532:	87 e0       	ldi	r24, 0x07	; 7
    1534:	80 83       	st	Z, r24
    1536:	80 81       	ld	r24, Z
    1538:	80 68       	ori	r24, 0x80	; 128
    153a:	80 83       	st	Z, r24
    153c:	08 95       	ret

0000153e <CBOT_init>:
    153e:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <SYS_init>
    1542:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <ATMEGA_open>
    1546:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <ISR_open>
    154a:	0e 94 2f 10 	call	0x205e	; 0x205e <TMRSRVC_open>
    154e:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <SPI_open>
    1552:	0e 94 13 09 	call	0x1226	; 0x1226 <ATTINY_open>
    1556:	78 94       	sei
    1558:	08 95       	ret

0000155a <CBOT_ISR_init>:
    155a:	00 00       	nop
    155c:	08 95       	ret

0000155e <__vector_16>:
    155e:	1f 92       	push	r1
    1560:	0f 92       	push	r0
    1562:	0f b6       	in	r0, 0x3f	; 63
    1564:	0f 92       	push	r0
    1566:	11 24       	eor	r1, r1
    1568:	2f 93       	push	r18
    156a:	3f 93       	push	r19
    156c:	4f 93       	push	r20
    156e:	5f 93       	push	r21
    1570:	6f 93       	push	r22
    1572:	7f 93       	push	r23
    1574:	8f 93       	push	r24
    1576:	9f 93       	push	r25
    1578:	af 93       	push	r26
    157a:	bf 93       	push	r27
    157c:	ef 93       	push	r30
    157e:	ff 93       	push	r31
    1580:	e0 91 b0 01 	lds	r30, 0x01B0
    1584:	f0 91 b1 01 	lds	r31, 0x01B1
    1588:	30 97       	sbiw	r30, 0x00	; 0
    158a:	09 f0       	breq	.+2      	; 0x158e <__vector_16+0x30>
    158c:	09 95       	icall
    158e:	ff 91       	pop	r31
    1590:	ef 91       	pop	r30
    1592:	bf 91       	pop	r27
    1594:	af 91       	pop	r26
    1596:	9f 91       	pop	r25
    1598:	8f 91       	pop	r24
    159a:	7f 91       	pop	r23
    159c:	6f 91       	pop	r22
    159e:	5f 91       	pop	r21
    15a0:	4f 91       	pop	r20
    15a2:	3f 91       	pop	r19
    15a4:	2f 91       	pop	r18
    15a6:	0f 90       	pop	r0
    15a8:	0f be       	out	0x3f, r0	; 63
    15aa:	0f 90       	pop	r0
    15ac:	1f 90       	pop	r1
    15ae:	18 95       	reti

000015b0 <__vector_17>:
    15b0:	1f 92       	push	r1
    15b2:	0f 92       	push	r0
    15b4:	0f b6       	in	r0, 0x3f	; 63
    15b6:	0f 92       	push	r0
    15b8:	11 24       	eor	r1, r1
    15ba:	2f 93       	push	r18
    15bc:	3f 93       	push	r19
    15be:	4f 93       	push	r20
    15c0:	5f 93       	push	r21
    15c2:	6f 93       	push	r22
    15c4:	7f 93       	push	r23
    15c6:	8f 93       	push	r24
    15c8:	9f 93       	push	r25
    15ca:	af 93       	push	r26
    15cc:	bf 93       	push	r27
    15ce:	ef 93       	push	r30
    15d0:	ff 93       	push	r31
    15d2:	e0 91 b2 01 	lds	r30, 0x01B2
    15d6:	f0 91 b3 01 	lds	r31, 0x01B3
    15da:	30 97       	sbiw	r30, 0x00	; 0
    15dc:	09 f0       	breq	.+2      	; 0x15e0 <__vector_17+0x30>
    15de:	09 95       	icall
    15e0:	ff 91       	pop	r31
    15e2:	ef 91       	pop	r30
    15e4:	bf 91       	pop	r27
    15e6:	af 91       	pop	r26
    15e8:	9f 91       	pop	r25
    15ea:	8f 91       	pop	r24
    15ec:	7f 91       	pop	r23
    15ee:	6f 91       	pop	r22
    15f0:	5f 91       	pop	r21
    15f2:	4f 91       	pop	r20
    15f4:	3f 91       	pop	r19
    15f6:	2f 91       	pop	r18
    15f8:	0f 90       	pop	r0
    15fa:	0f be       	out	0x3f, r0	; 63
    15fc:	0f 90       	pop	r0
    15fe:	1f 90       	pop	r1
    1600:	18 95       	reti

00001602 <__vector_18>:
    1602:	1f 92       	push	r1
    1604:	0f 92       	push	r0
    1606:	0f b6       	in	r0, 0x3f	; 63
    1608:	0f 92       	push	r0
    160a:	11 24       	eor	r1, r1
    160c:	2f 93       	push	r18
    160e:	3f 93       	push	r19
    1610:	4f 93       	push	r20
    1612:	5f 93       	push	r21
    1614:	6f 93       	push	r22
    1616:	7f 93       	push	r23
    1618:	8f 93       	push	r24
    161a:	9f 93       	push	r25
    161c:	af 93       	push	r26
    161e:	bf 93       	push	r27
    1620:	ef 93       	push	r30
    1622:	ff 93       	push	r31
    1624:	e0 91 b4 01 	lds	r30, 0x01B4
    1628:	f0 91 b5 01 	lds	r31, 0x01B5
    162c:	30 97       	sbiw	r30, 0x00	; 0
    162e:	09 f0       	breq	.+2      	; 0x1632 <__vector_18+0x30>
    1630:	09 95       	icall
    1632:	ff 91       	pop	r31
    1634:	ef 91       	pop	r30
    1636:	bf 91       	pop	r27
    1638:	af 91       	pop	r26
    163a:	9f 91       	pop	r25
    163c:	8f 91       	pop	r24
    163e:	7f 91       	pop	r23
    1640:	6f 91       	pop	r22
    1642:	5f 91       	pop	r21
    1644:	4f 91       	pop	r20
    1646:	3f 91       	pop	r19
    1648:	2f 91       	pop	r18
    164a:	0f 90       	pop	r0
    164c:	0f be       	out	0x3f, r0	; 63
    164e:	0f 90       	pop	r0
    1650:	1f 90       	pop	r1
    1652:	18 95       	reti

00001654 <__vector_9>:
    1654:	1f 92       	push	r1
    1656:	0f 92       	push	r0
    1658:	0f b6       	in	r0, 0x3f	; 63
    165a:	0f 92       	push	r0
    165c:	11 24       	eor	r1, r1
    165e:	2f 93       	push	r18
    1660:	3f 93       	push	r19
    1662:	4f 93       	push	r20
    1664:	5f 93       	push	r21
    1666:	6f 93       	push	r22
    1668:	7f 93       	push	r23
    166a:	8f 93       	push	r24
    166c:	9f 93       	push	r25
    166e:	af 93       	push	r26
    1670:	bf 93       	push	r27
    1672:	ef 93       	push	r30
    1674:	ff 93       	push	r31
    1676:	e0 91 a2 01 	lds	r30, 0x01A2
    167a:	f0 91 a3 01 	lds	r31, 0x01A3
    167e:	30 97       	sbiw	r30, 0x00	; 0
    1680:	09 f0       	breq	.+2      	; 0x1684 <__vector_9+0x30>
    1682:	09 95       	icall
    1684:	ff 91       	pop	r31
    1686:	ef 91       	pop	r30
    1688:	bf 91       	pop	r27
    168a:	af 91       	pop	r26
    168c:	9f 91       	pop	r25
    168e:	8f 91       	pop	r24
    1690:	7f 91       	pop	r23
    1692:	6f 91       	pop	r22
    1694:	5f 91       	pop	r21
    1696:	4f 91       	pop	r20
    1698:	3f 91       	pop	r19
    169a:	2f 91       	pop	r18
    169c:	0f 90       	pop	r0
    169e:	0f be       	out	0x3f, r0	; 63
    16a0:	0f 90       	pop	r0
    16a2:	1f 90       	pop	r1
    16a4:	18 95       	reti

000016a6 <__vector_10>:
    16a6:	1f 92       	push	r1
    16a8:	0f 92       	push	r0
    16aa:	0f b6       	in	r0, 0x3f	; 63
    16ac:	0f 92       	push	r0
    16ae:	11 24       	eor	r1, r1
    16b0:	2f 93       	push	r18
    16b2:	3f 93       	push	r19
    16b4:	4f 93       	push	r20
    16b6:	5f 93       	push	r21
    16b8:	6f 93       	push	r22
    16ba:	7f 93       	push	r23
    16bc:	8f 93       	push	r24
    16be:	9f 93       	push	r25
    16c0:	af 93       	push	r26
    16c2:	bf 93       	push	r27
    16c4:	ef 93       	push	r30
    16c6:	ff 93       	push	r31
    16c8:	e0 91 a4 01 	lds	r30, 0x01A4
    16cc:	f0 91 a5 01 	lds	r31, 0x01A5
    16d0:	30 97       	sbiw	r30, 0x00	; 0
    16d2:	09 f0       	breq	.+2      	; 0x16d6 <__vector_10+0x30>
    16d4:	09 95       	icall
    16d6:	ff 91       	pop	r31
    16d8:	ef 91       	pop	r30
    16da:	bf 91       	pop	r27
    16dc:	af 91       	pop	r26
    16de:	9f 91       	pop	r25
    16e0:	8f 91       	pop	r24
    16e2:	7f 91       	pop	r23
    16e4:	6f 91       	pop	r22
    16e6:	5f 91       	pop	r21
    16e8:	4f 91       	pop	r20
    16ea:	3f 91       	pop	r19
    16ec:	2f 91       	pop	r18
    16ee:	0f 90       	pop	r0
    16f0:	0f be       	out	0x3f, r0	; 63
    16f2:	0f 90       	pop	r0
    16f4:	1f 90       	pop	r1
    16f6:	18 95       	reti

000016f8 <__vector_11>:
    16f8:	1f 92       	push	r1
    16fa:	0f 92       	push	r0
    16fc:	0f b6       	in	r0, 0x3f	; 63
    16fe:	0f 92       	push	r0
    1700:	11 24       	eor	r1, r1
    1702:	2f 93       	push	r18
    1704:	3f 93       	push	r19
    1706:	4f 93       	push	r20
    1708:	5f 93       	push	r21
    170a:	6f 93       	push	r22
    170c:	7f 93       	push	r23
    170e:	8f 93       	push	r24
    1710:	9f 93       	push	r25
    1712:	af 93       	push	r26
    1714:	bf 93       	push	r27
    1716:	ef 93       	push	r30
    1718:	ff 93       	push	r31
    171a:	e0 91 a6 01 	lds	r30, 0x01A6
    171e:	f0 91 a7 01 	lds	r31, 0x01A7
    1722:	30 97       	sbiw	r30, 0x00	; 0
    1724:	09 f0       	breq	.+2      	; 0x1728 <__vector_11+0x30>
    1726:	09 95       	icall
    1728:	ff 91       	pop	r31
    172a:	ef 91       	pop	r30
    172c:	bf 91       	pop	r27
    172e:	af 91       	pop	r26
    1730:	9f 91       	pop	r25
    1732:	8f 91       	pop	r24
    1734:	7f 91       	pop	r23
    1736:	6f 91       	pop	r22
    1738:	5f 91       	pop	r21
    173a:	4f 91       	pop	r20
    173c:	3f 91       	pop	r19
    173e:	2f 91       	pop	r18
    1740:	0f 90       	pop	r0
    1742:	0f be       	out	0x3f, r0	; 63
    1744:	0f 90       	pop	r0
    1746:	1f 90       	pop	r1
    1748:	18 95       	reti

0000174a <__vector_13>:
    174a:	1f 92       	push	r1
    174c:	0f 92       	push	r0
    174e:	0f b6       	in	r0, 0x3f	; 63
    1750:	0f 92       	push	r0
    1752:	11 24       	eor	r1, r1
    1754:	2f 93       	push	r18
    1756:	3f 93       	push	r19
    1758:	4f 93       	push	r20
    175a:	5f 93       	push	r21
    175c:	6f 93       	push	r22
    175e:	7f 93       	push	r23
    1760:	8f 93       	push	r24
    1762:	9f 93       	push	r25
    1764:	af 93       	push	r26
    1766:	bf 93       	push	r27
    1768:	ef 93       	push	r30
    176a:	ff 93       	push	r31
    176c:	e0 91 aa 01 	lds	r30, 0x01AA
    1770:	f0 91 ab 01 	lds	r31, 0x01AB
    1774:	30 97       	sbiw	r30, 0x00	; 0
    1776:	09 f0       	breq	.+2      	; 0x177a <__vector_13+0x30>
    1778:	09 95       	icall
    177a:	ff 91       	pop	r31
    177c:	ef 91       	pop	r30
    177e:	bf 91       	pop	r27
    1780:	af 91       	pop	r26
    1782:	9f 91       	pop	r25
    1784:	8f 91       	pop	r24
    1786:	7f 91       	pop	r23
    1788:	6f 91       	pop	r22
    178a:	5f 91       	pop	r21
    178c:	4f 91       	pop	r20
    178e:	3f 91       	pop	r19
    1790:	2f 91       	pop	r18
    1792:	0f 90       	pop	r0
    1794:	0f be       	out	0x3f, r0	; 63
    1796:	0f 90       	pop	r0
    1798:	1f 90       	pop	r1
    179a:	18 95       	reti

0000179c <__vector_14>:
    179c:	1f 92       	push	r1
    179e:	0f 92       	push	r0
    17a0:	0f b6       	in	r0, 0x3f	; 63
    17a2:	0f 92       	push	r0
    17a4:	11 24       	eor	r1, r1
    17a6:	2f 93       	push	r18
    17a8:	3f 93       	push	r19
    17aa:	4f 93       	push	r20
    17ac:	5f 93       	push	r21
    17ae:	6f 93       	push	r22
    17b0:	7f 93       	push	r23
    17b2:	8f 93       	push	r24
    17b4:	9f 93       	push	r25
    17b6:	af 93       	push	r26
    17b8:	bf 93       	push	r27
    17ba:	ef 93       	push	r30
    17bc:	ff 93       	push	r31
    17be:	e0 91 ac 01 	lds	r30, 0x01AC
    17c2:	f0 91 ad 01 	lds	r31, 0x01AD
    17c6:	30 97       	sbiw	r30, 0x00	; 0
    17c8:	09 f0       	breq	.+2      	; 0x17cc <__vector_14+0x30>
    17ca:	09 95       	icall
    17cc:	ff 91       	pop	r31
    17ce:	ef 91       	pop	r30
    17d0:	bf 91       	pop	r27
    17d2:	af 91       	pop	r26
    17d4:	9f 91       	pop	r25
    17d6:	8f 91       	pop	r24
    17d8:	7f 91       	pop	r23
    17da:	6f 91       	pop	r22
    17dc:	5f 91       	pop	r21
    17de:	4f 91       	pop	r20
    17e0:	3f 91       	pop	r19
    17e2:	2f 91       	pop	r18
    17e4:	0f 90       	pop	r0
    17e6:	0f be       	out	0x3f, r0	; 63
    17e8:	0f 90       	pop	r0
    17ea:	1f 90       	pop	r1
    17ec:	18 95       	reti

000017ee <__vector_12>:
    17ee:	1f 92       	push	r1
    17f0:	0f 92       	push	r0
    17f2:	0f b6       	in	r0, 0x3f	; 63
    17f4:	0f 92       	push	r0
    17f6:	11 24       	eor	r1, r1
    17f8:	2f 93       	push	r18
    17fa:	3f 93       	push	r19
    17fc:	4f 93       	push	r20
    17fe:	5f 93       	push	r21
    1800:	6f 93       	push	r22
    1802:	7f 93       	push	r23
    1804:	8f 93       	push	r24
    1806:	9f 93       	push	r25
    1808:	af 93       	push	r26
    180a:	bf 93       	push	r27
    180c:	ef 93       	push	r30
    180e:	ff 93       	push	r31
    1810:	e0 91 a8 01 	lds	r30, 0x01A8
    1814:	f0 91 a9 01 	lds	r31, 0x01A9
    1818:	30 97       	sbiw	r30, 0x00	; 0
    181a:	09 f0       	breq	.+2      	; 0x181e <__vector_12+0x30>
    181c:	09 95       	icall
    181e:	ff 91       	pop	r31
    1820:	ef 91       	pop	r30
    1822:	bf 91       	pop	r27
    1824:	af 91       	pop	r26
    1826:	9f 91       	pop	r25
    1828:	8f 91       	pop	r24
    182a:	7f 91       	pop	r23
    182c:	6f 91       	pop	r22
    182e:	5f 91       	pop	r21
    1830:	4f 91       	pop	r20
    1832:	3f 91       	pop	r19
    1834:	2f 91       	pop	r18
    1836:	0f 90       	pop	r0
    1838:	0f be       	out	0x3f, r0	; 63
    183a:	0f 90       	pop	r0
    183c:	1f 90       	pop	r1
    183e:	18 95       	reti

00001840 <__vector_15>:
    1840:	1f 92       	push	r1
    1842:	0f 92       	push	r0
    1844:	0f b6       	in	r0, 0x3f	; 63
    1846:	0f 92       	push	r0
    1848:	11 24       	eor	r1, r1
    184a:	2f 93       	push	r18
    184c:	3f 93       	push	r19
    184e:	4f 93       	push	r20
    1850:	5f 93       	push	r21
    1852:	6f 93       	push	r22
    1854:	7f 93       	push	r23
    1856:	8f 93       	push	r24
    1858:	9f 93       	push	r25
    185a:	af 93       	push	r26
    185c:	bf 93       	push	r27
    185e:	ef 93       	push	r30
    1860:	ff 93       	push	r31
    1862:	e0 91 ae 01 	lds	r30, 0x01AE
    1866:	f0 91 af 01 	lds	r31, 0x01AF
    186a:	30 97       	sbiw	r30, 0x00	; 0
    186c:	09 f0       	breq	.+2      	; 0x1870 <__vector_15+0x30>
    186e:	09 95       	icall
    1870:	ff 91       	pop	r31
    1872:	ef 91       	pop	r30
    1874:	bf 91       	pop	r27
    1876:	af 91       	pop	r26
    1878:	9f 91       	pop	r25
    187a:	8f 91       	pop	r24
    187c:	7f 91       	pop	r23
    187e:	6f 91       	pop	r22
    1880:	5f 91       	pop	r21
    1882:	4f 91       	pop	r20
    1884:	3f 91       	pop	r19
    1886:	2f 91       	pop	r18
    1888:	0f 90       	pop	r0
    188a:	0f be       	out	0x3f, r0	; 63
    188c:	0f 90       	pop	r0
    188e:	1f 90       	pop	r1
    1890:	18 95       	reti

00001892 <__vector_4>:
    1892:	1f 92       	push	r1
    1894:	0f 92       	push	r0
    1896:	0f b6       	in	r0, 0x3f	; 63
    1898:	0f 92       	push	r0
    189a:	11 24       	eor	r1, r1
    189c:	2f 93       	push	r18
    189e:	3f 93       	push	r19
    18a0:	4f 93       	push	r20
    18a2:	5f 93       	push	r21
    18a4:	6f 93       	push	r22
    18a6:	7f 93       	push	r23
    18a8:	8f 93       	push	r24
    18aa:	9f 93       	push	r25
    18ac:	af 93       	push	r26
    18ae:	bf 93       	push	r27
    18b0:	ef 93       	push	r30
    18b2:	ff 93       	push	r31
    18b4:	e0 91 98 01 	lds	r30, 0x0198
    18b8:	f0 91 99 01 	lds	r31, 0x0199
    18bc:	30 97       	sbiw	r30, 0x00	; 0
    18be:	09 f0       	breq	.+2      	; 0x18c2 <__vector_4+0x30>
    18c0:	09 95       	icall
    18c2:	ff 91       	pop	r31
    18c4:	ef 91       	pop	r30
    18c6:	bf 91       	pop	r27
    18c8:	af 91       	pop	r26
    18ca:	9f 91       	pop	r25
    18cc:	8f 91       	pop	r24
    18ce:	7f 91       	pop	r23
    18d0:	6f 91       	pop	r22
    18d2:	5f 91       	pop	r21
    18d4:	4f 91       	pop	r20
    18d6:	3f 91       	pop	r19
    18d8:	2f 91       	pop	r18
    18da:	0f 90       	pop	r0
    18dc:	0f be       	out	0x3f, r0	; 63
    18de:	0f 90       	pop	r0
    18e0:	1f 90       	pop	r1
    18e2:	18 95       	reti

000018e4 <__vector_5>:
    18e4:	1f 92       	push	r1
    18e6:	0f 92       	push	r0
    18e8:	0f b6       	in	r0, 0x3f	; 63
    18ea:	0f 92       	push	r0
    18ec:	11 24       	eor	r1, r1
    18ee:	2f 93       	push	r18
    18f0:	3f 93       	push	r19
    18f2:	4f 93       	push	r20
    18f4:	5f 93       	push	r21
    18f6:	6f 93       	push	r22
    18f8:	7f 93       	push	r23
    18fa:	8f 93       	push	r24
    18fc:	9f 93       	push	r25
    18fe:	af 93       	push	r26
    1900:	bf 93       	push	r27
    1902:	ef 93       	push	r30
    1904:	ff 93       	push	r31
    1906:	e0 91 9a 01 	lds	r30, 0x019A
    190a:	f0 91 9b 01 	lds	r31, 0x019B
    190e:	30 97       	sbiw	r30, 0x00	; 0
    1910:	09 f0       	breq	.+2      	; 0x1914 <__vector_5+0x30>
    1912:	09 95       	icall
    1914:	ff 91       	pop	r31
    1916:	ef 91       	pop	r30
    1918:	bf 91       	pop	r27
    191a:	af 91       	pop	r26
    191c:	9f 91       	pop	r25
    191e:	8f 91       	pop	r24
    1920:	7f 91       	pop	r23
    1922:	6f 91       	pop	r22
    1924:	5f 91       	pop	r21
    1926:	4f 91       	pop	r20
    1928:	3f 91       	pop	r19
    192a:	2f 91       	pop	r18
    192c:	0f 90       	pop	r0
    192e:	0f be       	out	0x3f, r0	; 63
    1930:	0f 90       	pop	r0
    1932:	1f 90       	pop	r1
    1934:	18 95       	reti

00001936 <__vector_6>:
    1936:	1f 92       	push	r1
    1938:	0f 92       	push	r0
    193a:	0f b6       	in	r0, 0x3f	; 63
    193c:	0f 92       	push	r0
    193e:	11 24       	eor	r1, r1
    1940:	2f 93       	push	r18
    1942:	3f 93       	push	r19
    1944:	4f 93       	push	r20
    1946:	5f 93       	push	r21
    1948:	6f 93       	push	r22
    194a:	7f 93       	push	r23
    194c:	8f 93       	push	r24
    194e:	9f 93       	push	r25
    1950:	af 93       	push	r26
    1952:	bf 93       	push	r27
    1954:	ef 93       	push	r30
    1956:	ff 93       	push	r31
    1958:	e0 91 9c 01 	lds	r30, 0x019C
    195c:	f0 91 9d 01 	lds	r31, 0x019D
    1960:	30 97       	sbiw	r30, 0x00	; 0
    1962:	09 f0       	breq	.+2      	; 0x1966 <__vector_6+0x30>
    1964:	09 95       	icall
    1966:	ff 91       	pop	r31
    1968:	ef 91       	pop	r30
    196a:	bf 91       	pop	r27
    196c:	af 91       	pop	r26
    196e:	9f 91       	pop	r25
    1970:	8f 91       	pop	r24
    1972:	7f 91       	pop	r23
    1974:	6f 91       	pop	r22
    1976:	5f 91       	pop	r21
    1978:	4f 91       	pop	r20
    197a:	3f 91       	pop	r19
    197c:	2f 91       	pop	r18
    197e:	0f 90       	pop	r0
    1980:	0f be       	out	0x3f, r0	; 63
    1982:	0f 90       	pop	r0
    1984:	1f 90       	pop	r1
    1986:	18 95       	reti

00001988 <__vector_7>:
    1988:	1f 92       	push	r1
    198a:	0f 92       	push	r0
    198c:	0f b6       	in	r0, 0x3f	; 63
    198e:	0f 92       	push	r0
    1990:	11 24       	eor	r1, r1
    1992:	2f 93       	push	r18
    1994:	3f 93       	push	r19
    1996:	4f 93       	push	r20
    1998:	5f 93       	push	r21
    199a:	6f 93       	push	r22
    199c:	7f 93       	push	r23
    199e:	8f 93       	push	r24
    19a0:	9f 93       	push	r25
    19a2:	af 93       	push	r26
    19a4:	bf 93       	push	r27
    19a6:	ef 93       	push	r30
    19a8:	ff 93       	push	r31
    19aa:	e0 91 9e 01 	lds	r30, 0x019E
    19ae:	f0 91 9f 01 	lds	r31, 0x019F
    19b2:	30 97       	sbiw	r30, 0x00	; 0
    19b4:	09 f0       	breq	.+2      	; 0x19b8 <__vector_7+0x30>
    19b6:	09 95       	icall
    19b8:	ff 91       	pop	r31
    19ba:	ef 91       	pop	r30
    19bc:	bf 91       	pop	r27
    19be:	af 91       	pop	r26
    19c0:	9f 91       	pop	r25
    19c2:	8f 91       	pop	r24
    19c4:	7f 91       	pop	r23
    19c6:	6f 91       	pop	r22
    19c8:	5f 91       	pop	r21
    19ca:	4f 91       	pop	r20
    19cc:	3f 91       	pop	r19
    19ce:	2f 91       	pop	r18
    19d0:	0f 90       	pop	r0
    19d2:	0f be       	out	0x3f, r0	; 63
    19d4:	0f 90       	pop	r0
    19d6:	1f 90       	pop	r1
    19d8:	18 95       	reti

000019da <ISR_attach>:
    19da:	e8 2f       	mov	r30, r24
    19dc:	80 32       	cpi	r24, 0x20	; 32
    19de:	68 f4       	brcc	.+26     	; 0x19fa <ISR_attach+0x20>
    19e0:	80 51       	subi	r24, 0x10	; 16
    19e2:	83 30       	cpi	r24, 0x03	; 3
    19e4:	50 f0       	brcs	.+20     	; 0x19fa <ISR_attach+0x20>
    19e6:	f0 e0       	ldi	r31, 0x00	; 0
    19e8:	ee 0f       	add	r30, r30
    19ea:	ff 1f       	adc	r31, r31
    19ec:	e0 57       	subi	r30, 0x70	; 112
    19ee:	fe 4f       	sbci	r31, 0xFE	; 254
    19f0:	20 81       	ld	r18, Z
    19f2:	31 81       	ldd	r19, Z+1	; 0x01
    19f4:	71 83       	std	Z+1, r23	; 0x01
    19f6:	60 83       	st	Z, r22
    19f8:	02 c0       	rjmp	.+4      	; 0x19fe <ISR_attach+0x24>
    19fa:	20 e0       	ldi	r18, 0x00	; 0
    19fc:	30 e0       	ldi	r19, 0x00	; 0
    19fe:	c9 01       	movw	r24, r18
    1a00:	08 95       	ret

00001a02 <ISR_open>:
    1a02:	80 e1       	ldi	r24, 0x10	; 16
    1a04:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    1a08:	88 23       	and	r24, r24
    1a0a:	61 f4       	brne	.+24     	; 0x1a24 <ISR_open+0x22>
    1a0c:	e0 e9       	ldi	r30, 0x90	; 144
    1a0e:	f1 e0       	ldi	r31, 0x01	; 1
    1a10:	11 92       	st	Z+, r1
    1a12:	11 92       	st	Z+, r1
    1a14:	81 e0       	ldi	r24, 0x01	; 1
    1a16:	e0 3d       	cpi	r30, 0xD0	; 208
    1a18:	f8 07       	cpc	r31, r24
    1a1a:	d1 f7       	brne	.-12     	; 0x1a10 <ISR_open+0xe>
    1a1c:	80 e1       	ldi	r24, 0x10	; 16
    1a1e:	61 e0       	ldi	r22, 0x01	; 1
    1a20:	0e 94 7e 08 	call	0x10fc	; 0x10fc <SYS_set_state>
    1a24:	80 e1       	ldi	r24, 0x10	; 16
    1a26:	91 e0       	ldi	r25, 0x01	; 1
    1a28:	08 95       	ret

00001a2a <__LCD_init>:
    1a2a:	23 9a       	sbi	0x04, 3	; 4
    1a2c:	08 95       	ret

00001a2e <__LCD_putchar>:
    1a2e:	ff 92       	push	r15
    1a30:	0f 93       	push	r16
    1a32:	1f 93       	push	r17
    1a34:	cf 93       	push	r28
    1a36:	df 93       	push	r29
    1a38:	f8 2e       	mov	r15, r24
    1a3a:	8a e0       	ldi	r24, 0x0A	; 10
    1a3c:	f8 16       	cp	r15, r24
    1a3e:	b1 f0       	breq	.+44     	; 0x1a6c <__LCD_putchar+0x3e>
    1a40:	8f 15       	cp	r24, r15
    1a42:	48 f0       	brcs	.+18     	; 0x1a56 <__LCD_putchar+0x28>
    1a44:	e8 e0       	ldi	r30, 0x08	; 8
    1a46:	fe 16       	cp	r15, r30
    1a48:	b9 f1       	breq	.+110    	; 0x1ab8 <__LCD_putchar+0x8a>
    1a4a:	ef 15       	cp	r30, r15
    1a4c:	38 f1       	brcs	.+78     	; 0x1a9c <__LCD_putchar+0x6e>
    1a4e:	f7 e0       	ldi	r31, 0x07	; 7
    1a50:	ff 16       	cp	r15, r31
    1a52:	51 f4       	brne	.+20     	; 0x1a68 <__LCD_putchar+0x3a>
    1a54:	3b c0       	rjmp	.+118    	; 0x1acc <__LCD_putchar+0x9e>
    1a56:	8d e0       	ldi	r24, 0x0D	; 13
    1a58:	f8 16       	cp	r15, r24
    1a5a:	59 f0       	breq	.+22     	; 0x1a72 <__LCD_putchar+0x44>
    1a5c:	eb e1       	ldi	r30, 0x1B	; 27
    1a5e:	fe 16       	cp	r15, r30
    1a60:	89 f0       	breq	.+34     	; 0x1a84 <__LCD_putchar+0x56>
    1a62:	fc e0       	ldi	r31, 0x0C	; 12
    1a64:	ff 16       	cp	r15, r31
    1a66:	41 f0       	breq	.+16     	; 0x1a78 <__LCD_putchar+0x4a>
    1a68:	01 e0       	ldi	r16, 0x01	; 1
    1a6a:	41 c0       	rjmp	.+130    	; 0x1aee <__LCD_putchar+0xc0>
    1a6c:	10 92 10 02 	sts	0x0210, r1
    1a70:	03 c0       	rjmp	.+6      	; 0x1a78 <__LCD_putchar+0x4a>
    1a72:	10 92 10 02 	sts	0x0210, r1
    1a76:	3a c0       	rjmp	.+116    	; 0x1aec <__LCD_putchar+0xbe>
    1a78:	80 91 11 02 	lds	r24, 0x0211
    1a7c:	81 50       	subi	r24, 0x01	; 1
    1a7e:	80 93 11 02 	sts	0x0211, r24
    1a82:	34 c0       	rjmp	.+104    	; 0x1aec <__LCD_putchar+0xbe>
    1a84:	0e 94 1d 06 	call	0xc3a	; 0xc3a <LCD_clear>
    1a88:	14 c0       	rjmp	.+40     	; 0x1ab2 <__LCD_putchar+0x84>
    1a8a:	80 e0       	ldi	r24, 0x00	; 0
    1a8c:	61 e0       	ldi	r22, 0x01	; 1
    1a8e:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
    1a92:	80 91 10 02 	lds	r24, 0x0210
    1a96:	8f 5f       	subi	r24, 0xFF	; 255
    1a98:	80 93 10 02 	sts	0x0210, r24
    1a9c:	80 91 10 02 	lds	r24, 0x0210
    1aa0:	87 ff       	sbrs	r24, 7
    1aa2:	f3 cf       	rjmp	.-26     	; 0x1a8a <__LCD_putchar+0x5c>
    1aa4:	10 92 10 02 	sts	0x0210, r1
    1aa8:	80 91 11 02 	lds	r24, 0x0211
    1aac:	81 50       	subi	r24, 0x01	; 1
    1aae:	80 93 11 02 	sts	0x0211, r24
    1ab2:	00 e0       	ldi	r16, 0x00	; 0
    1ab4:	11 e0       	ldi	r17, 0x01	; 1
    1ab6:	1c c0       	rjmp	.+56     	; 0x1af0 <__LCD_putchar+0xc2>
    1ab8:	80 91 10 02 	lds	r24, 0x0210
    1abc:	88 23       	and	r24, r24
    1abe:	b1 f0       	breq	.+44     	; 0x1aec <__LCD_putchar+0xbe>
    1ac0:	80 91 10 02 	lds	r24, 0x0210
    1ac4:	86 50       	subi	r24, 0x06	; 6
    1ac6:	80 93 10 02 	sts	0x0210, r24
    1aca:	10 c0       	rjmp	.+32     	; 0x1aec <__LCD_putchar+0xbe>
    1acc:	81 e0       	ldi	r24, 0x01	; 1
    1ace:	0e 94 29 08 	call	0x1052	; 0x1052 <SPKR_open>
    1ad2:	64 ef       	ldi	r22, 0xF4	; 244
    1ad4:	71 e0       	ldi	r23, 0x01	; 1
    1ad6:	80 e0       	ldi	r24, 0x00	; 0
    1ad8:	90 e0       	ldi	r25, 0x00	; 0
    1ada:	4d e7       	ldi	r20, 0x7D	; 125
    1adc:	50 e0       	ldi	r21, 0x00	; 0
    1ade:	24 e6       	ldi	r18, 0x64	; 100
    1ae0:	30 e0       	ldi	r19, 0x00	; 0
    1ae2:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <SPKR_play_beep>
    1ae6:	81 e0       	ldi	r24, 0x01	; 1
    1ae8:	0e 94 eb 0e 	call	0x1dd6	; 0x1dd6 <SPKR_close>
    1aec:	00 e0       	ldi	r16, 0x00	; 0
    1aee:	10 e0       	ldi	r17, 0x00	; 0
    1af0:	80 91 11 02 	lds	r24, 0x0211
    1af4:	60 91 10 02 	lds	r22, 0x0210
    1af8:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <LCD_set_PGC_addr>
    1afc:	00 23       	and	r16, r16
    1afe:	51 f1       	breq	.+84     	; 0x1b54 <__LCD_putchar+0x126>
    1b00:	85 e0       	ldi	r24, 0x05	; 5
    1b02:	f8 9e       	mul	r15, r24
    1b04:	c0 01       	movw	r24, r0
    1b06:	11 24       	eor	r1, r1
    1b08:	ec 01       	movw	r28, r24
    1b0a:	c3 55       	subi	r28, 0x53	; 83
    1b0c:	df 4f       	sbci	r29, 0xFF	; 255
    1b0e:	8c 01       	movw	r16, r24
    1b10:	0e 54       	subi	r16, 0x4E	; 78
    1b12:	1f 4f       	sbci	r17, 0xFF	; 255
    1b14:	fe 01       	movw	r30, r28
    1b16:	84 91       	lpm	r24, Z+
    1b18:	61 e0       	ldi	r22, 0x01	; 1
    1b1a:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
    1b1e:	21 96       	adiw	r28, 0x01	; 1
    1b20:	c0 17       	cp	r28, r16
    1b22:	d1 07       	cpc	r29, r17
    1b24:	b9 f7       	brne	.-18     	; 0x1b14 <__LCD_putchar+0xe6>
    1b26:	80 e0       	ldi	r24, 0x00	; 0
    1b28:	61 e0       	ldi	r22, 0x01	; 1
    1b2a:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <LCD_write>
    1b2e:	80 91 10 02 	lds	r24, 0x0210
    1b32:	8a 5f       	subi	r24, 0xFA	; 250
    1b34:	80 93 10 02 	sts	0x0210, r24
    1b38:	80 91 10 02 	lds	r24, 0x0210
    1b3c:	90 e0       	ldi	r25, 0x00	; 0
    1b3e:	8c 37       	cpi	r24, 0x7C	; 124
    1b40:	91 05       	cpc	r25, r1
    1b42:	3c f0       	brlt	.+14     	; 0x1b52 <__LCD_putchar+0x124>
    1b44:	10 92 10 02 	sts	0x0210, r1
    1b48:	80 91 11 02 	lds	r24, 0x0211
    1b4c:	81 50       	subi	r24, 0x01	; 1
    1b4e:	80 93 11 02 	sts	0x0211, r24
    1b52:	11 e0       	ldi	r17, 0x01	; 1
    1b54:	80 91 11 02 	lds	r24, 0x0211
    1b58:	83 70       	andi	r24, 0x03	; 3
    1b5a:	80 93 11 02 	sts	0x0211, r24
    1b5e:	11 30       	cpi	r17, 0x01	; 1
    1b60:	59 f4       	brne	.+22     	; 0x1b78 <__LCD_putchar+0x14a>
    1b62:	80 91 12 02 	lds	r24, 0x0212
    1b66:	81 30       	cpi	r24, 0x01	; 1
    1b68:	39 f4       	brne	.+14     	; 0x1b78 <__LCD_putchar+0x14a>
    1b6a:	e0 91 13 02 	lds	r30, 0x0213
    1b6e:	f0 91 14 02 	lds	r31, 0x0214
    1b72:	30 97       	sbiw	r30, 0x00	; 0
    1b74:	09 f0       	breq	.+2      	; 0x1b78 <__LCD_putchar+0x14a>
    1b76:	09 95       	icall
    1b78:	80 e0       	ldi	r24, 0x00	; 0
    1b7a:	90 e0       	ldi	r25, 0x00	; 0
    1b7c:	df 91       	pop	r29
    1b7e:	cf 91       	pop	r28
    1b80:	1f 91       	pop	r17
    1b82:	0f 91       	pop	r16
    1b84:	ff 90       	pop	r15
    1b86:	08 95       	ret

00001b88 <__LED_clr_pattern>:
    1b88:	85 fd       	sbrc	r24, 5
    1b8a:	5d 98       	cbi	0x0b, 5	; 11
    1b8c:	86 fd       	sbrc	r24, 6
    1b8e:	5e 98       	cbi	0x0b, 6	; 11
    1b90:	08 95       	ret

00001b92 <__LED_init>:
    1b92:	55 9a       	sbi	0x0a, 5	; 10
    1b94:	56 9a       	sbi	0x0a, 6	; 10
    1b96:	08 95       	ret

00001b98 <__LED_set_pattern>:
    1b98:	85 fd       	sbrc	r24, 5
    1b9a:	5d 9a       	sbi	0x0b, 5	; 11
    1b9c:	86 fd       	sbrc	r24, 6
    1b9e:	5e 9a       	sbi	0x0b, 6	; 11
    1ba0:	08 95       	ret

00001ba2 <ATMEGA_open>:
    1ba2:	80 e0       	ldi	r24, 0x00	; 0
    1ba4:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    1ba8:	88 23       	and	r24, r24
    1baa:	51 f4       	brne	.+20     	; 0x1bc0 <ATMEGA_open+0x1e>
    1bac:	f8 94       	cli
    1bae:	0e 94 76 10 	call	0x20ec	; 0x20ec <__ATMEGA_init>
    1bb2:	81 e0       	ldi	r24, 0x01	; 1
    1bb4:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <ATMEGA_set_clk_mode>
    1bb8:	80 e0       	ldi	r24, 0x00	; 0
    1bba:	61 e0       	ldi	r22, 0x01	; 1
    1bbc:	0e 94 7e 08 	call	0x10fc	; 0x10fc <SYS_set_state>
    1bc0:	80 e0       	ldi	r24, 0x00	; 0
    1bc2:	91 e0       	ldi	r25, 0x01	; 1
    1bc4:	08 95       	ret

00001bc6 <ATMEGA_set_clk_mode>:
    1bc6:	81 30       	cpi	r24, 0x01	; 1
    1bc8:	49 f0       	breq	.+18     	; 0x1bdc <ATMEGA_set_clk_mode+0x16>
    1bca:	f8 94       	cli
    1bcc:	81 30       	cpi	r24, 0x01	; 1
    1bce:	20 f1       	brcs	.+72     	; 0x1c18 <ATMEGA_set_clk_mode+0x52>
    1bd0:	82 30       	cpi	r24, 0x02	; 2
    1bd2:	b1 f0       	breq	.+44     	; 0x1c00 <ATMEGA_set_clk_mode+0x3a>
    1bd4:	83 30       	cpi	r24, 0x03	; 3
    1bd6:	09 f0       	breq	.+2      	; 0x1bda <ATMEGA_set_clk_mode+0x14>
    1bd8:	45 c0       	rjmp	.+138    	; 0x1c64 <ATMEGA_set_clk_mode+0x9e>
    1bda:	17 c0       	rjmp	.+46     	; 0x1c0a <ATMEGA_set_clk_mode+0x44>
    1bdc:	2c 9a       	sbi	0x05, 4	; 5
    1bde:	80 e8       	ldi	r24, 0x80	; 128
    1be0:	80 93 61 00 	sts	0x0061, r24
    1be4:	10 92 61 00 	sts	0x0061, r1
    1be8:	80 e0       	ldi	r24, 0x00	; 0
    1bea:	90 e0       	ldi	r25, 0x00	; 0
    1bec:	00 00       	nop
    1bee:	01 96       	adiw	r24, 0x01	; 1
    1bf0:	88 32       	cpi	r24, 0x28	; 40
    1bf2:	91 05       	cpc	r25, r1
    1bf4:	d9 f7       	brne	.-10     	; 0x1bec <ATMEGA_set_clk_mode+0x26>
    1bf6:	10 92 68 00 	sts	0x0068, r1
    1bfa:	10 92 6b 00 	sts	0x006B, r1
    1bfe:	08 95       	ret
    1c00:	80 e8       	ldi	r24, 0x80	; 128
    1c02:	80 93 61 00 	sts	0x0061, r24
    1c06:	83 e0       	ldi	r24, 0x03	; 3
    1c08:	04 c0       	rjmp	.+8      	; 0x1c12 <ATMEGA_set_clk_mode+0x4c>
    1c0a:	80 e8       	ldi	r24, 0x80	; 128
    1c0c:	80 93 61 00 	sts	0x0061, r24
    1c10:	88 e0       	ldi	r24, 0x08	; 8
    1c12:	80 93 61 00 	sts	0x0061, r24
    1c16:	28 c0       	rjmp	.+80     	; 0x1c68 <ATMEGA_set_clk_mode+0xa2>
    1c18:	80 e0       	ldi	r24, 0x00	; 0
    1c1a:	90 e0       	ldi	r25, 0x00	; 0
    1c1c:	00 00       	nop
    1c1e:	01 96       	adiw	r24, 0x01	; 1
    1c20:	2d e6       	ldi	r18, 0x6D	; 109
    1c22:	80 36       	cpi	r24, 0x60	; 96
    1c24:	92 07       	cpc	r25, r18
    1c26:	d1 f7       	brne	.-12     	; 0x1c1c <ATMEGA_set_clk_mode+0x56>
    1c28:	2c 98       	cbi	0x05, 4	; 5
    1c2a:	80 e0       	ldi	r24, 0x00	; 0
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	00 00       	nop
    1c30:	01 96       	adiw	r24, 0x01	; 1
    1c32:	2d e6       	ldi	r18, 0x6D	; 109
    1c34:	80 36       	cpi	r24, 0x60	; 96
    1c36:	92 07       	cpc	r25, r18
    1c38:	d1 f7       	brne	.-12     	; 0x1c2e <ATMEGA_set_clk_mode+0x68>
    1c3a:	10 92 7a 00 	sts	0x007A, r1
    1c3e:	8f ef       	ldi	r24, 0xFF	; 255
    1c40:	80 93 64 00 	sts	0x0064, r24
    1c44:	80 91 68 00 	lds	r24, 0x0068
    1c48:	81 60       	ori	r24, 0x01	; 1
    1c4a:	80 93 68 00 	sts	0x0068, r24
    1c4e:	80 91 6b 00 	lds	r24, 0x006B
    1c52:	84 60       	ori	r24, 0x04	; 4
    1c54:	80 93 6b 00 	sts	0x006B, r24
    1c58:	78 94       	sei
    1c5a:	83 b7       	in	r24, 0x33	; 51
    1c5c:	81 60       	ori	r24, 0x01	; 1
    1c5e:	83 bf       	out	0x33, r24	; 51
    1c60:	88 95       	sleep
    1c62:	08 95       	ret
    1c64:	82 30       	cpi	r24, 0x02	; 2
    1c66:	08 f0       	brcs	.+2      	; 0x1c6a <ATMEGA_set_clk_mode+0xa4>
    1c68:	78 94       	sei
    1c6a:	08 95       	ret

00001c6c <SPI_open>:
    1c6c:	0f 93       	push	r16
    1c6e:	1f 93       	push	r17
    1c70:	0e 94 a2 10 	call	0x2144	; 0x2144 <__SPI_init>
    1c74:	80 e0       	ldi	r24, 0x00	; 0
    1c76:	61 e9       	ldi	r22, 0x91	; 145
    1c78:	70 e1       	ldi	r23, 0x10	; 16
    1c7a:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <SPI_set_config_func>
    1c7e:	81 e0       	ldi	r24, 0x01	; 1
    1c80:	69 e8       	ldi	r22, 0x89	; 137
    1c82:	70 e1       	ldi	r23, 0x10	; 16
    1c84:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <SPI_set_config_func>
    1c88:	82 e0       	ldi	r24, 0x02	; 2
    1c8a:	61 e8       	ldi	r22, 0x81	; 129
    1c8c:	70 e1       	ldi	r23, 0x10	; 16
    1c8e:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <SPI_set_config_func>
    1c92:	86 e0       	ldi	r24, 0x06	; 6
    1c94:	69 e9       	ldi	r22, 0x99	; 153
    1c96:	70 e1       	ldi	r23, 0x10	; 16
    1c98:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <SPI_set_config_func>
    1c9c:	09 e7       	ldi	r16, 0x79	; 121
    1c9e:	10 e1       	ldi	r17, 0x10	; 16
    1ca0:	83 e0       	ldi	r24, 0x03	; 3
    1ca2:	b8 01       	movw	r22, r16
    1ca4:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <SPI_set_config_func>
    1ca8:	84 e0       	ldi	r24, 0x04	; 4
    1caa:	b8 01       	movw	r22, r16
    1cac:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <SPI_set_config_func>
    1cb0:	85 e0       	ldi	r24, 0x05	; 5
    1cb2:	b8 01       	movw	r22, r16
    1cb4:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <SPI_set_config_func>
    1cb8:	87 e0       	ldi	r24, 0x07	; 7
    1cba:	b8 01       	movw	r22, r16
    1cbc:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <SPI_set_config_func>
    1cc0:	82 e0       	ldi	r24, 0x02	; 2
    1cc2:	61 e0       	ldi	r22, 0x01	; 1
    1cc4:	0e 94 7e 08 	call	0x10fc	; 0x10fc <SYS_set_state>
    1cc8:	8f ef       	ldi	r24, 0xFF	; 255
    1cca:	80 93 15 02 	sts	0x0215, r24
    1cce:	87 e0       	ldi	r24, 0x07	; 7
    1cd0:	0e 94 38 07 	call	0xe70	; 0xe70 <SPI_set_slave_addr>
    1cd4:	82 e0       	ldi	r24, 0x02	; 2
    1cd6:	91 e0       	ldi	r25, 0x01	; 1
    1cd8:	1f 91       	pop	r17
    1cda:	0f 91       	pop	r16
    1cdc:	08 95       	ret

00001cde <SPI_set_config_func>:
    1cde:	e8 2f       	mov	r30, r24
    1ce0:	f0 e0       	ldi	r31, 0x00	; 0
    1ce2:	ee 0f       	add	r30, r30
    1ce4:	ff 1f       	adc	r31, r31
    1ce6:	e0 53       	subi	r30, 0x30	; 48
    1ce8:	fe 4f       	sbci	r31, 0xFE	; 254
    1cea:	71 83       	std	Z+1, r23	; 0x01
    1cec:	60 83       	st	Z, r22
    1cee:	08 95       	ret

00001cf0 <__SPKR_TIMER1_COMPA_vect>:
    1cf0:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <SPKR_clk>
    1cf4:	08 95       	ret

00001cf6 <SPKR_clk>:
    1cf6:	80 91 e2 01 	lds	r24, 0x01E2
    1cfa:	90 91 e3 01 	lds	r25, 0x01E3
    1cfe:	a0 91 e4 01 	lds	r26, 0x01E4
    1d02:	b0 91 e5 01 	lds	r27, 0x01E5
    1d06:	20 91 e6 01 	lds	r18, 0x01E6
    1d0a:	30 91 e7 01 	lds	r19, 0x01E7
    1d0e:	40 91 e8 01 	lds	r20, 0x01E8
    1d12:	50 91 e9 01 	lds	r21, 0x01E9
    1d16:	28 0f       	add	r18, r24
    1d18:	39 1f       	adc	r19, r25
    1d1a:	4a 1f       	adc	r20, r26
    1d1c:	5b 1f       	adc	r21, r27
    1d1e:	20 93 e2 01 	sts	0x01E2, r18
    1d22:	30 93 e3 01 	sts	0x01E3, r19
    1d26:	40 93 e4 01 	sts	0x01E4, r20
    1d2a:	50 93 e5 01 	sts	0x01E5, r21
    1d2e:	80 91 e2 01 	lds	r24, 0x01E2
    1d32:	90 91 e3 01 	lds	r25, 0x01E3
    1d36:	a0 91 e4 01 	lds	r26, 0x01E4
    1d3a:	b0 91 e5 01 	lds	r27, 0x01E5
    1d3e:	88 51       	subi	r24, 0x18	; 24
    1d40:	96 4f       	sbci	r25, 0xF6	; 246
    1d42:	a0 40       	sbci	r26, 0x00	; 0
    1d44:	b0 40       	sbci	r27, 0x00	; 0
    1d46:	bc f0       	brlt	.+46     	; 0x1d76 <SPKR_clk+0x80>
    1d48:	8b b1       	in	r24, 0x0b	; 11
    1d4a:	80 58       	subi	r24, 0x80	; 128
    1d4c:	8b b9       	out	0x0b, r24	; 11
    1d4e:	80 91 e2 01 	lds	r24, 0x01E2
    1d52:	90 91 e3 01 	lds	r25, 0x01E3
    1d56:	a0 91 e4 01 	lds	r26, 0x01E4
    1d5a:	b0 91 e5 01 	lds	r27, 0x01E5
    1d5e:	88 51       	subi	r24, 0x18	; 24
    1d60:	96 4f       	sbci	r25, 0xF6	; 246
    1d62:	a0 40       	sbci	r26, 0x00	; 0
    1d64:	b0 40       	sbci	r27, 0x00	; 0
    1d66:	80 93 e2 01 	sts	0x01E2, r24
    1d6a:	90 93 e3 01 	sts	0x01E3, r25
    1d6e:	a0 93 e4 01 	sts	0x01E4, r26
    1d72:	b0 93 e5 01 	sts	0x01E5, r27
    1d76:	08 95       	ret

00001d78 <__SPKR_close_beep_mode>:
    1d78:	8a e0       	ldi	r24, 0x0A	; 10
    1d7a:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    1d7e:	81 30       	cpi	r24, 0x01	; 1
    1d80:	41 f4       	brne	.+16     	; 0x1d92 <__SPKR_close_beep_mode+0x1a>
    1d82:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <__SPKR_close>
    1d86:	10 92 e1 01 	sts	0x01E1, r1
    1d8a:	8a e0       	ldi	r24, 0x0A	; 10
    1d8c:	60 e0       	ldi	r22, 0x00	; 0
    1d8e:	0e 94 7e 08 	call	0x10fc	; 0x10fc <SYS_set_state>
    1d92:	08 95       	ret

00001d94 <__SPKR_close_tone_mode>:
    1d94:	89 e0       	ldi	r24, 0x09	; 9
    1d96:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    1d9a:	81 30       	cpi	r24, 0x01	; 1
    1d9c:	d9 f4       	brne	.+54     	; 0x1dd4 <__SPKR_close_tone_mode+0x40>
    1d9e:	80 91 e0 01 	lds	r24, 0x01E0
    1da2:	88 23       	and	r24, r24
    1da4:	11 f0       	breq	.+4      	; 0x1daa <__SPKR_close_tone_mode+0x16>
    1da6:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <__SPKR_stop>
    1daa:	82 e0       	ldi	r24, 0x02	; 2
    1dac:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <__SPKR_close>
    1db0:	80 91 ee 01 	lds	r24, 0x01EE
    1db4:	90 91 ef 01 	lds	r25, 0x01EF
    1db8:	00 97       	sbiw	r24, 0x00	; 0
    1dba:	31 f0       	breq	.+12     	; 0x1dc8 <__SPKR_close_tone_mode+0x34>
    1dbc:	0e 94 6e 19 	call	0x32dc	; 0x32dc <free>
    1dc0:	10 92 ef 01 	sts	0x01EF, r1
    1dc4:	10 92 ee 01 	sts	0x01EE, r1
    1dc8:	10 92 e0 01 	sts	0x01E0, r1
    1dcc:	89 e0       	ldi	r24, 0x09	; 9
    1dce:	60 e0       	ldi	r22, 0x00	; 0
    1dd0:	0e 94 7e 08 	call	0x10fc	; 0x10fc <SYS_set_state>
    1dd4:	08 95       	ret

00001dd6 <SPKR_close>:
    1dd6:	81 30       	cpi	r24, 0x01	; 1
    1dd8:	29 f0       	breq	.+10     	; 0x1de4 <SPKR_close+0xe>
    1dda:	82 30       	cpi	r24, 0x02	; 2
    1ddc:	29 f4       	brne	.+10     	; 0x1de8 <SPKR_close+0x12>
    1dde:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <__SPKR_close_tone_mode>
    1de2:	08 95       	ret
    1de4:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <__SPKR_close_beep_mode>
    1de8:	08 95       	ret

00001dea <__SPKR_init>:
    1dea:	98 2f       	mov	r25, r24
    1dec:	80 91 e0 01 	lds	r24, 0x01E0
    1df0:	88 23       	and	r24, r24
    1df2:	31 f4       	brne	.+12     	; 0x1e00 <__SPKR_init+0x16>
    1df4:	80 91 e1 01 	lds	r24, 0x01E1
    1df8:	88 23       	and	r24, r24
    1dfa:	11 f4       	brne	.+4      	; 0x1e00 <__SPKR_init+0x16>
    1dfc:	57 9a       	sbi	0x0a, 7	; 10
    1dfe:	5f 98       	cbi	0x0b, 7	; 11
    1e00:	80 91 e0 01 	lds	r24, 0x01E0
    1e04:	88 23       	and	r24, r24
    1e06:	d1 f4       	brne	.+52     	; 0x1e3c <__SPKR_init+0x52>
    1e08:	92 30       	cpi	r25, 0x02	; 2
    1e0a:	c1 f4       	brne	.+48     	; 0x1e3c <__SPKR_init+0x52>
    1e0c:	10 92 80 00 	sts	0x0080, r1
    1e10:	10 92 81 00 	sts	0x0081, r1
    1e14:	80 91 81 00 	lds	r24, 0x0081
    1e18:	88 60       	ori	r24, 0x08	; 8
    1e1a:	80 93 81 00 	sts	0x0081, r24
    1e1e:	80 91 81 00 	lds	r24, 0x0081
    1e22:	81 60       	ori	r24, 0x01	; 1
    1e24:	80 93 81 00 	sts	0x0081, r24
    1e28:	10 92 85 00 	sts	0x0085, r1
    1e2c:	10 92 84 00 	sts	0x0084, r1
    1e30:	81 e0       	ldi	r24, 0x01	; 1
    1e32:	80 93 89 00 	sts	0x0089, r24
    1e36:	80 e9       	ldi	r24, 0x90	; 144
    1e38:	80 93 88 00 	sts	0x0088, r24
    1e3c:	08 95       	ret

00001e3e <SPKR_play_beep>:
    1e3e:	8f 92       	push	r8
    1e40:	9f 92       	push	r9
    1e42:	af 92       	push	r10
    1e44:	bf 92       	push	r11
    1e46:	cf 92       	push	r12
    1e48:	df 92       	push	r13
    1e4a:	ef 92       	push	r14
    1e4c:	ff 92       	push	r15
    1e4e:	0f 93       	push	r16
    1e50:	1f 93       	push	r17
    1e52:	cf 93       	push	r28
    1e54:	df 93       	push	r29
    1e56:	4b 01       	movw	r8, r22
    1e58:	5c 01       	movw	r10, r24
    1e5a:	ea 01       	movw	r28, r20
    1e5c:	b9 01       	movw	r22, r18
    1e5e:	21 15       	cp	r18, r1
    1e60:	31 05       	cpc	r19, r1
    1e62:	39 f1       	breq	.+78     	; 0x1eb2 <SPKR_play_beep+0x74>
    1e64:	9e 01       	movw	r18, r28
    1e66:	44 27       	eor	r20, r20
    1e68:	37 fd       	sbrc	r19, 7
    1e6a:	40 95       	com	r20
    1e6c:	54 2f       	mov	r21, r20
    1e6e:	65 36       	cpi	r22, 0x65	; 101
    1e70:	71 05       	cpc	r23, r1
    1e72:	10 f0       	brcs	.+4      	; 0x1e78 <SPKR_play_beep+0x3a>
    1e74:	64 e6       	ldi	r22, 0x64	; 100
    1e76:	70 e0       	ldi	r23, 0x00	; 0
    1e78:	80 e0       	ldi	r24, 0x00	; 0
    1e7a:	90 e0       	ldi	r25, 0x00	; 0
    1e7c:	0e 94 80 18 	call	0x3100	; 0x3100 <__mulsi3>
    1e80:	24 e6       	ldi	r18, 0x64	; 100
    1e82:	30 e0       	ldi	r19, 0x00	; 0
    1e84:	40 e0       	ldi	r20, 0x00	; 0
    1e86:	50 e0       	ldi	r21, 0x00	; 0
    1e88:	0e 94 9f 18 	call	0x313e	; 0x313e <__udivmodsi4>
    1e8c:	79 01       	movw	r14, r18
    1e8e:	8a 01       	movw	r16, r20
    1e90:	c5 01       	movw	r24, r10
    1e92:	b4 01       	movw	r22, r8
    1e94:	0e 94 bb 10 	call	0x2176	; 0x2176 <SPKR_beep>
    1e98:	c7 01       	movw	r24, r14
    1e9a:	0e 94 62 09 	call	0x12c4	; 0x12c4 <TMRSRVC_delay>
    1e9e:	60 e0       	ldi	r22, 0x00	; 0
    1ea0:	70 e0       	ldi	r23, 0x00	; 0
    1ea2:	80 e0       	ldi	r24, 0x00	; 0
    1ea4:	90 e0       	ldi	r25, 0x00	; 0
    1ea6:	0e 94 bb 10 	call	0x2176	; 0x2176 <SPKR_beep>
    1eaa:	ce 01       	movw	r24, r28
    1eac:	8e 19       	sub	r24, r14
    1eae:	9f 09       	sbc	r25, r15
    1eb0:	04 c0       	rjmp	.+8      	; 0x1eba <SPKR_play_beep+0x7c>
    1eb2:	41 15       	cp	r20, r1
    1eb4:	51 05       	cpc	r21, r1
    1eb6:	19 f0       	breq	.+6      	; 0x1ebe <SPKR_play_beep+0x80>
    1eb8:	ca 01       	movw	r24, r20
    1eba:	0e 94 62 09 	call	0x12c4	; 0x12c4 <TMRSRVC_delay>
    1ebe:	df 91       	pop	r29
    1ec0:	cf 91       	pop	r28
    1ec2:	1f 91       	pop	r17
    1ec4:	0f 91       	pop	r16
    1ec6:	ff 90       	pop	r15
    1ec8:	ef 90       	pop	r14
    1eca:	df 90       	pop	r13
    1ecc:	cf 90       	pop	r12
    1ece:	bf 90       	pop	r11
    1ed0:	af 90       	pop	r10
    1ed2:	9f 90       	pop	r9
    1ed4:	8f 90       	pop	r8
    1ed6:	08 95       	ret

00001ed8 <__SPKR_stop>:
    1ed8:	ef e6       	ldi	r30, 0x6F	; 111
    1eda:	f0 e0       	ldi	r31, 0x00	; 0
    1edc:	80 81       	ld	r24, Z
    1ede:	8d 7f       	andi	r24, 0xFD	; 253
    1ee0:	80 83       	st	Z, r24
    1ee2:	08 95       	ret

00001ee4 <SYS_init>:
    1ee4:	10 92 fd 01 	sts	0x01FD, r1
    1ee8:	10 92 fe 01 	sts	0x01FE, r1
    1eec:	10 92 02 02 	sts	0x0202, r1
    1ef0:	10 92 ff 01 	sts	0x01FF, r1
    1ef4:	10 92 01 02 	sts	0x0201, r1
    1ef8:	10 92 03 02 	sts	0x0203, r1
    1efc:	10 92 04 02 	sts	0x0204, r1
    1f00:	10 92 05 02 	sts	0x0205, r1
    1f04:	10 92 06 02 	sts	0x0206, r1
    1f08:	10 92 07 02 	sts	0x0207, r1
    1f0c:	10 92 08 02 	sts	0x0208, r1
    1f10:	10 92 09 02 	sts	0x0209, r1
    1f14:	10 92 0a 02 	sts	0x020A, r1
    1f18:	10 92 0b 02 	sts	0x020B, r1
    1f1c:	10 92 0c 02 	sts	0x020C, r1
    1f20:	10 92 0d 02 	sts	0x020D, r1
    1f24:	10 92 0e 02 	sts	0x020E, r1
    1f28:	08 95       	ret

00001f2a <ATTINY_get_sensors>:
    1f2a:	0f 93       	push	r16
    1f2c:	1f 93       	push	r17
    1f2e:	81 e0       	ldi	r24, 0x01	; 1
    1f30:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    1f34:	81 30       	cpi	r24, 0x01	; 1
    1f36:	11 f0       	breq	.+4      	; 0x1f3c <ATTINY_get_sensors+0x12>
    1f38:	00 e0       	ldi	r16, 0x00	; 0
    1f3a:	24 c0       	rjmp	.+72     	; 0x1f84 <ATTINY_get_sensors+0x5a>
    1f3c:	87 e0       	ldi	r24, 0x07	; 7
    1f3e:	0e 94 38 07 	call	0xe70	; 0xe70 <SPI_set_slave_addr>
    1f42:	82 e0       	ldi	r24, 0x02	; 2
    1f44:	6a e0       	ldi	r22, 0x0A	; 10
    1f46:	0e 94 89 07 	call	0xf12	; 0xf12 <SPI_transmit>
    1f4a:	82 e0       	ldi	r24, 0x02	; 2
    1f4c:	62 eb       	ldi	r22, 0xB2	; 178
    1f4e:	0e 94 89 07 	call	0xf12	; 0xf12 <SPI_transmit>
    1f52:	18 ec       	ldi	r17, 0xC8	; 200
    1f54:	81 2f       	mov	r24, r17
    1f56:	8a 95       	dec	r24
    1f58:	f1 f7       	brne	.-4      	; 0x1f56 <ATTINY_get_sensors+0x2c>
    1f5a:	82 e0       	ldi	r24, 0x02	; 2
    1f5c:	60 e0       	ldi	r22, 0x00	; 0
    1f5e:	0e 94 a9 10 	call	0x2152	; 0x2152 <SPI_receive>
    1f62:	08 2f       	mov	r16, r24
    1f64:	81 2f       	mov	r24, r17
    1f66:	8a 95       	dec	r24
    1f68:	f1 f7       	brne	.-4      	; 0x1f66 <ATTINY_get_sensors+0x3c>
    1f6a:	82 e0       	ldi	r24, 0x02	; 2
    1f6c:	60 e0       	ldi	r22, 0x00	; 0
    1f6e:	0e 94 a9 10 	call	0x2152	; 0x2152 <SPI_receive>
    1f72:	1a 95       	dec	r17
    1f74:	f1 f7       	brne	.-4      	; 0x1f72 <ATTINY_get_sensors+0x48>
    1f76:	87 e0       	ldi	r24, 0x07	; 7
    1f78:	0e 94 38 07 	call	0xe70	; 0xe70 <SPI_set_slave_addr>
    1f7c:	88 e8       	ldi	r24, 0x88	; 136
    1f7e:	93 e1       	ldi	r25, 0x13	; 19
    1f80:	01 97       	sbiw	r24, 0x01	; 1
    1f82:	f1 f7       	brne	.-4      	; 0x1f80 <ATTINY_get_sensors+0x56>
    1f84:	80 2f       	mov	r24, r16
    1f86:	1f 91       	pop	r17
    1f88:	0f 91       	pop	r16
    1f8a:	08 95       	ret

00001f8c <TMRSRVC_insert>:
    1f8c:	cf 92       	push	r12
    1f8e:	df 92       	push	r13
    1f90:	ef 92       	push	r14
    1f92:	ff 92       	push	r15
    1f94:	0f 93       	push	r16
    1f96:	1f 93       	push	r17
    1f98:	cf 93       	push	r28
    1f9a:	df 93       	push	r29
    1f9c:	ec 01       	movw	r28, r24
    1f9e:	80 91 34 02 	lds	r24, 0x0234
    1fa2:	88 23       	and	r24, r24
    1fa4:	39 f4       	brne	.+14     	; 0x1fb4 <TMRSRVC_insert+0x28>
    1fa6:	d0 93 36 02 	sts	0x0236, r29
    1faa:	c0 93 35 02 	sts	0x0235, r28
    1fae:	0e 94 54 10 	call	0x20a8	; 0x20a8 <TMRSRVC_start>
    1fb2:	47 c0       	rjmp	.+142    	; 0x2042 <TMRSRVC_insert+0xb6>
    1fb4:	c0 90 35 02 	lds	r12, 0x0235
    1fb8:	d0 90 36 02 	lds	r13, 0x0236
    1fbc:	00 e0       	ldi	r16, 0x00	; 0
    1fbe:	10 e0       	ldi	r17, 0x00	; 0
    1fc0:	ee 24       	eor	r14, r14
    1fc2:	ff 24       	eor	r15, r15
    1fc4:	37 c0       	rjmp	.+110    	; 0x2034 <TMRSRVC_insert+0xa8>
    1fc6:	a8 81       	ld	r26, Y
    1fc8:	b9 81       	ldd	r27, Y+1	; 0x01
    1fca:	fd 01       	movw	r30, r26
    1fcc:	64 81       	ldd	r22, Z+4	; 0x04
    1fce:	75 81       	ldd	r23, Z+5	; 0x05
    1fd0:	f6 01       	movw	r30, r12
    1fd2:	40 81       	ld	r20, Z
    1fd4:	51 81       	ldd	r21, Z+1	; 0x01
    1fd6:	fa 01       	movw	r30, r20
    1fd8:	84 81       	ldd	r24, Z+4	; 0x04
    1fda:	95 81       	ldd	r25, Z+5	; 0x05
    1fdc:	9b 01       	movw	r18, r22
    1fde:	28 1b       	sub	r18, r24
    1fe0:	39 0b       	sbc	r19, r25
    1fe2:	37 ff       	sbrs	r19, 7
    1fe4:	0f c0       	rjmp	.+30     	; 0x2004 <TMRSRVC_insert+0x78>
    1fe6:	86 1b       	sub	r24, r22
    1fe8:	97 0b       	sbc	r25, r23
    1fea:	95 83       	std	Z+5, r25	; 0x05
    1fec:	84 83       	std	Z+4, r24	; 0x04
    1fee:	db 82       	std	Y+3, r13	; 0x03
    1ff0:	ca 82       	std	Y+2, r12	; 0x02
    1ff2:	01 2b       	or	r16, r17
    1ff4:	29 f4       	brne	.+10     	; 0x2000 <TMRSRVC_insert+0x74>
    1ff6:	d0 93 36 02 	sts	0x0236, r29
    1ffa:	c0 93 35 02 	sts	0x0235, r28
    1ffe:	21 c0       	rjmp	.+66     	; 0x2042 <TMRSRVC_insert+0xb6>
    2000:	f7 01       	movw	r30, r14
    2002:	0c c0       	rjmp	.+24     	; 0x201c <TMRSRVC_insert+0x90>
    2004:	f6 01       	movw	r30, r12
    2006:	82 81       	ldd	r24, Z+2	; 0x02
    2008:	93 81       	ldd	r25, Z+3	; 0x03
    200a:	21 15       	cp	r18, r1
    200c:	31 05       	cpc	r19, r1
    200e:	49 f4       	brne	.+18     	; 0x2022 <TMRSRVC_insert+0x96>
    2010:	fd 01       	movw	r30, r26
    2012:	15 82       	std	Z+5, r1	; 0x05
    2014:	14 82       	std	Z+4, r1	; 0x04
    2016:	9b 83       	std	Y+3, r25	; 0x03
    2018:	8a 83       	std	Y+2, r24	; 0x02
    201a:	f6 01       	movw	r30, r12
    201c:	d3 83       	std	Z+3, r29	; 0x03
    201e:	c2 83       	std	Z+2, r28	; 0x02
    2020:	10 c0       	rjmp	.+32     	; 0x2042 <TMRSRVC_insert+0xb6>
    2022:	fd 01       	movw	r30, r26
    2024:	35 83       	std	Z+5, r19	; 0x05
    2026:	24 83       	std	Z+4, r18	; 0x04
    2028:	00 97       	sbiw	r24, 0x00	; 0
    202a:	b9 f3       	breq	.-18     	; 0x201a <TMRSRVC_insert+0x8e>
    202c:	0f 5f       	subi	r16, 0xFF	; 255
    202e:	1f 4f       	sbci	r17, 0xFF	; 255
    2030:	76 01       	movw	r14, r12
    2032:	6c 01       	movw	r12, r24
    2034:	80 91 34 02 	lds	r24, 0x0234
    2038:	90 e0       	ldi	r25, 0x00	; 0
    203a:	08 17       	cp	r16, r24
    203c:	19 07       	cpc	r17, r25
    203e:	18 f2       	brcs	.-122    	; 0x1fc6 <TMRSRVC_insert+0x3a>
    2040:	ec cf       	rjmp	.-40     	; 0x201a <TMRSRVC_insert+0x8e>
    2042:	80 91 34 02 	lds	r24, 0x0234
    2046:	8f 5f       	subi	r24, 0xFF	; 255
    2048:	80 93 34 02 	sts	0x0234, r24
    204c:	df 91       	pop	r29
    204e:	cf 91       	pop	r28
    2050:	1f 91       	pop	r17
    2052:	0f 91       	pop	r16
    2054:	ff 90       	pop	r15
    2056:	ef 90       	pop	r14
    2058:	df 90       	pop	r13
    205a:	cf 90       	pop	r12
    205c:	08 95       	ret

0000205e <TMRSRVC_open>:
    205e:	88 e0       	ldi	r24, 0x08	; 8
    2060:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    2064:	88 23       	and	r24, r24
    2066:	b9 f4       	brne	.+46     	; 0x2096 <TMRSRVC_open+0x38>
    2068:	10 92 34 02 	sts	0x0234, r1
    206c:	10 92 36 02 	sts	0x0236, r1
    2070:	10 92 35 02 	sts	0x0235, r1
    2074:	10 92 f0 01 	sts	0x01F0, r1
    2078:	10 92 f1 01 	sts	0x01F1, r1
    207c:	80 e1       	ldi	r24, 0x10	; 16
    207e:	6e ee       	ldi	r22, 0xEE	; 238
    2080:	70 e1       	ldi	r23, 0x10	; 16
    2082:	0e 94 65 10 	call	0x20ca	; 0x20ca <__ISR_attach>
    2086:	0e 94 f5 10 	call	0x21ea	; 0x21ea <__TMRSRVC_init>
    208a:	0e 94 4e 10 	call	0x209c	; 0x209c <__TMRSRVC_start>
    208e:	88 e0       	ldi	r24, 0x08	; 8
    2090:	61 e0       	ldi	r22, 0x01	; 1
    2092:	0e 94 7e 08 	call	0x10fc	; 0x10fc <SYS_set_state>
    2096:	88 e0       	ldi	r24, 0x08	; 8
    2098:	91 e0       	ldi	r25, 0x01	; 1
    209a:	08 95       	ret

0000209c <__TMRSRVC_start>:
    209c:	ee e6       	ldi	r30, 0x6E	; 110
    209e:	f0 e0       	ldi	r31, 0x00	; 0
    20a0:	80 81       	ld	r24, Z
    20a2:	82 60       	ori	r24, 0x02	; 2
    20a4:	80 83       	st	Z, r24
    20a6:	08 95       	ret

000020a8 <TMRSRVC_start>:
    20a8:	81 e0       	ldi	r24, 0x01	; 1
    20aa:	80 93 f1 01 	sts	0x01F1, r24
    20ae:	08 95       	ret

000020b0 <I2C_enable>:
    20b0:	80 91 37 02 	lds	r24, 0x0237
    20b4:	81 30       	cpi	r24, 0x01	; 1
    20b6:	29 f4       	brne	.+10     	; 0x20c2 <I2C_enable+0x12>
    20b8:	80 91 bc 00 	lds	r24, 0x00BC
    20bc:	84 60       	ori	r24, 0x04	; 4
    20be:	80 93 bc 00 	sts	0x00BC, r24
    20c2:	08 95       	ret

000020c4 <__I2C_init>:
    20c4:	38 98       	cbi	0x07, 0	; 7
    20c6:	39 98       	cbi	0x07, 1	; 7
    20c8:	08 95       	ret

000020ca <__ISR_attach>:
    20ca:	80 32       	cpi	r24, 0x20	; 32
    20cc:	18 f0       	brcs	.+6      	; 0x20d4 <__ISR_attach+0xa>
    20ce:	20 e0       	ldi	r18, 0x00	; 0
    20d0:	30 e0       	ldi	r19, 0x00	; 0
    20d2:	0a c0       	rjmp	.+20     	; 0x20e8 <__ISR_attach+0x1e>
    20d4:	e8 2f       	mov	r30, r24
    20d6:	f0 e0       	ldi	r31, 0x00	; 0
    20d8:	ee 0f       	add	r30, r30
    20da:	ff 1f       	adc	r31, r31
    20dc:	e0 57       	subi	r30, 0x70	; 112
    20de:	fe 4f       	sbci	r31, 0xFE	; 254
    20e0:	20 81       	ld	r18, Z
    20e2:	31 81       	ldd	r19, Z+1	; 0x01
    20e4:	71 83       	std	Z+1, r23	; 0x01
    20e6:	60 83       	st	Z, r22
    20e8:	c9 01       	movw	r24, r18
    20ea:	08 95       	ret

000020ec <__ATMEGA_init>:
    20ec:	24 9a       	sbi	0x04, 4	; 4
    20ee:	2c 9a       	sbi	0x05, 4	; 5
    20f0:	08 95       	ret

000020f2 <SPI_default_config>:
    20f2:	83 e5       	ldi	r24, 0x53	; 83
    20f4:	8c bd       	out	0x2c, r24	; 44
    20f6:	81 e0       	ldi	r24, 0x01	; 1
    20f8:	8d bd       	out	0x2d, r24	; 45
    20fa:	8d e0       	ldi	r24, 0x0D	; 13
    20fc:	8a 95       	dec	r24
    20fe:	f1 f7       	brne	.-4      	; 0x20fc <SPI_default_config+0xa>
    2100:	08 95       	ret

00002102 <SPI_ATtiny0_config>:
    2102:	83 e5       	ldi	r24, 0x53	; 83
    2104:	8c bd       	out	0x2c, r24	; 44
    2106:	1d bc       	out	0x2d, r1	; 45
    2108:	84 ef       	ldi	r24, 0xF4	; 244
    210a:	91 e0       	ldi	r25, 0x01	; 1
    210c:	01 97       	sbiw	r24, 0x01	; 1
    210e:	f1 f7       	brne	.-4      	; 0x210c <SPI_ATtiny0_config+0xa>
    2110:	08 95       	ret

00002112 <SPI_PSXC_config>:
    2112:	8f e7       	ldi	r24, 0x7F	; 127
    2114:	8c bd       	out	0x2c, r24	; 44
    2116:	1d bc       	out	0x2d, r1	; 45
    2118:	84 ef       	ldi	r24, 0xF4	; 244
    211a:	91 e0       	ldi	r25, 0x01	; 1
    211c:	01 97       	sbiw	r24, 0x01	; 1
    211e:	f1 f7       	brne	.-4      	; 0x211c <SPI_PSXC_config+0xa>
    2120:	08 95       	ret

00002122 <SPI_LCD_config>:
    2122:	83 e5       	ldi	r24, 0x53	; 83
    2124:	8c bd       	out	0x2c, r24	; 44
    2126:	81 e0       	ldi	r24, 0x01	; 1
    2128:	8d bd       	out	0x2d, r24	; 45
    212a:	8d e0       	ldi	r24, 0x0D	; 13
    212c:	8a 95       	dec	r24
    212e:	f1 f7       	brne	.-4      	; 0x212c <SPI_LCD_config+0xa>
    2130:	08 95       	ret

00002132 <SPI_FLASH_config>:
    2132:	83 e5       	ldi	r24, 0x53	; 83
    2134:	8c bd       	out	0x2c, r24	; 44
    2136:	81 e0       	ldi	r24, 0x01	; 1
    2138:	8d bd       	out	0x2d, r24	; 45
    213a:	84 ef       	ldi	r24, 0xF4	; 244
    213c:	91 e0       	ldi	r25, 0x01	; 1
    213e:	01 97       	sbiw	r24, 0x01	; 1
    2140:	f1 f7       	brne	.-4      	; 0x213e <SPI_FLASH_config+0xc>
    2142:	08 95       	ret

00002144 <__SPI_init>:
    2144:	25 9a       	sbi	0x04, 5	; 4
    2146:	26 98       	cbi	0x04, 6	; 4
    2148:	27 9a       	sbi	0x04, 7	; 4
    214a:	20 9a       	sbi	0x04, 0	; 4
    214c:	21 9a       	sbi	0x04, 1	; 4
    214e:	22 9a       	sbi	0x04, 2	; 4
    2150:	08 95       	ret

00002152 <SPI_receive>:
    2152:	1f 93       	push	r17
    2154:	16 2f       	mov	r17, r22
    2156:	0e 94 38 07 	call	0xe70	; 0xe70 <SPI_set_slave_addr>
    215a:	82 e0       	ldi	r24, 0x02	; 2
    215c:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    2160:	81 30       	cpi	r24, 0x01	; 1
    2162:	11 f0       	breq	.+4      	; 0x2168 <SPI_receive+0x16>
    2164:	80 e0       	ldi	r24, 0x00	; 0
    2166:	05 c0       	rjmp	.+10     	; 0x2172 <SPI_receive+0x20>
    2168:	1e bd       	out	0x2e, r17	; 46
    216a:	0d b4       	in	r0, 0x2d	; 45
    216c:	07 fe       	sbrs	r0, 7
    216e:	fd cf       	rjmp	.-6      	; 0x216a <SPI_receive+0x18>
    2170:	8e b5       	in	r24, 0x2e	; 46
    2172:	1f 91       	pop	r17
    2174:	08 95       	ret

00002176 <SPKR_beep>:
    2176:	9b 01       	movw	r18, r22
    2178:	ac 01       	movw	r20, r24
    217a:	80 91 e1 01 	lds	r24, 0x01E1
    217e:	88 23       	and	r24, r24
    2180:	81 f0       	breq	.+32     	; 0x21a2 <SPKR_beep+0x2c>
    2182:	da 01       	movw	r26, r20
    2184:	c9 01       	movw	r24, r18
    2186:	88 0f       	add	r24, r24
    2188:	99 1f       	adc	r25, r25
    218a:	aa 1f       	adc	r26, r26
    218c:	bb 1f       	adc	r27, r27
    218e:	90 93 ed 01 	sts	0x01ED, r25
    2192:	80 93 ec 01 	sts	0x01EC, r24
    2196:	21 15       	cp	r18, r1
    2198:	31 05       	cpc	r19, r1
    219a:	41 05       	cpc	r20, r1
    219c:	51 05       	cpc	r21, r1
    219e:	09 f4       	brne	.+2      	; 0x21a2 <SPKR_beep+0x2c>
    21a0:	5f 98       	cbi	0x0b, 7	; 11
    21a2:	08 95       	ret

000021a4 <__SPKR_close>:
    21a4:	82 30       	cpi	r24, 0x02	; 2
    21a6:	29 f4       	brne	.+10     	; 0x21b2 <__SPKR_close+0xe>
    21a8:	80 91 81 00 	lds	r24, 0x0081
    21ac:	8e 7f       	andi	r24, 0xFE	; 254
    21ae:	80 93 81 00 	sts	0x0081, r24
    21b2:	80 91 e0 01 	lds	r24, 0x01E0
    21b6:	81 30       	cpi	r24, 0x01	; 1
    21b8:	31 f4       	brne	.+12     	; 0x21c6 <__SPKR_close+0x22>
    21ba:	80 91 e1 01 	lds	r24, 0x01E1
    21be:	81 30       	cpi	r24, 0x01	; 1
    21c0:	11 f4       	brne	.+4      	; 0x21c6 <__SPKR_close+0x22>
    21c2:	00 00       	nop
    21c4:	08 95       	ret
    21c6:	80 91 e0 01 	lds	r24, 0x01E0
    21ca:	81 30       	cpi	r24, 0x01	; 1
    21cc:	21 f0       	breq	.+8      	; 0x21d6 <__SPKR_close+0x32>
    21ce:	80 91 e1 01 	lds	r24, 0x01E1
    21d2:	81 30       	cpi	r24, 0x01	; 1
    21d4:	11 f4       	brne	.+4      	; 0x21da <__SPKR_close+0x36>
    21d6:	5f 98       	cbi	0x0b, 7	; 11
    21d8:	57 98       	cbi	0x0a, 7	; 10
    21da:	08 95       	ret

000021dc <__TIMER0_COMPA_vect>:
    21dc:	0e 94 fe 10 	call	0x21fc	; 0x21fc <TMRSRVC_tick>
    21e0:	0e 94 3e 11 	call	0x227c	; 0x227c <STEPPER_clk>
    21e4:	0e 94 17 11 	call	0x222e	; 0x222e <SPKR_beep_clk>
    21e8:	08 95       	ret

000021ea <__TMRSRVC_init>:
    21ea:	84 b5       	in	r24, 0x24	; 36
    21ec:	82 60       	ori	r24, 0x02	; 2
    21ee:	84 bd       	out	0x24, r24	; 36
    21f0:	85 b5       	in	r24, 0x25	; 37
    21f2:	84 60       	ori	r24, 0x04	; 4
    21f4:	85 bd       	out	0x25, r24	; 37
    21f6:	8e e4       	ldi	r24, 0x4E	; 78
    21f8:	87 bd       	out	0x27, r24	; 39
    21fa:	08 95       	ret

000021fc <TMRSRVC_tick>:
    21fc:	88 e0       	ldi	r24, 0x08	; 8
    21fe:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    2202:	88 23       	and	r24, r24
    2204:	11 f4       	brne	.+4      	; 0x220a <TMRSRVC_tick+0xe>
    2206:	84 e0       	ldi	r24, 0x04	; 4
    2208:	08 95       	ret
    220a:	80 91 f1 01 	lds	r24, 0x01F1
    220e:	88 23       	and	r24, r24
    2210:	11 f4       	brne	.+4      	; 0x2216 <TMRSRVC_tick+0x1a>
    2212:	83 e0       	ldi	r24, 0x03	; 3
    2214:	08 95       	ret
    2216:	80 91 f0 01 	lds	r24, 0x01F0
    221a:	88 23       	and	r24, r24
    221c:	11 f0       	breq	.+4      	; 0x2222 <TMRSRVC_tick+0x26>
    221e:	82 e0       	ldi	r24, 0x02	; 2
    2220:	08 95       	ret
    2222:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <TMRSRVC_process>
    2226:	81 30       	cpi	r24, 0x01	; 1
    2228:	e1 f3       	breq	.-8      	; 0x2222 <TMRSRVC_tick+0x26>
    222a:	80 e0       	ldi	r24, 0x00	; 0
    222c:	08 95       	ret

0000222e <SPKR_beep_clk>:
    222e:	80 91 e1 01 	lds	r24, 0x01E1
    2232:	81 30       	cpi	r24, 0x01	; 1
    2234:	11 f5       	brne	.+68     	; 0x227a <SPKR_beep_clk+0x4c>
    2236:	80 91 ea 01 	lds	r24, 0x01EA
    223a:	90 91 eb 01 	lds	r25, 0x01EB
    223e:	20 91 ec 01 	lds	r18, 0x01EC
    2242:	30 91 ed 01 	lds	r19, 0x01ED
    2246:	28 0f       	add	r18, r24
    2248:	39 1f       	adc	r19, r25
    224a:	30 93 eb 01 	sts	0x01EB, r19
    224e:	20 93 ea 01 	sts	0x01EA, r18
    2252:	80 91 ea 01 	lds	r24, 0x01EA
    2256:	90 91 eb 01 	lds	r25, 0x01EB
    225a:	88 5e       	subi	r24, 0xE8	; 232
    225c:	93 40       	sbci	r25, 0x03	; 3
    225e:	6c f0       	brlt	.+26     	; 0x227a <SPKR_beep_clk+0x4c>
    2260:	8b b1       	in	r24, 0x0b	; 11
    2262:	80 58       	subi	r24, 0x80	; 128
    2264:	8b b9       	out	0x0b, r24	; 11
    2266:	80 91 ea 01 	lds	r24, 0x01EA
    226a:	90 91 eb 01 	lds	r25, 0x01EB
    226e:	88 5e       	subi	r24, 0xE8	; 232
    2270:	93 40       	sbci	r25, 0x03	; 3
    2272:	90 93 eb 01 	sts	0x01EB, r25
    2276:	80 93 ea 01 	sts	0x01EA, r24
    227a:	08 95       	ret

0000227c <STEPPER_clk>:
    227c:	87 e0       	ldi	r24, 0x07	; 7
    227e:	0e 94 36 08 	call	0x106c	; 0x106c <SYS_get_state>
    2282:	81 30       	cpi	r24, 0x01	; 1
    2284:	09 f0       	breq	.+2      	; 0x2288 <STEPPER_clk+0xc>
    2286:	aa c0       	rjmp	.+340    	; 0x23dc <STEPPER_clk+0x160>
    2288:	80 91 46 02 	lds	r24, 0x0246
    228c:	90 91 47 02 	lds	r25, 0x0247
    2290:	89 2b       	or	r24, r25
    2292:	09 f1       	breq	.+66     	; 0x22d6 <STEPPER_clk+0x5a>
    2294:	80 91 6a 02 	lds	r24, 0x026A
    2298:	90 91 6b 02 	lds	r25, 0x026B
    229c:	20 91 46 02 	lds	r18, 0x0246
    22a0:	30 91 47 02 	lds	r19, 0x0247
    22a4:	82 0f       	add	r24, r18
    22a6:	93 1f       	adc	r25, r19
    22a8:	90 93 6b 02 	sts	0x026B, r25
    22ac:	80 93 6a 02 	sts	0x026A, r24
    22b0:	80 91 6a 02 	lds	r24, 0x026A
    22b4:	90 91 6b 02 	lds	r25, 0x026B
    22b8:	88 5e       	subi	r24, 0xE8	; 232
    22ba:	93 40       	sbci	r25, 0x03	; 3
    22bc:	a4 f0       	brlt	.+40     	; 0x22e6 <STEPPER_clk+0x6a>
    22be:	80 91 6a 02 	lds	r24, 0x026A
    22c2:	90 91 6b 02 	lds	r25, 0x026B
    22c6:	88 5e       	subi	r24, 0xE8	; 232
    22c8:	93 40       	sbci	r25, 0x03	; 3
    22ca:	90 93 6b 02 	sts	0x026B, r25
    22ce:	80 93 6a 02 	sts	0x026A, r24
    22d2:	41 e0       	ldi	r20, 0x01	; 1
    22d4:	09 c0       	rjmp	.+18     	; 0x22e8 <STEPPER_clk+0x6c>
    22d6:	80 91 3e 02 	lds	r24, 0x023E
    22da:	90 91 3f 02 	lds	r25, 0x023F
    22de:	90 93 43 02 	sts	0x0243, r25
    22e2:	80 93 42 02 	sts	0x0242, r24
    22e6:	40 e0       	ldi	r20, 0x00	; 0
    22e8:	80 91 48 02 	lds	r24, 0x0248
    22ec:	90 91 49 02 	lds	r25, 0x0249
    22f0:	89 2b       	or	r24, r25
    22f2:	09 f1       	breq	.+66     	; 0x2336 <STEPPER_clk+0xba>
    22f4:	80 91 6c 02 	lds	r24, 0x026C
    22f8:	90 91 6d 02 	lds	r25, 0x026D
    22fc:	20 91 48 02 	lds	r18, 0x0248
    2300:	30 91 49 02 	lds	r19, 0x0249
    2304:	82 0f       	add	r24, r18
    2306:	93 1f       	adc	r25, r19
    2308:	90 93 6d 02 	sts	0x026D, r25
    230c:	80 93 6c 02 	sts	0x026C, r24
    2310:	80 91 6c 02 	lds	r24, 0x026C
    2314:	90 91 6d 02 	lds	r25, 0x026D
    2318:	88 5e       	subi	r24, 0xE8	; 232
    231a:	93 40       	sbci	r25, 0x03	; 3
    231c:	a4 f0       	brlt	.+40     	; 0x2346 <STEPPER_clk+0xca>
    231e:	80 91 6c 02 	lds	r24, 0x026C
    2322:	90 91 6d 02 	lds	r25, 0x026D
    2326:	88 5e       	subi	r24, 0xE8	; 232
    2328:	93 40       	sbci	r25, 0x03	; 3
    232a:	90 93 6d 02 	sts	0x026D, r25
    232e:	80 93 6c 02 	sts	0x026C, r24
    2332:	61 e0       	ldi	r22, 0x01	; 1
    2334:	09 c0       	rjmp	.+18     	; 0x2348 <STEPPER_clk+0xcc>
    2336:	80 91 40 02 	lds	r24, 0x0240
    233a:	90 91 41 02 	lds	r25, 0x0241
    233e:	90 93 45 02 	sts	0x0245, r25
    2342:	80 93 44 02 	sts	0x0244, r24
    2346:	60 e0       	ldi	r22, 0x00	; 0
    2348:	84 2f       	mov	r24, r20
    234a:	0e 94 ef 11 	call	0x23de	; 0x23de <STEPPER_process_accel>
    234e:	80 91 66 02 	lds	r24, 0x0266
    2352:	90 91 67 02 	lds	r25, 0x0267
    2356:	20 91 42 02 	lds	r18, 0x0242
    235a:	30 91 43 02 	lds	r19, 0x0243
    235e:	28 0f       	add	r18, r24
    2360:	39 1f       	adc	r19, r25
    2362:	30 93 67 02 	sts	0x0267, r19
    2366:	20 93 66 02 	sts	0x0266, r18
    236a:	80 91 66 02 	lds	r24, 0x0266
    236e:	90 91 67 02 	lds	r25, 0x0267
    2372:	88 5e       	subi	r24, 0xE8	; 232
    2374:	93 40       	sbci	r25, 0x03	; 3
    2376:	14 f4       	brge	.+4      	; 0x237c <STEPPER_clk+0x100>
    2378:	40 e0       	ldi	r20, 0x00	; 0
    237a:	0b c0       	rjmp	.+22     	; 0x2392 <STEPPER_clk+0x116>
    237c:	80 91 66 02 	lds	r24, 0x0266
    2380:	90 91 67 02 	lds	r25, 0x0267
    2384:	88 5e       	subi	r24, 0xE8	; 232
    2386:	93 40       	sbci	r25, 0x03	; 3
    2388:	90 93 67 02 	sts	0x0267, r25
    238c:	80 93 66 02 	sts	0x0266, r24
    2390:	41 e0       	ldi	r20, 0x01	; 1
    2392:	80 91 68 02 	lds	r24, 0x0268
    2396:	90 91 69 02 	lds	r25, 0x0269
    239a:	20 91 44 02 	lds	r18, 0x0244
    239e:	30 91 45 02 	lds	r19, 0x0245
    23a2:	28 0f       	add	r18, r24
    23a4:	39 1f       	adc	r19, r25
    23a6:	30 93 69 02 	sts	0x0269, r19
    23aa:	20 93 68 02 	sts	0x0268, r18
    23ae:	80 91 68 02 	lds	r24, 0x0268
    23b2:	90 91 69 02 	lds	r25, 0x0269
    23b6:	88 5e       	subi	r24, 0xE8	; 232
    23b8:	93 40       	sbci	r25, 0x03	; 3
    23ba:	14 f4       	brge	.+4      	; 0x23c0 <STEPPER_clk+0x144>
    23bc:	60 e0       	ldi	r22, 0x00	; 0
    23be:	0b c0       	rjmp	.+22     	; 0x23d6 <STEPPER_clk+0x15a>
    23c0:	80 91 68 02 	lds	r24, 0x0268
    23c4:	90 91 69 02 	lds	r25, 0x0269
    23c8:	88 5e       	subi	r24, 0xE8	; 232
    23ca:	93 40       	sbci	r25, 0x03	; 3
    23cc:	90 93 69 02 	sts	0x0269, r25
    23d0:	80 93 68 02 	sts	0x0268, r24
    23d4:	61 e0       	ldi	r22, 0x01	; 1
    23d6:	84 2f       	mov	r24, r20
    23d8:	0e 94 34 12 	call	0x2468	; 0x2468 <STEPPER_process_run_mode>
    23dc:	08 95       	ret

000023de <STEPPER_process_accel>:
    23de:	88 23       	and	r24, r24
    23e0:	f1 f0       	breq	.+60     	; 0x241e <STEPPER_process_accel+0x40>
    23e2:	20 91 3e 02 	lds	r18, 0x023E
    23e6:	30 91 3f 02 	lds	r19, 0x023F
    23ea:	80 91 42 02 	lds	r24, 0x0242
    23ee:	90 91 43 02 	lds	r25, 0x0243
    23f2:	28 1b       	sub	r18, r24
    23f4:	39 0b       	sbc	r19, r25
    23f6:	12 16       	cp	r1, r18
    23f8:	13 06       	cpc	r1, r19
    23fa:	34 f4       	brge	.+12     	; 0x2408 <STEPPER_process_accel+0x2a>
    23fc:	80 91 42 02 	lds	r24, 0x0242
    2400:	90 91 43 02 	lds	r25, 0x0243
    2404:	01 96       	adiw	r24, 0x01	; 1
    2406:	07 c0       	rjmp	.+14     	; 0x2416 <STEPPER_process_accel+0x38>
    2408:	23 2b       	or	r18, r19
    240a:	49 f0       	breq	.+18     	; 0x241e <STEPPER_process_accel+0x40>
    240c:	80 91 42 02 	lds	r24, 0x0242
    2410:	90 91 43 02 	lds	r25, 0x0243
    2414:	01 97       	sbiw	r24, 0x01	; 1
    2416:	90 93 43 02 	sts	0x0243, r25
    241a:	80 93 42 02 	sts	0x0242, r24
    241e:	66 23       	and	r22, r22
    2420:	11 f1       	breq	.+68     	; 0x2466 <STEPPER_process_accel+0x88>
    2422:	20 91 40 02 	lds	r18, 0x0240
    2426:	30 91 41 02 	lds	r19, 0x0241
    242a:	80 91 44 02 	lds	r24, 0x0244
    242e:	90 91 45 02 	lds	r25, 0x0245
    2432:	28 1b       	sub	r18, r24
    2434:	39 0b       	sbc	r19, r25
    2436:	12 16       	cp	r1, r18
    2438:	13 06       	cpc	r1, r19
    243a:	54 f4       	brge	.+20     	; 0x2450 <STEPPER_process_accel+0x72>
    243c:	80 91 44 02 	lds	r24, 0x0244
    2440:	90 91 45 02 	lds	r25, 0x0245
    2444:	01 96       	adiw	r24, 0x01	; 1
    2446:	90 93 45 02 	sts	0x0245, r25
    244a:	80 93 44 02 	sts	0x0244, r24
    244e:	08 95       	ret
    2450:	23 2b       	or	r18, r19
    2452:	49 f0       	breq	.+18     	; 0x2466 <STEPPER_process_accel+0x88>
    2454:	80 91 44 02 	lds	r24, 0x0244
    2458:	90 91 45 02 	lds	r25, 0x0245
    245c:	01 97       	sbiw	r24, 0x01	; 1
    245e:	90 93 45 02 	sts	0x0245, r25
    2462:	80 93 44 02 	sts	0x0244, r24
    2466:	08 95       	ret

00002468 <STEPPER_process_run_mode>:
    2468:	0f 93       	push	r16
    246a:	1f 93       	push	r17
    246c:	18 2f       	mov	r17, r24
    246e:	06 2f       	mov	r16, r22
    2470:	80 91 72 02 	lds	r24, 0x0272
    2474:	88 23       	and	r24, r24
    2476:	09 f0       	breq	.+2      	; 0x247a <STEPPER_process_run_mode+0x12>
    2478:	e7 c0       	rjmp	.+462    	; 0x2648 <STEPPER_process_run_mode+0x1e0>
    247a:	80 91 5a 02 	lds	r24, 0x025A
    247e:	88 23       	and	r24, r24
    2480:	09 f0       	breq	.+2      	; 0x2484 <STEPPER_process_run_mode+0x1c>
    2482:	5a c0       	rjmp	.+180    	; 0x2538 <STEPPER_process_run_mode+0xd0>
    2484:	80 91 42 02 	lds	r24, 0x0242
    2488:	90 91 43 02 	lds	r25, 0x0243
    248c:	89 2b       	or	r24, r25
    248e:	e9 f4       	brne	.+58     	; 0x24ca <STEPPER_process_run_mode+0x62>
    2490:	80 91 f2 01 	lds	r24, 0x01F2
    2494:	83 7e       	andi	r24, 0xE3	; 227
    2496:	80 93 f2 01 	sts	0x01F2, r24
    249a:	10 92 63 02 	sts	0x0263, r1
    249e:	80 91 6e 02 	lds	r24, 0x026E
    24a2:	88 23       	and	r24, r24
    24a4:	09 f4       	brne	.+2      	; 0x24a8 <STEPPER_process_run_mode+0x40>
    24a6:	5d c0       	rjmp	.+186    	; 0x2562 <STEPPER_process_run_mode+0xfa>
    24a8:	60 91 5c 02 	lds	r22, 0x025C
    24ac:	80 e0       	ldi	r24, 0x00	; 0
    24ae:	0e 94 ad 13 	call	0x275a	; 0x275a <STEPPER_stop>
    24b2:	e0 91 70 02 	lds	r30, 0x0270
    24b6:	f0 91 71 02 	lds	r31, 0x0271
    24ba:	30 97       	sbiw	r30, 0x00	; 0
    24bc:	09 f4       	brne	.+2      	; 0x24c0 <STEPPER_process_run_mode+0x58>
    24be:	51 c0       	rjmp	.+162    	; 0x2562 <STEPPER_process_run_mode+0xfa>
    24c0:	81 e0       	ldi	r24, 0x01	; 1
    24c2:	80 83       	st	Z, r24
    24c4:	10 92 6e 02 	sts	0x026E, r1
    24c8:	4c c0       	rjmp	.+152    	; 0x2562 <STEPPER_process_run_mode+0xfa>
    24ca:	80 91 3c 02 	lds	r24, 0x023C
    24ce:	81 30       	cpi	r24, 0x01	; 1
    24d0:	41 f4       	brne	.+16     	; 0x24e2 <STEPPER_process_run_mode+0x7a>
    24d2:	80 91 4e 02 	lds	r24, 0x024E
    24d6:	90 91 4f 02 	lds	r25, 0x024F
    24da:	01 97       	sbiw	r24, 0x01	; 1
    24dc:	11 f4       	brne	.+4      	; 0x24e2 <STEPPER_process_run_mode+0x7a>
    24de:	11 e0       	ldi	r17, 0x01	; 1
    24e0:	02 c0       	rjmp	.+4      	; 0x24e6 <STEPPER_process_run_mode+0x7e>
    24e2:	11 23       	and	r17, r17
    24e4:	f1 f1       	breq	.+124    	; 0x2562 <STEPPER_process_run_mode+0xfa>
    24e6:	e0 91 61 02 	lds	r30, 0x0261
    24ea:	f0 e0       	ldi	r31, 0x00	; 0
    24ec:	ef 58       	subi	r30, 0x8F	; 143
    24ee:	fe 4f       	sbci	r31, 0xFE	; 254
    24f0:	90 91 f2 01 	lds	r25, 0x01F2
    24f4:	93 7e       	andi	r25, 0xE3	; 227
    24f6:	80 81       	ld	r24, Z
    24f8:	89 2b       	or	r24, r25
    24fa:	80 93 f2 01 	sts	0x01F2, r24
    24fe:	80 91 5f 02 	lds	r24, 0x025F
    2502:	88 23       	and	r24, r24
    2504:	21 f4       	brne	.+8      	; 0x250e <STEPPER_process_run_mode+0xa6>
    2506:	80 91 61 02 	lds	r24, 0x0261
    250a:	8f 5f       	subi	r24, 0xFF	; 255
    250c:	03 c0       	rjmp	.+6      	; 0x2514 <STEPPER_process_run_mode+0xac>
    250e:	80 91 61 02 	lds	r24, 0x0261
    2512:	81 50       	subi	r24, 0x01	; 1
    2514:	80 93 61 02 	sts	0x0261, r24
    2518:	80 91 61 02 	lds	r24, 0x0261
    251c:	83 70       	andi	r24, 0x03	; 3
    251e:	80 93 61 02 	sts	0x0261, r24
    2522:	81 e0       	ldi	r24, 0x01	; 1
    2524:	80 93 63 02 	sts	0x0263, r24
    2528:	80 91 3c 02 	lds	r24, 0x023C
    252c:	81 30       	cpi	r24, 0x01	; 1
    252e:	c9 f4       	brne	.+50     	; 0x2562 <STEPPER_process_run_mode+0xfa>
    2530:	80 e0       	ldi	r24, 0x00	; 0
    2532:	0e 94 37 13 	call	0x266e	; 0x266e <STEPPER_process_step_mode>
    2536:	15 c0       	rjmp	.+42     	; 0x2562 <STEPPER_process_run_mode+0xfa>
    2538:	90 91 f2 01 	lds	r25, 0x01F2
    253c:	93 7e       	andi	r25, 0xE3	; 227
    253e:	90 93 f2 01 	sts	0x01F2, r25
    2542:	e0 91 61 02 	lds	r30, 0x0261
    2546:	f0 e0       	ldi	r31, 0x00	; 0
    2548:	ef 58       	subi	r30, 0x8F	; 143
    254a:	fe 4f       	sbci	r31, 0xFE	; 254
    254c:	80 81       	ld	r24, Z
    254e:	89 2b       	or	r24, r25
    2550:	80 93 f2 01 	sts	0x01F2, r24
    2554:	82 e0       	ldi	r24, 0x02	; 2
    2556:	80 93 63 02 	sts	0x0263, r24
    255a:	10 92 43 02 	sts	0x0243, r1
    255e:	10 92 42 02 	sts	0x0242, r1
    2562:	80 91 5b 02 	lds	r24, 0x025B
    2566:	88 23       	and	r24, r24
    2568:	09 f0       	breq	.+2      	; 0x256c <STEPPER_process_run_mode+0x104>
    256a:	59 c0       	rjmp	.+178    	; 0x261e <STEPPER_process_run_mode+0x1b6>
    256c:	80 91 44 02 	lds	r24, 0x0244
    2570:	90 91 45 02 	lds	r25, 0x0245
    2574:	89 2b       	or	r24, r25
    2576:	e9 f4       	brne	.+58     	; 0x25b2 <STEPPER_process_run_mode+0x14a>
    2578:	80 91 f2 01 	lds	r24, 0x01F2
    257c:	8f 71       	andi	r24, 0x1F	; 31
    257e:	80 93 f2 01 	sts	0x01F2, r24
    2582:	10 92 64 02 	sts	0x0264, r1
    2586:	80 91 6f 02 	lds	r24, 0x026F
    258a:	88 23       	and	r24, r24
    258c:	09 f4       	brne	.+2      	; 0x2590 <STEPPER_process_run_mode+0x128>
    258e:	5c c0       	rjmp	.+184    	; 0x2648 <STEPPER_process_run_mode+0x1e0>
    2590:	60 91 5d 02 	lds	r22, 0x025D
    2594:	81 e0       	ldi	r24, 0x01	; 1
    2596:	0e 94 ad 13 	call	0x275a	; 0x275a <STEPPER_stop>
    259a:	e0 91 70 02 	lds	r30, 0x0270
    259e:	f0 91 71 02 	lds	r31, 0x0271
    25a2:	30 97       	sbiw	r30, 0x00	; 0
    25a4:	09 f4       	brne	.+2      	; 0x25a8 <STEPPER_process_run_mode+0x140>
    25a6:	50 c0       	rjmp	.+160    	; 0x2648 <STEPPER_process_run_mode+0x1e0>
    25a8:	81 e0       	ldi	r24, 0x01	; 1
    25aa:	81 83       	std	Z+1, r24	; 0x01
    25ac:	10 92 6f 02 	sts	0x026F, r1
    25b0:	4b c0       	rjmp	.+150    	; 0x2648 <STEPPER_process_run_mode+0x1e0>
    25b2:	80 91 3d 02 	lds	r24, 0x023D
    25b6:	81 30       	cpi	r24, 0x01	; 1
    25b8:	41 f4       	brne	.+16     	; 0x25ca <STEPPER_process_run_mode+0x162>
    25ba:	80 91 50 02 	lds	r24, 0x0250
    25be:	90 91 51 02 	lds	r25, 0x0251
    25c2:	01 97       	sbiw	r24, 0x01	; 1
    25c4:	11 f4       	brne	.+4      	; 0x25ca <STEPPER_process_run_mode+0x162>
    25c6:	01 e0       	ldi	r16, 0x01	; 1
    25c8:	02 c0       	rjmp	.+4      	; 0x25ce <STEPPER_process_run_mode+0x166>
    25ca:	00 23       	and	r16, r16
    25cc:	e9 f1       	breq	.+122    	; 0x2648 <STEPPER_process_run_mode+0x1e0>
    25ce:	e0 91 62 02 	lds	r30, 0x0262
    25d2:	f0 e0       	ldi	r31, 0x00	; 0
    25d4:	eb 58       	subi	r30, 0x8B	; 139
    25d6:	fe 4f       	sbci	r31, 0xFE	; 254
    25d8:	90 91 f2 01 	lds	r25, 0x01F2
    25dc:	9f 71       	andi	r25, 0x1F	; 31
    25de:	80 81       	ld	r24, Z
    25e0:	89 2b       	or	r24, r25
    25e2:	80 93 f2 01 	sts	0x01F2, r24
    25e6:	80 91 60 02 	lds	r24, 0x0260
    25ea:	88 23       	and	r24, r24
    25ec:	21 f4       	brne	.+8      	; 0x25f6 <STEPPER_process_run_mode+0x18e>
    25ee:	80 91 62 02 	lds	r24, 0x0262
    25f2:	8f 5f       	subi	r24, 0xFF	; 255
    25f4:	03 c0       	rjmp	.+6      	; 0x25fc <STEPPER_process_run_mode+0x194>
    25f6:	80 91 62 02 	lds	r24, 0x0262
    25fa:	81 50       	subi	r24, 0x01	; 1
    25fc:	80 93 62 02 	sts	0x0262, r24
    2600:	80 91 62 02 	lds	r24, 0x0262
    2604:	83 70       	andi	r24, 0x03	; 3
    2606:	80 93 62 02 	sts	0x0262, r24
    260a:	81 e0       	ldi	r24, 0x01	; 1
    260c:	80 93 64 02 	sts	0x0264, r24
    2610:	80 91 3d 02 	lds	r24, 0x023D
    2614:	81 30       	cpi	r24, 0x01	; 1
    2616:	c1 f4       	brne	.+48     	; 0x2648 <STEPPER_process_run_mode+0x1e0>
    2618:	0e 94 37 13 	call	0x266e	; 0x266e <STEPPER_process_step_mode>
    261c:	15 c0       	rjmp	.+42     	; 0x2648 <STEPPER_process_run_mode+0x1e0>
    261e:	90 91 f2 01 	lds	r25, 0x01F2
    2622:	9f 71       	andi	r25, 0x1F	; 31
    2624:	90 93 f2 01 	sts	0x01F2, r25
    2628:	e0 91 62 02 	lds	r30, 0x0262
    262c:	f0 e0       	ldi	r31, 0x00	; 0
    262e:	eb 58       	subi	r30, 0x8B	; 139
    2630:	fe 4f       	sbci	r31, 0xFE	; 254
    2632:	80 81       	ld	r24, Z
    2634:	89 2b       	or	r24, r25
    2636:	80 93 f2 01 	sts	0x01F2, r24
    263a:	82 e0       	ldi	r24, 0x02	; 2
    263c:	80 93 64 02 	sts	0x0264, r24
    2640:	10 92 45 02 	sts	0x0245, r1
    2644:	10 92 44 02 	sts	0x0244, r1
    2648:	80 91 65 02 	lds	r24, 0x0265
    264c:	88 23       	and	r24, r24
    264e:	31 f4       	brne	.+12     	; 0x265c <STEPPER_process_run_mode+0x1f4>
    2650:	82 ef       	ldi	r24, 0xF2	; 242
    2652:	91 e0       	ldi	r25, 0x01	; 1
    2654:	61 2f       	mov	r22, r17
    2656:	40 2f       	mov	r20, r16
    2658:	0e 94 40 14 	call	0x2880	; 0x2880 <STEPPER_process_pwm>
    265c:	88 b1       	in	r24, 0x08	; 8
    265e:	83 70       	andi	r24, 0x03	; 3
    2660:	90 91 f2 01 	lds	r25, 0x01F2
    2664:	89 2b       	or	r24, r25
    2666:	88 b9       	out	0x08, r24	; 8
    2668:	1f 91       	pop	r17
    266a:	0f 91       	pop	r16
    266c:	08 95       	ret

0000266e <STEPPER_process_step_mode>:
    266e:	88 23       	and	r24, r24
    2670:	21 f0       	breq	.+8      	; 0x267a <STEPPER_process_step_mode+0xc>
    2672:	81 30       	cpi	r24, 0x01	; 1
    2674:	09 f0       	breq	.+2      	; 0x2678 <STEPPER_process_step_mode+0xa>
    2676:	4e c0       	rjmp	.+156    	; 0x2714 <STEPPER_process_step_mode+0xa6>
    2678:	27 c0       	rjmp	.+78     	; 0x26c8 <STEPPER_process_step_mode+0x5a>
    267a:	80 91 4e 02 	lds	r24, 0x024E
    267e:	90 91 4f 02 	lds	r25, 0x024F
    2682:	89 2b       	or	r24, r25
    2684:	49 f0       	breq	.+18     	; 0x2698 <STEPPER_process_step_mode+0x2a>
    2686:	80 91 4e 02 	lds	r24, 0x024E
    268a:	90 91 4f 02 	lds	r25, 0x024F
    268e:	01 97       	sbiw	r24, 0x01	; 1
    2690:	90 93 4f 02 	sts	0x024F, r25
    2694:	80 93 4e 02 	sts	0x024E, r24
    2698:	80 91 6e 02 	lds	r24, 0x026E
    269c:	88 23       	and	r24, r24
    269e:	d1 f5       	brne	.+116    	; 0x2714 <STEPPER_process_step_mode+0xa6>
    26a0:	20 91 4e 02 	lds	r18, 0x024E
    26a4:	30 91 4f 02 	lds	r19, 0x024F
    26a8:	80 91 52 02 	lds	r24, 0x0252
    26ac:	90 91 53 02 	lds	r25, 0x0253
    26b0:	28 17       	cp	r18, r24
    26b2:	39 07       	cpc	r19, r25
    26b4:	79 f5       	brne	.+94     	; 0x2714 <STEPPER_process_step_mode+0xa6>
    26b6:	80 e0       	ldi	r24, 0x00	; 0
    26b8:	60 e0       	ldi	r22, 0x00	; 0
    26ba:	70 e0       	ldi	r23, 0x00	; 0
    26bc:	0e 94 8b 13 	call	0x2716	; 0x2716 <STEPPER_set_speed>
    26c0:	81 e0       	ldi	r24, 0x01	; 1
    26c2:	80 93 6e 02 	sts	0x026E, r24
    26c6:	08 95       	ret
    26c8:	80 91 50 02 	lds	r24, 0x0250
    26cc:	90 91 51 02 	lds	r25, 0x0251
    26d0:	89 2b       	or	r24, r25
    26d2:	49 f0       	breq	.+18     	; 0x26e6 <STEPPER_process_step_mode+0x78>
    26d4:	80 91 50 02 	lds	r24, 0x0250
    26d8:	90 91 51 02 	lds	r25, 0x0251
    26dc:	01 97       	sbiw	r24, 0x01	; 1
    26de:	90 93 51 02 	sts	0x0251, r25
    26e2:	80 93 50 02 	sts	0x0250, r24
    26e6:	80 91 6f 02 	lds	r24, 0x026F
    26ea:	88 23       	and	r24, r24
    26ec:	99 f4       	brne	.+38     	; 0x2714 <STEPPER_process_step_mode+0xa6>
    26ee:	20 91 50 02 	lds	r18, 0x0250
    26f2:	30 91 51 02 	lds	r19, 0x0251
    26f6:	80 91 54 02 	lds	r24, 0x0254
    26fa:	90 91 55 02 	lds	r25, 0x0255
    26fe:	28 17       	cp	r18, r24
    2700:	39 07       	cpc	r19, r25
    2702:	41 f4       	brne	.+16     	; 0x2714 <STEPPER_process_step_mode+0xa6>
    2704:	81 e0       	ldi	r24, 0x01	; 1
    2706:	60 e0       	ldi	r22, 0x00	; 0
    2708:	70 e0       	ldi	r23, 0x00	; 0
    270a:	0e 94 8b 13 	call	0x2716	; 0x2716 <STEPPER_set_speed>
    270e:	81 e0       	ldi	r24, 0x01	; 1
    2710:	80 93 6f 02 	sts	0x026F, r24
    2714:	08 95       	ret

00002716 <STEPPER_set_speed>:
    2716:	48 2f       	mov	r20, r24
    2718:	81 e0       	ldi	r24, 0x01	; 1
    271a:	80 93 72 02 	sts	0x0272, r24
    271e:	cb 01       	movw	r24, r22
    2720:	21 e0       	ldi	r18, 0x01	; 1
    2722:	61 39       	cpi	r22, 0x91	; 145
    2724:	72 07       	cpc	r23, r18
    2726:	10 f0       	brcs	.+4      	; 0x272c <STEPPER_set_speed+0x16>
    2728:	80 e9       	ldi	r24, 0x90	; 144
    272a:	91 e0       	ldi	r25, 0x01	; 1
    272c:	41 30       	cpi	r20, 0x01	; 1
    272e:	71 f0       	breq	.+28     	; 0x274c <STEPPER_set_speed+0x36>
    2730:	41 30       	cpi	r20, 0x01	; 1
    2732:	18 f0       	brcs	.+6      	; 0x273a <STEPPER_set_speed+0x24>
    2734:	42 30       	cpi	r20, 0x02	; 2
    2736:	71 f4       	brne	.+28     	; 0x2754 <STEPPER_set_speed+0x3e>
    2738:	05 c0       	rjmp	.+10     	; 0x2744 <STEPPER_set_speed+0x2e>
    273a:	90 93 3f 02 	sts	0x023F, r25
    273e:	80 93 3e 02 	sts	0x023E, r24
    2742:	08 c0       	rjmp	.+16     	; 0x2754 <STEPPER_set_speed+0x3e>
    2744:	90 93 3f 02 	sts	0x023F, r25
    2748:	80 93 3e 02 	sts	0x023E, r24
    274c:	90 93 41 02 	sts	0x0241, r25
    2750:	80 93 40 02 	sts	0x0240, r24
    2754:	10 92 72 02 	sts	0x0272, r1
    2758:	08 95       	ret

0000275a <STEPPER_stop>:
    275a:	0f 93       	push	r16
    275c:	1f 93       	push	r17
    275e:	18 2f       	mov	r17, r24
    2760:	06 2f       	mov	r16, r22
    2762:	66 23       	and	r22, r22
    2764:	49 f4       	brne	.+18     	; 0x2778 <STEPPER_stop+0x1e>
    2766:	60 e0       	ldi	r22, 0x00	; 0
    2768:	70 e0       	ldi	r23, 0x00	; 0
    276a:	0e 94 8b 13 	call	0x2716	; 0x2716 <STEPPER_set_speed>
    276e:	81 2f       	mov	r24, r17
    2770:	60 e0       	ldi	r22, 0x00	; 0
    2772:	70 e0       	ldi	r23, 0x00	; 0
    2774:	0e 94 d8 14 	call	0x29b0	; 0x29b0 <STEPPER_set_steps>
    2778:	81 e0       	ldi	r24, 0x01	; 1
    277a:	80 93 72 02 	sts	0x0272, r24
    277e:	11 30       	cpi	r17, 0x01	; 1
    2780:	51 f0       	breq	.+20     	; 0x2796 <STEPPER_stop+0x3c>
    2782:	11 30       	cpi	r17, 0x01	; 1
    2784:	18 f0       	brcs	.+6      	; 0x278c <STEPPER_stop+0x32>
    2786:	12 30       	cpi	r17, 0x02	; 2
    2788:	41 f4       	brne	.+16     	; 0x279a <STEPPER_stop+0x40>
    278a:	03 c0       	rjmp	.+6      	; 0x2792 <STEPPER_stop+0x38>
    278c:	00 93 5a 02 	sts	0x025A, r16
    2790:	04 c0       	rjmp	.+8      	; 0x279a <STEPPER_stop+0x40>
    2792:	00 93 5a 02 	sts	0x025A, r16
    2796:	00 93 5b 02 	sts	0x025B, r16
    279a:	10 92 72 02 	sts	0x0272, r1
    279e:	1f 91       	pop	r17
    27a0:	0f 91       	pop	r16
    27a2:	08 95       	ret

000027a4 <TMRSRVC_process>:
    27a4:	ff 92       	push	r15
    27a6:	0f 93       	push	r16
    27a8:	1f 93       	push	r17
    27aa:	cf 93       	push	r28
    27ac:	df 93       	push	r29
    27ae:	80 91 34 02 	lds	r24, 0x0234
    27b2:	88 23       	and	r24, r24
    27b4:	09 f4       	brne	.+2      	; 0x27b8 <TMRSRVC_process+0x14>
    27b6:	59 c0       	rjmp	.+178    	; 0x286a <TMRSRVC_process+0xc6>
    27b8:	00 91 35 02 	lds	r16, 0x0235
    27bc:	10 91 36 02 	lds	r17, 0x0236
    27c0:	f8 01       	movw	r30, r16
    27c2:	c0 81       	ld	r28, Z
    27c4:	d1 81       	ldd	r29, Z+1	; 0x01
    27c6:	8c 81       	ldd	r24, Y+4	; 0x04
    27c8:	9d 81       	ldd	r25, Y+5	; 0x05
    27ca:	01 97       	sbiw	r24, 0x01	; 1
    27cc:	9d 83       	std	Y+5, r25	; 0x05
    27ce:	8c 83       	std	Y+4, r24	; 0x04
    27d0:	18 16       	cp	r1, r24
    27d2:	19 06       	cpc	r1, r25
    27d4:	0c f4       	brge	.+2      	; 0x27d8 <TMRSRVC_process+0x34>
    27d6:	49 c0       	rjmp	.+146    	; 0x286a <TMRSRVC_process+0xc6>
    27d8:	89 81       	ldd	r24, Y+1	; 0x01
    27da:	80 ff       	sbrs	r24, 0
    27dc:	05 c0       	rjmp	.+10     	; 0x27e8 <TMRSRVC_process+0x44>
    27de:	8e 81       	ldd	r24, Y+6	; 0x06
    27e0:	88 23       	and	r24, r24
    27e2:	11 f4       	brne	.+4      	; 0x27e8 <TMRSRVC_process+0x44>
    27e4:	81 e0       	ldi	r24, 0x01	; 1
    27e6:	8e 83       	std	Y+6, r24	; 0x06
    27e8:	89 81       	ldd	r24, Y+1	; 0x01
    27ea:	81 ff       	sbrs	r24, 1
    27ec:	03 c0       	rjmp	.+6      	; 0x27f4 <TMRSRVC_process+0x50>
    27ee:	ef 81       	ldd	r30, Y+7	; 0x07
    27f0:	f8 85       	ldd	r31, Y+8	; 0x08
    27f2:	09 95       	icall
    27f4:	80 91 34 02 	lds	r24, 0x0234
    27f8:	82 30       	cpi	r24, 0x02	; 2
    27fa:	a8 f0       	brcs	.+42     	; 0x2826 <TMRSRVC_process+0x82>
    27fc:	f8 01       	movw	r30, r16
    27fe:	82 81       	ldd	r24, Z+2	; 0x02
    2800:	93 81       	ldd	r25, Z+3	; 0x03
    2802:	90 93 36 02 	sts	0x0236, r25
    2806:	80 93 35 02 	sts	0x0235, r24
    280a:	13 82       	std	Z+3, r1	; 0x03
    280c:	12 82       	std	Z+2, r1	; 0x02
    280e:	e0 91 00 00 	lds	r30, 0x0000
    2812:	f0 91 01 00 	lds	r31, 0x0001
    2816:	84 81       	ldd	r24, Z+4	; 0x04
    2818:	95 81       	ldd	r25, Z+5	; 0x05
    281a:	18 16       	cp	r1, r24
    281c:	19 06       	cpc	r1, r25
    281e:	3c f0       	brlt	.+14     	; 0x282e <TMRSRVC_process+0x8a>
    2820:	ff 24       	eor	r15, r15
    2822:	f3 94       	inc	r15
    2824:	05 c0       	rjmp	.+10     	; 0x2830 <TMRSRVC_process+0x8c>
    2826:	10 92 36 02 	sts	0x0236, r1
    282a:	10 92 35 02 	sts	0x0235, r1
    282e:	ff 24       	eor	r15, r15
    2830:	80 91 34 02 	lds	r24, 0x0234
    2834:	81 50       	subi	r24, 0x01	; 1
    2836:	80 93 34 02 	sts	0x0234, r24
    283a:	80 91 34 02 	lds	r24, 0x0234
    283e:	88 23       	and	r24, r24
    2840:	11 f4       	brne	.+4      	; 0x2846 <TMRSRVC_process+0xa2>
    2842:	0e 94 3d 14 	call	0x287a	; 0x287a <TMRSRVC_stop>
    2846:	89 81       	ldd	r24, Y+1	; 0x01
    2848:	82 ff       	sbrs	r24, 2
    284a:	08 c0       	rjmp	.+16     	; 0x285c <TMRSRVC_process+0xb8>
    284c:	8a 81       	ldd	r24, Y+2	; 0x02
    284e:	9b 81       	ldd	r25, Y+3	; 0x03
    2850:	9d 83       	std	Y+5, r25	; 0x05
    2852:	8c 83       	std	Y+4, r24	; 0x04
    2854:	c8 01       	movw	r24, r16
    2856:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <TMRSRVC_insert>
    285a:	08 c0       	rjmp	.+16     	; 0x286c <TMRSRVC_process+0xc8>
    285c:	c8 01       	movw	r24, r16
    285e:	0e 94 6e 19 	call	0x32dc	; 0x32dc <free>
    2862:	89 81       	ldd	r24, Y+1	; 0x01
    2864:	8f 7e       	andi	r24, 0xEF	; 239
    2866:	89 83       	std	Y+1, r24	; 0x01
    2868:	01 c0       	rjmp	.+2      	; 0x286c <TMRSRVC_process+0xc8>
    286a:	ff 24       	eor	r15, r15
    286c:	8f 2d       	mov	r24, r15
    286e:	df 91       	pop	r29
    2870:	cf 91       	pop	r28
    2872:	1f 91       	pop	r17
    2874:	0f 91       	pop	r16
    2876:	ff 90       	pop	r15
    2878:	08 95       	ret

0000287a <TMRSRVC_stop>:
    287a:	10 92 f1 01 	sts	0x01F1, r1
    287e:	08 95       	ret

00002880 <STEPPER_process_pwm>:
    2880:	fc 01       	movw	r30, r24
    2882:	80 91 63 02 	lds	r24, 0x0263
    2886:	82 30       	cpi	r24, 0x02	; 2
    2888:	69 f4       	brne	.+26     	; 0x28a4 <STEPPER_process_pwm+0x24>
    288a:	80 91 f6 01 	lds	r24, 0x01F6
    288e:	91 e0       	ldi	r25, 0x01	; 1
    2890:	89 27       	eor	r24, r25
    2892:	80 93 f6 01 	sts	0x01F6, r24
    2896:	88 23       	and	r24, r24
    2898:	09 f0       	breq	.+2      	; 0x289c <STEPPER_process_pwm+0x1c>
    289a:	3e c0       	rjmp	.+124    	; 0x2918 <STEPPER_process_pwm+0x98>
    289c:	80 81       	ld	r24, Z
    289e:	83 7e       	andi	r24, 0xE3	; 227
    28a0:	80 83       	st	Z, r24
    28a2:	3a c0       	rjmp	.+116    	; 0x2918 <STEPPER_process_pwm+0x98>
    28a4:	80 91 42 02 	lds	r24, 0x0242
    28a8:	90 91 43 02 	lds	r25, 0x0243
    28ac:	c3 97       	sbiw	r24, 0x33	; 51
    28ae:	a4 f5       	brge	.+104    	; 0x2918 <STEPPER_process_pwm+0x98>
    28b0:	66 23       	and	r22, r22
    28b2:	d1 f0       	breq	.+52     	; 0x28e8 <STEPPER_process_pwm+0x68>
    28b4:	20 91 42 02 	lds	r18, 0x0242
    28b8:	30 91 43 02 	lds	r19, 0x0243
    28bc:	80 e6       	ldi	r24, 0x60	; 96
    28be:	90 e0       	ldi	r25, 0x00	; 0
    28c0:	bc 01       	movw	r22, r24
    28c2:	26 9f       	mul	r18, r22
    28c4:	c0 01       	movw	r24, r0
    28c6:	27 9f       	mul	r18, r23
    28c8:	90 0d       	add	r25, r0
    28ca:	36 9f       	mul	r19, r22
    28cc:	90 0d       	add	r25, r0
    28ce:	11 24       	eor	r1, r1
    28d0:	88 0f       	add	r24, r24
    28d2:	89 2f       	mov	r24, r25
    28d4:	88 1f       	adc	r24, r24
    28d6:	99 0b       	sbc	r25, r25
    28d8:	90 93 57 02 	sts	0x0257, r25
    28dc:	80 93 56 02 	sts	0x0256, r24
    28e0:	81 e0       	ldi	r24, 0x01	; 1
    28e2:	80 93 f4 01 	sts	0x01F4, r24
    28e6:	18 c0       	rjmp	.+48     	; 0x2918 <STEPPER_process_pwm+0x98>
    28e8:	80 91 f4 01 	lds	r24, 0x01F4
    28ec:	88 23       	and	r24, r24
    28ee:	a1 f0       	breq	.+40     	; 0x2918 <STEPPER_process_pwm+0x98>
    28f0:	80 91 56 02 	lds	r24, 0x0256
    28f4:	90 91 57 02 	lds	r25, 0x0257
    28f8:	01 97       	sbiw	r24, 0x01	; 1
    28fa:	90 93 57 02 	sts	0x0257, r25
    28fe:	80 93 56 02 	sts	0x0256, r24
    2902:	80 91 56 02 	lds	r24, 0x0256
    2906:	90 91 57 02 	lds	r25, 0x0257
    290a:	89 2b       	or	r24, r25
    290c:	29 f4       	brne	.+10     	; 0x2918 <STEPPER_process_pwm+0x98>
    290e:	80 81       	ld	r24, Z
    2910:	83 7e       	andi	r24, 0xE3	; 227
    2912:	80 83       	st	Z, r24
    2914:	10 92 f4 01 	sts	0x01F4, r1
    2918:	80 91 64 02 	lds	r24, 0x0264
    291c:	82 30       	cpi	r24, 0x02	; 2
    291e:	69 f4       	brne	.+26     	; 0x293a <STEPPER_process_pwm+0xba>
    2920:	80 91 f5 01 	lds	r24, 0x01F5
    2924:	91 e0       	ldi	r25, 0x01	; 1
    2926:	89 27       	eor	r24, r25
    2928:	80 93 f5 01 	sts	0x01F5, r24
    292c:	88 23       	and	r24, r24
    292e:	09 f0       	breq	.+2      	; 0x2932 <STEPPER_process_pwm+0xb2>
    2930:	3e c0       	rjmp	.+124    	; 0x29ae <STEPPER_process_pwm+0x12e>
    2932:	80 81       	ld	r24, Z
    2934:	8f 71       	andi	r24, 0x1F	; 31
    2936:	80 83       	st	Z, r24
    2938:	08 95       	ret
    293a:	80 91 44 02 	lds	r24, 0x0244
    293e:	90 91 45 02 	lds	r25, 0x0245
    2942:	c3 97       	sbiw	r24, 0x33	; 51
    2944:	a4 f5       	brge	.+104    	; 0x29ae <STEPPER_process_pwm+0x12e>
    2946:	44 23       	and	r20, r20
    2948:	d1 f0       	breq	.+52     	; 0x297e <STEPPER_process_pwm+0xfe>
    294a:	20 91 44 02 	lds	r18, 0x0244
    294e:	30 91 45 02 	lds	r19, 0x0245
    2952:	80 e6       	ldi	r24, 0x60	; 96
    2954:	90 e0       	ldi	r25, 0x00	; 0
    2956:	ac 01       	movw	r20, r24
    2958:	24 9f       	mul	r18, r20
    295a:	c0 01       	movw	r24, r0
    295c:	25 9f       	mul	r18, r21
    295e:	90 0d       	add	r25, r0
    2960:	34 9f       	mul	r19, r20
    2962:	90 0d       	add	r25, r0
    2964:	11 24       	eor	r1, r1
    2966:	88 0f       	add	r24, r24
    2968:	89 2f       	mov	r24, r25
    296a:	88 1f       	adc	r24, r24
    296c:	99 0b       	sbc	r25, r25
    296e:	90 93 59 02 	sts	0x0259, r25
    2972:	80 93 58 02 	sts	0x0258, r24
    2976:	81 e0       	ldi	r24, 0x01	; 1
    2978:	80 93 f3 01 	sts	0x01F3, r24
    297c:	08 95       	ret
    297e:	80 91 f3 01 	lds	r24, 0x01F3
    2982:	88 23       	and	r24, r24
    2984:	a1 f0       	breq	.+40     	; 0x29ae <STEPPER_process_pwm+0x12e>
    2986:	80 91 58 02 	lds	r24, 0x0258
    298a:	90 91 59 02 	lds	r25, 0x0259
    298e:	01 97       	sbiw	r24, 0x01	; 1
    2990:	90 93 59 02 	sts	0x0259, r25
    2994:	80 93 58 02 	sts	0x0258, r24
    2998:	80 91 58 02 	lds	r24, 0x0258
    299c:	90 91 59 02 	lds	r25, 0x0259
    29a0:	89 2b       	or	r24, r25
    29a2:	29 f4       	brne	.+10     	; 0x29ae <STEPPER_process_pwm+0x12e>
    29a4:	80 81       	ld	r24, Z
    29a6:	8f 71       	andi	r24, 0x1F	; 31
    29a8:	80 83       	st	Z, r24
    29aa:	10 92 f3 01 	sts	0x01F3, r1
    29ae:	08 95       	ret

000029b0 <STEPPER_set_steps>:
    29b0:	98 2f       	mov	r25, r24
    29b2:	81 e0       	ldi	r24, 0x01	; 1
    29b4:	80 93 72 02 	sts	0x0272, r24
    29b8:	91 30       	cpi	r25, 0x01	; 1
    29ba:	71 f0       	breq	.+28     	; 0x29d8 <STEPPER_set_steps+0x28>
    29bc:	91 30       	cpi	r25, 0x01	; 1
    29be:	18 f0       	brcs	.+6      	; 0x29c6 <STEPPER_set_steps+0x16>
    29c0:	92 30       	cpi	r25, 0x02	; 2
    29c2:	71 f4       	brne	.+28     	; 0x29e0 <STEPPER_set_steps+0x30>
    29c4:	05 c0       	rjmp	.+10     	; 0x29d0 <STEPPER_set_steps+0x20>
    29c6:	70 93 4f 02 	sts	0x024F, r23
    29ca:	60 93 4e 02 	sts	0x024E, r22
    29ce:	08 c0       	rjmp	.+16     	; 0x29e0 <STEPPER_set_steps+0x30>
    29d0:	70 93 4f 02 	sts	0x024F, r23
    29d4:	60 93 4e 02 	sts	0x024E, r22
    29d8:	70 93 51 02 	sts	0x0251, r23
    29dc:	60 93 50 02 	sts	0x0250, r22
    29e0:	10 92 72 02 	sts	0x0272, r1
    29e4:	08 95       	ret

000029e6 <__subsf3>:
    29e6:	50 58       	subi	r21, 0x80	; 128

000029e8 <__addsf3>:
    29e8:	bb 27       	eor	r27, r27
    29ea:	aa 27       	eor	r26, r26
    29ec:	0e d0       	rcall	.+28     	; 0x2a0a <__addsf3x>
    29ee:	22 c1       	rjmp	.+580    	; 0x2c34 <__fp_round>
    29f0:	13 d1       	rcall	.+550    	; 0x2c18 <__fp_pscA>
    29f2:	30 f0       	brcs	.+12     	; 0x2a00 <__addsf3+0x18>
    29f4:	18 d1       	rcall	.+560    	; 0x2c26 <__fp_pscB>
    29f6:	20 f0       	brcs	.+8      	; 0x2a00 <__addsf3+0x18>
    29f8:	31 f4       	brne	.+12     	; 0x2a06 <__addsf3+0x1e>
    29fa:	9f 3f       	cpi	r25, 0xFF	; 255
    29fc:	11 f4       	brne	.+4      	; 0x2a02 <__addsf3+0x1a>
    29fe:	1e f4       	brtc	.+6      	; 0x2a06 <__addsf3+0x1e>
    2a00:	08 c1       	rjmp	.+528    	; 0x2c12 <__fp_nan>
    2a02:	0e f4       	brtc	.+2      	; 0x2a06 <__addsf3+0x1e>
    2a04:	e0 95       	com	r30
    2a06:	e7 fb       	bst	r30, 7
    2a08:	fe c0       	rjmp	.+508    	; 0x2c06 <__fp_inf>

00002a0a <__addsf3x>:
    2a0a:	e9 2f       	mov	r30, r25
    2a0c:	24 d1       	rcall	.+584    	; 0x2c56 <__fp_split3>
    2a0e:	80 f3       	brcs	.-32     	; 0x29f0 <__addsf3+0x8>
    2a10:	ba 17       	cp	r27, r26
    2a12:	62 07       	cpc	r22, r18
    2a14:	73 07       	cpc	r23, r19
    2a16:	84 07       	cpc	r24, r20
    2a18:	95 07       	cpc	r25, r21
    2a1a:	18 f0       	brcs	.+6      	; 0x2a22 <__addsf3x+0x18>
    2a1c:	99 f4       	brne	.+38     	; 0x2a44 <__addsf3x+0x3a>
    2a1e:	c6 f5       	brtc	.+112    	; 0x2a90 <__addsf3x+0x86>
    2a20:	3c c1       	rjmp	.+632    	; 0x2c9a <__fp_zero>
    2a22:	0e f4       	brtc	.+2      	; 0x2a26 <__addsf3x+0x1c>
    2a24:	e0 95       	com	r30
    2a26:	0b 2e       	mov	r0, r27
    2a28:	ba 2f       	mov	r27, r26
    2a2a:	a0 2d       	mov	r26, r0
    2a2c:	06 2e       	mov	r0, r22
    2a2e:	62 2f       	mov	r22, r18
    2a30:	20 2d       	mov	r18, r0
    2a32:	07 2e       	mov	r0, r23
    2a34:	73 2f       	mov	r23, r19
    2a36:	30 2d       	mov	r19, r0
    2a38:	08 2e       	mov	r0, r24
    2a3a:	84 2f       	mov	r24, r20
    2a3c:	40 2d       	mov	r20, r0
    2a3e:	09 2e       	mov	r0, r25
    2a40:	95 2f       	mov	r25, r21
    2a42:	50 2d       	mov	r21, r0
    2a44:	ff 27       	eor	r31, r31
    2a46:	59 1b       	sub	r21, r25
    2a48:	99 f0       	breq	.+38     	; 0x2a70 <__addsf3x+0x66>
    2a4a:	59 3f       	cpi	r21, 0xF9	; 249
    2a4c:	50 f4       	brcc	.+20     	; 0x2a62 <__addsf3x+0x58>
    2a4e:	50 3e       	cpi	r21, 0xE0	; 224
    2a50:	68 f1       	brcs	.+90     	; 0x2aac <__addsf3x+0xa2>
    2a52:	1a 16       	cp	r1, r26
    2a54:	f0 40       	sbci	r31, 0x00	; 0
    2a56:	a2 2f       	mov	r26, r18
    2a58:	23 2f       	mov	r18, r19
    2a5a:	34 2f       	mov	r19, r20
    2a5c:	44 27       	eor	r20, r20
    2a5e:	58 5f       	subi	r21, 0xF8	; 248
    2a60:	f3 cf       	rjmp	.-26     	; 0x2a48 <__addsf3x+0x3e>
    2a62:	46 95       	lsr	r20
    2a64:	37 95       	ror	r19
    2a66:	27 95       	ror	r18
    2a68:	a7 95       	ror	r26
    2a6a:	f0 40       	sbci	r31, 0x00	; 0
    2a6c:	53 95       	inc	r21
    2a6e:	c9 f7       	brne	.-14     	; 0x2a62 <__addsf3x+0x58>
    2a70:	7e f4       	brtc	.+30     	; 0x2a90 <__addsf3x+0x86>
    2a72:	1f 16       	cp	r1, r31
    2a74:	ba 0b       	sbc	r27, r26
    2a76:	62 0b       	sbc	r22, r18
    2a78:	73 0b       	sbc	r23, r19
    2a7a:	84 0b       	sbc	r24, r20
    2a7c:	ba f0       	brmi	.+46     	; 0x2aac <__addsf3x+0xa2>
    2a7e:	91 50       	subi	r25, 0x01	; 1
    2a80:	a1 f0       	breq	.+40     	; 0x2aaa <__addsf3x+0xa0>
    2a82:	ff 0f       	add	r31, r31
    2a84:	bb 1f       	adc	r27, r27
    2a86:	66 1f       	adc	r22, r22
    2a88:	77 1f       	adc	r23, r23
    2a8a:	88 1f       	adc	r24, r24
    2a8c:	c2 f7       	brpl	.-16     	; 0x2a7e <__addsf3x+0x74>
    2a8e:	0e c0       	rjmp	.+28     	; 0x2aac <__addsf3x+0xa2>
    2a90:	ba 0f       	add	r27, r26
    2a92:	62 1f       	adc	r22, r18
    2a94:	73 1f       	adc	r23, r19
    2a96:	84 1f       	adc	r24, r20
    2a98:	48 f4       	brcc	.+18     	; 0x2aac <__addsf3x+0xa2>
    2a9a:	87 95       	ror	r24
    2a9c:	77 95       	ror	r23
    2a9e:	67 95       	ror	r22
    2aa0:	b7 95       	ror	r27
    2aa2:	f7 95       	ror	r31
    2aa4:	9e 3f       	cpi	r25, 0xFE	; 254
    2aa6:	08 f0       	brcs	.+2      	; 0x2aaa <__addsf3x+0xa0>
    2aa8:	ae cf       	rjmp	.-164    	; 0x2a06 <__addsf3+0x1e>
    2aaa:	93 95       	inc	r25
    2aac:	88 0f       	add	r24, r24
    2aae:	08 f0       	brcs	.+2      	; 0x2ab2 <__addsf3x+0xa8>
    2ab0:	99 27       	eor	r25, r25
    2ab2:	ee 0f       	add	r30, r30
    2ab4:	97 95       	ror	r25
    2ab6:	87 95       	ror	r24
    2ab8:	08 95       	ret

00002aba <__divsf3>:
    2aba:	0c d0       	rcall	.+24     	; 0x2ad4 <__divsf3x>
    2abc:	bb c0       	rjmp	.+374    	; 0x2c34 <__fp_round>
    2abe:	b3 d0       	rcall	.+358    	; 0x2c26 <__fp_pscB>
    2ac0:	40 f0       	brcs	.+16     	; 0x2ad2 <__divsf3+0x18>
    2ac2:	aa d0       	rcall	.+340    	; 0x2c18 <__fp_pscA>
    2ac4:	30 f0       	brcs	.+12     	; 0x2ad2 <__divsf3+0x18>
    2ac6:	21 f4       	brne	.+8      	; 0x2ad0 <__divsf3+0x16>
    2ac8:	5f 3f       	cpi	r21, 0xFF	; 255
    2aca:	19 f0       	breq	.+6      	; 0x2ad2 <__divsf3+0x18>
    2acc:	9c c0       	rjmp	.+312    	; 0x2c06 <__fp_inf>
    2ace:	51 11       	cpse	r21, r1
    2ad0:	e5 c0       	rjmp	.+458    	; 0x2c9c <__fp_szero>
    2ad2:	9f c0       	rjmp	.+318    	; 0x2c12 <__fp_nan>

00002ad4 <__divsf3x>:
    2ad4:	c0 d0       	rcall	.+384    	; 0x2c56 <__fp_split3>
    2ad6:	98 f3       	brcs	.-26     	; 0x2abe <__divsf3+0x4>

00002ad8 <__divsf3_pse>:
    2ad8:	99 23       	and	r25, r25
    2ada:	c9 f3       	breq	.-14     	; 0x2ace <__divsf3+0x14>
    2adc:	55 23       	and	r21, r21
    2ade:	b1 f3       	breq	.-20     	; 0x2acc <__divsf3+0x12>
    2ae0:	95 1b       	sub	r25, r21
    2ae2:	55 0b       	sbc	r21, r21
    2ae4:	bb 27       	eor	r27, r27
    2ae6:	aa 27       	eor	r26, r26
    2ae8:	62 17       	cp	r22, r18
    2aea:	73 07       	cpc	r23, r19
    2aec:	84 07       	cpc	r24, r20
    2aee:	38 f0       	brcs	.+14     	; 0x2afe <__divsf3_pse+0x26>
    2af0:	9f 5f       	subi	r25, 0xFF	; 255
    2af2:	5f 4f       	sbci	r21, 0xFF	; 255
    2af4:	22 0f       	add	r18, r18
    2af6:	33 1f       	adc	r19, r19
    2af8:	44 1f       	adc	r20, r20
    2afa:	aa 1f       	adc	r26, r26
    2afc:	a9 f3       	breq	.-22     	; 0x2ae8 <__divsf3_pse+0x10>
    2afe:	34 d0       	rcall	.+104    	; 0x2b68 <__divsf3_pse+0x90>
    2b00:	0e 2e       	mov	r0, r30
    2b02:	3a f0       	brmi	.+14     	; 0x2b12 <__divsf3_pse+0x3a>
    2b04:	e0 e8       	ldi	r30, 0x80	; 128
    2b06:	31 d0       	rcall	.+98     	; 0x2b6a <__divsf3_pse+0x92>
    2b08:	91 50       	subi	r25, 0x01	; 1
    2b0a:	50 40       	sbci	r21, 0x00	; 0
    2b0c:	e6 95       	lsr	r30
    2b0e:	00 1c       	adc	r0, r0
    2b10:	ca f7       	brpl	.-14     	; 0x2b04 <__divsf3_pse+0x2c>
    2b12:	2a d0       	rcall	.+84     	; 0x2b68 <__divsf3_pse+0x90>
    2b14:	fe 2f       	mov	r31, r30
    2b16:	28 d0       	rcall	.+80     	; 0x2b68 <__divsf3_pse+0x90>
    2b18:	66 0f       	add	r22, r22
    2b1a:	77 1f       	adc	r23, r23
    2b1c:	88 1f       	adc	r24, r24
    2b1e:	bb 1f       	adc	r27, r27
    2b20:	26 17       	cp	r18, r22
    2b22:	37 07       	cpc	r19, r23
    2b24:	48 07       	cpc	r20, r24
    2b26:	ab 07       	cpc	r26, r27
    2b28:	b0 e8       	ldi	r27, 0x80	; 128
    2b2a:	09 f0       	breq	.+2      	; 0x2b2e <__divsf3_pse+0x56>
    2b2c:	bb 0b       	sbc	r27, r27
    2b2e:	80 2d       	mov	r24, r0
    2b30:	6e 2f       	mov	r22, r30
    2b32:	7f 2f       	mov	r23, r31
    2b34:	ff 27       	eor	r31, r31
    2b36:	93 58       	subi	r25, 0x83	; 131
    2b38:	5f 4f       	sbci	r21, 0xFF	; 255
    2b3a:	2a f0       	brmi	.+10     	; 0x2b46 <__divsf3_pse+0x6e>
    2b3c:	9e 3f       	cpi	r25, 0xFE	; 254
    2b3e:	51 05       	cpc	r21, r1
    2b40:	68 f0       	brcs	.+26     	; 0x2b5c <__divsf3_pse+0x84>
    2b42:	61 c0       	rjmp	.+194    	; 0x2c06 <__fp_inf>
    2b44:	ab c0       	rjmp	.+342    	; 0x2c9c <__fp_szero>
    2b46:	5f 3f       	cpi	r21, 0xFF	; 255
    2b48:	ec f3       	brlt	.-6      	; 0x2b44 <__divsf3_pse+0x6c>
    2b4a:	98 3e       	cpi	r25, 0xE8	; 232
    2b4c:	dc f3       	brlt	.-10     	; 0x2b44 <__divsf3_pse+0x6c>
    2b4e:	86 95       	lsr	r24
    2b50:	77 95       	ror	r23
    2b52:	67 95       	ror	r22
    2b54:	b7 95       	ror	r27
    2b56:	f7 95       	ror	r31
    2b58:	9f 5f       	subi	r25, 0xFF	; 255
    2b5a:	c9 f7       	brne	.-14     	; 0x2b4e <__divsf3_pse+0x76>
    2b5c:	88 0f       	add	r24, r24
    2b5e:	91 1d       	adc	r25, r1
    2b60:	96 95       	lsr	r25
    2b62:	87 95       	ror	r24
    2b64:	97 f9       	bld	r25, 7
    2b66:	08 95       	ret
    2b68:	e1 e0       	ldi	r30, 0x01	; 1
    2b6a:	66 0f       	add	r22, r22
    2b6c:	77 1f       	adc	r23, r23
    2b6e:	88 1f       	adc	r24, r24
    2b70:	bb 1f       	adc	r27, r27
    2b72:	62 17       	cp	r22, r18
    2b74:	73 07       	cpc	r23, r19
    2b76:	84 07       	cpc	r24, r20
    2b78:	ba 07       	cpc	r27, r26
    2b7a:	20 f0       	brcs	.+8      	; 0x2b84 <__divsf3_pse+0xac>
    2b7c:	62 1b       	sub	r22, r18
    2b7e:	73 0b       	sbc	r23, r19
    2b80:	84 0b       	sbc	r24, r20
    2b82:	ba 0b       	sbc	r27, r26
    2b84:	ee 1f       	adc	r30, r30
    2b86:	88 f7       	brcc	.-30     	; 0x2b6a <__divsf3_pse+0x92>
    2b88:	e0 95       	com	r30
    2b8a:	08 95       	ret

00002b8c <__floatunsisf>:
    2b8c:	e8 94       	clt
    2b8e:	09 c0       	rjmp	.+18     	; 0x2ba2 <__floatsisf+0x12>

00002b90 <__floatsisf>:
    2b90:	97 fb       	bst	r25, 7
    2b92:	3e f4       	brtc	.+14     	; 0x2ba2 <__floatsisf+0x12>
    2b94:	90 95       	com	r25
    2b96:	80 95       	com	r24
    2b98:	70 95       	com	r23
    2b9a:	61 95       	neg	r22
    2b9c:	7f 4f       	sbci	r23, 0xFF	; 255
    2b9e:	8f 4f       	sbci	r24, 0xFF	; 255
    2ba0:	9f 4f       	sbci	r25, 0xFF	; 255
    2ba2:	99 23       	and	r25, r25
    2ba4:	a9 f0       	breq	.+42     	; 0x2bd0 <__floatsisf+0x40>
    2ba6:	f9 2f       	mov	r31, r25
    2ba8:	96 e9       	ldi	r25, 0x96	; 150
    2baa:	bb 27       	eor	r27, r27
    2bac:	93 95       	inc	r25
    2bae:	f6 95       	lsr	r31
    2bb0:	87 95       	ror	r24
    2bb2:	77 95       	ror	r23
    2bb4:	67 95       	ror	r22
    2bb6:	b7 95       	ror	r27
    2bb8:	f1 11       	cpse	r31, r1
    2bba:	f8 cf       	rjmp	.-16     	; 0x2bac <__floatsisf+0x1c>
    2bbc:	fa f4       	brpl	.+62     	; 0x2bfc <__floatsisf+0x6c>
    2bbe:	bb 0f       	add	r27, r27
    2bc0:	11 f4       	brne	.+4      	; 0x2bc6 <__floatsisf+0x36>
    2bc2:	60 ff       	sbrs	r22, 0
    2bc4:	1b c0       	rjmp	.+54     	; 0x2bfc <__floatsisf+0x6c>
    2bc6:	6f 5f       	subi	r22, 0xFF	; 255
    2bc8:	7f 4f       	sbci	r23, 0xFF	; 255
    2bca:	8f 4f       	sbci	r24, 0xFF	; 255
    2bcc:	9f 4f       	sbci	r25, 0xFF	; 255
    2bce:	16 c0       	rjmp	.+44     	; 0x2bfc <__floatsisf+0x6c>
    2bd0:	88 23       	and	r24, r24
    2bd2:	11 f0       	breq	.+4      	; 0x2bd8 <__floatsisf+0x48>
    2bd4:	96 e9       	ldi	r25, 0x96	; 150
    2bd6:	11 c0       	rjmp	.+34     	; 0x2bfa <__floatsisf+0x6a>
    2bd8:	77 23       	and	r23, r23
    2bda:	21 f0       	breq	.+8      	; 0x2be4 <__floatsisf+0x54>
    2bdc:	9e e8       	ldi	r25, 0x8E	; 142
    2bde:	87 2f       	mov	r24, r23
    2be0:	76 2f       	mov	r23, r22
    2be2:	05 c0       	rjmp	.+10     	; 0x2bee <__floatsisf+0x5e>
    2be4:	66 23       	and	r22, r22
    2be6:	71 f0       	breq	.+28     	; 0x2c04 <__floatsisf+0x74>
    2be8:	96 e8       	ldi	r25, 0x86	; 134
    2bea:	86 2f       	mov	r24, r22
    2bec:	70 e0       	ldi	r23, 0x00	; 0
    2bee:	60 e0       	ldi	r22, 0x00	; 0
    2bf0:	2a f0       	brmi	.+10     	; 0x2bfc <__floatsisf+0x6c>
    2bf2:	9a 95       	dec	r25
    2bf4:	66 0f       	add	r22, r22
    2bf6:	77 1f       	adc	r23, r23
    2bf8:	88 1f       	adc	r24, r24
    2bfa:	da f7       	brpl	.-10     	; 0x2bf2 <__floatsisf+0x62>
    2bfc:	88 0f       	add	r24, r24
    2bfe:	96 95       	lsr	r25
    2c00:	87 95       	ror	r24
    2c02:	97 f9       	bld	r25, 7
    2c04:	08 95       	ret

00002c06 <__fp_inf>:
    2c06:	97 f9       	bld	r25, 7
    2c08:	9f 67       	ori	r25, 0x7F	; 127
    2c0a:	80 e8       	ldi	r24, 0x80	; 128
    2c0c:	70 e0       	ldi	r23, 0x00	; 0
    2c0e:	60 e0       	ldi	r22, 0x00	; 0
    2c10:	08 95       	ret

00002c12 <__fp_nan>:
    2c12:	9f ef       	ldi	r25, 0xFF	; 255
    2c14:	80 ec       	ldi	r24, 0xC0	; 192
    2c16:	08 95       	ret

00002c18 <__fp_pscA>:
    2c18:	00 24       	eor	r0, r0
    2c1a:	0a 94       	dec	r0
    2c1c:	16 16       	cp	r1, r22
    2c1e:	17 06       	cpc	r1, r23
    2c20:	18 06       	cpc	r1, r24
    2c22:	09 06       	cpc	r0, r25
    2c24:	08 95       	ret

00002c26 <__fp_pscB>:
    2c26:	00 24       	eor	r0, r0
    2c28:	0a 94       	dec	r0
    2c2a:	12 16       	cp	r1, r18
    2c2c:	13 06       	cpc	r1, r19
    2c2e:	14 06       	cpc	r1, r20
    2c30:	05 06       	cpc	r0, r21
    2c32:	08 95       	ret

00002c34 <__fp_round>:
    2c34:	09 2e       	mov	r0, r25
    2c36:	03 94       	inc	r0
    2c38:	00 0c       	add	r0, r0
    2c3a:	11 f4       	brne	.+4      	; 0x2c40 <__fp_round+0xc>
    2c3c:	88 23       	and	r24, r24
    2c3e:	52 f0       	brmi	.+20     	; 0x2c54 <__fp_round+0x20>
    2c40:	bb 0f       	add	r27, r27
    2c42:	40 f4       	brcc	.+16     	; 0x2c54 <__fp_round+0x20>
    2c44:	bf 2b       	or	r27, r31
    2c46:	11 f4       	brne	.+4      	; 0x2c4c <__fp_round+0x18>
    2c48:	60 ff       	sbrs	r22, 0
    2c4a:	04 c0       	rjmp	.+8      	; 0x2c54 <__fp_round+0x20>
    2c4c:	6f 5f       	subi	r22, 0xFF	; 255
    2c4e:	7f 4f       	sbci	r23, 0xFF	; 255
    2c50:	8f 4f       	sbci	r24, 0xFF	; 255
    2c52:	9f 4f       	sbci	r25, 0xFF	; 255
    2c54:	08 95       	ret

00002c56 <__fp_split3>:
    2c56:	57 fd       	sbrc	r21, 7
    2c58:	90 58       	subi	r25, 0x80	; 128
    2c5a:	44 0f       	add	r20, r20
    2c5c:	55 1f       	adc	r21, r21
    2c5e:	59 f0       	breq	.+22     	; 0x2c76 <__fp_splitA+0x10>
    2c60:	5f 3f       	cpi	r21, 0xFF	; 255
    2c62:	71 f0       	breq	.+28     	; 0x2c80 <__fp_splitA+0x1a>
    2c64:	47 95       	ror	r20

00002c66 <__fp_splitA>:
    2c66:	88 0f       	add	r24, r24
    2c68:	97 fb       	bst	r25, 7
    2c6a:	99 1f       	adc	r25, r25
    2c6c:	61 f0       	breq	.+24     	; 0x2c86 <__fp_splitA+0x20>
    2c6e:	9f 3f       	cpi	r25, 0xFF	; 255
    2c70:	79 f0       	breq	.+30     	; 0x2c90 <__fp_splitA+0x2a>
    2c72:	87 95       	ror	r24
    2c74:	08 95       	ret
    2c76:	12 16       	cp	r1, r18
    2c78:	13 06       	cpc	r1, r19
    2c7a:	14 06       	cpc	r1, r20
    2c7c:	55 1f       	adc	r21, r21
    2c7e:	f2 cf       	rjmp	.-28     	; 0x2c64 <__fp_split3+0xe>
    2c80:	46 95       	lsr	r20
    2c82:	f1 df       	rcall	.-30     	; 0x2c66 <__fp_splitA>
    2c84:	08 c0       	rjmp	.+16     	; 0x2c96 <__fp_splitA+0x30>
    2c86:	16 16       	cp	r1, r22
    2c88:	17 06       	cpc	r1, r23
    2c8a:	18 06       	cpc	r1, r24
    2c8c:	99 1f       	adc	r25, r25
    2c8e:	f1 cf       	rjmp	.-30     	; 0x2c72 <__fp_splitA+0xc>
    2c90:	86 95       	lsr	r24
    2c92:	71 05       	cpc	r23, r1
    2c94:	61 05       	cpc	r22, r1
    2c96:	08 94       	sec
    2c98:	08 95       	ret

00002c9a <__fp_zero>:
    2c9a:	e8 94       	clt

00002c9c <__fp_szero>:
    2c9c:	bb 27       	eor	r27, r27
    2c9e:	66 27       	eor	r22, r22
    2ca0:	77 27       	eor	r23, r23
    2ca2:	86 2f       	mov	r24, r22
    2ca4:	97 2f       	mov	r25, r23
    2ca6:	97 f9       	bld	r25, 7
    2ca8:	08 95       	ret

00002caa <lrint>:
    2caa:	dd df       	rcall	.-70     	; 0x2c66 <__fp_splitA>
    2cac:	a8 f1       	brcs	.+106    	; 0x2d18 <lrint+0x6e>
    2cae:	9e 57       	subi	r25, 0x7E	; 126
    2cb0:	a8 f1       	brcs	.+106    	; 0x2d1c <lrint+0x72>
    2cb2:	98 51       	subi	r25, 0x18	; 24
    2cb4:	60 f0       	brcs	.+24     	; 0x2cce <lrint+0x24>
    2cb6:	39 f1       	breq	.+78     	; 0x2d06 <lrint+0x5c>
    2cb8:	98 30       	cpi	r25, 0x08	; 8
    2cba:	70 f5       	brcc	.+92     	; 0x2d18 <lrint+0x6e>
    2cbc:	09 2e       	mov	r0, r25
    2cbe:	99 27       	eor	r25, r25
    2cc0:	66 0f       	add	r22, r22
    2cc2:	77 1f       	adc	r23, r23
    2cc4:	88 1f       	adc	r24, r24
    2cc6:	99 1f       	adc	r25, r25
    2cc8:	0a 94       	dec	r0
    2cca:	d1 f7       	brne	.-12     	; 0x2cc0 <lrint+0x16>
    2ccc:	1c c0       	rjmp	.+56     	; 0x2d06 <lrint+0x5c>
    2cce:	bb 27       	eor	r27, r27
    2cd0:	99 3f       	cpi	r25, 0xF9	; 249
    2cd2:	4c f4       	brge	.+18     	; 0x2ce6 <lrint+0x3c>
    2cd4:	b1 11       	cpse	r27, r1
    2cd6:	b1 e0       	ldi	r27, 0x01	; 1
    2cd8:	b6 2b       	or	r27, r22
    2cda:	67 2f       	mov	r22, r23
    2cdc:	78 2f       	mov	r23, r24
    2cde:	88 27       	eor	r24, r24
    2ce0:	98 5f       	subi	r25, 0xF8	; 248
    2ce2:	b1 f7       	brne	.-20     	; 0x2cd0 <lrint+0x26>
    2ce4:	08 c0       	rjmp	.+16     	; 0x2cf6 <lrint+0x4c>
    2ce6:	86 95       	lsr	r24
    2ce8:	77 95       	ror	r23
    2cea:	67 95       	ror	r22
    2cec:	b7 95       	ror	r27
    2cee:	08 f4       	brcc	.+2      	; 0x2cf2 <lrint+0x48>
    2cf0:	b1 60       	ori	r27, 0x01	; 1
    2cf2:	93 95       	inc	r25
    2cf4:	c1 f7       	brne	.-16     	; 0x2ce6 <lrint+0x3c>
    2cf6:	bb 0f       	add	r27, r27
    2cf8:	30 f4       	brcc	.+12     	; 0x2d06 <lrint+0x5c>
    2cfa:	11 f4       	brne	.+4      	; 0x2d00 <lrint+0x56>
    2cfc:	60 ff       	sbrs	r22, 0
    2cfe:	03 c0       	rjmp	.+6      	; 0x2d06 <lrint+0x5c>
    2d00:	6f 5f       	subi	r22, 0xFF	; 255
    2d02:	7f 4f       	sbci	r23, 0xFF	; 255
    2d04:	8f 4f       	sbci	r24, 0xFF	; 255
    2d06:	3e f4       	brtc	.+14     	; 0x2d16 <lrint+0x6c>
    2d08:	90 95       	com	r25
    2d0a:	80 95       	com	r24
    2d0c:	70 95       	com	r23
    2d0e:	61 95       	neg	r22
    2d10:	7f 4f       	sbci	r23, 0xFF	; 255
    2d12:	8f 4f       	sbci	r24, 0xFF	; 255
    2d14:	9f 4f       	sbci	r25, 0xFF	; 255
    2d16:	08 95       	ret
    2d18:	68 94       	set
    2d1a:	c0 cf       	rjmp	.-128    	; 0x2c9c <__fp_szero>
    2d1c:	be cf       	rjmp	.-132    	; 0x2c9a <__fp_zero>

00002d1e <__mulsf3>:
    2d1e:	0a d0       	rcall	.+20     	; 0x2d34 <__mulsf3x>
    2d20:	89 cf       	rjmp	.-238    	; 0x2c34 <__fp_round>
    2d22:	7a df       	rcall	.-268    	; 0x2c18 <__fp_pscA>
    2d24:	28 f0       	brcs	.+10     	; 0x2d30 <__mulsf3+0x12>
    2d26:	7f df       	rcall	.-258    	; 0x2c26 <__fp_pscB>
    2d28:	18 f0       	brcs	.+6      	; 0x2d30 <__mulsf3+0x12>
    2d2a:	95 23       	and	r25, r21
    2d2c:	09 f0       	breq	.+2      	; 0x2d30 <__mulsf3+0x12>
    2d2e:	6b cf       	rjmp	.-298    	; 0x2c06 <__fp_inf>
    2d30:	70 cf       	rjmp	.-288    	; 0x2c12 <__fp_nan>
    2d32:	b4 cf       	rjmp	.-152    	; 0x2c9c <__fp_szero>

00002d34 <__mulsf3x>:
    2d34:	90 df       	rcall	.-224    	; 0x2c56 <__fp_split3>
    2d36:	a8 f3       	brcs	.-22     	; 0x2d22 <__mulsf3+0x4>

00002d38 <__mulsf3_pse>:
    2d38:	99 23       	and	r25, r25
    2d3a:	d9 f3       	breq	.-10     	; 0x2d32 <__mulsf3+0x14>
    2d3c:	55 23       	and	r21, r21
    2d3e:	c9 f3       	breq	.-14     	; 0x2d32 <__mulsf3+0x14>
    2d40:	95 0f       	add	r25, r21
    2d42:	50 e0       	ldi	r21, 0x00	; 0
    2d44:	55 1f       	adc	r21, r21
    2d46:	aa 27       	eor	r26, r26
    2d48:	ee 27       	eor	r30, r30
    2d4a:	ff 27       	eor	r31, r31
    2d4c:	bb 27       	eor	r27, r27
    2d4e:	00 24       	eor	r0, r0
    2d50:	08 94       	sec
    2d52:	67 95       	ror	r22
    2d54:	20 f4       	brcc	.+8      	; 0x2d5e <__mulsf3_pse+0x26>
    2d56:	e2 0f       	add	r30, r18
    2d58:	f3 1f       	adc	r31, r19
    2d5a:	b4 1f       	adc	r27, r20
    2d5c:	0a 1e       	adc	r0, r26
    2d5e:	22 0f       	add	r18, r18
    2d60:	33 1f       	adc	r19, r19
    2d62:	44 1f       	adc	r20, r20
    2d64:	aa 1f       	adc	r26, r26
    2d66:	66 95       	lsr	r22
    2d68:	a9 f7       	brne	.-22     	; 0x2d54 <__mulsf3_pse+0x1c>
    2d6a:	77 95       	ror	r23
    2d6c:	30 f4       	brcc	.+12     	; 0x2d7a <__mulsf3_pse+0x42>
    2d6e:	f3 0f       	add	r31, r19
    2d70:	b4 1f       	adc	r27, r20
    2d72:	0a 1e       	adc	r0, r26
    2d74:	12 1e       	adc	r1, r18
    2d76:	08 f4       	brcc	.+2      	; 0x2d7a <__mulsf3_pse+0x42>
    2d78:	63 95       	inc	r22
    2d7a:	33 0f       	add	r19, r19
    2d7c:	44 1f       	adc	r20, r20
    2d7e:	aa 1f       	adc	r26, r26
    2d80:	22 1f       	adc	r18, r18
    2d82:	76 95       	lsr	r23
    2d84:	99 f7       	brne	.-26     	; 0x2d6c <__mulsf3_pse+0x34>
    2d86:	87 95       	ror	r24
    2d88:	20 f4       	brcc	.+8      	; 0x2d92 <__mulsf3_pse+0x5a>
    2d8a:	b4 0f       	add	r27, r20
    2d8c:	0a 1e       	adc	r0, r26
    2d8e:	12 1e       	adc	r1, r18
    2d90:	63 1f       	adc	r22, r19
    2d92:	44 0f       	add	r20, r20
    2d94:	aa 1f       	adc	r26, r26
    2d96:	22 1f       	adc	r18, r18
    2d98:	33 1f       	adc	r19, r19
    2d9a:	86 95       	lsr	r24
    2d9c:	a9 f7       	brne	.-22     	; 0x2d88 <__mulsf3_pse+0x50>
    2d9e:	86 2f       	mov	r24, r22
    2da0:	71 2d       	mov	r23, r1
    2da2:	60 2d       	mov	r22, r0
    2da4:	11 24       	eor	r1, r1
    2da6:	9f 57       	subi	r25, 0x7F	; 127
    2da8:	50 40       	sbci	r21, 0x00	; 0
    2daa:	8a f0       	brmi	.+34     	; 0x2dce <__mulsf3_pse+0x96>
    2dac:	e1 f0       	breq	.+56     	; 0x2de6 <__mulsf3_pse+0xae>
    2dae:	88 23       	and	r24, r24
    2db0:	4a f0       	brmi	.+18     	; 0x2dc4 <__mulsf3_pse+0x8c>
    2db2:	ee 0f       	add	r30, r30
    2db4:	ff 1f       	adc	r31, r31
    2db6:	bb 1f       	adc	r27, r27
    2db8:	66 1f       	adc	r22, r22
    2dba:	77 1f       	adc	r23, r23
    2dbc:	88 1f       	adc	r24, r24
    2dbe:	91 50       	subi	r25, 0x01	; 1
    2dc0:	50 40       	sbci	r21, 0x00	; 0
    2dc2:	a9 f7       	brne	.-22     	; 0x2dae <__mulsf3_pse+0x76>
    2dc4:	9e 3f       	cpi	r25, 0xFE	; 254
    2dc6:	51 05       	cpc	r21, r1
    2dc8:	70 f0       	brcs	.+28     	; 0x2de6 <__mulsf3_pse+0xae>
    2dca:	1d cf       	rjmp	.-454    	; 0x2c06 <__fp_inf>
    2dcc:	67 cf       	rjmp	.-306    	; 0x2c9c <__fp_szero>
    2dce:	5f 3f       	cpi	r21, 0xFF	; 255
    2dd0:	ec f3       	brlt	.-6      	; 0x2dcc <__mulsf3_pse+0x94>
    2dd2:	98 3e       	cpi	r25, 0xE8	; 232
    2dd4:	dc f3       	brlt	.-10     	; 0x2dcc <__mulsf3_pse+0x94>
    2dd6:	86 95       	lsr	r24
    2dd8:	77 95       	ror	r23
    2dda:	67 95       	ror	r22
    2ddc:	b7 95       	ror	r27
    2dde:	f7 95       	ror	r31
    2de0:	e7 95       	ror	r30
    2de2:	9f 5f       	subi	r25, 0xFF	; 255
    2de4:	c1 f7       	brne	.-16     	; 0x2dd6 <__mulsf3_pse+0x9e>
    2de6:	fe 2b       	or	r31, r30
    2de8:	88 0f       	add	r24, r24
    2dea:	91 1d       	adc	r25, r1
    2dec:	96 95       	lsr	r25
    2dee:	87 95       	ror	r24
    2df0:	97 f9       	bld	r25, 7
    2df2:	08 95       	ret

00002df4 <pow>:
    2df4:	e4 2f       	mov	r30, r20
    2df6:	f5 2f       	mov	r31, r21
    2df8:	ee 0f       	add	r30, r30
    2dfa:	ff 1f       	adc	r31, r31
    2dfc:	30 96       	adiw	r30, 0x00	; 0
    2dfe:	21 05       	cpc	r18, r1
    2e00:	31 05       	cpc	r19, r1
    2e02:	a1 f1       	breq	.+104    	; 0x2e6c <pow+0x78>
    2e04:	61 15       	cp	r22, r1
    2e06:	71 05       	cpc	r23, r1
    2e08:	61 f4       	brne	.+24     	; 0x2e22 <pow+0x2e>
    2e0a:	80 38       	cpi	r24, 0x80	; 128
    2e0c:	bf e3       	ldi	r27, 0x3F	; 63
    2e0e:	9b 07       	cpc	r25, r27
    2e10:	51 f1       	breq	.+84     	; 0x2e66 <pow+0x72>
    2e12:	68 94       	set
    2e14:	90 38       	cpi	r25, 0x80	; 128
    2e16:	81 05       	cpc	r24, r1
    2e18:	61 f0       	breq	.+24     	; 0x2e32 <pow+0x3e>
    2e1a:	80 38       	cpi	r24, 0x80	; 128
    2e1c:	bf ef       	ldi	r27, 0xFF	; 255
    2e1e:	9b 07       	cpc	r25, r27
    2e20:	41 f0       	breq	.+16     	; 0x2e32 <pow+0x3e>
    2e22:	99 23       	and	r25, r25
    2e24:	4a f5       	brpl	.+82     	; 0x2e78 <pow+0x84>
    2e26:	ff 3f       	cpi	r31, 0xFF	; 255
    2e28:	e1 05       	cpc	r30, r1
    2e2a:	31 05       	cpc	r19, r1
    2e2c:	21 05       	cpc	r18, r1
    2e2e:	19 f1       	breq	.+70     	; 0x2e76 <pow+0x82>
    2e30:	e8 94       	clt
    2e32:	08 94       	sec
    2e34:	e7 95       	ror	r30
    2e36:	a2 2f       	mov	r26, r18
    2e38:	b3 2f       	mov	r27, r19
    2e3a:	aa 23       	and	r26, r26
    2e3c:	29 f4       	brne	.+10     	; 0x2e48 <pow+0x54>
    2e3e:	ab 2f       	mov	r26, r27
    2e40:	be 2f       	mov	r27, r30
    2e42:	f8 5f       	subi	r31, 0xF8	; 248
    2e44:	d0 f3       	brcs	.-12     	; 0x2e3a <pow+0x46>
    2e46:	10 c0       	rjmp	.+32     	; 0x2e68 <pow+0x74>
    2e48:	ff 5f       	subi	r31, 0xFF	; 255
    2e4a:	70 f4       	brcc	.+28     	; 0x2e68 <pow+0x74>
    2e4c:	a6 95       	lsr	r26
    2e4e:	e0 f7       	brcc	.-8      	; 0x2e48 <pow+0x54>
    2e50:	f7 39       	cpi	r31, 0x97	; 151
    2e52:	50 f0       	brcs	.+20     	; 0x2e68 <pow+0x74>
    2e54:	19 f0       	breq	.+6      	; 0x2e5c <pow+0x68>
    2e56:	ff 3a       	cpi	r31, 0xAF	; 175
    2e58:	38 f4       	brcc	.+14     	; 0x2e68 <pow+0x74>
    2e5a:	9f 77       	andi	r25, 0x7F	; 127
    2e5c:	9f 93       	push	r25
    2e5e:	0c d0       	rcall	.+24     	; 0x2e78 <pow+0x84>
    2e60:	0f 90       	pop	r0
    2e62:	07 fc       	sbrc	r0, 7
    2e64:	90 58       	subi	r25, 0x80	; 128
    2e66:	08 95       	ret
    2e68:	3e f0       	brts	.+14     	; 0x2e78 <pow+0x84>
    2e6a:	d3 ce       	rjmp	.-602    	; 0x2c12 <__fp_nan>
    2e6c:	60 e0       	ldi	r22, 0x00	; 0
    2e6e:	70 e0       	ldi	r23, 0x00	; 0
    2e70:	80 e8       	ldi	r24, 0x80	; 128
    2e72:	9f e3       	ldi	r25, 0x3F	; 63
    2e74:	08 95       	ret
    2e76:	4f e7       	ldi	r20, 0x7F	; 127
    2e78:	9f 77       	andi	r25, 0x7F	; 127
    2e7a:	5f 93       	push	r21
    2e7c:	4f 93       	push	r20
    2e7e:	3f 93       	push	r19
    2e80:	2f 93       	push	r18
    2e82:	b2 d0       	rcall	.+356    	; 0x2fe8 <log>
    2e84:	2f 91       	pop	r18
    2e86:	3f 91       	pop	r19
    2e88:	4f 91       	pop	r20
    2e8a:	5f 91       	pop	r21
    2e8c:	48 df       	rcall	.-368    	; 0x2d1e <__mulsf3>
    2e8e:	05 c0       	rjmp	.+10     	; 0x2e9a <exp>
    2e90:	19 f4       	brne	.+6      	; 0x2e98 <pow+0xa4>
    2e92:	0e f0       	brts	.+2      	; 0x2e96 <pow+0xa2>
    2e94:	b8 ce       	rjmp	.-656    	; 0x2c06 <__fp_inf>
    2e96:	01 cf       	rjmp	.-510    	; 0x2c9a <__fp_zero>
    2e98:	bc ce       	rjmp	.-648    	; 0x2c12 <__fp_nan>

00002e9a <exp>:
    2e9a:	e5 de       	rcall	.-566    	; 0x2c66 <__fp_splitA>
    2e9c:	c8 f3       	brcs	.-14     	; 0x2e90 <pow+0x9c>
    2e9e:	96 38       	cpi	r25, 0x86	; 134
    2ea0:	c0 f7       	brcc	.-16     	; 0x2e92 <pow+0x9e>
    2ea2:	07 f8       	bld	r0, 7
    2ea4:	0f 92       	push	r0
    2ea6:	e8 94       	clt
    2ea8:	2b e3       	ldi	r18, 0x3B	; 59
    2eaa:	3a ea       	ldi	r19, 0xAA	; 170
    2eac:	48 eb       	ldi	r20, 0xB8	; 184
    2eae:	5f e7       	ldi	r21, 0x7F	; 127
    2eb0:	43 df       	rcall	.-378    	; 0x2d38 <__mulsf3_pse>
    2eb2:	0f 92       	push	r0
    2eb4:	0f 92       	push	r0
    2eb6:	0f 92       	push	r0
    2eb8:	4d b7       	in	r20, 0x3d	; 61
    2eba:	5e b7       	in	r21, 0x3e	; 62
    2ebc:	0f 92       	push	r0
    2ebe:	d9 d0       	rcall	.+434    	; 0x3072 <modf>
    2ec0:	e8 ec       	ldi	r30, 0xC8	; 200
    2ec2:	f0 e0       	ldi	r31, 0x00	; 0
    2ec4:	16 d0       	rcall	.+44     	; 0x2ef2 <__fp_powser>
    2ec6:	4f 91       	pop	r20
    2ec8:	5f 91       	pop	r21
    2eca:	ef 91       	pop	r30
    2ecc:	ff 91       	pop	r31
    2ece:	e5 95       	asr	r30
    2ed0:	ee 1f       	adc	r30, r30
    2ed2:	ff 1f       	adc	r31, r31
    2ed4:	49 f0       	breq	.+18     	; 0x2ee8 <exp+0x4e>
    2ed6:	fe 57       	subi	r31, 0x7E	; 126
    2ed8:	e0 68       	ori	r30, 0x80	; 128
    2eda:	44 27       	eor	r20, r20
    2edc:	ee 0f       	add	r30, r30
    2ede:	44 1f       	adc	r20, r20
    2ee0:	fa 95       	dec	r31
    2ee2:	e1 f7       	brne	.-8      	; 0x2edc <exp+0x42>
    2ee4:	41 95       	neg	r20
    2ee6:	55 0b       	sbc	r21, r21
    2ee8:	46 d0       	rcall	.+140    	; 0x2f76 <ldexp>
    2eea:	0f 90       	pop	r0
    2eec:	07 fe       	sbrs	r0, 7
    2eee:	38 c0       	rjmp	.+112    	; 0x2f60 <inverse>
    2ef0:	08 95       	ret

00002ef2 <__fp_powser>:
    2ef2:	df 93       	push	r29
    2ef4:	cf 93       	push	r28
    2ef6:	1f 93       	push	r17
    2ef8:	0f 93       	push	r16
    2efa:	ff 92       	push	r15
    2efc:	ef 92       	push	r14
    2efe:	df 92       	push	r13
    2f00:	e6 2e       	mov	r14, r22
    2f02:	f7 2e       	mov	r15, r23
    2f04:	08 2f       	mov	r16, r24
    2f06:	19 2f       	mov	r17, r25
    2f08:	68 94       	set
    2f0a:	07 c0       	rjmp	.+14     	; 0x2f1a <__fp_powser+0x28>
    2f0c:	da 2e       	mov	r13, r26
    2f0e:	ce 2f       	mov	r28, r30
    2f10:	df 2f       	mov	r29, r31
    2f12:	10 df       	rcall	.-480    	; 0x2d34 <__mulsf3x>
    2f14:	ec 2f       	mov	r30, r28
    2f16:	fd 2f       	mov	r31, r29
    2f18:	e8 94       	clt
    2f1a:	c8 95       	lpm
    2f1c:	a0 2d       	mov	r26, r0
    2f1e:	31 96       	adiw	r30, 0x01	; 1
    2f20:	c8 95       	lpm
    2f22:	20 2d       	mov	r18, r0
    2f24:	31 96       	adiw	r30, 0x01	; 1
    2f26:	c8 95       	lpm
    2f28:	30 2d       	mov	r19, r0
    2f2a:	31 96       	adiw	r30, 0x01	; 1
    2f2c:	c8 95       	lpm
    2f2e:	40 2d       	mov	r20, r0
    2f30:	31 96       	adiw	r30, 0x01	; 1
    2f32:	c8 95       	lpm
    2f34:	50 2d       	mov	r21, r0
    2f36:	31 96       	adiw	r30, 0x01	; 1
    2f38:	4e f3       	brts	.-46     	; 0x2f0c <__fp_powser+0x1a>
    2f3a:	ce 2f       	mov	r28, r30
    2f3c:	df 2f       	mov	r29, r31
    2f3e:	65 dd       	rcall	.-1334   	; 0x2a0a <__addsf3x>
    2f40:	ec 2f       	mov	r30, r28
    2f42:	fd 2f       	mov	r31, r29
    2f44:	2e 2d       	mov	r18, r14
    2f46:	3f 2d       	mov	r19, r15
    2f48:	40 2f       	mov	r20, r16
    2f4a:	51 2f       	mov	r21, r17
    2f4c:	da 94       	dec	r13
    2f4e:	f9 f6       	brne	.-66     	; 0x2f0e <__fp_powser+0x1c>
    2f50:	df 90       	pop	r13
    2f52:	ef 90       	pop	r14
    2f54:	ff 90       	pop	r15
    2f56:	0f 91       	pop	r16
    2f58:	1f 91       	pop	r17
    2f5a:	cf 91       	pop	r28
    2f5c:	df 91       	pop	r29
    2f5e:	08 95       	ret

00002f60 <inverse>:
    2f60:	26 2f       	mov	r18, r22
    2f62:	37 2f       	mov	r19, r23
    2f64:	48 2f       	mov	r20, r24
    2f66:	59 2f       	mov	r21, r25
    2f68:	60 e0       	ldi	r22, 0x00	; 0
    2f6a:	70 e0       	ldi	r23, 0x00	; 0
    2f6c:	80 e8       	ldi	r24, 0x80	; 128
    2f6e:	9f e3       	ldi	r25, 0x3F	; 63
    2f70:	a4 cd       	rjmp	.-1208   	; 0x2aba <__divsf3>
    2f72:	49 ce       	rjmp	.-878    	; 0x2c06 <__fp_inf>
    2f74:	b7 c0       	rjmp	.+366    	; 0x30e4 <__fp_mpack>

00002f76 <ldexp>:
    2f76:	77 de       	rcall	.-786    	; 0x2c66 <__fp_splitA>
    2f78:	e8 f3       	brcs	.-6      	; 0x2f74 <inverse+0x14>
    2f7a:	99 23       	and	r25, r25
    2f7c:	d9 f3       	breq	.-10     	; 0x2f74 <inverse+0x14>
    2f7e:	94 0f       	add	r25, r20
    2f80:	51 1d       	adc	r21, r1
    2f82:	bb f3       	brvs	.-18     	; 0x2f72 <inverse+0x12>
    2f84:	91 50       	subi	r25, 0x01	; 1
    2f86:	50 40       	sbci	r21, 0x00	; 0
    2f88:	94 f0       	brlt	.+36     	; 0x2fae <ldexp+0x38>
    2f8a:	59 f0       	breq	.+22     	; 0x2fa2 <ldexp+0x2c>
    2f8c:	88 23       	and	r24, r24
    2f8e:	32 f0       	brmi	.+12     	; 0x2f9c <ldexp+0x26>
    2f90:	66 0f       	add	r22, r22
    2f92:	77 1f       	adc	r23, r23
    2f94:	88 1f       	adc	r24, r24
    2f96:	91 50       	subi	r25, 0x01	; 1
    2f98:	50 40       	sbci	r21, 0x00	; 0
    2f9a:	c1 f7       	brne	.-16     	; 0x2f8c <ldexp+0x16>
    2f9c:	9e 3f       	cpi	r25, 0xFE	; 254
    2f9e:	51 05       	cpc	r21, r1
    2fa0:	44 f7       	brge	.-48     	; 0x2f72 <inverse+0x12>
    2fa2:	88 0f       	add	r24, r24
    2fa4:	91 1d       	adc	r25, r1
    2fa6:	96 95       	lsr	r25
    2fa8:	87 95       	ror	r24
    2faa:	97 f9       	bld	r25, 7
    2fac:	08 95       	ret
    2fae:	5f 3f       	cpi	r21, 0xFF	; 255
    2fb0:	ac f0       	brlt	.+42     	; 0x2fdc <ldexp+0x66>
    2fb2:	98 3e       	cpi	r25, 0xE8	; 232
    2fb4:	9c f0       	brlt	.+38     	; 0x2fdc <ldexp+0x66>
    2fb6:	bb 27       	eor	r27, r27
    2fb8:	86 95       	lsr	r24
    2fba:	77 95       	ror	r23
    2fbc:	67 95       	ror	r22
    2fbe:	b7 95       	ror	r27
    2fc0:	08 f4       	brcc	.+2      	; 0x2fc4 <ldexp+0x4e>
    2fc2:	b1 60       	ori	r27, 0x01	; 1
    2fc4:	93 95       	inc	r25
    2fc6:	c1 f7       	brne	.-16     	; 0x2fb8 <ldexp+0x42>
    2fc8:	bb 0f       	add	r27, r27
    2fca:	58 f7       	brcc	.-42     	; 0x2fa2 <ldexp+0x2c>
    2fcc:	11 f4       	brne	.+4      	; 0x2fd2 <ldexp+0x5c>
    2fce:	60 ff       	sbrs	r22, 0
    2fd0:	e8 cf       	rjmp	.-48     	; 0x2fa2 <ldexp+0x2c>
    2fd2:	6f 5f       	subi	r22, 0xFF	; 255
    2fd4:	7f 4f       	sbci	r23, 0xFF	; 255
    2fd6:	8f 4f       	sbci	r24, 0xFF	; 255
    2fd8:	9f 4f       	sbci	r25, 0xFF	; 255
    2fda:	e3 cf       	rjmp	.-58     	; 0x2fa2 <ldexp+0x2c>
    2fdc:	5f ce       	rjmp	.-834    	; 0x2c9c <__fp_szero>
    2fde:	0e f0       	brts	.+2      	; 0x2fe2 <ldexp+0x6c>
    2fe0:	81 c0       	rjmp	.+258    	; 0x30e4 <__fp_mpack>
    2fe2:	17 ce       	rjmp	.-978    	; 0x2c12 <__fp_nan>
    2fe4:	68 94       	set
    2fe6:	0f ce       	rjmp	.-994    	; 0x2c06 <__fp_inf>

00002fe8 <log>:
    2fe8:	3e de       	rcall	.-900    	; 0x2c66 <__fp_splitA>
    2fea:	c8 f3       	brcs	.-14     	; 0x2fde <ldexp+0x68>
    2fec:	99 23       	and	r25, r25
    2fee:	d1 f3       	breq	.-12     	; 0x2fe4 <ldexp+0x6e>
    2ff0:	c6 f3       	brts	.-16     	; 0x2fe2 <ldexp+0x6c>
    2ff2:	df 93       	push	r29
    2ff4:	cf 93       	push	r28
    2ff6:	1f 93       	push	r17
    2ff8:	0f 93       	push	r16
    2ffa:	ff 92       	push	r15
    2ffc:	c9 2f       	mov	r28, r25
    2ffe:	dd 27       	eor	r29, r29
    3000:	88 23       	and	r24, r24
    3002:	2a f0       	brmi	.+10     	; 0x300e <log+0x26>
    3004:	21 97       	sbiw	r28, 0x01	; 1
    3006:	66 0f       	add	r22, r22
    3008:	77 1f       	adc	r23, r23
    300a:	88 1f       	adc	r24, r24
    300c:	da f7       	brpl	.-10     	; 0x3004 <log+0x1c>
    300e:	20 e0       	ldi	r18, 0x00	; 0
    3010:	30 e0       	ldi	r19, 0x00	; 0
    3012:	40 e8       	ldi	r20, 0x80	; 128
    3014:	5f eb       	ldi	r21, 0xBF	; 191
    3016:	9f e3       	ldi	r25, 0x3F	; 63
    3018:	88 39       	cpi	r24, 0x98	; 152
    301a:	20 f0       	brcs	.+8      	; 0x3024 <log+0x3c>
    301c:	80 3e       	cpi	r24, 0xE0	; 224
    301e:	30 f0       	brcs	.+12     	; 0x302c <log+0x44>
    3020:	21 96       	adiw	r28, 0x01	; 1
    3022:	8f 77       	andi	r24, 0x7F	; 127
    3024:	e1 dc       	rcall	.-1598   	; 0x29e8 <__addsf3>
    3026:	e0 ef       	ldi	r30, 0xF0	; 240
    3028:	f0 e0       	ldi	r31, 0x00	; 0
    302a:	03 c0       	rjmp	.+6      	; 0x3032 <log+0x4a>
    302c:	dd dc       	rcall	.-1606   	; 0x29e8 <__addsf3>
    302e:	ed e1       	ldi	r30, 0x1D	; 29
    3030:	f1 e0       	ldi	r31, 0x01	; 1
    3032:	5f df       	rcall	.-322    	; 0x2ef2 <__fp_powser>
    3034:	06 2f       	mov	r16, r22
    3036:	17 2f       	mov	r17, r23
    3038:	6c 2f       	mov	r22, r28
    303a:	7d 2f       	mov	r23, r29
    303c:	c8 2f       	mov	r28, r24
    303e:	d9 2f       	mov	r29, r25
    3040:	fb 2e       	mov	r15, r27
    3042:	6f 57       	subi	r22, 0x7F	; 127
    3044:	71 09       	sbc	r23, r1
    3046:	75 95       	asr	r23
    3048:	77 1f       	adc	r23, r23
    304a:	88 0b       	sbc	r24, r24
    304c:	99 0b       	sbc	r25, r25
    304e:	a0 dd       	rcall	.-1216   	; 0x2b90 <__floatsisf>
    3050:	28 e1       	ldi	r18, 0x18	; 24
    3052:	32 e7       	ldi	r19, 0x72	; 114
    3054:	41 e3       	ldi	r20, 0x31	; 49
    3056:	5f e3       	ldi	r21, 0x3F	; 63
    3058:	6d de       	rcall	.-806    	; 0x2d34 <__mulsf3x>
    305a:	af 2d       	mov	r26, r15
    305c:	20 2f       	mov	r18, r16
    305e:	31 2f       	mov	r19, r17
    3060:	4c 2f       	mov	r20, r28
    3062:	5d 2f       	mov	r21, r29
    3064:	ff 90       	pop	r15
    3066:	0f 91       	pop	r16
    3068:	1f 91       	pop	r17
    306a:	cf 91       	pop	r28
    306c:	df 91       	pop	r29
    306e:	cd dc       	rcall	.-1638   	; 0x2a0a <__addsf3x>
    3070:	e1 cd       	rjmp	.-1086   	; 0x2c34 <__fp_round>

00003072 <modf>:
    3072:	e4 2f       	mov	r30, r20
    3074:	f5 2f       	mov	r31, r21
    3076:	a8 2f       	mov	r26, r24
    3078:	b9 2f       	mov	r27, r25
    307a:	aa 0f       	add	r26, r26
    307c:	bb 1f       	adc	r27, r27
    307e:	26 2f       	mov	r18, r22
    3080:	37 2f       	mov	r19, r23
    3082:	48 2f       	mov	r20, r24
    3084:	59 2f       	mov	r21, r25
    3086:	bf 57       	subi	r27, 0x7F	; 127
    3088:	28 f4       	brcc	.+10     	; 0x3094 <modf+0x22>
    308a:	22 27       	eor	r18, r18
    308c:	33 27       	eor	r19, r19
    308e:	44 27       	eor	r20, r20
    3090:	50 78       	andi	r21, 0x80	; 128
    3092:	21 c0       	rjmp	.+66     	; 0x30d6 <modf+0x64>
    3094:	b7 51       	subi	r27, 0x17	; 23
    3096:	88 f4       	brcc	.+34     	; 0x30ba <modf+0x48>
    3098:	ab 2f       	mov	r26, r27
    309a:	00 24       	eor	r0, r0
    309c:	46 95       	lsr	r20
    309e:	37 95       	ror	r19
    30a0:	27 95       	ror	r18
    30a2:	01 1c       	adc	r0, r1
    30a4:	a3 95       	inc	r26
    30a6:	d2 f3       	brmi	.-12     	; 0x309c <modf+0x2a>
    30a8:	00 20       	and	r0, r0
    30aa:	69 f0       	breq	.+26     	; 0x30c6 <modf+0x54>
    30ac:	22 0f       	add	r18, r18
    30ae:	33 1f       	adc	r19, r19
    30b0:	44 1f       	adc	r20, r20
    30b2:	b3 95       	inc	r27
    30b4:	da f3       	brmi	.-10     	; 0x30ac <modf+0x3a>
    30b6:	0f d0       	rcall	.+30     	; 0x30d6 <modf+0x64>
    30b8:	96 cc       	rjmp	.-1748   	; 0x29e6 <__subsf3>
    30ba:	61 30       	cpi	r22, 0x01	; 1
    30bc:	71 05       	cpc	r23, r1
    30be:	a0 e8       	ldi	r26, 0x80	; 128
    30c0:	8a 07       	cpc	r24, r26
    30c2:	b9 46       	sbci	r27, 0x69	; 105
    30c4:	40 f4       	brcc	.+16     	; 0x30d6 <modf+0x64>
    30c6:	26 2f       	mov	r18, r22
    30c8:	37 2f       	mov	r19, r23
    30ca:	48 2f       	mov	r20, r24
    30cc:	59 2f       	mov	r21, r25
    30ce:	66 27       	eor	r22, r22
    30d0:	77 27       	eor	r23, r23
    30d2:	88 27       	eor	r24, r24
    30d4:	90 78       	andi	r25, 0x80	; 128
    30d6:	30 96       	adiw	r30, 0x00	; 0
    30d8:	21 f0       	breq	.+8      	; 0x30e2 <modf+0x70>
    30da:	20 83       	st	Z, r18
    30dc:	31 83       	std	Z+1, r19	; 0x01
    30de:	42 83       	std	Z+2, r20	; 0x02
    30e0:	53 83       	std	Z+3, r21	; 0x03
    30e2:	08 95       	ret

000030e4 <__fp_mpack>:
    30e4:	9f 3f       	cpi	r25, 0xFF	; 255
    30e6:	31 f0       	breq	.+12     	; 0x30f4 <__fp_mpack_finite+0xc>

000030e8 <__fp_mpack_finite>:
    30e8:	91 50       	subi	r25, 0x01	; 1
    30ea:	20 f4       	brcc	.+8      	; 0x30f4 <__fp_mpack_finite+0xc>
    30ec:	87 95       	ror	r24
    30ee:	77 95       	ror	r23
    30f0:	67 95       	ror	r22
    30f2:	b7 95       	ror	r27
    30f4:	88 0f       	add	r24, r24
    30f6:	91 1d       	adc	r25, r1
    30f8:	96 95       	lsr	r25
    30fa:	87 95       	ror	r24
    30fc:	97 f9       	bld	r25, 7
    30fe:	08 95       	ret

00003100 <__mulsi3>:
    3100:	62 9f       	mul	r22, r18
    3102:	d0 01       	movw	r26, r0
    3104:	73 9f       	mul	r23, r19
    3106:	f0 01       	movw	r30, r0
    3108:	82 9f       	mul	r24, r18
    310a:	e0 0d       	add	r30, r0
    310c:	f1 1d       	adc	r31, r1
    310e:	64 9f       	mul	r22, r20
    3110:	e0 0d       	add	r30, r0
    3112:	f1 1d       	adc	r31, r1
    3114:	92 9f       	mul	r25, r18
    3116:	f0 0d       	add	r31, r0
    3118:	83 9f       	mul	r24, r19
    311a:	f0 0d       	add	r31, r0
    311c:	74 9f       	mul	r23, r20
    311e:	f0 0d       	add	r31, r0
    3120:	65 9f       	mul	r22, r21
    3122:	f0 0d       	add	r31, r0
    3124:	99 27       	eor	r25, r25
    3126:	72 9f       	mul	r23, r18
    3128:	b0 0d       	add	r27, r0
    312a:	e1 1d       	adc	r30, r1
    312c:	f9 1f       	adc	r31, r25
    312e:	63 9f       	mul	r22, r19
    3130:	b0 0d       	add	r27, r0
    3132:	e1 1d       	adc	r30, r1
    3134:	f9 1f       	adc	r31, r25
    3136:	bd 01       	movw	r22, r26
    3138:	cf 01       	movw	r24, r30
    313a:	11 24       	eor	r1, r1
    313c:	08 95       	ret

0000313e <__udivmodsi4>:
    313e:	a1 e2       	ldi	r26, 0x21	; 33
    3140:	1a 2e       	mov	r1, r26
    3142:	aa 1b       	sub	r26, r26
    3144:	bb 1b       	sub	r27, r27
    3146:	fd 01       	movw	r30, r26
    3148:	0d c0       	rjmp	.+26     	; 0x3164 <__udivmodsi4_ep>

0000314a <__udivmodsi4_loop>:
    314a:	aa 1f       	adc	r26, r26
    314c:	bb 1f       	adc	r27, r27
    314e:	ee 1f       	adc	r30, r30
    3150:	ff 1f       	adc	r31, r31
    3152:	a2 17       	cp	r26, r18
    3154:	b3 07       	cpc	r27, r19
    3156:	e4 07       	cpc	r30, r20
    3158:	f5 07       	cpc	r31, r21
    315a:	20 f0       	brcs	.+8      	; 0x3164 <__udivmodsi4_ep>
    315c:	a2 1b       	sub	r26, r18
    315e:	b3 0b       	sbc	r27, r19
    3160:	e4 0b       	sbc	r30, r20
    3162:	f5 0b       	sbc	r31, r21

00003164 <__udivmodsi4_ep>:
    3164:	66 1f       	adc	r22, r22
    3166:	77 1f       	adc	r23, r23
    3168:	88 1f       	adc	r24, r24
    316a:	99 1f       	adc	r25, r25
    316c:	1a 94       	dec	r1
    316e:	69 f7       	brne	.-38     	; 0x314a <__udivmodsi4_loop>
    3170:	60 95       	com	r22
    3172:	70 95       	com	r23
    3174:	80 95       	com	r24
    3176:	90 95       	com	r25
    3178:	9b 01       	movw	r18, r22
    317a:	ac 01       	movw	r20, r24
    317c:	bd 01       	movw	r22, r26
    317e:	cf 01       	movw	r24, r30
    3180:	08 95       	ret

00003182 <malloc>:
    3182:	cf 93       	push	r28
    3184:	df 93       	push	r29
    3186:	bc 01       	movw	r22, r24
    3188:	82 30       	cpi	r24, 0x02	; 2
    318a:	91 05       	cpc	r25, r1
    318c:	10 f4       	brcc	.+4      	; 0x3192 <malloc+0x10>
    318e:	62 e0       	ldi	r22, 0x02	; 2
    3190:	70 e0       	ldi	r23, 0x00	; 0
    3192:	a0 91 77 02 	lds	r26, 0x0277
    3196:	b0 91 78 02 	lds	r27, 0x0278
    319a:	ed 01       	movw	r28, r26
    319c:	e0 e0       	ldi	r30, 0x00	; 0
    319e:	f0 e0       	ldi	r31, 0x00	; 0
    31a0:	40 e0       	ldi	r20, 0x00	; 0
    31a2:	50 e0       	ldi	r21, 0x00	; 0
    31a4:	21 c0       	rjmp	.+66     	; 0x31e8 <malloc+0x66>
    31a6:	88 81       	ld	r24, Y
    31a8:	99 81       	ldd	r25, Y+1	; 0x01
    31aa:	86 17       	cp	r24, r22
    31ac:	97 07       	cpc	r25, r23
    31ae:	69 f4       	brne	.+26     	; 0x31ca <malloc+0x48>
    31b0:	8a 81       	ldd	r24, Y+2	; 0x02
    31b2:	9b 81       	ldd	r25, Y+3	; 0x03
    31b4:	30 97       	sbiw	r30, 0x00	; 0
    31b6:	19 f0       	breq	.+6      	; 0x31be <malloc+0x3c>
    31b8:	93 83       	std	Z+3, r25	; 0x03
    31ba:	82 83       	std	Z+2, r24	; 0x02
    31bc:	04 c0       	rjmp	.+8      	; 0x31c6 <malloc+0x44>
    31be:	90 93 78 02 	sts	0x0278, r25
    31c2:	80 93 77 02 	sts	0x0277, r24
    31c6:	fe 01       	movw	r30, r28
    31c8:	34 c0       	rjmp	.+104    	; 0x3232 <malloc+0xb0>
    31ca:	68 17       	cp	r22, r24
    31cc:	79 07       	cpc	r23, r25
    31ce:	38 f4       	brcc	.+14     	; 0x31de <malloc+0x5c>
    31d0:	41 15       	cp	r20, r1
    31d2:	51 05       	cpc	r21, r1
    31d4:	19 f0       	breq	.+6      	; 0x31dc <malloc+0x5a>
    31d6:	84 17       	cp	r24, r20
    31d8:	95 07       	cpc	r25, r21
    31da:	08 f4       	brcc	.+2      	; 0x31de <malloc+0x5c>
    31dc:	ac 01       	movw	r20, r24
    31de:	fe 01       	movw	r30, r28
    31e0:	8a 81       	ldd	r24, Y+2	; 0x02
    31e2:	9b 81       	ldd	r25, Y+3	; 0x03
    31e4:	9c 01       	movw	r18, r24
    31e6:	e9 01       	movw	r28, r18
    31e8:	20 97       	sbiw	r28, 0x00	; 0
    31ea:	e9 f6       	brne	.-70     	; 0x31a6 <malloc+0x24>
    31ec:	41 15       	cp	r20, r1
    31ee:	51 05       	cpc	r21, r1
    31f0:	a9 f1       	breq	.+106    	; 0x325c <malloc+0xda>
    31f2:	ca 01       	movw	r24, r20
    31f4:	86 1b       	sub	r24, r22
    31f6:	97 0b       	sbc	r25, r23
    31f8:	04 97       	sbiw	r24, 0x04	; 4
    31fa:	08 f4       	brcc	.+2      	; 0x31fe <malloc+0x7c>
    31fc:	ba 01       	movw	r22, r20
    31fe:	e0 e0       	ldi	r30, 0x00	; 0
    3200:	f0 e0       	ldi	r31, 0x00	; 0
    3202:	2a c0       	rjmp	.+84     	; 0x3258 <malloc+0xd6>
    3204:	8d 91       	ld	r24, X+
    3206:	9c 91       	ld	r25, X
    3208:	11 97       	sbiw	r26, 0x01	; 1
    320a:	84 17       	cp	r24, r20
    320c:	95 07       	cpc	r25, r21
    320e:	f9 f4       	brne	.+62     	; 0x324e <malloc+0xcc>
    3210:	64 17       	cp	r22, r20
    3212:	75 07       	cpc	r23, r21
    3214:	81 f4       	brne	.+32     	; 0x3236 <malloc+0xb4>
    3216:	12 96       	adiw	r26, 0x02	; 2
    3218:	8d 91       	ld	r24, X+
    321a:	9c 91       	ld	r25, X
    321c:	13 97       	sbiw	r26, 0x03	; 3
    321e:	30 97       	sbiw	r30, 0x00	; 0
    3220:	19 f0       	breq	.+6      	; 0x3228 <malloc+0xa6>
    3222:	93 83       	std	Z+3, r25	; 0x03
    3224:	82 83       	std	Z+2, r24	; 0x02
    3226:	04 c0       	rjmp	.+8      	; 0x3230 <malloc+0xae>
    3228:	90 93 78 02 	sts	0x0278, r25
    322c:	80 93 77 02 	sts	0x0277, r24
    3230:	fd 01       	movw	r30, r26
    3232:	32 96       	adiw	r30, 0x02	; 2
    3234:	4f c0       	rjmp	.+158    	; 0x32d4 <malloc+0x152>
    3236:	ca 01       	movw	r24, r20
    3238:	86 1b       	sub	r24, r22
    323a:	97 0b       	sbc	r25, r23
    323c:	fd 01       	movw	r30, r26
    323e:	e8 0f       	add	r30, r24
    3240:	f9 1f       	adc	r31, r25
    3242:	61 93       	st	Z+, r22
    3244:	71 93       	st	Z+, r23
    3246:	02 97       	sbiw	r24, 0x02	; 2
    3248:	8d 93       	st	X+, r24
    324a:	9c 93       	st	X, r25
    324c:	43 c0       	rjmp	.+134    	; 0x32d4 <malloc+0x152>
    324e:	fd 01       	movw	r30, r26
    3250:	82 81       	ldd	r24, Z+2	; 0x02
    3252:	93 81       	ldd	r25, Z+3	; 0x03
    3254:	9c 01       	movw	r18, r24
    3256:	d9 01       	movw	r26, r18
    3258:	10 97       	sbiw	r26, 0x00	; 0
    325a:	a1 f6       	brne	.-88     	; 0x3204 <malloc+0x82>
    325c:	80 91 75 02 	lds	r24, 0x0275
    3260:	90 91 76 02 	lds	r25, 0x0276
    3264:	89 2b       	or	r24, r25
    3266:	41 f4       	brne	.+16     	; 0x3278 <malloc+0xf6>
    3268:	80 91 7b 01 	lds	r24, 0x017B
    326c:	90 91 7c 01 	lds	r25, 0x017C
    3270:	90 93 76 02 	sts	0x0276, r25
    3274:	80 93 75 02 	sts	0x0275, r24
    3278:	40 91 7d 01 	lds	r20, 0x017D
    327c:	50 91 7e 01 	lds	r21, 0x017E
    3280:	41 15       	cp	r20, r1
    3282:	51 05       	cpc	r21, r1
    3284:	41 f4       	brne	.+16     	; 0x3296 <malloc+0x114>
    3286:	4d b7       	in	r20, 0x3d	; 61
    3288:	5e b7       	in	r21, 0x3e	; 62
    328a:	80 91 79 01 	lds	r24, 0x0179
    328e:	90 91 7a 01 	lds	r25, 0x017A
    3292:	48 1b       	sub	r20, r24
    3294:	59 0b       	sbc	r21, r25
    3296:	20 91 75 02 	lds	r18, 0x0275
    329a:	30 91 76 02 	lds	r19, 0x0276
    329e:	24 17       	cp	r18, r20
    32a0:	35 07       	cpc	r19, r21
    32a2:	b0 f4       	brcc	.+44     	; 0x32d0 <malloc+0x14e>
    32a4:	ca 01       	movw	r24, r20
    32a6:	82 1b       	sub	r24, r18
    32a8:	93 0b       	sbc	r25, r19
    32aa:	86 17       	cp	r24, r22
    32ac:	97 07       	cpc	r25, r23
    32ae:	80 f0       	brcs	.+32     	; 0x32d0 <malloc+0x14e>
    32b0:	ab 01       	movw	r20, r22
    32b2:	4e 5f       	subi	r20, 0xFE	; 254
    32b4:	5f 4f       	sbci	r21, 0xFF	; 255
    32b6:	84 17       	cp	r24, r20
    32b8:	95 07       	cpc	r25, r21
    32ba:	50 f0       	brcs	.+20     	; 0x32d0 <malloc+0x14e>
    32bc:	42 0f       	add	r20, r18
    32be:	53 1f       	adc	r21, r19
    32c0:	50 93 76 02 	sts	0x0276, r21
    32c4:	40 93 75 02 	sts	0x0275, r20
    32c8:	f9 01       	movw	r30, r18
    32ca:	61 93       	st	Z+, r22
    32cc:	71 93       	st	Z+, r23
    32ce:	02 c0       	rjmp	.+4      	; 0x32d4 <malloc+0x152>
    32d0:	e0 e0       	ldi	r30, 0x00	; 0
    32d2:	f0 e0       	ldi	r31, 0x00	; 0
    32d4:	cf 01       	movw	r24, r30
    32d6:	df 91       	pop	r29
    32d8:	cf 91       	pop	r28
    32da:	08 95       	ret

000032dc <free>:
    32dc:	cf 93       	push	r28
    32de:	df 93       	push	r29
    32e0:	00 97       	sbiw	r24, 0x00	; 0
    32e2:	09 f4       	brne	.+2      	; 0x32e6 <free+0xa>
    32e4:	50 c0       	rjmp	.+160    	; 0x3386 <free+0xaa>
    32e6:	ec 01       	movw	r28, r24
    32e8:	22 97       	sbiw	r28, 0x02	; 2
    32ea:	1b 82       	std	Y+3, r1	; 0x03
    32ec:	1a 82       	std	Y+2, r1	; 0x02
    32ee:	a0 91 77 02 	lds	r26, 0x0277
    32f2:	b0 91 78 02 	lds	r27, 0x0278
    32f6:	10 97       	sbiw	r26, 0x00	; 0
    32f8:	09 f1       	breq	.+66     	; 0x333c <free+0x60>
    32fa:	40 e0       	ldi	r20, 0x00	; 0
    32fc:	50 e0       	ldi	r21, 0x00	; 0
    32fe:	ac 17       	cp	r26, r28
    3300:	bd 07       	cpc	r27, r29
    3302:	08 f1       	brcs	.+66     	; 0x3346 <free+0x6a>
    3304:	bb 83       	std	Y+3, r27	; 0x03
    3306:	aa 83       	std	Y+2, r26	; 0x02
    3308:	fe 01       	movw	r30, r28
    330a:	21 91       	ld	r18, Z+
    330c:	31 91       	ld	r19, Z+
    330e:	e2 0f       	add	r30, r18
    3310:	f3 1f       	adc	r31, r19
    3312:	ae 17       	cp	r26, r30
    3314:	bf 07       	cpc	r27, r31
    3316:	79 f4       	brne	.+30     	; 0x3336 <free+0x5a>
    3318:	8d 91       	ld	r24, X+
    331a:	9c 91       	ld	r25, X
    331c:	11 97       	sbiw	r26, 0x01	; 1
    331e:	28 0f       	add	r18, r24
    3320:	39 1f       	adc	r19, r25
    3322:	2e 5f       	subi	r18, 0xFE	; 254
    3324:	3f 4f       	sbci	r19, 0xFF	; 255
    3326:	39 83       	std	Y+1, r19	; 0x01
    3328:	28 83       	st	Y, r18
    332a:	12 96       	adiw	r26, 0x02	; 2
    332c:	8d 91       	ld	r24, X+
    332e:	9c 91       	ld	r25, X
    3330:	13 97       	sbiw	r26, 0x03	; 3
    3332:	9b 83       	std	Y+3, r25	; 0x03
    3334:	8a 83       	std	Y+2, r24	; 0x02
    3336:	41 15       	cp	r20, r1
    3338:	51 05       	cpc	r21, r1
    333a:	71 f4       	brne	.+28     	; 0x3358 <free+0x7c>
    333c:	d0 93 78 02 	sts	0x0278, r29
    3340:	c0 93 77 02 	sts	0x0277, r28
    3344:	20 c0       	rjmp	.+64     	; 0x3386 <free+0xaa>
    3346:	12 96       	adiw	r26, 0x02	; 2
    3348:	8d 91       	ld	r24, X+
    334a:	9c 91       	ld	r25, X
    334c:	13 97       	sbiw	r26, 0x03	; 3
    334e:	ad 01       	movw	r20, r26
    3350:	00 97       	sbiw	r24, 0x00	; 0
    3352:	11 f0       	breq	.+4      	; 0x3358 <free+0x7c>
    3354:	dc 01       	movw	r26, r24
    3356:	d3 cf       	rjmp	.-90     	; 0x32fe <free+0x22>
    3358:	fa 01       	movw	r30, r20
    335a:	d3 83       	std	Z+3, r29	; 0x03
    335c:	c2 83       	std	Z+2, r28	; 0x02
    335e:	21 91       	ld	r18, Z+
    3360:	31 91       	ld	r19, Z+
    3362:	e2 0f       	add	r30, r18
    3364:	f3 1f       	adc	r31, r19
    3366:	ce 17       	cp	r28, r30
    3368:	df 07       	cpc	r29, r31
    336a:	69 f4       	brne	.+26     	; 0x3386 <free+0xaa>
    336c:	88 81       	ld	r24, Y
    336e:	99 81       	ldd	r25, Y+1	; 0x01
    3370:	28 0f       	add	r18, r24
    3372:	39 1f       	adc	r19, r25
    3374:	2e 5f       	subi	r18, 0xFE	; 254
    3376:	3f 4f       	sbci	r19, 0xFF	; 255
    3378:	fa 01       	movw	r30, r20
    337a:	31 83       	std	Z+1, r19	; 0x01
    337c:	20 83       	st	Z, r18
    337e:	8a 81       	ldd	r24, Y+2	; 0x02
    3380:	9b 81       	ldd	r25, Y+3	; 0x03
    3382:	93 83       	std	Z+3, r25	; 0x03
    3384:	82 83       	std	Z+2, r24	; 0x02
    3386:	df 91       	pop	r29
    3388:	cf 91       	pop	r28
    338a:	08 95       	ret

0000338c <puts>:
    338c:	0f 93       	push	r16
    338e:	1f 93       	push	r17
    3390:	cf 93       	push	r28
    3392:	df 93       	push	r29
    3394:	8c 01       	movw	r16, r24
    3396:	e0 91 7b 02 	lds	r30, 0x027B
    339a:	f0 91 7c 02 	lds	r31, 0x027C
    339e:	83 81       	ldd	r24, Z+3	; 0x03
    33a0:	81 ff       	sbrs	r24, 1
    33a2:	21 c0       	rjmp	.+66     	; 0x33e6 <puts+0x5a>
    33a4:	c0 e0       	ldi	r28, 0x00	; 0
    33a6:	d0 e0       	ldi	r29, 0x00	; 0
    33a8:	0d c0       	rjmp	.+26     	; 0x33c4 <puts+0x38>
    33aa:	e0 91 7b 02 	lds	r30, 0x027B
    33ae:	f0 91 7c 02 	lds	r31, 0x027C
    33b2:	20 85       	ldd	r18, Z+8	; 0x08
    33b4:	31 85       	ldd	r19, Z+9	; 0x09
    33b6:	bf 01       	movw	r22, r30
    33b8:	f9 01       	movw	r30, r18
    33ba:	09 95       	icall
    33bc:	89 2b       	or	r24, r25
    33be:	11 f0       	breq	.+4      	; 0x33c4 <puts+0x38>
    33c0:	cf ef       	ldi	r28, 0xFF	; 255
    33c2:	df ef       	ldi	r29, 0xFF	; 255
    33c4:	f8 01       	movw	r30, r16
    33c6:	81 91       	ld	r24, Z+
    33c8:	8f 01       	movw	r16, r30
    33ca:	88 23       	and	r24, r24
    33cc:	71 f7       	brne	.-36     	; 0x33aa <puts+0x1e>
    33ce:	e0 91 7b 02 	lds	r30, 0x027B
    33d2:	f0 91 7c 02 	lds	r31, 0x027C
    33d6:	20 85       	ldd	r18, Z+8	; 0x08
    33d8:	31 85       	ldd	r19, Z+9	; 0x09
    33da:	8a e0       	ldi	r24, 0x0A	; 10
    33dc:	bf 01       	movw	r22, r30
    33de:	f9 01       	movw	r30, r18
    33e0:	09 95       	icall
    33e2:	89 2b       	or	r24, r25
    33e4:	11 f0       	breq	.+4      	; 0x33ea <puts+0x5e>
    33e6:	cf ef       	ldi	r28, 0xFF	; 255
    33e8:	df ef       	ldi	r29, 0xFF	; 255
    33ea:	ce 01       	movw	r24, r28
    33ec:	df 91       	pop	r29
    33ee:	cf 91       	pop	r28
    33f0:	1f 91       	pop	r17
    33f2:	0f 91       	pop	r16
    33f4:	08 95       	ret

000033f6 <_exit>:
    33f6:	f8 94       	cli

000033f8 <__stop_program>:
    33f8:	ff cf       	rjmp	.-2      	; 0x33f8 <__stop_program>
