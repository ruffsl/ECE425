
RangeSensors.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e6  00800100  00003eba  00003f4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003eba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000010a  008001e6  008001e6  00004034  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00004034  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000174  00000000  00000000  00004054  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009f6  00000000  00000000  000041c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000014d  00000000  00000000  00004bbe  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000095c  00000000  00000000  00004d0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000130  00000000  00000000  00005668  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000007d9  00000000  00000000  00005798  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000084f  00000000  00000000  00005f71  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__ctors_end>
       4:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
       8:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
       c:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      10:	0c 94 38 0f 	jmp	0x1e70	; 0x1e70 <__vector_4>
      14:	0c 94 61 0f 	jmp	0x1ec2	; 0x1ec2 <__vector_5>
      18:	0c 94 8a 0f 	jmp	0x1f14	; 0x1f14 <__vector_6>
      1c:	0c 94 b3 0f 	jmp	0x1f66	; 0x1f66 <__vector_7>
      20:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      24:	0c 94 19 0e 	jmp	0x1c32	; 0x1c32 <__vector_9>
      28:	0c 94 42 0e 	jmp	0x1c84	; 0x1c84 <__vector_10>
      2c:	0c 94 6b 0e 	jmp	0x1cd6	; 0x1cd6 <__vector_11>
      30:	0c 94 e6 0e 	jmp	0x1dcc	; 0x1dcc <__vector_12>
      34:	0c 94 94 0e 	jmp	0x1d28	; 0x1d28 <__vector_13>
      38:	0c 94 bd 0e 	jmp	0x1d7a	; 0x1d7a <__vector_14>
      3c:	0c 94 0f 0f 	jmp	0x1e1e	; 0x1e1e <__vector_15>
      40:	0c 94 9e 0d 	jmp	0x1b3c	; 0x1b3c <__vector_16>
      44:	0c 94 c7 0d 	jmp	0x1b8e	; 0x1b8e <__vector_17>
      48:	0c 94 f0 0d 	jmp	0x1be0	; 0x1be0 <__vector_18>
      4c:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      50:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      54:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      58:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      5c:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      60:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      64:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      68:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      6c:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      70:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      74:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      78:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__bad_interrupt>
      7c:	ce 0a       	sbc	r12, r30
      7e:	d1 0a       	sbc	r13, r17
      80:	d4 0a       	sbc	r13, r20
      82:	d7 0a       	sbc	r13, r23
      84:	e0 0a       	sbc	r14, r16
      86:	da 0a       	sbc	r13, r26
      88:	dd 0a       	sbc	r13, r29
      8a:	e3 0a       	sbc	r14, r19
      8c:	e6 0a       	sbc	r14, r22
      8e:	e9 0a       	sbc	r14, r25
      90:	ec 0a       	sbc	r14, r28
      92:	ef 0a       	sbc	r14, r31
      94:	f2 0a       	sbc	r15, r18
      96:	f5 0a       	sbc	r15, r21
      98:	f8 0a       	sbc	r15, r24
      9a:	fb 0a       	sbc	r15, r27
      9c:	fe 0a       	sbc	r15, r30
      9e:	01 0b       	sbc	r16, r17
      a0:	04 0b       	sbc	r16, r20
      a2:	15 0b       	sbc	r17, r21
      a4:	18 0b       	sbc	r17, r24
      a6:	1b 0b       	sbc	r17, r27
      a8:	1e 0b       	sbc	r17, r30
      aa:	27 0b       	sbc	r18, r23
      ac:	21 0b       	sbc	r18, r17
      ae:	24 0b       	sbc	r18, r20
      b0:	2a 0b       	sbc	r18, r26
      b2:	2d 0b       	sbc	r18, r29
      b4:	30 0b       	sbc	r19, r16
      b6:	33 0b       	sbc	r19, r19
      b8:	36 0b       	sbc	r19, r22
      ba:	39 0b       	sbc	r19, r25
      bc:	3c 0b       	sbc	r19, r28
      be:	3f 0b       	sbc	r19, r31
      c0:	42 0b       	sbc	r20, r18
      c2:	45 0b       	sbc	r20, r21
      c4:	48 0b       	sbc	r20, r24
      c6:	4b 0b       	sbc	r20, r27
      c8:	07 63       	ori	r16, 0x37	; 55
      ca:	42 36       	cpi	r20, 0x62	; 98
      cc:	b7 9b       	sbis	0x16, 7	; 22
      ce:	d8 a7       	std	Y+40, r29	; 0x28
      d0:	1a 39       	cpi	r17, 0x9A	; 154
      d2:	68 56       	subi	r22, 0x68	; 104
      d4:	18 ae       	std	Y+56, r1	; 0x38
      d6:	ba ab       	std	Y+50, r27	; 0x32
      d8:	55 8c       	ldd	r5, Z+29	; 0x1d
      da:	1d 3c       	cpi	r17, 0xCD	; 205
      dc:	b7 cc       	rjmp	.-1682   	; 0xfffffa4c <__eeprom_end+0xff7efa4c>
      de:	57 63       	ori	r21, 0x37	; 55
      e0:	bd 6d       	ori	r27, 0xDD	; 221
      e2:	ed fd       	.word	0xfded	; ????
      e4:	75 3e       	cpi	r23, 0xE5	; 229
      e6:	f6 17       	cp	r31, r22
      e8:	72 31       	cpi	r23, 0x12	; 18
      ea:	bf 00       	.word	0x00bf	; ????
      ec:	00 00       	nop
      ee:	80 3f       	cpi	r24, 0xF0	; 240
      f0:	08 00       	.word	0x0008	; ????
      f2:	00 00       	nop
      f4:	be 92       	st	-X, r11
      f6:	24 49       	sbci	r18, 0x94	; 148
      f8:	12 3e       	cpi	r17, 0xE2	; 226
      fa:	ab aa       	std	Y+51, r10	; 0x33
      fc:	aa 2a       	or	r10, r26
      fe:	be cd       	rjmp	.-1156   	; 0xfffffc7c <__eeprom_end+0xff7efc7c>
     100:	cc cc       	rjmp	.-1640   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     102:	4c 3e       	cpi	r20, 0xEC	; 236
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	be ab       	std	Y+54, r27	; 0x36
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	aa 3e       	cpi	r26, 0xEA	; 234
     10e:	00 00       	nop
     110:	00 00       	nop
     112:	bf 00       	.word	0x00bf	; ????
     114:	00 00       	nop
     116:	80 3f       	cpi	r24, 0xF0	; 240
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	00 08       	sbc	r0, r0
     11e:	41 78       	andi	r20, 0x81	; 129
     120:	d3 bb       	out	0x13, r29	; 19
     122:	43 87       	std	Z+11, r20	; 0x0b
     124:	d1 13       	cpse	r29, r17
     126:	3d 19       	sub	r19, r13
     128:	0e 3c       	cpi	r16, 0xCE	; 206
     12a:	c3 bd       	out	0x23, r28	; 35
     12c:	42 82       	std	Z+2, r4	; 0x02
     12e:	ad 2b       	or	r26, r29
     130:	3e 68       	ori	r19, 0x8E	; 142
     132:	ec 82       	std	Y+4, r14	; 0x04
     134:	76 be       	out	0x36, r7	; 54
     136:	d9 8f       	std	Y+25, r29	; 0x19
     138:	e1 a9       	ldd	r30, Z+49	; 0x31
     13a:	3e 4c       	sbci	r19, 0xCE	; 206
     13c:	80 ef       	ldi	r24, 0xF0	; 240
     13e:	ff be       	out	0x3f, r15	; 63
     140:	01 c4       	rjmp	.+2050   	; 0x944 <__stack+0x45>
     142:	ff 7f       	andi	r31, 0xFF	; 255
     144:	3f 00       	.word	0x003f	; ????
     146:	00 00       	nop
	...

0000014a <__c.2781>:
     14a:	41 6d 62 69 65 6e 74 3a 20 3f 09 00                 Ambient: ?..

00000156 <__c.2779>:
     156:	41 6d 62 69 65 6e 74 3a 20 25 33 64 09 00           Ambient: %3d..

00000164 <__c.2777>:
     164:	25 33 64 2c 20 25 33 64 2c 20 25 33 64 2c 20 25     %3d, %3d, %3d, %
     174:	33 64 0a 00                                         3d..

00000178 <__c.2775>:
     178:	25 33 64 2c 20 25 33 64 2c 20 25 33 64 2c 20 25     %3d, %3d, %3d, %
     188:	33 64 0a 00                                         3d..

0000018c <__c.2773>:
     18c:	53 65 6e 73 6f 72 20 50 69 78 65 6c 73 3a 20 0a     Sensor Pixels: .
	...

0000019d <__c.2765>:
     19d:	53 45 4e 53 4f 52 20 54 45 53 54 0a 00              SENSOR TEST..

000001aa <char_bitmap>:
     1aa:	16 05 01 00 00 00 00 00 00 00 fa 00 00 00 e0 00     ................
     1ba:	e0 00 28 fe 28 fe 28 24 54 fe 54 48 c4 c8 10 26     ..(.(.($T.TH...&
     1ca:	46 6c 92 aa 44 a0 00 a0 c0 00 00 00 38 44 82 00     Fl..D.......8D..
     1da:	00 82 44 38 00 28 10 7c 10 28 10 10 7c 10 10 00     ..D8.(.|.(..|...
     1ea:	0a 0c 00 00 10 10 10 10 10 00 06 06 00 00 04 08     ................
     1fa:	10 20 40 7c 8a 92 a2 7c 00 42 fe 02 00 42 86 8a     . @|...|.B...B..
     20a:	92 62 84 82 a2 d2 8c 18 28 48 fe 08 e4 a2 a2 a2     .b......(H......
     21a:	9c 3c 52 92 92 0c 80 8e 90 a0 c0 6c 92 92 92 6c     .<R........l...l
     22a:	60 92 92 94 78 00 6c 6c 00 00 00 6a 6c 00 00 10     `...x.ll...jl...
     23a:	28 44 82 00 28 28 28 28 28 00 82 44 28 10 40 80     (D..(((((..D(.@.
     24a:	8a 90 60 4c 92 9e 82 7c 7e 88 88 88 7e fe 92 92     ..`L...|~...~...
     25a:	92 6c 7c 82 82 82 44 fe 82 82 44 38 fe 92 92 92     .l|...D...D8....
     26a:	82 fe 90 90 90 80 7c 82 92 92 5e fe 10 10 10 fe     ......|...^.....
     27a:	00 82 fe 82 00 04 02 82 fc 80 fe 10 28 44 82 fe     ............(D..
     28a:	02 02 02 02 fe 40 30 40 fe fe 20 10 08 fe 7c 82     .....@0@.. ...|.
     29a:	82 82 7c fe 90 90 90 60 7c 82 8a 84 7a fe 90 98     ..|....`|...z...
     2aa:	94 62 62 92 92 92 8c 80 80 fe 80 80 fc 02 02 02     .bb.............
     2ba:	fc f8 04 02 04 f8 fc 02 1c 02 fc c6 28 10 28 c6     ............(.(.
     2ca:	e0 10 0e 10 e0 86 8a 92 a2 c2 00 fe 82 82 00 40     ...............@
     2da:	20 10 08 04 00 82 82 fe 00 20 40 80 40 20 02 02      ........ @.@ ..
     2ea:	02 02 02 00 80 40 20 00 04 2a 2a 2a 1e fe 12 22     .....@ ..***..."
     2fa:	22 1c 1c 22 22 22 04 1c 22 22 12 fe 1c 2a 2a 2a     ".."""..""...***
     30a:	18 10 7e 90 80 40 30 4a 4a 4a 7c fe 10 20 20 1e     ..~..@0JJJ|..  .
     31a:	00 22 be 02 00 04 02 22 bc 00 fe 08 14 22 00 00     ."....."....."..
     32a:	82 fe 02 00 3e 20 18 20 1e 3e 10 20 20 1e 1c 22     ....> . .>.  .."
     33a:	22 22 1c 3e 28 28 28 10 10 28 28 18 3e 3e 10 20     "".>(((..((.>>. 
     34a:	20 10 12 2a 2a 2a 04 20 fc 22 02 04 3c 02 02 04      ..***. ."..<...
     35a:	3e 38 04 02 04 38 3c 02 0c 02 3c 22 14 08 14 22     >8...8<...<"..."
     36a:	30 0a 0a 0a 3c 22 26 2a 32 22 00 10 6c 82 00 00     0...<"&*2"..l...
     37a:	00 fe 00 00 00 82 6c 10 00 08 10 10 08 10 00 00     ......l.........
     38a:	00 00 00 7f 81 81 81 7f 7f 83 83 83 7f 7f 87 87     ................
     39a:	87 7f 7f 8f 8f 8f 7f 7f 9f 9f 9f 7f 7f bf bf bf     ................
     3aa:	7f 7f ff ff ff 7f 20 40 ff 40 20 62 15 17 15 65     ...... @.@ b...e
     3ba:	00 fb fb 00 00                                      .....

000003bf <CEENBoT_Inc_logo_bitmap>:
     3bf:	00 00 00 00 00 c0 ff 03 00 e0 ff 07 00 f0 ff 0f     ................
     3cf:	00 f8 ff 1f 00 78 00 1e 00 78 00 1e 00 78 00 1e     .....x...x...x..
     3df:	00 78 00 1e 00 78 00 1e 00 78 00 1e 00 78 00 1e     .x...x...x...x..
     3ef:	00 78 00 1e 00 78 00 1e 00 00 00 00 00 00 00 00     .x...x..........
     3ff:	00 80 ff 03 00 e0 ff 07 00 f0 ff 0f 00 f8 ff 1f     ................
     40f:	00 f8 3c 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     ..<..x<..x<..x<.
     41f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     42f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     43f:	00 00 00 00 00 e0 ff 03 00 f0 ff 07 00 f8 ff 0f     ................
     44f:	00 f8 ff 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .....x<..x<..x<.
     45f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     46f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     47f:	00 00 00 00 00 f8 ff 03 00 f8 ff 0f 00 f8 ff 1f     ................
     48f:	00 f8 ff 1f 00 00 00 1e 00 00 00 1e 00 00 80 1f     ................
     49f:	00 00 f0 1f 00 00 ff 0f 00 e0 ff 07 00 f0 ff 00     ................
     4af:	00 f8 0f 00 00 f8 00 00 00 78 00 00 00 78 00 00     .........x...x..
     4bf:	00 f8 ff 1f 00 f8 ff 1f 00 f0 ff 1f 00 e0 ff 1f     ................
	...
     4d7:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     4e7:	00 78 00 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x...x<..x<..x<.
     4f7:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 f8 7e 1f     .x<..x<..x<...~.
     507:	00 f8 ff 1f 00 f0 ff 0f 00 e0 e7 03 00 00 00 00     ................
     517:	00 00 00 38 00 ee ff 6c 00 2a 80 45 00 3a 00 47     ...8...l.*.E.:.G
     527:	fc 03 ff 6c fc 83 ff 39 00 de ff 0b 7c d0 81 0b     ...l...9....|...
     537:	fc d0 81 0b c0 d0 81 0b fc d0 81 0b 7c de ff 0b     ............|...
     547:	00 82 ff 39 70 02 ff 6c f8 3a 00 47 dc 2a 80 45     ...9p..l.:.G.*.E
     557:	cc ee ff 6c cc 00 00 38 00 00 00 00 0c 00 00 1e     ...l...8........
     567:	0c 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     577:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     587:	00 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     597:	00 00 00 5e 00 00 00 40 00 00 00 7c 00 00 00 40     ...^...@...|...@
     5a7:	00 00 00 40 00 00 00 7c 00 00 00 30 00 00 00 10     ...@...|...0....
     5b7:	00 00 00 30 00 00 00 7c 00                          ...0...|.

000005c0 <__ctors_end>:
     5c0:	11 24       	eor	r1, r1
     5c2:	1f be       	out	0x3f, r1	; 63
     5c4:	cf ef       	ldi	r28, 0xFF	; 255
     5c6:	d8 e0       	ldi	r29, 0x08	; 8
     5c8:	de bf       	out	0x3e, r29	; 62
     5ca:	cd bf       	out	0x3d, r28	; 61

000005cc <__do_copy_data>:
     5cc:	11 e0       	ldi	r17, 0x01	; 1
     5ce:	a0 e0       	ldi	r26, 0x00	; 0
     5d0:	b1 e0       	ldi	r27, 0x01	; 1
     5d2:	ea eb       	ldi	r30, 0xBA	; 186
     5d4:	fe e3       	ldi	r31, 0x3E	; 62
     5d6:	02 c0       	rjmp	.+4      	; 0x5dc <.do_copy_data_start>

000005d8 <.do_copy_data_loop>:
     5d8:	05 90       	lpm	r0, Z+
     5da:	0d 92       	st	X+, r0

000005dc <.do_copy_data_start>:
     5dc:	a6 3e       	cpi	r26, 0xE6	; 230
     5de:	b1 07       	cpc	r27, r17
     5e0:	d9 f7       	brne	.-10     	; 0x5d8 <.do_copy_data_loop>

000005e2 <__do_clear_bss>:
     5e2:	12 e0       	ldi	r17, 0x02	; 2
     5e4:	a6 ee       	ldi	r26, 0xE6	; 230
     5e6:	b1 e0       	ldi	r27, 0x01	; 1
     5e8:	01 c0       	rjmp	.+2      	; 0x5ec <.do_clear_bss_start>

000005ea <.do_clear_bss_loop>:
     5ea:	1d 92       	st	X+, r1

000005ec <.do_clear_bss_start>:
     5ec:	a0 3f       	cpi	r26, 0xF0	; 240
     5ee:	b1 07       	cpc	r27, r17
     5f0:	e1 f7       	brne	.-8      	; 0x5ea <.do_clear_bss_loop>
     5f2:	0e 94 50 08 	call	0x10a0	; 0x10a0 <main>
     5f6:	0c 94 5b 1f 	jmp	0x3eb6	; 0x3eb6 <_exit>

000005fa <__bad_interrupt>:
     5fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000005fe <get_ambient_temp>:
* Output Return:	I2C_STATUS
* Overview:			Reads the ambient temperature
********************************************************************/

I2C_STATUS get_ambient_temp( unsigned char *ambient_temp )
{
     5fe:	1f 93       	push	r17
     600:	cf 93       	push	r28
     602:	df 93       	push	r29
     604:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     606:	88 e6       	ldi	r24, 0x68	; 104
     608:	60 e0       	ldi	r22, 0x00	; 0
     60a:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     60e:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     610:	88 23       	and	r24, r24
     612:	a1 f4       	brne	.+40     	; 0x63c <get_ambient_temp+0x3e>
	{

		// Send the register value (being 1).  This is
		// the register that contains the ambient temperature.
		i2c_stat = I2C_MSTR_send( __TPA81_AMBIENT );
     614:	81 e0       	ldi	r24, 0x01	; 1
     616:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <I2C_MSTR_send>
     61a:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     61c:	88 23       	and	r24, r24
     61e:	71 f4       	brne	.+28     	; 0x63c <get_ambient_temp+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     620:	88 e6       	ldi	r24, 0x68	; 104
     622:	61 e0       	ldi	r22, 0x01	; 1
     624:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     628:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     62a:	88 23       	and	r24, r24
     62c:	39 f4       	brne	.+14     	; 0x63c <get_ambient_temp+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( ambient_temp, FALSE );
     62e:	ce 01       	movw	r24, r28
     630:	60 e0       	ldi	r22, 0x00	; 0
     632:	0e 94 b0 0c 	call	0x1960	; 0x1960 <I2C_MSTR_get>
     636:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     638:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*ambient_temp = 0;
     63a:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     63c:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_ambient_temp()
     640:	81 2f       	mov	r24, r17
     642:	df 91       	pop	r29
     644:	cf 91       	pop	r28
     646:	1f 91       	pop	r17
     648:	08 95       	ret

0000064a <read_pixel_8>:
	return i2c_stat;
}

// get pixel eight
I2C_STATUS read_pixel_8( unsigned char *pixel_8)
{
     64a:	1f 93       	push	r17
     64c:	cf 93       	push	r28
     64e:	df 93       	push	r29
     650:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     652:	88 e6       	ldi	r24, 0x68	; 104
     654:	60 e0       	ldi	r22, 0x00	; 0
     656:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     65a:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     65c:	88 23       	and	r24, r24
     65e:	a1 f4       	brne	.+40     	; 0x688 <read_pixel_8+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX8 );
     660:	89 e0       	ldi	r24, 0x09	; 9
     662:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <I2C_MSTR_send>
     666:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     668:	88 23       	and	r24, r24
     66a:	71 f4       	brne	.+28     	; 0x688 <read_pixel_8+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     66c:	88 e6       	ldi	r24, 0x68	; 104
     66e:	61 e0       	ldi	r22, 0x01	; 1
     670:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     674:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     676:	88 23       	and	r24, r24
     678:	39 f4       	brne	.+14     	; 0x688 <read_pixel_8+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_8, FALSE );
     67a:	ce 01       	movw	r24, r28
     67c:	60 e0       	ldi	r22, 0x00	; 0
     67e:	0e 94 b0 0c 	call	0x1960	; 0x1960 <I2C_MSTR_get>
     682:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     684:	81 11       	cpse	r24, r1
					*pixel_8 = 0;
     686:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     688:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <I2C_MSTR_stop>
	return i2c_stat;
}
     68c:	81 2f       	mov	r24, r17
     68e:	df 91       	pop	r29
     690:	cf 91       	pop	r28
     692:	1f 91       	pop	r17
     694:	08 95       	ret

00000696 <read_pixel_7>:
	return i2c_stat;
}

// get pixel seven
I2C_STATUS read_pixel_7( unsigned char *pixel_7)
{
     696:	1f 93       	push	r17
     698:	cf 93       	push	r28
     69a:	df 93       	push	r29
     69c:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     69e:	88 e6       	ldi	r24, 0x68	; 104
     6a0:	60 e0       	ldi	r22, 0x00	; 0
     6a2:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     6a6:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     6a8:	88 23       	and	r24, r24
     6aa:	a1 f4       	brne	.+40     	; 0x6d4 <read_pixel_7+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX7 );
     6ac:	88 e0       	ldi	r24, 0x08	; 8
     6ae:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <I2C_MSTR_send>
     6b2:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     6b4:	88 23       	and	r24, r24
     6b6:	71 f4       	brne	.+28     	; 0x6d4 <read_pixel_7+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     6b8:	88 e6       	ldi	r24, 0x68	; 104
     6ba:	61 e0       	ldi	r22, 0x01	; 1
     6bc:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     6c0:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     6c2:	88 23       	and	r24, r24
     6c4:	39 f4       	brne	.+14     	; 0x6d4 <read_pixel_7+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_7, FALSE );
     6c6:	ce 01       	movw	r24, r28
     6c8:	60 e0       	ldi	r22, 0x00	; 0
     6ca:	0e 94 b0 0c 	call	0x1960	; 0x1960 <I2C_MSTR_get>
     6ce:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     6d0:	81 11       	cpse	r24, r1
					*pixel_7 = 0;
     6d2:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     6d4:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <I2C_MSTR_stop>
	return i2c_stat;
}
     6d8:	81 2f       	mov	r24, r17
     6da:	df 91       	pop	r29
     6dc:	cf 91       	pop	r28
     6de:	1f 91       	pop	r17
     6e0:	08 95       	ret

000006e2 <read_pixel_6>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel six
I2C_STATUS read_pixel_6( unsigned char *pixel_6)
{
     6e2:	1f 93       	push	r17
     6e4:	cf 93       	push	r28
     6e6:	df 93       	push	r29
     6e8:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     6ea:	88 e6       	ldi	r24, 0x68	; 104
     6ec:	60 e0       	ldi	r22, 0x00	; 0
     6ee:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     6f2:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     6f4:	88 23       	and	r24, r24
     6f6:	a1 f4       	brne	.+40     	; 0x720 <read_pixel_6+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX6 );
     6f8:	87 e0       	ldi	r24, 0x07	; 7
     6fa:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <I2C_MSTR_send>
     6fe:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     700:	88 23       	and	r24, r24
     702:	71 f4       	brne	.+28     	; 0x720 <read_pixel_6+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     704:	88 e6       	ldi	r24, 0x68	; 104
     706:	61 e0       	ldi	r22, 0x01	; 1
     708:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     70c:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     70e:	88 23       	and	r24, r24
     710:	39 f4       	brne	.+14     	; 0x720 <read_pixel_6+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_6, FALSE );
     712:	ce 01       	movw	r24, r28
     714:	60 e0       	ldi	r22, 0x00	; 0
     716:	0e 94 b0 0c 	call	0x1960	; 0x1960 <I2C_MSTR_get>
     71a:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     71c:	81 11       	cpse	r24, r1
					*pixel_6 = 0;
     71e:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     720:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <I2C_MSTR_stop>
	return i2c_stat;
}
     724:	81 2f       	mov	r24, r17
     726:	df 91       	pop	r29
     728:	cf 91       	pop	r28
     72a:	1f 91       	pop	r17
     72c:	08 95       	ret

0000072e <read_pixel_5>:
	I2C_MSTR_stop();
	return i2c_stat;
}
// get pixel five
I2C_STATUS read_pixel_5( unsigned char *pixel_5)
{
     72e:	1f 93       	push	r17
     730:	cf 93       	push	r28
     732:	df 93       	push	r29
     734:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     736:	88 e6       	ldi	r24, 0x68	; 104
     738:	60 e0       	ldi	r22, 0x00	; 0
     73a:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     73e:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     740:	88 23       	and	r24, r24
     742:	a1 f4       	brne	.+40     	; 0x76c <read_pixel_5+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX5 );
     744:	86 e0       	ldi	r24, 0x06	; 6
     746:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <I2C_MSTR_send>
     74a:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     74c:	88 23       	and	r24, r24
     74e:	71 f4       	brne	.+28     	; 0x76c <read_pixel_5+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     750:	88 e6       	ldi	r24, 0x68	; 104
     752:	61 e0       	ldi	r22, 0x01	; 1
     754:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     758:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     75a:	88 23       	and	r24, r24
     75c:	39 f4       	brne	.+14     	; 0x76c <read_pixel_5+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_5, FALSE );
     75e:	ce 01       	movw	r24, r28
     760:	60 e0       	ldi	r22, 0x00	; 0
     762:	0e 94 b0 0c 	call	0x1960	; 0x1960 <I2C_MSTR_get>
     766:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     768:	81 11       	cpse	r24, r1
					*pixel_5 = 0;
     76a:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     76c:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <I2C_MSTR_stop>
	return i2c_stat;
}
     770:	81 2f       	mov	r24, r17
     772:	df 91       	pop	r29
     774:	cf 91       	pop	r28
     776:	1f 91       	pop	r17
     778:	08 95       	ret

0000077a <read_pixel_4>:
	return i2c_stat;
}

// get pixel four
I2C_STATUS read_pixel_4( unsigned char *pixel_4)
{
     77a:	1f 93       	push	r17
     77c:	cf 93       	push	r28
     77e:	df 93       	push	r29
     780:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     782:	88 e6       	ldi	r24, 0x68	; 104
     784:	60 e0       	ldi	r22, 0x00	; 0
     786:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     78a:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     78c:	88 23       	and	r24, r24
     78e:	a1 f4       	brne	.+40     	; 0x7b8 <read_pixel_4+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX4 );
     790:	85 e0       	ldi	r24, 0x05	; 5
     792:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <I2C_MSTR_send>
     796:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     798:	88 23       	and	r24, r24
     79a:	71 f4       	brne	.+28     	; 0x7b8 <read_pixel_4+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     79c:	88 e6       	ldi	r24, 0x68	; 104
     79e:	61 e0       	ldi	r22, 0x01	; 1
     7a0:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     7a4:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7a6:	88 23       	and	r24, r24
     7a8:	39 f4       	brne	.+14     	; 0x7b8 <read_pixel_4+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_4, FALSE );
     7aa:	ce 01       	movw	r24, r28
     7ac:	60 e0       	ldi	r22, 0x00	; 0
     7ae:	0e 94 b0 0c 	call	0x1960	; 0x1960 <I2C_MSTR_get>
     7b2:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     7b4:	81 11       	cpse	r24, r1
					*pixel_4 = 0;
     7b6:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     7b8:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <I2C_MSTR_stop>
	return i2c_stat;
}
     7bc:	81 2f       	mov	r24, r17
     7be:	df 91       	pop	r29
     7c0:	cf 91       	pop	r28
     7c2:	1f 91       	pop	r17
     7c4:	08 95       	ret

000007c6 <read_pixel_3>:
	return i2c_stat;
}

// get pixel three
I2C_STATUS read_pixel_3( unsigned char *pixel_3)
{
     7c6:	1f 93       	push	r17
     7c8:	cf 93       	push	r28
     7ca:	df 93       	push	r29
     7cc:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     7ce:	88 e6       	ldi	r24, 0x68	; 104
     7d0:	60 e0       	ldi	r22, 0x00	; 0
     7d2:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     7d6:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     7d8:	88 23       	and	r24, r24
     7da:	a1 f4       	brne	.+40     	; 0x804 <read_pixel_3+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX3 );
     7dc:	84 e0       	ldi	r24, 0x04	; 4
     7de:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <I2C_MSTR_send>
     7e2:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     7e4:	88 23       	and	r24, r24
     7e6:	71 f4       	brne	.+28     	; 0x804 <read_pixel_3+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     7e8:	88 e6       	ldi	r24, 0x68	; 104
     7ea:	61 e0       	ldi	r22, 0x01	; 1
     7ec:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     7f0:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     7f2:	88 23       	and	r24, r24
     7f4:	39 f4       	brne	.+14     	; 0x804 <read_pixel_3+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_3, FALSE );
     7f6:	ce 01       	movw	r24, r28
     7f8:	60 e0       	ldi	r22, 0x00	; 0
     7fa:	0e 94 b0 0c 	call	0x1960	; 0x1960 <I2C_MSTR_get>
     7fe:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     800:	81 11       	cpse	r24, r1
					*pixel_3 = 0;
     802:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     804:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <I2C_MSTR_stop>
	return i2c_stat;
}
     808:	81 2f       	mov	r24, r17
     80a:	df 91       	pop	r29
     80c:	cf 91       	pop	r28
     80e:	1f 91       	pop	r17
     810:	08 95       	ret

00000812 <read_pixel_2>:
}


// get pixel two
I2C_STATUS read_pixel_2( unsigned char *pixel_2)
{
     812:	1f 93       	push	r17
     814:	cf 93       	push	r28
     816:	df 93       	push	r29
     818:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     81a:	88 e6       	ldi	r24, 0x68	; 104
     81c:	60 e0       	ldi	r22, 0x00	; 0
     81e:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     822:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     824:	88 23       	and	r24, r24
     826:	a1 f4       	brne	.+40     	; 0x850 <read_pixel_2+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX2 );
     828:	83 e0       	ldi	r24, 0x03	; 3
     82a:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <I2C_MSTR_send>
     82e:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     830:	88 23       	and	r24, r24
     832:	71 f4       	brne	.+28     	; 0x850 <read_pixel_2+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     834:	88 e6       	ldi	r24, 0x68	; 104
     836:	61 e0       	ldi	r22, 0x01	; 1
     838:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     83c:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     83e:	88 23       	and	r24, r24
     840:	39 f4       	brne	.+14     	; 0x850 <read_pixel_2+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_2, FALSE );
     842:	ce 01       	movw	r24, r28
     844:	60 e0       	ldi	r22, 0x00	; 0
     846:	0e 94 b0 0c 	call	0x1960	; 0x1960 <I2C_MSTR_get>
     84a:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     84c:	81 11       	cpse	r24, r1
					*pixel_2 = 0;
     84e:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     850:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <I2C_MSTR_stop>
	return i2c_stat;
}
     854:	81 2f       	mov	r24, r17
     856:	df 91       	pop	r29
     858:	cf 91       	pop	r28
     85a:	1f 91       	pop	r17
     85c:	08 95       	ret

0000085e <read_pixel_1>:
* Output Return:	I2C_STATUS
* Overview:			These are several pixel read values for each of the pixels
********************************************************************/
// get pixel one
I2C_STATUS read_pixel_1( unsigned char *pixel_1)
{
     85e:	1f 93       	push	r17
     860:	cf 93       	push	r28
     862:	df 93       	push	r29
     864:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     866:	88 e6       	ldi	r24, 0x68	; 104
     868:	60 e0       	ldi	r22, 0x00	; 0
     86a:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     86e:	18 2f       	mov	r17, r24
	if( i2c_stat == I2C_STAT_OK )
     870:	88 23       	and	r24, r24
     872:	a1 f4       	brne	.+40     	; 0x89c <read_pixel_1+0x3e>
	{
		i2c_stat = I2C_MSTR_send(__TPA81_PIX1 );
     874:	82 e0       	ldi	r24, 0x02	; 2
     876:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <I2C_MSTR_send>
     87a:	18 2f       	mov	r17, r24
		if( i2c_stat == I2C_STAT_OK )
     87c:	88 23       	and	r24, r24
     87e:	71 f4       	brne	.+28     	; 0x89c <read_pixel_1+0x3e>
		{
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     880:	88 e6       	ldi	r24, 0x68	; 104
     882:	61 e0       	ldi	r22, 0x01	; 1
     884:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     888:	18 2f       	mov	r17, r24
			if( i2c_stat == I2C_STAT_OK )
     88a:	88 23       	and	r24, r24
     88c:	39 f4       	brne	.+14     	; 0x89c <read_pixel_1+0x3e>
			{
				i2c_stat = I2C_MSTR_get( pixel_1, FALSE );
     88e:	ce 01       	movw	r24, r28
     890:	60 e0       	ldi	r22, 0x00	; 0
     892:	0e 94 b0 0c 	call	0x1960	; 0x1960 <I2C_MSTR_get>
     896:	18 2f       	mov	r17, r24
				if ( i2c_stat != I2C_STAT_OK )
     898:	81 11       	cpse	r24, r1
					*pixel_1 = 0;
     89a:	18 82       	st	Y, r1
			}
		} 
	} 
	I2C_MSTR_stop();
     89c:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <I2C_MSTR_stop>
	return i2c_stat;
}
     8a0:	81 2f       	mov	r24, r17
     8a2:	df 91       	pop	r29
     8a4:	cf 91       	pop	r28
     8a6:	1f 91       	pop	r17
     8a8:	08 95       	ret

000008aa <get_revision>:
* Input Variables:	unsigned char revision
* Output Return:	I2C_STATUS
* Overview:			
********************************************************************/
I2C_STATUS get_revision( unsigned char *revision )
{
     8aa:	1f 93       	push	r17
     8ac:	cf 93       	push	r28
     8ae:	df 93       	push	r29
     8b0:	ec 01       	movw	r28, r24
	I2C_STATUS i2c_stat;

	// Begin a transaction as master transmitter so that 
	// we can tell the sensor the register we want to read from
	// before we _actually_ read it.
	i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MT );
     8b2:	88 e6       	ldi	r24, 0x68	; 104
     8b4:	60 e0       	ldi	r22, 0x00	; 0
     8b6:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     8ba:	18 2f       	mov	r17, r24

	// If successful...
	if( i2c_stat == I2C_STAT_OK )
     8bc:	88 23       	and	r24, r24
     8be:	a1 f4       	brne	.+40     	; 0x8e8 <get_revision+0x3e>
	{

		// Send the register value (being 0).  This is
		// the register that contains the software revision.
		i2c_stat = I2C_MSTR_send( __TPA81_REVISION );
     8c0:	80 e0       	ldi	r24, 0x00	; 0
     8c2:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <I2C_MSTR_send>
     8c6:	18 2f       	mov	r17, r24

		// If successful...
		if( i2c_stat == I2C_STAT_OK )
     8c8:	88 23       	and	r24, r24
     8ca:	71 f4       	brne	.+28     	; 0x8e8 <get_revision+0x3e>
		{

			// Now switch to master receiver so we can 
			// read the data in register 0 of the sensor.
			i2c_stat = I2C_MSTR_start( __TPA81_ADDR, I2C_MODE_MR );
     8cc:	88 e6       	ldi	r24, 0x68	; 104
     8ce:	61 e0       	ldi	r22, 0x01	; 1
     8d0:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <I2C_MSTR_start>
     8d4:	18 2f       	mov	r17, r24

			// If successful...
			if( i2c_stat == I2C_STAT_OK )
     8d6:	88 23       	and	r24, r24
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <get_revision+0x3e>
			{

				// Read the data...
				i2c_stat = I2C_MSTR_get( revision, FALSE );
     8da:	ce 01       	movw	r24, r28
     8dc:	60 e0       	ldi	r22, 0x00	; 0
     8de:	0e 94 b0 0c 	call	0x1960	; 0x1960 <I2C_MSTR_get>
     8e2:	18 2f       	mov	r17, r24

				// If NOT successful...
				if ( i2c_stat != I2C_STAT_OK )
     8e4:	81 11       	cpse	r24, r1

					// Overwrite it with 0.
					*revision = 0;
     8e6:	18 82       	st	Y, r1

	} // end if()

	// I'm going to assume the transaction was successful, 
	// so we need to stop it.
	I2C_MSTR_stop();
     8e8:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <I2C_MSTR_stop>

	// Also, return the status, regardless.
	return i2c_stat;

} // end get_revision()
     8ec:	81 2f       	mov	r24, r17
     8ee:	df 91       	pop	r29
     8f0:	cf 91       	pop	r28
     8f2:	1f 91       	pop	r17
     8f4:	08 95       	ret

000008f6 <getBackIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     8f6:	81 e0       	ldi	r24, 0x01	; 1
     8f8:	0e 94 45 08 	call	0x108a	; 0x108a <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel(IRBACK_CHAN);
     8fc:	85 e0       	ldi	r24, 0x05	; 5
     8fe:	0e 94 0e 08 	call	0x101c	; 0x101c <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     902:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <ADC_sample>
     906:	a0 e0       	ldi	r26, 0x00	; 0
     908:	b0 e0       	ldi	r27, 0x00	; 0
     90a:	bc 01       	movw	r22, r24
     90c:	cd 01       	movw	r24, r26
     90e:	0e 94 37 18 	call	0x306e	; 0x306e <__floatunsisf>
     912:	20 e0       	ldi	r18, 0x00	; 0
     914:	30 e0       	ldi	r19, 0x00	; 0
     916:	40 ea       	ldi	r20, 0xA0	; 160
     918:	50 e4       	ldi	r21, 0x40	; 64
     91a:	0e 94 65 17 	call	0x2eca	; 0x2eca <__addsf3>
     91e:	9b 01       	movw	r18, r22
     920:	ac 01       	movw	r20, r24
     922:	60 e0       	ldi	r22, 0x00	; 0
     924:	70 e2       	ldi	r23, 0x20	; 32
     926:	86 e3       	ldi	r24, 0x36	; 54
     928:	95 e4       	ldi	r25, 0x45	; 69
     92a:	0e 94 ce 17 	call	0x2f9c	; 0x2f9c <__divsf3>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e8       	ldi	r20, 0x80	; 128
     934:	5f e3       	ldi	r21, 0x3F	; 63
     936:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <__subsf3>
     93a:	2c e0       	ldi	r18, 0x0C	; 12
     93c:	33 e9       	ldi	r19, 0x93	; 147
     93e:	49 ec       	ldi	r20, 0xC9	; 201
     940:	5e e3       	ldi	r21, 0x3E	; 62
     942:	0e 94 00 19 	call	0x3200	; 0x3200 <__mulsf3>
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	//Convert distance to inches
	dist = distance*0.3937;
	return dist;
}
     946:	08 95       	ret

00000948 <getFrontIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     948:	81 e0       	ldi	r24, 0x01	; 1
     94a:	0e 94 45 08 	call	0x108a	; 0x108a <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel(IRFRONT_CHAN);
     94e:	87 e0       	ldi	r24, 0x07	; 7
     950:	0e 94 0e 08 	call	0x101c	; 0x101c <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     954:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <ADC_sample>
     958:	a0 e0       	ldi	r26, 0x00	; 0
     95a:	b0 e0       	ldi	r27, 0x00	; 0
     95c:	bc 01       	movw	r22, r24
     95e:	cd 01       	movw	r24, r26
     960:	0e 94 37 18 	call	0x306e	; 0x306e <__floatunsisf>
     964:	20 e0       	ldi	r18, 0x00	; 0
     966:	30 e0       	ldi	r19, 0x00	; 0
     968:	40 ea       	ldi	r20, 0xA0	; 160
     96a:	50 e4       	ldi	r21, 0x40	; 64
     96c:	0e 94 65 17 	call	0x2eca	; 0x2eca <__addsf3>
     970:	9b 01       	movw	r18, r22
     972:	ac 01       	movw	r20, r24
     974:	60 e0       	ldi	r22, 0x00	; 0
     976:	70 e2       	ldi	r23, 0x20	; 32
     978:	86 e3       	ldi	r24, 0x36	; 54
     97a:	95 e4       	ldi	r25, 0x45	; 69
     97c:	0e 94 ce 17 	call	0x2f9c	; 0x2f9c <__divsf3>
     980:	20 e0       	ldi	r18, 0x00	; 0
     982:	30 e0       	ldi	r19, 0x00	; 0
     984:	40 e8       	ldi	r20, 0x80	; 128
     986:	5f e3       	ldi	r21, 0x3F	; 63
     988:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <__subsf3>
     98c:	2c e0       	ldi	r18, 0x0C	; 12
     98e:	33 e9       	ldi	r19, 0x93	; 147
     990:	49 ec       	ldi	r20, 0xC9	; 201
     992:	5e e3       	ldi	r21, 0x3E	; 62
     994:	0e 94 00 19 	call	0x3200	; 0x3200 <__mulsf3>
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	//Convert distance to inches
	dist = distance*0.3937;
	return dist;
}
     998:	08 95       	ret

0000099a <getRightIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
     99a:	81 e0       	ldi	r24, 0x01	; 1
     99c:	0e 94 45 08 	call	0x108a	; 0x108a <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
     9a0:	83 e0       	ldi	r24, 0x03	; 3
     9a2:	0e 94 0e 08 	call	0x101c	; 0x101c <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9a6:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <ADC_sample>
     9aa:	a0 e0       	ldi	r26, 0x00	; 0
     9ac:	b0 e0       	ldi	r27, 0x00	; 0
     9ae:	bc 01       	movw	r22, r24
     9b0:	cd 01       	movw	r24, r26
     9b2:	0e 94 37 18 	call	0x306e	; 0x306e <__floatunsisf>
     9b6:	20 e0       	ldi	r18, 0x00	; 0
     9b8:	30 e0       	ldi	r19, 0x00	; 0
     9ba:	40 ea       	ldi	r20, 0xA0	; 160
     9bc:	50 e4       	ldi	r21, 0x40	; 64
     9be:	0e 94 65 17 	call	0x2eca	; 0x2eca <__addsf3>
     9c2:	9b 01       	movw	r18, r22
     9c4:	ac 01       	movw	r20, r24
     9c6:	60 e0       	ldi	r22, 0x00	; 0
     9c8:	70 e2       	ldi	r23, 0x20	; 32
     9ca:	86 e3       	ldi	r24, 0x36	; 54
     9cc:	95 e4       	ldi	r25, 0x45	; 69
     9ce:	0e 94 ce 17 	call	0x2f9c	; 0x2f9c <__divsf3>
     9d2:	20 e0       	ldi	r18, 0x00	; 0
     9d4:	30 e0       	ldi	r19, 0x00	; 0
     9d6:	40 e8       	ldi	r20, 0x80	; 128
     9d8:	5f e3       	ldi	r21, 0x3F	; 63
     9da:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <__subsf3>
     9de:	2c e0       	ldi	r18, 0x0C	; 12
     9e0:	33 e9       	ldi	r19, 0x93	; 147
     9e2:	49 ec       	ldi	r20, 0xC9	; 201
     9e4:	5e e3       	ldi	r21, 0x3E	; 62
     9e6:	0e 94 00 19 	call	0x3200	; 0x3200 <__mulsf3>
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	//Convert distance to inches
	dist = distance*0.3937;
	return dist;
}
     9ea:	08 95       	ret

000009ec <getLeftIR>:
	float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V	
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
 	ADC_set_VREF( ADC_VREF_AVCC );
     9ec:	81 e0       	ldi	r24, 0x01	; 1
     9ee:	0e 94 45 08 	call	0x108a	; 0x108a <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
     9f2:	84 e0       	ldi	r24, 0x04	; 4
     9f4:	0e 94 0e 08 	call	0x101c	; 0x101c <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
     9f8:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <ADC_sample>
     9fc:	a0 e0       	ldi	r26, 0x00	; 0
     9fe:	b0 e0       	ldi	r27, 0x00	; 0
     a00:	bc 01       	movw	r22, r24
     a02:	cd 01       	movw	r24, r26
     a04:	0e 94 37 18 	call	0x306e	; 0x306e <__floatunsisf>
     a08:	20 e0       	ldi	r18, 0x00	; 0
     a0a:	30 e0       	ldi	r19, 0x00	; 0
     a0c:	40 ea       	ldi	r20, 0xA0	; 160
     a0e:	50 e4       	ldi	r21, 0x40	; 64
     a10:	0e 94 65 17 	call	0x2eca	; 0x2eca <__addsf3>
     a14:	9b 01       	movw	r18, r22
     a16:	ac 01       	movw	r20, r24
     a18:	60 e0       	ldi	r22, 0x00	; 0
     a1a:	70 e2       	ldi	r23, 0x20	; 32
     a1c:	86 e3       	ldi	r24, 0x36	; 54
     a1e:	95 e4       	ldi	r25, 0x45	; 69
     a20:	0e 94 ce 17 	call	0x2f9c	; 0x2f9c <__divsf3>
     a24:	20 e0       	ldi	r18, 0x00	; 0
     a26:	30 e0       	ldi	r19, 0x00	; 0
     a28:	40 e8       	ldi	r20, 0x80	; 128
     a2a:	5f e3       	ldi	r21, 0x3F	; 63
     a2c:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <__subsf3>
     a30:	2c e0       	ldi	r18, 0x0C	; 12
     a32:	33 e9       	ldi	r19, 0x93	; 147
     a34:	49 ec       	ldi	r20, 0xC9	; 201
     a36:	5e e3       	ldi	r21, 0x3E	; 62
     a38:	0e 94 00 19 	call	0x3200	; 0x3200 <__mulsf3>
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
	//Convert distance to inches
	dist = distance*0.3937;
	return dist;
}
     a3c:	08 95       	ret

00000a3e <getRightLight>:
********************************************************************/
float getRightLight( void )
{
	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     a3e:	81 e0       	ldi	r24, 0x01	; 1
     a40:	0e 94 45 08 	call	0x108a	; 0x108a <ADC_set_VREF>
	ADC_set_channel( RIGHT_LIGHT_CHAN );
     a44:	85 e0       	ldi	r24, 0x05	; 5
     a46:	0e 94 0e 08 	call	0x101c	; 0x101c <ADC_set_channel>
	adcsample = ADC_sample();
     a4a:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <ADC_sample>
     a4e:	a0 e0       	ldi	r26, 0x00	; 0
     a50:	b0 e0       	ldi	r27, 0x00	; 0
     a52:	bc 01       	movw	r22, r24
     a54:	cd 01       	movw	r24, r26
     a56:	0e 94 37 18 	call	0x306e	; 0x306e <__floatunsisf>
     a5a:	20 e0       	ldi	r18, 0x00	; 0
     a5c:	30 e0       	ldi	r19, 0x00	; 0
     a5e:	40 ea       	ldi	r20, 0xA0	; 160
     a60:	5b e3       	ldi	r21, 0x3B	; 59
     a62:	0e 94 00 19 	call	0x3200	; 0x3200 <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * ( 5.0 / 1024 );
	//LCD_printf( "right: %f\n",voltage);
	return voltage;
}
     a66:	08 95       	ret

00000a68 <getLeftLight>:
float getLeftLight( void )
{

	float voltage;
	ADC_SAMPLE adcsample;
	ADC_set_VREF( ADC_VREF_AVCC );
     a68:	81 e0       	ldi	r24, 0x01	; 1
     a6a:	0e 94 45 08 	call	0x108a	; 0x108a <ADC_set_VREF>
	ADC_set_channel( LEFT_LIGHT_CHAN );
     a6e:	86 e0       	ldi	r24, 0x06	; 6
     a70:	0e 94 0e 08 	call	0x101c	; 0x101c <ADC_set_channel>
	adcsample = ADC_sample();
     a74:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <ADC_sample>
     a78:	a0 e0       	ldi	r26, 0x00	; 0
     a7a:	b0 e0       	ldi	r27, 0x00	; 0
     a7c:	bc 01       	movw	r22, r24
     a7e:	cd 01       	movw	r24, r26
     a80:	0e 94 37 18 	call	0x306e	; 0x306e <__floatunsisf>
     a84:	20 e0       	ldi	r18, 0x00	; 0
     a86:	30 e0       	ldi	r19, 0x00	; 0
     a88:	40 ea       	ldi	r20, 0xA0	; 160
     a8a:	5b e3       	ldi	r21, 0x3B	; 59
     a8c:	0e 94 00 19 	call	0x3200	; 0x3200 <__mulsf3>
	//LCD_printf( "ADC: %i\n",adcsample);
	voltage = adcsample * (5.0/ 1024.0 );
	//LCD_printf( "voltage: %f\n",voltage);
	return voltage;
}
     a90:	08 95       	ret

00000a92 <WaitButton>:
* Input Variables:	none
* Output Return:	int
* Overview:			Use a comment block like this before functions
********************************************************************/
int WaitButton( void ) 
{
     a92:	ff 92       	push	r15
     a94:	0f 93       	push	r16
     a96:	1f 93       	push	r17
     a98:	cf 93       	push	r28
     a9a:	df 93       	push	r29
    BOOL btnState1, btnState2, btnState3;//local variables - button states
	int rtnValue=0;//return the button value



	if((ATopstat.state=SUBSYS_OPEN))
     a9c:	81 e0       	ldi	r24, 0x01	; 1
     a9e:	80 93 6d 02 	sts	0x026D, r24
	{
       		// Get switch states.
		btnState1 = ATTINY_get_SW_state( ATTINY_SW3 );
     aa2:	80 e0       	ldi	r24, 0x00	; 0
     aa4:	0e 94 b4 0b 	call	0x1768	; 0x1768 <ATTINY_get_SW_state>
     aa8:	18 2f       	mov	r17, r24
		btnState2 = ATTINY_get_SW_state( ATTINY_SW4 );
     aaa:	81 e0       	ldi	r24, 0x01	; 1
     aac:	0e 94 b4 0b 	call	0x1768	; 0x1768 <ATTINY_get_SW_state>
     ab0:	08 2f       	mov	r16, r24
		btnState3 = ATTINY_get_SW_state( ATTINY_SW5 );
     ab2:	82 e0       	ldi	r24, 0x02	; 2
     ab4:	0e 94 b4 0b 	call	0x1768	; 0x1768 <ATTINY_get_SW_state>
     ab8:	f8 2e       	mov	r15, r24
		//LCD_printf("btnStates: %d %d %d \n", btnState1, btnState2, btnState3);

		if( btnState1 == TRUE ) 
     aba:	11 30       	cpi	r17, 0x01	; 1
     abc:	19 f0       	breq	.+6      	; 0xac4 <WaitButton+0x32>
     abe:	c0 e0       	ldi	r28, 0x00	; 0
     ac0:	d0 e0       	ldi	r29, 0x00	; 0
     ac2:	17 c0       	rjmp	.+46     	; 0xaf2 <WaitButton+0x60>
		{
			LCD_printf( "SW1: Pushed\n");
     ac4:	80 e0       	ldi	r24, 0x00	; 0
     ac6:	91 e0       	ldi	r25, 0x01	; 1
     ac8:	0e 94 72 1c 	call	0x38e4	; 0x38e4 <puts>
			TMRSRVC_delay(1000);//wait 1 s
     acc:	88 ee       	ldi	r24, 0xE8	; 232
     ace:	93 e0       	ldi	r25, 0x03	; 3
     ad0:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b00100000 );//turn the red LED on
     ad4:	80 e2       	ldi	r24, 0x20	; 32
     ad6:	0e 94 68 09 	call	0x12d0	; 0x12d0 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     ada:	80 ed       	ldi	r24, 0xD0	; 208
     adc:	97 e0       	ldi	r25, 0x07	; 7
     ade:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TMRSRVC_delay>
               		LED_clr_pattern( 0b01000000 );//turn the green LED off
     ae2:	80 e4       	ldi	r24, 0x40	; 64
     ae4:	0e 94 53 09 	call	0x12a6	; 0x12a6 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     ae8:	80 e2       	ldi	r24, 0x20	; 32
     aea:	0e 94 53 09 	call	0x12a6	; 0x12a6 <LED_clr_pattern>
     aee:	c1 e0       	ldi	r28, 0x01	; 1
     af0:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=1;
			}//end if button 1 state open

		if( btnState2 == TRUE ) 
     af2:	01 30       	cpi	r16, 0x01	; 1
     af4:	b9 f4       	brne	.+46     	; 0xb24 <WaitButton+0x92>
		{
			LCD_printf( "SW2: Pushed\n");
     af6:	8c e0       	ldi	r24, 0x0C	; 12
     af8:	91 e0       	ldi	r25, 0x01	; 1
     afa:	0e 94 72 1c 	call	0x38e4	; 0x38e4 <puts>
			TMRSRVC_delay(1000);//wait 1 s
     afe:	88 ee       	ldi	r24, 0xE8	; 232
     b00:	93 e0       	ldi	r25, 0x03	; 3
     b02:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     b06:	80 e4       	ldi	r24, 0x40	; 64
     b08:	0e 94 68 09 	call	0x12d0	; 0x12d0 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     b0c:	80 ed       	ldi	r24, 0xD0	; 208
     b0e:	97 e0       	ldi	r25, 0x07	; 7
     b10:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     b14:	80 e4       	ldi	r24, 0x40	; 64
     b16:	0e 94 53 09 	call	0x12a6	; 0x12a6 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b1a:	80 e2       	ldi	r24, 0x20	; 32
     b1c:	0e 94 53 09 	call	0x12a6	; 0x12a6 <LED_clr_pattern>
     b20:	c2 e0       	ldi	r28, 0x02	; 2
     b22:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=2;
		}//end if btn 2 open

		if ( btnState3 == TRUE ) 
     b24:	81 e0       	ldi	r24, 0x01	; 1
     b26:	f8 16       	cp	r15, r24
     b28:	d1 f4       	brne	.+52     	; 0xb5e <WaitButton+0xcc>
		{
			LCD_printf( "SW3: Pushed\n");
     b2a:	88 e1       	ldi	r24, 0x18	; 24
     b2c:	91 e0       	ldi	r25, 0x01	; 1
     b2e:	0e 94 72 1c 	call	0x38e4	; 0x38e4 <puts>
			TMRSRVC_delay(1000);//wait 1 s
     b32:	88 ee       	ldi	r24, 0xE8	; 232
     b34:	93 e0       	ldi	r25, 0x03	; 3
     b36:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TMRSRVC_delay>

	                // Assume the LED subsystem opened successfully.
        	        LED_set_pattern( 0b01000000 );//turn the green LED on
     b3a:	80 e4       	ldi	r24, 0x40	; 64
     b3c:	0e 94 68 09 	call	0x12d0	; 0x12d0 <LED_set_pattern>
                	LED_set_pattern( 0b00100000 );//turn the red LED on
     b40:	80 e2       	ldi	r24, 0x20	; 32
     b42:	0e 94 68 09 	call	0x12d0	; 0x12d0 <LED_set_pattern>
                	TMRSRVC_delay(2000);//wait 2 seconds
     b46:	80 ed       	ldi	r24, 0xD0	; 208
     b48:	97 e0       	ldi	r25, 0x07	; 7
     b4a:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TMRSRVC_delay>
                	LED_clr_pattern( 0b01000000 );//turn the green LED off
     b4e:	80 e4       	ldi	r24, 0x40	; 64
     b50:	0e 94 53 09 	call	0x12a6	; 0x12a6 <LED_clr_pattern>
                	LED_clr_pattern( 0b00100000 );//turn the red LED off
     b54:	80 e2       	ldi	r24, 0x20	; 32
     b56:	0e 94 53 09 	call	0x12a6	; 0x12a6 <LED_clr_pattern>
     b5a:	c3 e0       	ldi	r28, 0x03	; 3
     b5c:	d0 e0       	ldi	r29, 0x00	; 0
			rtnValue=3;
		}//end if btn 3 open
            	LCD_clear();
     b5e:	0e 94 59 08 	call	0x10b2	; 0x10b2 <LCD_clear>
		return rtnValue;
	}//end AT while

}//end the WaitButton() function
     b62:	ce 01       	movw	r24, r28
     b64:	df 91       	pop	r29
     b66:	cf 91       	pop	r28
     b68:	1f 91       	pop	r17
     b6a:	0f 91       	pop	r16
     b6c:	ff 90       	pop	r15
     b6e:	08 95       	ret

00000b70 <CBOT_main>:
/*******************************************************************
* Function:        void CBOT_main( void )
********************************************************************/

void CBOT_main( void )
{
     b70:	2f 92       	push	r2
     b72:	3f 92       	push	r3
     b74:	4f 92       	push	r4
     b76:	5f 92       	push	r5
     b78:	6f 92       	push	r6
     b7a:	7f 92       	push	r7
     b7c:	8f 92       	push	r8
     b7e:	9f 92       	push	r9
     b80:	af 92       	push	r10
     b82:	bf 92       	push	r11
     b84:	cf 92       	push	r12
     b86:	df 92       	push	r13
     b88:	ef 92       	push	r14
     b8a:	ff 92       	push	r15
     b8c:	0f 93       	push	r16
     b8e:	1f 93       	push	r17
     b90:	df 93       	push	r29
     b92:	cf 93       	push	r28
     b94:	cd b7       	in	r28, 0x3d	; 61
     b96:	de b7       	in	r29, 0x3e	; 62
     b98:	2b 97       	sbiw	r28, 0x0b	; 11
     b9a:	0f b6       	in	r0, 0x3f	; 63
     b9c:	f8 94       	cli
     b9e:	de bf       	out	0x3e, r29	; 62
     ba0:	0f be       	out	0x3f, r0	; 63
     ba2:	cd bf       	out	0x3d, r28	; 61

	float	ltLght;//left light reading
	float	rtLght;//right light reading

	unsigned char data;
	unsigned char pixel1 = 0;
     ba4:	1a 82       	std	Y+2, r1	; 0x02
	unsigned char pixel2 = 0;
     ba6:	1b 82       	std	Y+3, r1	; 0x03
	unsigned char pixel3 = 0;
     ba8:	1c 82       	std	Y+4, r1	; 0x04
	unsigned char pixel4 = 0;
     baa:	1d 82       	std	Y+5, r1	; 0x05
	unsigned char pixel5 = 0;
     bac:	1e 82       	std	Y+6, r1	; 0x06
	unsigned char pixel6 = 0;
     bae:	1f 82       	std	Y+7, r1	; 0x07
	unsigned char pixel7 = 0;
     bb0:	18 86       	std	Y+8, r1	; 0x08
	unsigned char pixel8 = 0;
     bb2:	19 86       	std	Y+9, r1	; 0x09

	ATopstat = ATTINY_open();//open the tiny microcontroller
     bb4:	0e 94 02 0c 	call	0x1804	; 0x1804 <ATTINY_open>
     bb8:	90 93 6d 02 	sts	0x026D, r25
     bbc:	80 93 6c 02 	sts	0x026C, r24
	LEopstat = LED_open(); //open the LED module
     bc0:	0e 94 5f 09 	call	0x12be	; 0x12be <LED_open>
     bc4:	90 93 6b 02 	sts	0x026B, r25
     bc8:	80 93 6a 02 	sts	0x026A, r24
	SPKR_open(SPKR_BEEP_MODE);//open the speaker in beep mode
     bcc:	81 e0       	ldi	r24, 0x01	; 1
     bce:	0e 94 65 0a 	call	0x14ca	; 0x14ca <SPKR_open>
	LCopstat = LCD_open(); //open the LCD module
     bd2:	0e 94 76 08 	call	0x10ec	; 0x10ec <LCD_open>
     bd6:	90 93 69 02 	sts	0x0269, r25
     bda:	80 93 68 02 	sts	0x0268, r24
	LED_open();
     bde:	0e 94 5f 09 	call	0x12be	; 0x12be <LED_open>
	I2C_open();
     be2:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <I2C_open>
	ADC_open();//open the ADC module
     be6:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <ADC_open>
		ADC_set_VREF( ADC_VREF_AVCC );// Set the Voltage Reference first so VREF=5V.
     bea:	81 e0       	ldi	r24, 0x01	; 1
     bec:	0e 94 45 08 	call	0x108a	; 0x108a <ADC_set_VREF>


	//keep the microcontroller running
	while(1)
	{
		LCD_printf_PGM( PSTR( "SENSOR TEST\n" ));
     bf0:	00 d0       	rcall	.+0      	; 0xbf2 <CBOT_main+0x82>
     bf2:	ed e9       	ldi	r30, 0x9D	; 157
     bf4:	f1 e0       	ldi	r31, 0x01	; 1
     bf6:	ad b7       	in	r26, 0x3d	; 61
     bf8:	be b7       	in	r27, 0x3e	; 62
     bfa:	12 96       	adiw	r26, 0x02	; 2
     bfc:	fc 93       	st	X, r31
     bfe:	ee 93       	st	-X, r30
     c00:	11 97       	sbiw	r26, 0x01	; 1
     c02:	0e 94 4c 1c 	call	0x3898	; 0x3898 <printf_P>
		btnValue=WaitButton();
     c06:	0f 90       	pop	r0
     c08:	0f 90       	pop	r0
     c0a:	0e 94 49 05 	call	0xa92	; 0xa92 <WaitButton>
		if (btnValue==1)
     c0e:	81 30       	cpi	r24, 0x01	; 1
     c10:	91 05       	cpc	r25, r1
     c12:	09 f0       	breq	.+2      	; 0xc16 <CBOT_main+0xa6>
     c14:	65 c0       	rjmp	.+202    	; 0xce0 <CBOT_main+0x170>
		{
			//Check Light Sensors
			//beep once
			SPKR_play_beep( 500,500,100);//500 Hz for 500 ms
     c16:	64 ef       	ldi	r22, 0xF4	; 244
     c18:	71 e0       	ldi	r23, 0x01	; 1
     c1a:	80 e0       	ldi	r24, 0x00	; 0
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	44 ef       	ldi	r20, 0xF4	; 244
     c20:	51 e0       	ldi	r21, 0x01	; 1
     c22:	24 e6       	ldi	r18, 0x64	; 100
     c24:	30 e0       	ldi	r19, 0x00	; 0
     c26:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <SPKR_play_beep>
     c2a:	cc 24       	eor	r12, r12
     c2c:	dd 24       	eor	r13, r13
			i = 0;
			for(i = 0;i<25;i++)
			{
				//read the contact sensors
				ltContact = ATTINY_get_IR_state(ATTINY_IR_LEFT);
     c2e:	80 e0       	ldi	r24, 0x00	; 0
     c30:	0e 94 4e 0b 	call	0x169c	; 0x169c <ATTINY_get_IR_state>
     c34:	18 2f       	mov	r17, r24
				rtContact = ATTINY_get_IR_state(ATTINY_IR_RIGHT);
     c36:	81 e0       	ldi	r24, 0x01	; 1
     c38:	0e 94 4e 0b 	call	0x169c	; 0x169c <ATTINY_get_IR_state>
				LCD_printf("ltCt: %d  rtCt: %d\n",ltContact, rtContact);//print contact sensors status
     c3c:	00 d0       	rcall	.+0      	; 0xc3e <CBOT_main+0xce>
     c3e:	00 d0       	rcall	.+0      	; 0xc40 <CBOT_main+0xd0>
     c40:	00 d0       	rcall	.+0      	; 0xc42 <CBOT_main+0xd2>
     c42:	ed b7       	in	r30, 0x3d	; 61
     c44:	fe b7       	in	r31, 0x3e	; 62
     c46:	31 96       	adiw	r30, 0x01	; 1
     c48:	24 e2       	ldi	r18, 0x24	; 36
     c4a:	31 e0       	ldi	r19, 0x01	; 1
     c4c:	ad b7       	in	r26, 0x3d	; 61
     c4e:	be b7       	in	r27, 0x3e	; 62
     c50:	12 96       	adiw	r26, 0x02	; 2
     c52:	3c 93       	st	X, r19
     c54:	2e 93       	st	-X, r18
     c56:	11 97       	sbiw	r26, 0x01	; 1
     c58:	12 83       	std	Z+2, r17	; 0x02
     c5a:	13 82       	std	Z+3, r1	; 0x03
     c5c:	84 83       	std	Z+4, r24	; 0x04
     c5e:	15 82       	std	Z+5, r1	; 0x05
     c60:	0e 94 37 1c 	call	0x386e	; 0x386e <printf>

				//read the photocells
				ltLght = getLeftLight();//get left light
     c64:	8d b7       	in	r24, 0x3d	; 61
     c66:	9e b7       	in	r25, 0x3e	; 62
     c68:	06 96       	adiw	r24, 0x06	; 6
     c6a:	0f b6       	in	r0, 0x3f	; 63
     c6c:	f8 94       	cli
     c6e:	9e bf       	out	0x3e, r25	; 62
     c70:	0f be       	out	0x3f, r0	; 63
     c72:	8d bf       	out	0x3d, r24	; 61
     c74:	0e 94 34 05 	call	0xa68	; 0xa68 <getLeftLight>
     c78:	7b 01       	movw	r14, r22
     c7a:	8c 01       	movw	r16, r24
				rtLght = getRightLight();//get right light
     c7c:	0e 94 1f 05 	call	0xa3e	; 0xa3e <getRightLight>
				LCD_printf("ltLt: %3.2f rtLt: %3.2f\n\n",ltLght, rtLght);//print photocell status
     c80:	ad b7       	in	r26, 0x3d	; 61
     c82:	be b7       	in	r27, 0x3e	; 62
     c84:	1a 97       	sbiw	r26, 0x0a	; 10
     c86:	0f b6       	in	r0, 0x3f	; 63
     c88:	f8 94       	cli
     c8a:	be bf       	out	0x3e, r27	; 62
     c8c:	0f be       	out	0x3f, r0	; 63
     c8e:	ad bf       	out	0x3d, r26	; 61
     c90:	ed b7       	in	r30, 0x3d	; 61
     c92:	fe b7       	in	r31, 0x3e	; 62
     c94:	31 96       	adiw	r30, 0x01	; 1
     c96:	28 e3       	ldi	r18, 0x38	; 56
     c98:	31 e0       	ldi	r19, 0x01	; 1
     c9a:	12 96       	adiw	r26, 0x02	; 2
     c9c:	3c 93       	st	X, r19
     c9e:	2e 93       	st	-X, r18
     ca0:	11 97       	sbiw	r26, 0x01	; 1
     ca2:	e2 82       	std	Z+2, r14	; 0x02
     ca4:	f3 82       	std	Z+3, r15	; 0x03
     ca6:	04 83       	std	Z+4, r16	; 0x04
     ca8:	15 83       	std	Z+5, r17	; 0x05
     caa:	66 83       	std	Z+6, r22	; 0x06
     cac:	77 83       	std	Z+7, r23	; 0x07
     cae:	80 87       	std	Z+8, r24	; 0x08
     cb0:	91 87       	std	Z+9, r25	; 0x09
     cb2:	0e 94 37 1c 	call	0x386e	; 0x386e <printf>

				TMRSRVC_delay(1000);//wait 1 secs
     cb6:	8d b7       	in	r24, 0x3d	; 61
     cb8:	9e b7       	in	r25, 0x3e	; 62
     cba:	0a 96       	adiw	r24, 0x0a	; 10
     cbc:	0f b6       	in	r0, 0x3f	; 63
     cbe:	f8 94       	cli
     cc0:	9e bf       	out	0x3e, r25	; 62
     cc2:	0f be       	out	0x3f, r0	; 63
     cc4:	8d bf       	out	0x3d, r24	; 61
     cc6:	88 ee       	ldi	r24, 0xE8	; 232
     cc8:	93 e0       	ldi	r25, 0x03	; 3
     cca:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TMRSRVC_delay>
		{
			//Check Light Sensors
			//beep once
			SPKR_play_beep( 500,500,100);//500 Hz for 500 ms
			i = 0;
			for(i = 0;i<25;i++)
     cce:	08 94       	sec
     cd0:	c1 1c       	adc	r12, r1
     cd2:	d1 1c       	adc	r13, r1
     cd4:	99 e1       	ldi	r25, 0x19	; 25
     cd6:	c9 16       	cp	r12, r25
     cd8:	d1 04       	cpc	r13, r1
     cda:	09 f0       	breq	.+2      	; 0xcde <CBOT_main+0x16e>
     cdc:	a8 cf       	rjmp	.-176    	; 0xc2e <CBOT_main+0xbe>
     cde:	88 cf       	rjmp	.-240    	; 0xbf0 <CBOT_main+0x80>
				LCD_printf("ltLt: %3.2f rtLt: %3.2f\n\n",ltLght, rtLght);//print photocell status

				TMRSRVC_delay(1000);//wait 1 secs
			}
		}
		else if (btnValue==2)
     ce0:	82 30       	cpi	r24, 0x02	; 2
     ce2:	91 05       	cpc	r25, r1
     ce4:	09 f0       	breq	.+2      	; 0xce8 <CBOT_main+0x178>
     ce6:	80 c0       	rjmp	.+256    	; 0xde8 <CBOT_main+0x278>
		{
			//Check IR Sensors
			//beep twice
			SPKR_play_beep(250, 500, 50);//250 Hz for 250 ms
     ce8:	6a ef       	ldi	r22, 0xFA	; 250
     cea:	70 e0       	ldi	r23, 0x00	; 0
     cec:	80 e0       	ldi	r24, 0x00	; 0
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	44 ef       	ldi	r20, 0xF4	; 244
     cf2:	51 e0       	ldi	r21, 0x01	; 1
     cf4:	22 e3       	ldi	r18, 0x32	; 50
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <SPKR_play_beep>
			SPKR_play_beep(250, 500, 50);//250 Hz for 250 ms
     cfc:	6a ef       	ldi	r22, 0xFA	; 250
     cfe:	70 e0       	ldi	r23, 0x00	; 0
     d00:	80 e0       	ldi	r24, 0x00	; 0
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	44 ef       	ldi	r20, 0xF4	; 244
     d06:	51 e0       	ldi	r21, 0x01	; 1
     d08:	22 e3       	ldi	r18, 0x32	; 50
     d0a:	30 e0       	ldi	r19, 0x00	; 0
     d0c:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <SPKR_play_beep>
     d10:	1b 86       	std	Y+11, r1	; 0x0b
     d12:	1a 86       	std	Y+10, r1	; 0x0a
			//read the IR sensors
			i = 0;
			for(i = 0;i<25;i++)
			{
				//get IR data
				ltIR = getLeftIR();
     d14:	0e 94 f6 04 	call	0x9ec	; 0x9ec <getLeftIR>
     d18:	3b 01       	movw	r6, r22
     d1a:	4c 01       	movw	r8, r24
				rtIR = getRightIR();
     d1c:	0e 94 cd 04 	call	0x99a	; 0x99a <getRightIR>
     d20:	1b 01       	movw	r2, r22
     d22:	2c 01       	movw	r4, r24
				ftIR = getFrontIR();
     d24:	0e 94 a4 04 	call	0x948	; 0x948 <getFrontIR>
     d28:	7b 01       	movw	r14, r22
     d2a:	8c 01       	movw	r16, r24
				bkIR = getBackIR();
     d2c:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <getBackIR>
     d30:	5b 01       	movw	r10, r22
     d32:	6c 01       	movw	r12, r24

				//print IR data
				LCD_printf("ftIR: %3.2f\n", ftIR);
     d34:	00 d0       	rcall	.+0      	; 0xd36 <CBOT_main+0x1c6>
     d36:	00 d0       	rcall	.+0      	; 0xd38 <CBOT_main+0x1c8>
     d38:	00 d0       	rcall	.+0      	; 0xd3a <CBOT_main+0x1ca>
     d3a:	e2 e5       	ldi	r30, 0x52	; 82
     d3c:	f1 e0       	ldi	r31, 0x01	; 1
     d3e:	ad b7       	in	r26, 0x3d	; 61
     d40:	be b7       	in	r27, 0x3e	; 62
     d42:	12 96       	adiw	r26, 0x02	; 2
     d44:	fc 93       	st	X, r31
     d46:	ee 93       	st	-X, r30
     d48:	11 97       	sbiw	r26, 0x01	; 1
     d4a:	13 96       	adiw	r26, 0x03	; 3
     d4c:	ed 92       	st	X+, r14
     d4e:	fd 92       	st	X+, r15
     d50:	0d 93       	st	X+, r16
     d52:	1c 93       	st	X, r17
     d54:	16 97       	sbiw	r26, 0x06	; 6
     d56:	0e 94 37 1c 	call	0x386e	; 0x386e <printf>
				LCD_printf("bkIR: %3.2f\n", bkIR);
     d5a:	2f e5       	ldi	r18, 0x5F	; 95
     d5c:	31 e0       	ldi	r19, 0x01	; 1
     d5e:	ed b7       	in	r30, 0x3d	; 61
     d60:	fe b7       	in	r31, 0x3e	; 62
     d62:	32 83       	std	Z+2, r19	; 0x02
     d64:	21 83       	std	Z+1, r18	; 0x01
     d66:	ad b7       	in	r26, 0x3d	; 61
     d68:	be b7       	in	r27, 0x3e	; 62
     d6a:	13 96       	adiw	r26, 0x03	; 3
     d6c:	ad 92       	st	X+, r10
     d6e:	bd 92       	st	X+, r11
     d70:	cd 92       	st	X+, r12
     d72:	dc 92       	st	X, r13
     d74:	16 97       	sbiw	r26, 0x06	; 6
     d76:	0e 94 37 1c 	call	0x386e	; 0x386e <printf>
				LCD_printf("ltIR: %3.2f\n", ltIR);
     d7a:	2c e6       	ldi	r18, 0x6C	; 108
     d7c:	31 e0       	ldi	r19, 0x01	; 1
     d7e:	ed b7       	in	r30, 0x3d	; 61
     d80:	fe b7       	in	r31, 0x3e	; 62
     d82:	32 83       	std	Z+2, r19	; 0x02
     d84:	21 83       	std	Z+1, r18	; 0x01
     d86:	ad b7       	in	r26, 0x3d	; 61
     d88:	be b7       	in	r27, 0x3e	; 62
     d8a:	13 96       	adiw	r26, 0x03	; 3
     d8c:	6d 92       	st	X+, r6
     d8e:	7d 92       	st	X+, r7
     d90:	8d 92       	st	X+, r8
     d92:	9c 92       	st	X, r9
     d94:	16 97       	sbiw	r26, 0x06	; 6
     d96:	0e 94 37 1c 	call	0x386e	; 0x386e <printf>
				LCD_printf("rtIR: %3.2f\n", rtIR);
     d9a:	29 e7       	ldi	r18, 0x79	; 121
     d9c:	31 e0       	ldi	r19, 0x01	; 1
     d9e:	ed b7       	in	r30, 0x3d	; 61
     da0:	fe b7       	in	r31, 0x3e	; 62
     da2:	32 83       	std	Z+2, r19	; 0x02
     da4:	21 83       	std	Z+1, r18	; 0x01
     da6:	ad b7       	in	r26, 0x3d	; 61
     da8:	be b7       	in	r27, 0x3e	; 62
     daa:	13 96       	adiw	r26, 0x03	; 3
     dac:	2d 92       	st	X+, r2
     dae:	3d 92       	st	X+, r3
     db0:	4d 92       	st	X+, r4
     db2:	5c 92       	st	X, r5
     db4:	16 97       	sbiw	r26, 0x06	; 6
     db6:	0e 94 37 1c 	call	0x386e	; 0x386e <printf>
				//wait 1 sec
				TMRSRVC_delay(1000);
     dba:	ed b7       	in	r30, 0x3d	; 61
     dbc:	fe b7       	in	r31, 0x3e	; 62
     dbe:	36 96       	adiw	r30, 0x06	; 6
     dc0:	0f b6       	in	r0, 0x3f	; 63
     dc2:	f8 94       	cli
     dc4:	fe bf       	out	0x3e, r31	; 62
     dc6:	0f be       	out	0x3f, r0	; 63
     dc8:	ed bf       	out	0x3d, r30	; 61
     dca:	88 ee       	ldi	r24, 0xE8	; 232
     dcc:	93 e0       	ldi	r25, 0x03	; 3
     dce:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TMRSRVC_delay>
			SPKR_play_beep(250, 500, 50);//250 Hz for 250 ms
			//LCD_printf("get the IR sensors\n");//print left IR

			//read the IR sensors
			i = 0;
			for(i = 0;i<25;i++)
     dd2:	2a 85       	ldd	r18, Y+10	; 0x0a
     dd4:	3b 85       	ldd	r19, Y+11	; 0x0b
     dd6:	2f 5f       	subi	r18, 0xFF	; 255
     dd8:	3f 4f       	sbci	r19, 0xFF	; 255
     dda:	3b 87       	std	Y+11, r19	; 0x0b
     ddc:	2a 87       	std	Y+10, r18	; 0x0a
     dde:	29 31       	cpi	r18, 0x19	; 25
     de0:	31 05       	cpc	r19, r1
     de2:	09 f0       	breq	.+2      	; 0xde6 <CBOT_main+0x276>
     de4:	97 cf       	rjmp	.-210    	; 0xd14 <CBOT_main+0x1a4>
     de6:	04 cf       	rjmp	.-504    	; 0xbf0 <CBOT_main+0x80>
				LCD_printf("rtIR: %3.2f\n", rtIR);
				//wait 1 sec
				TMRSRVC_delay(1000);
			}
		}
		else if (btnValue==3)
     de8:	03 97       	sbiw	r24, 0x03	; 3
     dea:	09 f0       	breq	.+2      	; 0xdee <CBOT_main+0x27e>
     dec:	01 cf       	rjmp	.-510    	; 0xbf0 <CBOT_main+0x80>
		{
			//Check temperature sensor
			//beep three times
			SPKR_play_beep(125, 250, 50);//125 Hz for 1250 ms
     dee:	6d e7       	ldi	r22, 0x7D	; 125
     df0:	70 e0       	ldi	r23, 0x00	; 0
     df2:	80 e0       	ldi	r24, 0x00	; 0
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	4a ef       	ldi	r20, 0xFA	; 250
     df8:	50 e0       	ldi	r21, 0x00	; 0
     dfa:	22 e3       	ldi	r18, 0x32	; 50
     dfc:	30 e0       	ldi	r19, 0x00	; 0
     dfe:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <SPKR_play_beep>
			SPKR_play_beep(125, 250, 50);//125 Hz for 1250 ms
     e02:	6d e7       	ldi	r22, 0x7D	; 125
     e04:	70 e0       	ldi	r23, 0x00	; 0
     e06:	80 e0       	ldi	r24, 0x00	; 0
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	4a ef       	ldi	r20, 0xFA	; 250
     e0c:	50 e0       	ldi	r21, 0x00	; 0
     e0e:	22 e3       	ldi	r18, 0x32	; 50
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <SPKR_play_beep>
			SPKR_play_beep(125, 250, 50);//125 Hz for 1250 ms
     e16:	6d e7       	ldi	r22, 0x7D	; 125
     e18:	70 e0       	ldi	r23, 0x00	; 0
     e1a:	80 e0       	ldi	r24, 0x00	; 0
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	4a ef       	ldi	r20, 0xFA	; 250
     e20:	50 e0       	ldi	r21, 0x00	; 0
     e22:	22 e3       	ldi	r18, 0x32	; 50
     e24:	30 e0       	ldi	r19, 0x00	; 0
     e26:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <SPKR_play_beep>
			
			LED_set( LED_Green );
     e2a:	80 e4       	ldi	r24, 0x40	; 64
     e2c:	0e 94 68 09 	call	0x12d0	; 0x12d0 <LED_set_pattern>
     e30:	00 e0       	ldi	r16, 0x00	; 0
     e32:	10 e0       	ldi	r17, 0x00	; 0
			for(i = 0;i<25;i++)
			{
				// read the 8 pixels
				read_pixel_1(&pixel1);
				read_pixel_2(&pixel2);
				read_pixel_3(&pixel3);
     e34:	54 e0       	ldi	r21, 0x04	; 4
     e36:	25 2e       	mov	r2, r21
     e38:	31 2c       	mov	r3, r1
     e3a:	2c 0e       	add	r2, r28
     e3c:	3d 1e       	adc	r3, r29
				read_pixel_4(&pixel4);
     e3e:	45 e0       	ldi	r20, 0x05	; 5
     e40:	44 2e       	mov	r4, r20
     e42:	51 2c       	mov	r5, r1
     e44:	4c 0e       	add	r4, r28
     e46:	5d 1e       	adc	r5, r29
				read_pixel_5(&pixel5);
     e48:	36 e0       	ldi	r19, 0x06	; 6
     e4a:	63 2e       	mov	r6, r19
     e4c:	71 2c       	mov	r7, r1
     e4e:	6c 0e       	add	r6, r28
     e50:	7d 1e       	adc	r7, r29
				read_pixel_6(&pixel6);
     e52:	27 e0       	ldi	r18, 0x07	; 7
     e54:	82 2e       	mov	r8, r18
     e56:	91 2c       	mov	r9, r1
     e58:	8c 0e       	add	r8, r28
     e5a:	9d 1e       	adc	r9, r29
				read_pixel_7(&pixel7);
     e5c:	98 e0       	ldi	r25, 0x08	; 8
     e5e:	a9 2e       	mov	r10, r25
     e60:	b1 2c       	mov	r11, r1
     e62:	ac 0e       	add	r10, r28
     e64:	bd 1e       	adc	r11, r29
				read_pixel_8(&pixel8);
     e66:	89 e0       	ldi	r24, 0x09	; 9
     e68:	e8 2e       	mov	r14, r24
     e6a:	f1 2c       	mov	r15, r1
     e6c:	ec 0e       	add	r14, r28
     e6e:	fd 1e       	adc	r15, r29
					// The last four pixels.
					LCD_printf_PGM( PSTR( "%3d, %3d, %3d, %3d\n" ),
					pixel5, pixel6, pixel7, pixel8);

					// Let's read the ambient temperature also...
					if( get_ambient_temp( &data ) == I2C_STAT_OK )
     e70:	6e 01       	movw	r12, r28
     e72:	08 94       	sec
     e74:	c1 1c       	adc	r12, r1
     e76:	d1 1c       	adc	r13, r1
			//read the IR sensors
			i = 0;
			for(i = 0;i<25;i++)
			{
				// read the 8 pixels
				read_pixel_1(&pixel1);
     e78:	ce 01       	movw	r24, r28
     e7a:	02 96       	adiw	r24, 0x02	; 2
     e7c:	0e 94 2f 04 	call	0x85e	; 0x85e <read_pixel_1>
				read_pixel_2(&pixel2);
     e80:	ce 01       	movw	r24, r28
     e82:	03 96       	adiw	r24, 0x03	; 3
     e84:	0e 94 09 04 	call	0x812	; 0x812 <read_pixel_2>
				read_pixel_3(&pixel3);
     e88:	c1 01       	movw	r24, r2
     e8a:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <read_pixel_3>
				read_pixel_4(&pixel4);
     e8e:	c2 01       	movw	r24, r4
     e90:	0e 94 bd 03 	call	0x77a	; 0x77a <read_pixel_4>
				read_pixel_5(&pixel5);
     e94:	c3 01       	movw	r24, r6
     e96:	0e 94 97 03 	call	0x72e	; 0x72e <read_pixel_5>
				read_pixel_6(&pixel6);
     e9a:	c4 01       	movw	r24, r8
     e9c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <read_pixel_6>
				read_pixel_7(&pixel7);
     ea0:	c5 01       	movw	r24, r10
     ea2:	0e 94 4b 03 	call	0x696	; 0x696 <read_pixel_7>
				read_pixel_8(&pixel8);
     ea6:	c7 01       	movw	r24, r14
     ea8:	0e 94 25 03 	call	0x64a	; 0x64a <read_pixel_8>

				if( read_pixel_1(&pixel1) == I2C_STAT_OK )
     eac:	ce 01       	movw	r24, r28
     eae:	02 96       	adiw	r24, 0x02	; 2
     eb0:	0e 94 2f 04 	call	0x85e	; 0x85e <read_pixel_1>
     eb4:	88 23       	and	r24, r24
     eb6:	09 f0       	breq	.+2      	; 0xeba <CBOT_main+0x34a>
     eb8:	78 c0       	rjmp	.+240    	; 0xfaa <CBOT_main+0x43a>
				{

					// Display the sensor values:
					LCD_printf_PGM( PSTR( "Sensor Pixels: \n" ));
     eba:	00 d0       	rcall	.+0      	; 0xebc <CBOT_main+0x34c>
     ebc:	ec e8       	ldi	r30, 0x8C	; 140
     ebe:	f1 e0       	ldi	r31, 0x01	; 1
     ec0:	ad b7       	in	r26, 0x3d	; 61
     ec2:	be b7       	in	r27, 0x3e	; 62
     ec4:	12 96       	adiw	r26, 0x02	; 2
     ec6:	fc 93       	st	X, r31
     ec8:	ee 93       	st	-X, r30
     eca:	11 97       	sbiw	r26, 0x01	; 1
     ecc:	0e 94 4c 1c 	call	0x3898	; 0x3898 <printf_P>

					// The first four pixels.
					LCD_printf_PGM( PSTR( "%3d, %3d, %3d, %3d\n" ),
     ed0:	2d b7       	in	r18, 0x3d	; 61
     ed2:	3e b7       	in	r19, 0x3e	; 62
     ed4:	28 50       	subi	r18, 0x08	; 8
     ed6:	30 40       	sbci	r19, 0x00	; 0
     ed8:	0f b6       	in	r0, 0x3f	; 63
     eda:	f8 94       	cli
     edc:	3e bf       	out	0x3e, r19	; 62
     ede:	0f be       	out	0x3f, r0	; 63
     ee0:	2d bf       	out	0x3d, r18	; 61
     ee2:	ed b7       	in	r30, 0x3d	; 61
     ee4:	fe b7       	in	r31, 0x3e	; 62
     ee6:	31 96       	adiw	r30, 0x01	; 1
     ee8:	28 e7       	ldi	r18, 0x78	; 120
     eea:	31 e0       	ldi	r19, 0x01	; 1
     eec:	ad b7       	in	r26, 0x3d	; 61
     eee:	be b7       	in	r27, 0x3e	; 62
     ef0:	12 96       	adiw	r26, 0x02	; 2
     ef2:	3c 93       	st	X, r19
     ef4:	2e 93       	st	-X, r18
     ef6:	11 97       	sbiw	r26, 0x01	; 1
     ef8:	8a 81       	ldd	r24, Y+2	; 0x02
     efa:	82 83       	std	Z+2, r24	; 0x02
     efc:	13 82       	std	Z+3, r1	; 0x03
     efe:	8b 81       	ldd	r24, Y+3	; 0x03
     f00:	84 83       	std	Z+4, r24	; 0x04
     f02:	15 82       	std	Z+5, r1	; 0x05
     f04:	8c 81       	ldd	r24, Y+4	; 0x04
     f06:	86 83       	std	Z+6, r24	; 0x06
     f08:	17 82       	std	Z+7, r1	; 0x07
     f0a:	8d 81       	ldd	r24, Y+5	; 0x05
     f0c:	80 87       	std	Z+8, r24	; 0x08
     f0e:	11 86       	std	Z+9, r1	; 0x09
     f10:	0e 94 4c 1c 	call	0x3898	; 0x3898 <printf_P>
						pixel1, pixel2, pixel3,pixel4);

					// The last four pixels.
					LCD_printf_PGM( PSTR( "%3d, %3d, %3d, %3d\n" ),
     f14:	ed b7       	in	r30, 0x3d	; 61
     f16:	fe b7       	in	r31, 0x3e	; 62
     f18:	31 96       	adiw	r30, 0x01	; 1
     f1a:	24 e6       	ldi	r18, 0x64	; 100
     f1c:	31 e0       	ldi	r19, 0x01	; 1
     f1e:	ad b7       	in	r26, 0x3d	; 61
     f20:	be b7       	in	r27, 0x3e	; 62
     f22:	12 96       	adiw	r26, 0x02	; 2
     f24:	3c 93       	st	X, r19
     f26:	2e 93       	st	-X, r18
     f28:	11 97       	sbiw	r26, 0x01	; 1
     f2a:	8e 81       	ldd	r24, Y+6	; 0x06
     f2c:	82 83       	std	Z+2, r24	; 0x02
     f2e:	13 82       	std	Z+3, r1	; 0x03
     f30:	8f 81       	ldd	r24, Y+7	; 0x07
     f32:	84 83       	std	Z+4, r24	; 0x04
     f34:	15 82       	std	Z+5, r1	; 0x05
     f36:	88 85       	ldd	r24, Y+8	; 0x08
     f38:	86 83       	std	Z+6, r24	; 0x06
     f3a:	17 82       	std	Z+7, r1	; 0x07
     f3c:	89 85       	ldd	r24, Y+9	; 0x09
     f3e:	80 87       	std	Z+8, r24	; 0x08
     f40:	11 86       	std	Z+9, r1	; 0x09
     f42:	0e 94 4c 1c 	call	0x3898	; 0x3898 <printf_P>
					pixel5, pixel6, pixel7, pixel8);

					// Let's read the ambient temperature also...
					if( get_ambient_temp( &data ) == I2C_STAT_OK )
     f46:	8d b7       	in	r24, 0x3d	; 61
     f48:	9e b7       	in	r25, 0x3e	; 62
     f4a:	0a 96       	adiw	r24, 0x0a	; 10
     f4c:	0f b6       	in	r0, 0x3f	; 63
     f4e:	f8 94       	cli
     f50:	9e bf       	out	0x3e, r25	; 62
     f52:	0f be       	out	0x3f, r0	; 63
     f54:	8d bf       	out	0x3d, r24	; 61
     f56:	c6 01       	movw	r24, r12
     f58:	0e 94 ff 02 	call	0x5fe	; 0x5fe <get_ambient_temp>
     f5c:	88 23       	and	r24, r24
     f5e:	b9 f4       	brne	.+46     	; 0xf8e <CBOT_main+0x41e>
					{

						LCD_printf_PGM( PSTR( "Ambient: %3d\t" ), data );
     f60:	00 d0       	rcall	.+0      	; 0xf62 <CBOT_main+0x3f2>
     f62:	00 d0       	rcall	.+0      	; 0xf64 <CBOT_main+0x3f4>
     f64:	ed b7       	in	r30, 0x3d	; 61
     f66:	fe b7       	in	r31, 0x3e	; 62
     f68:	31 96       	adiw	r30, 0x01	; 1
     f6a:	26 e5       	ldi	r18, 0x56	; 86
     f6c:	31 e0       	ldi	r19, 0x01	; 1
     f6e:	ad b7       	in	r26, 0x3d	; 61
     f70:	be b7       	in	r27, 0x3e	; 62
     f72:	12 96       	adiw	r26, 0x02	; 2
     f74:	3c 93       	st	X, r19
     f76:	2e 93       	st	-X, r18
     f78:	11 97       	sbiw	r26, 0x01	; 1
     f7a:	89 81       	ldd	r24, Y+1	; 0x01
     f7c:	82 83       	std	Z+2, r24	; 0x02
     f7e:	13 82       	std	Z+3, r1	; 0x03
     f80:	0e 94 4c 1c 	call	0x3898	; 0x3898 <printf_P>
     f84:	0f 90       	pop	r0
     f86:	0f 90       	pop	r0
     f88:	0f 90       	pop	r0
     f8a:	0f 90       	pop	r0
     f8c:	11 c0       	rjmp	.+34     	; 0xfb0 <CBOT_main+0x440>

					} // end if()
					else
						LCD_printf_PGM( PSTR( "Ambient: ?\t" ) );
     f8e:	00 d0       	rcall	.+0      	; 0xf90 <CBOT_main+0x420>
     f90:	ea e4       	ldi	r30, 0x4A	; 74
     f92:	f1 e0       	ldi	r31, 0x01	; 1
     f94:	ad b7       	in	r26, 0x3d	; 61
     f96:	be b7       	in	r27, 0x3e	; 62
     f98:	12 96       	adiw	r26, 0x02	; 2
     f9a:	fc 93       	st	X, r31
     f9c:	ee 93       	st	-X, r30
     f9e:	11 97       	sbiw	r26, 0x01	; 1
     fa0:	0e 94 4c 1c 	call	0x3898	; 0x3898 <printf_P>
     fa4:	0f 90       	pop	r0
     fa6:	0f 90       	pop	r0
     fa8:	03 c0       	rjmp	.+6      	; 0xfb0 <CBOT_main+0x440>

				else

				//LCD_printf_PGM( PSTR( "ERROR: Reading!\n" ) );

				LED_clr( LED_Green );
     faa:	80 e4       	ldi	r24, 0x40	; 64
     fac:	0e 94 53 09 	call	0x12a6	; 0x12a6 <LED_clr_pattern>

				// Wait a bit
				TMRSRVC_delay_sec(1);
     fb0:	88 ee       	ldi	r24, 0xE8	; 232
     fb2:	93 e0       	ldi	r25, 0x03	; 3
     fb4:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TMRSRVC_delay>
			SPKR_play_beep(125, 250, 50);//125 Hz for 1250 ms
			
			LED_set( LED_Green );
			//read the IR sensors
			i = 0;
			for(i = 0;i<25;i++)
     fb8:	0f 5f       	subi	r16, 0xFF	; 255
     fba:	1f 4f       	sbci	r17, 0xFF	; 255
     fbc:	09 31       	cpi	r16, 0x19	; 25
     fbe:	11 05       	cpc	r17, r1
     fc0:	09 f0       	breq	.+2      	; 0xfc4 <CBOT_main+0x454>
     fc2:	5a cf       	rjmp	.-332    	; 0xe78 <CBOT_main+0x308>
     fc4:	15 ce       	rjmp	.-982    	; 0xbf0 <CBOT_main+0x80>

00000fc6 <ADC_open>:
     fc6:	8f e0       	ldi	r24, 0x0F	; 15
     fc8:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
     fcc:	88 23       	and	r24, r24
     fce:	31 f4       	brne	.+12     	; 0xfdc <ADC_open+0x16>
     fd0:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <__ADC_init>
     fd4:	8f e0       	ldi	r24, 0x0F	; 15
     fd6:	61 e0       	ldi	r22, 0x01	; 1
     fd8:	0e 94 07 0b 	call	0x160e	; 0x160e <SYS_set_state>
     fdc:	8f e0       	ldi	r24, 0x0F	; 15
     fde:	91 e0       	ldi	r25, 0x01	; 1
     fe0:	08 95       	ret

00000fe2 <ADC_sample>:
     fe2:	8f e0       	ldi	r24, 0x0F	; 15
     fe4:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
     fe8:	81 30       	cpi	r24, 0x01	; 1
     fea:	19 f0       	breq	.+6      	; 0xff2 <ADC_sample+0x10>
     fec:	20 e0       	ldi	r18, 0x00	; 0
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	13 c0       	rjmp	.+38     	; 0x1018 <ADC_sample+0x36>
     ff2:	80 91 7a 00 	lds	r24, 0x007A
     ff6:	80 64       	ori	r24, 0x40	; 64
     ff8:	80 93 7a 00 	sts	0x007A, r24
     ffc:	80 91 7a 00 	lds	r24, 0x007A
    1000:	86 fd       	sbrc	r24, 6
    1002:	fc cf       	rjmp	.-8      	; 0xffc <ADC_sample+0x1a>
    1004:	30 91 78 00 	lds	r19, 0x0078
    1008:	20 91 79 00 	lds	r18, 0x0079
    100c:	92 2f       	mov	r25, r18
    100e:	80 e0       	ldi	r24, 0x00	; 0
    1010:	23 2f       	mov	r18, r19
    1012:	30 e0       	ldi	r19, 0x00	; 0
    1014:	28 2b       	or	r18, r24
    1016:	39 2b       	or	r19, r25
    1018:	c9 01       	movw	r24, r18
    101a:	08 95       	ret

0000101c <ADC_set_channel>:
    101c:	58 2f       	mov	r21, r24
    101e:	80 91 86 01 	lds	r24, 0x0186
    1022:	88 30       	cpi	r24, 0x08	; 8
    1024:	d8 f4       	brcc	.+54     	; 0x105c <ADC_set_channel+0x40>
    1026:	40 91 7e 00 	lds	r20, 0x007E
    102a:	21 e0       	ldi	r18, 0x01	; 1
    102c:	30 e0       	ldi	r19, 0x00	; 0
    102e:	b9 01       	movw	r22, r18
    1030:	02 c0       	rjmp	.+4      	; 0x1036 <ADC_set_channel+0x1a>
    1032:	66 0f       	add	r22, r22
    1034:	77 1f       	adc	r23, r23
    1036:	8a 95       	dec	r24
    1038:	e2 f7       	brpl	.-8      	; 0x1032 <ADC_set_channel+0x16>
    103a:	cb 01       	movw	r24, r22
    103c:	80 95       	com	r24
    103e:	84 23       	and	r24, r20
    1040:	80 93 7e 00 	sts	0x007E, r24
    1044:	80 91 7e 00 	lds	r24, 0x007E
    1048:	05 2e       	mov	r0, r21
    104a:	02 c0       	rjmp	.+4      	; 0x1050 <ADC_set_channel+0x34>
    104c:	22 0f       	add	r18, r18
    104e:	33 1f       	adc	r19, r19
    1050:	0a 94       	dec	r0
    1052:	e2 f7       	brpl	.-8      	; 0x104c <ADC_set_channel+0x30>
    1054:	82 2b       	or	r24, r18
    1056:	80 93 7e 00 	sts	0x007E, r24
    105a:	0d c0       	rjmp	.+26     	; 0x1076 <ADC_set_channel+0x5a>
    105c:	20 91 7e 00 	lds	r18, 0x007E
    1060:	81 e0       	ldi	r24, 0x01	; 1
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	05 2e       	mov	r0, r21
    1066:	02 c0       	rjmp	.+4      	; 0x106c <ADC_set_channel+0x50>
    1068:	88 0f       	add	r24, r24
    106a:	99 1f       	adc	r25, r25
    106c:	0a 94       	dec	r0
    106e:	e2 f7       	brpl	.-8      	; 0x1068 <ADC_set_channel+0x4c>
    1070:	28 2b       	or	r18, r24
    1072:	20 93 7e 00 	sts	0x007E, r18
    1076:	50 93 86 01 	sts	0x0186, r21
    107a:	80 91 7c 00 	lds	r24, 0x007C
    107e:	5f 71       	andi	r21, 0x1F	; 31
    1080:	80 7e       	andi	r24, 0xE0	; 224
    1082:	85 2b       	or	r24, r21
    1084:	80 93 7c 00 	sts	0x007C, r24
    1088:	08 95       	ret

0000108a <ADC_set_VREF>:
    108a:	ec e7       	ldi	r30, 0x7C	; 124
    108c:	f0 e0       	ldi	r31, 0x00	; 0
    108e:	90 81       	ld	r25, Z
    1090:	82 95       	swap	r24
    1092:	88 0f       	add	r24, r24
    1094:	88 0f       	add	r24, r24
    1096:	80 7c       	andi	r24, 0xC0	; 192
    1098:	9f 73       	andi	r25, 0x3F	; 63
    109a:	98 2b       	or	r25, r24
    109c:	90 83       	st	Z, r25
    109e:	08 95       	ret

000010a0 <main>:
    10a0:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <CBOT_ISR_init>
    10a4:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <CBOT_init>
    10a8:	0e 94 b8 05 	call	0xb70	; 0xb70 <CBOT_main>
    10ac:	80 e0       	ldi	r24, 0x00	; 0
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	08 95       	ret

000010b2 <LCD_clear>:
    10b2:	0f 93       	push	r16
    10b4:	1f 93       	push	r17
    10b6:	80 e4       	ldi	r24, 0x40	; 64
    10b8:	60 e0       	ldi	r22, 0x00	; 0
    10ba:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    10be:	00 e0       	ldi	r16, 0x00	; 0
    10c0:	80 2f       	mov	r24, r16
    10c2:	60 e0       	ldi	r22, 0x00	; 0
    10c4:	0e 94 1f 09 	call	0x123e	; 0x123e <LCD_set_PGC_addr>
    10c8:	10 e0       	ldi	r17, 0x00	; 0
    10ca:	80 e0       	ldi	r24, 0x00	; 0
    10cc:	61 e0       	ldi	r22, 0x01	; 1
    10ce:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    10d2:	1f 5f       	subi	r17, 0xFF	; 255
    10d4:	10 38       	cpi	r17, 0x80	; 128
    10d6:	c9 f7       	brne	.-14     	; 0x10ca <LCD_clear+0x18>
    10d8:	0f 5f       	subi	r16, 0xFF	; 255
    10da:	04 30       	cpi	r16, 0x04	; 4
    10dc:	89 f7       	brne	.-30     	; 0x10c0 <LCD_clear+0xe>
    10de:	83 e0       	ldi	r24, 0x03	; 3
    10e0:	60 e0       	ldi	r22, 0x00	; 0
    10e2:	0e 94 18 09 	call	0x1230	; 0x1230 <LCD_set_next_PGC>
    10e6:	1f 91       	pop	r17
    10e8:	0f 91       	pop	r16
    10ea:	08 95       	ret

000010ec <LCD_open>:
    10ec:	0f 93       	push	r16
    10ee:	1f 93       	push	r17
    10f0:	82 e0       	ldi	r24, 0x02	; 2
    10f2:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    10f6:	88 23       	and	r24, r24
    10f8:	11 f4       	brne	.+4      	; 0x10fe <LCD_open+0x12>
    10fa:	82 e0       	ldi	r24, 0x02	; 2
    10fc:	06 c0       	rjmp	.+12     	; 0x110a <LCD_open+0x1e>
    10fe:	81 e0       	ldi	r24, 0x01	; 1
    1100:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    1104:	88 23       	and	r24, r24
    1106:	19 f4       	brne	.+6      	; 0x110e <LCD_open+0x22>
    1108:	81 e0       	ldi	r24, 0x01	; 1
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	6d c0       	rjmp	.+218    	; 0x11e8 <LCD_open+0xfc>
    110e:	0e 94 04 10 	call	0x2008	; 0x2008 <__LCD_init>
    1112:	85 e0       	ldi	r24, 0x05	; 5
    1114:	61 e0       	ldi	r22, 0x01	; 1
    1116:	0e 94 07 0b 	call	0x160e	; 0x160e <SYS_set_state>
    111a:	8e ea       	ldi	r24, 0xAE	; 174
    111c:	60 e0       	ldi	r22, 0x00	; 0
    111e:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    1122:	82 ea       	ldi	r24, 0xA2	; 162
    1124:	60 e0       	ldi	r22, 0x00	; 0
    1126:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    112a:	80 ea       	ldi	r24, 0xA0	; 160
    112c:	60 e0       	ldi	r22, 0x00	; 0
    112e:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    1132:	00 e5       	ldi	r16, 0x50	; 80
    1134:	13 ec       	ldi	r17, 0xC3	; 195
    1136:	c8 01       	movw	r24, r16
    1138:	01 97       	sbiw	r24, 0x01	; 1
    113a:	f1 f7       	brne	.-4      	; 0x1138 <LCD_open+0x4c>
    113c:	80 ec       	ldi	r24, 0xC0	; 192
    113e:	60 e0       	ldi	r22, 0x00	; 0
    1140:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    1144:	8f e2       	ldi	r24, 0x2F	; 47
    1146:	60 e0       	ldi	r22, 0x00	; 0
    1148:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    114c:	81 e8       	ldi	r24, 0x81	; 129
    114e:	60 e0       	ldi	r22, 0x00	; 0
    1150:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    1154:	86 e1       	ldi	r24, 0x16	; 22
    1156:	60 e0       	ldi	r22, 0x00	; 0
    1158:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    115c:	82 e2       	ldi	r24, 0x22	; 34
    115e:	60 e0       	ldi	r22, 0x00	; 0
    1160:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    1164:	c8 01       	movw	r24, r16
    1166:	01 97       	sbiw	r24, 0x01	; 1
    1168:	f1 f7       	brne	.-4      	; 0x1166 <LCD_open+0x7a>
    116a:	8f ea       	ldi	r24, 0xAF	; 175
    116c:	60 e0       	ldi	r22, 0x00	; 0
    116e:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    1172:	86 ea       	ldi	r24, 0xA6	; 166
    1174:	60 e0       	ldi	r22, 0x00	; 0
    1176:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    117a:	85 ea       	ldi	r24, 0xA5	; 165
    117c:	60 e0       	ldi	r22, 0x00	; 0
    117e:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    1182:	80 e0       	ldi	r24, 0x00	; 0
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	28 e8       	ldi	r18, 0x88	; 136
    1188:	33 e1       	ldi	r19, 0x13	; 19
    118a:	f9 01       	movw	r30, r18
    118c:	31 97       	sbiw	r30, 0x01	; 1
    118e:	f1 f7       	brne	.-4      	; 0x118c <LCD_open+0xa0>
    1190:	01 96       	adiw	r24, 0x01	; 1
    1192:	43 e0       	ldi	r20, 0x03	; 3
    1194:	88 3e       	cpi	r24, 0xE8	; 232
    1196:	94 07       	cpc	r25, r20
    1198:	c1 f7       	brne	.-16     	; 0x118a <LCD_open+0x9e>
    119a:	83 eb       	ldi	r24, 0xB3	; 179
    119c:	60 e0       	ldi	r22, 0x00	; 0
    119e:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    11a2:	80 e4       	ldi	r24, 0x40	; 64
    11a4:	60 e0       	ldi	r22, 0x00	; 0
    11a6:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    11aa:	83 e0       	ldi	r24, 0x03	; 3
    11ac:	60 e0       	ldi	r22, 0x00	; 0
    11ae:	0e 94 1f 09 	call	0x123e	; 0x123e <LCD_set_PGC_addr>
    11b2:	83 e0       	ldi	r24, 0x03	; 3
    11b4:	60 e0       	ldi	r22, 0x00	; 0
    11b6:	0e 94 18 09 	call	0x1230	; 0x1230 <LCD_set_next_PGC>
    11ba:	10 92 83 02 	sts	0x0283, r1
    11be:	10 92 85 02 	sts	0x0285, r1
    11c2:	10 92 84 02 	sts	0x0284, r1
    11c6:	81 e9       	ldi	r24, 0x91	; 145
    11c8:	91 e0       	ldi	r25, 0x01	; 1
    11ca:	90 93 ed 02 	sts	0x02ED, r25
    11ce:	80 93 ec 02 	sts	0x02EC, r24
    11d2:	88 e1       	ldi	r24, 0x18	; 24
    11d4:	0e 94 f7 08 	call	0x11ee	; 0x11ee <LCD_set_backlight>
    11d8:	0e 94 59 08 	call	0x10b2	; 0x10b2 <LCD_clear>
    11dc:	84 ea       	ldi	r24, 0xA4	; 164
    11de:	60 e0       	ldi	r22, 0x00	; 0
    11e0:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    11e4:	85 e0       	ldi	r24, 0x05	; 5
    11e6:	91 e0       	ldi	r25, 0x01	; 1
    11e8:	1f 91       	pop	r17
    11ea:	0f 91       	pop	r16
    11ec:	08 95       	ret

000011ee <LCD_set_backlight>:
    11ee:	1f 93       	push	r17
    11f0:	18 2f       	mov	r17, r24
    11f2:	85 e0       	ldi	r24, 0x05	; 5
    11f4:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    11f8:	81 30       	cpi	r24, 0x01	; 1
    11fa:	c1 f4       	brne	.+48     	; 0x122c <LCD_set_backlight+0x3e>
    11fc:	87 e0       	ldi	r24, 0x07	; 7
    11fe:	0e 94 74 09 	call	0x12e8	; 0x12e8 <SPI_set_slave_addr>
    1202:	82 e0       	ldi	r24, 0x02	; 2
    1204:	6a e0       	ldi	r22, 0x0A	; 10
    1206:	0e 94 c5 09 	call	0x138a	; 0x138a <SPI_transmit>
    120a:	82 e0       	ldi	r24, 0x02	; 2
    120c:	61 eb       	ldi	r22, 0xB1	; 177
    120e:	0e 94 c5 09 	call	0x138a	; 0x138a <SPI_transmit>
    1212:	61 2f       	mov	r22, r17
    1214:	11 32       	cpi	r17, 0x21	; 33
    1216:	08 f0       	brcs	.+2      	; 0x121a <LCD_set_backlight+0x2c>
    1218:	60 e2       	ldi	r22, 0x20	; 32
    121a:	82 e0       	ldi	r24, 0x02	; 2
    121c:	0e 94 c5 09 	call	0x138a	; 0x138a <SPI_transmit>
    1220:	89 ee       	ldi	r24, 0xE9	; 233
    1222:	8a 95       	dec	r24
    1224:	f1 f7       	brne	.-4      	; 0x1222 <LCD_set_backlight+0x34>
    1226:	87 e0       	ldi	r24, 0x07	; 7
    1228:	0e 94 74 09 	call	0x12e8	; 0x12e8 <SPI_set_slave_addr>
    122c:	1f 91       	pop	r17
    122e:	08 95       	ret

00001230 <LCD_set_next_PGC>:
    1230:	83 70       	andi	r24, 0x03	; 3
    1232:	6f 77       	andi	r22, 0x7F	; 127
    1234:	60 93 81 02 	sts	0x0281, r22
    1238:	80 93 82 02 	sts	0x0282, r24
    123c:	08 95       	ret

0000123e <LCD_set_PGC_addr>:
    123e:	0f 93       	push	r16
    1240:	1f 93       	push	r17
    1242:	06 2f       	mov	r16, r22
    1244:	16 2f       	mov	r17, r22
    1246:	1f 77       	andi	r17, 0x7F	; 127
    1248:	83 70       	andi	r24, 0x03	; 3
    124a:	80 6b       	ori	r24, 0xB0	; 176
    124c:	60 e0       	ldi	r22, 0x00	; 0
    124e:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    1252:	12 95       	swap	r17
    1254:	1f 70       	andi	r17, 0x0F	; 15
    1256:	81 2f       	mov	r24, r17
    1258:	80 61       	ori	r24, 0x10	; 16
    125a:	60 e0       	ldi	r22, 0x00	; 0
    125c:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    1260:	80 2f       	mov	r24, r16
    1262:	8f 70       	andi	r24, 0x0F	; 15
    1264:	60 e0       	ldi	r22, 0x00	; 0
    1266:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    126a:	1f 91       	pop	r17
    126c:	0f 91       	pop	r16
    126e:	08 95       	ret

00001270 <LCD_write>:
    1270:	0f 93       	push	r16
    1272:	1f 93       	push	r17
    1274:	08 2f       	mov	r16, r24
    1276:	16 2f       	mov	r17, r22
    1278:	85 e0       	ldi	r24, 0x05	; 5
    127a:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    127e:	81 30       	cpi	r24, 0x01	; 1
    1280:	79 f4       	brne	.+30     	; 0x12a0 <LCD_write+0x30>
    1282:	11 23       	and	r17, r17
    1284:	19 f0       	breq	.+6      	; 0x128c <LCD_write+0x1c>
    1286:	11 30       	cpi	r17, 0x01	; 1
    1288:	21 f4       	brne	.+8      	; 0x1292 <LCD_write+0x22>
    128a:	02 c0       	rjmp	.+4      	; 0x1290 <LCD_write+0x20>
    128c:	2b 98       	cbi	0x05, 3	; 5
    128e:	01 c0       	rjmp	.+2      	; 0x1292 <LCD_write+0x22>
    1290:	2b 9a       	sbi	0x05, 3	; 5
    1292:	86 e0       	ldi	r24, 0x06	; 6
    1294:	8a 95       	dec	r24
    1296:	f1 f7       	brne	.-4      	; 0x1294 <LCD_write+0x24>
    1298:	80 e0       	ldi	r24, 0x00	; 0
    129a:	60 2f       	mov	r22, r16
    129c:	0e 94 c5 09 	call	0x138a	; 0x138a <SPI_transmit>
    12a0:	1f 91       	pop	r17
    12a2:	0f 91       	pop	r16
    12a4:	08 95       	ret

000012a6 <LED_clr_pattern>:
    12a6:	1f 93       	push	r17
    12a8:	18 2f       	mov	r17, r24
    12aa:	86 e0       	ldi	r24, 0x06	; 6
    12ac:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    12b0:	81 30       	cpi	r24, 0x01	; 1
    12b2:	19 f4       	brne	.+6      	; 0x12ba <LED_clr_pattern+0x14>
    12b4:	81 2f       	mov	r24, r17
    12b6:	0e 94 b3 10 	call	0x2166	; 0x2166 <__LED_clr_pattern>
    12ba:	1f 91       	pop	r17
    12bc:	08 95       	ret

000012be <LED_open>:
    12be:	0e 94 b8 10 	call	0x2170	; 0x2170 <__LED_init>
    12c2:	86 e0       	ldi	r24, 0x06	; 6
    12c4:	61 e0       	ldi	r22, 0x01	; 1
    12c6:	0e 94 07 0b 	call	0x160e	; 0x160e <SYS_set_state>
    12ca:	86 e0       	ldi	r24, 0x06	; 6
    12cc:	91 e0       	ldi	r25, 0x01	; 1
    12ce:	08 95       	ret

000012d0 <LED_set_pattern>:
    12d0:	1f 93       	push	r17
    12d2:	18 2f       	mov	r17, r24
    12d4:	86 e0       	ldi	r24, 0x06	; 6
    12d6:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    12da:	81 30       	cpi	r24, 0x01	; 1
    12dc:	19 f4       	brne	.+6      	; 0x12e4 <LED_set_pattern+0x14>
    12de:	81 2f       	mov	r24, r17
    12e0:	0e 94 bb 10 	call	0x2176	; 0x2176 <__LED_set_pattern>
    12e4:	1f 91       	pop	r17
    12e6:	08 95       	ret

000012e8 <SPI_set_slave_addr>:
    12e8:	1f 93       	push	r17
    12ea:	18 2f       	mov	r17, r24
    12ec:	82 e0       	ldi	r24, 0x02	; 2
    12ee:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    12f2:	81 30       	cpi	r24, 0x01	; 1
    12f4:	09 f0       	breq	.+2      	; 0x12f8 <SPI_set_slave_addr+0x10>
    12f6:	47 c0       	rjmp	.+142    	; 0x1386 <SPI_set_slave_addr+0x9e>
    12f8:	91 2f       	mov	r25, r17
    12fa:	97 70       	andi	r25, 0x07	; 7
    12fc:	80 91 86 02 	lds	r24, 0x0286
    1300:	98 17       	cp	r25, r24
    1302:	09 f4       	brne	.+2      	; 0x1306 <SPI_set_slave_addr+0x1e>
    1304:	40 c0       	rjmp	.+128    	; 0x1386 <SPI_set_slave_addr+0x9e>
    1306:	90 93 86 02 	sts	0x0286, r25
    130a:	85 b1       	in	r24, 0x05	; 5
    130c:	88 7f       	andi	r24, 0xF8	; 248
    130e:	89 2b       	or	r24, r25
    1310:	85 b9       	out	0x05, r24	; 5
    1312:	93 30       	cpi	r25, 0x03	; 3
    1314:	11 f1       	breq	.+68     	; 0x135a <SPI_set_slave_addr+0x72>
    1316:	94 30       	cpi	r25, 0x04	; 4
    1318:	28 f4       	brcc	.+10     	; 0x1324 <SPI_set_slave_addr+0x3c>
    131a:	91 30       	cpi	r25, 0x01	; 1
    131c:	51 f0       	breq	.+20     	; 0x1332 <SPI_set_slave_addr+0x4a>
    131e:	92 30       	cpi	r25, 0x02	; 2
    1320:	90 f4       	brcc	.+36     	; 0x1346 <SPI_set_slave_addr+0x5e>
    1322:	0c c0       	rjmp	.+24     	; 0x133c <SPI_set_slave_addr+0x54>
    1324:	95 30       	cpi	r25, 0x05	; 5
    1326:	19 f1       	breq	.+70     	; 0x136e <SPI_set_slave_addr+0x86>
    1328:	95 30       	cpi	r25, 0x05	; 5
    132a:	e0 f0       	brcs	.+56     	; 0x1364 <SPI_set_slave_addr+0x7c>
    132c:	96 30       	cpi	r25, 0x06	; 6
    132e:	21 f5       	brne	.+72     	; 0x1378 <SPI_set_slave_addr+0x90>
    1330:	0f c0       	rjmp	.+30     	; 0x1350 <SPI_set_slave_addr+0x68>
    1332:	e0 91 43 02 	lds	r30, 0x0243
    1336:	f0 91 44 02 	lds	r31, 0x0244
    133a:	22 c0       	rjmp	.+68     	; 0x1380 <SPI_set_slave_addr+0x98>
    133c:	e0 91 41 02 	lds	r30, 0x0241
    1340:	f0 91 42 02 	lds	r31, 0x0242
    1344:	1d c0       	rjmp	.+58     	; 0x1380 <SPI_set_slave_addr+0x98>
    1346:	e0 91 45 02 	lds	r30, 0x0245
    134a:	f0 91 46 02 	lds	r31, 0x0246
    134e:	18 c0       	rjmp	.+48     	; 0x1380 <SPI_set_slave_addr+0x98>
    1350:	e0 91 4d 02 	lds	r30, 0x024D
    1354:	f0 91 4e 02 	lds	r31, 0x024E
    1358:	13 c0       	rjmp	.+38     	; 0x1380 <SPI_set_slave_addr+0x98>
    135a:	e0 91 47 02 	lds	r30, 0x0247
    135e:	f0 91 48 02 	lds	r31, 0x0248
    1362:	0e c0       	rjmp	.+28     	; 0x1380 <SPI_set_slave_addr+0x98>
    1364:	e0 91 49 02 	lds	r30, 0x0249
    1368:	f0 91 4a 02 	lds	r31, 0x024A
    136c:	09 c0       	rjmp	.+18     	; 0x1380 <SPI_set_slave_addr+0x98>
    136e:	e0 91 4b 02 	lds	r30, 0x024B
    1372:	f0 91 4c 02 	lds	r31, 0x024C
    1376:	04 c0       	rjmp	.+8      	; 0x1380 <SPI_set_slave_addr+0x98>
    1378:	e0 91 4f 02 	lds	r30, 0x024F
    137c:	f0 91 50 02 	lds	r31, 0x0250
    1380:	30 97       	sbiw	r30, 0x00	; 0
    1382:	09 f0       	breq	.+2      	; 0x1386 <SPI_set_slave_addr+0x9e>
    1384:	09 95       	icall
    1386:	1f 91       	pop	r17
    1388:	08 95       	ret

0000138a <SPI_transmit>:
    138a:	1f 93       	push	r17
    138c:	16 2f       	mov	r17, r22
    138e:	0e 94 74 09 	call	0x12e8	; 0x12e8 <SPI_set_slave_addr>
    1392:	82 e0       	ldi	r24, 0x02	; 2
    1394:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    1398:	81 30       	cpi	r24, 0x01	; 1
    139a:	21 f4       	brne	.+8      	; 0x13a4 <SPI_transmit+0x1a>
    139c:	1e bd       	out	0x2e, r17	; 46
    139e:	0d b4       	in	r0, 0x2d	; 45
    13a0:	07 fe       	sbrs	r0, 7
    13a2:	fd cf       	rjmp	.-6      	; 0x139e <SPI_transmit+0x14>
    13a4:	1f 91       	pop	r17
    13a6:	08 95       	ret

000013a8 <__SPKR_set_up_freq_LUT>:
    13a8:	0f 93       	push	r16
    13aa:	1f 93       	push	r17
    13ac:	cf 93       	push	r28
    13ae:	df 93       	push	r29
    13b0:	80 e2       	ldi	r24, 0x20	; 32
    13b2:	91 e0       	ldi	r25, 0x01	; 1
    13b4:	0e 94 32 1b 	call	0x3664	; 0x3664 <malloc>
    13b8:	9c 01       	movw	r18, r24
    13ba:	90 93 60 02 	sts	0x0260, r25
    13be:	80 93 5f 02 	sts	0x025F, r24
    13c2:	89 2b       	or	r24, r25
    13c4:	11 f4       	brne	.+4      	; 0x13ca <__SPKR_set_up_freq_LUT+0x22>
    13c6:	80 e0       	ldi	r24, 0x00	; 0
    13c8:	39 c0       	rjmp	.+114    	; 0x143c <__SPKR_set_up_freq_LUT+0x94>
    13ca:	89 01       	movw	r16, r18
    13cc:	c0 e0       	ldi	r28, 0x00	; 0
    13ce:	d0 e0       	ldi	r29, 0x00	; 0
    13d0:	be 01       	movw	r22, r28
    13d2:	80 e0       	ldi	r24, 0x00	; 0
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	0e 94 37 18 	call	0x306e	; 0x306e <__floatunsisf>
    13da:	20 e0       	ldi	r18, 0x00	; 0
    13dc:	30 e0       	ldi	r19, 0x00	; 0
    13de:	40 ea       	ldi	r20, 0xA0	; 160
    13e0:	51 e4       	ldi	r21, 0x41	; 65
    13e2:	0e 94 ce 17 	call	0x2f9c	; 0x2f9c <__divsf3>
    13e6:	27 ef       	ldi	r18, 0xF7	; 247
    13e8:	35 e7       	ldi	r19, 0x75	; 117
    13ea:	40 e0       	ldi	r20, 0x00	; 0
    13ec:	5f e3       	ldi	r21, 0x3F	; 63
    13ee:	0e 94 00 19 	call	0x3200	; 0x3200 <__mulsf3>
    13f2:	9b 01       	movw	r18, r22
    13f4:	ac 01       	movw	r20, r24
    13f6:	60 e0       	ldi	r22, 0x00	; 0
    13f8:	70 e0       	ldi	r23, 0x00	; 0
    13fa:	80 e2       	ldi	r24, 0x20	; 32
    13fc:	91 e4       	ldi	r25, 0x41	; 65
    13fe:	0e 94 6b 19 	call	0x32d6	; 0x32d6 <pow>
    1402:	9b 01       	movw	r18, r22
    1404:	ac 01       	movw	r20, r24
    1406:	ca 01       	movw	r24, r20
    1408:	b9 01       	movw	r22, r18
    140a:	2d ec       	ldi	r18, 0xCD	; 205
    140c:	3c ec       	ldi	r19, 0xCC	; 204
    140e:	42 e8       	ldi	r20, 0x82	; 130
    1410:	51 e4       	ldi	r21, 0x41	; 65
    1412:	0e 94 00 19 	call	0x3200	; 0x3200 <__mulsf3>
    1416:	0e 94 c6 18 	call	0x318c	; 0x318c <lrint>
    141a:	2a e0       	ldi	r18, 0x0A	; 10
    141c:	30 e0       	ldi	r19, 0x00	; 0
    141e:	40 e0       	ldi	r20, 0x00	; 0
    1420:	50 e0       	ldi	r21, 0x00	; 0
    1422:	0e 94 f1 1a 	call	0x35e2	; 0x35e2 <__mulsi3>
    1426:	f8 01       	movw	r30, r16
    1428:	61 93       	st	Z+, r22
    142a:	71 93       	st	Z+, r23
    142c:	81 93       	st	Z+, r24
    142e:	91 93       	st	Z+, r25
    1430:	8f 01       	movw	r16, r30
    1432:	21 96       	adiw	r28, 0x01	; 1
    1434:	c8 34       	cpi	r28, 0x48	; 72
    1436:	d1 05       	cpc	r29, r1
    1438:	59 f6       	brne	.-106    	; 0x13d0 <__SPKR_set_up_freq_LUT+0x28>
    143a:	81 e0       	ldi	r24, 0x01	; 1
    143c:	df 91       	pop	r29
    143e:	cf 91       	pop	r28
    1440:	1f 91       	pop	r17
    1442:	0f 91       	pop	r16
    1444:	08 95       	ret

00001446 <__SPKR_open_beep_mode>:
    1446:	8a e0       	ldi	r24, 0x0A	; 10
    1448:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    144c:	88 23       	and	r24, r24
    144e:	71 f4       	brne	.+28     	; 0x146c <__SPKR_open_beep_mode+0x26>
    1450:	10 92 5c 02 	sts	0x025C, r1
    1454:	10 92 5b 02 	sts	0x025B, r1
    1458:	81 e0       	ldi	r24, 0x01	; 1
    145a:	0e 94 0d 12 	call	0x241a	; 0x241a <__SPKR_init>
    145e:	81 e0       	ldi	r24, 0x01	; 1
    1460:	80 93 52 02 	sts	0x0252, r24
    1464:	8a e0       	ldi	r24, 0x0A	; 10
    1466:	61 e0       	ldi	r22, 0x01	; 1
    1468:	0e 94 07 0b 	call	0x160e	; 0x160e <SYS_set_state>
    146c:	8a e0       	ldi	r24, 0x0A	; 10
    146e:	91 e0       	ldi	r25, 0x01	; 1
    1470:	08 95       	ret

00001472 <__SPKR_open_tone_mode>:
    1472:	1f 93       	push	r17
    1474:	8b e0       	ldi	r24, 0x0B	; 11
    1476:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    147a:	88 23       	and	r24, r24
    147c:	11 f0       	breq	.+4      	; 0x1482 <__SPKR_open_tone_mode+0x10>
    147e:	90 e0       	ldi	r25, 0x00	; 0
    1480:	21 c0       	rjmp	.+66     	; 0x14c4 <__SPKR_open_tone_mode+0x52>
    1482:	89 e0       	ldi	r24, 0x09	; 9
    1484:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    1488:	88 23       	and	r24, r24
    148a:	d9 f4       	brne	.+54     	; 0x14c2 <__SPKR_open_tone_mode+0x50>
    148c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <__SPKR_set_up_freq_LUT>
    1490:	18 2f       	mov	r17, r24
    1492:	81 30       	cpi	r24, 0x01	; 1
    1494:	b1 f4       	brne	.+44     	; 0x14c2 <__SPKR_open_tone_mode+0x50>
    1496:	10 92 53 02 	sts	0x0253, r1
    149a:	10 92 54 02 	sts	0x0254, r1
    149e:	10 92 55 02 	sts	0x0255, r1
    14a2:	10 92 56 02 	sts	0x0256, r1
    14a6:	8d e0       	ldi	r24, 0x0D	; 13
    14a8:	69 e7       	ldi	r22, 0x79	; 121
    14aa:	71 e1       	ldi	r23, 0x11	; 17
    14ac:	0e 94 dc 0f 	call	0x1fb8	; 0x1fb8 <ISR_attach>
    14b0:	82 e0       	ldi	r24, 0x02	; 2
    14b2:	0e 94 0d 12 	call	0x241a	; 0x241a <__SPKR_init>
    14b6:	10 93 51 02 	sts	0x0251, r17
    14ba:	89 e0       	ldi	r24, 0x09	; 9
    14bc:	61 e0       	ldi	r22, 0x01	; 1
    14be:	0e 94 07 0b 	call	0x160e	; 0x160e <SYS_set_state>
    14c2:	91 e0       	ldi	r25, 0x01	; 1
    14c4:	89 e0       	ldi	r24, 0x09	; 9
    14c6:	1f 91       	pop	r17
    14c8:	08 95       	ret

000014ca <SPKR_open>:
    14ca:	81 30       	cpi	r24, 0x01	; 1
    14cc:	29 f0       	breq	.+10     	; 0x14d8 <SPKR_open+0xe>
    14ce:	82 30       	cpi	r24, 0x02	; 2
    14d0:	31 f0       	breq	.+12     	; 0x14de <SPKR_open+0x14>
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	89 e0       	ldi	r24, 0x09	; 9
    14d6:	08 95       	ret
    14d8:	0e 94 23 0a 	call	0x1446	; 0x1446 <__SPKR_open_beep_mode>
    14dc:	08 95       	ret
    14de:	0e 94 39 0a 	call	0x1472	; 0x1472 <__SPKR_open_tone_mode>
    14e2:	08 95       	ret

000014e4 <SPKR_play_beep>:
    14e4:	8f 92       	push	r8
    14e6:	9f 92       	push	r9
    14e8:	af 92       	push	r10
    14ea:	bf 92       	push	r11
    14ec:	cf 92       	push	r12
    14ee:	df 92       	push	r13
    14f0:	ef 92       	push	r14
    14f2:	ff 92       	push	r15
    14f4:	0f 93       	push	r16
    14f6:	1f 93       	push	r17
    14f8:	cf 93       	push	r28
    14fa:	df 93       	push	r29
    14fc:	4b 01       	movw	r8, r22
    14fe:	5c 01       	movw	r10, r24
    1500:	ea 01       	movw	r28, r20
    1502:	b9 01       	movw	r22, r18
    1504:	21 15       	cp	r18, r1
    1506:	31 05       	cpc	r19, r1
    1508:	39 f1       	breq	.+78     	; 0x1558 <SPKR_play_beep+0x74>
    150a:	9e 01       	movw	r18, r28
    150c:	44 27       	eor	r20, r20
    150e:	37 fd       	sbrc	r19, 7
    1510:	40 95       	com	r20
    1512:	54 2f       	mov	r21, r20
    1514:	65 36       	cpi	r22, 0x65	; 101
    1516:	71 05       	cpc	r23, r1
    1518:	10 f0       	brcs	.+4      	; 0x151e <SPKR_play_beep+0x3a>
    151a:	64 e6       	ldi	r22, 0x64	; 100
    151c:	70 e0       	ldi	r23, 0x00	; 0
    151e:	80 e0       	ldi	r24, 0x00	; 0
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	0e 94 f1 1a 	call	0x35e2	; 0x35e2 <__mulsi3>
    1526:	24 e6       	ldi	r18, 0x64	; 100
    1528:	30 e0       	ldi	r19, 0x00	; 0
    152a:	40 e0       	ldi	r20, 0x00	; 0
    152c:	50 e0       	ldi	r21, 0x00	; 0
    152e:	0e 94 10 1b 	call	0x3620	; 0x3620 <__udivmodsi4>
    1532:	79 01       	movw	r14, r18
    1534:	8a 01       	movw	r16, r20
    1536:	c5 01       	movw	r24, r10
    1538:	b4 01       	movw	r22, r8
    153a:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <SPKR_beep>
    153e:	c7 01       	movw	r24, r14
    1540:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TMRSRVC_delay>
    1544:	60 e0       	ldi	r22, 0x00	; 0
    1546:	70 e0       	ldi	r23, 0x00	; 0
    1548:	80 e0       	ldi	r24, 0x00	; 0
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <SPKR_beep>
    1550:	ce 01       	movw	r24, r28
    1552:	8e 19       	sub	r24, r14
    1554:	9f 09       	sbc	r25, r15
    1556:	04 c0       	rjmp	.+8      	; 0x1560 <SPKR_play_beep+0x7c>
    1558:	41 15       	cp	r20, r1
    155a:	51 05       	cpc	r21, r1
    155c:	19 f0       	breq	.+6      	; 0x1564 <SPKR_play_beep+0x80>
    155e:	ca 01       	movw	r24, r20
    1560:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TMRSRVC_delay>
    1564:	df 91       	pop	r29
    1566:	cf 91       	pop	r28
    1568:	1f 91       	pop	r17
    156a:	0f 91       	pop	r16
    156c:	ff 90       	pop	r15
    156e:	ef 90       	pop	r14
    1570:	df 90       	pop	r13
    1572:	cf 90       	pop	r12
    1574:	bf 90       	pop	r11
    1576:	af 90       	pop	r10
    1578:	9f 90       	pop	r9
    157a:	8f 90       	pop	r8
    157c:	08 95       	ret

0000157e <SYS_get_state>:
    157e:	e8 2f       	mov	r30, r24
    1580:	f0 e0       	ldi	r31, 0x00	; 0
    1582:	e3 31       	cpi	r30, 0x13	; 19
    1584:	f1 05       	cpc	r31, r1
    1586:	40 f4       	brcc	.+16     	; 0x1598 <SYS_get_state+0x1a>
    1588:	e2 5c       	subi	r30, 0xC2	; 194
    158a:	ff 4f       	sbci	r31, 0xFF	; 255
    158c:	ee 0f       	add	r30, r30
    158e:	ff 1f       	adc	r31, r31
    1590:	05 90       	lpm	r0, Z+
    1592:	f4 91       	lpm	r31, Z+
    1594:	e0 2d       	mov	r30, r0
    1596:	09 94       	ijmp
    1598:	80 e0       	ldi	r24, 0x00	; 0
    159a:	08 95       	ret
    159c:	80 91 6e 02 	lds	r24, 0x026E
    15a0:	08 95       	ret
    15a2:	80 91 6f 02 	lds	r24, 0x026F
    15a6:	08 95       	ret
    15a8:	80 91 70 02 	lds	r24, 0x0270
    15ac:	08 95       	ret
    15ae:	80 91 71 02 	lds	r24, 0x0271
    15b2:	08 95       	ret
    15b4:	80 91 72 02 	lds	r24, 0x0272
    15b8:	08 95       	ret
    15ba:	80 91 74 02 	lds	r24, 0x0274
    15be:	08 95       	ret
    15c0:	80 91 73 02 	lds	r24, 0x0273
    15c4:	08 95       	ret
    15c6:	80 91 75 02 	lds	r24, 0x0275
    15ca:	08 95       	ret
    15cc:	80 91 76 02 	lds	r24, 0x0276
    15d0:	08 95       	ret
    15d2:	80 91 77 02 	lds	r24, 0x0277
    15d6:	08 95       	ret
    15d8:	80 91 78 02 	lds	r24, 0x0278
    15dc:	08 95       	ret
    15de:	80 91 79 02 	lds	r24, 0x0279
    15e2:	08 95       	ret
    15e4:	80 91 7a 02 	lds	r24, 0x027A
    15e8:	08 95       	ret
    15ea:	80 91 7b 02 	lds	r24, 0x027B
    15ee:	08 95       	ret
    15f0:	80 91 7c 02 	lds	r24, 0x027C
    15f4:	08 95       	ret
    15f6:	80 91 7d 02 	lds	r24, 0x027D
    15fa:	08 95       	ret
    15fc:	80 91 7e 02 	lds	r24, 0x027E
    1600:	08 95       	ret
    1602:	80 91 7f 02 	lds	r24, 0x027F
    1606:	08 95       	ret
    1608:	80 91 80 02 	lds	r24, 0x0280
    160c:	08 95       	ret

0000160e <SYS_set_state>:
    160e:	e8 2f       	mov	r30, r24
    1610:	f0 e0       	ldi	r31, 0x00	; 0
    1612:	e3 31       	cpi	r30, 0x13	; 19
    1614:	f1 05       	cpc	r31, r1
    1616:	08 f0       	brcs	.+2      	; 0x161a <SYS_set_state+0xc>
    1618:	40 c0       	rjmp	.+128    	; 0x169a <SYS_set_state+0x8c>
    161a:	ef 5a       	subi	r30, 0xAF	; 175
    161c:	ff 4f       	sbci	r31, 0xFF	; 255
    161e:	ee 0f       	add	r30, r30
    1620:	ff 1f       	adc	r31, r31
    1622:	05 90       	lpm	r0, Z+
    1624:	f4 91       	lpm	r31, Z+
    1626:	e0 2d       	mov	r30, r0
    1628:	09 94       	ijmp
    162a:	60 93 6e 02 	sts	0x026E, r22
    162e:	08 95       	ret
    1630:	60 93 6f 02 	sts	0x026F, r22
    1634:	08 95       	ret
    1636:	60 93 70 02 	sts	0x0270, r22
    163a:	08 95       	ret
    163c:	60 93 71 02 	sts	0x0271, r22
    1640:	08 95       	ret
    1642:	60 93 72 02 	sts	0x0272, r22
    1646:	08 95       	ret
    1648:	60 93 74 02 	sts	0x0274, r22
    164c:	08 95       	ret
    164e:	60 93 73 02 	sts	0x0273, r22
    1652:	08 95       	ret
    1654:	60 93 75 02 	sts	0x0275, r22
    1658:	08 95       	ret
    165a:	60 93 76 02 	sts	0x0276, r22
    165e:	08 95       	ret
    1660:	60 93 77 02 	sts	0x0277, r22
    1664:	08 95       	ret
    1666:	60 93 78 02 	sts	0x0278, r22
    166a:	08 95       	ret
    166c:	60 93 79 02 	sts	0x0279, r22
    1670:	08 95       	ret
    1672:	60 93 7a 02 	sts	0x027A, r22
    1676:	08 95       	ret
    1678:	60 93 7b 02 	sts	0x027B, r22
    167c:	08 95       	ret
    167e:	60 93 7c 02 	sts	0x027C, r22
    1682:	08 95       	ret
    1684:	60 93 7d 02 	sts	0x027D, r22
    1688:	08 95       	ret
    168a:	60 93 7e 02 	sts	0x027E, r22
    168e:	08 95       	ret
    1690:	60 93 7f 02 	sts	0x027F, r22
    1694:	08 95       	ret
    1696:	60 93 7e 02 	sts	0x027E, r22
    169a:	08 95       	ret

0000169c <ATTINY_get_IR_state>:
    169c:	1f 93       	push	r17
    169e:	18 2f       	mov	r17, r24
    16a0:	80 91 e9 01 	lds	r24, 0x01E9
    16a4:	88 23       	and	r24, r24
    16a6:	41 f0       	breq	.+16     	; 0x16b8 <ATTINY_get_IR_state+0x1c>
    16a8:	80 91 f0 01 	lds	r24, 0x01F0
    16ac:	88 23       	and	r24, r24
    16ae:	99 f0       	breq	.+38     	; 0x16d6 <ATTINY_get_IR_state+0x3a>
    16b0:	10 92 e9 01 	sts	0x01E9, r1
    16b4:	10 92 f0 01 	sts	0x01F0, r1
    16b8:	0e 94 83 0b 	call	0x1706	; 0x1706 <ATTINY_get_sensors>
    16bc:	80 93 e8 01 	sts	0x01E8, r24
    16c0:	8a ee       	ldi	r24, 0xEA	; 234
    16c2:	91 e0       	ldi	r25, 0x01	; 1
    16c4:	61 e0       	ldi	r22, 0x01	; 1
    16c6:	40 e0       	ldi	r20, 0x00	; 0
    16c8:	28 e2       	ldi	r18, 0x28	; 40
    16ca:	30 e0       	ldi	r19, 0x00	; 0
    16cc:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <TMRSRVC_new>
    16d0:	81 e0       	ldi	r24, 0x01	; 1
    16d2:	80 93 e9 01 	sts	0x01E9, r24
    16d6:	90 91 e8 01 	lds	r25, 0x01E8
    16da:	13 30       	cpi	r17, 0x03	; 3
    16dc:	18 f0       	brcs	.+6      	; 0x16e4 <ATTINY_get_IR_state+0x48>
    16de:	13 30       	cpi	r17, 0x03	; 3
    16e0:	79 f4       	brne	.+30     	; 0x1700 <ATTINY_get_IR_state+0x64>
    16e2:	09 c0       	rjmp	.+18     	; 0x16f6 <ATTINY_get_IR_state+0x5a>
    16e4:	e1 2f       	mov	r30, r17
    16e6:	f0 e0       	ldi	r31, 0x00	; 0
    16e8:	e9 57       	subi	r30, 0x79	; 121
    16ea:	fe 4f       	sbci	r31, 0xFE	; 254
    16ec:	80 81       	ld	r24, Z
    16ee:	89 23       	and	r24, r25
    16f0:	41 f0       	breq	.+16     	; 0x1702 <ATTINY_get_IR_state+0x66>
    16f2:	81 e0       	ldi	r24, 0x01	; 1
    16f4:	06 c0       	rjmp	.+12     	; 0x1702 <ATTINY_get_IR_state+0x66>
    16f6:	91 ff       	sbrs	r25, 1
    16f8:	03 c0       	rjmp	.+6      	; 0x1700 <ATTINY_get_IR_state+0x64>
    16fa:	89 2f       	mov	r24, r25
    16fc:	81 70       	andi	r24, 0x01	; 1
    16fe:	01 c0       	rjmp	.+2      	; 0x1702 <ATTINY_get_IR_state+0x66>
    1700:	80 e0       	ldi	r24, 0x00	; 0
    1702:	1f 91       	pop	r17
    1704:	08 95       	ret

00001706 <ATTINY_get_sensors>:
    1706:	0f 93       	push	r16
    1708:	1f 93       	push	r17
    170a:	81 e0       	ldi	r24, 0x01	; 1
    170c:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    1710:	81 30       	cpi	r24, 0x01	; 1
    1712:	11 f0       	breq	.+4      	; 0x1718 <ATTINY_get_sensors+0x12>
    1714:	00 e0       	ldi	r16, 0x00	; 0
    1716:	24 c0       	rjmp	.+72     	; 0x1760 <ATTINY_get_sensors+0x5a>
    1718:	87 e0       	ldi	r24, 0x07	; 7
    171a:	0e 94 74 09 	call	0x12e8	; 0x12e8 <SPI_set_slave_addr>
    171e:	82 e0       	ldi	r24, 0x02	; 2
    1720:	6a e0       	ldi	r22, 0x0A	; 10
    1722:	0e 94 c5 09 	call	0x138a	; 0x138a <SPI_transmit>
    1726:	82 e0       	ldi	r24, 0x02	; 2
    1728:	62 eb       	ldi	r22, 0xB2	; 178
    172a:	0e 94 c5 09 	call	0x138a	; 0x138a <SPI_transmit>
    172e:	18 ec       	ldi	r17, 0xC8	; 200
    1730:	81 2f       	mov	r24, r17
    1732:	8a 95       	dec	r24
    1734:	f1 f7       	brne	.-4      	; 0x1732 <ATTINY_get_sensors+0x2c>
    1736:	82 e0       	ldi	r24, 0x02	; 2
    1738:	60 e0       	ldi	r22, 0x00	; 0
    173a:	0e 94 5e 11 	call	0x22bc	; 0x22bc <SPI_receive>
    173e:	08 2f       	mov	r16, r24
    1740:	81 2f       	mov	r24, r17
    1742:	8a 95       	dec	r24
    1744:	f1 f7       	brne	.-4      	; 0x1742 <ATTINY_get_sensors+0x3c>
    1746:	82 e0       	ldi	r24, 0x02	; 2
    1748:	60 e0       	ldi	r22, 0x00	; 0
    174a:	0e 94 5e 11 	call	0x22bc	; 0x22bc <SPI_receive>
    174e:	1a 95       	dec	r17
    1750:	f1 f7       	brne	.-4      	; 0x174e <ATTINY_get_sensors+0x48>
    1752:	87 e0       	ldi	r24, 0x07	; 7
    1754:	0e 94 74 09 	call	0x12e8	; 0x12e8 <SPI_set_slave_addr>
    1758:	88 e8       	ldi	r24, 0x88	; 136
    175a:	93 e1       	ldi	r25, 0x13	; 19
    175c:	01 97       	sbiw	r24, 0x01	; 1
    175e:	f1 f7       	brne	.-4      	; 0x175c <ATTINY_get_sensors+0x56>
    1760:	80 2f       	mov	r24, r16
    1762:	1f 91       	pop	r17
    1764:	0f 91       	pop	r16
    1766:	08 95       	ret

00001768 <ATTINY_get_SW_state>:
    1768:	1f 93       	push	r17
    176a:	cf 93       	push	r28
    176c:	df 93       	push	r29
    176e:	18 2f       	mov	r17, r24
    1770:	80 91 f4 01 	lds	r24, 0x01F4
    1774:	88 23       	and	r24, r24
    1776:	41 f0       	breq	.+16     	; 0x1788 <ATTINY_get_SW_state+0x20>
    1778:	80 91 fe 01 	lds	r24, 0x01FE
    177c:	88 23       	and	r24, r24
    177e:	99 f0       	breq	.+38     	; 0x17a6 <ATTINY_get_SW_state+0x3e>
    1780:	10 92 f4 01 	sts	0x01F4, r1
    1784:	10 92 fe 01 	sts	0x01FE, r1
    1788:	0e 94 83 0b 	call	0x1706	; 0x1706 <ATTINY_get_sensors>
    178c:	80 93 f3 01 	sts	0x01F3, r24
    1790:	88 ef       	ldi	r24, 0xF8	; 248
    1792:	91 e0       	ldi	r25, 0x01	; 1
    1794:	61 e0       	ldi	r22, 0x01	; 1
    1796:	40 e0       	ldi	r20, 0x00	; 0
    1798:	22 e3       	ldi	r18, 0x32	; 50
    179a:	30 e0       	ldi	r19, 0x00	; 0
    179c:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <TMRSRVC_new>
    17a0:	81 e0       	ldi	r24, 0x01	; 1
    17a2:	80 93 f4 01 	sts	0x01F4, r24
    17a6:	90 91 f3 01 	lds	r25, 0x01F3
    17aa:	a1 2f       	mov	r26, r17
    17ac:	b0 e0       	ldi	r27, 0x00	; 0
    17ae:	ed 01       	movw	r28, r26
    17b0:	c5 57       	subi	r28, 0x75	; 117
    17b2:	de 4f       	sbci	r29, 0xFE	; 254
    17b4:	88 81       	ld	r24, Y
    17b6:	88 23       	and	r24, r24
    17b8:	69 f0       	breq	.+26     	; 0x17d4 <ATTINY_get_SW_state+0x6c>
    17ba:	fd 01       	movw	r30, r26
    17bc:	e2 57       	subi	r30, 0x72	; 114
    17be:	fe 4f       	sbci	r31, 0xFE	; 254
    17c0:	80 81       	ld	r24, Z
    17c2:	98 23       	and	r25, r24
    17c4:	c1 f0       	breq	.+48     	; 0x17f6 <ATTINY_get_SW_state+0x8e>
    17c6:	fd 01       	movw	r30, r26
    17c8:	eb 50       	subi	r30, 0x0B	; 11
    17ca:	fe 4f       	sbci	r31, 0xFE	; 254
    17cc:	81 e0       	ldi	r24, 0x01	; 1
    17ce:	80 83       	st	Z, r24
    17d0:	18 82       	st	Y, r1
    17d2:	11 c0       	rjmp	.+34     	; 0x17f6 <ATTINY_get_SW_state+0x8e>
    17d4:	fd 01       	movw	r30, r26
    17d6:	eb 50       	subi	r30, 0x0B	; 11
    17d8:	fe 4f       	sbci	r31, 0xFE	; 254
    17da:	80 81       	ld	r24, Z
    17dc:	81 11       	cpse	r24, r1
    17de:	10 82       	st	Z, r1
    17e0:	fd 01       	movw	r30, r26
    17e2:	e2 57       	subi	r30, 0x72	; 114
    17e4:	fe 4f       	sbci	r31, 0xFE	; 254
    17e6:	80 81       	ld	r24, Z
    17e8:	98 23       	and	r25, r24
    17ea:	29 f4       	brne	.+10     	; 0x17f6 <ATTINY_get_SW_state+0x8e>
    17ec:	fd 01       	movw	r30, r26
    17ee:	e5 57       	subi	r30, 0x75	; 117
    17f0:	fe 4f       	sbci	r31, 0xFE	; 254
    17f2:	81 e0       	ldi	r24, 0x01	; 1
    17f4:	80 83       	st	Z, r24
    17f6:	ab 50       	subi	r26, 0x0B	; 11
    17f8:	be 4f       	sbci	r27, 0xFE	; 254
    17fa:	8c 91       	ld	r24, X
    17fc:	df 91       	pop	r29
    17fe:	cf 91       	pop	r28
    1800:	1f 91       	pop	r17
    1802:	08 95       	ret

00001804 <ATTINY_open>:
    1804:	82 e0       	ldi	r24, 0x02	; 2
    1806:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    180a:	88 23       	and	r24, r24
    180c:	19 f4       	brne	.+6      	; 0x1814 <ATTINY_open+0x10>
    180e:	90 e0       	ldi	r25, 0x00	; 0
    1810:	82 e0       	ldi	r24, 0x02	; 2
    1812:	08 95       	ret
    1814:	10 92 9c 02 	sts	0x029C, r1
    1818:	10 92 9b 02 	sts	0x029B, r1
    181c:	10 92 9e 02 	sts	0x029E, r1
    1820:	10 92 9d 02 	sts	0x029D, r1
    1824:	10 92 a0 02 	sts	0x02A0, r1
    1828:	10 92 9f 02 	sts	0x029F, r1
    182c:	10 92 a2 02 	sts	0x02A2, r1
    1830:	10 92 a1 02 	sts	0x02A1, r1
    1834:	10 92 a4 02 	sts	0x02A4, r1
    1838:	10 92 a3 02 	sts	0x02A3, r1
    183c:	80 e9       	ldi	r24, 0x90	; 144
    183e:	91 e0       	ldi	r25, 0x01	; 1
    1840:	90 93 88 02 	sts	0x0288, r25
    1844:	80 93 87 02 	sts	0x0287, r24
    1848:	90 93 8a 02 	sts	0x028A, r25
    184c:	80 93 89 02 	sts	0x0289, r24
    1850:	90 93 8c 02 	sts	0x028C, r25
    1854:	80 93 8b 02 	sts	0x028B, r24
    1858:	90 93 8e 02 	sts	0x028E, r25
    185c:	80 93 8d 02 	sts	0x028D, r24
    1860:	90 93 90 02 	sts	0x0290, r25
    1864:	80 93 8f 02 	sts	0x028F, r24
    1868:	84 e3       	ldi	r24, 0x34	; 52
    186a:	98 e0       	ldi	r25, 0x08	; 8
    186c:	90 93 92 02 	sts	0x0292, r25
    1870:	80 93 91 02 	sts	0x0291, r24
    1874:	90 93 94 02 	sts	0x0294, r25
    1878:	80 93 93 02 	sts	0x0293, r24
    187c:	90 93 96 02 	sts	0x0296, r25
    1880:	80 93 95 02 	sts	0x0295, r24
    1884:	90 93 98 02 	sts	0x0298, r25
    1888:	80 93 97 02 	sts	0x0297, r24
    188c:	90 93 9a 02 	sts	0x029A, r25
    1890:	80 93 99 02 	sts	0x0299, r24
    1894:	81 e0       	ldi	r24, 0x01	; 1
    1896:	61 e0       	ldi	r22, 0x01	; 1
    1898:	0e 94 07 0b 	call	0x160e	; 0x160e <SYS_set_state>
    189c:	91 e0       	ldi	r25, 0x01	; 1
    189e:	81 e0       	ldi	r24, 0x01	; 1
    18a0:	08 95       	ret

000018a2 <TMRSRVC_delay>:
    18a2:	df 93       	push	r29
    18a4:	cf 93       	push	r28
    18a6:	cd b7       	in	r28, 0x3d	; 61
    18a8:	de b7       	in	r29, 0x3e	; 62
    18aa:	29 97       	sbiw	r28, 0x09	; 9
    18ac:	0f b6       	in	r0, 0x3f	; 63
    18ae:	f8 94       	cli
    18b0:	de bf       	out	0x3e, r29	; 62
    18b2:	0f be       	out	0x3f, r0	; 63
    18b4:	cd bf       	out	0x3d, r28	; 61
    18b6:	9c 01       	movw	r18, r24
    18b8:	ce 01       	movw	r24, r28
    18ba:	01 96       	adiw	r24, 0x01	; 1
    18bc:	61 e0       	ldi	r22, 0x01	; 1
    18be:	40 e0       	ldi	r20, 0x00	; 0
    18c0:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <TMRSRVC_new>
    18c4:	98 2f       	mov	r25, r24
    18c6:	88 23       	and	r24, r24
    18c8:	19 f4       	brne	.+6      	; 0x18d0 <TMRSRVC_delay+0x2e>
    18ca:	8f 81       	ldd	r24, Y+7	; 0x07
    18cc:	88 23       	and	r24, r24
    18ce:	e9 f3       	breq	.-6      	; 0x18ca <TMRSRVC_delay+0x28>
    18d0:	89 2f       	mov	r24, r25
    18d2:	29 96       	adiw	r28, 0x09	; 9
    18d4:	0f b6       	in	r0, 0x3f	; 63
    18d6:	f8 94       	cli
    18d8:	de bf       	out	0x3e, r29	; 62
    18da:	0f be       	out	0x3f, r0	; 63
    18dc:	cd bf       	out	0x3d, r28	; 61
    18de:	cf 91       	pop	r28
    18e0:	df 91       	pop	r29
    18e2:	08 95       	ret

000018e4 <TMRSRVC_new>:
    18e4:	ef 92       	push	r14
    18e6:	ff 92       	push	r15
    18e8:	0f 93       	push	r16
    18ea:	1f 93       	push	r17
    18ec:	cf 93       	push	r28
    18ee:	df 93       	push	r29
    18f0:	ec 01       	movw	r28, r24
    18f2:	f6 2e       	mov	r15, r22
    18f4:	e4 2e       	mov	r14, r20
    18f6:	89 01       	movw	r16, r18
    18f8:	88 e0       	ldi	r24, 0x08	; 8
    18fa:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    18fe:	81 30       	cpi	r24, 0x01	; 1
    1900:	11 f0       	breq	.+4      	; 0x1906 <TMRSRVC_new+0x22>
    1902:	81 e0       	ldi	r24, 0x01	; 1
    1904:	26 c0       	rjmp	.+76     	; 0x1952 <TMRSRVC_new+0x6e>
    1906:	84 e0       	ldi	r24, 0x04	; 4
    1908:	90 e0       	ldi	r25, 0x00	; 0
    190a:	0e 94 32 1b 	call	0x3664	; 0x3664 <malloc>
    190e:	fc 01       	movw	r30, r24
    1910:	00 97       	sbiw	r24, 0x00	; 0
    1912:	11 f4       	brne	.+4      	; 0x1918 <TMRSRVC_new+0x34>
    1914:	82 e0       	ldi	r24, 0x02	; 2
    1916:	1d c0       	rjmp	.+58     	; 0x1952 <TMRSRVC_new+0x6e>
    1918:	f9 82       	std	Y+1, r15	; 0x01
    191a:	f0 fc       	sbrc	r15, 0
    191c:	1e 82       	std	Y+6, r1	; 0x06
    191e:	81 e0       	ldi	r24, 0x01	; 1
    1920:	e8 16       	cp	r14, r24
    1922:	19 f4       	brne	.+6      	; 0x192a <TMRSRVC_new+0x46>
    1924:	89 81       	ldd	r24, Y+1	; 0x01
    1926:	84 60       	ori	r24, 0x04	; 4
    1928:	89 83       	std	Y+1, r24	; 0x01
    192a:	89 81       	ldd	r24, Y+1	; 0x01
    192c:	88 60       	ori	r24, 0x08	; 8
    192e:	89 83       	std	Y+1, r24	; 0x01
    1930:	1b 83       	std	Y+3, r17	; 0x03
    1932:	0a 83       	std	Y+2, r16	; 0x02
    1934:	1d 83       	std	Y+5, r17	; 0x05
    1936:	0c 83       	std	Y+4, r16	; 0x04
    1938:	d1 83       	std	Z+1, r29	; 0x01
    193a:	c0 83       	st	Z, r28
    193c:	13 82       	std	Z+3, r1	; 0x03
    193e:	12 82       	std	Z+2, r1	; 0x02
    1940:	81 e0       	ldi	r24, 0x01	; 1
    1942:	80 93 61 02 	sts	0x0261, r24
    1946:	cf 01       	movw	r24, r30
    1948:	0e 94 60 12 	call	0x24c0	; 0x24c0 <TMRSRVC_insert>
    194c:	10 92 61 02 	sts	0x0261, r1
    1950:	80 e0       	ldi	r24, 0x00	; 0
    1952:	df 91       	pop	r29
    1954:	cf 91       	pop	r28
    1956:	1f 91       	pop	r17
    1958:	0f 91       	pop	r16
    195a:	ff 90       	pop	r15
    195c:	ef 90       	pop	r14
    195e:	08 95       	ret

00001960 <I2C_MSTR_get>:
    1960:	fc 01       	movw	r30, r24
    1962:	80 91 a8 02 	lds	r24, 0x02A8
    1966:	81 30       	cpi	r24, 0x01	; 1
    1968:	11 f0       	breq	.+4      	; 0x196e <I2C_MSTR_get+0xe>
    196a:	85 e0       	ldi	r24, 0x05	; 5
    196c:	08 95       	ret
    196e:	80 91 a9 02 	lds	r24, 0x02A9
    1972:	81 30       	cpi	r24, 0x01	; 1
    1974:	11 f0       	breq	.+4      	; 0x197a <I2C_MSTR_get+0x1a>
    1976:	8a e0       	ldi	r24, 0x0A	; 10
    1978:	08 95       	ret
    197a:	61 30       	cpi	r22, 0x01	; 1
    197c:	11 f4       	brne	.+4      	; 0x1982 <I2C_MSTR_get+0x22>
    197e:	84 ec       	ldi	r24, 0xC4	; 196
    1980:	01 c0       	rjmp	.+2      	; 0x1984 <I2C_MSTR_get+0x24>
    1982:	84 e8       	ldi	r24, 0x84	; 132
    1984:	80 93 bc 00 	sts	0x00BC, r24
    1988:	80 91 bc 00 	lds	r24, 0x00BC
    198c:	87 ff       	sbrs	r24, 7
    198e:	fc cf       	rjmp	.-8      	; 0x1988 <I2C_MSTR_get+0x28>
    1990:	61 30       	cpi	r22, 0x01	; 1
    1992:	31 f4       	brne	.+12     	; 0x19a0 <I2C_MSTR_get+0x40>
    1994:	80 91 b9 00 	lds	r24, 0x00B9
    1998:	88 7f       	andi	r24, 0xF8	; 248
    199a:	80 35       	cpi	r24, 0x50	; 80
    199c:	59 f4       	brne	.+22     	; 0x19b4 <I2C_MSTR_get+0x54>
    199e:	05 c0       	rjmp	.+10     	; 0x19aa <I2C_MSTR_get+0x4a>
    19a0:	80 91 b9 00 	lds	r24, 0x00B9
    19a4:	88 7f       	andi	r24, 0xF8	; 248
    19a6:	88 35       	cpi	r24, 0x58	; 88
    19a8:	29 f4       	brne	.+10     	; 0x19b4 <I2C_MSTR_get+0x54>
    19aa:	80 91 bb 00 	lds	r24, 0x00BB
    19ae:	80 83       	st	Z, r24
    19b0:	80 e0       	ldi	r24, 0x00	; 0
    19b2:	08 95       	ret
    19b4:	82 e0       	ldi	r24, 0x02	; 2
    19b6:	08 95       	ret

000019b8 <I2C_MSTR_send>:
    19b8:	98 2f       	mov	r25, r24
    19ba:	80 91 a8 02 	lds	r24, 0x02A8
    19be:	81 30       	cpi	r24, 0x01	; 1
    19c0:	11 f0       	breq	.+4      	; 0x19c6 <I2C_MSTR_send+0xe>
    19c2:	85 e0       	ldi	r24, 0x05	; 5
    19c4:	08 95       	ret
    19c6:	80 91 a9 02 	lds	r24, 0x02A9
    19ca:	81 30       	cpi	r24, 0x01	; 1
    19cc:	11 f0       	breq	.+4      	; 0x19d2 <I2C_MSTR_send+0x1a>
    19ce:	8a e0       	ldi	r24, 0x0A	; 10
    19d0:	08 95       	ret
    19d2:	90 93 bb 00 	sts	0x00BB, r25
    19d6:	84 e8       	ldi	r24, 0x84	; 132
    19d8:	80 93 bc 00 	sts	0x00BC, r24
    19dc:	80 91 bc 00 	lds	r24, 0x00BC
    19e0:	87 ff       	sbrs	r24, 7
    19e2:	fc cf       	rjmp	.-8      	; 0x19dc <I2C_MSTR_send+0x24>
    19e4:	80 91 b9 00 	lds	r24, 0x00B9
    19e8:	90 e0       	ldi	r25, 0x00	; 0
    19ea:	88 7f       	andi	r24, 0xF8	; 248
    19ec:	90 70       	andi	r25, 0x00	; 0
    19ee:	88 32       	cpi	r24, 0x28	; 40
    19f0:	91 05       	cpc	r25, r1
    19f2:	21 f0       	breq	.+8      	; 0x19fc <I2C_MSTR_send+0x44>
    19f4:	c0 97       	sbiw	r24, 0x30	; 48
    19f6:	21 f4       	brne	.+8      	; 0x1a00 <I2C_MSTR_send+0x48>
    19f8:	83 e0       	ldi	r24, 0x03	; 3
    19fa:	08 95       	ret
    19fc:	80 e0       	ldi	r24, 0x00	; 0
    19fe:	08 95       	ret
    1a00:	8c e0       	ldi	r24, 0x0C	; 12
    1a02:	08 95       	ret

00001a04 <I2C_MSTR_start>:
    1a04:	98 2f       	mov	r25, r24
    1a06:	20 91 a8 02 	lds	r18, 0x02A8
    1a0a:	21 30       	cpi	r18, 0x01	; 1
    1a0c:	11 f0       	breq	.+4      	; 0x1a12 <I2C_MSTR_start+0xe>
    1a0e:	85 e0       	ldi	r24, 0x05	; 5
    1a10:	08 95       	ret
    1a12:	80 91 aa 02 	lds	r24, 0x02AA
    1a16:	81 30       	cpi	r24, 0x01	; 1
    1a18:	11 f4       	brne	.+4      	; 0x1a1e <I2C_MSTR_start+0x1a>
    1a1a:	89 e0       	ldi	r24, 0x09	; 9
    1a1c:	08 95       	ret
    1a1e:	20 93 a9 02 	sts	0x02A9, r18
    1a22:	84 ea       	ldi	r24, 0xA4	; 164
    1a24:	80 93 bc 00 	sts	0x00BC, r24
    1a28:	80 91 bc 00 	lds	r24, 0x00BC
    1a2c:	87 ff       	sbrs	r24, 7
    1a2e:	fc cf       	rjmp	.-8      	; 0x1a28 <I2C_MSTR_start+0x24>
    1a30:	80 91 b9 00 	lds	r24, 0x00B9
    1a34:	88 7f       	andi	r24, 0xF8	; 248
    1a36:	88 30       	cpi	r24, 0x08	; 8
    1a38:	39 f0       	breq	.+14     	; 0x1a48 <I2C_MSTR_start+0x44>
    1a3a:	80 91 b9 00 	lds	r24, 0x00B9
    1a3e:	88 7f       	andi	r24, 0xF8	; 248
    1a40:	80 31       	cpi	r24, 0x10	; 16
    1a42:	11 f0       	breq	.+4      	; 0x1a48 <I2C_MSTR_start+0x44>
    1a44:	81 e0       	ldi	r24, 0x01	; 1
    1a46:	08 95       	ret
    1a48:	61 30       	cpi	r22, 0x01	; 1
    1a4a:	19 f4       	brne	.+6      	; 0x1a52 <I2C_MSTR_start+0x4e>
    1a4c:	99 0f       	add	r25, r25
    1a4e:	91 60       	ori	r25, 0x01	; 1
    1a50:	03 c0       	rjmp	.+6      	; 0x1a58 <I2C_MSTR_start+0x54>
    1a52:	66 23       	and	r22, r22
    1a54:	19 f4       	brne	.+6      	; 0x1a5c <I2C_MSTR_start+0x58>
    1a56:	99 0f       	add	r25, r25
    1a58:	90 93 bb 00 	sts	0x00BB, r25
    1a5c:	84 e8       	ldi	r24, 0x84	; 132
    1a5e:	80 93 bc 00 	sts	0x00BC, r24
    1a62:	80 91 bc 00 	lds	r24, 0x00BC
    1a66:	87 ff       	sbrs	r24, 7
    1a68:	fc cf       	rjmp	.-8      	; 0x1a62 <I2C_MSTR_start+0x5e>
    1a6a:	61 30       	cpi	r22, 0x01	; 1
    1a6c:	31 f4       	brne	.+12     	; 0x1a7a <I2C_MSTR_start+0x76>
    1a6e:	80 91 b9 00 	lds	r24, 0x00B9
    1a72:	88 7f       	andi	r24, 0xF8	; 248
    1a74:	80 34       	cpi	r24, 0x40	; 64
    1a76:	41 f4       	brne	.+16     	; 0x1a88 <I2C_MSTR_start+0x84>
    1a78:	09 c0       	rjmp	.+18     	; 0x1a8c <I2C_MSTR_start+0x88>
    1a7a:	66 23       	and	r22, r22
    1a7c:	39 f4       	brne	.+14     	; 0x1a8c <I2C_MSTR_start+0x88>
    1a7e:	80 91 b9 00 	lds	r24, 0x00B9
    1a82:	88 7f       	andi	r24, 0xF8	; 248
    1a84:	88 31       	cpi	r24, 0x18	; 24
    1a86:	11 f0       	breq	.+4      	; 0x1a8c <I2C_MSTR_start+0x88>
    1a88:	82 e0       	ldi	r24, 0x02	; 2
    1a8a:	08 95       	ret
    1a8c:	80 e0       	ldi	r24, 0x00	; 0
    1a8e:	08 95       	ret

00001a90 <I2C_MSTR_stop>:
    1a90:	80 91 a9 02 	lds	r24, 0x02A9
    1a94:	81 30       	cpi	r24, 0x01	; 1
    1a96:	11 f0       	breq	.+4      	; 0x1a9c <I2C_MSTR_stop+0xc>
    1a98:	8a e0       	ldi	r24, 0x0A	; 10
    1a9a:	08 95       	ret
    1a9c:	80 91 ab 02 	lds	r24, 0x02AB
    1aa0:	81 30       	cpi	r24, 0x01	; 1
    1aa2:	29 f4       	brne	.+10     	; 0x1aae <I2C_MSTR_stop+0x1e>
    1aa4:	85 e9       	ldi	r24, 0x95	; 149
    1aa6:	80 93 bc 00 	sts	0x00BC, r24
    1aaa:	80 e0       	ldi	r24, 0x00	; 0
    1aac:	08 95       	ret
    1aae:	84 e9       	ldi	r24, 0x94	; 148
    1ab0:	80 93 bc 00 	sts	0x00BC, r24
    1ab4:	80 e0       	ldi	r24, 0x00	; 0
    1ab6:	08 95       	ret

00001ab8 <I2C_open>:
    1ab8:	82 e1       	ldi	r24, 0x12	; 18
    1aba:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    1abe:	88 23       	and	r24, r24
    1ac0:	b1 f4       	brne	.+44     	; 0x1aee <I2C_open+0x36>
    1ac2:	10 92 a8 02 	sts	0x02A8, r1
    1ac6:	10 92 a9 02 	sts	0x02A9, r1
    1aca:	10 92 aa 02 	sts	0x02AA, r1
    1ace:	10 92 ab 02 	sts	0x02AB, r1
    1ad2:	10 92 ac 02 	sts	0x02AC, r1
    1ad6:	0e 94 fc 12 	call	0x25f8	; 0x25f8 <__I2C_init>
    1ada:	87 e1       	ldi	r24, 0x17	; 23
    1adc:	60 e0       	ldi	r22, 0x00	; 0
    1ade:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <I2C_set_BRG>
    1ae2:	0e 94 f2 12 	call	0x25e4	; 0x25e4 <I2C_enable>
    1ae6:	82 e1       	ldi	r24, 0x12	; 18
    1ae8:	61 e0       	ldi	r22, 0x01	; 1
    1aea:	0e 94 07 0b 	call	0x160e	; 0x160e <SYS_set_state>
    1aee:	82 e1       	ldi	r24, 0x12	; 18
    1af0:	90 e0       	ldi	r25, 0x00	; 0
    1af2:	08 95       	ret

00001af4 <I2C_set_BRG>:
    1af4:	63 70       	andi	r22, 0x03	; 3
    1af6:	60 93 b9 00 	sts	0x00B9, r22
    1afa:	80 93 b8 00 	sts	0x00B8, r24
    1afe:	81 e0       	ldi	r24, 0x01	; 1
    1b00:	80 93 a8 02 	sts	0x02A8, r24
    1b04:	08 95       	ret

00001b06 <__ADC_init>:
    1b06:	8f e1       	ldi	r24, 0x1F	; 31
    1b08:	80 93 7c 00 	sts	0x007C, r24
    1b0c:	ea e7       	ldi	r30, 0x7A	; 122
    1b0e:	f0 e0       	ldi	r31, 0x00	; 0
    1b10:	87 e0       	ldi	r24, 0x07	; 7
    1b12:	80 83       	st	Z, r24
    1b14:	80 81       	ld	r24, Z
    1b16:	80 68       	ori	r24, 0x80	; 128
    1b18:	80 83       	st	Z, r24
    1b1a:	08 95       	ret

00001b1c <CBOT_init>:
    1b1c:	0e 94 3d 12 	call	0x247a	; 0x247a <SYS_init>
    1b20:	0e 94 c0 10 	call	0x2180	; 0x2180 <ATMEGA_open>
    1b24:	0e 94 f0 0f 	call	0x1fe0	; 0x1fe0 <ISR_open>
    1b28:	0e 94 c9 12 	call	0x2592	; 0x2592 <TMRSRVC_open>
    1b2c:	0e 94 25 11 	call	0x224a	; 0x224a <SPI_open>
    1b30:	0e 94 02 0c 	call	0x1804	; 0x1804 <ATTINY_open>
    1b34:	78 94       	sei
    1b36:	08 95       	ret

00001b38 <CBOT_ISR_init>:
    1b38:	00 00       	nop
    1b3a:	08 95       	ret

00001b3c <__vector_16>:
    1b3c:	1f 92       	push	r1
    1b3e:	0f 92       	push	r0
    1b40:	0f b6       	in	r0, 0x3f	; 63
    1b42:	0f 92       	push	r0
    1b44:	11 24       	eor	r1, r1
    1b46:	2f 93       	push	r18
    1b48:	3f 93       	push	r19
    1b4a:	4f 93       	push	r20
    1b4c:	5f 93       	push	r21
    1b4e:	6f 93       	push	r22
    1b50:	7f 93       	push	r23
    1b52:	8f 93       	push	r24
    1b54:	9f 93       	push	r25
    1b56:	af 93       	push	r26
    1b58:	bf 93       	push	r27
    1b5a:	ef 93       	push	r30
    1b5c:	ff 93       	push	r31
    1b5e:	e0 91 21 02 	lds	r30, 0x0221
    1b62:	f0 91 22 02 	lds	r31, 0x0222
    1b66:	30 97       	sbiw	r30, 0x00	; 0
    1b68:	09 f0       	breq	.+2      	; 0x1b6c <__vector_16+0x30>
    1b6a:	09 95       	icall
    1b6c:	ff 91       	pop	r31
    1b6e:	ef 91       	pop	r30
    1b70:	bf 91       	pop	r27
    1b72:	af 91       	pop	r26
    1b74:	9f 91       	pop	r25
    1b76:	8f 91       	pop	r24
    1b78:	7f 91       	pop	r23
    1b7a:	6f 91       	pop	r22
    1b7c:	5f 91       	pop	r21
    1b7e:	4f 91       	pop	r20
    1b80:	3f 91       	pop	r19
    1b82:	2f 91       	pop	r18
    1b84:	0f 90       	pop	r0
    1b86:	0f be       	out	0x3f, r0	; 63
    1b88:	0f 90       	pop	r0
    1b8a:	1f 90       	pop	r1
    1b8c:	18 95       	reti

00001b8e <__vector_17>:
    1b8e:	1f 92       	push	r1
    1b90:	0f 92       	push	r0
    1b92:	0f b6       	in	r0, 0x3f	; 63
    1b94:	0f 92       	push	r0
    1b96:	11 24       	eor	r1, r1
    1b98:	2f 93       	push	r18
    1b9a:	3f 93       	push	r19
    1b9c:	4f 93       	push	r20
    1b9e:	5f 93       	push	r21
    1ba0:	6f 93       	push	r22
    1ba2:	7f 93       	push	r23
    1ba4:	8f 93       	push	r24
    1ba6:	9f 93       	push	r25
    1ba8:	af 93       	push	r26
    1baa:	bf 93       	push	r27
    1bac:	ef 93       	push	r30
    1bae:	ff 93       	push	r31
    1bb0:	e0 91 23 02 	lds	r30, 0x0223
    1bb4:	f0 91 24 02 	lds	r31, 0x0224
    1bb8:	30 97       	sbiw	r30, 0x00	; 0
    1bba:	09 f0       	breq	.+2      	; 0x1bbe <__vector_17+0x30>
    1bbc:	09 95       	icall
    1bbe:	ff 91       	pop	r31
    1bc0:	ef 91       	pop	r30
    1bc2:	bf 91       	pop	r27
    1bc4:	af 91       	pop	r26
    1bc6:	9f 91       	pop	r25
    1bc8:	8f 91       	pop	r24
    1bca:	7f 91       	pop	r23
    1bcc:	6f 91       	pop	r22
    1bce:	5f 91       	pop	r21
    1bd0:	4f 91       	pop	r20
    1bd2:	3f 91       	pop	r19
    1bd4:	2f 91       	pop	r18
    1bd6:	0f 90       	pop	r0
    1bd8:	0f be       	out	0x3f, r0	; 63
    1bda:	0f 90       	pop	r0
    1bdc:	1f 90       	pop	r1
    1bde:	18 95       	reti

00001be0 <__vector_18>:
    1be0:	1f 92       	push	r1
    1be2:	0f 92       	push	r0
    1be4:	0f b6       	in	r0, 0x3f	; 63
    1be6:	0f 92       	push	r0
    1be8:	11 24       	eor	r1, r1
    1bea:	2f 93       	push	r18
    1bec:	3f 93       	push	r19
    1bee:	4f 93       	push	r20
    1bf0:	5f 93       	push	r21
    1bf2:	6f 93       	push	r22
    1bf4:	7f 93       	push	r23
    1bf6:	8f 93       	push	r24
    1bf8:	9f 93       	push	r25
    1bfa:	af 93       	push	r26
    1bfc:	bf 93       	push	r27
    1bfe:	ef 93       	push	r30
    1c00:	ff 93       	push	r31
    1c02:	e0 91 25 02 	lds	r30, 0x0225
    1c06:	f0 91 26 02 	lds	r31, 0x0226
    1c0a:	30 97       	sbiw	r30, 0x00	; 0
    1c0c:	09 f0       	breq	.+2      	; 0x1c10 <__vector_18+0x30>
    1c0e:	09 95       	icall
    1c10:	ff 91       	pop	r31
    1c12:	ef 91       	pop	r30
    1c14:	bf 91       	pop	r27
    1c16:	af 91       	pop	r26
    1c18:	9f 91       	pop	r25
    1c1a:	8f 91       	pop	r24
    1c1c:	7f 91       	pop	r23
    1c1e:	6f 91       	pop	r22
    1c20:	5f 91       	pop	r21
    1c22:	4f 91       	pop	r20
    1c24:	3f 91       	pop	r19
    1c26:	2f 91       	pop	r18
    1c28:	0f 90       	pop	r0
    1c2a:	0f be       	out	0x3f, r0	; 63
    1c2c:	0f 90       	pop	r0
    1c2e:	1f 90       	pop	r1
    1c30:	18 95       	reti

00001c32 <__vector_9>:
    1c32:	1f 92       	push	r1
    1c34:	0f 92       	push	r0
    1c36:	0f b6       	in	r0, 0x3f	; 63
    1c38:	0f 92       	push	r0
    1c3a:	11 24       	eor	r1, r1
    1c3c:	2f 93       	push	r18
    1c3e:	3f 93       	push	r19
    1c40:	4f 93       	push	r20
    1c42:	5f 93       	push	r21
    1c44:	6f 93       	push	r22
    1c46:	7f 93       	push	r23
    1c48:	8f 93       	push	r24
    1c4a:	9f 93       	push	r25
    1c4c:	af 93       	push	r26
    1c4e:	bf 93       	push	r27
    1c50:	ef 93       	push	r30
    1c52:	ff 93       	push	r31
    1c54:	e0 91 13 02 	lds	r30, 0x0213
    1c58:	f0 91 14 02 	lds	r31, 0x0214
    1c5c:	30 97       	sbiw	r30, 0x00	; 0
    1c5e:	09 f0       	breq	.+2      	; 0x1c62 <__vector_9+0x30>
    1c60:	09 95       	icall
    1c62:	ff 91       	pop	r31
    1c64:	ef 91       	pop	r30
    1c66:	bf 91       	pop	r27
    1c68:	af 91       	pop	r26
    1c6a:	9f 91       	pop	r25
    1c6c:	8f 91       	pop	r24
    1c6e:	7f 91       	pop	r23
    1c70:	6f 91       	pop	r22
    1c72:	5f 91       	pop	r21
    1c74:	4f 91       	pop	r20
    1c76:	3f 91       	pop	r19
    1c78:	2f 91       	pop	r18
    1c7a:	0f 90       	pop	r0
    1c7c:	0f be       	out	0x3f, r0	; 63
    1c7e:	0f 90       	pop	r0
    1c80:	1f 90       	pop	r1
    1c82:	18 95       	reti

00001c84 <__vector_10>:
    1c84:	1f 92       	push	r1
    1c86:	0f 92       	push	r0
    1c88:	0f b6       	in	r0, 0x3f	; 63
    1c8a:	0f 92       	push	r0
    1c8c:	11 24       	eor	r1, r1
    1c8e:	2f 93       	push	r18
    1c90:	3f 93       	push	r19
    1c92:	4f 93       	push	r20
    1c94:	5f 93       	push	r21
    1c96:	6f 93       	push	r22
    1c98:	7f 93       	push	r23
    1c9a:	8f 93       	push	r24
    1c9c:	9f 93       	push	r25
    1c9e:	af 93       	push	r26
    1ca0:	bf 93       	push	r27
    1ca2:	ef 93       	push	r30
    1ca4:	ff 93       	push	r31
    1ca6:	e0 91 15 02 	lds	r30, 0x0215
    1caa:	f0 91 16 02 	lds	r31, 0x0216
    1cae:	30 97       	sbiw	r30, 0x00	; 0
    1cb0:	09 f0       	breq	.+2      	; 0x1cb4 <__vector_10+0x30>
    1cb2:	09 95       	icall
    1cb4:	ff 91       	pop	r31
    1cb6:	ef 91       	pop	r30
    1cb8:	bf 91       	pop	r27
    1cba:	af 91       	pop	r26
    1cbc:	9f 91       	pop	r25
    1cbe:	8f 91       	pop	r24
    1cc0:	7f 91       	pop	r23
    1cc2:	6f 91       	pop	r22
    1cc4:	5f 91       	pop	r21
    1cc6:	4f 91       	pop	r20
    1cc8:	3f 91       	pop	r19
    1cca:	2f 91       	pop	r18
    1ccc:	0f 90       	pop	r0
    1cce:	0f be       	out	0x3f, r0	; 63
    1cd0:	0f 90       	pop	r0
    1cd2:	1f 90       	pop	r1
    1cd4:	18 95       	reti

00001cd6 <__vector_11>:
    1cd6:	1f 92       	push	r1
    1cd8:	0f 92       	push	r0
    1cda:	0f b6       	in	r0, 0x3f	; 63
    1cdc:	0f 92       	push	r0
    1cde:	11 24       	eor	r1, r1
    1ce0:	2f 93       	push	r18
    1ce2:	3f 93       	push	r19
    1ce4:	4f 93       	push	r20
    1ce6:	5f 93       	push	r21
    1ce8:	6f 93       	push	r22
    1cea:	7f 93       	push	r23
    1cec:	8f 93       	push	r24
    1cee:	9f 93       	push	r25
    1cf0:	af 93       	push	r26
    1cf2:	bf 93       	push	r27
    1cf4:	ef 93       	push	r30
    1cf6:	ff 93       	push	r31
    1cf8:	e0 91 17 02 	lds	r30, 0x0217
    1cfc:	f0 91 18 02 	lds	r31, 0x0218
    1d00:	30 97       	sbiw	r30, 0x00	; 0
    1d02:	09 f0       	breq	.+2      	; 0x1d06 <__vector_11+0x30>
    1d04:	09 95       	icall
    1d06:	ff 91       	pop	r31
    1d08:	ef 91       	pop	r30
    1d0a:	bf 91       	pop	r27
    1d0c:	af 91       	pop	r26
    1d0e:	9f 91       	pop	r25
    1d10:	8f 91       	pop	r24
    1d12:	7f 91       	pop	r23
    1d14:	6f 91       	pop	r22
    1d16:	5f 91       	pop	r21
    1d18:	4f 91       	pop	r20
    1d1a:	3f 91       	pop	r19
    1d1c:	2f 91       	pop	r18
    1d1e:	0f 90       	pop	r0
    1d20:	0f be       	out	0x3f, r0	; 63
    1d22:	0f 90       	pop	r0
    1d24:	1f 90       	pop	r1
    1d26:	18 95       	reti

00001d28 <__vector_13>:
    1d28:	1f 92       	push	r1
    1d2a:	0f 92       	push	r0
    1d2c:	0f b6       	in	r0, 0x3f	; 63
    1d2e:	0f 92       	push	r0
    1d30:	11 24       	eor	r1, r1
    1d32:	2f 93       	push	r18
    1d34:	3f 93       	push	r19
    1d36:	4f 93       	push	r20
    1d38:	5f 93       	push	r21
    1d3a:	6f 93       	push	r22
    1d3c:	7f 93       	push	r23
    1d3e:	8f 93       	push	r24
    1d40:	9f 93       	push	r25
    1d42:	af 93       	push	r26
    1d44:	bf 93       	push	r27
    1d46:	ef 93       	push	r30
    1d48:	ff 93       	push	r31
    1d4a:	e0 91 1b 02 	lds	r30, 0x021B
    1d4e:	f0 91 1c 02 	lds	r31, 0x021C
    1d52:	30 97       	sbiw	r30, 0x00	; 0
    1d54:	09 f0       	breq	.+2      	; 0x1d58 <__vector_13+0x30>
    1d56:	09 95       	icall
    1d58:	ff 91       	pop	r31
    1d5a:	ef 91       	pop	r30
    1d5c:	bf 91       	pop	r27
    1d5e:	af 91       	pop	r26
    1d60:	9f 91       	pop	r25
    1d62:	8f 91       	pop	r24
    1d64:	7f 91       	pop	r23
    1d66:	6f 91       	pop	r22
    1d68:	5f 91       	pop	r21
    1d6a:	4f 91       	pop	r20
    1d6c:	3f 91       	pop	r19
    1d6e:	2f 91       	pop	r18
    1d70:	0f 90       	pop	r0
    1d72:	0f be       	out	0x3f, r0	; 63
    1d74:	0f 90       	pop	r0
    1d76:	1f 90       	pop	r1
    1d78:	18 95       	reti

00001d7a <__vector_14>:
    1d7a:	1f 92       	push	r1
    1d7c:	0f 92       	push	r0
    1d7e:	0f b6       	in	r0, 0x3f	; 63
    1d80:	0f 92       	push	r0
    1d82:	11 24       	eor	r1, r1
    1d84:	2f 93       	push	r18
    1d86:	3f 93       	push	r19
    1d88:	4f 93       	push	r20
    1d8a:	5f 93       	push	r21
    1d8c:	6f 93       	push	r22
    1d8e:	7f 93       	push	r23
    1d90:	8f 93       	push	r24
    1d92:	9f 93       	push	r25
    1d94:	af 93       	push	r26
    1d96:	bf 93       	push	r27
    1d98:	ef 93       	push	r30
    1d9a:	ff 93       	push	r31
    1d9c:	e0 91 1d 02 	lds	r30, 0x021D
    1da0:	f0 91 1e 02 	lds	r31, 0x021E
    1da4:	30 97       	sbiw	r30, 0x00	; 0
    1da6:	09 f0       	breq	.+2      	; 0x1daa <__vector_14+0x30>
    1da8:	09 95       	icall
    1daa:	ff 91       	pop	r31
    1dac:	ef 91       	pop	r30
    1dae:	bf 91       	pop	r27
    1db0:	af 91       	pop	r26
    1db2:	9f 91       	pop	r25
    1db4:	8f 91       	pop	r24
    1db6:	7f 91       	pop	r23
    1db8:	6f 91       	pop	r22
    1dba:	5f 91       	pop	r21
    1dbc:	4f 91       	pop	r20
    1dbe:	3f 91       	pop	r19
    1dc0:	2f 91       	pop	r18
    1dc2:	0f 90       	pop	r0
    1dc4:	0f be       	out	0x3f, r0	; 63
    1dc6:	0f 90       	pop	r0
    1dc8:	1f 90       	pop	r1
    1dca:	18 95       	reti

00001dcc <__vector_12>:
    1dcc:	1f 92       	push	r1
    1dce:	0f 92       	push	r0
    1dd0:	0f b6       	in	r0, 0x3f	; 63
    1dd2:	0f 92       	push	r0
    1dd4:	11 24       	eor	r1, r1
    1dd6:	2f 93       	push	r18
    1dd8:	3f 93       	push	r19
    1dda:	4f 93       	push	r20
    1ddc:	5f 93       	push	r21
    1dde:	6f 93       	push	r22
    1de0:	7f 93       	push	r23
    1de2:	8f 93       	push	r24
    1de4:	9f 93       	push	r25
    1de6:	af 93       	push	r26
    1de8:	bf 93       	push	r27
    1dea:	ef 93       	push	r30
    1dec:	ff 93       	push	r31
    1dee:	e0 91 19 02 	lds	r30, 0x0219
    1df2:	f0 91 1a 02 	lds	r31, 0x021A
    1df6:	30 97       	sbiw	r30, 0x00	; 0
    1df8:	09 f0       	breq	.+2      	; 0x1dfc <__vector_12+0x30>
    1dfa:	09 95       	icall
    1dfc:	ff 91       	pop	r31
    1dfe:	ef 91       	pop	r30
    1e00:	bf 91       	pop	r27
    1e02:	af 91       	pop	r26
    1e04:	9f 91       	pop	r25
    1e06:	8f 91       	pop	r24
    1e08:	7f 91       	pop	r23
    1e0a:	6f 91       	pop	r22
    1e0c:	5f 91       	pop	r21
    1e0e:	4f 91       	pop	r20
    1e10:	3f 91       	pop	r19
    1e12:	2f 91       	pop	r18
    1e14:	0f 90       	pop	r0
    1e16:	0f be       	out	0x3f, r0	; 63
    1e18:	0f 90       	pop	r0
    1e1a:	1f 90       	pop	r1
    1e1c:	18 95       	reti

00001e1e <__vector_15>:
    1e1e:	1f 92       	push	r1
    1e20:	0f 92       	push	r0
    1e22:	0f b6       	in	r0, 0x3f	; 63
    1e24:	0f 92       	push	r0
    1e26:	11 24       	eor	r1, r1
    1e28:	2f 93       	push	r18
    1e2a:	3f 93       	push	r19
    1e2c:	4f 93       	push	r20
    1e2e:	5f 93       	push	r21
    1e30:	6f 93       	push	r22
    1e32:	7f 93       	push	r23
    1e34:	8f 93       	push	r24
    1e36:	9f 93       	push	r25
    1e38:	af 93       	push	r26
    1e3a:	bf 93       	push	r27
    1e3c:	ef 93       	push	r30
    1e3e:	ff 93       	push	r31
    1e40:	e0 91 1f 02 	lds	r30, 0x021F
    1e44:	f0 91 20 02 	lds	r31, 0x0220
    1e48:	30 97       	sbiw	r30, 0x00	; 0
    1e4a:	09 f0       	breq	.+2      	; 0x1e4e <__vector_15+0x30>
    1e4c:	09 95       	icall
    1e4e:	ff 91       	pop	r31
    1e50:	ef 91       	pop	r30
    1e52:	bf 91       	pop	r27
    1e54:	af 91       	pop	r26
    1e56:	9f 91       	pop	r25
    1e58:	8f 91       	pop	r24
    1e5a:	7f 91       	pop	r23
    1e5c:	6f 91       	pop	r22
    1e5e:	5f 91       	pop	r21
    1e60:	4f 91       	pop	r20
    1e62:	3f 91       	pop	r19
    1e64:	2f 91       	pop	r18
    1e66:	0f 90       	pop	r0
    1e68:	0f be       	out	0x3f, r0	; 63
    1e6a:	0f 90       	pop	r0
    1e6c:	1f 90       	pop	r1
    1e6e:	18 95       	reti

00001e70 <__vector_4>:
    1e70:	1f 92       	push	r1
    1e72:	0f 92       	push	r0
    1e74:	0f b6       	in	r0, 0x3f	; 63
    1e76:	0f 92       	push	r0
    1e78:	11 24       	eor	r1, r1
    1e7a:	2f 93       	push	r18
    1e7c:	3f 93       	push	r19
    1e7e:	4f 93       	push	r20
    1e80:	5f 93       	push	r21
    1e82:	6f 93       	push	r22
    1e84:	7f 93       	push	r23
    1e86:	8f 93       	push	r24
    1e88:	9f 93       	push	r25
    1e8a:	af 93       	push	r26
    1e8c:	bf 93       	push	r27
    1e8e:	ef 93       	push	r30
    1e90:	ff 93       	push	r31
    1e92:	e0 91 09 02 	lds	r30, 0x0209
    1e96:	f0 91 0a 02 	lds	r31, 0x020A
    1e9a:	30 97       	sbiw	r30, 0x00	; 0
    1e9c:	09 f0       	breq	.+2      	; 0x1ea0 <__vector_4+0x30>
    1e9e:	09 95       	icall
    1ea0:	ff 91       	pop	r31
    1ea2:	ef 91       	pop	r30
    1ea4:	bf 91       	pop	r27
    1ea6:	af 91       	pop	r26
    1ea8:	9f 91       	pop	r25
    1eaa:	8f 91       	pop	r24
    1eac:	7f 91       	pop	r23
    1eae:	6f 91       	pop	r22
    1eb0:	5f 91       	pop	r21
    1eb2:	4f 91       	pop	r20
    1eb4:	3f 91       	pop	r19
    1eb6:	2f 91       	pop	r18
    1eb8:	0f 90       	pop	r0
    1eba:	0f be       	out	0x3f, r0	; 63
    1ebc:	0f 90       	pop	r0
    1ebe:	1f 90       	pop	r1
    1ec0:	18 95       	reti

00001ec2 <__vector_5>:
    1ec2:	1f 92       	push	r1
    1ec4:	0f 92       	push	r0
    1ec6:	0f b6       	in	r0, 0x3f	; 63
    1ec8:	0f 92       	push	r0
    1eca:	11 24       	eor	r1, r1
    1ecc:	2f 93       	push	r18
    1ece:	3f 93       	push	r19
    1ed0:	4f 93       	push	r20
    1ed2:	5f 93       	push	r21
    1ed4:	6f 93       	push	r22
    1ed6:	7f 93       	push	r23
    1ed8:	8f 93       	push	r24
    1eda:	9f 93       	push	r25
    1edc:	af 93       	push	r26
    1ede:	bf 93       	push	r27
    1ee0:	ef 93       	push	r30
    1ee2:	ff 93       	push	r31
    1ee4:	e0 91 0b 02 	lds	r30, 0x020B
    1ee8:	f0 91 0c 02 	lds	r31, 0x020C
    1eec:	30 97       	sbiw	r30, 0x00	; 0
    1eee:	09 f0       	breq	.+2      	; 0x1ef2 <__vector_5+0x30>
    1ef0:	09 95       	icall
    1ef2:	ff 91       	pop	r31
    1ef4:	ef 91       	pop	r30
    1ef6:	bf 91       	pop	r27
    1ef8:	af 91       	pop	r26
    1efa:	9f 91       	pop	r25
    1efc:	8f 91       	pop	r24
    1efe:	7f 91       	pop	r23
    1f00:	6f 91       	pop	r22
    1f02:	5f 91       	pop	r21
    1f04:	4f 91       	pop	r20
    1f06:	3f 91       	pop	r19
    1f08:	2f 91       	pop	r18
    1f0a:	0f 90       	pop	r0
    1f0c:	0f be       	out	0x3f, r0	; 63
    1f0e:	0f 90       	pop	r0
    1f10:	1f 90       	pop	r1
    1f12:	18 95       	reti

00001f14 <__vector_6>:
    1f14:	1f 92       	push	r1
    1f16:	0f 92       	push	r0
    1f18:	0f b6       	in	r0, 0x3f	; 63
    1f1a:	0f 92       	push	r0
    1f1c:	11 24       	eor	r1, r1
    1f1e:	2f 93       	push	r18
    1f20:	3f 93       	push	r19
    1f22:	4f 93       	push	r20
    1f24:	5f 93       	push	r21
    1f26:	6f 93       	push	r22
    1f28:	7f 93       	push	r23
    1f2a:	8f 93       	push	r24
    1f2c:	9f 93       	push	r25
    1f2e:	af 93       	push	r26
    1f30:	bf 93       	push	r27
    1f32:	ef 93       	push	r30
    1f34:	ff 93       	push	r31
    1f36:	e0 91 0d 02 	lds	r30, 0x020D
    1f3a:	f0 91 0e 02 	lds	r31, 0x020E
    1f3e:	30 97       	sbiw	r30, 0x00	; 0
    1f40:	09 f0       	breq	.+2      	; 0x1f44 <__vector_6+0x30>
    1f42:	09 95       	icall
    1f44:	ff 91       	pop	r31
    1f46:	ef 91       	pop	r30
    1f48:	bf 91       	pop	r27
    1f4a:	af 91       	pop	r26
    1f4c:	9f 91       	pop	r25
    1f4e:	8f 91       	pop	r24
    1f50:	7f 91       	pop	r23
    1f52:	6f 91       	pop	r22
    1f54:	5f 91       	pop	r21
    1f56:	4f 91       	pop	r20
    1f58:	3f 91       	pop	r19
    1f5a:	2f 91       	pop	r18
    1f5c:	0f 90       	pop	r0
    1f5e:	0f be       	out	0x3f, r0	; 63
    1f60:	0f 90       	pop	r0
    1f62:	1f 90       	pop	r1
    1f64:	18 95       	reti

00001f66 <__vector_7>:
    1f66:	1f 92       	push	r1
    1f68:	0f 92       	push	r0
    1f6a:	0f b6       	in	r0, 0x3f	; 63
    1f6c:	0f 92       	push	r0
    1f6e:	11 24       	eor	r1, r1
    1f70:	2f 93       	push	r18
    1f72:	3f 93       	push	r19
    1f74:	4f 93       	push	r20
    1f76:	5f 93       	push	r21
    1f78:	6f 93       	push	r22
    1f7a:	7f 93       	push	r23
    1f7c:	8f 93       	push	r24
    1f7e:	9f 93       	push	r25
    1f80:	af 93       	push	r26
    1f82:	bf 93       	push	r27
    1f84:	ef 93       	push	r30
    1f86:	ff 93       	push	r31
    1f88:	e0 91 0f 02 	lds	r30, 0x020F
    1f8c:	f0 91 10 02 	lds	r31, 0x0210
    1f90:	30 97       	sbiw	r30, 0x00	; 0
    1f92:	09 f0       	breq	.+2      	; 0x1f96 <__vector_7+0x30>
    1f94:	09 95       	icall
    1f96:	ff 91       	pop	r31
    1f98:	ef 91       	pop	r30
    1f9a:	bf 91       	pop	r27
    1f9c:	af 91       	pop	r26
    1f9e:	9f 91       	pop	r25
    1fa0:	8f 91       	pop	r24
    1fa2:	7f 91       	pop	r23
    1fa4:	6f 91       	pop	r22
    1fa6:	5f 91       	pop	r21
    1fa8:	4f 91       	pop	r20
    1faa:	3f 91       	pop	r19
    1fac:	2f 91       	pop	r18
    1fae:	0f 90       	pop	r0
    1fb0:	0f be       	out	0x3f, r0	; 63
    1fb2:	0f 90       	pop	r0
    1fb4:	1f 90       	pop	r1
    1fb6:	18 95       	reti

00001fb8 <ISR_attach>:
    1fb8:	e8 2f       	mov	r30, r24
    1fba:	80 32       	cpi	r24, 0x20	; 32
    1fbc:	68 f4       	brcc	.+26     	; 0x1fd8 <ISR_attach+0x20>
    1fbe:	80 51       	subi	r24, 0x10	; 16
    1fc0:	83 30       	cpi	r24, 0x03	; 3
    1fc2:	50 f0       	brcs	.+20     	; 0x1fd8 <ISR_attach+0x20>
    1fc4:	f0 e0       	ldi	r31, 0x00	; 0
    1fc6:	ee 0f       	add	r30, r30
    1fc8:	ff 1f       	adc	r31, r31
    1fca:	ef 5f       	subi	r30, 0xFF	; 255
    1fcc:	fd 4f       	sbci	r31, 0xFD	; 253
    1fce:	20 81       	ld	r18, Z
    1fd0:	31 81       	ldd	r19, Z+1	; 0x01
    1fd2:	71 83       	std	Z+1, r23	; 0x01
    1fd4:	60 83       	st	Z, r22
    1fd6:	02 c0       	rjmp	.+4      	; 0x1fdc <ISR_attach+0x24>
    1fd8:	20 e0       	ldi	r18, 0x00	; 0
    1fda:	30 e0       	ldi	r19, 0x00	; 0
    1fdc:	c9 01       	movw	r24, r18
    1fde:	08 95       	ret

00001fe0 <ISR_open>:
    1fe0:	80 e1       	ldi	r24, 0x10	; 16
    1fe2:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    1fe6:	88 23       	and	r24, r24
    1fe8:	61 f4       	brne	.+24     	; 0x2002 <ISR_open+0x22>
    1fea:	e1 e0       	ldi	r30, 0x01	; 1
    1fec:	f2 e0       	ldi	r31, 0x02	; 2
    1fee:	11 92       	st	Z+, r1
    1ff0:	11 92       	st	Z+, r1
    1ff2:	82 e0       	ldi	r24, 0x02	; 2
    1ff4:	e1 34       	cpi	r30, 0x41	; 65
    1ff6:	f8 07       	cpc	r31, r24
    1ff8:	d1 f7       	brne	.-12     	; 0x1fee <ISR_open+0xe>
    1ffa:	80 e1       	ldi	r24, 0x10	; 16
    1ffc:	61 e0       	ldi	r22, 0x01	; 1
    1ffe:	0e 94 07 0b 	call	0x160e	; 0x160e <SYS_set_state>
    2002:	80 e1       	ldi	r24, 0x10	; 16
    2004:	91 e0       	ldi	r25, 0x01	; 1
    2006:	08 95       	ret

00002008 <__LCD_init>:
    2008:	23 9a       	sbi	0x04, 3	; 4
    200a:	08 95       	ret

0000200c <__LCD_putchar>:
    200c:	ff 92       	push	r15
    200e:	0f 93       	push	r16
    2010:	1f 93       	push	r17
    2012:	cf 93       	push	r28
    2014:	df 93       	push	r29
    2016:	f8 2e       	mov	r15, r24
    2018:	8a e0       	ldi	r24, 0x0A	; 10
    201a:	f8 16       	cp	r15, r24
    201c:	b1 f0       	breq	.+44     	; 0x204a <__LCD_putchar+0x3e>
    201e:	8f 15       	cp	r24, r15
    2020:	48 f0       	brcs	.+18     	; 0x2034 <__LCD_putchar+0x28>
    2022:	e8 e0       	ldi	r30, 0x08	; 8
    2024:	fe 16       	cp	r15, r30
    2026:	b9 f1       	breq	.+110    	; 0x2096 <__LCD_putchar+0x8a>
    2028:	ef 15       	cp	r30, r15
    202a:	38 f1       	brcs	.+78     	; 0x207a <__LCD_putchar+0x6e>
    202c:	f7 e0       	ldi	r31, 0x07	; 7
    202e:	ff 16       	cp	r15, r31
    2030:	51 f4       	brne	.+20     	; 0x2046 <__LCD_putchar+0x3a>
    2032:	3b c0       	rjmp	.+118    	; 0x20aa <__LCD_putchar+0x9e>
    2034:	8d e0       	ldi	r24, 0x0D	; 13
    2036:	f8 16       	cp	r15, r24
    2038:	59 f0       	breq	.+22     	; 0x2050 <__LCD_putchar+0x44>
    203a:	eb e1       	ldi	r30, 0x1B	; 27
    203c:	fe 16       	cp	r15, r30
    203e:	89 f0       	breq	.+34     	; 0x2062 <__LCD_putchar+0x56>
    2040:	fc e0       	ldi	r31, 0x0C	; 12
    2042:	ff 16       	cp	r15, r31
    2044:	41 f0       	breq	.+16     	; 0x2056 <__LCD_putchar+0x4a>
    2046:	01 e0       	ldi	r16, 0x01	; 1
    2048:	41 c0       	rjmp	.+130    	; 0x20cc <__LCD_putchar+0xc0>
    204a:	10 92 81 02 	sts	0x0281, r1
    204e:	03 c0       	rjmp	.+6      	; 0x2056 <__LCD_putchar+0x4a>
    2050:	10 92 81 02 	sts	0x0281, r1
    2054:	3a c0       	rjmp	.+116    	; 0x20ca <__LCD_putchar+0xbe>
    2056:	80 91 82 02 	lds	r24, 0x0282
    205a:	81 50       	subi	r24, 0x01	; 1
    205c:	80 93 82 02 	sts	0x0282, r24
    2060:	34 c0       	rjmp	.+104    	; 0x20ca <__LCD_putchar+0xbe>
    2062:	0e 94 59 08 	call	0x10b2	; 0x10b2 <LCD_clear>
    2066:	14 c0       	rjmp	.+40     	; 0x2090 <__LCD_putchar+0x84>
    2068:	80 e0       	ldi	r24, 0x00	; 0
    206a:	61 e0       	ldi	r22, 0x01	; 1
    206c:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    2070:	80 91 81 02 	lds	r24, 0x0281
    2074:	8f 5f       	subi	r24, 0xFF	; 255
    2076:	80 93 81 02 	sts	0x0281, r24
    207a:	80 91 81 02 	lds	r24, 0x0281
    207e:	87 ff       	sbrs	r24, 7
    2080:	f3 cf       	rjmp	.-26     	; 0x2068 <__LCD_putchar+0x5c>
    2082:	10 92 81 02 	sts	0x0281, r1
    2086:	80 91 82 02 	lds	r24, 0x0282
    208a:	81 50       	subi	r24, 0x01	; 1
    208c:	80 93 82 02 	sts	0x0282, r24
    2090:	00 e0       	ldi	r16, 0x00	; 0
    2092:	11 e0       	ldi	r17, 0x01	; 1
    2094:	1c c0       	rjmp	.+56     	; 0x20ce <__LCD_putchar+0xc2>
    2096:	80 91 81 02 	lds	r24, 0x0281
    209a:	88 23       	and	r24, r24
    209c:	b1 f0       	breq	.+44     	; 0x20ca <__LCD_putchar+0xbe>
    209e:	80 91 81 02 	lds	r24, 0x0281
    20a2:	86 50       	subi	r24, 0x06	; 6
    20a4:	80 93 81 02 	sts	0x0281, r24
    20a8:	10 c0       	rjmp	.+32     	; 0x20ca <__LCD_putchar+0xbe>
    20aa:	81 e0       	ldi	r24, 0x01	; 1
    20ac:	0e 94 65 0a 	call	0x14ca	; 0x14ca <SPKR_open>
    20b0:	64 ef       	ldi	r22, 0xF4	; 244
    20b2:	71 e0       	ldi	r23, 0x01	; 1
    20b4:	80 e0       	ldi	r24, 0x00	; 0
    20b6:	90 e0       	ldi	r25, 0x00	; 0
    20b8:	4d e7       	ldi	r20, 0x7D	; 125
    20ba:	50 e0       	ldi	r21, 0x00	; 0
    20bc:	24 e6       	ldi	r18, 0x64	; 100
    20be:	30 e0       	ldi	r19, 0x00	; 0
    20c0:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <SPKR_play_beep>
    20c4:	81 e0       	ldi	r24, 0x01	; 1
    20c6:	0e 94 03 12 	call	0x2406	; 0x2406 <SPKR_close>
    20ca:	00 e0       	ldi	r16, 0x00	; 0
    20cc:	10 e0       	ldi	r17, 0x00	; 0
    20ce:	80 91 82 02 	lds	r24, 0x0282
    20d2:	60 91 81 02 	lds	r22, 0x0281
    20d6:	0e 94 1f 09 	call	0x123e	; 0x123e <LCD_set_PGC_addr>
    20da:	00 23       	and	r16, r16
    20dc:	51 f1       	breq	.+84     	; 0x2132 <__LCD_putchar+0x126>
    20de:	85 e0       	ldi	r24, 0x05	; 5
    20e0:	f8 9e       	mul	r15, r24
    20e2:	c0 01       	movw	r24, r0
    20e4:	11 24       	eor	r1, r1
    20e6:	ec 01       	movw	r28, r24
    20e8:	c3 5f       	subi	r28, 0xF3	; 243
    20ea:	de 4f       	sbci	r29, 0xFE	; 254
    20ec:	8c 01       	movw	r16, r24
    20ee:	0e 5e       	subi	r16, 0xEE	; 238
    20f0:	1e 4f       	sbci	r17, 0xFE	; 254
    20f2:	fe 01       	movw	r30, r28
    20f4:	84 91       	lpm	r24, Z+
    20f6:	61 e0       	ldi	r22, 0x01	; 1
    20f8:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    20fc:	21 96       	adiw	r28, 0x01	; 1
    20fe:	c0 17       	cp	r28, r16
    2100:	d1 07       	cpc	r29, r17
    2102:	b9 f7       	brne	.-18     	; 0x20f2 <__LCD_putchar+0xe6>
    2104:	80 e0       	ldi	r24, 0x00	; 0
    2106:	61 e0       	ldi	r22, 0x01	; 1
    2108:	0e 94 38 09 	call	0x1270	; 0x1270 <LCD_write>
    210c:	80 91 81 02 	lds	r24, 0x0281
    2110:	8a 5f       	subi	r24, 0xFA	; 250
    2112:	80 93 81 02 	sts	0x0281, r24
    2116:	80 91 81 02 	lds	r24, 0x0281
    211a:	90 e0       	ldi	r25, 0x00	; 0
    211c:	8c 37       	cpi	r24, 0x7C	; 124
    211e:	91 05       	cpc	r25, r1
    2120:	3c f0       	brlt	.+14     	; 0x2130 <__LCD_putchar+0x124>
    2122:	10 92 81 02 	sts	0x0281, r1
    2126:	80 91 82 02 	lds	r24, 0x0282
    212a:	81 50       	subi	r24, 0x01	; 1
    212c:	80 93 82 02 	sts	0x0282, r24
    2130:	11 e0       	ldi	r17, 0x01	; 1
    2132:	80 91 82 02 	lds	r24, 0x0282
    2136:	83 70       	andi	r24, 0x03	; 3
    2138:	80 93 82 02 	sts	0x0282, r24
    213c:	11 30       	cpi	r17, 0x01	; 1
    213e:	59 f4       	brne	.+22     	; 0x2156 <__LCD_putchar+0x14a>
    2140:	80 91 83 02 	lds	r24, 0x0283
    2144:	81 30       	cpi	r24, 0x01	; 1
    2146:	39 f4       	brne	.+14     	; 0x2156 <__LCD_putchar+0x14a>
    2148:	e0 91 84 02 	lds	r30, 0x0284
    214c:	f0 91 85 02 	lds	r31, 0x0285
    2150:	30 97       	sbiw	r30, 0x00	; 0
    2152:	09 f0       	breq	.+2      	; 0x2156 <__LCD_putchar+0x14a>
    2154:	09 95       	icall
    2156:	80 e0       	ldi	r24, 0x00	; 0
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	df 91       	pop	r29
    215c:	cf 91       	pop	r28
    215e:	1f 91       	pop	r17
    2160:	0f 91       	pop	r16
    2162:	ff 90       	pop	r15
    2164:	08 95       	ret

00002166 <__LED_clr_pattern>:
    2166:	85 fd       	sbrc	r24, 5
    2168:	5d 98       	cbi	0x0b, 5	; 11
    216a:	86 fd       	sbrc	r24, 6
    216c:	5e 98       	cbi	0x0b, 6	; 11
    216e:	08 95       	ret

00002170 <__LED_init>:
    2170:	55 9a       	sbi	0x0a, 5	; 10
    2172:	56 9a       	sbi	0x0a, 6	; 10
    2174:	08 95       	ret

00002176 <__LED_set_pattern>:
    2176:	85 fd       	sbrc	r24, 5
    2178:	5d 9a       	sbi	0x0b, 5	; 11
    217a:	86 fd       	sbrc	r24, 6
    217c:	5e 9a       	sbi	0x0b, 6	; 11
    217e:	08 95       	ret

00002180 <ATMEGA_open>:
    2180:	80 e0       	ldi	r24, 0x00	; 0
    2182:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    2186:	88 23       	and	r24, r24
    2188:	51 f4       	brne	.+20     	; 0x219e <ATMEGA_open+0x1e>
    218a:	f8 94       	cli
    218c:	0e 94 10 13 	call	0x2620	; 0x2620 <__ATMEGA_init>
    2190:	81 e0       	ldi	r24, 0x01	; 1
    2192:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <ATMEGA_set_clk_mode>
    2196:	80 e0       	ldi	r24, 0x00	; 0
    2198:	61 e0       	ldi	r22, 0x01	; 1
    219a:	0e 94 07 0b 	call	0x160e	; 0x160e <SYS_set_state>
    219e:	80 e0       	ldi	r24, 0x00	; 0
    21a0:	91 e0       	ldi	r25, 0x01	; 1
    21a2:	08 95       	ret

000021a4 <ATMEGA_set_clk_mode>:
    21a4:	81 30       	cpi	r24, 0x01	; 1
    21a6:	49 f0       	breq	.+18     	; 0x21ba <ATMEGA_set_clk_mode+0x16>
    21a8:	f8 94       	cli
    21aa:	81 30       	cpi	r24, 0x01	; 1
    21ac:	20 f1       	brcs	.+72     	; 0x21f6 <ATMEGA_set_clk_mode+0x52>
    21ae:	82 30       	cpi	r24, 0x02	; 2
    21b0:	b1 f0       	breq	.+44     	; 0x21de <ATMEGA_set_clk_mode+0x3a>
    21b2:	83 30       	cpi	r24, 0x03	; 3
    21b4:	09 f0       	breq	.+2      	; 0x21b8 <ATMEGA_set_clk_mode+0x14>
    21b6:	45 c0       	rjmp	.+138    	; 0x2242 <ATMEGA_set_clk_mode+0x9e>
    21b8:	17 c0       	rjmp	.+46     	; 0x21e8 <ATMEGA_set_clk_mode+0x44>
    21ba:	2c 9a       	sbi	0x05, 4	; 5
    21bc:	80 e8       	ldi	r24, 0x80	; 128
    21be:	80 93 61 00 	sts	0x0061, r24
    21c2:	10 92 61 00 	sts	0x0061, r1
    21c6:	80 e0       	ldi	r24, 0x00	; 0
    21c8:	90 e0       	ldi	r25, 0x00	; 0
    21ca:	00 00       	nop
    21cc:	01 96       	adiw	r24, 0x01	; 1
    21ce:	88 32       	cpi	r24, 0x28	; 40
    21d0:	91 05       	cpc	r25, r1
    21d2:	d9 f7       	brne	.-10     	; 0x21ca <ATMEGA_set_clk_mode+0x26>
    21d4:	10 92 68 00 	sts	0x0068, r1
    21d8:	10 92 6b 00 	sts	0x006B, r1
    21dc:	08 95       	ret
    21de:	80 e8       	ldi	r24, 0x80	; 128
    21e0:	80 93 61 00 	sts	0x0061, r24
    21e4:	83 e0       	ldi	r24, 0x03	; 3
    21e6:	04 c0       	rjmp	.+8      	; 0x21f0 <ATMEGA_set_clk_mode+0x4c>
    21e8:	80 e8       	ldi	r24, 0x80	; 128
    21ea:	80 93 61 00 	sts	0x0061, r24
    21ee:	88 e0       	ldi	r24, 0x08	; 8
    21f0:	80 93 61 00 	sts	0x0061, r24
    21f4:	28 c0       	rjmp	.+80     	; 0x2246 <ATMEGA_set_clk_mode+0xa2>
    21f6:	80 e0       	ldi	r24, 0x00	; 0
    21f8:	90 e0       	ldi	r25, 0x00	; 0
    21fa:	00 00       	nop
    21fc:	01 96       	adiw	r24, 0x01	; 1
    21fe:	2d e6       	ldi	r18, 0x6D	; 109
    2200:	80 36       	cpi	r24, 0x60	; 96
    2202:	92 07       	cpc	r25, r18
    2204:	d1 f7       	brne	.-12     	; 0x21fa <ATMEGA_set_clk_mode+0x56>
    2206:	2c 98       	cbi	0x05, 4	; 5
    2208:	80 e0       	ldi	r24, 0x00	; 0
    220a:	90 e0       	ldi	r25, 0x00	; 0
    220c:	00 00       	nop
    220e:	01 96       	adiw	r24, 0x01	; 1
    2210:	2d e6       	ldi	r18, 0x6D	; 109
    2212:	80 36       	cpi	r24, 0x60	; 96
    2214:	92 07       	cpc	r25, r18
    2216:	d1 f7       	brne	.-12     	; 0x220c <ATMEGA_set_clk_mode+0x68>
    2218:	10 92 7a 00 	sts	0x007A, r1
    221c:	8f ef       	ldi	r24, 0xFF	; 255
    221e:	80 93 64 00 	sts	0x0064, r24
    2222:	80 91 68 00 	lds	r24, 0x0068
    2226:	81 60       	ori	r24, 0x01	; 1
    2228:	80 93 68 00 	sts	0x0068, r24
    222c:	80 91 6b 00 	lds	r24, 0x006B
    2230:	84 60       	ori	r24, 0x04	; 4
    2232:	80 93 6b 00 	sts	0x006B, r24
    2236:	78 94       	sei
    2238:	83 b7       	in	r24, 0x33	; 51
    223a:	81 60       	ori	r24, 0x01	; 1
    223c:	83 bf       	out	0x33, r24	; 51
    223e:	88 95       	sleep
    2240:	08 95       	ret
    2242:	82 30       	cpi	r24, 0x02	; 2
    2244:	08 f0       	brcs	.+2      	; 0x2248 <ATMEGA_set_clk_mode+0xa4>
    2246:	78 94       	sei
    2248:	08 95       	ret

0000224a <SPI_open>:
    224a:	0f 93       	push	r16
    224c:	1f 93       	push	r17
    224e:	0e 94 3c 13 	call	0x2678	; 0x2678 <__SPI_init>
    2252:	80 e0       	ldi	r24, 0x00	; 0
    2254:	6b e2       	ldi	r22, 0x2B	; 43
    2256:	73 e1       	ldi	r23, 0x13	; 19
    2258:	0e 94 70 11 	call	0x22e0	; 0x22e0 <SPI_set_config_func>
    225c:	81 e0       	ldi	r24, 0x01	; 1
    225e:	63 e2       	ldi	r22, 0x23	; 35
    2260:	73 e1       	ldi	r23, 0x13	; 19
    2262:	0e 94 70 11 	call	0x22e0	; 0x22e0 <SPI_set_config_func>
    2266:	82 e0       	ldi	r24, 0x02	; 2
    2268:	6b e1       	ldi	r22, 0x1B	; 27
    226a:	73 e1       	ldi	r23, 0x13	; 19
    226c:	0e 94 70 11 	call	0x22e0	; 0x22e0 <SPI_set_config_func>
    2270:	86 e0       	ldi	r24, 0x06	; 6
    2272:	63 e3       	ldi	r22, 0x33	; 51
    2274:	73 e1       	ldi	r23, 0x13	; 19
    2276:	0e 94 70 11 	call	0x22e0	; 0x22e0 <SPI_set_config_func>
    227a:	03 e1       	ldi	r16, 0x13	; 19
    227c:	13 e1       	ldi	r17, 0x13	; 19
    227e:	83 e0       	ldi	r24, 0x03	; 3
    2280:	b8 01       	movw	r22, r16
    2282:	0e 94 70 11 	call	0x22e0	; 0x22e0 <SPI_set_config_func>
    2286:	84 e0       	ldi	r24, 0x04	; 4
    2288:	b8 01       	movw	r22, r16
    228a:	0e 94 70 11 	call	0x22e0	; 0x22e0 <SPI_set_config_func>
    228e:	85 e0       	ldi	r24, 0x05	; 5
    2290:	b8 01       	movw	r22, r16
    2292:	0e 94 70 11 	call	0x22e0	; 0x22e0 <SPI_set_config_func>
    2296:	87 e0       	ldi	r24, 0x07	; 7
    2298:	b8 01       	movw	r22, r16
    229a:	0e 94 70 11 	call	0x22e0	; 0x22e0 <SPI_set_config_func>
    229e:	82 e0       	ldi	r24, 0x02	; 2
    22a0:	61 e0       	ldi	r22, 0x01	; 1
    22a2:	0e 94 07 0b 	call	0x160e	; 0x160e <SYS_set_state>
    22a6:	8f ef       	ldi	r24, 0xFF	; 255
    22a8:	80 93 86 02 	sts	0x0286, r24
    22ac:	87 e0       	ldi	r24, 0x07	; 7
    22ae:	0e 94 74 09 	call	0x12e8	; 0x12e8 <SPI_set_slave_addr>
    22b2:	82 e0       	ldi	r24, 0x02	; 2
    22b4:	91 e0       	ldi	r25, 0x01	; 1
    22b6:	1f 91       	pop	r17
    22b8:	0f 91       	pop	r16
    22ba:	08 95       	ret

000022bc <SPI_receive>:
    22bc:	1f 93       	push	r17
    22be:	16 2f       	mov	r17, r22
    22c0:	0e 94 74 09 	call	0x12e8	; 0x12e8 <SPI_set_slave_addr>
    22c4:	82 e0       	ldi	r24, 0x02	; 2
    22c6:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    22ca:	81 30       	cpi	r24, 0x01	; 1
    22cc:	11 f0       	breq	.+4      	; 0x22d2 <SPI_receive+0x16>
    22ce:	80 e0       	ldi	r24, 0x00	; 0
    22d0:	05 c0       	rjmp	.+10     	; 0x22dc <SPI_receive+0x20>
    22d2:	1e bd       	out	0x2e, r17	; 46
    22d4:	0d b4       	in	r0, 0x2d	; 45
    22d6:	07 fe       	sbrs	r0, 7
    22d8:	fd cf       	rjmp	.-6      	; 0x22d4 <SPI_receive+0x18>
    22da:	8e b5       	in	r24, 0x2e	; 46
    22dc:	1f 91       	pop	r17
    22de:	08 95       	ret

000022e0 <SPI_set_config_func>:
    22e0:	e8 2f       	mov	r30, r24
    22e2:	f0 e0       	ldi	r31, 0x00	; 0
    22e4:	ee 0f       	add	r30, r30
    22e6:	ff 1f       	adc	r31, r31
    22e8:	ef 5b       	subi	r30, 0xBF	; 191
    22ea:	fd 4f       	sbci	r31, 0xFD	; 253
    22ec:	71 83       	std	Z+1, r23	; 0x01
    22ee:	60 83       	st	Z, r22
    22f0:	08 95       	ret

000022f2 <__SPKR_TIMER1_COMPA_vect>:
    22f2:	0e 94 93 11 	call	0x2326	; 0x2326 <SPKR_clk>
    22f6:	08 95       	ret

000022f8 <SPKR_beep>:
    22f8:	9b 01       	movw	r18, r22
    22fa:	ac 01       	movw	r20, r24
    22fc:	80 91 52 02 	lds	r24, 0x0252
    2300:	88 23       	and	r24, r24
    2302:	81 f0       	breq	.+32     	; 0x2324 <SPKR_beep+0x2c>
    2304:	da 01       	movw	r26, r20
    2306:	c9 01       	movw	r24, r18
    2308:	88 0f       	add	r24, r24
    230a:	99 1f       	adc	r25, r25
    230c:	aa 1f       	adc	r26, r26
    230e:	bb 1f       	adc	r27, r27
    2310:	90 93 5e 02 	sts	0x025E, r25
    2314:	80 93 5d 02 	sts	0x025D, r24
    2318:	21 15       	cp	r18, r1
    231a:	31 05       	cpc	r19, r1
    231c:	41 05       	cpc	r20, r1
    231e:	51 05       	cpc	r21, r1
    2320:	09 f4       	brne	.+2      	; 0x2324 <SPKR_beep+0x2c>
    2322:	5f 98       	cbi	0x0b, 7	; 11
    2324:	08 95       	ret

00002326 <SPKR_clk>:
    2326:	80 91 53 02 	lds	r24, 0x0253
    232a:	90 91 54 02 	lds	r25, 0x0254
    232e:	a0 91 55 02 	lds	r26, 0x0255
    2332:	b0 91 56 02 	lds	r27, 0x0256
    2336:	20 91 57 02 	lds	r18, 0x0257
    233a:	30 91 58 02 	lds	r19, 0x0258
    233e:	40 91 59 02 	lds	r20, 0x0259
    2342:	50 91 5a 02 	lds	r21, 0x025A
    2346:	28 0f       	add	r18, r24
    2348:	39 1f       	adc	r19, r25
    234a:	4a 1f       	adc	r20, r26
    234c:	5b 1f       	adc	r21, r27
    234e:	20 93 53 02 	sts	0x0253, r18
    2352:	30 93 54 02 	sts	0x0254, r19
    2356:	40 93 55 02 	sts	0x0255, r20
    235a:	50 93 56 02 	sts	0x0256, r21
    235e:	80 91 53 02 	lds	r24, 0x0253
    2362:	90 91 54 02 	lds	r25, 0x0254
    2366:	a0 91 55 02 	lds	r26, 0x0255
    236a:	b0 91 56 02 	lds	r27, 0x0256
    236e:	88 51       	subi	r24, 0x18	; 24
    2370:	96 4f       	sbci	r25, 0xF6	; 246
    2372:	a0 40       	sbci	r26, 0x00	; 0
    2374:	b0 40       	sbci	r27, 0x00	; 0
    2376:	bc f0       	brlt	.+46     	; 0x23a6 <SPKR_clk+0x80>
    2378:	8b b1       	in	r24, 0x0b	; 11
    237a:	80 58       	subi	r24, 0x80	; 128
    237c:	8b b9       	out	0x0b, r24	; 11
    237e:	80 91 53 02 	lds	r24, 0x0253
    2382:	90 91 54 02 	lds	r25, 0x0254
    2386:	a0 91 55 02 	lds	r26, 0x0255
    238a:	b0 91 56 02 	lds	r27, 0x0256
    238e:	88 51       	subi	r24, 0x18	; 24
    2390:	96 4f       	sbci	r25, 0xF6	; 246
    2392:	a0 40       	sbci	r26, 0x00	; 0
    2394:	b0 40       	sbci	r27, 0x00	; 0
    2396:	80 93 53 02 	sts	0x0253, r24
    239a:	90 93 54 02 	sts	0x0254, r25
    239e:	a0 93 55 02 	sts	0x0255, r26
    23a2:	b0 93 56 02 	sts	0x0256, r27
    23a6:	08 95       	ret

000023a8 <__SPKR_close_beep_mode>:
    23a8:	8a e0       	ldi	r24, 0x0A	; 10
    23aa:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    23ae:	81 30       	cpi	r24, 0x01	; 1
    23b0:	41 f4       	brne	.+16     	; 0x23c2 <__SPKR_close_beep_mode+0x1a>
    23b2:	0e 94 43 13 	call	0x2686	; 0x2686 <__SPKR_close>
    23b6:	10 92 52 02 	sts	0x0252, r1
    23ba:	8a e0       	ldi	r24, 0x0A	; 10
    23bc:	60 e0       	ldi	r22, 0x00	; 0
    23be:	0e 94 07 0b 	call	0x160e	; 0x160e <SYS_set_state>
    23c2:	08 95       	ret

000023c4 <__SPKR_close_tone_mode>:
    23c4:	89 e0       	ldi	r24, 0x09	; 9
    23c6:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    23ca:	81 30       	cpi	r24, 0x01	; 1
    23cc:	d9 f4       	brne	.+54     	; 0x2404 <__SPKR_close_tone_mode+0x40>
    23ce:	80 91 51 02 	lds	r24, 0x0251
    23d2:	88 23       	and	r24, r24
    23d4:	11 f0       	breq	.+4      	; 0x23da <__SPKR_close_tone_mode+0x16>
    23d6:	0e 94 37 12 	call	0x246e	; 0x246e <__SPKR_stop>
    23da:	82 e0       	ldi	r24, 0x02	; 2
    23dc:	0e 94 43 13 	call	0x2686	; 0x2686 <__SPKR_close>
    23e0:	80 91 5f 02 	lds	r24, 0x025F
    23e4:	90 91 60 02 	lds	r25, 0x0260
    23e8:	00 97       	sbiw	r24, 0x00	; 0
    23ea:	31 f0       	breq	.+12     	; 0x23f8 <__SPKR_close_tone_mode+0x34>
    23ec:	0e 94 df 1b 	call	0x37be	; 0x37be <free>
    23f0:	10 92 60 02 	sts	0x0260, r1
    23f4:	10 92 5f 02 	sts	0x025F, r1
    23f8:	10 92 51 02 	sts	0x0251, r1
    23fc:	89 e0       	ldi	r24, 0x09	; 9
    23fe:	60 e0       	ldi	r22, 0x00	; 0
    2400:	0e 94 07 0b 	call	0x160e	; 0x160e <SYS_set_state>
    2404:	08 95       	ret

00002406 <SPKR_close>:
    2406:	81 30       	cpi	r24, 0x01	; 1
    2408:	29 f0       	breq	.+10     	; 0x2414 <SPKR_close+0xe>
    240a:	82 30       	cpi	r24, 0x02	; 2
    240c:	29 f4       	brne	.+10     	; 0x2418 <SPKR_close+0x12>
    240e:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__SPKR_close_tone_mode>
    2412:	08 95       	ret
    2414:	0e 94 d4 11 	call	0x23a8	; 0x23a8 <__SPKR_close_beep_mode>
    2418:	08 95       	ret

0000241a <__SPKR_init>:
    241a:	98 2f       	mov	r25, r24
    241c:	80 91 51 02 	lds	r24, 0x0251
    2420:	88 23       	and	r24, r24
    2422:	31 f4       	brne	.+12     	; 0x2430 <__SPKR_init+0x16>
    2424:	80 91 52 02 	lds	r24, 0x0252
    2428:	88 23       	and	r24, r24
    242a:	11 f4       	brne	.+4      	; 0x2430 <__SPKR_init+0x16>
    242c:	57 9a       	sbi	0x0a, 7	; 10
    242e:	5f 98       	cbi	0x0b, 7	; 11
    2430:	80 91 51 02 	lds	r24, 0x0251
    2434:	88 23       	and	r24, r24
    2436:	d1 f4       	brne	.+52     	; 0x246c <__SPKR_init+0x52>
    2438:	92 30       	cpi	r25, 0x02	; 2
    243a:	c1 f4       	brne	.+48     	; 0x246c <__SPKR_init+0x52>
    243c:	10 92 80 00 	sts	0x0080, r1
    2440:	10 92 81 00 	sts	0x0081, r1
    2444:	80 91 81 00 	lds	r24, 0x0081
    2448:	88 60       	ori	r24, 0x08	; 8
    244a:	80 93 81 00 	sts	0x0081, r24
    244e:	80 91 81 00 	lds	r24, 0x0081
    2452:	81 60       	ori	r24, 0x01	; 1
    2454:	80 93 81 00 	sts	0x0081, r24
    2458:	10 92 85 00 	sts	0x0085, r1
    245c:	10 92 84 00 	sts	0x0084, r1
    2460:	81 e0       	ldi	r24, 0x01	; 1
    2462:	80 93 89 00 	sts	0x0089, r24
    2466:	80 e9       	ldi	r24, 0x90	; 144
    2468:	80 93 88 00 	sts	0x0088, r24
    246c:	08 95       	ret

0000246e <__SPKR_stop>:
    246e:	ef e6       	ldi	r30, 0x6F	; 111
    2470:	f0 e0       	ldi	r31, 0x00	; 0
    2472:	80 81       	ld	r24, Z
    2474:	8d 7f       	andi	r24, 0xFD	; 253
    2476:	80 83       	st	Z, r24
    2478:	08 95       	ret

0000247a <SYS_init>:
    247a:	10 92 6e 02 	sts	0x026E, r1
    247e:	10 92 6f 02 	sts	0x026F, r1
    2482:	10 92 73 02 	sts	0x0273, r1
    2486:	10 92 70 02 	sts	0x0270, r1
    248a:	10 92 72 02 	sts	0x0272, r1
    248e:	10 92 74 02 	sts	0x0274, r1
    2492:	10 92 75 02 	sts	0x0275, r1
    2496:	10 92 76 02 	sts	0x0276, r1
    249a:	10 92 77 02 	sts	0x0277, r1
    249e:	10 92 78 02 	sts	0x0278, r1
    24a2:	10 92 79 02 	sts	0x0279, r1
    24a6:	10 92 7a 02 	sts	0x027A, r1
    24aa:	10 92 7b 02 	sts	0x027B, r1
    24ae:	10 92 7c 02 	sts	0x027C, r1
    24b2:	10 92 7d 02 	sts	0x027D, r1
    24b6:	10 92 7e 02 	sts	0x027E, r1
    24ba:	10 92 7f 02 	sts	0x027F, r1
    24be:	08 95       	ret

000024c0 <TMRSRVC_insert>:
    24c0:	cf 92       	push	r12
    24c2:	df 92       	push	r13
    24c4:	ef 92       	push	r14
    24c6:	ff 92       	push	r15
    24c8:	0f 93       	push	r16
    24ca:	1f 93       	push	r17
    24cc:	cf 93       	push	r28
    24ce:	df 93       	push	r29
    24d0:	ec 01       	movw	r28, r24
    24d2:	80 91 a5 02 	lds	r24, 0x02A5
    24d6:	88 23       	and	r24, r24
    24d8:	39 f4       	brne	.+14     	; 0x24e8 <TMRSRVC_insert+0x28>
    24da:	d0 93 a7 02 	sts	0x02A7, r29
    24de:	c0 93 a6 02 	sts	0x02A6, r28
    24e2:	0e 94 ee 12 	call	0x25dc	; 0x25dc <TMRSRVC_start>
    24e6:	47 c0       	rjmp	.+142    	; 0x2576 <TMRSRVC_insert+0xb6>
    24e8:	c0 90 a6 02 	lds	r12, 0x02A6
    24ec:	d0 90 a7 02 	lds	r13, 0x02A7
    24f0:	00 e0       	ldi	r16, 0x00	; 0
    24f2:	10 e0       	ldi	r17, 0x00	; 0
    24f4:	ee 24       	eor	r14, r14
    24f6:	ff 24       	eor	r15, r15
    24f8:	37 c0       	rjmp	.+110    	; 0x2568 <TMRSRVC_insert+0xa8>
    24fa:	a8 81       	ld	r26, Y
    24fc:	b9 81       	ldd	r27, Y+1	; 0x01
    24fe:	fd 01       	movw	r30, r26
    2500:	64 81       	ldd	r22, Z+4	; 0x04
    2502:	75 81       	ldd	r23, Z+5	; 0x05
    2504:	f6 01       	movw	r30, r12
    2506:	40 81       	ld	r20, Z
    2508:	51 81       	ldd	r21, Z+1	; 0x01
    250a:	fa 01       	movw	r30, r20
    250c:	84 81       	ldd	r24, Z+4	; 0x04
    250e:	95 81       	ldd	r25, Z+5	; 0x05
    2510:	9b 01       	movw	r18, r22
    2512:	28 1b       	sub	r18, r24
    2514:	39 0b       	sbc	r19, r25
    2516:	37 ff       	sbrs	r19, 7
    2518:	0f c0       	rjmp	.+30     	; 0x2538 <TMRSRVC_insert+0x78>
    251a:	86 1b       	sub	r24, r22
    251c:	97 0b       	sbc	r25, r23
    251e:	95 83       	std	Z+5, r25	; 0x05
    2520:	84 83       	std	Z+4, r24	; 0x04
    2522:	db 82       	std	Y+3, r13	; 0x03
    2524:	ca 82       	std	Y+2, r12	; 0x02
    2526:	01 2b       	or	r16, r17
    2528:	29 f4       	brne	.+10     	; 0x2534 <TMRSRVC_insert+0x74>
    252a:	d0 93 a7 02 	sts	0x02A7, r29
    252e:	c0 93 a6 02 	sts	0x02A6, r28
    2532:	21 c0       	rjmp	.+66     	; 0x2576 <TMRSRVC_insert+0xb6>
    2534:	f7 01       	movw	r30, r14
    2536:	0c c0       	rjmp	.+24     	; 0x2550 <TMRSRVC_insert+0x90>
    2538:	f6 01       	movw	r30, r12
    253a:	82 81       	ldd	r24, Z+2	; 0x02
    253c:	93 81       	ldd	r25, Z+3	; 0x03
    253e:	21 15       	cp	r18, r1
    2540:	31 05       	cpc	r19, r1
    2542:	49 f4       	brne	.+18     	; 0x2556 <TMRSRVC_insert+0x96>
    2544:	fd 01       	movw	r30, r26
    2546:	15 82       	std	Z+5, r1	; 0x05
    2548:	14 82       	std	Z+4, r1	; 0x04
    254a:	9b 83       	std	Y+3, r25	; 0x03
    254c:	8a 83       	std	Y+2, r24	; 0x02
    254e:	f6 01       	movw	r30, r12
    2550:	d3 83       	std	Z+3, r29	; 0x03
    2552:	c2 83       	std	Z+2, r28	; 0x02
    2554:	10 c0       	rjmp	.+32     	; 0x2576 <TMRSRVC_insert+0xb6>
    2556:	fd 01       	movw	r30, r26
    2558:	35 83       	std	Z+5, r19	; 0x05
    255a:	24 83       	std	Z+4, r18	; 0x04
    255c:	00 97       	sbiw	r24, 0x00	; 0
    255e:	b9 f3       	breq	.-18     	; 0x254e <TMRSRVC_insert+0x8e>
    2560:	0f 5f       	subi	r16, 0xFF	; 255
    2562:	1f 4f       	sbci	r17, 0xFF	; 255
    2564:	76 01       	movw	r14, r12
    2566:	6c 01       	movw	r12, r24
    2568:	80 91 a5 02 	lds	r24, 0x02A5
    256c:	90 e0       	ldi	r25, 0x00	; 0
    256e:	08 17       	cp	r16, r24
    2570:	19 07       	cpc	r17, r25
    2572:	18 f2       	brcs	.-122    	; 0x24fa <TMRSRVC_insert+0x3a>
    2574:	ec cf       	rjmp	.-40     	; 0x254e <TMRSRVC_insert+0x8e>
    2576:	80 91 a5 02 	lds	r24, 0x02A5
    257a:	8f 5f       	subi	r24, 0xFF	; 255
    257c:	80 93 a5 02 	sts	0x02A5, r24
    2580:	df 91       	pop	r29
    2582:	cf 91       	pop	r28
    2584:	1f 91       	pop	r17
    2586:	0f 91       	pop	r16
    2588:	ff 90       	pop	r15
    258a:	ef 90       	pop	r14
    258c:	df 90       	pop	r13
    258e:	cf 90       	pop	r12
    2590:	08 95       	ret

00002592 <TMRSRVC_open>:
    2592:	88 e0       	ldi	r24, 0x08	; 8
    2594:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    2598:	88 23       	and	r24, r24
    259a:	b9 f4       	brne	.+46     	; 0x25ca <TMRSRVC_open+0x38>
    259c:	10 92 a5 02 	sts	0x02A5, r1
    25a0:	10 92 a7 02 	sts	0x02A7, r1
    25a4:	10 92 a6 02 	sts	0x02A6, r1
    25a8:	10 92 61 02 	sts	0x0261, r1
    25ac:	10 92 62 02 	sts	0x0262, r1
    25b0:	80 e1       	ldi	r24, 0x10	; 16
    25b2:	6f e5       	ldi	r22, 0x5F	; 95
    25b4:	73 e1       	ldi	r23, 0x13	; 19
    25b6:	0e 94 ff 12 	call	0x25fe	; 0x25fe <__ISR_attach>
    25ba:	0e 94 66 13 	call	0x26cc	; 0x26cc <__TMRSRVC_init>
    25be:	0e 94 e8 12 	call	0x25d0	; 0x25d0 <__TMRSRVC_start>
    25c2:	88 e0       	ldi	r24, 0x08	; 8
    25c4:	61 e0       	ldi	r22, 0x01	; 1
    25c6:	0e 94 07 0b 	call	0x160e	; 0x160e <SYS_set_state>
    25ca:	88 e0       	ldi	r24, 0x08	; 8
    25cc:	91 e0       	ldi	r25, 0x01	; 1
    25ce:	08 95       	ret

000025d0 <__TMRSRVC_start>:
    25d0:	ee e6       	ldi	r30, 0x6E	; 110
    25d2:	f0 e0       	ldi	r31, 0x00	; 0
    25d4:	80 81       	ld	r24, Z
    25d6:	82 60       	ori	r24, 0x02	; 2
    25d8:	80 83       	st	Z, r24
    25da:	08 95       	ret

000025dc <TMRSRVC_start>:
    25dc:	81 e0       	ldi	r24, 0x01	; 1
    25de:	80 93 62 02 	sts	0x0262, r24
    25e2:	08 95       	ret

000025e4 <I2C_enable>:
    25e4:	80 91 a8 02 	lds	r24, 0x02A8
    25e8:	81 30       	cpi	r24, 0x01	; 1
    25ea:	29 f4       	brne	.+10     	; 0x25f6 <I2C_enable+0x12>
    25ec:	80 91 bc 00 	lds	r24, 0x00BC
    25f0:	84 60       	ori	r24, 0x04	; 4
    25f2:	80 93 bc 00 	sts	0x00BC, r24
    25f6:	08 95       	ret

000025f8 <__I2C_init>:
    25f8:	38 98       	cbi	0x07, 0	; 7
    25fa:	39 98       	cbi	0x07, 1	; 7
    25fc:	08 95       	ret

000025fe <__ISR_attach>:
    25fe:	80 32       	cpi	r24, 0x20	; 32
    2600:	18 f0       	brcs	.+6      	; 0x2608 <__ISR_attach+0xa>
    2602:	20 e0       	ldi	r18, 0x00	; 0
    2604:	30 e0       	ldi	r19, 0x00	; 0
    2606:	0a c0       	rjmp	.+20     	; 0x261c <__ISR_attach+0x1e>
    2608:	e8 2f       	mov	r30, r24
    260a:	f0 e0       	ldi	r31, 0x00	; 0
    260c:	ee 0f       	add	r30, r30
    260e:	ff 1f       	adc	r31, r31
    2610:	ef 5f       	subi	r30, 0xFF	; 255
    2612:	fd 4f       	sbci	r31, 0xFD	; 253
    2614:	20 81       	ld	r18, Z
    2616:	31 81       	ldd	r19, Z+1	; 0x01
    2618:	71 83       	std	Z+1, r23	; 0x01
    261a:	60 83       	st	Z, r22
    261c:	c9 01       	movw	r24, r18
    261e:	08 95       	ret

00002620 <__ATMEGA_init>:
    2620:	24 9a       	sbi	0x04, 4	; 4
    2622:	2c 9a       	sbi	0x05, 4	; 5
    2624:	08 95       	ret

00002626 <SPI_default_config>:
    2626:	83 e5       	ldi	r24, 0x53	; 83
    2628:	8c bd       	out	0x2c, r24	; 44
    262a:	81 e0       	ldi	r24, 0x01	; 1
    262c:	8d bd       	out	0x2d, r24	; 45
    262e:	8d e0       	ldi	r24, 0x0D	; 13
    2630:	8a 95       	dec	r24
    2632:	f1 f7       	brne	.-4      	; 0x2630 <SPI_default_config+0xa>
    2634:	08 95       	ret

00002636 <SPI_ATtiny0_config>:
    2636:	83 e5       	ldi	r24, 0x53	; 83
    2638:	8c bd       	out	0x2c, r24	; 44
    263a:	1d bc       	out	0x2d, r1	; 45
    263c:	84 ef       	ldi	r24, 0xF4	; 244
    263e:	91 e0       	ldi	r25, 0x01	; 1
    2640:	01 97       	sbiw	r24, 0x01	; 1
    2642:	f1 f7       	brne	.-4      	; 0x2640 <SPI_ATtiny0_config+0xa>
    2644:	08 95       	ret

00002646 <SPI_PSXC_config>:
    2646:	8f e7       	ldi	r24, 0x7F	; 127
    2648:	8c bd       	out	0x2c, r24	; 44
    264a:	1d bc       	out	0x2d, r1	; 45
    264c:	84 ef       	ldi	r24, 0xF4	; 244
    264e:	91 e0       	ldi	r25, 0x01	; 1
    2650:	01 97       	sbiw	r24, 0x01	; 1
    2652:	f1 f7       	brne	.-4      	; 0x2650 <SPI_PSXC_config+0xa>
    2654:	08 95       	ret

00002656 <SPI_LCD_config>:
    2656:	83 e5       	ldi	r24, 0x53	; 83
    2658:	8c bd       	out	0x2c, r24	; 44
    265a:	81 e0       	ldi	r24, 0x01	; 1
    265c:	8d bd       	out	0x2d, r24	; 45
    265e:	8d e0       	ldi	r24, 0x0D	; 13
    2660:	8a 95       	dec	r24
    2662:	f1 f7       	brne	.-4      	; 0x2660 <SPI_LCD_config+0xa>
    2664:	08 95       	ret

00002666 <SPI_FLASH_config>:
    2666:	83 e5       	ldi	r24, 0x53	; 83
    2668:	8c bd       	out	0x2c, r24	; 44
    266a:	81 e0       	ldi	r24, 0x01	; 1
    266c:	8d bd       	out	0x2d, r24	; 45
    266e:	84 ef       	ldi	r24, 0xF4	; 244
    2670:	91 e0       	ldi	r25, 0x01	; 1
    2672:	01 97       	sbiw	r24, 0x01	; 1
    2674:	f1 f7       	brne	.-4      	; 0x2672 <SPI_FLASH_config+0xc>
    2676:	08 95       	ret

00002678 <__SPI_init>:
    2678:	25 9a       	sbi	0x04, 5	; 4
    267a:	26 98       	cbi	0x04, 6	; 4
    267c:	27 9a       	sbi	0x04, 7	; 4
    267e:	20 9a       	sbi	0x04, 0	; 4
    2680:	21 9a       	sbi	0x04, 1	; 4
    2682:	22 9a       	sbi	0x04, 2	; 4
    2684:	08 95       	ret

00002686 <__SPKR_close>:
    2686:	82 30       	cpi	r24, 0x02	; 2
    2688:	29 f4       	brne	.+10     	; 0x2694 <__SPKR_close+0xe>
    268a:	80 91 81 00 	lds	r24, 0x0081
    268e:	8e 7f       	andi	r24, 0xFE	; 254
    2690:	80 93 81 00 	sts	0x0081, r24
    2694:	80 91 51 02 	lds	r24, 0x0251
    2698:	81 30       	cpi	r24, 0x01	; 1
    269a:	31 f4       	brne	.+12     	; 0x26a8 <__SPKR_close+0x22>
    269c:	80 91 52 02 	lds	r24, 0x0252
    26a0:	81 30       	cpi	r24, 0x01	; 1
    26a2:	11 f4       	brne	.+4      	; 0x26a8 <__SPKR_close+0x22>
    26a4:	00 00       	nop
    26a6:	08 95       	ret
    26a8:	80 91 51 02 	lds	r24, 0x0251
    26ac:	81 30       	cpi	r24, 0x01	; 1
    26ae:	21 f0       	breq	.+8      	; 0x26b8 <__SPKR_close+0x32>
    26b0:	80 91 52 02 	lds	r24, 0x0252
    26b4:	81 30       	cpi	r24, 0x01	; 1
    26b6:	11 f4       	brne	.+4      	; 0x26bc <__SPKR_close+0x36>
    26b8:	5f 98       	cbi	0x0b, 7	; 11
    26ba:	57 98       	cbi	0x0a, 7	; 10
    26bc:	08 95       	ret

000026be <__TIMER0_COMPA_vect>:
    26be:	0e 94 6f 13 	call	0x26de	; 0x26de <TMRSRVC_tick>
    26c2:	0e 94 af 13 	call	0x275e	; 0x275e <STEPPER_clk>
    26c6:	0e 94 88 13 	call	0x2710	; 0x2710 <SPKR_beep_clk>
    26ca:	08 95       	ret

000026cc <__TMRSRVC_init>:
    26cc:	84 b5       	in	r24, 0x24	; 36
    26ce:	82 60       	ori	r24, 0x02	; 2
    26d0:	84 bd       	out	0x24, r24	; 36
    26d2:	85 b5       	in	r24, 0x25	; 37
    26d4:	84 60       	ori	r24, 0x04	; 4
    26d6:	85 bd       	out	0x25, r24	; 37
    26d8:	8e e4       	ldi	r24, 0x4E	; 78
    26da:	87 bd       	out	0x27, r24	; 39
    26dc:	08 95       	ret

000026de <TMRSRVC_tick>:
    26de:	88 e0       	ldi	r24, 0x08	; 8
    26e0:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    26e4:	88 23       	and	r24, r24
    26e6:	11 f4       	brne	.+4      	; 0x26ec <TMRSRVC_tick+0xe>
    26e8:	84 e0       	ldi	r24, 0x04	; 4
    26ea:	08 95       	ret
    26ec:	80 91 62 02 	lds	r24, 0x0262
    26f0:	88 23       	and	r24, r24
    26f2:	11 f4       	brne	.+4      	; 0x26f8 <TMRSRVC_tick+0x1a>
    26f4:	83 e0       	ldi	r24, 0x03	; 3
    26f6:	08 95       	ret
    26f8:	80 91 61 02 	lds	r24, 0x0261
    26fc:	88 23       	and	r24, r24
    26fe:	11 f0       	breq	.+4      	; 0x2704 <TMRSRVC_tick+0x26>
    2700:	82 e0       	ldi	r24, 0x02	; 2
    2702:	08 95       	ret
    2704:	0e 94 43 16 	call	0x2c86	; 0x2c86 <TMRSRVC_process>
    2708:	81 30       	cpi	r24, 0x01	; 1
    270a:	e1 f3       	breq	.-8      	; 0x2704 <TMRSRVC_tick+0x26>
    270c:	80 e0       	ldi	r24, 0x00	; 0
    270e:	08 95       	ret

00002710 <SPKR_beep_clk>:
    2710:	80 91 52 02 	lds	r24, 0x0252
    2714:	81 30       	cpi	r24, 0x01	; 1
    2716:	11 f5       	brne	.+68     	; 0x275c <SPKR_beep_clk+0x4c>
    2718:	80 91 5b 02 	lds	r24, 0x025B
    271c:	90 91 5c 02 	lds	r25, 0x025C
    2720:	20 91 5d 02 	lds	r18, 0x025D
    2724:	30 91 5e 02 	lds	r19, 0x025E
    2728:	28 0f       	add	r18, r24
    272a:	39 1f       	adc	r19, r25
    272c:	30 93 5c 02 	sts	0x025C, r19
    2730:	20 93 5b 02 	sts	0x025B, r18
    2734:	80 91 5b 02 	lds	r24, 0x025B
    2738:	90 91 5c 02 	lds	r25, 0x025C
    273c:	88 5e       	subi	r24, 0xE8	; 232
    273e:	93 40       	sbci	r25, 0x03	; 3
    2740:	6c f0       	brlt	.+26     	; 0x275c <SPKR_beep_clk+0x4c>
    2742:	8b b1       	in	r24, 0x0b	; 11
    2744:	80 58       	subi	r24, 0x80	; 128
    2746:	8b b9       	out	0x0b, r24	; 11
    2748:	80 91 5b 02 	lds	r24, 0x025B
    274c:	90 91 5c 02 	lds	r25, 0x025C
    2750:	88 5e       	subi	r24, 0xE8	; 232
    2752:	93 40       	sbci	r25, 0x03	; 3
    2754:	90 93 5c 02 	sts	0x025C, r25
    2758:	80 93 5b 02 	sts	0x025B, r24
    275c:	08 95       	ret

0000275e <STEPPER_clk>:
    275e:	87 e0       	ldi	r24, 0x07	; 7
    2760:	0e 94 bf 0a 	call	0x157e	; 0x157e <SYS_get_state>
    2764:	81 30       	cpi	r24, 0x01	; 1
    2766:	09 f0       	breq	.+2      	; 0x276a <STEPPER_clk+0xc>
    2768:	aa c0       	rjmp	.+340    	; 0x28be <STEPPER_clk+0x160>
    276a:	80 91 b7 02 	lds	r24, 0x02B7
    276e:	90 91 b8 02 	lds	r25, 0x02B8
    2772:	89 2b       	or	r24, r25
    2774:	09 f1       	breq	.+66     	; 0x27b8 <STEPPER_clk+0x5a>
    2776:	80 91 db 02 	lds	r24, 0x02DB
    277a:	90 91 dc 02 	lds	r25, 0x02DC
    277e:	20 91 b7 02 	lds	r18, 0x02B7
    2782:	30 91 b8 02 	lds	r19, 0x02B8
    2786:	82 0f       	add	r24, r18
    2788:	93 1f       	adc	r25, r19
    278a:	90 93 dc 02 	sts	0x02DC, r25
    278e:	80 93 db 02 	sts	0x02DB, r24
    2792:	80 91 db 02 	lds	r24, 0x02DB
    2796:	90 91 dc 02 	lds	r25, 0x02DC
    279a:	88 5e       	subi	r24, 0xE8	; 232
    279c:	93 40       	sbci	r25, 0x03	; 3
    279e:	a4 f0       	brlt	.+40     	; 0x27c8 <STEPPER_clk+0x6a>
    27a0:	80 91 db 02 	lds	r24, 0x02DB
    27a4:	90 91 dc 02 	lds	r25, 0x02DC
    27a8:	88 5e       	subi	r24, 0xE8	; 232
    27aa:	93 40       	sbci	r25, 0x03	; 3
    27ac:	90 93 dc 02 	sts	0x02DC, r25
    27b0:	80 93 db 02 	sts	0x02DB, r24
    27b4:	41 e0       	ldi	r20, 0x01	; 1
    27b6:	09 c0       	rjmp	.+18     	; 0x27ca <STEPPER_clk+0x6c>
    27b8:	80 91 af 02 	lds	r24, 0x02AF
    27bc:	90 91 b0 02 	lds	r25, 0x02B0
    27c0:	90 93 b4 02 	sts	0x02B4, r25
    27c4:	80 93 b3 02 	sts	0x02B3, r24
    27c8:	40 e0       	ldi	r20, 0x00	; 0
    27ca:	80 91 b9 02 	lds	r24, 0x02B9
    27ce:	90 91 ba 02 	lds	r25, 0x02BA
    27d2:	89 2b       	or	r24, r25
    27d4:	09 f1       	breq	.+66     	; 0x2818 <STEPPER_clk+0xba>
    27d6:	80 91 dd 02 	lds	r24, 0x02DD
    27da:	90 91 de 02 	lds	r25, 0x02DE
    27de:	20 91 b9 02 	lds	r18, 0x02B9
    27e2:	30 91 ba 02 	lds	r19, 0x02BA
    27e6:	82 0f       	add	r24, r18
    27e8:	93 1f       	adc	r25, r19
    27ea:	90 93 de 02 	sts	0x02DE, r25
    27ee:	80 93 dd 02 	sts	0x02DD, r24
    27f2:	80 91 dd 02 	lds	r24, 0x02DD
    27f6:	90 91 de 02 	lds	r25, 0x02DE
    27fa:	88 5e       	subi	r24, 0xE8	; 232
    27fc:	93 40       	sbci	r25, 0x03	; 3
    27fe:	a4 f0       	brlt	.+40     	; 0x2828 <STEPPER_clk+0xca>
    2800:	80 91 dd 02 	lds	r24, 0x02DD
    2804:	90 91 de 02 	lds	r25, 0x02DE
    2808:	88 5e       	subi	r24, 0xE8	; 232
    280a:	93 40       	sbci	r25, 0x03	; 3
    280c:	90 93 de 02 	sts	0x02DE, r25
    2810:	80 93 dd 02 	sts	0x02DD, r24
    2814:	61 e0       	ldi	r22, 0x01	; 1
    2816:	09 c0       	rjmp	.+18     	; 0x282a <STEPPER_clk+0xcc>
    2818:	80 91 b1 02 	lds	r24, 0x02B1
    281c:	90 91 b2 02 	lds	r25, 0x02B2
    2820:	90 93 b6 02 	sts	0x02B6, r25
    2824:	80 93 b5 02 	sts	0x02B5, r24
    2828:	60 e0       	ldi	r22, 0x00	; 0
    282a:	84 2f       	mov	r24, r20
    282c:	0e 94 60 14 	call	0x28c0	; 0x28c0 <STEPPER_process_accel>
    2830:	80 91 d7 02 	lds	r24, 0x02D7
    2834:	90 91 d8 02 	lds	r25, 0x02D8
    2838:	20 91 b3 02 	lds	r18, 0x02B3
    283c:	30 91 b4 02 	lds	r19, 0x02B4
    2840:	28 0f       	add	r18, r24
    2842:	39 1f       	adc	r19, r25
    2844:	30 93 d8 02 	sts	0x02D8, r19
    2848:	20 93 d7 02 	sts	0x02D7, r18
    284c:	80 91 d7 02 	lds	r24, 0x02D7
    2850:	90 91 d8 02 	lds	r25, 0x02D8
    2854:	88 5e       	subi	r24, 0xE8	; 232
    2856:	93 40       	sbci	r25, 0x03	; 3
    2858:	14 f4       	brge	.+4      	; 0x285e <STEPPER_clk+0x100>
    285a:	40 e0       	ldi	r20, 0x00	; 0
    285c:	0b c0       	rjmp	.+22     	; 0x2874 <STEPPER_clk+0x116>
    285e:	80 91 d7 02 	lds	r24, 0x02D7
    2862:	90 91 d8 02 	lds	r25, 0x02D8
    2866:	88 5e       	subi	r24, 0xE8	; 232
    2868:	93 40       	sbci	r25, 0x03	; 3
    286a:	90 93 d8 02 	sts	0x02D8, r25
    286e:	80 93 d7 02 	sts	0x02D7, r24
    2872:	41 e0       	ldi	r20, 0x01	; 1
    2874:	80 91 d9 02 	lds	r24, 0x02D9
    2878:	90 91 da 02 	lds	r25, 0x02DA
    287c:	20 91 b5 02 	lds	r18, 0x02B5
    2880:	30 91 b6 02 	lds	r19, 0x02B6
    2884:	28 0f       	add	r18, r24
    2886:	39 1f       	adc	r19, r25
    2888:	30 93 da 02 	sts	0x02DA, r19
    288c:	20 93 d9 02 	sts	0x02D9, r18
    2890:	80 91 d9 02 	lds	r24, 0x02D9
    2894:	90 91 da 02 	lds	r25, 0x02DA
    2898:	88 5e       	subi	r24, 0xE8	; 232
    289a:	93 40       	sbci	r25, 0x03	; 3
    289c:	14 f4       	brge	.+4      	; 0x28a2 <STEPPER_clk+0x144>
    289e:	60 e0       	ldi	r22, 0x00	; 0
    28a0:	0b c0       	rjmp	.+22     	; 0x28b8 <STEPPER_clk+0x15a>
    28a2:	80 91 d9 02 	lds	r24, 0x02D9
    28a6:	90 91 da 02 	lds	r25, 0x02DA
    28aa:	88 5e       	subi	r24, 0xE8	; 232
    28ac:	93 40       	sbci	r25, 0x03	; 3
    28ae:	90 93 da 02 	sts	0x02DA, r25
    28b2:	80 93 d9 02 	sts	0x02D9, r24
    28b6:	61 e0       	ldi	r22, 0x01	; 1
    28b8:	84 2f       	mov	r24, r20
    28ba:	0e 94 a5 14 	call	0x294a	; 0x294a <STEPPER_process_run_mode>
    28be:	08 95       	ret

000028c0 <STEPPER_process_accel>:
    28c0:	88 23       	and	r24, r24
    28c2:	f1 f0       	breq	.+60     	; 0x2900 <STEPPER_process_accel+0x40>
    28c4:	20 91 af 02 	lds	r18, 0x02AF
    28c8:	30 91 b0 02 	lds	r19, 0x02B0
    28cc:	80 91 b3 02 	lds	r24, 0x02B3
    28d0:	90 91 b4 02 	lds	r25, 0x02B4
    28d4:	28 1b       	sub	r18, r24
    28d6:	39 0b       	sbc	r19, r25
    28d8:	12 16       	cp	r1, r18
    28da:	13 06       	cpc	r1, r19
    28dc:	34 f4       	brge	.+12     	; 0x28ea <STEPPER_process_accel+0x2a>
    28de:	80 91 b3 02 	lds	r24, 0x02B3
    28e2:	90 91 b4 02 	lds	r25, 0x02B4
    28e6:	01 96       	adiw	r24, 0x01	; 1
    28e8:	07 c0       	rjmp	.+14     	; 0x28f8 <STEPPER_process_accel+0x38>
    28ea:	23 2b       	or	r18, r19
    28ec:	49 f0       	breq	.+18     	; 0x2900 <STEPPER_process_accel+0x40>
    28ee:	80 91 b3 02 	lds	r24, 0x02B3
    28f2:	90 91 b4 02 	lds	r25, 0x02B4
    28f6:	01 97       	sbiw	r24, 0x01	; 1
    28f8:	90 93 b4 02 	sts	0x02B4, r25
    28fc:	80 93 b3 02 	sts	0x02B3, r24
    2900:	66 23       	and	r22, r22
    2902:	11 f1       	breq	.+68     	; 0x2948 <STEPPER_process_accel+0x88>
    2904:	20 91 b1 02 	lds	r18, 0x02B1
    2908:	30 91 b2 02 	lds	r19, 0x02B2
    290c:	80 91 b5 02 	lds	r24, 0x02B5
    2910:	90 91 b6 02 	lds	r25, 0x02B6
    2914:	28 1b       	sub	r18, r24
    2916:	39 0b       	sbc	r19, r25
    2918:	12 16       	cp	r1, r18
    291a:	13 06       	cpc	r1, r19
    291c:	54 f4       	brge	.+20     	; 0x2932 <STEPPER_process_accel+0x72>
    291e:	80 91 b5 02 	lds	r24, 0x02B5
    2922:	90 91 b6 02 	lds	r25, 0x02B6
    2926:	01 96       	adiw	r24, 0x01	; 1
    2928:	90 93 b6 02 	sts	0x02B6, r25
    292c:	80 93 b5 02 	sts	0x02B5, r24
    2930:	08 95       	ret
    2932:	23 2b       	or	r18, r19
    2934:	49 f0       	breq	.+18     	; 0x2948 <STEPPER_process_accel+0x88>
    2936:	80 91 b5 02 	lds	r24, 0x02B5
    293a:	90 91 b6 02 	lds	r25, 0x02B6
    293e:	01 97       	sbiw	r24, 0x01	; 1
    2940:	90 93 b6 02 	sts	0x02B6, r25
    2944:	80 93 b5 02 	sts	0x02B5, r24
    2948:	08 95       	ret

0000294a <STEPPER_process_run_mode>:
    294a:	0f 93       	push	r16
    294c:	1f 93       	push	r17
    294e:	18 2f       	mov	r17, r24
    2950:	06 2f       	mov	r16, r22
    2952:	80 91 e3 02 	lds	r24, 0x02E3
    2956:	88 23       	and	r24, r24
    2958:	09 f0       	breq	.+2      	; 0x295c <STEPPER_process_run_mode+0x12>
    295a:	e7 c0       	rjmp	.+462    	; 0x2b2a <STEPPER_process_run_mode+0x1e0>
    295c:	80 91 cb 02 	lds	r24, 0x02CB
    2960:	88 23       	and	r24, r24
    2962:	09 f0       	breq	.+2      	; 0x2966 <STEPPER_process_run_mode+0x1c>
    2964:	5a c0       	rjmp	.+180    	; 0x2a1a <STEPPER_process_run_mode+0xd0>
    2966:	80 91 b3 02 	lds	r24, 0x02B3
    296a:	90 91 b4 02 	lds	r25, 0x02B4
    296e:	89 2b       	or	r24, r25
    2970:	e9 f4       	brne	.+58     	; 0x29ac <STEPPER_process_run_mode+0x62>
    2972:	80 91 63 02 	lds	r24, 0x0263
    2976:	83 7e       	andi	r24, 0xE3	; 227
    2978:	80 93 63 02 	sts	0x0263, r24
    297c:	10 92 d4 02 	sts	0x02D4, r1
    2980:	80 91 df 02 	lds	r24, 0x02DF
    2984:	88 23       	and	r24, r24
    2986:	09 f4       	brne	.+2      	; 0x298a <STEPPER_process_run_mode+0x40>
    2988:	5d c0       	rjmp	.+186    	; 0x2a44 <STEPPER_process_run_mode+0xfa>
    298a:	60 91 cd 02 	lds	r22, 0x02CD
    298e:	80 e0       	ldi	r24, 0x00	; 0
    2990:	0e 94 1e 16 	call	0x2c3c	; 0x2c3c <STEPPER_stop>
    2994:	e0 91 e1 02 	lds	r30, 0x02E1
    2998:	f0 91 e2 02 	lds	r31, 0x02E2
    299c:	30 97       	sbiw	r30, 0x00	; 0
    299e:	09 f4       	brne	.+2      	; 0x29a2 <STEPPER_process_run_mode+0x58>
    29a0:	51 c0       	rjmp	.+162    	; 0x2a44 <STEPPER_process_run_mode+0xfa>
    29a2:	81 e0       	ldi	r24, 0x01	; 1
    29a4:	80 83       	st	Z, r24
    29a6:	10 92 df 02 	sts	0x02DF, r1
    29aa:	4c c0       	rjmp	.+152    	; 0x2a44 <STEPPER_process_run_mode+0xfa>
    29ac:	80 91 ad 02 	lds	r24, 0x02AD
    29b0:	81 30       	cpi	r24, 0x01	; 1
    29b2:	41 f4       	brne	.+16     	; 0x29c4 <STEPPER_process_run_mode+0x7a>
    29b4:	80 91 bf 02 	lds	r24, 0x02BF
    29b8:	90 91 c0 02 	lds	r25, 0x02C0
    29bc:	01 97       	sbiw	r24, 0x01	; 1
    29be:	11 f4       	brne	.+4      	; 0x29c4 <STEPPER_process_run_mode+0x7a>
    29c0:	11 e0       	ldi	r17, 0x01	; 1
    29c2:	02 c0       	rjmp	.+4      	; 0x29c8 <STEPPER_process_run_mode+0x7e>
    29c4:	11 23       	and	r17, r17
    29c6:	f1 f1       	breq	.+124    	; 0x2a44 <STEPPER_process_run_mode+0xfa>
    29c8:	e0 91 d2 02 	lds	r30, 0x02D2
    29cc:	f0 e0       	ldi	r31, 0x00	; 0
    29ce:	e9 52       	subi	r30, 0x29	; 41
    29d0:	fe 4f       	sbci	r31, 0xFE	; 254
    29d2:	90 91 63 02 	lds	r25, 0x0263
    29d6:	93 7e       	andi	r25, 0xE3	; 227
    29d8:	80 81       	ld	r24, Z
    29da:	89 2b       	or	r24, r25
    29dc:	80 93 63 02 	sts	0x0263, r24
    29e0:	80 91 d0 02 	lds	r24, 0x02D0
    29e4:	88 23       	and	r24, r24
    29e6:	21 f4       	brne	.+8      	; 0x29f0 <STEPPER_process_run_mode+0xa6>
    29e8:	80 91 d2 02 	lds	r24, 0x02D2
    29ec:	8f 5f       	subi	r24, 0xFF	; 255
    29ee:	03 c0       	rjmp	.+6      	; 0x29f6 <STEPPER_process_run_mode+0xac>
    29f0:	80 91 d2 02 	lds	r24, 0x02D2
    29f4:	81 50       	subi	r24, 0x01	; 1
    29f6:	80 93 d2 02 	sts	0x02D2, r24
    29fa:	80 91 d2 02 	lds	r24, 0x02D2
    29fe:	83 70       	andi	r24, 0x03	; 3
    2a00:	80 93 d2 02 	sts	0x02D2, r24
    2a04:	81 e0       	ldi	r24, 0x01	; 1
    2a06:	80 93 d4 02 	sts	0x02D4, r24
    2a0a:	80 91 ad 02 	lds	r24, 0x02AD
    2a0e:	81 30       	cpi	r24, 0x01	; 1
    2a10:	c9 f4       	brne	.+50     	; 0x2a44 <STEPPER_process_run_mode+0xfa>
    2a12:	80 e0       	ldi	r24, 0x00	; 0
    2a14:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <STEPPER_process_step_mode>
    2a18:	15 c0       	rjmp	.+42     	; 0x2a44 <STEPPER_process_run_mode+0xfa>
    2a1a:	90 91 63 02 	lds	r25, 0x0263
    2a1e:	93 7e       	andi	r25, 0xE3	; 227
    2a20:	90 93 63 02 	sts	0x0263, r25
    2a24:	e0 91 d2 02 	lds	r30, 0x02D2
    2a28:	f0 e0       	ldi	r31, 0x00	; 0
    2a2a:	e9 52       	subi	r30, 0x29	; 41
    2a2c:	fe 4f       	sbci	r31, 0xFE	; 254
    2a2e:	80 81       	ld	r24, Z
    2a30:	89 2b       	or	r24, r25
    2a32:	80 93 63 02 	sts	0x0263, r24
    2a36:	82 e0       	ldi	r24, 0x02	; 2
    2a38:	80 93 d4 02 	sts	0x02D4, r24
    2a3c:	10 92 b4 02 	sts	0x02B4, r1
    2a40:	10 92 b3 02 	sts	0x02B3, r1
    2a44:	80 91 cc 02 	lds	r24, 0x02CC
    2a48:	88 23       	and	r24, r24
    2a4a:	09 f0       	breq	.+2      	; 0x2a4e <STEPPER_process_run_mode+0x104>
    2a4c:	59 c0       	rjmp	.+178    	; 0x2b00 <STEPPER_process_run_mode+0x1b6>
    2a4e:	80 91 b5 02 	lds	r24, 0x02B5
    2a52:	90 91 b6 02 	lds	r25, 0x02B6
    2a56:	89 2b       	or	r24, r25
    2a58:	e9 f4       	brne	.+58     	; 0x2a94 <STEPPER_process_run_mode+0x14a>
    2a5a:	80 91 63 02 	lds	r24, 0x0263
    2a5e:	8f 71       	andi	r24, 0x1F	; 31
    2a60:	80 93 63 02 	sts	0x0263, r24
    2a64:	10 92 d5 02 	sts	0x02D5, r1
    2a68:	80 91 e0 02 	lds	r24, 0x02E0
    2a6c:	88 23       	and	r24, r24
    2a6e:	09 f4       	brne	.+2      	; 0x2a72 <STEPPER_process_run_mode+0x128>
    2a70:	5c c0       	rjmp	.+184    	; 0x2b2a <STEPPER_process_run_mode+0x1e0>
    2a72:	60 91 ce 02 	lds	r22, 0x02CE
    2a76:	81 e0       	ldi	r24, 0x01	; 1
    2a78:	0e 94 1e 16 	call	0x2c3c	; 0x2c3c <STEPPER_stop>
    2a7c:	e0 91 e1 02 	lds	r30, 0x02E1
    2a80:	f0 91 e2 02 	lds	r31, 0x02E2
    2a84:	30 97       	sbiw	r30, 0x00	; 0
    2a86:	09 f4       	brne	.+2      	; 0x2a8a <STEPPER_process_run_mode+0x140>
    2a88:	50 c0       	rjmp	.+160    	; 0x2b2a <STEPPER_process_run_mode+0x1e0>
    2a8a:	81 e0       	ldi	r24, 0x01	; 1
    2a8c:	81 83       	std	Z+1, r24	; 0x01
    2a8e:	10 92 e0 02 	sts	0x02E0, r1
    2a92:	4b c0       	rjmp	.+150    	; 0x2b2a <STEPPER_process_run_mode+0x1e0>
    2a94:	80 91 ae 02 	lds	r24, 0x02AE
    2a98:	81 30       	cpi	r24, 0x01	; 1
    2a9a:	41 f4       	brne	.+16     	; 0x2aac <STEPPER_process_run_mode+0x162>
    2a9c:	80 91 c1 02 	lds	r24, 0x02C1
    2aa0:	90 91 c2 02 	lds	r25, 0x02C2
    2aa4:	01 97       	sbiw	r24, 0x01	; 1
    2aa6:	11 f4       	brne	.+4      	; 0x2aac <STEPPER_process_run_mode+0x162>
    2aa8:	01 e0       	ldi	r16, 0x01	; 1
    2aaa:	02 c0       	rjmp	.+4      	; 0x2ab0 <STEPPER_process_run_mode+0x166>
    2aac:	00 23       	and	r16, r16
    2aae:	e9 f1       	breq	.+122    	; 0x2b2a <STEPPER_process_run_mode+0x1e0>
    2ab0:	e0 91 d3 02 	lds	r30, 0x02D3
    2ab4:	f0 e0       	ldi	r31, 0x00	; 0
    2ab6:	e5 52       	subi	r30, 0x25	; 37
    2ab8:	fe 4f       	sbci	r31, 0xFE	; 254
    2aba:	90 91 63 02 	lds	r25, 0x0263
    2abe:	9f 71       	andi	r25, 0x1F	; 31
    2ac0:	80 81       	ld	r24, Z
    2ac2:	89 2b       	or	r24, r25
    2ac4:	80 93 63 02 	sts	0x0263, r24
    2ac8:	80 91 d1 02 	lds	r24, 0x02D1
    2acc:	88 23       	and	r24, r24
    2ace:	21 f4       	brne	.+8      	; 0x2ad8 <STEPPER_process_run_mode+0x18e>
    2ad0:	80 91 d3 02 	lds	r24, 0x02D3
    2ad4:	8f 5f       	subi	r24, 0xFF	; 255
    2ad6:	03 c0       	rjmp	.+6      	; 0x2ade <STEPPER_process_run_mode+0x194>
    2ad8:	80 91 d3 02 	lds	r24, 0x02D3
    2adc:	81 50       	subi	r24, 0x01	; 1
    2ade:	80 93 d3 02 	sts	0x02D3, r24
    2ae2:	80 91 d3 02 	lds	r24, 0x02D3
    2ae6:	83 70       	andi	r24, 0x03	; 3
    2ae8:	80 93 d3 02 	sts	0x02D3, r24
    2aec:	81 e0       	ldi	r24, 0x01	; 1
    2aee:	80 93 d5 02 	sts	0x02D5, r24
    2af2:	80 91 ae 02 	lds	r24, 0x02AE
    2af6:	81 30       	cpi	r24, 0x01	; 1
    2af8:	c1 f4       	brne	.+48     	; 0x2b2a <STEPPER_process_run_mode+0x1e0>
    2afa:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <STEPPER_process_step_mode>
    2afe:	15 c0       	rjmp	.+42     	; 0x2b2a <STEPPER_process_run_mode+0x1e0>
    2b00:	90 91 63 02 	lds	r25, 0x0263
    2b04:	9f 71       	andi	r25, 0x1F	; 31
    2b06:	90 93 63 02 	sts	0x0263, r25
    2b0a:	e0 91 d3 02 	lds	r30, 0x02D3
    2b0e:	f0 e0       	ldi	r31, 0x00	; 0
    2b10:	e5 52       	subi	r30, 0x25	; 37
    2b12:	fe 4f       	sbci	r31, 0xFE	; 254
    2b14:	80 81       	ld	r24, Z
    2b16:	89 2b       	or	r24, r25
    2b18:	80 93 63 02 	sts	0x0263, r24
    2b1c:	82 e0       	ldi	r24, 0x02	; 2
    2b1e:	80 93 d5 02 	sts	0x02D5, r24
    2b22:	10 92 b6 02 	sts	0x02B6, r1
    2b26:	10 92 b5 02 	sts	0x02B5, r1
    2b2a:	80 91 d6 02 	lds	r24, 0x02D6
    2b2e:	88 23       	and	r24, r24
    2b30:	31 f4       	brne	.+12     	; 0x2b3e <STEPPER_process_run_mode+0x1f4>
    2b32:	83 e6       	ldi	r24, 0x63	; 99
    2b34:	92 e0       	ldi	r25, 0x02	; 2
    2b36:	61 2f       	mov	r22, r17
    2b38:	40 2f       	mov	r20, r16
    2b3a:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <STEPPER_process_pwm>
    2b3e:	88 b1       	in	r24, 0x08	; 8
    2b40:	83 70       	andi	r24, 0x03	; 3
    2b42:	90 91 63 02 	lds	r25, 0x0263
    2b46:	89 2b       	or	r24, r25
    2b48:	88 b9       	out	0x08, r24	; 8
    2b4a:	1f 91       	pop	r17
    2b4c:	0f 91       	pop	r16
    2b4e:	08 95       	ret

00002b50 <STEPPER_process_step_mode>:
    2b50:	88 23       	and	r24, r24
    2b52:	21 f0       	breq	.+8      	; 0x2b5c <STEPPER_process_step_mode+0xc>
    2b54:	81 30       	cpi	r24, 0x01	; 1
    2b56:	09 f0       	breq	.+2      	; 0x2b5a <STEPPER_process_step_mode+0xa>
    2b58:	4e c0       	rjmp	.+156    	; 0x2bf6 <STEPPER_process_step_mode+0xa6>
    2b5a:	27 c0       	rjmp	.+78     	; 0x2baa <STEPPER_process_step_mode+0x5a>
    2b5c:	80 91 bf 02 	lds	r24, 0x02BF
    2b60:	90 91 c0 02 	lds	r25, 0x02C0
    2b64:	89 2b       	or	r24, r25
    2b66:	49 f0       	breq	.+18     	; 0x2b7a <STEPPER_process_step_mode+0x2a>
    2b68:	80 91 bf 02 	lds	r24, 0x02BF
    2b6c:	90 91 c0 02 	lds	r25, 0x02C0
    2b70:	01 97       	sbiw	r24, 0x01	; 1
    2b72:	90 93 c0 02 	sts	0x02C0, r25
    2b76:	80 93 bf 02 	sts	0x02BF, r24
    2b7a:	80 91 df 02 	lds	r24, 0x02DF
    2b7e:	88 23       	and	r24, r24
    2b80:	d1 f5       	brne	.+116    	; 0x2bf6 <STEPPER_process_step_mode+0xa6>
    2b82:	20 91 bf 02 	lds	r18, 0x02BF
    2b86:	30 91 c0 02 	lds	r19, 0x02C0
    2b8a:	80 91 c3 02 	lds	r24, 0x02C3
    2b8e:	90 91 c4 02 	lds	r25, 0x02C4
    2b92:	28 17       	cp	r18, r24
    2b94:	39 07       	cpc	r19, r25
    2b96:	79 f5       	brne	.+94     	; 0x2bf6 <STEPPER_process_step_mode+0xa6>
    2b98:	80 e0       	ldi	r24, 0x00	; 0
    2b9a:	60 e0       	ldi	r22, 0x00	; 0
    2b9c:	70 e0       	ldi	r23, 0x00	; 0
    2b9e:	0e 94 fc 15 	call	0x2bf8	; 0x2bf8 <STEPPER_set_speed>
    2ba2:	81 e0       	ldi	r24, 0x01	; 1
    2ba4:	80 93 df 02 	sts	0x02DF, r24
    2ba8:	08 95       	ret
    2baa:	80 91 c1 02 	lds	r24, 0x02C1
    2bae:	90 91 c2 02 	lds	r25, 0x02C2
    2bb2:	89 2b       	or	r24, r25
    2bb4:	49 f0       	breq	.+18     	; 0x2bc8 <STEPPER_process_step_mode+0x78>
    2bb6:	80 91 c1 02 	lds	r24, 0x02C1
    2bba:	90 91 c2 02 	lds	r25, 0x02C2
    2bbe:	01 97       	sbiw	r24, 0x01	; 1
    2bc0:	90 93 c2 02 	sts	0x02C2, r25
    2bc4:	80 93 c1 02 	sts	0x02C1, r24
    2bc8:	80 91 e0 02 	lds	r24, 0x02E0
    2bcc:	88 23       	and	r24, r24
    2bce:	99 f4       	brne	.+38     	; 0x2bf6 <STEPPER_process_step_mode+0xa6>
    2bd0:	20 91 c1 02 	lds	r18, 0x02C1
    2bd4:	30 91 c2 02 	lds	r19, 0x02C2
    2bd8:	80 91 c5 02 	lds	r24, 0x02C5
    2bdc:	90 91 c6 02 	lds	r25, 0x02C6
    2be0:	28 17       	cp	r18, r24
    2be2:	39 07       	cpc	r19, r25
    2be4:	41 f4       	brne	.+16     	; 0x2bf6 <STEPPER_process_step_mode+0xa6>
    2be6:	81 e0       	ldi	r24, 0x01	; 1
    2be8:	60 e0       	ldi	r22, 0x00	; 0
    2bea:	70 e0       	ldi	r23, 0x00	; 0
    2bec:	0e 94 fc 15 	call	0x2bf8	; 0x2bf8 <STEPPER_set_speed>
    2bf0:	81 e0       	ldi	r24, 0x01	; 1
    2bf2:	80 93 e0 02 	sts	0x02E0, r24
    2bf6:	08 95       	ret

00002bf8 <STEPPER_set_speed>:
    2bf8:	48 2f       	mov	r20, r24
    2bfa:	81 e0       	ldi	r24, 0x01	; 1
    2bfc:	80 93 e3 02 	sts	0x02E3, r24
    2c00:	cb 01       	movw	r24, r22
    2c02:	21 e0       	ldi	r18, 0x01	; 1
    2c04:	61 39       	cpi	r22, 0x91	; 145
    2c06:	72 07       	cpc	r23, r18
    2c08:	10 f0       	brcs	.+4      	; 0x2c0e <STEPPER_set_speed+0x16>
    2c0a:	80 e9       	ldi	r24, 0x90	; 144
    2c0c:	91 e0       	ldi	r25, 0x01	; 1
    2c0e:	41 30       	cpi	r20, 0x01	; 1
    2c10:	71 f0       	breq	.+28     	; 0x2c2e <STEPPER_set_speed+0x36>
    2c12:	41 30       	cpi	r20, 0x01	; 1
    2c14:	18 f0       	brcs	.+6      	; 0x2c1c <STEPPER_set_speed+0x24>
    2c16:	42 30       	cpi	r20, 0x02	; 2
    2c18:	71 f4       	brne	.+28     	; 0x2c36 <STEPPER_set_speed+0x3e>
    2c1a:	05 c0       	rjmp	.+10     	; 0x2c26 <STEPPER_set_speed+0x2e>
    2c1c:	90 93 b0 02 	sts	0x02B0, r25
    2c20:	80 93 af 02 	sts	0x02AF, r24
    2c24:	08 c0       	rjmp	.+16     	; 0x2c36 <STEPPER_set_speed+0x3e>
    2c26:	90 93 b0 02 	sts	0x02B0, r25
    2c2a:	80 93 af 02 	sts	0x02AF, r24
    2c2e:	90 93 b2 02 	sts	0x02B2, r25
    2c32:	80 93 b1 02 	sts	0x02B1, r24
    2c36:	10 92 e3 02 	sts	0x02E3, r1
    2c3a:	08 95       	ret

00002c3c <STEPPER_stop>:
    2c3c:	0f 93       	push	r16
    2c3e:	1f 93       	push	r17
    2c40:	18 2f       	mov	r17, r24
    2c42:	06 2f       	mov	r16, r22
    2c44:	66 23       	and	r22, r22
    2c46:	49 f4       	brne	.+18     	; 0x2c5a <STEPPER_stop+0x1e>
    2c48:	60 e0       	ldi	r22, 0x00	; 0
    2c4a:	70 e0       	ldi	r23, 0x00	; 0
    2c4c:	0e 94 fc 15 	call	0x2bf8	; 0x2bf8 <STEPPER_set_speed>
    2c50:	81 2f       	mov	r24, r17
    2c52:	60 e0       	ldi	r22, 0x00	; 0
    2c54:	70 e0       	ldi	r23, 0x00	; 0
    2c56:	0e 94 49 17 	call	0x2e92	; 0x2e92 <STEPPER_set_steps>
    2c5a:	81 e0       	ldi	r24, 0x01	; 1
    2c5c:	80 93 e3 02 	sts	0x02E3, r24
    2c60:	11 30       	cpi	r17, 0x01	; 1
    2c62:	51 f0       	breq	.+20     	; 0x2c78 <STEPPER_stop+0x3c>
    2c64:	11 30       	cpi	r17, 0x01	; 1
    2c66:	18 f0       	brcs	.+6      	; 0x2c6e <STEPPER_stop+0x32>
    2c68:	12 30       	cpi	r17, 0x02	; 2
    2c6a:	41 f4       	brne	.+16     	; 0x2c7c <STEPPER_stop+0x40>
    2c6c:	03 c0       	rjmp	.+6      	; 0x2c74 <STEPPER_stop+0x38>
    2c6e:	00 93 cb 02 	sts	0x02CB, r16
    2c72:	04 c0       	rjmp	.+8      	; 0x2c7c <STEPPER_stop+0x40>
    2c74:	00 93 cb 02 	sts	0x02CB, r16
    2c78:	00 93 cc 02 	sts	0x02CC, r16
    2c7c:	10 92 e3 02 	sts	0x02E3, r1
    2c80:	1f 91       	pop	r17
    2c82:	0f 91       	pop	r16
    2c84:	08 95       	ret

00002c86 <TMRSRVC_process>:
    2c86:	ff 92       	push	r15
    2c88:	0f 93       	push	r16
    2c8a:	1f 93       	push	r17
    2c8c:	cf 93       	push	r28
    2c8e:	df 93       	push	r29
    2c90:	80 91 a5 02 	lds	r24, 0x02A5
    2c94:	88 23       	and	r24, r24
    2c96:	09 f4       	brne	.+2      	; 0x2c9a <TMRSRVC_process+0x14>
    2c98:	59 c0       	rjmp	.+178    	; 0x2d4c <TMRSRVC_process+0xc6>
    2c9a:	00 91 a6 02 	lds	r16, 0x02A6
    2c9e:	10 91 a7 02 	lds	r17, 0x02A7
    2ca2:	f8 01       	movw	r30, r16
    2ca4:	c0 81       	ld	r28, Z
    2ca6:	d1 81       	ldd	r29, Z+1	; 0x01
    2ca8:	8c 81       	ldd	r24, Y+4	; 0x04
    2caa:	9d 81       	ldd	r25, Y+5	; 0x05
    2cac:	01 97       	sbiw	r24, 0x01	; 1
    2cae:	9d 83       	std	Y+5, r25	; 0x05
    2cb0:	8c 83       	std	Y+4, r24	; 0x04
    2cb2:	18 16       	cp	r1, r24
    2cb4:	19 06       	cpc	r1, r25
    2cb6:	0c f4       	brge	.+2      	; 0x2cba <TMRSRVC_process+0x34>
    2cb8:	49 c0       	rjmp	.+146    	; 0x2d4c <TMRSRVC_process+0xc6>
    2cba:	89 81       	ldd	r24, Y+1	; 0x01
    2cbc:	80 ff       	sbrs	r24, 0
    2cbe:	05 c0       	rjmp	.+10     	; 0x2cca <TMRSRVC_process+0x44>
    2cc0:	8e 81       	ldd	r24, Y+6	; 0x06
    2cc2:	88 23       	and	r24, r24
    2cc4:	11 f4       	brne	.+4      	; 0x2cca <TMRSRVC_process+0x44>
    2cc6:	81 e0       	ldi	r24, 0x01	; 1
    2cc8:	8e 83       	std	Y+6, r24	; 0x06
    2cca:	89 81       	ldd	r24, Y+1	; 0x01
    2ccc:	81 ff       	sbrs	r24, 1
    2cce:	03 c0       	rjmp	.+6      	; 0x2cd6 <TMRSRVC_process+0x50>
    2cd0:	ef 81       	ldd	r30, Y+7	; 0x07
    2cd2:	f8 85       	ldd	r31, Y+8	; 0x08
    2cd4:	09 95       	icall
    2cd6:	80 91 a5 02 	lds	r24, 0x02A5
    2cda:	82 30       	cpi	r24, 0x02	; 2
    2cdc:	a8 f0       	brcs	.+42     	; 0x2d08 <TMRSRVC_process+0x82>
    2cde:	f8 01       	movw	r30, r16
    2ce0:	82 81       	ldd	r24, Z+2	; 0x02
    2ce2:	93 81       	ldd	r25, Z+3	; 0x03
    2ce4:	90 93 a7 02 	sts	0x02A7, r25
    2ce8:	80 93 a6 02 	sts	0x02A6, r24
    2cec:	13 82       	std	Z+3, r1	; 0x03
    2cee:	12 82       	std	Z+2, r1	; 0x02
    2cf0:	e0 91 00 00 	lds	r30, 0x0000
    2cf4:	f0 91 01 00 	lds	r31, 0x0001
    2cf8:	84 81       	ldd	r24, Z+4	; 0x04
    2cfa:	95 81       	ldd	r25, Z+5	; 0x05
    2cfc:	18 16       	cp	r1, r24
    2cfe:	19 06       	cpc	r1, r25
    2d00:	3c f0       	brlt	.+14     	; 0x2d10 <TMRSRVC_process+0x8a>
    2d02:	ff 24       	eor	r15, r15
    2d04:	f3 94       	inc	r15
    2d06:	05 c0       	rjmp	.+10     	; 0x2d12 <TMRSRVC_process+0x8c>
    2d08:	10 92 a7 02 	sts	0x02A7, r1
    2d0c:	10 92 a6 02 	sts	0x02A6, r1
    2d10:	ff 24       	eor	r15, r15
    2d12:	80 91 a5 02 	lds	r24, 0x02A5
    2d16:	81 50       	subi	r24, 0x01	; 1
    2d18:	80 93 a5 02 	sts	0x02A5, r24
    2d1c:	80 91 a5 02 	lds	r24, 0x02A5
    2d20:	88 23       	and	r24, r24
    2d22:	11 f4       	brne	.+4      	; 0x2d28 <TMRSRVC_process+0xa2>
    2d24:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <TMRSRVC_stop>
    2d28:	89 81       	ldd	r24, Y+1	; 0x01
    2d2a:	82 ff       	sbrs	r24, 2
    2d2c:	08 c0       	rjmp	.+16     	; 0x2d3e <TMRSRVC_process+0xb8>
    2d2e:	8a 81       	ldd	r24, Y+2	; 0x02
    2d30:	9b 81       	ldd	r25, Y+3	; 0x03
    2d32:	9d 83       	std	Y+5, r25	; 0x05
    2d34:	8c 83       	std	Y+4, r24	; 0x04
    2d36:	c8 01       	movw	r24, r16
    2d38:	0e 94 60 12 	call	0x24c0	; 0x24c0 <TMRSRVC_insert>
    2d3c:	08 c0       	rjmp	.+16     	; 0x2d4e <TMRSRVC_process+0xc8>
    2d3e:	c8 01       	movw	r24, r16
    2d40:	0e 94 df 1b 	call	0x37be	; 0x37be <free>
    2d44:	89 81       	ldd	r24, Y+1	; 0x01
    2d46:	8f 7e       	andi	r24, 0xEF	; 239
    2d48:	89 83       	std	Y+1, r24	; 0x01
    2d4a:	01 c0       	rjmp	.+2      	; 0x2d4e <TMRSRVC_process+0xc8>
    2d4c:	ff 24       	eor	r15, r15
    2d4e:	8f 2d       	mov	r24, r15
    2d50:	df 91       	pop	r29
    2d52:	cf 91       	pop	r28
    2d54:	1f 91       	pop	r17
    2d56:	0f 91       	pop	r16
    2d58:	ff 90       	pop	r15
    2d5a:	08 95       	ret

00002d5c <TMRSRVC_stop>:
    2d5c:	10 92 62 02 	sts	0x0262, r1
    2d60:	08 95       	ret

00002d62 <STEPPER_process_pwm>:
    2d62:	fc 01       	movw	r30, r24
    2d64:	80 91 d4 02 	lds	r24, 0x02D4
    2d68:	82 30       	cpi	r24, 0x02	; 2
    2d6a:	69 f4       	brne	.+26     	; 0x2d86 <STEPPER_process_pwm+0x24>
    2d6c:	80 91 67 02 	lds	r24, 0x0267
    2d70:	91 e0       	ldi	r25, 0x01	; 1
    2d72:	89 27       	eor	r24, r25
    2d74:	80 93 67 02 	sts	0x0267, r24
    2d78:	88 23       	and	r24, r24
    2d7a:	09 f0       	breq	.+2      	; 0x2d7e <STEPPER_process_pwm+0x1c>
    2d7c:	3e c0       	rjmp	.+124    	; 0x2dfa <STEPPER_process_pwm+0x98>
    2d7e:	80 81       	ld	r24, Z
    2d80:	83 7e       	andi	r24, 0xE3	; 227
    2d82:	80 83       	st	Z, r24
    2d84:	3a c0       	rjmp	.+116    	; 0x2dfa <STEPPER_process_pwm+0x98>
    2d86:	80 91 b3 02 	lds	r24, 0x02B3
    2d8a:	90 91 b4 02 	lds	r25, 0x02B4
    2d8e:	c3 97       	sbiw	r24, 0x33	; 51
    2d90:	a4 f5       	brge	.+104    	; 0x2dfa <STEPPER_process_pwm+0x98>
    2d92:	66 23       	and	r22, r22
    2d94:	d1 f0       	breq	.+52     	; 0x2dca <STEPPER_process_pwm+0x68>
    2d96:	20 91 b3 02 	lds	r18, 0x02B3
    2d9a:	30 91 b4 02 	lds	r19, 0x02B4
    2d9e:	80 e6       	ldi	r24, 0x60	; 96
    2da0:	90 e0       	ldi	r25, 0x00	; 0
    2da2:	bc 01       	movw	r22, r24
    2da4:	26 9f       	mul	r18, r22
    2da6:	c0 01       	movw	r24, r0
    2da8:	27 9f       	mul	r18, r23
    2daa:	90 0d       	add	r25, r0
    2dac:	36 9f       	mul	r19, r22
    2dae:	90 0d       	add	r25, r0
    2db0:	11 24       	eor	r1, r1
    2db2:	88 0f       	add	r24, r24
    2db4:	89 2f       	mov	r24, r25
    2db6:	88 1f       	adc	r24, r24
    2db8:	99 0b       	sbc	r25, r25
    2dba:	90 93 c8 02 	sts	0x02C8, r25
    2dbe:	80 93 c7 02 	sts	0x02C7, r24
    2dc2:	81 e0       	ldi	r24, 0x01	; 1
    2dc4:	80 93 65 02 	sts	0x0265, r24
    2dc8:	18 c0       	rjmp	.+48     	; 0x2dfa <STEPPER_process_pwm+0x98>
    2dca:	80 91 65 02 	lds	r24, 0x0265
    2dce:	88 23       	and	r24, r24
    2dd0:	a1 f0       	breq	.+40     	; 0x2dfa <STEPPER_process_pwm+0x98>
    2dd2:	80 91 c7 02 	lds	r24, 0x02C7
    2dd6:	90 91 c8 02 	lds	r25, 0x02C8
    2dda:	01 97       	sbiw	r24, 0x01	; 1
    2ddc:	90 93 c8 02 	sts	0x02C8, r25
    2de0:	80 93 c7 02 	sts	0x02C7, r24
    2de4:	80 91 c7 02 	lds	r24, 0x02C7
    2de8:	90 91 c8 02 	lds	r25, 0x02C8
    2dec:	89 2b       	or	r24, r25
    2dee:	29 f4       	brne	.+10     	; 0x2dfa <STEPPER_process_pwm+0x98>
    2df0:	80 81       	ld	r24, Z
    2df2:	83 7e       	andi	r24, 0xE3	; 227
    2df4:	80 83       	st	Z, r24
    2df6:	10 92 65 02 	sts	0x0265, r1
    2dfa:	80 91 d5 02 	lds	r24, 0x02D5
    2dfe:	82 30       	cpi	r24, 0x02	; 2
    2e00:	69 f4       	brne	.+26     	; 0x2e1c <STEPPER_process_pwm+0xba>
    2e02:	80 91 66 02 	lds	r24, 0x0266
    2e06:	91 e0       	ldi	r25, 0x01	; 1
    2e08:	89 27       	eor	r24, r25
    2e0a:	80 93 66 02 	sts	0x0266, r24
    2e0e:	88 23       	and	r24, r24
    2e10:	09 f0       	breq	.+2      	; 0x2e14 <STEPPER_process_pwm+0xb2>
    2e12:	3e c0       	rjmp	.+124    	; 0x2e90 <STEPPER_process_pwm+0x12e>
    2e14:	80 81       	ld	r24, Z
    2e16:	8f 71       	andi	r24, 0x1F	; 31
    2e18:	80 83       	st	Z, r24
    2e1a:	08 95       	ret
    2e1c:	80 91 b5 02 	lds	r24, 0x02B5
    2e20:	90 91 b6 02 	lds	r25, 0x02B6
    2e24:	c3 97       	sbiw	r24, 0x33	; 51
    2e26:	a4 f5       	brge	.+104    	; 0x2e90 <STEPPER_process_pwm+0x12e>
    2e28:	44 23       	and	r20, r20
    2e2a:	d1 f0       	breq	.+52     	; 0x2e60 <STEPPER_process_pwm+0xfe>
    2e2c:	20 91 b5 02 	lds	r18, 0x02B5
    2e30:	30 91 b6 02 	lds	r19, 0x02B6
    2e34:	80 e6       	ldi	r24, 0x60	; 96
    2e36:	90 e0       	ldi	r25, 0x00	; 0
    2e38:	ac 01       	movw	r20, r24
    2e3a:	24 9f       	mul	r18, r20
    2e3c:	c0 01       	movw	r24, r0
    2e3e:	25 9f       	mul	r18, r21
    2e40:	90 0d       	add	r25, r0
    2e42:	34 9f       	mul	r19, r20
    2e44:	90 0d       	add	r25, r0
    2e46:	11 24       	eor	r1, r1
    2e48:	88 0f       	add	r24, r24
    2e4a:	89 2f       	mov	r24, r25
    2e4c:	88 1f       	adc	r24, r24
    2e4e:	99 0b       	sbc	r25, r25
    2e50:	90 93 ca 02 	sts	0x02CA, r25
    2e54:	80 93 c9 02 	sts	0x02C9, r24
    2e58:	81 e0       	ldi	r24, 0x01	; 1
    2e5a:	80 93 64 02 	sts	0x0264, r24
    2e5e:	08 95       	ret
    2e60:	80 91 64 02 	lds	r24, 0x0264
    2e64:	88 23       	and	r24, r24
    2e66:	a1 f0       	breq	.+40     	; 0x2e90 <STEPPER_process_pwm+0x12e>
    2e68:	80 91 c9 02 	lds	r24, 0x02C9
    2e6c:	90 91 ca 02 	lds	r25, 0x02CA
    2e70:	01 97       	sbiw	r24, 0x01	; 1
    2e72:	90 93 ca 02 	sts	0x02CA, r25
    2e76:	80 93 c9 02 	sts	0x02C9, r24
    2e7a:	80 91 c9 02 	lds	r24, 0x02C9
    2e7e:	90 91 ca 02 	lds	r25, 0x02CA
    2e82:	89 2b       	or	r24, r25
    2e84:	29 f4       	brne	.+10     	; 0x2e90 <STEPPER_process_pwm+0x12e>
    2e86:	80 81       	ld	r24, Z
    2e88:	8f 71       	andi	r24, 0x1F	; 31
    2e8a:	80 83       	st	Z, r24
    2e8c:	10 92 64 02 	sts	0x0264, r1
    2e90:	08 95       	ret

00002e92 <STEPPER_set_steps>:
    2e92:	98 2f       	mov	r25, r24
    2e94:	81 e0       	ldi	r24, 0x01	; 1
    2e96:	80 93 e3 02 	sts	0x02E3, r24
    2e9a:	91 30       	cpi	r25, 0x01	; 1
    2e9c:	71 f0       	breq	.+28     	; 0x2eba <STEPPER_set_steps+0x28>
    2e9e:	91 30       	cpi	r25, 0x01	; 1
    2ea0:	18 f0       	brcs	.+6      	; 0x2ea8 <STEPPER_set_steps+0x16>
    2ea2:	92 30       	cpi	r25, 0x02	; 2
    2ea4:	71 f4       	brne	.+28     	; 0x2ec2 <STEPPER_set_steps+0x30>
    2ea6:	05 c0       	rjmp	.+10     	; 0x2eb2 <STEPPER_set_steps+0x20>
    2ea8:	70 93 c0 02 	sts	0x02C0, r23
    2eac:	60 93 bf 02 	sts	0x02BF, r22
    2eb0:	08 c0       	rjmp	.+16     	; 0x2ec2 <STEPPER_set_steps+0x30>
    2eb2:	70 93 c0 02 	sts	0x02C0, r23
    2eb6:	60 93 bf 02 	sts	0x02BF, r22
    2eba:	70 93 c2 02 	sts	0x02C2, r23
    2ebe:	60 93 c1 02 	sts	0x02C1, r22
    2ec2:	10 92 e3 02 	sts	0x02E3, r1
    2ec6:	08 95       	ret

00002ec8 <__subsf3>:
    2ec8:	50 58       	subi	r21, 0x80	; 128

00002eca <__addsf3>:
    2eca:	bb 27       	eor	r27, r27
    2ecc:	aa 27       	eor	r26, r26
    2ece:	0e d0       	rcall	.+28     	; 0x2eec <__addsf3x>
    2ed0:	22 c1       	rjmp	.+580    	; 0x3116 <__fp_round>
    2ed2:	13 d1       	rcall	.+550    	; 0x30fa <__fp_pscA>
    2ed4:	30 f0       	brcs	.+12     	; 0x2ee2 <__addsf3+0x18>
    2ed6:	18 d1       	rcall	.+560    	; 0x3108 <__fp_pscB>
    2ed8:	20 f0       	brcs	.+8      	; 0x2ee2 <__addsf3+0x18>
    2eda:	31 f4       	brne	.+12     	; 0x2ee8 <__addsf3+0x1e>
    2edc:	9f 3f       	cpi	r25, 0xFF	; 255
    2ede:	11 f4       	brne	.+4      	; 0x2ee4 <__addsf3+0x1a>
    2ee0:	1e f4       	brtc	.+6      	; 0x2ee8 <__addsf3+0x1e>
    2ee2:	08 c1       	rjmp	.+528    	; 0x30f4 <__fp_nan>
    2ee4:	0e f4       	brtc	.+2      	; 0x2ee8 <__addsf3+0x1e>
    2ee6:	e0 95       	com	r30
    2ee8:	e7 fb       	bst	r30, 7
    2eea:	fe c0       	rjmp	.+508    	; 0x30e8 <__fp_inf>

00002eec <__addsf3x>:
    2eec:	e9 2f       	mov	r30, r25
    2eee:	24 d1       	rcall	.+584    	; 0x3138 <__fp_split3>
    2ef0:	80 f3       	brcs	.-32     	; 0x2ed2 <__addsf3+0x8>
    2ef2:	ba 17       	cp	r27, r26
    2ef4:	62 07       	cpc	r22, r18
    2ef6:	73 07       	cpc	r23, r19
    2ef8:	84 07       	cpc	r24, r20
    2efa:	95 07       	cpc	r25, r21
    2efc:	18 f0       	brcs	.+6      	; 0x2f04 <__addsf3x+0x18>
    2efe:	99 f4       	brne	.+38     	; 0x2f26 <__addsf3x+0x3a>
    2f00:	c6 f5       	brtc	.+112    	; 0x2f72 <__addsf3x+0x86>
    2f02:	3c c1       	rjmp	.+632    	; 0x317c <__fp_zero>
    2f04:	0e f4       	brtc	.+2      	; 0x2f08 <__addsf3x+0x1c>
    2f06:	e0 95       	com	r30
    2f08:	0b 2e       	mov	r0, r27
    2f0a:	ba 2f       	mov	r27, r26
    2f0c:	a0 2d       	mov	r26, r0
    2f0e:	06 2e       	mov	r0, r22
    2f10:	62 2f       	mov	r22, r18
    2f12:	20 2d       	mov	r18, r0
    2f14:	07 2e       	mov	r0, r23
    2f16:	73 2f       	mov	r23, r19
    2f18:	30 2d       	mov	r19, r0
    2f1a:	08 2e       	mov	r0, r24
    2f1c:	84 2f       	mov	r24, r20
    2f1e:	40 2d       	mov	r20, r0
    2f20:	09 2e       	mov	r0, r25
    2f22:	95 2f       	mov	r25, r21
    2f24:	50 2d       	mov	r21, r0
    2f26:	ff 27       	eor	r31, r31
    2f28:	59 1b       	sub	r21, r25
    2f2a:	99 f0       	breq	.+38     	; 0x2f52 <__addsf3x+0x66>
    2f2c:	59 3f       	cpi	r21, 0xF9	; 249
    2f2e:	50 f4       	brcc	.+20     	; 0x2f44 <__addsf3x+0x58>
    2f30:	50 3e       	cpi	r21, 0xE0	; 224
    2f32:	68 f1       	brcs	.+90     	; 0x2f8e <__addsf3x+0xa2>
    2f34:	1a 16       	cp	r1, r26
    2f36:	f0 40       	sbci	r31, 0x00	; 0
    2f38:	a2 2f       	mov	r26, r18
    2f3a:	23 2f       	mov	r18, r19
    2f3c:	34 2f       	mov	r19, r20
    2f3e:	44 27       	eor	r20, r20
    2f40:	58 5f       	subi	r21, 0xF8	; 248
    2f42:	f3 cf       	rjmp	.-26     	; 0x2f2a <__addsf3x+0x3e>
    2f44:	46 95       	lsr	r20
    2f46:	37 95       	ror	r19
    2f48:	27 95       	ror	r18
    2f4a:	a7 95       	ror	r26
    2f4c:	f0 40       	sbci	r31, 0x00	; 0
    2f4e:	53 95       	inc	r21
    2f50:	c9 f7       	brne	.-14     	; 0x2f44 <__addsf3x+0x58>
    2f52:	7e f4       	brtc	.+30     	; 0x2f72 <__addsf3x+0x86>
    2f54:	1f 16       	cp	r1, r31
    2f56:	ba 0b       	sbc	r27, r26
    2f58:	62 0b       	sbc	r22, r18
    2f5a:	73 0b       	sbc	r23, r19
    2f5c:	84 0b       	sbc	r24, r20
    2f5e:	ba f0       	brmi	.+46     	; 0x2f8e <__addsf3x+0xa2>
    2f60:	91 50       	subi	r25, 0x01	; 1
    2f62:	a1 f0       	breq	.+40     	; 0x2f8c <__addsf3x+0xa0>
    2f64:	ff 0f       	add	r31, r31
    2f66:	bb 1f       	adc	r27, r27
    2f68:	66 1f       	adc	r22, r22
    2f6a:	77 1f       	adc	r23, r23
    2f6c:	88 1f       	adc	r24, r24
    2f6e:	c2 f7       	brpl	.-16     	; 0x2f60 <__addsf3x+0x74>
    2f70:	0e c0       	rjmp	.+28     	; 0x2f8e <__addsf3x+0xa2>
    2f72:	ba 0f       	add	r27, r26
    2f74:	62 1f       	adc	r22, r18
    2f76:	73 1f       	adc	r23, r19
    2f78:	84 1f       	adc	r24, r20
    2f7a:	48 f4       	brcc	.+18     	; 0x2f8e <__addsf3x+0xa2>
    2f7c:	87 95       	ror	r24
    2f7e:	77 95       	ror	r23
    2f80:	67 95       	ror	r22
    2f82:	b7 95       	ror	r27
    2f84:	f7 95       	ror	r31
    2f86:	9e 3f       	cpi	r25, 0xFE	; 254
    2f88:	08 f0       	brcs	.+2      	; 0x2f8c <__addsf3x+0xa0>
    2f8a:	ae cf       	rjmp	.-164    	; 0x2ee8 <__addsf3+0x1e>
    2f8c:	93 95       	inc	r25
    2f8e:	88 0f       	add	r24, r24
    2f90:	08 f0       	brcs	.+2      	; 0x2f94 <__addsf3x+0xa8>
    2f92:	99 27       	eor	r25, r25
    2f94:	ee 0f       	add	r30, r30
    2f96:	97 95       	ror	r25
    2f98:	87 95       	ror	r24
    2f9a:	08 95       	ret

00002f9c <__divsf3>:
    2f9c:	0c d0       	rcall	.+24     	; 0x2fb6 <__divsf3x>
    2f9e:	bb c0       	rjmp	.+374    	; 0x3116 <__fp_round>
    2fa0:	b3 d0       	rcall	.+358    	; 0x3108 <__fp_pscB>
    2fa2:	40 f0       	brcs	.+16     	; 0x2fb4 <__divsf3+0x18>
    2fa4:	aa d0       	rcall	.+340    	; 0x30fa <__fp_pscA>
    2fa6:	30 f0       	brcs	.+12     	; 0x2fb4 <__divsf3+0x18>
    2fa8:	21 f4       	brne	.+8      	; 0x2fb2 <__divsf3+0x16>
    2faa:	5f 3f       	cpi	r21, 0xFF	; 255
    2fac:	19 f0       	breq	.+6      	; 0x2fb4 <__divsf3+0x18>
    2fae:	9c c0       	rjmp	.+312    	; 0x30e8 <__fp_inf>
    2fb0:	51 11       	cpse	r21, r1
    2fb2:	e5 c0       	rjmp	.+458    	; 0x317e <__fp_szero>
    2fb4:	9f c0       	rjmp	.+318    	; 0x30f4 <__fp_nan>

00002fb6 <__divsf3x>:
    2fb6:	c0 d0       	rcall	.+384    	; 0x3138 <__fp_split3>
    2fb8:	98 f3       	brcs	.-26     	; 0x2fa0 <__divsf3+0x4>

00002fba <__divsf3_pse>:
    2fba:	99 23       	and	r25, r25
    2fbc:	c9 f3       	breq	.-14     	; 0x2fb0 <__divsf3+0x14>
    2fbe:	55 23       	and	r21, r21
    2fc0:	b1 f3       	breq	.-20     	; 0x2fae <__divsf3+0x12>
    2fc2:	95 1b       	sub	r25, r21
    2fc4:	55 0b       	sbc	r21, r21
    2fc6:	bb 27       	eor	r27, r27
    2fc8:	aa 27       	eor	r26, r26
    2fca:	62 17       	cp	r22, r18
    2fcc:	73 07       	cpc	r23, r19
    2fce:	84 07       	cpc	r24, r20
    2fd0:	38 f0       	brcs	.+14     	; 0x2fe0 <__divsf3_pse+0x26>
    2fd2:	9f 5f       	subi	r25, 0xFF	; 255
    2fd4:	5f 4f       	sbci	r21, 0xFF	; 255
    2fd6:	22 0f       	add	r18, r18
    2fd8:	33 1f       	adc	r19, r19
    2fda:	44 1f       	adc	r20, r20
    2fdc:	aa 1f       	adc	r26, r26
    2fde:	a9 f3       	breq	.-22     	; 0x2fca <__divsf3_pse+0x10>
    2fe0:	34 d0       	rcall	.+104    	; 0x304a <__divsf3_pse+0x90>
    2fe2:	0e 2e       	mov	r0, r30
    2fe4:	3a f0       	brmi	.+14     	; 0x2ff4 <__divsf3_pse+0x3a>
    2fe6:	e0 e8       	ldi	r30, 0x80	; 128
    2fe8:	31 d0       	rcall	.+98     	; 0x304c <__divsf3_pse+0x92>
    2fea:	91 50       	subi	r25, 0x01	; 1
    2fec:	50 40       	sbci	r21, 0x00	; 0
    2fee:	e6 95       	lsr	r30
    2ff0:	00 1c       	adc	r0, r0
    2ff2:	ca f7       	brpl	.-14     	; 0x2fe6 <__divsf3_pse+0x2c>
    2ff4:	2a d0       	rcall	.+84     	; 0x304a <__divsf3_pse+0x90>
    2ff6:	fe 2f       	mov	r31, r30
    2ff8:	28 d0       	rcall	.+80     	; 0x304a <__divsf3_pse+0x90>
    2ffa:	66 0f       	add	r22, r22
    2ffc:	77 1f       	adc	r23, r23
    2ffe:	88 1f       	adc	r24, r24
    3000:	bb 1f       	adc	r27, r27
    3002:	26 17       	cp	r18, r22
    3004:	37 07       	cpc	r19, r23
    3006:	48 07       	cpc	r20, r24
    3008:	ab 07       	cpc	r26, r27
    300a:	b0 e8       	ldi	r27, 0x80	; 128
    300c:	09 f0       	breq	.+2      	; 0x3010 <__divsf3_pse+0x56>
    300e:	bb 0b       	sbc	r27, r27
    3010:	80 2d       	mov	r24, r0
    3012:	6e 2f       	mov	r22, r30
    3014:	7f 2f       	mov	r23, r31
    3016:	ff 27       	eor	r31, r31
    3018:	93 58       	subi	r25, 0x83	; 131
    301a:	5f 4f       	sbci	r21, 0xFF	; 255
    301c:	2a f0       	brmi	.+10     	; 0x3028 <__divsf3_pse+0x6e>
    301e:	9e 3f       	cpi	r25, 0xFE	; 254
    3020:	51 05       	cpc	r21, r1
    3022:	68 f0       	brcs	.+26     	; 0x303e <__divsf3_pse+0x84>
    3024:	61 c0       	rjmp	.+194    	; 0x30e8 <__fp_inf>
    3026:	ab c0       	rjmp	.+342    	; 0x317e <__fp_szero>
    3028:	5f 3f       	cpi	r21, 0xFF	; 255
    302a:	ec f3       	brlt	.-6      	; 0x3026 <__divsf3_pse+0x6c>
    302c:	98 3e       	cpi	r25, 0xE8	; 232
    302e:	dc f3       	brlt	.-10     	; 0x3026 <__divsf3_pse+0x6c>
    3030:	86 95       	lsr	r24
    3032:	77 95       	ror	r23
    3034:	67 95       	ror	r22
    3036:	b7 95       	ror	r27
    3038:	f7 95       	ror	r31
    303a:	9f 5f       	subi	r25, 0xFF	; 255
    303c:	c9 f7       	brne	.-14     	; 0x3030 <__divsf3_pse+0x76>
    303e:	88 0f       	add	r24, r24
    3040:	91 1d       	adc	r25, r1
    3042:	96 95       	lsr	r25
    3044:	87 95       	ror	r24
    3046:	97 f9       	bld	r25, 7
    3048:	08 95       	ret
    304a:	e1 e0       	ldi	r30, 0x01	; 1
    304c:	66 0f       	add	r22, r22
    304e:	77 1f       	adc	r23, r23
    3050:	88 1f       	adc	r24, r24
    3052:	bb 1f       	adc	r27, r27
    3054:	62 17       	cp	r22, r18
    3056:	73 07       	cpc	r23, r19
    3058:	84 07       	cpc	r24, r20
    305a:	ba 07       	cpc	r27, r26
    305c:	20 f0       	brcs	.+8      	; 0x3066 <__divsf3_pse+0xac>
    305e:	62 1b       	sub	r22, r18
    3060:	73 0b       	sbc	r23, r19
    3062:	84 0b       	sbc	r24, r20
    3064:	ba 0b       	sbc	r27, r26
    3066:	ee 1f       	adc	r30, r30
    3068:	88 f7       	brcc	.-30     	; 0x304c <__divsf3_pse+0x92>
    306a:	e0 95       	com	r30
    306c:	08 95       	ret

0000306e <__floatunsisf>:
    306e:	e8 94       	clt
    3070:	09 c0       	rjmp	.+18     	; 0x3084 <__floatsisf+0x12>

00003072 <__floatsisf>:
    3072:	97 fb       	bst	r25, 7
    3074:	3e f4       	brtc	.+14     	; 0x3084 <__floatsisf+0x12>
    3076:	90 95       	com	r25
    3078:	80 95       	com	r24
    307a:	70 95       	com	r23
    307c:	61 95       	neg	r22
    307e:	7f 4f       	sbci	r23, 0xFF	; 255
    3080:	8f 4f       	sbci	r24, 0xFF	; 255
    3082:	9f 4f       	sbci	r25, 0xFF	; 255
    3084:	99 23       	and	r25, r25
    3086:	a9 f0       	breq	.+42     	; 0x30b2 <__floatsisf+0x40>
    3088:	f9 2f       	mov	r31, r25
    308a:	96 e9       	ldi	r25, 0x96	; 150
    308c:	bb 27       	eor	r27, r27
    308e:	93 95       	inc	r25
    3090:	f6 95       	lsr	r31
    3092:	87 95       	ror	r24
    3094:	77 95       	ror	r23
    3096:	67 95       	ror	r22
    3098:	b7 95       	ror	r27
    309a:	f1 11       	cpse	r31, r1
    309c:	f8 cf       	rjmp	.-16     	; 0x308e <__floatsisf+0x1c>
    309e:	fa f4       	brpl	.+62     	; 0x30de <__floatsisf+0x6c>
    30a0:	bb 0f       	add	r27, r27
    30a2:	11 f4       	brne	.+4      	; 0x30a8 <__floatsisf+0x36>
    30a4:	60 ff       	sbrs	r22, 0
    30a6:	1b c0       	rjmp	.+54     	; 0x30de <__floatsisf+0x6c>
    30a8:	6f 5f       	subi	r22, 0xFF	; 255
    30aa:	7f 4f       	sbci	r23, 0xFF	; 255
    30ac:	8f 4f       	sbci	r24, 0xFF	; 255
    30ae:	9f 4f       	sbci	r25, 0xFF	; 255
    30b0:	16 c0       	rjmp	.+44     	; 0x30de <__floatsisf+0x6c>
    30b2:	88 23       	and	r24, r24
    30b4:	11 f0       	breq	.+4      	; 0x30ba <__floatsisf+0x48>
    30b6:	96 e9       	ldi	r25, 0x96	; 150
    30b8:	11 c0       	rjmp	.+34     	; 0x30dc <__floatsisf+0x6a>
    30ba:	77 23       	and	r23, r23
    30bc:	21 f0       	breq	.+8      	; 0x30c6 <__floatsisf+0x54>
    30be:	9e e8       	ldi	r25, 0x8E	; 142
    30c0:	87 2f       	mov	r24, r23
    30c2:	76 2f       	mov	r23, r22
    30c4:	05 c0       	rjmp	.+10     	; 0x30d0 <__floatsisf+0x5e>
    30c6:	66 23       	and	r22, r22
    30c8:	71 f0       	breq	.+28     	; 0x30e6 <__floatsisf+0x74>
    30ca:	96 e8       	ldi	r25, 0x86	; 134
    30cc:	86 2f       	mov	r24, r22
    30ce:	70 e0       	ldi	r23, 0x00	; 0
    30d0:	60 e0       	ldi	r22, 0x00	; 0
    30d2:	2a f0       	brmi	.+10     	; 0x30de <__floatsisf+0x6c>
    30d4:	9a 95       	dec	r25
    30d6:	66 0f       	add	r22, r22
    30d8:	77 1f       	adc	r23, r23
    30da:	88 1f       	adc	r24, r24
    30dc:	da f7       	brpl	.-10     	; 0x30d4 <__floatsisf+0x62>
    30de:	88 0f       	add	r24, r24
    30e0:	96 95       	lsr	r25
    30e2:	87 95       	ror	r24
    30e4:	97 f9       	bld	r25, 7
    30e6:	08 95       	ret

000030e8 <__fp_inf>:
    30e8:	97 f9       	bld	r25, 7
    30ea:	9f 67       	ori	r25, 0x7F	; 127
    30ec:	80 e8       	ldi	r24, 0x80	; 128
    30ee:	70 e0       	ldi	r23, 0x00	; 0
    30f0:	60 e0       	ldi	r22, 0x00	; 0
    30f2:	08 95       	ret

000030f4 <__fp_nan>:
    30f4:	9f ef       	ldi	r25, 0xFF	; 255
    30f6:	80 ec       	ldi	r24, 0xC0	; 192
    30f8:	08 95       	ret

000030fa <__fp_pscA>:
    30fa:	00 24       	eor	r0, r0
    30fc:	0a 94       	dec	r0
    30fe:	16 16       	cp	r1, r22
    3100:	17 06       	cpc	r1, r23
    3102:	18 06       	cpc	r1, r24
    3104:	09 06       	cpc	r0, r25
    3106:	08 95       	ret

00003108 <__fp_pscB>:
    3108:	00 24       	eor	r0, r0
    310a:	0a 94       	dec	r0
    310c:	12 16       	cp	r1, r18
    310e:	13 06       	cpc	r1, r19
    3110:	14 06       	cpc	r1, r20
    3112:	05 06       	cpc	r0, r21
    3114:	08 95       	ret

00003116 <__fp_round>:
    3116:	09 2e       	mov	r0, r25
    3118:	03 94       	inc	r0
    311a:	00 0c       	add	r0, r0
    311c:	11 f4       	brne	.+4      	; 0x3122 <__fp_round+0xc>
    311e:	88 23       	and	r24, r24
    3120:	52 f0       	brmi	.+20     	; 0x3136 <__fp_round+0x20>
    3122:	bb 0f       	add	r27, r27
    3124:	40 f4       	brcc	.+16     	; 0x3136 <__fp_round+0x20>
    3126:	bf 2b       	or	r27, r31
    3128:	11 f4       	brne	.+4      	; 0x312e <__fp_round+0x18>
    312a:	60 ff       	sbrs	r22, 0
    312c:	04 c0       	rjmp	.+8      	; 0x3136 <__fp_round+0x20>
    312e:	6f 5f       	subi	r22, 0xFF	; 255
    3130:	7f 4f       	sbci	r23, 0xFF	; 255
    3132:	8f 4f       	sbci	r24, 0xFF	; 255
    3134:	9f 4f       	sbci	r25, 0xFF	; 255
    3136:	08 95       	ret

00003138 <__fp_split3>:
    3138:	57 fd       	sbrc	r21, 7
    313a:	90 58       	subi	r25, 0x80	; 128
    313c:	44 0f       	add	r20, r20
    313e:	55 1f       	adc	r21, r21
    3140:	59 f0       	breq	.+22     	; 0x3158 <__fp_splitA+0x10>
    3142:	5f 3f       	cpi	r21, 0xFF	; 255
    3144:	71 f0       	breq	.+28     	; 0x3162 <__fp_splitA+0x1a>
    3146:	47 95       	ror	r20

00003148 <__fp_splitA>:
    3148:	88 0f       	add	r24, r24
    314a:	97 fb       	bst	r25, 7
    314c:	99 1f       	adc	r25, r25
    314e:	61 f0       	breq	.+24     	; 0x3168 <__fp_splitA+0x20>
    3150:	9f 3f       	cpi	r25, 0xFF	; 255
    3152:	79 f0       	breq	.+30     	; 0x3172 <__fp_splitA+0x2a>
    3154:	87 95       	ror	r24
    3156:	08 95       	ret
    3158:	12 16       	cp	r1, r18
    315a:	13 06       	cpc	r1, r19
    315c:	14 06       	cpc	r1, r20
    315e:	55 1f       	adc	r21, r21
    3160:	f2 cf       	rjmp	.-28     	; 0x3146 <__fp_split3+0xe>
    3162:	46 95       	lsr	r20
    3164:	f1 df       	rcall	.-30     	; 0x3148 <__fp_splitA>
    3166:	08 c0       	rjmp	.+16     	; 0x3178 <__fp_splitA+0x30>
    3168:	16 16       	cp	r1, r22
    316a:	17 06       	cpc	r1, r23
    316c:	18 06       	cpc	r1, r24
    316e:	99 1f       	adc	r25, r25
    3170:	f1 cf       	rjmp	.-30     	; 0x3154 <__fp_splitA+0xc>
    3172:	86 95       	lsr	r24
    3174:	71 05       	cpc	r23, r1
    3176:	61 05       	cpc	r22, r1
    3178:	08 94       	sec
    317a:	08 95       	ret

0000317c <__fp_zero>:
    317c:	e8 94       	clt

0000317e <__fp_szero>:
    317e:	bb 27       	eor	r27, r27
    3180:	66 27       	eor	r22, r22
    3182:	77 27       	eor	r23, r23
    3184:	86 2f       	mov	r24, r22
    3186:	97 2f       	mov	r25, r23
    3188:	97 f9       	bld	r25, 7
    318a:	08 95       	ret

0000318c <lrint>:
    318c:	dd df       	rcall	.-70     	; 0x3148 <__fp_splitA>
    318e:	a8 f1       	brcs	.+106    	; 0x31fa <lrint+0x6e>
    3190:	9e 57       	subi	r25, 0x7E	; 126
    3192:	a8 f1       	brcs	.+106    	; 0x31fe <lrint+0x72>
    3194:	98 51       	subi	r25, 0x18	; 24
    3196:	60 f0       	brcs	.+24     	; 0x31b0 <lrint+0x24>
    3198:	39 f1       	breq	.+78     	; 0x31e8 <lrint+0x5c>
    319a:	98 30       	cpi	r25, 0x08	; 8
    319c:	70 f5       	brcc	.+92     	; 0x31fa <lrint+0x6e>
    319e:	09 2e       	mov	r0, r25
    31a0:	99 27       	eor	r25, r25
    31a2:	66 0f       	add	r22, r22
    31a4:	77 1f       	adc	r23, r23
    31a6:	88 1f       	adc	r24, r24
    31a8:	99 1f       	adc	r25, r25
    31aa:	0a 94       	dec	r0
    31ac:	d1 f7       	brne	.-12     	; 0x31a2 <lrint+0x16>
    31ae:	1c c0       	rjmp	.+56     	; 0x31e8 <lrint+0x5c>
    31b0:	bb 27       	eor	r27, r27
    31b2:	99 3f       	cpi	r25, 0xF9	; 249
    31b4:	4c f4       	brge	.+18     	; 0x31c8 <lrint+0x3c>
    31b6:	b1 11       	cpse	r27, r1
    31b8:	b1 e0       	ldi	r27, 0x01	; 1
    31ba:	b6 2b       	or	r27, r22
    31bc:	67 2f       	mov	r22, r23
    31be:	78 2f       	mov	r23, r24
    31c0:	88 27       	eor	r24, r24
    31c2:	98 5f       	subi	r25, 0xF8	; 248
    31c4:	b1 f7       	brne	.-20     	; 0x31b2 <lrint+0x26>
    31c6:	08 c0       	rjmp	.+16     	; 0x31d8 <lrint+0x4c>
    31c8:	86 95       	lsr	r24
    31ca:	77 95       	ror	r23
    31cc:	67 95       	ror	r22
    31ce:	b7 95       	ror	r27
    31d0:	08 f4       	brcc	.+2      	; 0x31d4 <lrint+0x48>
    31d2:	b1 60       	ori	r27, 0x01	; 1
    31d4:	93 95       	inc	r25
    31d6:	c1 f7       	brne	.-16     	; 0x31c8 <lrint+0x3c>
    31d8:	bb 0f       	add	r27, r27
    31da:	30 f4       	brcc	.+12     	; 0x31e8 <lrint+0x5c>
    31dc:	11 f4       	brne	.+4      	; 0x31e2 <lrint+0x56>
    31de:	60 ff       	sbrs	r22, 0
    31e0:	03 c0       	rjmp	.+6      	; 0x31e8 <lrint+0x5c>
    31e2:	6f 5f       	subi	r22, 0xFF	; 255
    31e4:	7f 4f       	sbci	r23, 0xFF	; 255
    31e6:	8f 4f       	sbci	r24, 0xFF	; 255
    31e8:	3e f4       	brtc	.+14     	; 0x31f8 <lrint+0x6c>
    31ea:	90 95       	com	r25
    31ec:	80 95       	com	r24
    31ee:	70 95       	com	r23
    31f0:	61 95       	neg	r22
    31f2:	7f 4f       	sbci	r23, 0xFF	; 255
    31f4:	8f 4f       	sbci	r24, 0xFF	; 255
    31f6:	9f 4f       	sbci	r25, 0xFF	; 255
    31f8:	08 95       	ret
    31fa:	68 94       	set
    31fc:	c0 cf       	rjmp	.-128    	; 0x317e <__fp_szero>
    31fe:	be cf       	rjmp	.-132    	; 0x317c <__fp_zero>

00003200 <__mulsf3>:
    3200:	0a d0       	rcall	.+20     	; 0x3216 <__mulsf3x>
    3202:	89 cf       	rjmp	.-238    	; 0x3116 <__fp_round>
    3204:	7a df       	rcall	.-268    	; 0x30fa <__fp_pscA>
    3206:	28 f0       	brcs	.+10     	; 0x3212 <__mulsf3+0x12>
    3208:	7f df       	rcall	.-258    	; 0x3108 <__fp_pscB>
    320a:	18 f0       	brcs	.+6      	; 0x3212 <__mulsf3+0x12>
    320c:	95 23       	and	r25, r21
    320e:	09 f0       	breq	.+2      	; 0x3212 <__mulsf3+0x12>
    3210:	6b cf       	rjmp	.-298    	; 0x30e8 <__fp_inf>
    3212:	70 cf       	rjmp	.-288    	; 0x30f4 <__fp_nan>
    3214:	b4 cf       	rjmp	.-152    	; 0x317e <__fp_szero>

00003216 <__mulsf3x>:
    3216:	90 df       	rcall	.-224    	; 0x3138 <__fp_split3>
    3218:	a8 f3       	brcs	.-22     	; 0x3204 <__mulsf3+0x4>

0000321a <__mulsf3_pse>:
    321a:	99 23       	and	r25, r25
    321c:	d9 f3       	breq	.-10     	; 0x3214 <__mulsf3+0x14>
    321e:	55 23       	and	r21, r21
    3220:	c9 f3       	breq	.-14     	; 0x3214 <__mulsf3+0x14>
    3222:	95 0f       	add	r25, r21
    3224:	50 e0       	ldi	r21, 0x00	; 0
    3226:	55 1f       	adc	r21, r21
    3228:	aa 27       	eor	r26, r26
    322a:	ee 27       	eor	r30, r30
    322c:	ff 27       	eor	r31, r31
    322e:	bb 27       	eor	r27, r27
    3230:	00 24       	eor	r0, r0
    3232:	08 94       	sec
    3234:	67 95       	ror	r22
    3236:	20 f4       	brcc	.+8      	; 0x3240 <__mulsf3_pse+0x26>
    3238:	e2 0f       	add	r30, r18
    323a:	f3 1f       	adc	r31, r19
    323c:	b4 1f       	adc	r27, r20
    323e:	0a 1e       	adc	r0, r26
    3240:	22 0f       	add	r18, r18
    3242:	33 1f       	adc	r19, r19
    3244:	44 1f       	adc	r20, r20
    3246:	aa 1f       	adc	r26, r26
    3248:	66 95       	lsr	r22
    324a:	a9 f7       	brne	.-22     	; 0x3236 <__mulsf3_pse+0x1c>
    324c:	77 95       	ror	r23
    324e:	30 f4       	brcc	.+12     	; 0x325c <__mulsf3_pse+0x42>
    3250:	f3 0f       	add	r31, r19
    3252:	b4 1f       	adc	r27, r20
    3254:	0a 1e       	adc	r0, r26
    3256:	12 1e       	adc	r1, r18
    3258:	08 f4       	brcc	.+2      	; 0x325c <__mulsf3_pse+0x42>
    325a:	63 95       	inc	r22
    325c:	33 0f       	add	r19, r19
    325e:	44 1f       	adc	r20, r20
    3260:	aa 1f       	adc	r26, r26
    3262:	22 1f       	adc	r18, r18
    3264:	76 95       	lsr	r23
    3266:	99 f7       	brne	.-26     	; 0x324e <__mulsf3_pse+0x34>
    3268:	87 95       	ror	r24
    326a:	20 f4       	brcc	.+8      	; 0x3274 <__mulsf3_pse+0x5a>
    326c:	b4 0f       	add	r27, r20
    326e:	0a 1e       	adc	r0, r26
    3270:	12 1e       	adc	r1, r18
    3272:	63 1f       	adc	r22, r19
    3274:	44 0f       	add	r20, r20
    3276:	aa 1f       	adc	r26, r26
    3278:	22 1f       	adc	r18, r18
    327a:	33 1f       	adc	r19, r19
    327c:	86 95       	lsr	r24
    327e:	a9 f7       	brne	.-22     	; 0x326a <__mulsf3_pse+0x50>
    3280:	86 2f       	mov	r24, r22
    3282:	71 2d       	mov	r23, r1
    3284:	60 2d       	mov	r22, r0
    3286:	11 24       	eor	r1, r1
    3288:	9f 57       	subi	r25, 0x7F	; 127
    328a:	50 40       	sbci	r21, 0x00	; 0
    328c:	8a f0       	brmi	.+34     	; 0x32b0 <__mulsf3_pse+0x96>
    328e:	e1 f0       	breq	.+56     	; 0x32c8 <__mulsf3_pse+0xae>
    3290:	88 23       	and	r24, r24
    3292:	4a f0       	brmi	.+18     	; 0x32a6 <__mulsf3_pse+0x8c>
    3294:	ee 0f       	add	r30, r30
    3296:	ff 1f       	adc	r31, r31
    3298:	bb 1f       	adc	r27, r27
    329a:	66 1f       	adc	r22, r22
    329c:	77 1f       	adc	r23, r23
    329e:	88 1f       	adc	r24, r24
    32a0:	91 50       	subi	r25, 0x01	; 1
    32a2:	50 40       	sbci	r21, 0x00	; 0
    32a4:	a9 f7       	brne	.-22     	; 0x3290 <__mulsf3_pse+0x76>
    32a6:	9e 3f       	cpi	r25, 0xFE	; 254
    32a8:	51 05       	cpc	r21, r1
    32aa:	70 f0       	brcs	.+28     	; 0x32c8 <__mulsf3_pse+0xae>
    32ac:	1d cf       	rjmp	.-454    	; 0x30e8 <__fp_inf>
    32ae:	67 cf       	rjmp	.-306    	; 0x317e <__fp_szero>
    32b0:	5f 3f       	cpi	r21, 0xFF	; 255
    32b2:	ec f3       	brlt	.-6      	; 0x32ae <__mulsf3_pse+0x94>
    32b4:	98 3e       	cpi	r25, 0xE8	; 232
    32b6:	dc f3       	brlt	.-10     	; 0x32ae <__mulsf3_pse+0x94>
    32b8:	86 95       	lsr	r24
    32ba:	77 95       	ror	r23
    32bc:	67 95       	ror	r22
    32be:	b7 95       	ror	r27
    32c0:	f7 95       	ror	r31
    32c2:	e7 95       	ror	r30
    32c4:	9f 5f       	subi	r25, 0xFF	; 255
    32c6:	c1 f7       	brne	.-16     	; 0x32b8 <__mulsf3_pse+0x9e>
    32c8:	fe 2b       	or	r31, r30
    32ca:	88 0f       	add	r24, r24
    32cc:	91 1d       	adc	r25, r1
    32ce:	96 95       	lsr	r25
    32d0:	87 95       	ror	r24
    32d2:	97 f9       	bld	r25, 7
    32d4:	08 95       	ret

000032d6 <pow>:
    32d6:	e4 2f       	mov	r30, r20
    32d8:	f5 2f       	mov	r31, r21
    32da:	ee 0f       	add	r30, r30
    32dc:	ff 1f       	adc	r31, r31
    32de:	30 96       	adiw	r30, 0x00	; 0
    32e0:	21 05       	cpc	r18, r1
    32e2:	31 05       	cpc	r19, r1
    32e4:	a1 f1       	breq	.+104    	; 0x334e <pow+0x78>
    32e6:	61 15       	cp	r22, r1
    32e8:	71 05       	cpc	r23, r1
    32ea:	61 f4       	brne	.+24     	; 0x3304 <pow+0x2e>
    32ec:	80 38       	cpi	r24, 0x80	; 128
    32ee:	bf e3       	ldi	r27, 0x3F	; 63
    32f0:	9b 07       	cpc	r25, r27
    32f2:	51 f1       	breq	.+84     	; 0x3348 <pow+0x72>
    32f4:	68 94       	set
    32f6:	90 38       	cpi	r25, 0x80	; 128
    32f8:	81 05       	cpc	r24, r1
    32fa:	61 f0       	breq	.+24     	; 0x3314 <pow+0x3e>
    32fc:	80 38       	cpi	r24, 0x80	; 128
    32fe:	bf ef       	ldi	r27, 0xFF	; 255
    3300:	9b 07       	cpc	r25, r27
    3302:	41 f0       	breq	.+16     	; 0x3314 <pow+0x3e>
    3304:	99 23       	and	r25, r25
    3306:	4a f5       	brpl	.+82     	; 0x335a <pow+0x84>
    3308:	ff 3f       	cpi	r31, 0xFF	; 255
    330a:	e1 05       	cpc	r30, r1
    330c:	31 05       	cpc	r19, r1
    330e:	21 05       	cpc	r18, r1
    3310:	19 f1       	breq	.+70     	; 0x3358 <pow+0x82>
    3312:	e8 94       	clt
    3314:	08 94       	sec
    3316:	e7 95       	ror	r30
    3318:	a2 2f       	mov	r26, r18
    331a:	b3 2f       	mov	r27, r19
    331c:	aa 23       	and	r26, r26
    331e:	29 f4       	brne	.+10     	; 0x332a <pow+0x54>
    3320:	ab 2f       	mov	r26, r27
    3322:	be 2f       	mov	r27, r30
    3324:	f8 5f       	subi	r31, 0xF8	; 248
    3326:	d0 f3       	brcs	.-12     	; 0x331c <pow+0x46>
    3328:	10 c0       	rjmp	.+32     	; 0x334a <pow+0x74>
    332a:	ff 5f       	subi	r31, 0xFF	; 255
    332c:	70 f4       	brcc	.+28     	; 0x334a <pow+0x74>
    332e:	a6 95       	lsr	r26
    3330:	e0 f7       	brcc	.-8      	; 0x332a <pow+0x54>
    3332:	f7 39       	cpi	r31, 0x97	; 151
    3334:	50 f0       	brcs	.+20     	; 0x334a <pow+0x74>
    3336:	19 f0       	breq	.+6      	; 0x333e <pow+0x68>
    3338:	ff 3a       	cpi	r31, 0xAF	; 175
    333a:	38 f4       	brcc	.+14     	; 0x334a <pow+0x74>
    333c:	9f 77       	andi	r25, 0x7F	; 127
    333e:	9f 93       	push	r25
    3340:	0c d0       	rcall	.+24     	; 0x335a <pow+0x84>
    3342:	0f 90       	pop	r0
    3344:	07 fc       	sbrc	r0, 7
    3346:	90 58       	subi	r25, 0x80	; 128
    3348:	08 95       	ret
    334a:	3e f0       	brts	.+14     	; 0x335a <pow+0x84>
    334c:	d3 ce       	rjmp	.-602    	; 0x30f4 <__fp_nan>
    334e:	60 e0       	ldi	r22, 0x00	; 0
    3350:	70 e0       	ldi	r23, 0x00	; 0
    3352:	80 e8       	ldi	r24, 0x80	; 128
    3354:	9f e3       	ldi	r25, 0x3F	; 63
    3356:	08 95       	ret
    3358:	4f e7       	ldi	r20, 0x7F	; 127
    335a:	9f 77       	andi	r25, 0x7F	; 127
    335c:	5f 93       	push	r21
    335e:	4f 93       	push	r20
    3360:	3f 93       	push	r19
    3362:	2f 93       	push	r18
    3364:	b2 d0       	rcall	.+356    	; 0x34ca <log>
    3366:	2f 91       	pop	r18
    3368:	3f 91       	pop	r19
    336a:	4f 91       	pop	r20
    336c:	5f 91       	pop	r21
    336e:	48 df       	rcall	.-368    	; 0x3200 <__mulsf3>
    3370:	05 c0       	rjmp	.+10     	; 0x337c <exp>
    3372:	19 f4       	brne	.+6      	; 0x337a <pow+0xa4>
    3374:	0e f0       	brts	.+2      	; 0x3378 <pow+0xa2>
    3376:	b8 ce       	rjmp	.-656    	; 0x30e8 <__fp_inf>
    3378:	01 cf       	rjmp	.-510    	; 0x317c <__fp_zero>
    337a:	bc ce       	rjmp	.-648    	; 0x30f4 <__fp_nan>

0000337c <exp>:
    337c:	e5 de       	rcall	.-566    	; 0x3148 <__fp_splitA>
    337e:	c8 f3       	brcs	.-14     	; 0x3372 <pow+0x9c>
    3380:	96 38       	cpi	r25, 0x86	; 134
    3382:	c0 f7       	brcc	.-16     	; 0x3374 <pow+0x9e>
    3384:	07 f8       	bld	r0, 7
    3386:	0f 92       	push	r0
    3388:	e8 94       	clt
    338a:	2b e3       	ldi	r18, 0x3B	; 59
    338c:	3a ea       	ldi	r19, 0xAA	; 170
    338e:	48 eb       	ldi	r20, 0xB8	; 184
    3390:	5f e7       	ldi	r21, 0x7F	; 127
    3392:	43 df       	rcall	.-378    	; 0x321a <__mulsf3_pse>
    3394:	0f 92       	push	r0
    3396:	0f 92       	push	r0
    3398:	0f 92       	push	r0
    339a:	4d b7       	in	r20, 0x3d	; 61
    339c:	5e b7       	in	r21, 0x3e	; 62
    339e:	0f 92       	push	r0
    33a0:	d9 d0       	rcall	.+434    	; 0x3554 <modf>
    33a2:	e8 ec       	ldi	r30, 0xC8	; 200
    33a4:	f0 e0       	ldi	r31, 0x00	; 0
    33a6:	16 d0       	rcall	.+44     	; 0x33d4 <__fp_powser>
    33a8:	4f 91       	pop	r20
    33aa:	5f 91       	pop	r21
    33ac:	ef 91       	pop	r30
    33ae:	ff 91       	pop	r31
    33b0:	e5 95       	asr	r30
    33b2:	ee 1f       	adc	r30, r30
    33b4:	ff 1f       	adc	r31, r31
    33b6:	49 f0       	breq	.+18     	; 0x33ca <exp+0x4e>
    33b8:	fe 57       	subi	r31, 0x7E	; 126
    33ba:	e0 68       	ori	r30, 0x80	; 128
    33bc:	44 27       	eor	r20, r20
    33be:	ee 0f       	add	r30, r30
    33c0:	44 1f       	adc	r20, r20
    33c2:	fa 95       	dec	r31
    33c4:	e1 f7       	brne	.-8      	; 0x33be <exp+0x42>
    33c6:	41 95       	neg	r20
    33c8:	55 0b       	sbc	r21, r21
    33ca:	46 d0       	rcall	.+140    	; 0x3458 <ldexp>
    33cc:	0f 90       	pop	r0
    33ce:	07 fe       	sbrs	r0, 7
    33d0:	38 c0       	rjmp	.+112    	; 0x3442 <inverse>
    33d2:	08 95       	ret

000033d4 <__fp_powser>:
    33d4:	df 93       	push	r29
    33d6:	cf 93       	push	r28
    33d8:	1f 93       	push	r17
    33da:	0f 93       	push	r16
    33dc:	ff 92       	push	r15
    33de:	ef 92       	push	r14
    33e0:	df 92       	push	r13
    33e2:	e6 2e       	mov	r14, r22
    33e4:	f7 2e       	mov	r15, r23
    33e6:	08 2f       	mov	r16, r24
    33e8:	19 2f       	mov	r17, r25
    33ea:	68 94       	set
    33ec:	07 c0       	rjmp	.+14     	; 0x33fc <__fp_powser+0x28>
    33ee:	da 2e       	mov	r13, r26
    33f0:	ce 2f       	mov	r28, r30
    33f2:	df 2f       	mov	r29, r31
    33f4:	10 df       	rcall	.-480    	; 0x3216 <__mulsf3x>
    33f6:	ec 2f       	mov	r30, r28
    33f8:	fd 2f       	mov	r31, r29
    33fa:	e8 94       	clt
    33fc:	c8 95       	lpm
    33fe:	a0 2d       	mov	r26, r0
    3400:	31 96       	adiw	r30, 0x01	; 1
    3402:	c8 95       	lpm
    3404:	20 2d       	mov	r18, r0
    3406:	31 96       	adiw	r30, 0x01	; 1
    3408:	c8 95       	lpm
    340a:	30 2d       	mov	r19, r0
    340c:	31 96       	adiw	r30, 0x01	; 1
    340e:	c8 95       	lpm
    3410:	40 2d       	mov	r20, r0
    3412:	31 96       	adiw	r30, 0x01	; 1
    3414:	c8 95       	lpm
    3416:	50 2d       	mov	r21, r0
    3418:	31 96       	adiw	r30, 0x01	; 1
    341a:	4e f3       	brts	.-46     	; 0x33ee <__fp_powser+0x1a>
    341c:	ce 2f       	mov	r28, r30
    341e:	df 2f       	mov	r29, r31
    3420:	65 dd       	rcall	.-1334   	; 0x2eec <__addsf3x>
    3422:	ec 2f       	mov	r30, r28
    3424:	fd 2f       	mov	r31, r29
    3426:	2e 2d       	mov	r18, r14
    3428:	3f 2d       	mov	r19, r15
    342a:	40 2f       	mov	r20, r16
    342c:	51 2f       	mov	r21, r17
    342e:	da 94       	dec	r13
    3430:	f9 f6       	brne	.-66     	; 0x33f0 <__fp_powser+0x1c>
    3432:	df 90       	pop	r13
    3434:	ef 90       	pop	r14
    3436:	ff 90       	pop	r15
    3438:	0f 91       	pop	r16
    343a:	1f 91       	pop	r17
    343c:	cf 91       	pop	r28
    343e:	df 91       	pop	r29
    3440:	08 95       	ret

00003442 <inverse>:
    3442:	26 2f       	mov	r18, r22
    3444:	37 2f       	mov	r19, r23
    3446:	48 2f       	mov	r20, r24
    3448:	59 2f       	mov	r21, r25
    344a:	60 e0       	ldi	r22, 0x00	; 0
    344c:	70 e0       	ldi	r23, 0x00	; 0
    344e:	80 e8       	ldi	r24, 0x80	; 128
    3450:	9f e3       	ldi	r25, 0x3F	; 63
    3452:	a4 cd       	rjmp	.-1208   	; 0x2f9c <__divsf3>
    3454:	49 ce       	rjmp	.-878    	; 0x30e8 <__fp_inf>
    3456:	b7 c0       	rjmp	.+366    	; 0x35c6 <__fp_mpack>

00003458 <ldexp>:
    3458:	77 de       	rcall	.-786    	; 0x3148 <__fp_splitA>
    345a:	e8 f3       	brcs	.-6      	; 0x3456 <inverse+0x14>
    345c:	99 23       	and	r25, r25
    345e:	d9 f3       	breq	.-10     	; 0x3456 <inverse+0x14>
    3460:	94 0f       	add	r25, r20
    3462:	51 1d       	adc	r21, r1
    3464:	bb f3       	brvs	.-18     	; 0x3454 <inverse+0x12>
    3466:	91 50       	subi	r25, 0x01	; 1
    3468:	50 40       	sbci	r21, 0x00	; 0
    346a:	94 f0       	brlt	.+36     	; 0x3490 <ldexp+0x38>
    346c:	59 f0       	breq	.+22     	; 0x3484 <ldexp+0x2c>
    346e:	88 23       	and	r24, r24
    3470:	32 f0       	brmi	.+12     	; 0x347e <ldexp+0x26>
    3472:	66 0f       	add	r22, r22
    3474:	77 1f       	adc	r23, r23
    3476:	88 1f       	adc	r24, r24
    3478:	91 50       	subi	r25, 0x01	; 1
    347a:	50 40       	sbci	r21, 0x00	; 0
    347c:	c1 f7       	brne	.-16     	; 0x346e <ldexp+0x16>
    347e:	9e 3f       	cpi	r25, 0xFE	; 254
    3480:	51 05       	cpc	r21, r1
    3482:	44 f7       	brge	.-48     	; 0x3454 <inverse+0x12>
    3484:	88 0f       	add	r24, r24
    3486:	91 1d       	adc	r25, r1
    3488:	96 95       	lsr	r25
    348a:	87 95       	ror	r24
    348c:	97 f9       	bld	r25, 7
    348e:	08 95       	ret
    3490:	5f 3f       	cpi	r21, 0xFF	; 255
    3492:	ac f0       	brlt	.+42     	; 0x34be <ldexp+0x66>
    3494:	98 3e       	cpi	r25, 0xE8	; 232
    3496:	9c f0       	brlt	.+38     	; 0x34be <ldexp+0x66>
    3498:	bb 27       	eor	r27, r27
    349a:	86 95       	lsr	r24
    349c:	77 95       	ror	r23
    349e:	67 95       	ror	r22
    34a0:	b7 95       	ror	r27
    34a2:	08 f4       	brcc	.+2      	; 0x34a6 <ldexp+0x4e>
    34a4:	b1 60       	ori	r27, 0x01	; 1
    34a6:	93 95       	inc	r25
    34a8:	c1 f7       	brne	.-16     	; 0x349a <ldexp+0x42>
    34aa:	bb 0f       	add	r27, r27
    34ac:	58 f7       	brcc	.-42     	; 0x3484 <ldexp+0x2c>
    34ae:	11 f4       	brne	.+4      	; 0x34b4 <ldexp+0x5c>
    34b0:	60 ff       	sbrs	r22, 0
    34b2:	e8 cf       	rjmp	.-48     	; 0x3484 <ldexp+0x2c>
    34b4:	6f 5f       	subi	r22, 0xFF	; 255
    34b6:	7f 4f       	sbci	r23, 0xFF	; 255
    34b8:	8f 4f       	sbci	r24, 0xFF	; 255
    34ba:	9f 4f       	sbci	r25, 0xFF	; 255
    34bc:	e3 cf       	rjmp	.-58     	; 0x3484 <ldexp+0x2c>
    34be:	5f ce       	rjmp	.-834    	; 0x317e <__fp_szero>
    34c0:	0e f0       	brts	.+2      	; 0x34c4 <ldexp+0x6c>
    34c2:	81 c0       	rjmp	.+258    	; 0x35c6 <__fp_mpack>
    34c4:	17 ce       	rjmp	.-978    	; 0x30f4 <__fp_nan>
    34c6:	68 94       	set
    34c8:	0f ce       	rjmp	.-994    	; 0x30e8 <__fp_inf>

000034ca <log>:
    34ca:	3e de       	rcall	.-900    	; 0x3148 <__fp_splitA>
    34cc:	c8 f3       	brcs	.-14     	; 0x34c0 <ldexp+0x68>
    34ce:	99 23       	and	r25, r25
    34d0:	d1 f3       	breq	.-12     	; 0x34c6 <ldexp+0x6e>
    34d2:	c6 f3       	brts	.-16     	; 0x34c4 <ldexp+0x6c>
    34d4:	df 93       	push	r29
    34d6:	cf 93       	push	r28
    34d8:	1f 93       	push	r17
    34da:	0f 93       	push	r16
    34dc:	ff 92       	push	r15
    34de:	c9 2f       	mov	r28, r25
    34e0:	dd 27       	eor	r29, r29
    34e2:	88 23       	and	r24, r24
    34e4:	2a f0       	brmi	.+10     	; 0x34f0 <log+0x26>
    34e6:	21 97       	sbiw	r28, 0x01	; 1
    34e8:	66 0f       	add	r22, r22
    34ea:	77 1f       	adc	r23, r23
    34ec:	88 1f       	adc	r24, r24
    34ee:	da f7       	brpl	.-10     	; 0x34e6 <log+0x1c>
    34f0:	20 e0       	ldi	r18, 0x00	; 0
    34f2:	30 e0       	ldi	r19, 0x00	; 0
    34f4:	40 e8       	ldi	r20, 0x80	; 128
    34f6:	5f eb       	ldi	r21, 0xBF	; 191
    34f8:	9f e3       	ldi	r25, 0x3F	; 63
    34fa:	88 39       	cpi	r24, 0x98	; 152
    34fc:	20 f0       	brcs	.+8      	; 0x3506 <log+0x3c>
    34fe:	80 3e       	cpi	r24, 0xE0	; 224
    3500:	30 f0       	brcs	.+12     	; 0x350e <log+0x44>
    3502:	21 96       	adiw	r28, 0x01	; 1
    3504:	8f 77       	andi	r24, 0x7F	; 127
    3506:	e1 dc       	rcall	.-1598   	; 0x2eca <__addsf3>
    3508:	e0 ef       	ldi	r30, 0xF0	; 240
    350a:	f0 e0       	ldi	r31, 0x00	; 0
    350c:	03 c0       	rjmp	.+6      	; 0x3514 <log+0x4a>
    350e:	dd dc       	rcall	.-1606   	; 0x2eca <__addsf3>
    3510:	ed e1       	ldi	r30, 0x1D	; 29
    3512:	f1 e0       	ldi	r31, 0x01	; 1
    3514:	5f df       	rcall	.-322    	; 0x33d4 <__fp_powser>
    3516:	06 2f       	mov	r16, r22
    3518:	17 2f       	mov	r17, r23
    351a:	6c 2f       	mov	r22, r28
    351c:	7d 2f       	mov	r23, r29
    351e:	c8 2f       	mov	r28, r24
    3520:	d9 2f       	mov	r29, r25
    3522:	fb 2e       	mov	r15, r27
    3524:	6f 57       	subi	r22, 0x7F	; 127
    3526:	71 09       	sbc	r23, r1
    3528:	75 95       	asr	r23
    352a:	77 1f       	adc	r23, r23
    352c:	88 0b       	sbc	r24, r24
    352e:	99 0b       	sbc	r25, r25
    3530:	a0 dd       	rcall	.-1216   	; 0x3072 <__floatsisf>
    3532:	28 e1       	ldi	r18, 0x18	; 24
    3534:	32 e7       	ldi	r19, 0x72	; 114
    3536:	41 e3       	ldi	r20, 0x31	; 49
    3538:	5f e3       	ldi	r21, 0x3F	; 63
    353a:	6d de       	rcall	.-806    	; 0x3216 <__mulsf3x>
    353c:	af 2d       	mov	r26, r15
    353e:	20 2f       	mov	r18, r16
    3540:	31 2f       	mov	r19, r17
    3542:	4c 2f       	mov	r20, r28
    3544:	5d 2f       	mov	r21, r29
    3546:	ff 90       	pop	r15
    3548:	0f 91       	pop	r16
    354a:	1f 91       	pop	r17
    354c:	cf 91       	pop	r28
    354e:	df 91       	pop	r29
    3550:	cd dc       	rcall	.-1638   	; 0x2eec <__addsf3x>
    3552:	e1 cd       	rjmp	.-1086   	; 0x3116 <__fp_round>

00003554 <modf>:
    3554:	e4 2f       	mov	r30, r20
    3556:	f5 2f       	mov	r31, r21
    3558:	a8 2f       	mov	r26, r24
    355a:	b9 2f       	mov	r27, r25
    355c:	aa 0f       	add	r26, r26
    355e:	bb 1f       	adc	r27, r27
    3560:	26 2f       	mov	r18, r22
    3562:	37 2f       	mov	r19, r23
    3564:	48 2f       	mov	r20, r24
    3566:	59 2f       	mov	r21, r25
    3568:	bf 57       	subi	r27, 0x7F	; 127
    356a:	28 f4       	brcc	.+10     	; 0x3576 <modf+0x22>
    356c:	22 27       	eor	r18, r18
    356e:	33 27       	eor	r19, r19
    3570:	44 27       	eor	r20, r20
    3572:	50 78       	andi	r21, 0x80	; 128
    3574:	21 c0       	rjmp	.+66     	; 0x35b8 <modf+0x64>
    3576:	b7 51       	subi	r27, 0x17	; 23
    3578:	88 f4       	brcc	.+34     	; 0x359c <modf+0x48>
    357a:	ab 2f       	mov	r26, r27
    357c:	00 24       	eor	r0, r0
    357e:	46 95       	lsr	r20
    3580:	37 95       	ror	r19
    3582:	27 95       	ror	r18
    3584:	01 1c       	adc	r0, r1
    3586:	a3 95       	inc	r26
    3588:	d2 f3       	brmi	.-12     	; 0x357e <modf+0x2a>
    358a:	00 20       	and	r0, r0
    358c:	69 f0       	breq	.+26     	; 0x35a8 <modf+0x54>
    358e:	22 0f       	add	r18, r18
    3590:	33 1f       	adc	r19, r19
    3592:	44 1f       	adc	r20, r20
    3594:	b3 95       	inc	r27
    3596:	da f3       	brmi	.-10     	; 0x358e <modf+0x3a>
    3598:	0f d0       	rcall	.+30     	; 0x35b8 <modf+0x64>
    359a:	96 cc       	rjmp	.-1748   	; 0x2ec8 <__subsf3>
    359c:	61 30       	cpi	r22, 0x01	; 1
    359e:	71 05       	cpc	r23, r1
    35a0:	a0 e8       	ldi	r26, 0x80	; 128
    35a2:	8a 07       	cpc	r24, r26
    35a4:	b9 46       	sbci	r27, 0x69	; 105
    35a6:	40 f4       	brcc	.+16     	; 0x35b8 <modf+0x64>
    35a8:	26 2f       	mov	r18, r22
    35aa:	37 2f       	mov	r19, r23
    35ac:	48 2f       	mov	r20, r24
    35ae:	59 2f       	mov	r21, r25
    35b0:	66 27       	eor	r22, r22
    35b2:	77 27       	eor	r23, r23
    35b4:	88 27       	eor	r24, r24
    35b6:	90 78       	andi	r25, 0x80	; 128
    35b8:	30 96       	adiw	r30, 0x00	; 0
    35ba:	21 f0       	breq	.+8      	; 0x35c4 <modf+0x70>
    35bc:	20 83       	st	Z, r18
    35be:	31 83       	std	Z+1, r19	; 0x01
    35c0:	42 83       	std	Z+2, r20	; 0x02
    35c2:	53 83       	std	Z+3, r21	; 0x03
    35c4:	08 95       	ret

000035c6 <__fp_mpack>:
    35c6:	9f 3f       	cpi	r25, 0xFF	; 255
    35c8:	31 f0       	breq	.+12     	; 0x35d6 <__fp_mpack_finite+0xc>

000035ca <__fp_mpack_finite>:
    35ca:	91 50       	subi	r25, 0x01	; 1
    35cc:	20 f4       	brcc	.+8      	; 0x35d6 <__fp_mpack_finite+0xc>
    35ce:	87 95       	ror	r24
    35d0:	77 95       	ror	r23
    35d2:	67 95       	ror	r22
    35d4:	b7 95       	ror	r27
    35d6:	88 0f       	add	r24, r24
    35d8:	91 1d       	adc	r25, r1
    35da:	96 95       	lsr	r25
    35dc:	87 95       	ror	r24
    35de:	97 f9       	bld	r25, 7
    35e0:	08 95       	ret

000035e2 <__mulsi3>:
    35e2:	62 9f       	mul	r22, r18
    35e4:	d0 01       	movw	r26, r0
    35e6:	73 9f       	mul	r23, r19
    35e8:	f0 01       	movw	r30, r0
    35ea:	82 9f       	mul	r24, r18
    35ec:	e0 0d       	add	r30, r0
    35ee:	f1 1d       	adc	r31, r1
    35f0:	64 9f       	mul	r22, r20
    35f2:	e0 0d       	add	r30, r0
    35f4:	f1 1d       	adc	r31, r1
    35f6:	92 9f       	mul	r25, r18
    35f8:	f0 0d       	add	r31, r0
    35fa:	83 9f       	mul	r24, r19
    35fc:	f0 0d       	add	r31, r0
    35fe:	74 9f       	mul	r23, r20
    3600:	f0 0d       	add	r31, r0
    3602:	65 9f       	mul	r22, r21
    3604:	f0 0d       	add	r31, r0
    3606:	99 27       	eor	r25, r25
    3608:	72 9f       	mul	r23, r18
    360a:	b0 0d       	add	r27, r0
    360c:	e1 1d       	adc	r30, r1
    360e:	f9 1f       	adc	r31, r25
    3610:	63 9f       	mul	r22, r19
    3612:	b0 0d       	add	r27, r0
    3614:	e1 1d       	adc	r30, r1
    3616:	f9 1f       	adc	r31, r25
    3618:	bd 01       	movw	r22, r26
    361a:	cf 01       	movw	r24, r30
    361c:	11 24       	eor	r1, r1
    361e:	08 95       	ret

00003620 <__udivmodsi4>:
    3620:	a1 e2       	ldi	r26, 0x21	; 33
    3622:	1a 2e       	mov	r1, r26
    3624:	aa 1b       	sub	r26, r26
    3626:	bb 1b       	sub	r27, r27
    3628:	fd 01       	movw	r30, r26
    362a:	0d c0       	rjmp	.+26     	; 0x3646 <__udivmodsi4_ep>

0000362c <__udivmodsi4_loop>:
    362c:	aa 1f       	adc	r26, r26
    362e:	bb 1f       	adc	r27, r27
    3630:	ee 1f       	adc	r30, r30
    3632:	ff 1f       	adc	r31, r31
    3634:	a2 17       	cp	r26, r18
    3636:	b3 07       	cpc	r27, r19
    3638:	e4 07       	cpc	r30, r20
    363a:	f5 07       	cpc	r31, r21
    363c:	20 f0       	brcs	.+8      	; 0x3646 <__udivmodsi4_ep>
    363e:	a2 1b       	sub	r26, r18
    3640:	b3 0b       	sbc	r27, r19
    3642:	e4 0b       	sbc	r30, r20
    3644:	f5 0b       	sbc	r31, r21

00003646 <__udivmodsi4_ep>:
    3646:	66 1f       	adc	r22, r22
    3648:	77 1f       	adc	r23, r23
    364a:	88 1f       	adc	r24, r24
    364c:	99 1f       	adc	r25, r25
    364e:	1a 94       	dec	r1
    3650:	69 f7       	brne	.-38     	; 0x362c <__udivmodsi4_loop>
    3652:	60 95       	com	r22
    3654:	70 95       	com	r23
    3656:	80 95       	com	r24
    3658:	90 95       	com	r25
    365a:	9b 01       	movw	r18, r22
    365c:	ac 01       	movw	r20, r24
    365e:	bd 01       	movw	r22, r26
    3660:	cf 01       	movw	r24, r30
    3662:	08 95       	ret

00003664 <malloc>:
    3664:	cf 93       	push	r28
    3666:	df 93       	push	r29
    3668:	bc 01       	movw	r22, r24
    366a:	82 30       	cpi	r24, 0x02	; 2
    366c:	91 05       	cpc	r25, r1
    366e:	10 f4       	brcc	.+4      	; 0x3674 <malloc+0x10>
    3670:	62 e0       	ldi	r22, 0x02	; 2
    3672:	70 e0       	ldi	r23, 0x00	; 0
    3674:	a0 91 e8 02 	lds	r26, 0x02E8
    3678:	b0 91 e9 02 	lds	r27, 0x02E9
    367c:	ed 01       	movw	r28, r26
    367e:	e0 e0       	ldi	r30, 0x00	; 0
    3680:	f0 e0       	ldi	r31, 0x00	; 0
    3682:	40 e0       	ldi	r20, 0x00	; 0
    3684:	50 e0       	ldi	r21, 0x00	; 0
    3686:	21 c0       	rjmp	.+66     	; 0x36ca <malloc+0x66>
    3688:	88 81       	ld	r24, Y
    368a:	99 81       	ldd	r25, Y+1	; 0x01
    368c:	86 17       	cp	r24, r22
    368e:	97 07       	cpc	r25, r23
    3690:	69 f4       	brne	.+26     	; 0x36ac <malloc+0x48>
    3692:	8a 81       	ldd	r24, Y+2	; 0x02
    3694:	9b 81       	ldd	r25, Y+3	; 0x03
    3696:	30 97       	sbiw	r30, 0x00	; 0
    3698:	19 f0       	breq	.+6      	; 0x36a0 <malloc+0x3c>
    369a:	93 83       	std	Z+3, r25	; 0x03
    369c:	82 83       	std	Z+2, r24	; 0x02
    369e:	04 c0       	rjmp	.+8      	; 0x36a8 <malloc+0x44>
    36a0:	90 93 e9 02 	sts	0x02E9, r25
    36a4:	80 93 e8 02 	sts	0x02E8, r24
    36a8:	fe 01       	movw	r30, r28
    36aa:	34 c0       	rjmp	.+104    	; 0x3714 <malloc+0xb0>
    36ac:	68 17       	cp	r22, r24
    36ae:	79 07       	cpc	r23, r25
    36b0:	38 f4       	brcc	.+14     	; 0x36c0 <malloc+0x5c>
    36b2:	41 15       	cp	r20, r1
    36b4:	51 05       	cpc	r21, r1
    36b6:	19 f0       	breq	.+6      	; 0x36be <malloc+0x5a>
    36b8:	84 17       	cp	r24, r20
    36ba:	95 07       	cpc	r25, r21
    36bc:	08 f4       	brcc	.+2      	; 0x36c0 <malloc+0x5c>
    36be:	ac 01       	movw	r20, r24
    36c0:	fe 01       	movw	r30, r28
    36c2:	8a 81       	ldd	r24, Y+2	; 0x02
    36c4:	9b 81       	ldd	r25, Y+3	; 0x03
    36c6:	9c 01       	movw	r18, r24
    36c8:	e9 01       	movw	r28, r18
    36ca:	20 97       	sbiw	r28, 0x00	; 0
    36cc:	e9 f6       	brne	.-70     	; 0x3688 <malloc+0x24>
    36ce:	41 15       	cp	r20, r1
    36d0:	51 05       	cpc	r21, r1
    36d2:	a9 f1       	breq	.+106    	; 0x373e <malloc+0xda>
    36d4:	ca 01       	movw	r24, r20
    36d6:	86 1b       	sub	r24, r22
    36d8:	97 0b       	sbc	r25, r23
    36da:	04 97       	sbiw	r24, 0x04	; 4
    36dc:	08 f4       	brcc	.+2      	; 0x36e0 <malloc+0x7c>
    36de:	ba 01       	movw	r22, r20
    36e0:	e0 e0       	ldi	r30, 0x00	; 0
    36e2:	f0 e0       	ldi	r31, 0x00	; 0
    36e4:	2a c0       	rjmp	.+84     	; 0x373a <malloc+0xd6>
    36e6:	8d 91       	ld	r24, X+
    36e8:	9c 91       	ld	r25, X
    36ea:	11 97       	sbiw	r26, 0x01	; 1
    36ec:	84 17       	cp	r24, r20
    36ee:	95 07       	cpc	r25, r21
    36f0:	f9 f4       	brne	.+62     	; 0x3730 <malloc+0xcc>
    36f2:	64 17       	cp	r22, r20
    36f4:	75 07       	cpc	r23, r21
    36f6:	81 f4       	brne	.+32     	; 0x3718 <malloc+0xb4>
    36f8:	12 96       	adiw	r26, 0x02	; 2
    36fa:	8d 91       	ld	r24, X+
    36fc:	9c 91       	ld	r25, X
    36fe:	13 97       	sbiw	r26, 0x03	; 3
    3700:	30 97       	sbiw	r30, 0x00	; 0
    3702:	19 f0       	breq	.+6      	; 0x370a <malloc+0xa6>
    3704:	93 83       	std	Z+3, r25	; 0x03
    3706:	82 83       	std	Z+2, r24	; 0x02
    3708:	04 c0       	rjmp	.+8      	; 0x3712 <malloc+0xae>
    370a:	90 93 e9 02 	sts	0x02E9, r25
    370e:	80 93 e8 02 	sts	0x02E8, r24
    3712:	fd 01       	movw	r30, r26
    3714:	32 96       	adiw	r30, 0x02	; 2
    3716:	4f c0       	rjmp	.+158    	; 0x37b6 <malloc+0x152>
    3718:	ca 01       	movw	r24, r20
    371a:	86 1b       	sub	r24, r22
    371c:	97 0b       	sbc	r25, r23
    371e:	fd 01       	movw	r30, r26
    3720:	e8 0f       	add	r30, r24
    3722:	f9 1f       	adc	r31, r25
    3724:	61 93       	st	Z+, r22
    3726:	71 93       	st	Z+, r23
    3728:	02 97       	sbiw	r24, 0x02	; 2
    372a:	8d 93       	st	X+, r24
    372c:	9c 93       	st	X, r25
    372e:	43 c0       	rjmp	.+134    	; 0x37b6 <malloc+0x152>
    3730:	fd 01       	movw	r30, r26
    3732:	82 81       	ldd	r24, Z+2	; 0x02
    3734:	93 81       	ldd	r25, Z+3	; 0x03
    3736:	9c 01       	movw	r18, r24
    3738:	d9 01       	movw	r26, r18
    373a:	10 97       	sbiw	r26, 0x00	; 0
    373c:	a1 f6       	brne	.-88     	; 0x36e6 <malloc+0x82>
    373e:	80 91 e6 02 	lds	r24, 0x02E6
    3742:	90 91 e7 02 	lds	r25, 0x02E7
    3746:	89 2b       	or	r24, r25
    3748:	41 f4       	brne	.+16     	; 0x375a <malloc+0xf6>
    374a:	80 91 e1 01 	lds	r24, 0x01E1
    374e:	90 91 e2 01 	lds	r25, 0x01E2
    3752:	90 93 e7 02 	sts	0x02E7, r25
    3756:	80 93 e6 02 	sts	0x02E6, r24
    375a:	40 91 e3 01 	lds	r20, 0x01E3
    375e:	50 91 e4 01 	lds	r21, 0x01E4
    3762:	41 15       	cp	r20, r1
    3764:	51 05       	cpc	r21, r1
    3766:	41 f4       	brne	.+16     	; 0x3778 <malloc+0x114>
    3768:	4d b7       	in	r20, 0x3d	; 61
    376a:	5e b7       	in	r21, 0x3e	; 62
    376c:	80 91 df 01 	lds	r24, 0x01DF
    3770:	90 91 e0 01 	lds	r25, 0x01E0
    3774:	48 1b       	sub	r20, r24
    3776:	59 0b       	sbc	r21, r25
    3778:	20 91 e6 02 	lds	r18, 0x02E6
    377c:	30 91 e7 02 	lds	r19, 0x02E7
    3780:	24 17       	cp	r18, r20
    3782:	35 07       	cpc	r19, r21
    3784:	b0 f4       	brcc	.+44     	; 0x37b2 <malloc+0x14e>
    3786:	ca 01       	movw	r24, r20
    3788:	82 1b       	sub	r24, r18
    378a:	93 0b       	sbc	r25, r19
    378c:	86 17       	cp	r24, r22
    378e:	97 07       	cpc	r25, r23
    3790:	80 f0       	brcs	.+32     	; 0x37b2 <malloc+0x14e>
    3792:	ab 01       	movw	r20, r22
    3794:	4e 5f       	subi	r20, 0xFE	; 254
    3796:	5f 4f       	sbci	r21, 0xFF	; 255
    3798:	84 17       	cp	r24, r20
    379a:	95 07       	cpc	r25, r21
    379c:	50 f0       	brcs	.+20     	; 0x37b2 <malloc+0x14e>
    379e:	42 0f       	add	r20, r18
    37a0:	53 1f       	adc	r21, r19
    37a2:	50 93 e7 02 	sts	0x02E7, r21
    37a6:	40 93 e6 02 	sts	0x02E6, r20
    37aa:	f9 01       	movw	r30, r18
    37ac:	61 93       	st	Z+, r22
    37ae:	71 93       	st	Z+, r23
    37b0:	02 c0       	rjmp	.+4      	; 0x37b6 <malloc+0x152>
    37b2:	e0 e0       	ldi	r30, 0x00	; 0
    37b4:	f0 e0       	ldi	r31, 0x00	; 0
    37b6:	cf 01       	movw	r24, r30
    37b8:	df 91       	pop	r29
    37ba:	cf 91       	pop	r28
    37bc:	08 95       	ret

000037be <free>:
    37be:	cf 93       	push	r28
    37c0:	df 93       	push	r29
    37c2:	00 97       	sbiw	r24, 0x00	; 0
    37c4:	09 f4       	brne	.+2      	; 0x37c8 <free+0xa>
    37c6:	50 c0       	rjmp	.+160    	; 0x3868 <free+0xaa>
    37c8:	ec 01       	movw	r28, r24
    37ca:	22 97       	sbiw	r28, 0x02	; 2
    37cc:	1b 82       	std	Y+3, r1	; 0x03
    37ce:	1a 82       	std	Y+2, r1	; 0x02
    37d0:	a0 91 e8 02 	lds	r26, 0x02E8
    37d4:	b0 91 e9 02 	lds	r27, 0x02E9
    37d8:	10 97       	sbiw	r26, 0x00	; 0
    37da:	09 f1       	breq	.+66     	; 0x381e <free+0x60>
    37dc:	40 e0       	ldi	r20, 0x00	; 0
    37de:	50 e0       	ldi	r21, 0x00	; 0
    37e0:	ac 17       	cp	r26, r28
    37e2:	bd 07       	cpc	r27, r29
    37e4:	08 f1       	brcs	.+66     	; 0x3828 <free+0x6a>
    37e6:	bb 83       	std	Y+3, r27	; 0x03
    37e8:	aa 83       	std	Y+2, r26	; 0x02
    37ea:	fe 01       	movw	r30, r28
    37ec:	21 91       	ld	r18, Z+
    37ee:	31 91       	ld	r19, Z+
    37f0:	e2 0f       	add	r30, r18
    37f2:	f3 1f       	adc	r31, r19
    37f4:	ae 17       	cp	r26, r30
    37f6:	bf 07       	cpc	r27, r31
    37f8:	79 f4       	brne	.+30     	; 0x3818 <free+0x5a>
    37fa:	8d 91       	ld	r24, X+
    37fc:	9c 91       	ld	r25, X
    37fe:	11 97       	sbiw	r26, 0x01	; 1
    3800:	28 0f       	add	r18, r24
    3802:	39 1f       	adc	r19, r25
    3804:	2e 5f       	subi	r18, 0xFE	; 254
    3806:	3f 4f       	sbci	r19, 0xFF	; 255
    3808:	39 83       	std	Y+1, r19	; 0x01
    380a:	28 83       	st	Y, r18
    380c:	12 96       	adiw	r26, 0x02	; 2
    380e:	8d 91       	ld	r24, X+
    3810:	9c 91       	ld	r25, X
    3812:	13 97       	sbiw	r26, 0x03	; 3
    3814:	9b 83       	std	Y+3, r25	; 0x03
    3816:	8a 83       	std	Y+2, r24	; 0x02
    3818:	41 15       	cp	r20, r1
    381a:	51 05       	cpc	r21, r1
    381c:	71 f4       	brne	.+28     	; 0x383a <free+0x7c>
    381e:	d0 93 e9 02 	sts	0x02E9, r29
    3822:	c0 93 e8 02 	sts	0x02E8, r28
    3826:	20 c0       	rjmp	.+64     	; 0x3868 <free+0xaa>
    3828:	12 96       	adiw	r26, 0x02	; 2
    382a:	8d 91       	ld	r24, X+
    382c:	9c 91       	ld	r25, X
    382e:	13 97       	sbiw	r26, 0x03	; 3
    3830:	ad 01       	movw	r20, r26
    3832:	00 97       	sbiw	r24, 0x00	; 0
    3834:	11 f0       	breq	.+4      	; 0x383a <free+0x7c>
    3836:	dc 01       	movw	r26, r24
    3838:	d3 cf       	rjmp	.-90     	; 0x37e0 <free+0x22>
    383a:	fa 01       	movw	r30, r20
    383c:	d3 83       	std	Z+3, r29	; 0x03
    383e:	c2 83       	std	Z+2, r28	; 0x02
    3840:	21 91       	ld	r18, Z+
    3842:	31 91       	ld	r19, Z+
    3844:	e2 0f       	add	r30, r18
    3846:	f3 1f       	adc	r31, r19
    3848:	ce 17       	cp	r28, r30
    384a:	df 07       	cpc	r29, r31
    384c:	69 f4       	brne	.+26     	; 0x3868 <free+0xaa>
    384e:	88 81       	ld	r24, Y
    3850:	99 81       	ldd	r25, Y+1	; 0x01
    3852:	28 0f       	add	r18, r24
    3854:	39 1f       	adc	r19, r25
    3856:	2e 5f       	subi	r18, 0xFE	; 254
    3858:	3f 4f       	sbci	r19, 0xFF	; 255
    385a:	fa 01       	movw	r30, r20
    385c:	31 83       	std	Z+1, r19	; 0x01
    385e:	20 83       	st	Z, r18
    3860:	8a 81       	ldd	r24, Y+2	; 0x02
    3862:	9b 81       	ldd	r25, Y+3	; 0x03
    3864:	93 83       	std	Z+3, r25	; 0x03
    3866:	82 83       	std	Z+2, r24	; 0x02
    3868:	df 91       	pop	r29
    386a:	cf 91       	pop	r28
    386c:	08 95       	ret

0000386e <printf>:
    386e:	a0 e0       	ldi	r26, 0x00	; 0
    3870:	b0 e0       	ldi	r27, 0x00	; 0
    3872:	ed e3       	ldi	r30, 0x3D	; 61
    3874:	fc e1       	ldi	r31, 0x1C	; 28
    3876:	0c 94 34 1f 	jmp	0x3e68	; 0x3e68 <__prologue_saves__+0x20>
    387a:	fe 01       	movw	r30, r28
    387c:	35 96       	adiw	r30, 0x05	; 5
    387e:	61 91       	ld	r22, Z+
    3880:	71 91       	ld	r23, Z+
    3882:	80 91 ec 02 	lds	r24, 0x02EC
    3886:	90 91 ed 02 	lds	r25, 0x02ED
    388a:	af 01       	movw	r20, r30
    388c:	0e 94 a7 1c 	call	0x394e	; 0x394e <vfprintf>
    3890:	20 96       	adiw	r28, 0x00	; 0
    3892:	e2 e0       	ldi	r30, 0x02	; 2
    3894:	0c 94 50 1f 	jmp	0x3ea0	; 0x3ea0 <__epilogue_restores__+0x20>

00003898 <printf_P>:
    3898:	a0 e0       	ldi	r26, 0x00	; 0
    389a:	b0 e0       	ldi	r27, 0x00	; 0
    389c:	e2 e5       	ldi	r30, 0x52	; 82
    389e:	fc e1       	ldi	r31, 0x1C	; 28
    38a0:	0c 94 34 1f 	jmp	0x3e68	; 0x3e68 <__prologue_saves__+0x20>
    38a4:	fe 01       	movw	r30, r28
    38a6:	35 96       	adiw	r30, 0x05	; 5
    38a8:	61 91       	ld	r22, Z+
    38aa:	71 91       	ld	r23, Z+
    38ac:	a0 91 ec 02 	lds	r26, 0x02EC
    38b0:	b0 91 ed 02 	lds	r27, 0x02ED
    38b4:	13 96       	adiw	r26, 0x03	; 3
    38b6:	8c 91       	ld	r24, X
    38b8:	13 97       	sbiw	r26, 0x03	; 3
    38ba:	88 60       	ori	r24, 0x08	; 8
    38bc:	13 96       	adiw	r26, 0x03	; 3
    38be:	8c 93       	st	X, r24
    38c0:	80 91 ec 02 	lds	r24, 0x02EC
    38c4:	90 91 ed 02 	lds	r25, 0x02ED
    38c8:	af 01       	movw	r20, r30
    38ca:	0e 94 a7 1c 	call	0x394e	; 0x394e <vfprintf>
    38ce:	e0 91 ec 02 	lds	r30, 0x02EC
    38d2:	f0 91 ed 02 	lds	r31, 0x02ED
    38d6:	23 81       	ldd	r18, Z+3	; 0x03
    38d8:	27 7f       	andi	r18, 0xF7	; 247
    38da:	23 83       	std	Z+3, r18	; 0x03
    38dc:	20 96       	adiw	r28, 0x00	; 0
    38de:	e2 e0       	ldi	r30, 0x02	; 2
    38e0:	0c 94 50 1f 	jmp	0x3ea0	; 0x3ea0 <__epilogue_restores__+0x20>

000038e4 <puts>:
    38e4:	0f 93       	push	r16
    38e6:	1f 93       	push	r17
    38e8:	cf 93       	push	r28
    38ea:	df 93       	push	r29
    38ec:	8c 01       	movw	r16, r24
    38ee:	e0 91 ec 02 	lds	r30, 0x02EC
    38f2:	f0 91 ed 02 	lds	r31, 0x02ED
    38f6:	83 81       	ldd	r24, Z+3	; 0x03
    38f8:	81 ff       	sbrs	r24, 1
    38fa:	21 c0       	rjmp	.+66     	; 0x393e <puts+0x5a>
    38fc:	c0 e0       	ldi	r28, 0x00	; 0
    38fe:	d0 e0       	ldi	r29, 0x00	; 0
    3900:	0d c0       	rjmp	.+26     	; 0x391c <puts+0x38>
    3902:	e0 91 ec 02 	lds	r30, 0x02EC
    3906:	f0 91 ed 02 	lds	r31, 0x02ED
    390a:	20 85       	ldd	r18, Z+8	; 0x08
    390c:	31 85       	ldd	r19, Z+9	; 0x09
    390e:	bf 01       	movw	r22, r30
    3910:	f9 01       	movw	r30, r18
    3912:	09 95       	icall
    3914:	89 2b       	or	r24, r25
    3916:	11 f0       	breq	.+4      	; 0x391c <puts+0x38>
    3918:	cf ef       	ldi	r28, 0xFF	; 255
    391a:	df ef       	ldi	r29, 0xFF	; 255
    391c:	f8 01       	movw	r30, r16
    391e:	81 91       	ld	r24, Z+
    3920:	8f 01       	movw	r16, r30
    3922:	88 23       	and	r24, r24
    3924:	71 f7       	brne	.-36     	; 0x3902 <puts+0x1e>
    3926:	e0 91 ec 02 	lds	r30, 0x02EC
    392a:	f0 91 ed 02 	lds	r31, 0x02ED
    392e:	20 85       	ldd	r18, Z+8	; 0x08
    3930:	31 85       	ldd	r19, Z+9	; 0x09
    3932:	8a e0       	ldi	r24, 0x0A	; 10
    3934:	bf 01       	movw	r22, r30
    3936:	f9 01       	movw	r30, r18
    3938:	09 95       	icall
    393a:	89 2b       	or	r24, r25
    393c:	11 f0       	breq	.+4      	; 0x3942 <puts+0x5e>
    393e:	cf ef       	ldi	r28, 0xFF	; 255
    3940:	df ef       	ldi	r29, 0xFF	; 255
    3942:	ce 01       	movw	r24, r28
    3944:	df 91       	pop	r29
    3946:	cf 91       	pop	r28
    3948:	1f 91       	pop	r17
    394a:	0f 91       	pop	r16
    394c:	08 95       	ret

0000394e <vfprintf>:
    394e:	ab e0       	ldi	r26, 0x0B	; 11
    3950:	b0 e0       	ldi	r27, 0x00	; 0
    3952:	ed ea       	ldi	r30, 0xAD	; 173
    3954:	fc e1       	ldi	r31, 0x1C	; 28
    3956:	0c 94 24 1f 	jmp	0x3e48	; 0x3e48 <__prologue_saves__>
    395a:	3c 01       	movw	r6, r24
    395c:	2b 01       	movw	r4, r22
    395e:	5a 01       	movw	r10, r20
    3960:	fc 01       	movw	r30, r24
    3962:	17 82       	std	Z+7, r1	; 0x07
    3964:	16 82       	std	Z+6, r1	; 0x06
    3966:	83 81       	ldd	r24, Z+3	; 0x03
    3968:	81 fd       	sbrc	r24, 1
    396a:	03 c0       	rjmp	.+6      	; 0x3972 <vfprintf+0x24>
    396c:	6f ef       	ldi	r22, 0xFF	; 255
    396e:	7f ef       	ldi	r23, 0xFF	; 255
    3970:	c6 c1       	rjmp	.+908    	; 0x3cfe <vfprintf+0x3b0>
    3972:	9a e0       	ldi	r25, 0x0A	; 10
    3974:	89 2e       	mov	r8, r25
    3976:	1e 01       	movw	r2, r28
    3978:	08 94       	sec
    397a:	21 1c       	adc	r2, r1
    397c:	31 1c       	adc	r3, r1
    397e:	f3 01       	movw	r30, r6
    3980:	23 81       	ldd	r18, Z+3	; 0x03
    3982:	f2 01       	movw	r30, r4
    3984:	23 fd       	sbrc	r18, 3
    3986:	85 91       	lpm	r24, Z+
    3988:	23 ff       	sbrs	r18, 3
    398a:	81 91       	ld	r24, Z+
    398c:	2f 01       	movw	r4, r30
    398e:	88 23       	and	r24, r24
    3990:	09 f4       	brne	.+2      	; 0x3994 <vfprintf+0x46>
    3992:	b2 c1       	rjmp	.+868    	; 0x3cf8 <vfprintf+0x3aa>
    3994:	85 32       	cpi	r24, 0x25	; 37
    3996:	39 f4       	brne	.+14     	; 0x39a6 <vfprintf+0x58>
    3998:	23 fd       	sbrc	r18, 3
    399a:	85 91       	lpm	r24, Z+
    399c:	23 ff       	sbrs	r18, 3
    399e:	81 91       	ld	r24, Z+
    39a0:	2f 01       	movw	r4, r30
    39a2:	85 32       	cpi	r24, 0x25	; 37
    39a4:	29 f4       	brne	.+10     	; 0x39b0 <vfprintf+0x62>
    39a6:	90 e0       	ldi	r25, 0x00	; 0
    39a8:	b3 01       	movw	r22, r6
    39aa:	0e 94 9a 1e 	call	0x3d34	; 0x3d34 <fputc>
    39ae:	e7 cf       	rjmp	.-50     	; 0x397e <vfprintf+0x30>
    39b0:	98 2f       	mov	r25, r24
    39b2:	ff 24       	eor	r15, r15
    39b4:	ee 24       	eor	r14, r14
    39b6:	99 24       	eor	r9, r9
    39b8:	ff e1       	ldi	r31, 0x1F	; 31
    39ba:	ff 15       	cp	r31, r15
    39bc:	d0 f0       	brcs	.+52     	; 0x39f2 <vfprintf+0xa4>
    39be:	9b 32       	cpi	r25, 0x2B	; 43
    39c0:	69 f0       	breq	.+26     	; 0x39dc <vfprintf+0x8e>
    39c2:	9c 32       	cpi	r25, 0x2C	; 44
    39c4:	28 f4       	brcc	.+10     	; 0x39d0 <vfprintf+0x82>
    39c6:	90 32       	cpi	r25, 0x20	; 32
    39c8:	59 f0       	breq	.+22     	; 0x39e0 <vfprintf+0x92>
    39ca:	93 32       	cpi	r25, 0x23	; 35
    39cc:	91 f4       	brne	.+36     	; 0x39f2 <vfprintf+0xa4>
    39ce:	0e c0       	rjmp	.+28     	; 0x39ec <vfprintf+0x9e>
    39d0:	9d 32       	cpi	r25, 0x2D	; 45
    39d2:	49 f0       	breq	.+18     	; 0x39e6 <vfprintf+0x98>
    39d4:	90 33       	cpi	r25, 0x30	; 48
    39d6:	69 f4       	brne	.+26     	; 0x39f2 <vfprintf+0xa4>
    39d8:	41 e0       	ldi	r20, 0x01	; 1
    39da:	24 c0       	rjmp	.+72     	; 0x3a24 <vfprintf+0xd6>
    39dc:	52 e0       	ldi	r21, 0x02	; 2
    39de:	f5 2a       	or	r15, r21
    39e0:	84 e0       	ldi	r24, 0x04	; 4
    39e2:	f8 2a       	or	r15, r24
    39e4:	28 c0       	rjmp	.+80     	; 0x3a36 <vfprintf+0xe8>
    39e6:	98 e0       	ldi	r25, 0x08	; 8
    39e8:	f9 2a       	or	r15, r25
    39ea:	25 c0       	rjmp	.+74     	; 0x3a36 <vfprintf+0xe8>
    39ec:	e0 e1       	ldi	r30, 0x10	; 16
    39ee:	fe 2a       	or	r15, r30
    39f0:	22 c0       	rjmp	.+68     	; 0x3a36 <vfprintf+0xe8>
    39f2:	f7 fc       	sbrc	r15, 7
    39f4:	29 c0       	rjmp	.+82     	; 0x3a48 <vfprintf+0xfa>
    39f6:	89 2f       	mov	r24, r25
    39f8:	80 53       	subi	r24, 0x30	; 48
    39fa:	8a 30       	cpi	r24, 0x0A	; 10
    39fc:	70 f4       	brcc	.+28     	; 0x3a1a <vfprintf+0xcc>
    39fe:	f6 fe       	sbrs	r15, 6
    3a00:	05 c0       	rjmp	.+10     	; 0x3a0c <vfprintf+0xbe>
    3a02:	98 9c       	mul	r9, r8
    3a04:	90 2c       	mov	r9, r0
    3a06:	11 24       	eor	r1, r1
    3a08:	98 0e       	add	r9, r24
    3a0a:	15 c0       	rjmp	.+42     	; 0x3a36 <vfprintf+0xe8>
    3a0c:	e8 9c       	mul	r14, r8
    3a0e:	e0 2c       	mov	r14, r0
    3a10:	11 24       	eor	r1, r1
    3a12:	e8 0e       	add	r14, r24
    3a14:	f0 e2       	ldi	r31, 0x20	; 32
    3a16:	ff 2a       	or	r15, r31
    3a18:	0e c0       	rjmp	.+28     	; 0x3a36 <vfprintf+0xe8>
    3a1a:	9e 32       	cpi	r25, 0x2E	; 46
    3a1c:	29 f4       	brne	.+10     	; 0x3a28 <vfprintf+0xda>
    3a1e:	f6 fc       	sbrc	r15, 6
    3a20:	6b c1       	rjmp	.+726    	; 0x3cf8 <vfprintf+0x3aa>
    3a22:	40 e4       	ldi	r20, 0x40	; 64
    3a24:	f4 2a       	or	r15, r20
    3a26:	07 c0       	rjmp	.+14     	; 0x3a36 <vfprintf+0xe8>
    3a28:	9c 36       	cpi	r25, 0x6C	; 108
    3a2a:	19 f4       	brne	.+6      	; 0x3a32 <vfprintf+0xe4>
    3a2c:	50 e8       	ldi	r21, 0x80	; 128
    3a2e:	f5 2a       	or	r15, r21
    3a30:	02 c0       	rjmp	.+4      	; 0x3a36 <vfprintf+0xe8>
    3a32:	98 36       	cpi	r25, 0x68	; 104
    3a34:	49 f4       	brne	.+18     	; 0x3a48 <vfprintf+0xfa>
    3a36:	f2 01       	movw	r30, r4
    3a38:	23 fd       	sbrc	r18, 3
    3a3a:	95 91       	lpm	r25, Z+
    3a3c:	23 ff       	sbrs	r18, 3
    3a3e:	91 91       	ld	r25, Z+
    3a40:	2f 01       	movw	r4, r30
    3a42:	99 23       	and	r25, r25
    3a44:	09 f0       	breq	.+2      	; 0x3a48 <vfprintf+0xfa>
    3a46:	b8 cf       	rjmp	.-144    	; 0x39b8 <vfprintf+0x6a>
    3a48:	89 2f       	mov	r24, r25
    3a4a:	85 54       	subi	r24, 0x45	; 69
    3a4c:	83 30       	cpi	r24, 0x03	; 3
    3a4e:	18 f0       	brcs	.+6      	; 0x3a56 <vfprintf+0x108>
    3a50:	80 52       	subi	r24, 0x20	; 32
    3a52:	83 30       	cpi	r24, 0x03	; 3
    3a54:	38 f4       	brcc	.+14     	; 0x3a64 <vfprintf+0x116>
    3a56:	44 e0       	ldi	r20, 0x04	; 4
    3a58:	50 e0       	ldi	r21, 0x00	; 0
    3a5a:	a4 0e       	add	r10, r20
    3a5c:	b5 1e       	adc	r11, r21
    3a5e:	5f e3       	ldi	r21, 0x3F	; 63
    3a60:	59 83       	std	Y+1, r21	; 0x01
    3a62:	0f c0       	rjmp	.+30     	; 0x3a82 <vfprintf+0x134>
    3a64:	93 36       	cpi	r25, 0x63	; 99
    3a66:	31 f0       	breq	.+12     	; 0x3a74 <vfprintf+0x126>
    3a68:	93 37       	cpi	r25, 0x73	; 115
    3a6a:	79 f0       	breq	.+30     	; 0x3a8a <vfprintf+0x13c>
    3a6c:	93 35       	cpi	r25, 0x53	; 83
    3a6e:	09 f0       	breq	.+2      	; 0x3a72 <vfprintf+0x124>
    3a70:	56 c0       	rjmp	.+172    	; 0x3b1e <vfprintf+0x1d0>
    3a72:	20 c0       	rjmp	.+64     	; 0x3ab4 <vfprintf+0x166>
    3a74:	f5 01       	movw	r30, r10
    3a76:	80 81       	ld	r24, Z
    3a78:	89 83       	std	Y+1, r24	; 0x01
    3a7a:	42 e0       	ldi	r20, 0x02	; 2
    3a7c:	50 e0       	ldi	r21, 0x00	; 0
    3a7e:	a4 0e       	add	r10, r20
    3a80:	b5 1e       	adc	r11, r21
    3a82:	61 01       	movw	r12, r2
    3a84:	01 e0       	ldi	r16, 0x01	; 1
    3a86:	10 e0       	ldi	r17, 0x00	; 0
    3a88:	12 c0       	rjmp	.+36     	; 0x3aae <vfprintf+0x160>
    3a8a:	f5 01       	movw	r30, r10
    3a8c:	c0 80       	ld	r12, Z
    3a8e:	d1 80       	ldd	r13, Z+1	; 0x01
    3a90:	f6 fc       	sbrc	r15, 6
    3a92:	03 c0       	rjmp	.+6      	; 0x3a9a <vfprintf+0x14c>
    3a94:	6f ef       	ldi	r22, 0xFF	; 255
    3a96:	7f ef       	ldi	r23, 0xFF	; 255
    3a98:	02 c0       	rjmp	.+4      	; 0x3a9e <vfprintf+0x150>
    3a9a:	69 2d       	mov	r22, r9
    3a9c:	70 e0       	ldi	r23, 0x00	; 0
    3a9e:	42 e0       	ldi	r20, 0x02	; 2
    3aa0:	50 e0       	ldi	r21, 0x00	; 0
    3aa2:	a4 0e       	add	r10, r20
    3aa4:	b5 1e       	adc	r11, r21
    3aa6:	c6 01       	movw	r24, r12
    3aa8:	0e 94 8f 1e 	call	0x3d1e	; 0x3d1e <strnlen>
    3aac:	8c 01       	movw	r16, r24
    3aae:	5f e7       	ldi	r21, 0x7F	; 127
    3ab0:	f5 22       	and	r15, r21
    3ab2:	14 c0       	rjmp	.+40     	; 0x3adc <vfprintf+0x18e>
    3ab4:	f5 01       	movw	r30, r10
    3ab6:	c0 80       	ld	r12, Z
    3ab8:	d1 80       	ldd	r13, Z+1	; 0x01
    3aba:	f6 fc       	sbrc	r15, 6
    3abc:	03 c0       	rjmp	.+6      	; 0x3ac4 <vfprintf+0x176>
    3abe:	6f ef       	ldi	r22, 0xFF	; 255
    3ac0:	7f ef       	ldi	r23, 0xFF	; 255
    3ac2:	02 c0       	rjmp	.+4      	; 0x3ac8 <vfprintf+0x17a>
    3ac4:	69 2d       	mov	r22, r9
    3ac6:	70 e0       	ldi	r23, 0x00	; 0
    3ac8:	42 e0       	ldi	r20, 0x02	; 2
    3aca:	50 e0       	ldi	r21, 0x00	; 0
    3acc:	a4 0e       	add	r10, r20
    3ace:	b5 1e       	adc	r11, r21
    3ad0:	c6 01       	movw	r24, r12
    3ad2:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <strnlen_P>
    3ad6:	8c 01       	movw	r16, r24
    3ad8:	50 e8       	ldi	r21, 0x80	; 128
    3ada:	f5 2a       	or	r15, r21
    3adc:	f3 fe       	sbrs	r15, 3
    3ade:	07 c0       	rjmp	.+14     	; 0x3aee <vfprintf+0x1a0>
    3ae0:	1a c0       	rjmp	.+52     	; 0x3b16 <vfprintf+0x1c8>
    3ae2:	80 e2       	ldi	r24, 0x20	; 32
    3ae4:	90 e0       	ldi	r25, 0x00	; 0
    3ae6:	b3 01       	movw	r22, r6
    3ae8:	0e 94 9a 1e 	call	0x3d34	; 0x3d34 <fputc>
    3aec:	ea 94       	dec	r14
    3aee:	8e 2d       	mov	r24, r14
    3af0:	90 e0       	ldi	r25, 0x00	; 0
    3af2:	08 17       	cp	r16, r24
    3af4:	19 07       	cpc	r17, r25
    3af6:	a8 f3       	brcs	.-22     	; 0x3ae2 <vfprintf+0x194>
    3af8:	0e c0       	rjmp	.+28     	; 0x3b16 <vfprintf+0x1c8>
    3afa:	f6 01       	movw	r30, r12
    3afc:	f7 fc       	sbrc	r15, 7
    3afe:	85 91       	lpm	r24, Z+
    3b00:	f7 fe       	sbrs	r15, 7
    3b02:	81 91       	ld	r24, Z+
    3b04:	6f 01       	movw	r12, r30
    3b06:	90 e0       	ldi	r25, 0x00	; 0
    3b08:	b3 01       	movw	r22, r6
    3b0a:	0e 94 9a 1e 	call	0x3d34	; 0x3d34 <fputc>
    3b0e:	e1 10       	cpse	r14, r1
    3b10:	ea 94       	dec	r14
    3b12:	01 50       	subi	r16, 0x01	; 1
    3b14:	10 40       	sbci	r17, 0x00	; 0
    3b16:	01 15       	cp	r16, r1
    3b18:	11 05       	cpc	r17, r1
    3b1a:	79 f7       	brne	.-34     	; 0x3afa <vfprintf+0x1ac>
    3b1c:	ea c0       	rjmp	.+468    	; 0x3cf2 <vfprintf+0x3a4>
    3b1e:	94 36       	cpi	r25, 0x64	; 100
    3b20:	11 f0       	breq	.+4      	; 0x3b26 <vfprintf+0x1d8>
    3b22:	99 36       	cpi	r25, 0x69	; 105
    3b24:	69 f5       	brne	.+90     	; 0x3b80 <vfprintf+0x232>
    3b26:	f7 fe       	sbrs	r15, 7
    3b28:	08 c0       	rjmp	.+16     	; 0x3b3a <vfprintf+0x1ec>
    3b2a:	f5 01       	movw	r30, r10
    3b2c:	20 81       	ld	r18, Z
    3b2e:	31 81       	ldd	r19, Z+1	; 0x01
    3b30:	42 81       	ldd	r20, Z+2	; 0x02
    3b32:	53 81       	ldd	r21, Z+3	; 0x03
    3b34:	84 e0       	ldi	r24, 0x04	; 4
    3b36:	90 e0       	ldi	r25, 0x00	; 0
    3b38:	0a c0       	rjmp	.+20     	; 0x3b4e <vfprintf+0x200>
    3b3a:	f5 01       	movw	r30, r10
    3b3c:	80 81       	ld	r24, Z
    3b3e:	91 81       	ldd	r25, Z+1	; 0x01
    3b40:	9c 01       	movw	r18, r24
    3b42:	44 27       	eor	r20, r20
    3b44:	37 fd       	sbrc	r19, 7
    3b46:	40 95       	com	r20
    3b48:	54 2f       	mov	r21, r20
    3b4a:	82 e0       	ldi	r24, 0x02	; 2
    3b4c:	90 e0       	ldi	r25, 0x00	; 0
    3b4e:	a8 0e       	add	r10, r24
    3b50:	b9 1e       	adc	r11, r25
    3b52:	9f e6       	ldi	r25, 0x6F	; 111
    3b54:	f9 22       	and	r15, r25
    3b56:	57 ff       	sbrs	r21, 7
    3b58:	09 c0       	rjmp	.+18     	; 0x3b6c <vfprintf+0x21e>
    3b5a:	50 95       	com	r21
    3b5c:	40 95       	com	r20
    3b5e:	30 95       	com	r19
    3b60:	21 95       	neg	r18
    3b62:	3f 4f       	sbci	r19, 0xFF	; 255
    3b64:	4f 4f       	sbci	r20, 0xFF	; 255
    3b66:	5f 4f       	sbci	r21, 0xFF	; 255
    3b68:	e0 e8       	ldi	r30, 0x80	; 128
    3b6a:	fe 2a       	or	r15, r30
    3b6c:	ca 01       	movw	r24, r20
    3b6e:	b9 01       	movw	r22, r18
    3b70:	a1 01       	movw	r20, r2
    3b72:	2a e0       	ldi	r18, 0x0A	; 10
    3b74:	30 e0       	ldi	r19, 0x00	; 0
    3b76:	0e 94 c6 1e 	call	0x3d8c	; 0x3d8c <__ultoa_invert>
    3b7a:	d8 2e       	mov	r13, r24
    3b7c:	d2 18       	sub	r13, r2
    3b7e:	40 c0       	rjmp	.+128    	; 0x3c00 <vfprintf+0x2b2>
    3b80:	95 37       	cpi	r25, 0x75	; 117
    3b82:	29 f4       	brne	.+10     	; 0x3b8e <vfprintf+0x240>
    3b84:	1f 2d       	mov	r17, r15
    3b86:	1f 7e       	andi	r17, 0xEF	; 239
    3b88:	2a e0       	ldi	r18, 0x0A	; 10
    3b8a:	30 e0       	ldi	r19, 0x00	; 0
    3b8c:	1d c0       	rjmp	.+58     	; 0x3bc8 <vfprintf+0x27a>
    3b8e:	1f 2d       	mov	r17, r15
    3b90:	19 7f       	andi	r17, 0xF9	; 249
    3b92:	9f 36       	cpi	r25, 0x6F	; 111
    3b94:	61 f0       	breq	.+24     	; 0x3bae <vfprintf+0x260>
    3b96:	90 37       	cpi	r25, 0x70	; 112
    3b98:	20 f4       	brcc	.+8      	; 0x3ba2 <vfprintf+0x254>
    3b9a:	98 35       	cpi	r25, 0x58	; 88
    3b9c:	09 f0       	breq	.+2      	; 0x3ba0 <vfprintf+0x252>
    3b9e:	ac c0       	rjmp	.+344    	; 0x3cf8 <vfprintf+0x3aa>
    3ba0:	0f c0       	rjmp	.+30     	; 0x3bc0 <vfprintf+0x272>
    3ba2:	90 37       	cpi	r25, 0x70	; 112
    3ba4:	39 f0       	breq	.+14     	; 0x3bb4 <vfprintf+0x266>
    3ba6:	98 37       	cpi	r25, 0x78	; 120
    3ba8:	09 f0       	breq	.+2      	; 0x3bac <vfprintf+0x25e>
    3baa:	a6 c0       	rjmp	.+332    	; 0x3cf8 <vfprintf+0x3aa>
    3bac:	04 c0       	rjmp	.+8      	; 0x3bb6 <vfprintf+0x268>
    3bae:	28 e0       	ldi	r18, 0x08	; 8
    3bb0:	30 e0       	ldi	r19, 0x00	; 0
    3bb2:	0a c0       	rjmp	.+20     	; 0x3bc8 <vfprintf+0x27a>
    3bb4:	10 61       	ori	r17, 0x10	; 16
    3bb6:	14 fd       	sbrc	r17, 4
    3bb8:	14 60       	ori	r17, 0x04	; 4
    3bba:	20 e1       	ldi	r18, 0x10	; 16
    3bbc:	30 e0       	ldi	r19, 0x00	; 0
    3bbe:	04 c0       	rjmp	.+8      	; 0x3bc8 <vfprintf+0x27a>
    3bc0:	14 fd       	sbrc	r17, 4
    3bc2:	16 60       	ori	r17, 0x06	; 6
    3bc4:	20 e1       	ldi	r18, 0x10	; 16
    3bc6:	32 e0       	ldi	r19, 0x02	; 2
    3bc8:	17 ff       	sbrs	r17, 7
    3bca:	08 c0       	rjmp	.+16     	; 0x3bdc <vfprintf+0x28e>
    3bcc:	f5 01       	movw	r30, r10
    3bce:	60 81       	ld	r22, Z
    3bd0:	71 81       	ldd	r23, Z+1	; 0x01
    3bd2:	82 81       	ldd	r24, Z+2	; 0x02
    3bd4:	93 81       	ldd	r25, Z+3	; 0x03
    3bd6:	44 e0       	ldi	r20, 0x04	; 4
    3bd8:	50 e0       	ldi	r21, 0x00	; 0
    3bda:	08 c0       	rjmp	.+16     	; 0x3bec <vfprintf+0x29e>
    3bdc:	f5 01       	movw	r30, r10
    3bde:	80 81       	ld	r24, Z
    3be0:	91 81       	ldd	r25, Z+1	; 0x01
    3be2:	bc 01       	movw	r22, r24
    3be4:	80 e0       	ldi	r24, 0x00	; 0
    3be6:	90 e0       	ldi	r25, 0x00	; 0
    3be8:	42 e0       	ldi	r20, 0x02	; 2
    3bea:	50 e0       	ldi	r21, 0x00	; 0
    3bec:	a4 0e       	add	r10, r20
    3bee:	b5 1e       	adc	r11, r21
    3bf0:	a1 01       	movw	r20, r2
    3bf2:	0e 94 c6 1e 	call	0x3d8c	; 0x3d8c <__ultoa_invert>
    3bf6:	d8 2e       	mov	r13, r24
    3bf8:	d2 18       	sub	r13, r2
    3bfa:	8f e7       	ldi	r24, 0x7F	; 127
    3bfc:	f8 2e       	mov	r15, r24
    3bfe:	f1 22       	and	r15, r17
    3c00:	f6 fe       	sbrs	r15, 6
    3c02:	0b c0       	rjmp	.+22     	; 0x3c1a <vfprintf+0x2cc>
    3c04:	5e ef       	ldi	r21, 0xFE	; 254
    3c06:	f5 22       	and	r15, r21
    3c08:	d9 14       	cp	r13, r9
    3c0a:	38 f4       	brcc	.+14     	; 0x3c1a <vfprintf+0x2cc>
    3c0c:	f4 fe       	sbrs	r15, 4
    3c0e:	07 c0       	rjmp	.+14     	; 0x3c1e <vfprintf+0x2d0>
    3c10:	f2 fc       	sbrc	r15, 2
    3c12:	05 c0       	rjmp	.+10     	; 0x3c1e <vfprintf+0x2d0>
    3c14:	8f ee       	ldi	r24, 0xEF	; 239
    3c16:	f8 22       	and	r15, r24
    3c18:	02 c0       	rjmp	.+4      	; 0x3c1e <vfprintf+0x2d0>
    3c1a:	1d 2d       	mov	r17, r13
    3c1c:	01 c0       	rjmp	.+2      	; 0x3c20 <vfprintf+0x2d2>
    3c1e:	19 2d       	mov	r17, r9
    3c20:	f4 fe       	sbrs	r15, 4
    3c22:	0d c0       	rjmp	.+26     	; 0x3c3e <vfprintf+0x2f0>
    3c24:	fe 01       	movw	r30, r28
    3c26:	ed 0d       	add	r30, r13
    3c28:	f1 1d       	adc	r31, r1
    3c2a:	80 81       	ld	r24, Z
    3c2c:	80 33       	cpi	r24, 0x30	; 48
    3c2e:	19 f4       	brne	.+6      	; 0x3c36 <vfprintf+0x2e8>
    3c30:	99 ee       	ldi	r25, 0xE9	; 233
    3c32:	f9 22       	and	r15, r25
    3c34:	08 c0       	rjmp	.+16     	; 0x3c46 <vfprintf+0x2f8>
    3c36:	1f 5f       	subi	r17, 0xFF	; 255
    3c38:	f2 fe       	sbrs	r15, 2
    3c3a:	05 c0       	rjmp	.+10     	; 0x3c46 <vfprintf+0x2f8>
    3c3c:	03 c0       	rjmp	.+6      	; 0x3c44 <vfprintf+0x2f6>
    3c3e:	8f 2d       	mov	r24, r15
    3c40:	86 78       	andi	r24, 0x86	; 134
    3c42:	09 f0       	breq	.+2      	; 0x3c46 <vfprintf+0x2f8>
    3c44:	1f 5f       	subi	r17, 0xFF	; 255
    3c46:	0f 2d       	mov	r16, r15
    3c48:	f3 fc       	sbrc	r15, 3
    3c4a:	14 c0       	rjmp	.+40     	; 0x3c74 <vfprintf+0x326>
    3c4c:	f0 fe       	sbrs	r15, 0
    3c4e:	0f c0       	rjmp	.+30     	; 0x3c6e <vfprintf+0x320>
    3c50:	1e 15       	cp	r17, r14
    3c52:	10 f0       	brcs	.+4      	; 0x3c58 <vfprintf+0x30a>
    3c54:	9d 2c       	mov	r9, r13
    3c56:	0b c0       	rjmp	.+22     	; 0x3c6e <vfprintf+0x320>
    3c58:	9d 2c       	mov	r9, r13
    3c5a:	9e 0c       	add	r9, r14
    3c5c:	91 1a       	sub	r9, r17
    3c5e:	1e 2d       	mov	r17, r14
    3c60:	06 c0       	rjmp	.+12     	; 0x3c6e <vfprintf+0x320>
    3c62:	80 e2       	ldi	r24, 0x20	; 32
    3c64:	90 e0       	ldi	r25, 0x00	; 0
    3c66:	b3 01       	movw	r22, r6
    3c68:	0e 94 9a 1e 	call	0x3d34	; 0x3d34 <fputc>
    3c6c:	1f 5f       	subi	r17, 0xFF	; 255
    3c6e:	1e 15       	cp	r17, r14
    3c70:	c0 f3       	brcs	.-16     	; 0x3c62 <vfprintf+0x314>
    3c72:	04 c0       	rjmp	.+8      	; 0x3c7c <vfprintf+0x32e>
    3c74:	1e 15       	cp	r17, r14
    3c76:	10 f4       	brcc	.+4      	; 0x3c7c <vfprintf+0x32e>
    3c78:	e1 1a       	sub	r14, r17
    3c7a:	01 c0       	rjmp	.+2      	; 0x3c7e <vfprintf+0x330>
    3c7c:	ee 24       	eor	r14, r14
    3c7e:	04 ff       	sbrs	r16, 4
    3c80:	0f c0       	rjmp	.+30     	; 0x3ca0 <vfprintf+0x352>
    3c82:	80 e3       	ldi	r24, 0x30	; 48
    3c84:	90 e0       	ldi	r25, 0x00	; 0
    3c86:	b3 01       	movw	r22, r6
    3c88:	0e 94 9a 1e 	call	0x3d34	; 0x3d34 <fputc>
    3c8c:	02 ff       	sbrs	r16, 2
    3c8e:	1d c0       	rjmp	.+58     	; 0x3cca <vfprintf+0x37c>
    3c90:	01 fd       	sbrc	r16, 1
    3c92:	03 c0       	rjmp	.+6      	; 0x3c9a <vfprintf+0x34c>
    3c94:	88 e7       	ldi	r24, 0x78	; 120
    3c96:	90 e0       	ldi	r25, 0x00	; 0
    3c98:	0e c0       	rjmp	.+28     	; 0x3cb6 <vfprintf+0x368>
    3c9a:	88 e5       	ldi	r24, 0x58	; 88
    3c9c:	90 e0       	ldi	r25, 0x00	; 0
    3c9e:	0b c0       	rjmp	.+22     	; 0x3cb6 <vfprintf+0x368>
    3ca0:	80 2f       	mov	r24, r16
    3ca2:	86 78       	andi	r24, 0x86	; 134
    3ca4:	91 f0       	breq	.+36     	; 0x3cca <vfprintf+0x37c>
    3ca6:	01 ff       	sbrs	r16, 1
    3ca8:	02 c0       	rjmp	.+4      	; 0x3cae <vfprintf+0x360>
    3caa:	8b e2       	ldi	r24, 0x2B	; 43
    3cac:	01 c0       	rjmp	.+2      	; 0x3cb0 <vfprintf+0x362>
    3cae:	80 e2       	ldi	r24, 0x20	; 32
    3cb0:	f7 fc       	sbrc	r15, 7
    3cb2:	8d e2       	ldi	r24, 0x2D	; 45
    3cb4:	90 e0       	ldi	r25, 0x00	; 0
    3cb6:	b3 01       	movw	r22, r6
    3cb8:	0e 94 9a 1e 	call	0x3d34	; 0x3d34 <fputc>
    3cbc:	06 c0       	rjmp	.+12     	; 0x3cca <vfprintf+0x37c>
    3cbe:	80 e3       	ldi	r24, 0x30	; 48
    3cc0:	90 e0       	ldi	r25, 0x00	; 0
    3cc2:	b3 01       	movw	r22, r6
    3cc4:	0e 94 9a 1e 	call	0x3d34	; 0x3d34 <fputc>
    3cc8:	9a 94       	dec	r9
    3cca:	d9 14       	cp	r13, r9
    3ccc:	c0 f3       	brcs	.-16     	; 0x3cbe <vfprintf+0x370>
    3cce:	da 94       	dec	r13
    3cd0:	f1 01       	movw	r30, r2
    3cd2:	ed 0d       	add	r30, r13
    3cd4:	f1 1d       	adc	r31, r1
    3cd6:	80 81       	ld	r24, Z
    3cd8:	90 e0       	ldi	r25, 0x00	; 0
    3cda:	b3 01       	movw	r22, r6
    3cdc:	0e 94 9a 1e 	call	0x3d34	; 0x3d34 <fputc>
    3ce0:	dd 20       	and	r13, r13
    3ce2:	a9 f7       	brne	.-22     	; 0x3cce <vfprintf+0x380>
    3ce4:	06 c0       	rjmp	.+12     	; 0x3cf2 <vfprintf+0x3a4>
    3ce6:	80 e2       	ldi	r24, 0x20	; 32
    3ce8:	90 e0       	ldi	r25, 0x00	; 0
    3cea:	b3 01       	movw	r22, r6
    3cec:	0e 94 9a 1e 	call	0x3d34	; 0x3d34 <fputc>
    3cf0:	ea 94       	dec	r14
    3cf2:	ee 20       	and	r14, r14
    3cf4:	c1 f7       	brne	.-16     	; 0x3ce6 <vfprintf+0x398>
    3cf6:	43 ce       	rjmp	.-890    	; 0x397e <vfprintf+0x30>
    3cf8:	f3 01       	movw	r30, r6
    3cfa:	66 81       	ldd	r22, Z+6	; 0x06
    3cfc:	77 81       	ldd	r23, Z+7	; 0x07
    3cfe:	cb 01       	movw	r24, r22
    3d00:	2b 96       	adiw	r28, 0x0b	; 11
    3d02:	e2 e1       	ldi	r30, 0x12	; 18
    3d04:	0c 94 40 1f 	jmp	0x3e80	; 0x3e80 <__epilogue_restores__>

00003d08 <strnlen_P>:
    3d08:	fc 01       	movw	r30, r24
    3d0a:	05 90       	lpm	r0, Z+
    3d0c:	61 50       	subi	r22, 0x01	; 1
    3d0e:	70 40       	sbci	r23, 0x00	; 0
    3d10:	01 10       	cpse	r0, r1
    3d12:	d8 f7       	brcc	.-10     	; 0x3d0a <strnlen_P+0x2>
    3d14:	80 95       	com	r24
    3d16:	90 95       	com	r25
    3d18:	8e 0f       	add	r24, r30
    3d1a:	9f 1f       	adc	r25, r31
    3d1c:	08 95       	ret

00003d1e <strnlen>:
    3d1e:	fc 01       	movw	r30, r24
    3d20:	61 50       	subi	r22, 0x01	; 1
    3d22:	70 40       	sbci	r23, 0x00	; 0
    3d24:	01 90       	ld	r0, Z+
    3d26:	01 10       	cpse	r0, r1
    3d28:	d8 f7       	brcc	.-10     	; 0x3d20 <strnlen+0x2>
    3d2a:	80 95       	com	r24
    3d2c:	90 95       	com	r25
    3d2e:	8e 0f       	add	r24, r30
    3d30:	9f 1f       	adc	r25, r31
    3d32:	08 95       	ret

00003d34 <fputc>:
    3d34:	0f 93       	push	r16
    3d36:	1f 93       	push	r17
    3d38:	cf 93       	push	r28
    3d3a:	df 93       	push	r29
    3d3c:	8c 01       	movw	r16, r24
    3d3e:	eb 01       	movw	r28, r22
    3d40:	8b 81       	ldd	r24, Y+3	; 0x03
    3d42:	81 ff       	sbrs	r24, 1
    3d44:	1b c0       	rjmp	.+54     	; 0x3d7c <fputc+0x48>
    3d46:	82 ff       	sbrs	r24, 2
    3d48:	0d c0       	rjmp	.+26     	; 0x3d64 <fputc+0x30>
    3d4a:	2e 81       	ldd	r18, Y+6	; 0x06
    3d4c:	3f 81       	ldd	r19, Y+7	; 0x07
    3d4e:	8c 81       	ldd	r24, Y+4	; 0x04
    3d50:	9d 81       	ldd	r25, Y+5	; 0x05
    3d52:	28 17       	cp	r18, r24
    3d54:	39 07       	cpc	r19, r25
    3d56:	64 f4       	brge	.+24     	; 0x3d70 <fputc+0x3c>
    3d58:	e8 81       	ld	r30, Y
    3d5a:	f9 81       	ldd	r31, Y+1	; 0x01
    3d5c:	01 93       	st	Z+, r16
    3d5e:	f9 83       	std	Y+1, r31	; 0x01
    3d60:	e8 83       	st	Y, r30
    3d62:	06 c0       	rjmp	.+12     	; 0x3d70 <fputc+0x3c>
    3d64:	e8 85       	ldd	r30, Y+8	; 0x08
    3d66:	f9 85       	ldd	r31, Y+9	; 0x09
    3d68:	80 2f       	mov	r24, r16
    3d6a:	09 95       	icall
    3d6c:	89 2b       	or	r24, r25
    3d6e:	31 f4       	brne	.+12     	; 0x3d7c <fputc+0x48>
    3d70:	8e 81       	ldd	r24, Y+6	; 0x06
    3d72:	9f 81       	ldd	r25, Y+7	; 0x07
    3d74:	01 96       	adiw	r24, 0x01	; 1
    3d76:	9f 83       	std	Y+7, r25	; 0x07
    3d78:	8e 83       	std	Y+6, r24	; 0x06
    3d7a:	02 c0       	rjmp	.+4      	; 0x3d80 <fputc+0x4c>
    3d7c:	0f ef       	ldi	r16, 0xFF	; 255
    3d7e:	1f ef       	ldi	r17, 0xFF	; 255
    3d80:	c8 01       	movw	r24, r16
    3d82:	df 91       	pop	r29
    3d84:	cf 91       	pop	r28
    3d86:	1f 91       	pop	r17
    3d88:	0f 91       	pop	r16
    3d8a:	08 95       	ret

00003d8c <__ultoa_invert>:
    3d8c:	fa 01       	movw	r30, r20
    3d8e:	aa 27       	eor	r26, r26
    3d90:	28 30       	cpi	r18, 0x08	; 8
    3d92:	51 f1       	breq	.+84     	; 0x3de8 <__ultoa_invert+0x5c>
    3d94:	20 31       	cpi	r18, 0x10	; 16
    3d96:	81 f1       	breq	.+96     	; 0x3df8 <__ultoa_invert+0x6c>
    3d98:	e8 94       	clt
    3d9a:	6f 93       	push	r22
    3d9c:	6e 7f       	andi	r22, 0xFE	; 254
    3d9e:	6e 5f       	subi	r22, 0xFE	; 254
    3da0:	7f 4f       	sbci	r23, 0xFF	; 255
    3da2:	8f 4f       	sbci	r24, 0xFF	; 255
    3da4:	9f 4f       	sbci	r25, 0xFF	; 255
    3da6:	af 4f       	sbci	r26, 0xFF	; 255
    3da8:	b1 e0       	ldi	r27, 0x01	; 1
    3daa:	3e d0       	rcall	.+124    	; 0x3e28 <__ultoa_invert+0x9c>
    3dac:	b4 e0       	ldi	r27, 0x04	; 4
    3dae:	3c d0       	rcall	.+120    	; 0x3e28 <__ultoa_invert+0x9c>
    3db0:	67 0f       	add	r22, r23
    3db2:	78 1f       	adc	r23, r24
    3db4:	89 1f       	adc	r24, r25
    3db6:	9a 1f       	adc	r25, r26
    3db8:	a1 1d       	adc	r26, r1
    3dba:	68 0f       	add	r22, r24
    3dbc:	79 1f       	adc	r23, r25
    3dbe:	8a 1f       	adc	r24, r26
    3dc0:	91 1d       	adc	r25, r1
    3dc2:	a1 1d       	adc	r26, r1
    3dc4:	6a 0f       	add	r22, r26
    3dc6:	71 1d       	adc	r23, r1
    3dc8:	81 1d       	adc	r24, r1
    3dca:	91 1d       	adc	r25, r1
    3dcc:	a1 1d       	adc	r26, r1
    3dce:	20 d0       	rcall	.+64     	; 0x3e10 <__ultoa_invert+0x84>
    3dd0:	09 f4       	brne	.+2      	; 0x3dd4 <__ultoa_invert+0x48>
    3dd2:	68 94       	set
    3dd4:	3f 91       	pop	r19
    3dd6:	2a e0       	ldi	r18, 0x0A	; 10
    3dd8:	26 9f       	mul	r18, r22
    3dda:	11 24       	eor	r1, r1
    3ddc:	30 19       	sub	r19, r0
    3dde:	30 5d       	subi	r19, 0xD0	; 208
    3de0:	31 93       	st	Z+, r19
    3de2:	de f6       	brtc	.-74     	; 0x3d9a <__ultoa_invert+0xe>
    3de4:	cf 01       	movw	r24, r30
    3de6:	08 95       	ret
    3de8:	46 2f       	mov	r20, r22
    3dea:	47 70       	andi	r20, 0x07	; 7
    3dec:	40 5d       	subi	r20, 0xD0	; 208
    3dee:	41 93       	st	Z+, r20
    3df0:	b3 e0       	ldi	r27, 0x03	; 3
    3df2:	0f d0       	rcall	.+30     	; 0x3e12 <__ultoa_invert+0x86>
    3df4:	c9 f7       	brne	.-14     	; 0x3de8 <__ultoa_invert+0x5c>
    3df6:	f6 cf       	rjmp	.-20     	; 0x3de4 <__ultoa_invert+0x58>
    3df8:	46 2f       	mov	r20, r22
    3dfa:	4f 70       	andi	r20, 0x0F	; 15
    3dfc:	40 5d       	subi	r20, 0xD0	; 208
    3dfe:	4a 33       	cpi	r20, 0x3A	; 58
    3e00:	18 f0       	brcs	.+6      	; 0x3e08 <__ultoa_invert+0x7c>
    3e02:	49 5d       	subi	r20, 0xD9	; 217
    3e04:	31 fd       	sbrc	r19, 1
    3e06:	40 52       	subi	r20, 0x20	; 32
    3e08:	41 93       	st	Z+, r20
    3e0a:	02 d0       	rcall	.+4      	; 0x3e10 <__ultoa_invert+0x84>
    3e0c:	a9 f7       	brne	.-22     	; 0x3df8 <__ultoa_invert+0x6c>
    3e0e:	ea cf       	rjmp	.-44     	; 0x3de4 <__ultoa_invert+0x58>
    3e10:	b4 e0       	ldi	r27, 0x04	; 4
    3e12:	a6 95       	lsr	r26
    3e14:	97 95       	ror	r25
    3e16:	87 95       	ror	r24
    3e18:	77 95       	ror	r23
    3e1a:	67 95       	ror	r22
    3e1c:	ba 95       	dec	r27
    3e1e:	c9 f7       	brne	.-14     	; 0x3e12 <__ultoa_invert+0x86>
    3e20:	00 97       	sbiw	r24, 0x00	; 0
    3e22:	61 05       	cpc	r22, r1
    3e24:	71 05       	cpc	r23, r1
    3e26:	08 95       	ret
    3e28:	9b 01       	movw	r18, r22
    3e2a:	ac 01       	movw	r20, r24
    3e2c:	0a 2e       	mov	r0, r26
    3e2e:	06 94       	lsr	r0
    3e30:	57 95       	ror	r21
    3e32:	47 95       	ror	r20
    3e34:	37 95       	ror	r19
    3e36:	27 95       	ror	r18
    3e38:	ba 95       	dec	r27
    3e3a:	c9 f7       	brne	.-14     	; 0x3e2e <__ultoa_invert+0xa2>
    3e3c:	62 0f       	add	r22, r18
    3e3e:	73 1f       	adc	r23, r19
    3e40:	84 1f       	adc	r24, r20
    3e42:	95 1f       	adc	r25, r21
    3e44:	a0 1d       	adc	r26, r0
    3e46:	08 95       	ret

00003e48 <__prologue_saves__>:
    3e48:	2f 92       	push	r2
    3e4a:	3f 92       	push	r3
    3e4c:	4f 92       	push	r4
    3e4e:	5f 92       	push	r5
    3e50:	6f 92       	push	r6
    3e52:	7f 92       	push	r7
    3e54:	8f 92       	push	r8
    3e56:	9f 92       	push	r9
    3e58:	af 92       	push	r10
    3e5a:	bf 92       	push	r11
    3e5c:	cf 92       	push	r12
    3e5e:	df 92       	push	r13
    3e60:	ef 92       	push	r14
    3e62:	ff 92       	push	r15
    3e64:	0f 93       	push	r16
    3e66:	1f 93       	push	r17
    3e68:	cf 93       	push	r28
    3e6a:	df 93       	push	r29
    3e6c:	cd b7       	in	r28, 0x3d	; 61
    3e6e:	de b7       	in	r29, 0x3e	; 62
    3e70:	ca 1b       	sub	r28, r26
    3e72:	db 0b       	sbc	r29, r27
    3e74:	0f b6       	in	r0, 0x3f	; 63
    3e76:	f8 94       	cli
    3e78:	de bf       	out	0x3e, r29	; 62
    3e7a:	0f be       	out	0x3f, r0	; 63
    3e7c:	cd bf       	out	0x3d, r28	; 61
    3e7e:	09 94       	ijmp

00003e80 <__epilogue_restores__>:
    3e80:	2a 88       	ldd	r2, Y+18	; 0x12
    3e82:	39 88       	ldd	r3, Y+17	; 0x11
    3e84:	48 88       	ldd	r4, Y+16	; 0x10
    3e86:	5f 84       	ldd	r5, Y+15	; 0x0f
    3e88:	6e 84       	ldd	r6, Y+14	; 0x0e
    3e8a:	7d 84       	ldd	r7, Y+13	; 0x0d
    3e8c:	8c 84       	ldd	r8, Y+12	; 0x0c
    3e8e:	9b 84       	ldd	r9, Y+11	; 0x0b
    3e90:	aa 84       	ldd	r10, Y+10	; 0x0a
    3e92:	b9 84       	ldd	r11, Y+9	; 0x09
    3e94:	c8 84       	ldd	r12, Y+8	; 0x08
    3e96:	df 80       	ldd	r13, Y+7	; 0x07
    3e98:	ee 80       	ldd	r14, Y+6	; 0x06
    3e9a:	fd 80       	ldd	r15, Y+5	; 0x05
    3e9c:	0c 81       	ldd	r16, Y+4	; 0x04
    3e9e:	1b 81       	ldd	r17, Y+3	; 0x03
    3ea0:	aa 81       	ldd	r26, Y+2	; 0x02
    3ea2:	b9 81       	ldd	r27, Y+1	; 0x01
    3ea4:	ce 0f       	add	r28, r30
    3ea6:	d1 1d       	adc	r29, r1
    3ea8:	0f b6       	in	r0, 0x3f	; 63
    3eaa:	f8 94       	cli
    3eac:	de bf       	out	0x3e, r29	; 62
    3eae:	0f be       	out	0x3f, r0	; 63
    3eb0:	cd bf       	out	0x3d, r28	; 61
    3eb2:	ed 01       	movw	r28, r26
    3eb4:	08 95       	ret

00003eb6 <_exit>:
    3eb6:	f8 94       	cli

00003eb8 <__stop_program>:
    3eb8:	ff cf       	rjmp	.-2      	; 0x3eb8 <__stop_program>
